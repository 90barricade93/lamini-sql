{"question": "How many heads of the departments are older than 56 ?", "query": "SELECT count(*) FROM head WHERE age  >  56"}
{"question": "List the name, born state and age of the heads of departments ordered by age.", "query": "SELECT name ,  born_state ,  age FROM head ORDER BY age"}
{"question": "List the creation year, name and budget of each department.", "query": "SELECT creation ,  name ,  budget_in_billions FROM department"}
{"question": "What are the maximum and minimum budget of the departments?", "query": "SELECT max(budget_in_billions) ,  min(budget_in_billions) FROM department"}
{"question": "What is the average number of employees of the departments whose rank is between 10 and 15?", "query": "SELECT avg(num_employees) FROM department WHERE ranking BETWEEN 10 AND 15"}
{"question": "What are the names of the heads who are born outside the California state?", "query": "SELECT name FROM head WHERE born_state != 'California'"}
{"question": "What are the distinct creation years of the departments managed by a secretary born in state 'Alabama'?", "query": "SELECT DISTINCT T1.creation FROM department AS T1 JOIN management AS T2 ON T1.department_id  =  T2.department_id JOIN head AS T3 ON T2.head_id  =  T3.head_id WHERE T3.born_state  =  'Alabama'"}
{"question": "What are the names of the states where at least 3 heads were born?", "query": "SELECT born_state FROM head GROUP BY born_state HAVING count(*)  >=  3"}
{"question": "In which year were most departments established?", "query": "SELECT creation FROM department GROUP BY creation ORDER BY count(*) DESC LIMIT 1"}
{"question": "Show the name and number of employees for the departments managed by heads whose temporary acting value is 'Yes'?", "query": "SELECT T1.name ,  T1.num_employees FROM department AS T1 JOIN management AS T2 ON T1.department_id  =  T2.department_id WHERE T2.temporary_acting  =  'Yes'"}
{"question": "How many acting statuses are there?", "query": "SELECT count(DISTINCT temporary_acting) FROM management"}
{"question": "How many departments are led by heads who are not mentioned?", "query": "SELECT count(*) FROM department WHERE department_id NOT IN (SELECT department_id FROM management);"}
{"question": "What are the distinct ages of the heads who are acting?", "query": "SELECT DISTINCT T1.age FROM management AS T2 JOIN head AS T1 ON T1.head_id  =  T2.head_id WHERE T2.temporary_acting  =  'Yes'"}
{"question": "List the states where both the secretary of 'Treasury' department and the secretary of 'Homeland Security' were born.", "query": "SELECT T3.born_state FROM department AS T1 JOIN management AS T2 ON T1.department_id  =  T2.department_id JOIN head AS T3 ON T2.head_id  =  T3.head_id WHERE T1.name  =  'Treasury' INTERSECT SELECT T3.born_state FROM department AS T1 JOIN management AS T2 ON T1.department_id  =  T2.department_id JOIN head AS T3 ON T2.head_id  =  T3.head_id WHERE T1.name  =  'Homeland Security'"}
{"question": "Which department has more than 1 head at a time? List the id, name and the number of heads.", "query": "SELECT T1.department_id ,  T1.name ,  count(*) FROM management AS T2 JOIN department AS T1 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id HAVING count(*)  >  1"}
{"question": "Which head's name has the substring 'Ha'? List the id and name.", "query": "SELECT head_id ,  name FROM head WHERE name LIKE '%Ha%'"}
{"question": "How many farms are there?", "query": "SELECT count(*) FROM farm"}
{"question": "Count the number of farms.", "query": "SELECT count(*) FROM farm"}
{"question": "List the total number of horses on farms in ascending order.", "query": "SELECT Total_Horses FROM farm ORDER BY Total_Horses ASC"}
{"question": "What is the total horses record for each farm, sorted ascending?", "query": "SELECT Total_Horses FROM farm ORDER BY Total_Horses ASC"}
{"question": "What are the hosts of competitions whose theme is not \"Aliens\"?", "query": "SELECT Hosts FROM farm_competition WHERE Theme !=  'Aliens'"}
{"question": "Return the hosts of competitions for which the theme is not Aliens?", "query": "SELECT Hosts FROM farm_competition WHERE Theme !=  'Aliens'"}
{"question": "What are the themes of farm competitions sorted by year in ascending order?", "query": "SELECT Theme FROM farm_competition ORDER BY YEAR ASC"}
{"question": "Return the themes of farm competitions, sorted by year ascending.", "query": "SELECT Theme FROM farm_competition ORDER BY YEAR ASC"}
{"question": "What is the average number of working horses of farms with more than 5000 total number of horses?", "query": "SELECT avg(Working_Horses) FROM farm WHERE Total_Horses  >  5000"}
{"question": "Give the average number of working horses on farms with more than 5000 total horses.", "query": "SELECT avg(Working_Horses) FROM farm WHERE Total_Horses  >  5000"}
{"question": "What are the maximum and minimum number of cows across all farms.", "query": "SELECT max(Cows) ,  min(Cows) FROM farm"}
{"question": "Return the maximum and minimum number of cows across all farms.", "query": "SELECT max(Cows) ,  min(Cows) FROM farm"}
{"question": "How many different statuses do cities have?", "query": "SELECT count(DISTINCT Status) FROM city"}
{"question": "Count the number of different statuses.", "query": "SELECT count(DISTINCT Status) FROM city"}
{"question": "List official names of cities in descending order of population.", "query": "SELECT Official_Name FROM city ORDER BY Population DESC"}
{"question": "What are the official names of cities, ordered descending by population?", "query": "SELECT Official_Name FROM city ORDER BY Population DESC"}
{"question": "List the official name and status of the city with the largest population.", "query": "SELECT Official_Name ,  Status FROM city ORDER BY Population DESC LIMIT 1"}
{"question": "What is the official name and status of the city with the most residents?", "query": "SELECT Official_Name ,  Status FROM city ORDER BY Population DESC LIMIT 1"}
{"question": "Show the years and the official names of the host cities of competitions.", "query": "SELECT T2.Year ,  T1.Official_Name FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID  =  T2.Host_city_ID"}
{"question": "Give the years and official names of the cities of each competition.", "query": "SELECT T2.Year ,  T1.Official_Name FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID  =  T2.Host_city_ID"}
{"question": "Show the official names of the cities that have hosted more than one competition.", "query": "SELECT T1.Official_Name FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID  =  T2.Host_city_ID GROUP BY T2.Host_city_ID HAVING COUNT(*)  >  1"}
{"question": "What are the official names of cities that have hosted more than one competition?", "query": "SELECT T1.Official_Name FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID  =  T2.Host_city_ID GROUP BY T2.Host_city_ID HAVING COUNT(*)  >  1"}
{"question": "Show the status of the city that has hosted the greatest number of competitions.", "query": "SELECT T1.Status FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID  =  T2.Host_city_ID GROUP BY T2.Host_city_ID ORDER BY COUNT(*) DESC LIMIT 1"}
{"question": "What is the status of the city that has hosted the most competitions?", "query": "SELECT T1.Status FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID  =  T2.Host_city_ID GROUP BY T2.Host_city_ID ORDER BY COUNT(*) DESC LIMIT 1"}
{"question": "Please show the themes of competitions with host cities having populations larger than 1000.", "query": "SELECT T2.Theme FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID  =  T2.Host_city_ID WHERE T1.Population  >  1000"}
{"question": "What are the themes of competitions that have corresponding host cities with more than 1000 residents?", "query": "SELECT T2.Theme FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID  =  T2.Host_city_ID WHERE T1.Population  >  1000"}
{"question": "Please show the different statuses of cities and the average population of cities with each status.", "query": "SELECT Status ,  avg(Population) FROM city GROUP BY Status"}
{"question": "What are the statuses and average populations of each city?", "query": "SELECT Status ,  avg(Population) FROM city GROUP BY Status"}
{"question": "Please show the different statuses, ordered by the number of cities that have each.", "query": "SELECT Status FROM city GROUP BY Status ORDER BY COUNT(*) ASC"}
{"question": "Return the different statuses of cities, ascending by frequency.", "query": "SELECT Status FROM city GROUP BY Status ORDER BY COUNT(*) ASC"}
{"question": "List the most common type of Status across cities.", "query": "SELECT Status FROM city GROUP BY Status ORDER BY COUNT(*) DESC LIMIT 1"}
{"question": "What is the most common status across all cities?", "query": "SELECT Status FROM city GROUP BY Status ORDER BY COUNT(*) DESC LIMIT 1"}
{"question": "List the official names of cities that have not held any competition.", "query": "SELECT Official_Name FROM city WHERE City_ID NOT IN (SELECT Host_city_ID FROM farm_competition)"}
{"question": "What are the official names of cities that have not hosted a farm competition?", "query": "SELECT Official_Name FROM city WHERE City_ID NOT IN (SELECT Host_city_ID FROM farm_competition)"}
{"question": "Show the status shared by cities with population bigger than 1500 and smaller than 500.", "query": "SELECT Status FROM city WHERE Population  >  1500 INTERSECT SELECT Status FROM city WHERE Population  <  500"}
{"question": "Which statuses correspond to both cities that have a population over 1500 and cities that have a population lower than 500?", "query": "SELECT Status FROM city WHERE Population  >  1500 INTERSECT SELECT Status FROM city WHERE Population  <  500"}
{"question": "Find the official names of cities with population bigger than 1500 or smaller than 500.", "query": "SELECT Official_Name FROM city WHERE Population  >  1500 OR Population  <  500"}
{"question": "What are the official names of cities that have population over 1500 or less than 500?", "query": "SELECT Official_Name FROM city WHERE Population  >  1500 OR Population  <  500"}
{"question": "Show the census ranking of cities whose status are not \"Village\".", "query": "SELECT Census_Ranking FROM city WHERE Status !=  \"Village\""}
{"question": "What are the census rankings of cities that do not have the status \"Village\"?", "query": "SELECT Census_Ranking FROM city WHERE Status !=  \"Village\""}
{"question": "which course has most number of registered students?", "query": "SELECT T1.course_name FROM courses AS T1 JOIN student_course_registrations AS T2 ON T1.course_id = T2.course_Id GROUP BY T1.course_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "What is the name of the course with the most registered students?", "query": "SELECT T1.course_name FROM courses AS T1 JOIN student_course_registrations AS T2 ON T1.course_id = T2.course_Id GROUP BY T1.course_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "what is id of students who registered some courses but the least number of courses in these students?", "query": "SELECT student_id FROM student_course_registrations GROUP BY student_id ORDER BY count(*) LIMIT 1"}
{"question": "What are the ids of the students who registered for some courses but had the least number of courses for all students?", "query": "SELECT student_id FROM student_course_registrations GROUP BY student_id ORDER BY count(*) LIMIT 1"}
{"question": "what are the first name and last name of all candidates?", "query": "SELECT T2.first_name ,  T2.last_name FROM candidates AS T1 JOIN people AS T2 ON T1.candidate_id = T2.person_id"}
{"question": "What are the first and last names of all the candidates?", "query": "SELECT T2.first_name ,  T2.last_name FROM candidates AS T1 JOIN people AS T2 ON T1.candidate_id = T2.person_id"}
{"question": "List the id of students who never attends courses?", "query": "SELECT student_id FROM students WHERE student_id NOT IN (SELECT student_id FROM student_course_attendance)"}
{"question": "What are the  ids of every student who has never attended a course?", "query": "SELECT student_id FROM students WHERE student_id NOT IN (SELECT student_id FROM student_course_attendance)"}
{"question": "List the id of students who attended some courses?", "query": "SELECT student_id FROM student_course_attendance"}
{"question": "What are the ids of all students who have attended at least one course?", "query": "SELECT student_id FROM student_course_attendance"}
{"question": "What are the ids of all students for courses and what are the names of those courses?", "query": "SELECT T1.student_id ,  T2.course_name FROM student_course_registrations AS T1 JOIN courses AS T2 ON T1.course_id = T2.course_id"}
{"question": "What is detail of the student who most recently registered course?", "query": "SELECT T2.student_details FROM student_course_registrations AS T1 JOIN students AS T2 ON T1.student_id = T2.student_id ORDER BY T1.registration_date DESC LIMIT 1"}
{"question": "What details do we have on the students who registered for courses most recently?", "query": "SELECT T2.student_details FROM student_course_registrations AS T1 JOIN students AS T2 ON T1.student_id = T2.student_id ORDER BY T1.registration_date DESC LIMIT 1"}
{"question": "How many students attend course English?", "query": "SELECT count(*) FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = \"English\""}
{"question": "How many students are attending English courses?", "query": "SELECT count(*) FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = \"English\""}
{"question": "How many courses do the student whose id is 171 attend?", "query": "SELECT count(*) FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T2.student_id = 171"}
{"question": "How many courses does the student with id 171 actually attend?", "query": "SELECT count(*) FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T2.student_id = 171"}
{"question": "Find id of the candidate whose email is stanley.monahan@example.org?", "query": "SELECT T2.candidate_id FROM people AS T1 JOIN candidates AS T2 ON T1.person_id = T2.candidate_id WHERE T1.email_address = \"stanley.monahan@example.org\""}
{"question": "What is the id of the candidate whose email is stanley.monahan@example.org?", "query": "SELECT T2.candidate_id FROM people AS T1 JOIN candidates AS T2 ON T1.person_id = T2.candidate_id WHERE T1.email_address = \"stanley.monahan@example.org\""}
{"question": "Find id of the candidate who most recently accessed the course?", "query": "SELECT candidate_id FROM candidate_assessments ORDER BY assessment_date DESC LIMIT 1"}
{"question": "What is the id of the candidate who most recently accessed the course?", "query": "SELECT candidate_id FROM candidate_assessments ORDER BY assessment_date DESC LIMIT 1"}
{"question": "What is detail of the student who registered the most number of courses?", "query": "SELECT T1.student_details FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "What are the details of the student who registered for the most number of courses?", "query": "SELECT T1.student_details FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "List the id of students who registered some courses and the number of their registered courses?", "query": "SELECT T1.student_id ,  count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id"}
{"question": "For every student who is registered for some course, how many courses are they registered for?", "query": "SELECT T1.student_id ,  count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id"}
{"question": "How many registed students do each course have? List course name and the number of their registered students?", "query": "SELECT T3.course_name ,  count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id JOIN courses AS T3 ON T2.course_id = T3.course_id GROUP BY T2.course_id"}
{"question": "For each course id, how many students are registered and what are the course names?", "query": "SELECT T3.course_name ,  count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id JOIN courses AS T3 ON T2.course_id = T3.course_id GROUP BY T2.course_id"}
{"question": "Find id of candidates whose assessment code is \"Pass\"?", "query": "SELECT candidate_id FROM candidate_assessments WHERE asessment_outcome_code = \"Pass\""}
{"question": "What are the ids of the candidates that have an outcome code of Pass?", "query": "SELECT candidate_id FROM candidate_assessments WHERE asessment_outcome_code = \"Pass\""}
{"question": "Find the cell mobile number of the candidates whose assessment code is \"Fail\"?", "query": "SELECT T3.cell_mobile_number FROM candidates AS T1 JOIN candidate_assessments AS T2 ON T1.candidate_id = T2.candidate_id JOIN people AS T3 ON T1.candidate_id = T3.person_id WHERE T2.asessment_outcome_code = \"Fail\""}
{"question": "What are the cell phone numbers of the candidates that received an assessment code of \"Fail\"?", "query": "SELECT T3.cell_mobile_number FROM candidates AS T1 JOIN candidate_assessments AS T2 ON T1.candidate_id = T2.candidate_id JOIN people AS T3 ON T1.candidate_id = T3.person_id WHERE T2.asessment_outcome_code = \"Fail\""}
{"question": "What are the id of students who registered course 301?", "query": "SELECT student_id FROM student_course_attendance WHERE course_id  =  301"}
{"question": "What are the ids of the students who registered for course 301?", "query": "SELECT student_id FROM student_course_attendance WHERE course_id  =  301"}
{"question": "What is the id of the student who most recently registered course 301?", "query": "SELECT student_id FROM student_course_attendance WHERE course_id = 301 ORDER BY date_of_attendance DESC LIMIT 1"}
{"question": "What are the ids of the students who registered for course 301 most recently?", "query": "SELECT student_id FROM student_course_attendance WHERE course_id = 301 ORDER BY date_of_attendance DESC LIMIT 1"}
{"question": "Find distinct cities of addresses of people?", "query": "SELECT DISTINCT T1.city FROM addresses AS T1 JOIN people_addresses AS T2 ON T1.address_id = T2.address_id"}
{"question": "What are the different cities where people live?", "query": "SELECT DISTINCT T1.city FROM addresses AS T1 JOIN people_addresses AS T2 ON T1.address_id = T2.address_id"}
{"question": "Find distinct cities of address of students?", "query": "SELECT DISTINCT T1.city FROM addresses AS T1 JOIN people_addresses AS T2 ON T1.address_id = T2.address_id JOIN students AS T3 ON T2.person_id = T3.student_id"}
{"question": "What are the different cities where students live?", "query": "SELECT DISTINCT T1.city FROM addresses AS T1 JOIN people_addresses AS T2 ON T1.address_id = T2.address_id JOIN students AS T3 ON T2.person_id = T3.student_id"}
{"question": "List the names of courses in alphabetical order?", "query": "SELECT course_name FROM courses ORDER BY course_name"}
{"question": "What are the names of the courses in alphabetical order?", "query": "SELECT course_name FROM courses ORDER BY course_name"}
{"question": "List the first names of people in alphabetical order?", "query": "SELECT first_name FROM people ORDER BY first_name"}
{"question": "What are the first names of the people in alphabetical order?", "query": "SELECT first_name FROM people ORDER BY first_name"}
{"question": "What are the id of students who registered courses or attended courses?", "query": "SELECT student_id FROM student_course_registrations UNION SELECT student_id FROM student_course_attendance"}
{"question": "What are the ids of the students who either registered or attended a course?", "query": "SELECT student_id FROM student_course_registrations UNION SELECT student_id FROM student_course_attendance"}
{"question": "Find the id of courses which are registered or attended by student whose id is 121?", "query": "SELECT course_id FROM student_course_registrations WHERE student_id = 121 UNION SELECT course_id FROM student_course_attendance WHERE student_id = 121"}
{"question": "What are the ids of the courses that are registered or attended by the student whose id is 121?", "query": "SELECT course_id FROM student_course_registrations WHERE student_id = 121 UNION SELECT course_id FROM student_course_attendance WHERE student_id = 121"}
{"question": "What are all info of students who registered courses but not attended courses?", "query": "SELECT * FROM student_course_registrations WHERE student_id NOT IN (SELECT student_id FROM student_course_attendance)"}
{"question": "What are all details of the students who registered but did not attend any course?", "query": "SELECT * FROM student_course_registrations WHERE student_id NOT IN (SELECT student_id FROM student_course_attendance)"}
{"question": "List the id of students who registered course statistics in the order of registration date.", "query": "SELECT T2.student_id FROM courses AS T1 JOIN student_course_registrations AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = \"statistics\" ORDER BY T2.registration_date"}
{"question": "What are the ids of the students who registered course statistics by order of registration date?", "query": "SELECT T2.student_id FROM courses AS T1 JOIN student_course_registrations AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = \"statistics\" ORDER BY T2.registration_date"}
{"question": "List the id of students who attended  statistics courses in the order of attendance date.", "query": "SELECT T2.student_id FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = \"statistics\" ORDER BY T2.date_of_attendance"}
{"question": "What are the ids of the students who attended courses in the statistics department in order of attendance date.", "query": "SELECT T2.student_id FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = \"statistics\" ORDER BY T2.date_of_attendance"}
{"question": "Give me the dates when the max temperature was higher than 85.", "query": "SELECT date FROM weather WHERE max_temperature_f  >  85"}
{"question": "What are the dates with a maximum temperature higher than 85?", "query": "SELECT date FROM weather WHERE max_temperature_f  >  85"}
{"question": "What are the names of stations that have latitude lower than 37.5?", "query": "SELECT name FROM station WHERE lat  <  37.5"}
{"question": "What are the names of all stations with a latitude smaller than 37.5?", "query": "SELECT name FROM station WHERE lat  <  37.5"}
{"question": "For each city, return the highest latitude among its stations.", "query": "SELECT city ,  max(lat) FROM station GROUP BY city"}
{"question": "For each city, what is the highest latitude for its stations?", "query": "SELECT city ,  max(lat) FROM station GROUP BY city"}
{"question": "Give me the start station and end station for the trips with the three oldest id.", "query": "SELECT start_station_name ,  end_station_name FROM trip ORDER BY id LIMIT 3"}
{"question": "What is the station station and end station for the trips with the three smallest ids?", "query": "SELECT start_station_name ,  end_station_name FROM trip ORDER BY id LIMIT 3"}
{"question": "What is the average latitude and longitude of stations located in San Jose city?", "query": "SELECT avg(lat) ,  avg(long) FROM station WHERE city  =  \"San Jose\""}
{"question": "What is the average latitude and longitude in San Jose?", "query": "SELECT avg(lat) ,  avg(long) FROM station WHERE city  =  \"San Jose\""}
{"question": "What is the id of the trip that has the shortest duration?", "query": "SELECT id FROM trip ORDER BY duration LIMIT 1"}
{"question": "What is the id of the shortest trip?", "query": "SELECT id FROM trip ORDER BY duration LIMIT 1"}
{"question": "What is the total and maximum duration of trips with bike id 636?", "query": "SELECT sum(duration) ,  max(duration) FROM trip WHERE bike_id  =  636"}
{"question": "What is the total and maximum duration for all trips with the bike id 636?", "query": "SELECT sum(duration) ,  max(duration) FROM trip WHERE bike_id  =  636"}
{"question": "For each zip code, return the average mean temperature of August there.", "query": "SELECT zip_code  ,  avg(mean_temperature_f) FROM weather WHERE date LIKE \"8/%\" GROUP BY zip_code"}
{"question": "For each zip code, what is the average mean temperature for all dates that start with '8'?", "query": "SELECT zip_code  ,  avg(mean_temperature_f) FROM weather WHERE date LIKE \"8/%\" GROUP BY zip_code"}
{"question": "From the trip record, find the number of unique bikes.", "query": "SELECT count(DISTINCT bike_id) FROM trip"}
{"question": "How many different bike ids are there?", "query": "SELECT count(DISTINCT bike_id) FROM trip"}
{"question": "What is the number of distinct cities the stations are located at?", "query": "SELECT count(DISTINCT city) FROM station"}
{"question": "How many different cities have these stations?", "query": "SELECT count(DISTINCT city) FROM station"}
{"question": "How many stations does Mountain View city has?", "query": "SELECT COUNT(*) FROM station WHERE city  =  \"Mountain View\""}
{"question": "How many stations are in Mountain View?", "query": "SELECT COUNT(*) FROM station WHERE city  =  \"Mountain View\""}
{"question": "Return the unique name for stations that have ever had 7 bikes available.", "query": "SELECT DISTINCT T1.name FROM station AS T1 JOIN status AS T2 ON T1.id  =  T2.station_id WHERE T2.bikes_available  =  7"}
{"question": "What are the different names for each station that has ever had 7 bikes available?", "query": "SELECT DISTINCT T1.name FROM station AS T1 JOIN status AS T2 ON T1.id  =  T2.station_id WHERE T2.bikes_available  =  7"}
{"question": "Which start station had the most trips starting from August? Give me the name and id of the station.", "query": "SELECT start_station_name ,  start_station_id FROM trip WHERE start_date LIKE \"8/%\" GROUP BY start_station_name ORDER BY COUNT(*) DESC LIMIT 1"}
{"question": "What are the start station's name and id for the one that had the most start trips in August?", "query": "SELECT start_station_name ,  start_station_id FROM trip WHERE start_date LIKE \"8/%\" GROUP BY start_station_name ORDER BY COUNT(*) DESC LIMIT 1"}
{"question": "Which bike traveled the most often in zip code 94002?", "query": "SELECT bike_id FROM trip WHERE zip_code  =  94002 GROUP BY bike_id ORDER BY COUNT(*) DESC LIMIT 1"}
{"question": "What is the id of the bike that traveled the most in 94002?", "query": "SELECT bike_id FROM trip WHERE zip_code  =  94002 GROUP BY bike_id ORDER BY COUNT(*) DESC LIMIT 1"}
{"question": "How many days had both mean humidity above 50 and mean visibility above 8?", "query": "SELECT COUNT(*) FROM weather WHERE mean_humidity  >  50 AND mean_visibility_miles  >  8"}
{"question": "What is the number of days that had an average humity above 50 and an average visibility above 8?", "query": "SELECT COUNT(*) FROM weather WHERE mean_humidity  >  50 AND mean_visibility_miles  >  8"}
{"question": "What is the latitude, longitude, city of the station from which the shortest trip started?", "query": "SELECT T1.lat ,  T1.long ,  T1.city FROM station AS T1 JOIN trip AS T2 ON T1.id  =  T2.start_station_id ORDER BY T2.duration LIMIT 1"}
{"question": "What is the latitude, longitude, and city of the station from which the trip with smallest duration started?", "query": "SELECT T1.lat ,  T1.long ,  T1.city FROM station AS T1 JOIN trip AS T2 ON T1.id  =  T2.start_station_id ORDER BY T2.duration LIMIT 1"}
{"question": "What are the ids of stations that are located in San Francisco and have average bike availability above 10.", "query": "SELECT id FROM station WHERE city  =  \"San Francisco\" INTERSECT SELECT station_id FROM status GROUP BY station_id HAVING avg(bikes_available)  >  10"}
{"question": "What are the ids of the stations in San Francisco that normally have more than 10 bikes available?", "query": "SELECT id FROM station WHERE city  =  \"San Francisco\" INTERSECT SELECT station_id FROM status GROUP BY station_id HAVING avg(bikes_available)  >  10"}
{"question": "What are the names and ids of stations that had more than 14 bikes available on average or were installed in December?", "query": "SELECT T1.name ,  T1.id FROM station AS T1 JOIN status AS T2 ON T1.id  =  T2.station_id GROUP BY T2.station_id HAVING avg(T2.bikes_available)  >  14 UNION SELECT name ,  id FROM station WHERE installation_date LIKE \"12/%\""}
{"question": "What are the names and ids of all stations that have more than 14 bikes available on average or had bikes installed in December?", "query": "SELECT T1.name ,  T1.id FROM station AS T1 JOIN status AS T2 ON T1.id  =  T2.station_id GROUP BY T2.station_id HAVING avg(T2.bikes_available)  >  14 UNION SELECT name ,  id FROM station WHERE installation_date LIKE \"12/%\""}
{"question": "What is the 3 most common cloud cover rates in the region of zip code 94107?", "query": "SELECT cloud_cover FROM weather WHERE zip_code  =  94107 GROUP BY cloud_cover ORDER BY COUNT (*) DESC LIMIT 3"}
{"question": "What are the 3 most common cloud covers in the zip code of 94107?", "query": "SELECT cloud_cover FROM weather WHERE zip_code  =  94107 GROUP BY cloud_cover ORDER BY COUNT (*) DESC LIMIT 3"}
{"question": "What is the zip code in which the average mean sea level pressure is the lowest?", "query": "SELECT zip_code FROM weather GROUP BY zip_code ORDER BY avg(mean_sea_level_pressure_inches) LIMIT 1"}
{"question": "What is the zip code that has the lowest average mean sea level pressure?", "query": "SELECT zip_code FROM weather GROUP BY zip_code ORDER BY avg(mean_sea_level_pressure_inches) LIMIT 1"}
{"question": "What is the average bike availability in stations that are not located in Palo Alto?", "query": "SELECT avg(bikes_available) FROM status WHERE station_id NOT IN (SELECT id FROM station WHERE city  =  \"Palo Alto\")"}
{"question": "What is the average bike availablility for stations not in Palo Alto?", "query": "SELECT avg(bikes_available) FROM status WHERE station_id NOT IN (SELECT id FROM station WHERE city  =  \"Palo Alto\")"}
{"question": "What is the average longitude of stations that never had bike availability more than 10?", "query": "SELECT avg(long) FROM station WHERE id NOT IN (SELECT station_id FROM status GROUP BY station_id HAVING max(bikes_available)  >  10)"}
{"question": "What is the mean longitude for all stations that have never had more than 10 bikes available?", "query": "SELECT avg(long) FROM station WHERE id NOT IN (SELECT station_id FROM status GROUP BY station_id HAVING max(bikes_available)  >  10)"}
{"question": "When and in what zip code did max temperature reach 80?", "query": "SELECT date ,  zip_code FROM weather WHERE max_temperature_f  >=  80"}
{"question": "What zip codes have a station with a max temperature greater than or equal to 80 and when did it reach that temperature?", "query": "SELECT date ,  zip_code FROM weather WHERE max_temperature_f  >=  80"}
{"question": "Give me ids for all the trip that took place in a zip code area with average mean temperature above 60.", "query": "SELECT T1.id FROM trip AS T1 JOIN weather AS T2 ON T1.zip_code  =  T2.zip_code GROUP BY T2.zip_code HAVING avg(T2.mean_temperature_f)  >  60"}
{"question": "For each zip code, find the ids of all trips that have a higher average mean temperature above 60?", "query": "SELECT T1.id FROM trip AS T1 JOIN weather AS T2 ON T1.zip_code  =  T2.zip_code GROUP BY T2.zip_code HAVING avg(T2.mean_temperature_f)  >  60"}
{"question": "For each zip code, return how many times max wind speed reached 25?", "query": "SELECT zip_code , count(*) FROM weather WHERE max_wind_Speed_mph  >=  25 GROUP BY zip_code"}
{"question": "For each zip code, how many times has the maximum wind speed reached 25 mph?", "query": "SELECT zip_code , count(*) FROM weather WHERE max_wind_Speed_mph  >=  25 GROUP BY zip_code"}
{"question": "On which day and in which zip code was the min dew point lower than any day in zip code 94107?", "query": "SELECT date ,  zip_code FROM weather WHERE min_dew_point_f  <  (SELECT min(min_dew_point_f) FROM weather WHERE zip_code  =  94107)"}
{"question": "Which days had a minimum dew point smaller than any day in zip code 94107, and in which zip codes were those measurements taken?", "query": "SELECT date ,  zip_code FROM weather WHERE min_dew_point_f  <  (SELECT min(min_dew_point_f) FROM weather WHERE zip_code  =  94107)"}
{"question": "For each trip, return its ending station's installation date.", "query": "SELECT T1.id ,  T2.installation_date FROM trip AS T1 JOIN station AS T2 ON T1.end_station_id  =  T2.id"}
{"question": "What is the installation date for each ending station on all the trips?", "query": "SELECT T1.id ,  T2.installation_date FROM trip AS T1 JOIN station AS T2 ON T1.end_station_id  =  T2.id"}
{"question": "Which trip started from the station with the largest dock count? Give me the trip id.", "query": "SELECT T1.id FROM trip AS T1 JOIN station AS T2 ON T1.start_station_id  =  T2.id ORDER BY T2.dock_count DESC LIMIT 1"}
{"question": "What is the id of the trip that started from the station with the highest dock count?", "query": "SELECT T1.id FROM trip AS T1 JOIN station AS T2 ON T1.start_station_id  =  T2.id ORDER BY T2.dock_count DESC LIMIT 1"}
{"question": "Count the number of trips that did not end in San Francisco city.", "query": "SELECT count(*) FROM trip AS T1 JOIN station AS T2 ON T1.end_station_id  =  T2.id WHERE T2.city !=  \"San Francisco\""}
{"question": "How many trips did not end in San Francisco?", "query": "SELECT count(*) FROM trip AS T1 JOIN station AS T2 ON T1.end_station_id  =  T2.id WHERE T2.city != \"San Francisco\""}
{"question": "In zip code 94107, on which day neither Fog nor Rain was not observed?", "query": "SELECT date FROM weather WHERE zip_code  =  94107 AND EVENTS != \"Fog\" AND EVENTS != \"Rain\""}
{"question": "On which day has it neither been foggy nor rained in the zip code of 94107?", "query": "SELECT date FROM weather WHERE zip_code  =  94107 AND EVENTS != \"Fog\" AND EVENTS != \"Rain\""}
{"question": "What are the ids of stations that have latitude above 37.4 and never had bike availability below 7?", "query": "SELECT id FROM station WHERE lat  >  37.4 EXCEPT SELECT station_id FROM status GROUP BY station_id HAVING min(bikes_available)  <  7"}
{"question": "What are the ids of all stations that have a latitude above 37.4 and have never had less than 7 bikes available?", "query": "SELECT id FROM station WHERE lat  >  37.4 EXCEPT SELECT station_id FROM status GROUP BY station_id HAVING min(bikes_available)  <  7"}
{"question": "What are names of stations that have average bike availability above 10 and are not located in San Jose city?", "query": "SELECT T1.name FROM station AS T1 JOIN status AS T2 ON T1.id  =  T2.station_id GROUP BY T2.station_id HAVING avg(bikes_available)  >  10 EXCEPT SELECT name FROM station WHERE city  =  \"San Jose\""}
{"question": "What are the names of all stations that have more than 10 bikes available and are not located in San Jose?", "query": "SELECT T1.name FROM station AS T1 JOIN status AS T2 ON T1.id  =  T2.station_id GROUP BY T2.station_id HAVING avg(bikes_available)  >  10 EXCEPT SELECT name FROM station WHERE city  =  \"San Jose\""}
{"question": "What are the name, latitude, and city of the station with the lowest latitude?", "query": "SELECT name ,  lat ,  city FROM station ORDER BY lat LIMIT 1"}
{"question": "What is the name, latitude, and city of the station that is located the furthest South?", "query": "SELECT name ,  lat ,  city FROM station ORDER BY lat LIMIT 1"}
{"question": "What are the date, mean temperature and mean humidity for the top 3 days with the largest max gust speeds?", "query": "SELECT date ,  mean_temperature_f ,  mean_humidity FROM weather ORDER BY max_gust_speed_mph DESC LIMIT 3"}
{"question": "What is the date, average temperature and mean humidity for the days with the 3 largest maximum gust speeds?", "query": "SELECT date ,  mean_temperature_f ,  mean_humidity FROM weather ORDER BY max_gust_speed_mph DESC LIMIT 3"}
{"question": "List the name and the number of stations for all the cities that have at least 15 stations.", "query": "SELECT city ,  COUNT(*) FROM station GROUP BY city HAVING COUNT(*)  >=  15"}
{"question": "What is the name of every city that has at least 15 stations and how many stations does it have?", "query": "SELECT city ,  COUNT(*) FROM station GROUP BY city HAVING COUNT(*)  >=  15"}
{"question": "Find the ids and names of stations from which at least 200 trips started.", "query": "SELECT start_station_id ,  start_station_name FROM trip GROUP BY start_station_name HAVING COUNT(*)  >=  200"}
{"question": "What are the ids and names of all start stations that were the beginning of at least 200 trips?", "query": "SELECT start_station_id ,  start_station_name FROM trip GROUP BY start_station_name HAVING COUNT(*)  >=  200"}
{"question": "Find the zip code in which the average mean visibility is lower than 10.", "query": "SELECT zip_code FROM weather GROUP BY zip_code HAVING avg(mean_visibility_miles)  <  10"}
{"question": "For each zip code, select all those that have an average mean visiblity below 10.", "query": "SELECT zip_code FROM weather GROUP BY zip_code HAVING avg(mean_visibility_miles)  <  10"}
{"question": "List all the cities in a decreasing order of each city's stations' highest latitude.", "query": "SELECT city FROM station GROUP BY city ORDER BY max(lat) DESC"}
{"question": "For each city, list their names in decreasing order by their highest station latitude.", "query": "SELECT city FROM station GROUP BY city ORDER BY max(lat) DESC"}
{"question": "What are the dates that had the top 5 cloud cover rates? Also tell me the cloud cover rate.", "query": "SELECT date ,  cloud_cover FROM weather ORDER BY cloud_cover DESC LIMIT 5"}
{"question": "What are the dates that have the 5 highest cloud cover rates and what are the rates?", "query": "SELECT date ,  cloud_cover FROM weather ORDER BY cloud_cover DESC LIMIT 5"}
{"question": "What are the ids and durations of the trips with the top 3 durations?", "query": "SELECT id ,  duration FROM trip ORDER BY duration DESC LIMIT 3"}
{"question": "What are the ids of the trips that lasted the longest and how long did they last?", "query": "SELECT id ,  duration FROM trip ORDER BY duration DESC LIMIT 3"}
{"question": "For each station, return its longitude and the average duration of trips that started from the station.", "query": "SELECT T1.name ,  T1.long ,  avg(T2.duration) FROM station AS T1 JOIN trip AS T2 ON T1.id  =  T2.start_station_id GROUP BY T2.start_station_id"}
{"question": "For each start station id, what is its name, longitude and average duration of trips started there?", "query": "SELECT T1.name ,  T1.long ,  avg(T2.duration) FROM station AS T1 JOIN trip AS T2 ON T1.id  =  T2.start_station_id GROUP BY T2.start_station_id"}
{"question": "For each station, find its latitude and the minimum duration of trips that ended at the station.", "query": "SELECT T1.name ,  T1.lat ,  min(T2.duration) FROM station AS T1 JOIN trip AS T2 ON T1.id  =  T2.end_station_id GROUP BY T2.end_station_id"}
{"question": "For each end station id, what is its name, latitude, and minimum duration for trips ended there?", "query": "SELECT T1.name ,  T1.lat ,  min(T2.duration) FROM station AS T1 JOIN trip AS T2 ON T1.id  =  T2.end_station_id GROUP BY T2.end_station_id"}
{"question": "List all the distinct stations from which a trip of duration below 100 started.", "query": "SELECT DISTINCT start_station_name FROM trip WHERE duration  <  100"}
{"question": "What are all the different start station names for a trip that lasted less than 100?", "query": "SELECT DISTINCT start_station_name FROM trip WHERE duration  <  100"}
{"question": "Find all the zip codes in which the max dew point have never reached 70.", "query": "SELECT DISTINCT zip_code FROM weather EXCEPT SELECT DISTINCT zip_code FROM weather WHERE max_dew_point_f  >=  70"}
{"question": "What are all the different zip codes that have a maximum dew point that was always below 70?", "query": "SELECT DISTINCT zip_code FROM weather EXCEPT SELECT DISTINCT zip_code FROM weather WHERE max_dew_point_f  >=  70"}
{"question": "Find the id for the trips that lasted at least as long as the average duration of trips in zip code 94103.", "query": "SELECT id FROM trip WHERE duration  >=  (SELECT avg(duration) FROM trip WHERE zip_code  =  94103)"}
{"question": "What are the ids of all trips that had a duration as long as the average trip duration in the zip code 94103?", "query": "SELECT id FROM trip WHERE duration  >=  (SELECT avg(duration) FROM trip WHERE zip_code  =  94103)"}
{"question": "What are the dates in which the mean sea level pressure was between 30.3 and 31?", "query": "SELECT date FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31"}
{"question": "What are the dates that have an average sea level pressure between 30.3 and 31?", "query": "SELECT date FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31"}
{"question": "Find the day in which the difference between the max temperature and min temperature was the smallest. Also report the difference.", "query": "SELECT date ,  max_temperature_f - min_temperature_f FROM weather ORDER BY max_temperature_f - min_temperature_f LIMIT 1"}
{"question": "What are the days that had the smallest temperature range, and what was that range?", "query": "SELECT date ,  max_temperature_f - min_temperature_f FROM weather ORDER BY max_temperature_f - min_temperature_f LIMIT 1"}
{"question": "What are the id and name of the stations that have ever had more than 12 bikes available?", "query": "SELECT DISTINCT T1.id ,  T1.name FROM station AS T1 JOIN status AS T2 ON T1.id  =  T2.station_id WHERE T2.bikes_available  >  12"}
{"question": "What are the different ids and names of the stations that have had more than 12 bikes available?", "query": "SELECT DISTINCT T1.id ,  T1.name FROM station AS T1 JOIN status AS T2 ON T1.id  =  T2.station_id WHERE T2.bikes_available  >  12"}
{"question": "Give me the zip code where the average mean humidity is below 70 and at least 100 trips took place.", "query": "SELECT zip_code FROM weather GROUP BY zip_code HAVING avg(mean_humidity)  <  70 INTERSECT SELECT zip_code FROM trip GROUP BY zip_code HAVING count(*)  >=  100"}
{"question": "What are the zip codes that have an average mean humidity below 70 and had at least 100 trips come through there?", "query": "SELECT zip_code FROM weather GROUP BY zip_code HAVING avg(mean_humidity)  <  70 INTERSECT SELECT zip_code FROM trip GROUP BY zip_code HAVING count(*)  >=  100"}
{"question": "What are the names of stations that are located in Palo Alto city but have never been the ending point of trips more than 100 times?", "query": "SELECT name FROM station WHERE city  =  \"Palo Alto\" EXCEPT SELECT end_station_name FROM trip GROUP BY end_station_name HAVING count(*)  >  100"}
{"question": "What are the names of the stations that are located in Palo Alto but have never been the ending point of the trips", "query": "SELECT name FROM station WHERE city  =  \"Palo Alto\" EXCEPT SELECT end_station_name FROM trip GROUP BY end_station_name HAVING count(*)  >  100"}
{"question": "How many trips started from Mountain View city and ended at Palo Alto city?", "query": "SELECT count(*) FROM station AS T1 JOIN trip AS T2 JOIN station AS T3 JOIN trip AS T4 ON T1.id  =  T2.start_station_id AND T2.id  =  T4.id AND T3.id  =  T4.end_station_id WHERE T1.city  =  \"Mountain View\" AND T3.city  =  \"Palo Alto\""}
{"question": "How many trips stated from  a station in Mountain View and ended at one in Palo Alto?", "query": "SELECT count(*) FROM station AS T1 JOIN trip AS T2 JOIN station AS T3 JOIN trip AS T4 ON T1.id  =  T2.start_station_id AND T2.id  =  T4.id AND T3.id  =  T4.end_station_id WHERE T1.city  =  \"Mountain View\" AND T3.city  =  \"Palo Alto\""}
{"question": "What is the average latitude and longitude of the starting points of all trips?", "query": "SELECT avg(T1.lat) ,  avg(T1.long) FROM station AS T1 JOIN trip AS T2 ON T1.id  =  T2.start_station_id"}
{"question": "What is the average latitude and longitude of all starting stations for the trips?", "query": "SELECT avg(T1.lat) ,  avg(T1.long) FROM station AS T1 JOIN trip AS T2 ON T1.id  =  T2.start_station_id"}
{"question": "How many books are there?", "query": "SELECT count(*) FROM book"}
{"question": "List the writers of the books in ascending alphabetical order.", "query": "SELECT Writer FROM book ORDER BY Writer ASC"}
{"question": "List the titles of the books in ascending order of issues.", "query": "SELECT Title FROM book ORDER BY Issues ASC"}
{"question": "What are the titles of the books whose writer is not \"Elaine Lee\"?", "query": "SELECT Title FROM book WHERE Writer != \"Elaine Lee\""}
{"question": "What are the title and issues of the books?", "query": "SELECT Title ,  Issues FROM book"}
{"question": "What are the dates of publications in descending order of price?", "query": "SELECT Publication_Date FROM publication ORDER BY Price DESC"}
{"question": "What are the distinct publishers of publications with price higher than 5000000?", "query": "SELECT DISTINCT Publisher FROM publication WHERE Price  >  5000000"}
{"question": "List the publisher of the publication with the highest price.", "query": "SELECT Publisher FROM publication ORDER BY Price DESC LIMIT 1"}
{"question": "List the publication dates of publications with 3 lowest prices.", "query": "SELECT Publication_Date FROM publication ORDER BY Price ASC LIMIT 3"}
{"question": "Show the title and publication dates of books.", "query": "SELECT T1.Title ,  T2.Publication_Date FROM book AS T1 JOIN publication AS T2 ON T1.Book_ID  =  T2.Book_ID"}
{"question": "Show writers who have published a book with price more than 4000000.", "query": "SELECT T1.Writer FROM book AS T1 JOIN publication AS T2 ON T1.Book_ID  =  T2.Book_ID WHERE T2.Price  >  4000000"}
{"question": "Show the titles of books in descending order of publication price.", "query": "SELECT T1.Title FROM book AS T1 JOIN publication AS T2 ON T1.Book_ID  =  T2.Book_ID ORDER BY T2.Price DESC"}
{"question": "Show publishers that have more than one publication.", "query": "SELECT Publisher FROM publication GROUP BY Publisher HAVING COUNT(*)  >  1"}
{"question": "Show different publishers together with the number of publications they have.", "query": "SELECT Publisher ,  COUNT(*) FROM publication GROUP BY Publisher"}
{"question": "Please show the most common publication date.", "query": "SELECT Publication_Date FROM publication GROUP BY Publication_Date ORDER BY COUNT(*) DESC LIMIT 1"}
{"question": "List the writers who have written more than one book.", "query": "SELECT Writer FROM book GROUP BY Writer HAVING COUNT(*)  >  1"}
{"question": "List the titles of books that are not published.", "query": "SELECT Title FROM book WHERE Book_ID NOT IN (SELECT Book_ID FROM publication)"}
{"question": "Show the publishers that have publications with price higher than 10000000 and publications with price lower than 5000000.", "query": "SELECT Publisher FROM publication WHERE Price  >  10000000 INTERSECT SELECT Publisher FROM publication WHERE Price  <  5000000"}
{"question": "What is the number of distinct publication dates?", "query": "SELECT COUNT (DISTINCT Publication_Date) FROM publication"}
{"question": "How many distinct publication dates are there in our record?", "query": "SELECT COUNT (DISTINCT Publication_Date) FROM publication"}
{"question": "Show the prices of publications whose publisher is either \"Person\" or \"Wiley\"", "query": "SELECT Price FROM publication WHERE Publisher  =  \"Person\" OR Publisher  =  \"Wiley\""}
{"question": "How many actors are there?", "query": "SELECT count(*) FROM actor"}
{"question": "Count the number of actors.", "query": "SELECT count(*) FROM actor"}
{"question": "List the name of actors in ascending alphabetical order.", "query": "SELECT Name FROM actor ORDER BY Name ASC"}
{"question": "What are the names of actors, ordered alphabetically?", "query": "SELECT Name FROM actor ORDER BY Name ASC"}
{"question": "What are the characters and duration of actors?", "query": "SELECT Character ,  Duration FROM actor"}
{"question": "Return the characters and durations for each actor.", "query": "SELECT Character ,  Duration FROM actor"}
{"question": "List the name of actors whose age is not 20.", "query": "SELECT Name FROM actor WHERE Age != 20"}
{"question": "What are the names of actors who are not 20 years old?", "query": "SELECT Name FROM actor WHERE Age != 20"}
{"question": "What are the characters of actors in descending order of age?", "query": "SELECT Character FROM actor ORDER BY age DESC"}
{"question": "Return the characters for actors, ordered by age descending.", "query": "SELECT Character FROM actor ORDER BY age DESC"}
{"question": "What is the duration of the oldest actor?", "query": "SELECT Duration FROM actor ORDER BY Age DESC LIMIT 1"}
{"question": "Return the duration of the actor with the greatest age.", "query": "SELECT Duration FROM actor ORDER BY Age DESC LIMIT 1"}
{"question": "What are the names of musicals with nominee \"Bob Fosse\"?", "query": "SELECT Name FROM musical WHERE Nominee  =  \"Bob Fosse\""}
{"question": "Return the names of musicals who have the nominee Bob Fosse.", "query": "SELECT Name FROM musical WHERE Nominee  =  \"Bob Fosse\""}
{"question": "What are the distinct nominees of the musicals with the award that is not \"Tony Award\"?", "query": "SELECT DISTINCT Nominee FROM musical WHERE Award != \"Tony Award\""}
{"question": "Return the different nominees of musicals that have an award that is not the Tony Award.", "query": "SELECT DISTINCT Nominee FROM musical WHERE Award != \"Tony Award\""}
{"question": "Show names of actors and names of musicals they are in.", "query": "SELECT T1.Name ,  T2.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID"}
{"question": "What are the names of actors and the musicals that they are in?", "query": "SELECT T1.Name ,  T2.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID"}
{"question": "Show names of actors that have appeared in musical with name \"The Phantom of the Opera\".", "query": "SELECT T1.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID WHERE T2.Name  =  \"The Phantom of the Opera\""}
{"question": "What are the names of actors who have been in the musical titled The Phantom of the Opera?", "query": "SELECT T1.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID WHERE T2.Name  =  \"The Phantom of the Opera\""}
{"question": "Show names of actors in descending order of the year their musical is awarded.", "query": "SELECT T1.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID ORDER BY T2.Year DESC"}
{"question": "What are the names of actors ordered descending by the year in which their musical was awarded?", "query": "SELECT T1.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID ORDER BY T2.Year DESC"}
{"question": "Show names of musicals and the number of actors who have appeared in the musicals.", "query": "SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID"}
{"question": "How many actors have appeared in each musical?", "query": "SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID"}
{"question": "Show names of musicals which have at least three actors.", "query": "SELECT T2.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID HAVING COUNT(*)  >=  3"}
{"question": "What are the names of musicals who have at 3 or more actors?", "query": "SELECT T2.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID HAVING COUNT(*)  >=  3"}
{"question": "Show different nominees and the number of musicals they have been nominated.", "query": "SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee"}
{"question": "How many musicals has each nominee been nominated for?", "query": "SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee"}
{"question": "Please show the nominee who has been nominated the greatest number of times.", "query": "SELECT Nominee FROM musical GROUP BY Nominee ORDER BY COUNT(*) DESC LIMIT 1"}
{"question": "Who is the nominee who has been nominated for the most musicals?", "query": "SELECT Nominee FROM musical GROUP BY Nominee ORDER BY COUNT(*) DESC LIMIT 1"}
{"question": "List the most common result of the musicals.", "query": "SELECT RESULT FROM musical GROUP BY RESULT ORDER BY COUNT(*) DESC LIMIT 1"}
{"question": "Return the most frequent result across all musicals.", "query": "SELECT RESULT FROM musical GROUP BY RESULT ORDER BY COUNT(*) DESC LIMIT 1"}
{"question": "List the nominees that have been nominated more than two musicals.", "query": "SELECT Nominee FROM musical GROUP BY Nominee HAVING COUNT(*)  >  2"}
{"question": "Who are the nominees who have been nominated more than two times?", "query": "SELECT Nominee FROM musical GROUP BY Nominee HAVING COUNT(*)  >  2"}
{"question": "List the name of musicals that do not have actors.", "query": "SELECT Name FROM musical WHERE Musical_ID NOT IN (SELECT Musical_ID FROM actor)"}
{"question": "What are the names of musicals who have no actors?", "query": "SELECT Name FROM musical WHERE Musical_ID NOT IN (SELECT Musical_ID FROM actor)"}
{"question": "Show the nominees that have nominated musicals for both \"Tony Award\" and \"Drama Desk Award\".", "query": "SELECT Nominee FROM musical WHERE Award  =  \"Tony Award\" INTERSECT SELECT Nominee FROM musical WHERE Award  =  \"Drama Desk Award\""}
{"question": "Who are the nominees who have been nominated for both a Tony Award and a Drama Desk Award?", "query": "SELECT Nominee FROM musical WHERE Award  =  \"Tony Award\" INTERSECT SELECT Nominee FROM musical WHERE Award  =  \"Drama Desk Award\""}
{"question": "Show the musical nominee with award \"Bob Fosse\" or \"Cleavant Derricks\".", "query": "SELECT Nominee FROM musical WHERE Award  =  \"Tony Award\" OR Award  =  \"Cleavant Derricks\""}
{"question": "Who are the nominees who were nominated for either of the Bob Fosse or Cleavant Derricks awards?", "query": "SELECT Nominee FROM musical WHERE Award  =  \"Tony Award\" OR Award  =  \"Cleavant Derricks\""}
{"question": "Find the emails of the user named \"Mary\".", "query": "SELECT email FROM user_profiles WHERE name  =  'Mary'"}
{"question": "What is the partition id of the user named \"Iron Man\".", "query": "SELECT partitionid FROM user_profiles WHERE name  =  'Iron Man'"}
{"question": "How many users are there?", "query": "SELECT count(*) FROM user_profiles"}
{"question": "How many followers does each user have?", "query": "SELECT count(*) FROM follows"}
{"question": "Find the number of followers for each user.", "query": "SELECT count(*) FROM follows GROUP BY f1"}
{"question": "Find the number of tweets in record.", "query": "SELECT count(*) FROM tweets"}
{"question": "Find the number of users who posted some tweets.", "query": "SELECT count(DISTINCT UID) FROM tweets"}
{"question": "Find the name and email of the user whose name contains the word ‘Swift’.", "query": "SELECT name ,  email FROM user_profiles WHERE name LIKE '%Swift%'"}
{"question": "Find the names of users whose emails contain ‘superstar’ or ‘edu’.", "query": "SELECT name FROM user_profiles WHERE email LIKE '%superstar%' OR email LIKE '%edu%'"}
{"question": "Return the text of tweets about the topic 'intern'.", "query": "SELECT text FROM tweets WHERE text LIKE '%intern%'"}
{"question": "Find the name and email of the users who have more than 1000 followers.", "query": "SELECT name ,  email FROM user_profiles WHERE followers  >  1000"}
{"question": "Find the names of the users whose number of followers is greater than that of the user named \"Tyler Swift\".", "query": "SELECT T1.name FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid  =  T2.f1 GROUP BY T2.f1 HAVING count(*)  >  (SELECT count(*) FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid  =  T2.f1 WHERE T1.name  =  'Tyler Swift')"}
{"question": "Find the name and email for the users who have more than one follower.", "query": "SELECT T1.name ,  T1.email FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid  =  T2.f1 GROUP BY T2.f1 HAVING count(*)  >  1"}
{"question": "Find the names of users who have more than one tweet.", "query": "SELECT T1.name FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid  =  T2.uid GROUP BY T2.uid HAVING count(*)  >  1"}
{"question": "Find the id of users who are followed by Mary and Susan.", "query": "SELECT T2.f1 FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid  =  T2.f2 WHERE T1.name  =  \"Mary\" INTERSECT SELECT T2.f1 FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid  =  T2.f2 WHERE T1.name  =  \"Susan\""}
{"question": "Find the id of users who are followed by Mary or Susan.", "query": "SELECT T2.f1 FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid  =  T2.f2 WHERE T1.name  =  \"Mary\" OR T1.name  =  \"Susan\""}
{"question": "Find the name of the user who has the largest number of followers.", "query": "SELECT name FROM user_profiles ORDER BY followers DESC LIMIT 1"}
{"question": "Find the name and email of the user followed by the least number of people.", "query": "SELECT name ,  email FROM user_profiles ORDER BY followers LIMIT 1"}
{"question": "List the name and number of followers for each user, and sort the results by the number of followers in descending order.", "query": "SELECT name ,  followers FROM user_profiles ORDER BY followers DESC"}
{"question": "List the names of 5 users followed by the largest number of other users.", "query": "SELECT name FROM user_profiles ORDER BY followers DESC LIMIT 5"}
{"question": "List the text of all tweets in the order of date.", "query": "SELECT text FROM tweets ORDER BY createdate"}
{"question": "Find the name of each user and number of tweets tweeted by each of them.", "query": "SELECT T1.name ,  count(*) FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid  =  T2.uid GROUP BY T2.uid"}
{"question": "Find the name and partition id for users who tweeted less than twice.", "query": "SELECT T1.name ,  T1.partitionid FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid  =  T2.uid GROUP BY T2.uid HAVING count(*)  <  2"}
{"question": "Find the name of the user who tweeted more than once, and number of tweets tweeted by them.", "query": "SELECT T1.name ,  count(*) FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid  =  T2.uid GROUP BY T2.uid HAVING count(*)  >  1"}
{"question": "Find the average number of followers for the users who do not have any tweet.", "query": "SELECT avg(followers) FROM user_profiles WHERE UID NOT IN (SELECT UID FROM tweets)"}
{"question": "Find the average number of followers for the users who had some tweets.", "query": "SELECT avg(followers) FROM user_profiles WHERE UID IN (SELECT UID FROM tweets)"}
{"question": "Find the maximum and total number of followers of all users.", "query": "SELECT max(followers) ,  sum(followers) FROM user_profiles"}
{"question": "Find the names of all the catalog entries.", "query": "SELECT distinct(catalog_entry_name) FROM catalog_contents"}
{"question": "What are all the catalog entry names?", "query": "SELECT distinct(catalog_entry_name) FROM catalog_contents"}
{"question": "Find the list of attribute data types possessed by more than 3 attribute definitions.", "query": "SELECT attribute_data_type FROM Attribute_Definitions GROUP BY attribute_data_type HAVING count(*)  >  3"}
{"question": "What are the attribute data types with more than 3 attribute definitions?", "query": "SELECT attribute_data_type FROM Attribute_Definitions GROUP BY attribute_data_type HAVING count(*)  >  3"}
{"question": "What is the attribute data type of the attribute with name \"Green\"?", "query": "SELECT attribute_data_type FROM Attribute_Definitions WHERE attribute_name  =  \"Green\""}
{"question": "Find the attribute data type for the attribute named \"Green\".", "query": "SELECT attribute_data_type FROM Attribute_Definitions WHERE attribute_name  =  \"Green\""}
{"question": "Find the name and level of catalog structure with level between 5 and 10.", "query": "SELECT catalog_level_name ,  catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10"}
{"question": "What are the name and level of catalog structure with level number between 5 and 10", "query": "SELECT catalog_level_name ,  catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10"}
{"question": "Find all the catalog publishers whose name contains \"Murray\"", "query": "SELECT distinct(catalog_publisher) FROM catalogs WHERE catalog_publisher LIKE \"%Murray%\""}
{"question": "Which catalog publishers have substring \"Murray\" in their names?", "query": "SELECT distinct(catalog_publisher) FROM catalogs WHERE catalog_publisher LIKE \"%Murray%\""}
{"question": "Which catalog publisher has published the most catalogs?", "query": "SELECT catalog_publisher FROM catalogs GROUP BY catalog_publisher ORDER BY count(*) DESC LIMIT 1"}
{"question": "Find the catalog publisher that has the most catalogs.", "query": "SELECT catalog_publisher FROM catalogs GROUP BY catalog_publisher ORDER BY count(*) DESC LIMIT 1"}
{"question": "Find the names and publication dates of all catalogs that have catalog level number greater than 5.", "query": "SELECT t1.catalog_name ,  t1.date_of_publication FROM catalogs AS t1 JOIN catalog_structure AS t2 ON t1.catalog_id  =  t2.catalog_id WHERE catalog_level_number  >  5"}
{"question": "What are the name and publication date of the catalogs with catalog level number above 5?", "query": "SELECT t1.catalog_name ,  t1.date_of_publication FROM catalogs AS t1 JOIN catalog_structure AS t2 ON t1.catalog_id  =  t2.catalog_id WHERE catalog_level_number  >  5"}
{"question": "What are the entry names of catalog with the attribute possessed by most entries.", "query": "SELECT t1.catalog_entry_name FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id  =  t2.catalog_entry_id WHERE t2.attribute_value  =  (SELECT attribute_value FROM Catalog_Contents_Additional_Attributes GROUP BY attribute_value ORDER BY count(*) DESC LIMIT 1)"}
{"question": "Find the entry names of the catalog with the attribute that have the most entries.", "query": "SELECT t1.catalog_entry_name FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id  =  t2.catalog_entry_id WHERE t2.attribute_value  =  (SELECT attribute_value FROM Catalog_Contents_Additional_Attributes GROUP BY attribute_value ORDER BY count(*) DESC LIMIT 1)"}
{"question": "What is the entry name of the most expensive catalog (in USD)?", "query": "SELECT catalog_entry_name FROM catalog_contents ORDER BY price_in_dollars DESC LIMIT 1"}
{"question": "Find the entry name of the catalog with the highest price (in USD).", "query": "SELECT catalog_entry_name FROM catalog_contents ORDER BY price_in_dollars DESC LIMIT 1"}
{"question": "What is the level name of the cheapest catalog (in USD)?", "query": "SELECT t2.catalog_level_name FROM catalog_contents AS t1 JOIN catalog_structure AS t2 ON t1.catalog_level_number  =  t2.catalog_level_number ORDER BY t1.price_in_dollars LIMIT 1"}
{"question": "Find the level name of the catalog with the lowest price (in USD).", "query": "SELECT t2.catalog_level_name FROM catalog_contents AS t1 JOIN catalog_structure AS t2 ON t1.catalog_level_number  =  t2.catalog_level_number ORDER BY t1.price_in_dollars LIMIT 1"}
{"question": "What are the average and minimum price (in Euro) of all products?", "query": "SELECT avg(price_in_euros) ,  min(price_in_euros) FROM catalog_contents"}
{"question": "Give me the average and minimum price (in Euro) of the products.", "query": "SELECT avg(price_in_euros) ,  min(price_in_euros) FROM catalog_contents"}
{"question": "What is the product with the highest height? Give me the catalog entry name.", "query": "SELECT catalog_entry_name FROM catalog_contents ORDER BY height DESC LIMIT 1"}
{"question": "Which catalog content has the highest height? Give me the catalog entry name.", "query": "SELECT catalog_entry_name FROM catalog_contents ORDER BY height DESC LIMIT 1"}
{"question": "Find the name of the product that has the smallest capacity.", "query": "SELECT catalog_entry_name FROM catalog_contents ORDER BY capacity ASC LIMIT 1"}
{"question": "Which catalog content has the smallest capacity? Return the catalog entry name.", "query": "SELECT catalog_entry_name FROM catalog_contents ORDER BY capacity ASC LIMIT 1"}
{"question": "Find the names of all the products whose stock number starts with \"2\".", "query": "SELECT catalog_entry_name FROM catalog_contents WHERE product_stock_number LIKE \"2%\""}
{"question": "Which catalog contents have a product stock number that starts from \"2\"? Show the catalog entry names.", "query": "SELECT catalog_entry_name FROM catalog_contents WHERE product_stock_number LIKE \"2%\""}
{"question": "Find the names of catalog entries with level number 8.", "query": "SELECT t1.catalog_entry_name FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id  =  t2.catalog_entry_id WHERE t2.catalog_level_number  =  \"8\""}
{"question": "What are the names of catalog entries with level number 8?", "query": "SELECT t1.catalog_entry_name FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id  =  t2.catalog_entry_id WHERE t2.catalog_level_number  =  \"8\""}
{"question": "Find the names of the products with length smaller than 3 or height greater than 5.", "query": "SELECT catalog_entry_name FROM catalog_contents WHERE LENGTH  <  3 OR width  >  5"}
{"question": "Which catalog contents have length below 3 or above 5? Find the catalog entry names.", "query": "SELECT catalog_entry_name FROM catalog_contents WHERE LENGTH  <  3 OR width  >  5"}
{"question": "Find the name and attribute ID of the attribute definitions with attribute value 0.", "query": "SELECT t1.attribute_name ,  t1.attribute_id FROM Attribute_Definitions AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.attribute_id  =  t2.attribute_id WHERE t2.attribute_value  =  0"}
{"question": "Which attribute definitions have attribute value 0? Give me the attribute name and attribute ID.", "query": "SELECT t1.attribute_name ,  t1.attribute_id FROM Attribute_Definitions AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.attribute_id  =  t2.attribute_id WHERE t2.attribute_value  =  0"}
{"question": "Find the name and capacity of products with price greater than 700 (in USD).", "query": "SELECT catalog_entry_name ,  capacity FROM Catalog_Contents WHERE price_in_dollars  >  700"}
{"question": "Which catalog contents has price above 700 dollars? Show their catalog entry names and capacities.", "query": "SELECT catalog_entry_name ,  capacity FROM Catalog_Contents WHERE price_in_dollars  >  700"}
{"question": "Find the dates on which more than one revisions were made.", "query": "SELECT date_of_latest_revision FROM Catalogs GROUP BY date_of_latest_revision HAVING count(*)  >  1"}
{"question": "On which days more than one revisions were made on catalogs.", "query": "SELECT date_of_latest_revision FROM Catalogs GROUP BY date_of_latest_revision HAVING count(*)  >  1"}
{"question": "How many products are there in the records?", "query": "SELECT count(*) FROM catalog_contents"}
{"question": "Find the total number of catalog contents.", "query": "SELECT count(*) FROM catalog_contents"}
{"question": "Name all the products with next entry ID greater than 8.", "query": "SELECT catalog_entry_name FROM catalog_contents WHERE next_entry_id  >  8"}
{"question": "What are the catalog entry names of the products with next entry ID above 8?", "query": "SELECT catalog_entry_name FROM catalog_contents WHERE next_entry_id  >  8"}
{"question": "How many aircrafts do we have?", "query": "SELECT count(*) FROM Aircraft"}
{"question": "How many aircrafts exist in the database?", "query": "SELECT count(*) FROM Aircraft"}
{"question": "Show name and distance for all aircrafts.", "query": "SELECT name ,  distance FROM Aircraft"}
{"question": "What are the names and distances for all airplanes?", "query": "SELECT name ,  distance FROM Aircraft"}
{"question": "Show ids for all aircrafts with more than 1000 distance.", "query": "SELECT aid FROM Aircraft WHERE distance  >  1000"}
{"question": "What are the ids of all aircrafts that can cover a distance of more than 1000?", "query": "SELECT aid FROM Aircraft WHERE distance  >  1000"}
{"question": "How many aircrafts have distance between 1000 and 5000?", "query": "SELECT count(*) FROM Aircraft WHERE distance BETWEEN 1000 AND 5000"}
{"question": "What is the count of aircrafts that have a distance between 1000 and 5000?", "query": "SELECT count(*) FROM Aircraft WHERE distance BETWEEN 1000 AND 5000"}
{"question": "What is the name and distance for aircraft with id 12?", "query": "SELECT name ,  distance FROM Aircraft WHERE aid  =  12"}
{"question": "What is the name and distance for the aircraft that has an id of 12?", "query": "SELECT name ,  distance FROM Aircraft WHERE aid  =  12"}
{"question": "What is the minimum, average, and maximum distance of all aircrafts.", "query": "SELECT min(distance) ,  avg(distance) ,  max(distance) FROM Aircraft"}
{"question": "Return the minimum, average and maximum distances traveled across all aircrafts.", "query": "SELECT min(distance) ,  avg(distance) ,  max(distance) FROM Aircraft"}
{"question": "Show the id and name of the aircraft with the maximum distance.", "query": "SELECT aid ,  name FROM Aircraft ORDER BY distance DESC LIMIT 1"}
{"question": "What is the id and name of the aircraft that can cover the maximum distance?", "query": "SELECT aid ,  name FROM Aircraft ORDER BY distance DESC LIMIT 1"}
{"question": "Show the name of aircrafts with top three lowest distances.", "query": "SELECT name FROM Aircraft ORDER BY distance LIMIT 3"}
{"question": "What are the aircrafts with top 3 shortest lengthes? List their names.", "query": "SELECT name FROM Aircraft ORDER BY distance LIMIT 3"}
{"question": "Show names for all aircrafts with distances more than the average.", "query": "SELECT name FROM Aircraft WHERE distance  >  (SELECT avg(distance) FROM Aircraft)"}
{"question": "What are the names of all aircrafts that can cover more distances than average?", "query": "SELECT name FROM Aircraft WHERE distance  >  (SELECT avg(distance) FROM Aircraft)"}
{"question": "How many employees do we have?", "query": "SELECT count(*) FROM Employee"}
{"question": "What is the number of employees?", "query": "SELECT count(*) FROM Employee"}
{"question": "Show name and salary for all employees sorted by salary.", "query": "SELECT name ,  salary FROM Employee ORDER BY salary"}
{"question": "What is the name and salary of all employees in order of salary?", "query": "SELECT name ,  salary FROM Employee ORDER BY salary"}
{"question": "Show ids for all employees with at least 100000 salary.", "query": "SELECT eid FROM Employee WHERE salary  >  100000"}
{"question": "What is the id of every employee who has at least a salary of  100000?", "query": "SELECT eid FROM Employee WHERE salary  >  100000"}
{"question": "How many employees have salary between 100000 and 200000?", "query": "SELECT count(*) FROM Employee WHERE salary BETWEEN 100000 AND 200000"}
{"question": "What is the number of employees that have a salary between 100000 and 200000?", "query": "SELECT count(*) FROM Employee WHERE salary BETWEEN 100000 AND 200000"}
{"question": "What is the name and salary for employee with id 242518965?", "query": "SELECT name ,  salary FROM Employee WHERE eid  =  242518965"}
{"question": "What is the name and salary of the employee with the id 242518965?", "query": "SELECT name ,  salary FROM Employee WHERE eid  =  242518965"}
{"question": "What is average and maximum salary of all employees.", "query": "SELECT avg(salary) ,  max(salary) FROM Employee"}
{"question": "What is the average and largest salary of all employees?", "query": "SELECT avg(salary) ,  max(salary) FROM Employee"}
{"question": "Show the id and name of the employee with maximum salary.", "query": "SELECT eid ,  name FROM Employee ORDER BY salary DESC LIMIT 1"}
{"question": "What is the id and name of the employee with the highest salary?", "query": "SELECT eid ,  name FROM Employee ORDER BY salary DESC LIMIT 1"}
{"question": "Show the name of employees with three lowest salaries.", "query": "SELECT name FROM Employee ORDER BY salary ASC LIMIT 3"}
{"question": "What is the name of the 3 employees who get paid the least?", "query": "SELECT name FROM Employee ORDER BY salary ASC LIMIT 3"}
{"question": "Show names for all employees with salary more than the average.", "query": "SELECT name FROM Employee WHERE salary  >  (SELECT avg(salary) FROM Employee)"}
{"question": "What are the names of all employees who have a salary higher than average?", "query": "SELECT name FROM Employee WHERE salary  >  (SELECT avg(salary) FROM Employee)"}
{"question": "Show the id and salary of Mark Young.", "query": "SELECT eid ,  salary FROM Employee WHERE name  =  'Mark Young'"}
{"question": "What is the id and salary of the employee named Mark Young?", "query": "SELECT eid ,  salary FROM Employee WHERE name  =  'Mark Young'"}
{"question": "How many flights do we have?", "query": "SELECT count(*) FROM Flight"}
{"question": "What is the number of flights?", "query": "SELECT count(*) FROM Flight"}
{"question": "Show flight number, origin, destination of all flights in the alphabetical order of the departure cities.", "query": "SELECT flno ,  origin ,  destination FROM Flight ORDER BY origin"}
{"question": "What is the flight number, origin, and destination for all flights in alphabetical order by departure cities?", "query": "SELECT flno ,  origin ,  destination FROM Flight ORDER BY origin"}
{"question": "Show all flight number from Los Angeles.", "query": "SELECT flno FROM Flight WHERE origin  =  \"Los Angeles\""}
{"question": "What are the numbers of all flights coming from Los Angeles?", "query": "SELECT flno FROM Flight WHERE origin  =  \"Los Angeles\""}
{"question": "Show origins of all flights with destination Honolulu.", "query": "SELECT origin FROM Flight WHERE destination  =  \"Honolulu\""}
{"question": "What are the origins of all flights that are headed to Honolulu?", "query": "SELECT origin FROM Flight WHERE destination  =  \"Honolulu\""}
{"question": "Show me the departure date and arrival date for all flights from Los Angeles to Honolulu.", "query": "SELECT departure_date ,  arrival_date FROM Flight WHERE origin  =  \"Los Angeles\" AND destination  =  \"Honolulu\""}
{"question": "What are the departure and arrival dates of all flights from LA to Honolulu?", "query": "SELECT departure_date ,  arrival_date FROM Flight WHERE origin  =  \"Los Angeles\" AND destination  =  \"Honolulu\""}
{"question": "Show flight number for all flights with more than 2000 distance.", "query": "SELECT flno FROM Flight WHERE distance  >  2000"}
{"question": "What are the numbers of all flights that can cover a distance of more than 2000?", "query": "SELECT flno FROM Flight WHERE distance  >  2000"}
{"question": "What is the average price for flights from Los Angeles to Honolulu.", "query": "SELECT avg(price) FROM Flight WHERE origin  =  \"Los Angeles\" AND destination  =  \"Honolulu\""}
{"question": "What is the average price for flights from LA to Honolulu?", "query": "SELECT avg(price) FROM Flight WHERE origin  =  \"Los Angeles\" AND destination  =  \"Honolulu\""}
{"question": "Show origin and destination for flights with price higher than 300.", "query": "SELECT origin ,  destination FROM Flight WHERE price  >  300"}
{"question": "What is the origin and destination for all flights whose price is higher than 300?", "query": "SELECT origin ,  destination FROM Flight WHERE price  >  300"}
{"question": "Show the flight number and distance of the flight with maximum price.", "query": "SELECT flno ,  distance FROM Flight ORDER BY price DESC LIMIT 1"}
{"question": "What is the flight number and its distance for the one with the maximum price?", "query": "SELECT flno ,  distance FROM Flight ORDER BY price DESC LIMIT 1"}
{"question": "Show the flight number of flights with three lowest distances.", "query": "SELECT flno FROM Flight ORDER BY distance ASC LIMIT 3"}
{"question": "What are the numbers of the shortest flights?", "query": "SELECT flno FROM Flight ORDER BY distance ASC LIMIT 3"}
{"question": "What is the average distance and average price for flights from Los Angeles.", "query": "SELECT avg(distance) ,  avg(price) FROM Flight WHERE origin  =  \"Los Angeles\""}
{"question": "What is the average distance and price for all flights from LA?", "query": "SELECT avg(distance) ,  avg(price) FROM Flight WHERE origin  =  \"Los Angeles\""}
{"question": "Show all origins and the number of flights from each origin.", "query": "SELECT origin ,  count(*) FROM Flight GROUP BY origin"}
{"question": "For each origin, how many flights came from there?", "query": "SELECT origin ,  count(*) FROM Flight GROUP BY origin"}
{"question": "Show all destinations and the number of flights to each destination.", "query": "SELECT destination ,  count(*) FROM Flight GROUP BY destination"}
{"question": "What are the destinations and number of flights to each one?", "query": "SELECT destination ,  count(*) FROM Flight GROUP BY destination"}
{"question": "Which origin has most number of flights?", "query": "SELECT origin FROM Flight GROUP BY origin ORDER BY count(*) DESC LIMIT 1"}
{"question": "What place has the most flights coming from there?", "query": "SELECT origin FROM Flight GROUP BY origin ORDER BY count(*) DESC LIMIT 1"}
{"question": "Which destination has least number of flights?", "query": "SELECT destination FROM Flight GROUP BY destination ORDER BY count(*) LIMIT 1"}
{"question": "What destination has the fewest number of flights?", "query": "SELECT destination FROM Flight GROUP BY destination ORDER BY count(*) LIMIT 1"}
{"question": "What is the aircraft name for the flight with number 99", "query": "SELECT T2.name FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid  =  T2.aid WHERE T1.flno  =  99"}
{"question": "What is the name of the aircraft that was on flight number 99?", "query": "SELECT T2.name FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid  =  T2.aid WHERE T1.flno  =  99"}
{"question": "Show all flight numbers with aircraft Airbus A340-300.", "query": "SELECT T1.flno FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid  =  T2.aid WHERE T2.name  =  \"Airbus A340-300\""}
{"question": "What are the flight numbers for the aircraft Airbus A340-300?", "query": "SELECT T1.flno FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid  =  T2.aid WHERE T2.name  =  \"Airbus A340-300\""}
{"question": "Show aircraft names and number of flights for each aircraft.", "query": "SELECT T2.name ,  count(*) FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid  =  T2.aid GROUP BY T1.aid"}
{"question": "What is the name of each aircraft and how many flights does each one complete?", "query": "SELECT T2.name ,  count(*) FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid  =  T2.aid GROUP BY T1.aid"}
{"question": "Show names for all aircraft with at least two flights.", "query": "SELECT T2.name FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid  =  T2.aid GROUP BY T1.aid HAVING count(*)  >= 2"}
{"question": "What are the names for all aircrafts with at least 2 flights?", "query": "SELECT T2.name FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid  =  T2.aid GROUP BY T1.aid HAVING count(*)  >= 2"}
{"question": "How many employees have certificate.", "query": "SELECT count(DISTINCT eid) FROM Certificate"}
{"question": "What is the count of distinct employees with certificates?", "query": "SELECT count(DISTINCT eid) FROM Certificate"}
{"question": "Show ids for all employees who don't have a certificate.", "query": "SELECT eid FROM Employee EXCEPT SELECT eid FROM Certificate"}
{"question": "What are the ids of all employees that don't have certificates?", "query": "SELECT eid FROM Employee EXCEPT SELECT eid FROM Certificate"}
{"question": "Show names for all aircrafts of which John Williams has certificates.", "query": "SELECT T3.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T1.name  =  \"John Williams\""}
{"question": "What are the names of all aircrafts that John Williams have certificates to be able to fly?", "query": "SELECT T3.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T1.name  =  \"John Williams\""}
{"question": "Show names for all employees who have certificate of Boeing 737-800.", "query": "SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.name  =  \"Boeing 737-800\""}
{"question": "What are the names of all employees who have a certificate to fly Boeing 737-800?", "query": "SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.name  =  \"Boeing 737-800\""}
{"question": "Show names for all employees who have certificates on both Boeing 737-800 and Airbus A340-300.", "query": "SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.name  =  \"Boeing 737-800\" INTERSECT SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.name  =  \"Airbus A340-300\""}
{"question": "What are the names of all employees who can fly both the Boeing 737-800 and the Airbus A340-300?", "query": "SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.name  =  \"Boeing 737-800\" INTERSECT SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.name  =  \"Airbus A340-300\""}
{"question": "Show names for all employees who do not have certificate of Boeing 737-800.", "query": "SELECT name FROM Employee EXCEPT SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.name  =  \"Boeing 737-800\""}
{"question": "What are the names of all employees who are not certified to fly Boeing 737-800s?", "query": "SELECT name FROM Employee EXCEPT SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.name  =  \"Boeing 737-800\""}
{"question": "Show the name of aircraft which fewest people have its certificate.", "query": "SELECT T2.name FROM Certificate AS T1 JOIN Aircraft AS T2 ON T2.aid  =  T1.aid GROUP BY T1.aid ORDER BY count(*) DESC LIMIT 1"}
{"question": "What are the names of the aircraft that the least people are certified to fly?", "query": "SELECT T2.name FROM Certificate AS T1 JOIN Aircraft AS T2 ON T2.aid  =  T1.aid GROUP BY T1.aid ORDER BY count(*) DESC LIMIT 1"}
{"question": "Show the name and distance of the aircrafts with more than 5000 distance and which at least 5 people have its certificate.", "query": "SELECT T2.name FROM Certificate AS T1 JOIN Aircraft AS T2 ON T2.aid  =  T1.aid WHERE T2.distance  >  5000 GROUP BY T1.aid ORDER BY count(*)  >=  5"}
{"question": "What is the name and distance of every aircraft that can cover a distance of more than 5000 and which at least 5 people can fly?", "query": "SELECT T2.name FROM Certificate AS T1 JOIN Aircraft AS T2 ON T2.aid  =  T1.aid WHERE T2.distance  >  5000 GROUP BY T1.aid ORDER BY count(*)  >=  5"}
{"question": "what is the salary and name of the employee who has the most number of aircraft certificates?", "query": "SELECT T1.name ,  T1.salary FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid GROUP BY T1.eid ORDER BY count(*) DESC LIMIT 1"}
{"question": "What is the salaray and name of the employee that is certified to fly the most planes?", "query": "SELECT T1.name ,  T1.salary FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid GROUP BY T1.eid ORDER BY count(*) DESC LIMIT 1"}
{"question": "What is the salary and name of the employee who has the most number of certificates on aircrafts with distance more than 5000?", "query": "SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.distance  >  5000 GROUP BY T1.eid ORDER BY count(*) DESC LIMIT 1"}
{"question": "What is the salaray and name of the employee with the most certificates to fly planes more than 5000?", "query": "SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.distance  >  5000 GROUP BY T1.eid ORDER BY count(*) DESC LIMIT 1"}
{"question": "How many allergies are there?", "query": "SELECT count(DISTINCT allergy) FROM Allergy_type"}
{"question": "How many allergy entries are there?", "query": "SELECT count(DISTINCT allergy) FROM Allergy_type"}
{"question": "How many different allergy types exist?", "query": "SELECT count(DISTINCT allergytype) FROM Allergy_type"}
{"question": "How many distinct allergies are there?", "query": "SELECT count(DISTINCT allergytype) FROM Allergy_type"}
{"question": "Show all allergy types.", "query": "SELECT DISTINCT allergytype FROM Allergy_type"}
{"question": "What are the different allergy types?", "query": "SELECT DISTINCT allergytype FROM Allergy_type"}
{"question": "Show all allergies and their types.", "query": "SELECT allergy ,  allergytype FROM Allergy_type"}
{"question": "What are the allergies and their types?", "query": "SELECT allergy ,  allergytype FROM Allergy_type"}
{"question": "Show all allergies with type food.", "query": "SELECT DISTINCT allergy FROM Allergy_type WHERE allergytype  =  \"food\""}
{"question": "What are all the different food allergies?", "query": "SELECT DISTINCT allergy FROM Allergy_type WHERE allergytype  =  \"food\""}
{"question": "What is the type of allergy Cat?", "query": "SELECT allergytype FROM Allergy_type WHERE allergy  =  \"Cat\""}
{"question": "What is allergy type of a cat allergy?", "query": "SELECT allergytype FROM Allergy_type WHERE allergy  =  \"Cat\""}
{"question": "How many allergies have type animal?", "query": "SELECT count(*) FROM Allergy_type WHERE allergytype  =  \"animal\""}
{"question": "How many animal type allergies exist?", "query": "SELECT count(*) FROM Allergy_type WHERE allergytype  =  \"animal\""}
{"question": "Show all allergy types and the number of allergies in each type.", "query": "SELECT allergytype ,  count(*) FROM Allergy_type GROUP BY allergytype"}
{"question": "What are the allergy types and how many allergies correspond to each one?", "query": "SELECT allergytype ,  count(*) FROM Allergy_type GROUP BY allergytype"}
{"question": "Which allergy type has most number of allergies?", "query": "SELECT allergytype FROM Allergy_type GROUP BY allergytype ORDER BY count(*) DESC LIMIT 1"}
{"question": "Which allergy type is most common?", "query": "SELECT allergytype FROM Allergy_type GROUP BY allergytype ORDER BY count(*) DESC LIMIT 1"}
{"question": "Which allergy type has least number of allergies?", "query": "SELECT allergytype FROM Allergy_type GROUP BY allergytype ORDER BY count(*) ASC LIMIT 1"}
{"question": "Which allergy type is the least common?", "query": "SELECT allergytype FROM Allergy_type GROUP BY allergytype ORDER BY count(*) ASC LIMIT 1"}
{"question": "How many students are there?", "query": "SELECT count(*) FROM Student"}
{"question": "What is the total number of students?", "query": "SELECT count(*) FROM Student"}
{"question": "Show first name and last name for all students.", "query": "SELECT Fname ,  Lname FROM Student"}
{"question": "What are the full names of all students", "query": "SELECT Fname ,  Lname FROM Student"}
{"question": "How many different advisors are listed?", "query": "SELECT count(DISTINCT advisor) FROM Student"}
{"question": "How many advisors are there?", "query": "SELECT count(DISTINCT advisor) FROM Student"}
{"question": "Show all majors.", "query": "SELECT DISTINCT Major FROM Student"}
{"question": "What are the different majors?", "query": "SELECT DISTINCT Major FROM Student"}
{"question": "Show all cities where students live.", "query": "SELECT DISTINCT city_code FROM Student"}
{"question": "What cities do students live in?", "query": "SELECT DISTINCT city_code FROM Student"}
{"question": "Show first name, last name, age for all female students. Their sex is F.", "query": "SELECT Fname ,  Lname ,  Age FROM Student WHERE Sex  =  'F'"}
{"question": "What are the full names and ages for all female students whose sex is F?", "query": "SELECT Fname ,  Lname ,  Age FROM Student WHERE Sex  =  'F'"}
{"question": "Show student ids for all male students.", "query": "SELECT StuID FROM Student WHERE Sex  =  'M'"}
{"question": "What are the student ids for all male students?", "query": "SELECT StuID FROM Student WHERE Sex  =  'M'"}
{"question": "How many students are age 18?", "query": "SELECT count(*) FROM Student WHERE age  =  18"}
{"question": "How many students are 18 years old?", "query": "SELECT count(*) FROM Student WHERE age  =  18"}
{"question": "Show all student ids who are older than 20.", "query": "SELECT StuID FROM Student WHERE age  >  20"}
{"question": "What are the student ids for students over 20 years old?", "query": "SELECT StuID FROM Student WHERE age  >  20"}
{"question": "Which city does the student whose last name is \"Kim\" live in?", "query": "SELECT city_code FROM Student WHERE LName  =  \"Kim\""}
{"question": "Give the city that the student whose family name is Kim lives in.", "query": "SELECT city_code FROM Student WHERE LName  =  \"Kim\""}
{"question": "Who is the advisor of student with ID 1004?", "query": "SELECT Advisor FROM Student WHERE StuID  =  1004"}
{"question": "Who advises student 1004?", "query": "SELECT Advisor FROM Student WHERE StuID  =  1004"}
{"question": "How many students live in HKG or CHI?", "query": "SELECT count(*) FROM Student WHERE city_code  =  \"HKG\" OR city_code  =  \"CHI\""}
{"question": "Give the number of students living in either HKG or CHI.", "query": "SELECT count(*) FROM Student WHERE city_code  =  \"HKG\" OR city_code  =  \"CHI\""}
{"question": "Show the minimum, average, and maximum age of all students.", "query": "SELECT min(age) ,  avg(age) ,  max(age) FROM Student"}
{"question": "What is the minimum, mean, and maximum age across all students?", "query": "SELECT min(age) ,  avg(age) ,  max(age) FROM Student"}
{"question": "What is the last name of the youngest student?", "query": "SELECT LName FROM Student WHERE age  =  (SELECT min(age) FROM Student)"}
{"question": "Provide the last name of the youngest student.", "query": "SELECT LName FROM Student WHERE age  =  (SELECT min(age) FROM Student)"}
{"question": "Show the student id of the oldest student.", "query": "SELECT StuID FROM Student WHERE age  =  (SELECT max(age) FROM Student)"}
{"question": "What student id corresponds to the oldest student?", "query": "SELECT StuID FROM Student WHERE age  =  (SELECT max(age) FROM Student)"}
{"question": "Show all majors and corresponding number of students.", "query": "SELECT major ,  count(*) FROM Student GROUP BY major"}
{"question": "How many students are there for each major?", "query": "SELECT major ,  count(*) FROM Student GROUP BY major"}
{"question": "Which major has most number of students?", "query": "SELECT major FROM Student GROUP BY major ORDER BY count(*) DESC LIMIT 1"}
{"question": "What is the largest major?", "query": "SELECT major FROM Student GROUP BY major ORDER BY count(*) DESC LIMIT 1"}
{"question": "Show all ages and corresponding number of students.", "query": "SELECT age ,  count(*) FROM Student GROUP BY age"}
{"question": "How old is each student and how many students are each age?", "query": "SELECT age ,  count(*) FROM Student GROUP BY age"}
{"question": "Show the average age for male and female students.", "query": "SELECT avg(age) ,  sex FROM Student GROUP BY sex"}
{"question": "What are the average ages for male and female students?", "query": "SELECT avg(age) ,  sex FROM Student GROUP BY sex"}
{"question": "Show all cities and corresponding number of students.", "query": "SELECT city_code ,  count(*) FROM Student GROUP BY city_code"}
{"question": "How many students live in each city?", "query": "SELECT city_code ,  count(*) FROM Student GROUP BY city_code"}
{"question": "Show all advisors and corresponding number of students.", "query": "SELECT advisor ,  count(*) FROM Student GROUP BY advisor"}
{"question": "How many students does each advisor have?", "query": "SELECT advisor ,  count(*) FROM Student GROUP BY advisor"}
{"question": "Which advisor has most number of students?", "query": "SELECT advisor FROM Student GROUP BY advisor ORDER BY count(*) DESC LIMIT 1"}
{"question": "Give the advisor with the most students.", "query": "SELECT advisor FROM Student GROUP BY advisor ORDER BY count(*) DESC LIMIT 1"}
{"question": "How many students have cat allergies?", "query": "SELECT count(*) FROM Has_allergy WHERE Allergy  =  \"Cat\""}
{"question": "How many students are affected by cat allergies?", "query": "SELECT count(*) FROM Has_allergy WHERE Allergy  =  \"Cat\""}
{"question": "Show all student IDs who have at least two allergies.", "query": "SELECT StuID FROM Has_allergy GROUP BY StuID HAVING count(*)  >=  2"}
{"question": "What are the students ids of students who have more than one allergy?", "query": "SELECT StuID FROM Has_allergy GROUP BY StuID HAVING count(*)  >=  2"}
{"question": "What are the student ids of students who don't have any allergies?", "query": "SELECT StuID FROM Student EXCEPT SELECT StuID FROM Has_allergy"}
{"question": "Which students are unaffected by allergies?", "query": "SELECT StuID FROM Student EXCEPT SELECT StuID FROM Has_allergy"}
{"question": "How many female students have milk or egg allergies?", "query": "SELECT count(*) FROM has_allergy AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T2.sex  =  \"F\" AND T1.allergy  =  \"Milk\" OR T1.allergy  =  \"Eggs\""}
{"question": "How many students who are female are allergic to milk or eggs?", "query": "SELECT count(*) FROM has_allergy AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T2.sex  =  \"F\" AND T1.allergy  =  \"Milk\" OR T1.allergy  =  \"Eggs\""}
{"question": "How many students have a food allergy?", "query": "SELECT count(*) FROM Has_allergy AS T1 JOIN Allergy_type AS T2 ON T1.allergy  =  T2.allergy WHERE T2.allergytype  =  \"food\""}
{"question": "How many students are affected by food related allergies?", "query": "SELECT count(*) FROM Has_allergy AS T1 JOIN Allergy_type AS T2 ON T1.allergy  =  T2.allergy WHERE T2.allergytype  =  \"food\""}
{"question": "Which allergy has most number of students affected?", "query": "SELECT Allergy FROM Has_allergy GROUP BY Allergy ORDER BY count(*) DESC LIMIT 1"}
{"question": "Which allergy is the most common?", "query": "SELECT Allergy FROM Has_allergy GROUP BY Allergy ORDER BY count(*) DESC LIMIT 1"}
{"question": "Show all allergies with number of students affected.", "query": "SELECT Allergy ,  count(*) FROM Has_allergy GROUP BY Allergy"}
{"question": "How many students have each different allergy?", "query": "SELECT Allergy ,  count(*) FROM Has_allergy GROUP BY Allergy"}
{"question": "Show all allergy type with number of students affected.", "query": "SELECT T2.allergytype ,  count(*) FROM Has_allergy AS T1 JOIN Allergy_type AS T2 ON T1.allergy  =  T2.allergy GROUP BY T2.allergytype"}
{"question": "How many students are affected by each allergy type?", "query": "SELECT T2.allergytype ,  count(*) FROM Has_allergy AS T1 JOIN Allergy_type AS T2 ON T1.allergy  =  T2.allergy GROUP BY T2.allergytype"}
{"question": "Find the last name and age of the student who has allergy to both milk and cat.", "query": "SELECT lname ,  age FROM Student WHERE StuID IN (SELECT StuID FROM Has_allergy WHERE Allergy  =  \"Milk\" INTERSECT SELECT StuID FROM Has_allergy WHERE Allergy  =  \"Cat\")"}
{"question": "What are the last names and ages of the students who are allergic to milk and cat?", "query": "SELECT lname ,  age FROM Student WHERE StuID IN (SELECT StuID FROM Has_allergy WHERE Allergy  =  \"Milk\" INTERSECT SELECT StuID FROM Has_allergy WHERE Allergy  =  \"Cat\")"}
{"question": "What are the allergies and their types that the student with first name Lisa has? And order the result by name of allergies.", "query": "SELECT T1.Allergy ,  T1.AllergyType FROM Allergy_type AS T1 JOIN Has_allergy AS T2 ON T1.Allergy  =  T2.Allergy JOIN Student AS T3 ON T3.StuID  =  T2.StuID WHERE T3.Fname  =  \"Lisa\" ORDER BY T1.Allergy"}
{"question": "What are the allergies the girl named Lisa has? And what are the types of them? Order the result by allergy names.", "query": "SELECT T1.Allergy ,  T1.AllergyType FROM Allergy_type AS T1 JOIN Has_allergy AS T2 ON T1.Allergy  =  T2.Allergy JOIN Student AS T3 ON T3.StuID  =  T2.StuID WHERE T3.Fname  =  \"Lisa\" ORDER BY T1.Allergy"}
{"question": "Find the first name and gender of the student who has allergy to milk but not cat.", "query": "SELECT fname ,  sex FROM Student WHERE StuID IN (SELECT StuID FROM Has_allergy WHERE Allergy  =  \"Milk\" EXCEPT SELECT StuID FROM Has_allergy WHERE Allergy  =  \"Cat\")"}
{"question": "What are the first name and gender of the students who have allergy to milk but can put up with cats?", "query": "SELECT fname ,  sex FROM Student WHERE StuID IN (SELECT StuID FROM Has_allergy WHERE Allergy  =  \"Milk\" EXCEPT SELECT StuID FROM Has_allergy WHERE Allergy  =  \"Cat\")"}
{"question": "Find the average age of the students who have allergies with food and animal types.", "query": "SELECT avg(age) FROM Student WHERE StuID IN ( SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  \"food\" INTERSECT SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  \"animal\")"}
{"question": "How old are the students with allergies to food and animal types on average?", "query": "SELECT avg(age) FROM Student WHERE StuID IN ( SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  \"food\" INTERSECT SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  \"animal\")"}
{"question": "List the first and last name of the students who do not have any food type allergy.", "query": "SELECT fname ,  lname FROM Student WHERE StuID NOT IN (SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  \"food\")"}
{"question": "What is the full name of each student who is not allergic to any type of food.", "query": "SELECT fname ,  lname FROM Student WHERE StuID NOT IN (SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  \"food\")"}
{"question": "Find the number of male (sex is 'M') students who have some food type allery.", "query": "SELECT count(*) FROM Student WHERE sex  =  \"M\" AND StuID IN (SELECT StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  \"food\")"}
{"question": "How many male students (sex is 'M') are allergic to any type of food?", "query": "SELECT count(*) FROM Student WHERE sex  =  \"M\" AND StuID IN (SELECT StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  \"food\")"}
{"question": "Find the different first names and cities of the students who have allergy to milk or cat.", "query": "SELECT DISTINCT T1.fname ,  T1.city_code FROM Student AS T1 JOIN Has_Allergy AS T2 ON T1.stuid  =  T2.stuid WHERE T2.Allergy  =  \"Milk\" OR T2.Allergy  =  \"Cat\""}
{"question": "What are the distinct first names and cities of the students who have allergy either to milk or to cat?", "query": "SELECT DISTINCT T1.fname ,  T1.city_code FROM Student AS T1 JOIN Has_Allergy AS T2 ON T1.stuid  =  T2.stuid WHERE T2.Allergy  =  \"Milk\" OR T2.Allergy  =  \"Cat\""}
{"question": "Find the number of students who are older than 18 and do not have allergy to either food or animal.", "query": "SELECT count(*) FROM Student WHERE age  >  18 AND StuID NOT IN ( SELECT StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  \"food\" OR T2.allergytype  =  \"animal\")"}
{"question": "How many students are over 18 and do not have allergy to food type or animal type?", "query": "SELECT count(*) FROM Student WHERE age  >  18 AND StuID NOT IN ( SELECT StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  \"food\" OR T2.allergytype  =  \"animal\")"}
{"question": "Find the first name and major of the students who are not allegry to soy.", "query": "SELECT fname ,  major FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_allergy WHERE Allergy  =  \"Soy\")"}
{"question": "What are the first name and major of the students who are able to consume soy?", "query": "SELECT fname ,  major FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_allergy WHERE Allergy  =  \"Soy\")"}
{"question": "A list of the top 5 countries by number of invoices. List country name and number of invoices.", "query": "SELECT billing_country ,  COUNT(*) FROM invoices GROUP BY billing_country ORDER BY count(*) DESC LIMIT 5;"}
{"question": "What are the top 5 countries by number of invoices and how many do they have?", "query": "SELECT billing_country ,  COUNT(*) FROM invoices GROUP BY billing_country ORDER BY count(*) DESC LIMIT 5;"}
{"question": "A list of the top 8 countries by gross/total invoice size. List country name and gross invoice size.", "query": "SELECT billing_country ,  SUM(total) FROM invoices GROUP BY billing_country ORDER BY SUM(total) DESC LIMIT 8;"}
{"question": "What are the names of the top 8 countries by total invoice size and what are those sizes?", "query": "SELECT billing_country ,  SUM(total) FROM invoices GROUP BY billing_country ORDER BY SUM(total) DESC LIMIT 8;"}
{"question": "A list of the top 10 countries by average invoice size. List country name and average invoice size.", "query": "SELECT billing_country ,  AVG(total) FROM invoices GROUP BY billing_country ORDER BY AVG(total) DESC LIMIT 10;"}
{"question": "What are the names of the countries and average invoice size of the top countries by size?", "query": "SELECT billing_country ,  AVG(total) FROM invoices GROUP BY billing_country ORDER BY AVG(total) DESC LIMIT 10;"}
{"question": "Find out 5 customers who most recently purchased something. List customers' first and last name.", "query": "SELECT T1.first_name ,  T1.last_name FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id  =  T1.id ORDER BY T2.invoice_date DESC LIMIT 5;"}
{"question": "What are the first and last names of the 5 customers who purchased something most recently?", "query": "SELECT T1.first_name ,  T1.last_name FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id  =  T1.id ORDER BY T2.invoice_date DESC LIMIT 5;"}
{"question": "Find out the top 10 customers by total number of orders. List customers' first and last name and the number of total orders.", "query": "SELECT T1.first_name ,  T1.last_name ,  COUNT(*) FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id  =  T1.id GROUP BY T1.id ORDER BY COUNT(*) DESC LIMIT 10;"}
{"question": "What are the top 10 customers' first and last names by total number of orders and how many orders did they make?", "query": "SELECT T1.first_name ,  T1.last_name ,  COUNT(*) FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id  =  T1.id GROUP BY T1.id ORDER BY COUNT(*) DESC LIMIT 10;"}
{"question": "List the top 10 customers by total gross sales. List customers' first and last name and total gross sales.", "query": "SELECT T1.first_name ,  T1.last_name ,  SUM(T2.total) FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id  =  T1.id GROUP BY T1.id ORDER BY SUM(T2.total) DESC LIMIT 10;"}
{"question": "What are the top 10 customers' first and last names with the highest gross sales, and also what are the sales?", "query": "SELECT T1.first_name ,  T1.last_name ,  SUM(T2.total) FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id  =  T1.id GROUP BY T1.id ORDER BY SUM(T2.total) DESC LIMIT 10;"}
{"question": "List the top 5 genres by number of tracks. List genres name and total tracks.", "query": "SELECT T1.name ,  COUNT(*) FROM genres AS T1 JOIN tracks AS T2 ON T2.genre_id  =  T1.id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 5;"}
{"question": "How many tracks does each genre have and what are the names of the top 5?", "query": "SELECT T1.name ,  COUNT(*) FROM genres AS T1 JOIN tracks AS T2 ON T2.genre_id  =  T1.id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 5;"}
{"question": "List every album's title.", "query": "SELECT title FROM albums;"}
{"question": "What are the titles of all the albums?", "query": "SELECT title FROM albums;"}
{"question": "List every album ordered by album title in ascending order.", "query": "SELECT title FROM albums ORDER BY title;"}
{"question": "What are the titles of all the albums alphabetically ascending?", "query": "SELECT title FROM albums ORDER BY title;"}
{"question": "List every album whose title starts with A in alphabetical order.", "query": "SELECT title FROM albums WHERE title LIKE 'A%' ORDER BY title;"}
{"question": "What are the titles of all albums that start with A in alphabetical order?", "query": "SELECT title FROM albums WHERE title LIKE 'A%' ORDER BY title;"}
{"question": "List the customers first and last name of 10 least expensive invoices.", "query": "SELECT T1.first_name ,  T1.last_name FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id  =  T1.id ORDER BY total LIMIT 10;"}
{"question": "What are the first and last names of the customers with the 10 cheapest invoices?", "query": "SELECT T1.first_name ,  T1.last_name FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id  =  T1.id ORDER BY total LIMIT 10;"}
{"question": "List total amount of  invoice from Chicago, IL.", "query": "SELECT sum(total) FROM invoices WHERE billing_city  =  \"Chicago\" AND billing_state  =  \"IL\";"}
{"question": "What are the total amount of money in the invoices billed from Chicago, Illinois?", "query": "SELECT sum(total) FROM invoices WHERE billing_city  =  \"Chicago\" AND billing_state  =  \"IL\";"}
{"question": "List the number of invoices from Chicago, IL.", "query": "SELECT COUNT(*) FROM invoices WHERE billing_city  =  \"Chicago\" AND billing_state  =  \"IL\";"}
{"question": "How many invoices were billed from Chicago, IL?", "query": "SELECT COUNT(*) FROM invoices WHERE billing_city  =  \"Chicago\" AND billing_state  =  \"IL\";"}
{"question": "List the number of invoices from the US, grouped by state.", "query": "SELECT billing_state ,  COUNT(*) FROM invoices WHERE billing_country  =  \"USA\" GROUP BY billing_state;"}
{"question": "How many invoices were billed from each state?", "query": "SELECT billing_state ,  COUNT(*) FROM invoices WHERE billing_country  =  \"USA\" GROUP BY billing_state;"}
{"question": "List the state in the US with the most invoices.", "query": "SELECT billing_state ,  COUNT(*) FROM invoices WHERE billing_country  =  \"USA\" GROUP BY billing_state ORDER BY COUNT(*) DESC LIMIT 1;"}
{"question": "What are the states with the most invoices?", "query": "SELECT billing_state ,  COUNT(*) FROM invoices WHERE billing_country  =  \"USA\" GROUP BY billing_state ORDER BY COUNT(*) DESC LIMIT 1;"}
{"question": "List the number of invoices and the invoice total from California.", "query": "SELECT billing_state ,  COUNT(*) ,  SUM(total) FROM invoices WHERE billing_state  =  \"CA\";"}
{"question": "What is the number of invoices and total money billed in them from CA?", "query": "SELECT billing_state ,  COUNT(*) ,  SUM(total) FROM invoices WHERE billing_state  =  \"CA\";"}
{"question": "List Aerosmith's albums.", "query": "SELECT T1.title FROM albums AS T1 JOIN artists AS T2 ON  T1.artist_id = T2.id WHERE T2.name = \"Aerosmith\";"}
{"question": "What are the titles of all the Aerosmith albums?", "query": "SELECT T1.title FROM albums AS T1 JOIN artists AS T2 ON  T1.artist_id = T2.id WHERE T2.name = \"Aerosmith\";"}
{"question": "How many albums does Billy Cobham has?", "query": "SELECT count(*) FROM albums AS T1 JOIN artists AS T2 ON  T1.artist_id = T2.id WHERE T2.name = \"Billy Cobham\";"}
{"question": "How many albums has Billy Cobam released?", "query": "SELECT count(*) FROM albums AS T1 JOIN artists AS T2 ON  T1.artist_id = T2.id WHERE T2.name = \"Billy Cobham\";"}
{"question": "Eduardo Martins is a customer at which company?", "query": "SELECT company FROM customers WHERE first_name = \"Eduardo\" AND last_name = \"Martins\";"}
{"question": "What is the company where Eduardo Martins is a customer?", "query": "SELECT company FROM customers WHERE first_name = \"Eduardo\" AND last_name = \"Martins\";"}
{"question": "What is Astrid Gruber's email and phone number?", "query": "SELECT email ,  phone FROM customers WHERE first_name = \"Astrid\" AND last_name = \"Gruber\";"}
{"question": "What is the email and phone number of Astrid Gruber the customer?", "query": "SELECT email ,  phone FROM customers WHERE first_name = \"Astrid\" AND last_name = \"Gruber\";"}
{"question": "How many customers live in Prague city?", "query": "SELECT count(*) FROM customers WHERE city = \"Prague\";"}
{"question": "How many customers live in the city of Prague?", "query": "SELECT count(*) FROM customers WHERE city = \"Prague\";"}
{"question": "How many customers in state of CA?", "query": "SELECT count(*) FROM customers WHERE state = \"CA\";"}
{"question": "How many customers are from California?", "query": "SELECT count(*) FROM customers WHERE state = \"CA\";"}
{"question": "What country does Roberto Almeida live?", "query": "SELECT country FROM customers WHERE first_name = \"Roberto\" AND last_name = \"Almeida\";"}
{"question": "In which country does Roberto Almeida?", "query": "SELECT country FROM customers WHERE first_name = \"Roberto\" AND last_name = \"Almeida\";"}
{"question": "List the name of albums that are released by aritist whose name has 'Led'", "query": "SELECT T2.title FROM artists AS T1 JOIN albums AS T2 ON T1.id  =  T2.artist_id WHERE T1.name LIKE '%Led%'"}
{"question": "What is the title of the album that was released by the artist whose name has the phrase 'Led'?", "query": "SELECT T2.title FROM artists AS T1 JOIN albums AS T2 ON T1.id  =  T2.artist_id WHERE T1.name LIKE '%Led%'"}
{"question": "How many customers does Steve Johnson support?", "query": "SELECT count(*) FROM employees AS T1 JOIN customers AS T2 ON T2.support_rep_id = T1.id WHERE T1.first_name = \"Steve\" AND T1.last_name = \"Johnson\";"}
{"question": "What is the count of customers that Steve Johnson supports?", "query": "SELECT count(*) FROM employees AS T1 JOIN customers AS T2 ON T2.support_rep_id = T1.id WHERE T1.first_name = \"Steve\" AND T1.last_name = \"Johnson\";"}
{"question": "What is the title, phone and hire date of Nancy Edwards?", "query": "SELECT title ,  phone ,  hire_date FROM employees WHERE first_name = \"Nancy\" AND last_name = \"Edwards\";"}
{"question": "What is the title, phone number and hire date for the employee named Nancy Edwards?", "query": "SELECT title ,  phone ,  hire_date FROM employees WHERE first_name = \"Nancy\" AND last_name = \"Edwards\";"}
{"question": "find the full name of employees who report to Nancy Edwards?", "query": "SELECT T2.first_name , T2.last_name FROM employees AS T1 JOIN employees AS T2 ON T1.id = T2.reports_to WHERE T1.first_name = \"Nancy\" AND T1.last_name = \"Edwards\";"}
{"question": "What is the first and last name of the employee who reports to Nancy Edwards?", "query": "SELECT T2.first_name , T2.last_name FROM employees AS T1 JOIN employees AS T2 ON T1.id = T2.reports_to WHERE T1.first_name = \"Nancy\" AND T1.last_name = \"Edwards\";"}
{"question": "What is the address of employee Nancy Edwards?", "query": "SELECT address FROM employees WHERE first_name = \"Nancy\" AND last_name = \"Edwards\";"}
{"question": "What is Nancy Edwards's address?", "query": "SELECT address FROM employees WHERE first_name = \"Nancy\" AND last_name = \"Edwards\";"}
{"question": "Find the full name of employee who supported the most number of customers.", "query": "SELECT T1.first_name , T1.last_name FROM employees AS T1 JOIN customers AS T2 ON T1.id  =  T2.support_rep_id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1"}
{"question": "What is the full name of the employee who has the most customers?", "query": "SELECT T1.first_name , T1.last_name FROM employees AS T1 JOIN customers AS T2 ON T1.id  =  T2.support_rep_id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1"}
{"question": "How many employees are living in Canada?", "query": "SELECT count(*) FROM employees WHERE country = \"Canada\";"}
{"question": "How many employees live in Canada?", "query": "SELECT count(*) FROM employees WHERE country = \"Canada\";"}
{"question": "What is employee Nancy Edwards's phone number?", "query": "SELECT phone FROM employees WHERE first_name = \"Nancy\" AND last_name = \"Edwards\";"}
{"question": "What is the the phone number of Nancy Edwards?", "query": "SELECT phone FROM employees WHERE first_name = \"Nancy\" AND last_name = \"Edwards\";"}
{"question": "Who is the youngest employee in the company? List employee's first and last name.", "query": "SELECT first_name , last_name FROM employees ORDER BY birth_date DESC LIMIT 1;"}
{"question": "What si the youngest employee's first and last name?", "query": "SELECT first_name , last_name FROM employees ORDER BY birth_date DESC LIMIT 1;"}
{"question": "List top 10 employee work longest in the company. List employee's first and last name.", "query": "SELECT first_name , last_name FROM employees ORDER BY hire_date ASC LIMIT 10;"}
{"question": "What are the first and last names of the top 10 longest-serving employees?", "query": "SELECT first_name , last_name FROM employees ORDER BY hire_date ASC LIMIT 10;"}
{"question": "Find the number of employees whose title is IT Staff from each city?", "query": "SELECT count(*) ,  city FROM employees WHERE title  =  'IT Staff' GROUP BY city"}
{"question": "How many employees who are IT staff are from each city?", "query": "SELECT count(*) ,  city FROM employees WHERE title  =  'IT Staff' GROUP BY city"}
{"question": "Which employee manage most number of peoples? List employee's first and last name, and number of people report to that employee.", "query": "SELECT T2.first_name , T2.last_name ,  count(T1.reports_to) FROM employees AS T1 JOIN employees AS T2 ON T1.reports_to = T2.id GROUP BY T1.reports_to ORDER BY count(T1.reports_to) DESC LIMIT 1;"}
{"question": "What are the first and last names of all the employees and how many people report to them?", "query": "SELECT T2.first_name , T2.last_name ,  count(T1.reports_to) FROM employees AS T1 JOIN employees AS T2 ON T1.reports_to = T2.id GROUP BY T1.reports_to ORDER BY count(T1.reports_to) DESC LIMIT 1;"}
{"question": "How many orders does Lucas Mancini has?", "query": "SELECT count(*) FROM customers AS T1 JOIN invoices AS T2 ON T1.id = T2.customer_id WHERE T1.first_name = \"Lucas\" AND T1.last_name = \"Mancini\";"}
{"question": "How many orders does Luca Mancini have in his invoices?", "query": "SELECT count(*) FROM customers AS T1 JOIN invoices AS T2 ON T1.id = T2.customer_id WHERE T1.first_name = \"Lucas\" AND T1.last_name = \"Mancini\";"}
{"question": "What is the total amount of money spent by Lucas Mancini?", "query": "SELECT sum(T2.total) FROM customers AS T1 JOIN invoices AS T2 ON T1.id = T2.customer_id WHERE T1.first_name = \"Lucas\" AND T1.last_name = \"Mancini\";"}
{"question": "How much money did Lucas Mancini spend?", "query": "SELECT sum(T2.total) FROM customers AS T1 JOIN invoices AS T2 ON T1.id = T2.customer_id WHERE T1.first_name = \"Lucas\" AND T1.last_name = \"Mancini\";"}
{"question": "List all media types.", "query": "SELECT name FROM media_types;"}
{"question": "What are the names of all the media types?", "query": "SELECT name FROM media_types;"}
{"question": "List all different genre types.", "query": "SELECT DISTINCT name FROM genres;"}
{"question": "What are the different names of the genres?", "query": "SELECT DISTINCT name FROM genres;"}
{"question": "List the name of all playlist.", "query": "SELECT name FROM playlists;"}
{"question": "What are the names of all the playlists?", "query": "SELECT name FROM playlists;"}
{"question": "Who is the composer of track Fast As a Shark?", "query": "SELECT composer FROM tracks WHERE name = \"Fast As a Shark\";"}
{"question": "What is the composer who created the track \"Fast As a Shark\"?", "query": "SELECT composer FROM tracks WHERE name = \"Fast As a Shark\";"}
{"question": "How long does track Fast As a Shark has?", "query": "SELECT milliseconds FROM tracks WHERE name = \"Fast As a Shark\";"}
{"question": "How many milliseconds long is Fast As a Shark?", "query": "SELECT milliseconds FROM tracks WHERE name = \"Fast As a Shark\";"}
{"question": "What is the name of tracks whose genre is Rock?", "query": "SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T1.name = \"Rock\";"}
{"question": "What is the name of all tracks in the Rock genre?", "query": "SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T1.name = \"Rock\";"}
{"question": "What is title of album which track Balls to the Wall belongs to?", "query": "SELECT T1.title FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T2.name = \"Balls to the Wall\";"}
{"question": "What is the name of the album that has the track Ball to the Wall?", "query": "SELECT T1.title FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T2.name = \"Balls to the Wall\";"}
{"question": "List name of all tracks in Balls to the Wall.", "query": "SELECT T2.name FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T1.title = \"Balls to the Wall\";"}
{"question": "What is the name of all tracks in the album named Balls to the Wall?", "query": "SELECT T2.name FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T1.title = \"Balls to the Wall\";"}
{"question": "List title of albums have the number of tracks greater than 10.", "query": "SELECT T1.title FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.album_id GROUP BY T1.id HAVING count(T1.id)  >  10;"}
{"question": "What are the names of the albums that have more than 10 tracks?", "query": "SELECT T1.title FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.album_id GROUP BY T1.id HAVING count(T1.id)  >  10;"}
{"question": "List the name of tracks belongs to genre Rock and whose media type is MPEG audio file.", "query": "SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id JOIN media_types AS T3 ON T3.id = T2.media_type_id WHERE T1.name = \"Rock\" AND T3.name = \"MPEG audio file\";"}
{"question": "What are the names of all Rock tracks that are stored on MPEG audio files?", "query": "SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id JOIN media_types AS T3 ON T3.id = T2.media_type_id WHERE T1.name = \"Rock\" AND T3.name = \"MPEG audio file\";"}
{"question": "List the name of tracks belongs to genre Rock or media type is MPEG audio file.", "query": "SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id JOIN media_types AS T3 ON T3.id = T2.media_type_id WHERE T1.name = \"Rock\" OR T3.name = \"MPEG audio file\";"}
{"question": "What are the names of all tracks that belong to the Rock genre and whose media type is MPEG?", "query": "SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id JOIN media_types AS T3 ON T3.id = T2.media_type_id WHERE T1.name = \"Rock\" OR T3.name = \"MPEG audio file\";"}
{"question": "List the name of tracks belongs to genre Rock or genre Jazz.", "query": "SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T1.name = \"Rock\" OR T1.name = \"Jazz\""}
{"question": "What are the names of the tracks that are Rock or Jazz songs?", "query": "SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T1.name = \"Rock\" OR T1.name = \"Jazz\""}
{"question": "List the name of all tracks in the playlists of Movies.", "query": "SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id = T2.track_id JOIN playlists AS T3 ON T3.id = T2.playlist_id WHERE T3.name = \"Movies\";"}
{"question": "What are the names of all tracks that are on playlists titled Movies?", "query": "SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id = T2.track_id JOIN playlists AS T3 ON T3.id = T2.playlist_id WHERE T3.name = \"Movies\";"}
{"question": "List the name of playlist which has number of tracks greater than 100.", "query": "SELECT T2.name FROM playlist_tracks AS T1 JOIN playlists AS T2 ON T2.id = T1.playlist_id GROUP BY T1.playlist_id HAVING count(T1.track_id)  >  100;"}
{"question": "What are the names of all playlists that have more than 100 tracks?", "query": "SELECT T2.name FROM playlist_tracks AS T1 JOIN playlists AS T2 ON T2.id = T1.playlist_id GROUP BY T1.playlist_id HAVING count(T1.track_id)  >  100;"}
{"question": "List all tracks bought by customer Daan Peeters.", "query": "SELECT T1.name FROM tracks AS T1 JOIN invoice_lines AS T2 ON T1.id = T2.track_id JOIN invoices AS T3 ON T3.id = T2.invoice_id JOIN customers AS T4 ON T4.id = T3.customer_id WHERE T4.first_name = \"Daan\" AND T4.last_name = \"Peeters\";"}
{"question": "What are the tracks that Dean Peeters bought?", "query": "SELECT T1.name FROM tracks AS T1 JOIN invoice_lines AS T2 ON T1.id = T2.track_id JOIN invoices AS T3 ON T3.id = T2.invoice_id JOIN customers AS T4 ON T4.id = T3.customer_id WHERE T4.first_name = \"Daan\" AND T4.last_name = \"Peeters\";"}
{"question": "How much is the track Fast As a Shark?", "query": "SELECT unit_price FROM tracks WHERE name = \"Fast As a Shark\";"}
{"question": "What is the unit price of the tune \"Fast As a Shark\"?", "query": "SELECT unit_price FROM tracks WHERE name = \"Fast As a Shark\";"}
{"question": "Find the name of tracks which are in Movies playlist but not in music playlist.", "query": "SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id  =  T2.track_id JOIN playlists AS T3 ON T2.playlist_id  =  T3.id WHERE T3.name  =  'Movies' EXCEPT SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id  =  T2.track_id JOIN playlists AS T3 ON T2.playlist_id  =  T3.id WHERE T3.name  =  'Music'"}
{"question": "What are the names of all tracks that are on the Movies playlist but not in the music playlist?", "query": "SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id  =  T2.track_id JOIN playlists AS T3 ON T2.playlist_id  =  T3.id WHERE T3.name  =  'Movies' EXCEPT SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id  =  T2.track_id JOIN playlists AS T3 ON T2.playlist_id  =  T3.id WHERE T3.name  =  'Music'"}
{"question": "Find the name of tracks which are in both Movies and music playlists.", "query": "SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id  =  T2.track_id JOIN playlists AS T3 ON T2.playlist_id  =  T3.id WHERE T3.name  =  'Movies' INTERSECT SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id  =  T2.track_id JOIN playlists AS T3 ON T2.playlist_id  =  T3.id WHERE T3.name  =  'Music'"}
{"question": "What are the names of all the tracks that are in both the Movies and music playlists?", "query": "SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id  =  T2.track_id JOIN playlists AS T3 ON T2.playlist_id  =  T3.id WHERE T3.name  =  'Movies' INTERSECT SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id  =  T2.track_id JOIN playlists AS T3 ON T2.playlist_id  =  T3.id WHERE T3.name  =  'Music'"}
{"question": "Find number of tracks in each genre?", "query": "SELECT count(*) ,  T1.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id GROUP BY T1.name;"}
{"question": "How many tracks are in each genre?", "query": "SELECT count(*) ,  T1.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id GROUP BY T1.name;"}
{"question": "How many editors are there?", "query": "SELECT count(*) FROM editor"}
{"question": "List the names of editors in ascending order of age.", "query": "SELECT Name FROM editor ORDER BY Age ASC"}
{"question": "What are the names and ages of editors?", "query": "SELECT Name ,  Age FROM editor"}
{"question": "List the names of editors who are older than 25.", "query": "SELECT Name FROM editor WHERE Age  >  25"}
{"question": "Show the names of editors of age either 24 or 25.", "query": "SELECT Name FROM editor WHERE Age  =  24 OR Age  =  25"}
{"question": "What is the name of the youngest editor?", "query": "SELECT Name FROM editor ORDER BY Age ASC LIMIT 1"}
{"question": "What are the different ages of editors? Show each age along with the number of editors of that age.", "query": "SELECT Age ,  COUNT(*) FROM editor GROUP BY Age"}
{"question": "Please show the most common age of editors.", "query": "SELECT Age FROM editor GROUP BY Age ORDER BY COUNT(*) DESC LIMIT 1"}
{"question": "Show the distinct themes of journals.", "query": "SELECT DISTINCT Theme FROM journal"}
{"question": "Show the names of editors and the theme of journals for which they serve on committees.", "query": "SELECT T2.Name ,  T3.Theme FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID  =  T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID  =  T3.Journal_ID"}
{"question": "For each journal_committee, find the editor name and the journal theme.", "query": "SELECT T2.Name ,  T3.Theme FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID  =  T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID  =  T3.Journal_ID"}
{"question": "Show the names and ages of editors and the theme of journals for which they serve on committees, in ascending alphabetical order of theme.", "query": "SELECT T2.Name ,  T2.age ,  T3.Theme FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID  =  T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID  =  T3.Journal_ID ORDER BY T3.Theme ASC"}
{"question": "Show the names of editors that are on the committee of journals with sales bigger than 3000.", "query": "SELECT T2.Name FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID  =  T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID  =  T3.Journal_ID WHERE T3.Sales  >  3000"}
{"question": "Show the id, name of each editor and the number of journal committees they are on.", "query": "SELECT T1.editor_id ,  T1.Name ,  COUNT(*) FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID  =  T2.Editor_ID GROUP BY T1.editor_id"}
{"question": "Show the names of editors that are on at least two journal committees.", "query": "SELECT T1.Name FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID  =  T2.Editor_ID GROUP BY T1.Name HAVING COUNT(*)  >=  2"}
{"question": "List the names of editors that are not on any journal committee.", "query": "SELECT Name FROM editor WHERE editor_id NOT IN (SELECT editor_id FROM journal_committee)"}
{"question": "List the date, theme and sales of the journal which did not have any of the listed editors serving on committee.", "query": "SELECT date ,  theme ,  sales FROM journal EXCEPT SELECT T1.date ,  T1.theme ,  T1.sales FROM journal AS T1 JOIN journal_committee AS T2 ON T1.journal_ID  =  T2.journal_ID"}
{"question": "What is the average sales of the journals that have an editor whose work type is 'Photo'?", "query": "SELECT avg(T1.sales) FROM journal AS T1 JOIN journal_committee AS T2 ON T1.journal_ID  =  T2.journal_ID WHERE T2.work_type  =  'Photo'"}
{"question": "How many accounts do we have?", "query": "SELECT count(*) FROM Accounts"}
{"question": "Count the number of accounts.", "query": "SELECT count(*) FROM Accounts"}
{"question": "Show ids, customer ids, names for all accounts.", "query": "SELECT account_id ,  customer_id ,  account_name FROM Accounts"}
{"question": "What are the account ids, customer ids, and account names for all the accounts?", "query": "SELECT account_id ,  customer_id ,  account_name FROM Accounts"}
{"question": "Show other account details for account with name 338.", "query": "SELECT other_account_details FROM Accounts WHERE account_name  =  \"338\""}
{"question": "What are the other account details for the account with the name 338?", "query": "SELECT other_account_details FROM Accounts WHERE account_name  =  \"338\""}
{"question": "What is the first name, last name, and phone of the customer with account name 162?", "query": "SELECT T2.customer_first_name ,  T2.customer_last_name ,  T2.customer_phone FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.account_name  =  \"162\""}
{"question": "Give the full name and phone of the customer who has the account name 162.", "query": "SELECT T2.customer_first_name ,  T2.customer_last_name ,  T2.customer_phone FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.account_name  =  \"162\""}
{"question": "How many accounts does the customer with first name Art and last name Turcotte have?", "query": "SELECT count(*) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_first_name  =  \"Art\" AND T2.customer_last_name  =  \"Turcotte\""}
{"question": "Return the number of accounts that the customer with the first name Art and last name Turcotte has.", "query": "SELECT count(*) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_first_name  =  \"Art\" AND T2.customer_last_name  =  \"Turcotte\""}
{"question": "Show all customer ids and the number of accounts for each customer.", "query": "SELECT customer_id ,  count(*) FROM Accounts GROUP BY customer_id"}
{"question": "How many accounts are there for each customer id?", "query": "SELECT customer_id ,  count(*) FROM Accounts GROUP BY customer_id"}
{"question": "Show the customer id and number of accounts with most accounts.", "query": "SELECT customer_id ,  count(*) FROM Accounts GROUP BY customer_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "What is the customer id of the customer with the most accounts, and how many accounts does this person have?", "query": "SELECT customer_id ,  count(*) FROM Accounts GROUP BY customer_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "What is the customer first, last name and id with least number of accounts.", "query": "SELECT T2.customer_first_name ,  T2.customer_last_name ,  T1.customer_id FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) ASC LIMIT 1"}
{"question": "Give the full name and customer id of the customer with the fewest accounts.", "query": "SELECT T2.customer_first_name ,  T2.customer_last_name ,  T1.customer_id FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) ASC LIMIT 1"}
{"question": "Show the number of all customers without an account.", "query": "SELECT count(*) FROM Customers WHERE customer_id NOT IN (SELECT customer_id FROM Accounts)"}
{"question": "How many customers do not have an account?", "query": "SELECT count(*) FROM Customers WHERE customer_id NOT IN (SELECT customer_id FROM Accounts)"}
{"question": "Show the first names and last names of customers without any account.", "query": "SELECT customer_first_name ,  customer_last_name FROM Customers EXCEPT SELECT T1.customer_first_name ,  T1.customer_last_name FROM Customers AS T1 JOIN Accounts AS T2 ON T1.customer_id  =  T2.customer_id"}
{"question": "What are the full names of customers who do not have any accounts?", "query": "SELECT customer_first_name ,  customer_last_name FROM Customers EXCEPT SELECT T1.customer_first_name ,  T1.customer_last_name FROM Customers AS T1 JOIN Accounts AS T2 ON T1.customer_id  =  T2.customer_id"}
{"question": "Show distinct first and last names for all customers with an account.", "query": "SELECT DISTINCT T1.customer_first_name ,  T1.customer_last_name FROM Customers AS T1 JOIN Accounts AS T2 ON T1.customer_id  =  T2.customer_id"}
{"question": "What are the full names of customers who have accounts?", "query": "SELECT DISTINCT T1.customer_first_name ,  T1.customer_last_name FROM Customers AS T1 JOIN Accounts AS T2 ON T1.customer_id  =  T2.customer_id"}
{"question": "How many customers have an account?", "query": "SELECT count(DISTINCT customer_id) FROM Accounts"}
{"question": "Count the number of customers who hold an account.", "query": "SELECT count(DISTINCT customer_id) FROM Accounts"}
{"question": "How many customers do we have?", "query": "SELECT count(*) FROM Customers"}
{"question": "Count the number of customers.", "query": "SELECT count(*) FROM Customers"}
{"question": "Show ids, first names, last names, and phones for all customers.", "query": "SELECT customer_id ,  customer_first_name ,  customer_last_name ,  customer_phone FROM Customers"}
{"question": "What are the ids, full names, and phones of each customer?", "query": "SELECT customer_id ,  customer_first_name ,  customer_last_name ,  customer_phone FROM Customers"}
{"question": "What is the phone and email for customer with first name Aniyah and last name Feest?", "query": "SELECT customer_phone ,  customer_email FROM Customers WHERE customer_first_name  =  \"Aniyah\" AND customer_last_name  =  \"Feest\""}
{"question": "Return the phone and email of the customer with the first name Aniyah and last name Feest.", "query": "SELECT customer_phone ,  customer_email FROM Customers WHERE customer_first_name  =  \"Aniyah\" AND customer_last_name  =  \"Feest\""}
{"question": "Show the number of customer cards.", "query": "SELECT count(*) FROM Customers_cards"}
{"question": "How many customer cards are there?", "query": "SELECT count(*) FROM Customers_cards"}
{"question": "Show ids, customer ids, card type codes, card numbers for all cards.", "query": "SELECT card_id ,  customer_id ,  card_type_code ,  card_number FROM Customers_cards"}
{"question": "What are card ids, customer ids, card types, and card numbers for each customer card?", "query": "SELECT card_id ,  customer_id ,  card_type_code ,  card_number FROM Customers_cards"}
{"question": "Show the date valid from and the date valid to for the card with card number '4560596484842'.", "query": "SELECT date_valid_from ,  date_valid_to FROM Customers_cards WHERE card_number  =  \"4560596484842\""}
{"question": "What are the valid from and valid to dates for the card with the number 4560596484842?", "query": "SELECT date_valid_from ,  date_valid_to FROM Customers_cards WHERE card_number  =  \"4560596484842\""}
{"question": "What is the first name, last name, and phone of the customer with card 4560596484842.", "query": "SELECT T2.customer_first_name ,  T2.customer_last_name ,  T2.customer_phone FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.card_number  =  \"4560596484842\""}
{"question": "Return the full name and phone of the customer who has card number 4560596484842.", "query": "SELECT T2.customer_first_name ,  T2.customer_last_name ,  T2.customer_phone FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.card_number  =  \"4560596484842\""}
{"question": "How many cards does customer Art Turcotte have?", "query": "SELECT count(*) FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_first_name  =  \"Art\" AND T2.customer_last_name  =  \"Turcotte\""}
{"question": "Count the number of cards the customer with the first name Art and last name Turcotte has.", "query": "SELECT count(*) FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_first_name  =  \"Art\" AND T2.customer_last_name  =  \"Turcotte\""}
{"question": "How many debit cards do we have?", "query": "SELECT count(*) FROM Customers_cards WHERE card_type_code  =  \"Debit\""}
{"question": "Count the number of customer cards of the type Debit.", "query": "SELECT count(*) FROM Customers_cards WHERE card_type_code  =  \"Debit\""}
{"question": "How many credit cards does customer Blanche Huels have?", "query": "SELECT count(*) FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_first_name  =  \"Blanche\" AND T2.customer_last_name  =  \"Huels\" AND T1.card_type_code  =  \"Credit\""}
{"question": "Count the number of credit cards that the customer with first name Blanche and last name Huels has.", "query": "SELECT count(*) FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_first_name  =  \"Blanche\" AND T2.customer_last_name  =  \"Huels\" AND T1.card_type_code  =  \"Credit\""}
{"question": "Show all customer ids and the number of cards owned by each customer.", "query": "SELECT customer_id ,  count(*) FROM Customers_cards GROUP BY customer_id"}
{"question": "What are the different customer ids, and how many cards does each one hold?", "query": "SELECT customer_id ,  count(*) FROM Customers_cards GROUP BY customer_id"}
{"question": "What is the customer id with most number of cards, and how many does he have?", "query": "SELECT customer_id ,  count(*) FROM Customers_cards GROUP BY customer_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "Return the id of the customer who has the most cards, as well as the number of cards.", "query": "SELECT customer_id ,  count(*) FROM Customers_cards GROUP BY customer_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "Show id, first and last names for all customers with at least two cards.", "query": "SELECT T1.customer_id ,  T2.customer_first_name ,  T2.customer_last_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >=  2"}
{"question": "What are the ids and full names of customers who hold two or more cards?", "query": "SELECT T1.customer_id ,  T2.customer_first_name ,  T2.customer_last_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >=  2"}
{"question": "What is the customer id, first and last name with least number of accounts.", "query": "SELECT T1.customer_id ,  T2.customer_first_name ,  T2.customer_last_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) ASC LIMIT 1"}
{"question": "Return the id and full name of the customer who has the fewest accounts.", "query": "SELECT T1.customer_id ,  T2.customer_first_name ,  T2.customer_last_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) ASC LIMIT 1"}
{"question": "Show all card type codes and the number of cards in each type.", "query": "SELECT card_type_code ,  count(*) FROM Customers_cards GROUP BY card_type_code"}
{"question": "What are the different card types, and how many cards are there of each?", "query": "SELECT card_type_code ,  count(*) FROM Customers_cards GROUP BY card_type_code"}
{"question": "What is the card type code with most number of cards?", "query": "SELECT card_type_code FROM Customers_cards GROUP BY card_type_code ORDER BY count(*) DESC LIMIT 1"}
{"question": "Return the code of the card type that is most common.", "query": "SELECT card_type_code FROM Customers_cards GROUP BY card_type_code ORDER BY count(*) DESC LIMIT 1"}
{"question": "Show card type codes with at least 5 cards.", "query": "SELECT card_type_code FROM Customers_cards GROUP BY card_type_code HAVING count(*)  >=  5"}
{"question": "What are the codes of card types that have 5 or more cards?", "query": "SELECT card_type_code FROM Customers_cards GROUP BY card_type_code HAVING count(*)  >=  5"}
{"question": "Show all card type codes and the number of customers holding cards in each type.", "query": "SELECT card_type_code ,  count(DISTINCT customer_id) FROM Customers_cards GROUP BY card_type_code"}
{"question": "What are the different card type codes, and how many different customers hold each type?", "query": "SELECT card_type_code ,  count(DISTINCT customer_id) FROM Customers_cards GROUP BY card_type_code"}
{"question": "Show the customer ids and firstname without a credit card.", "query": "SELECT customer_id ,  customer_first_name FROM Customers EXCEPT SELECT T1.customer_id ,  T2.customer_first_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE card_type_code  =  \"Credit\""}
{"question": "What are the ids and first names of customers who do not hold a credit card?", "query": "SELECT customer_id ,  customer_first_name FROM Customers EXCEPT SELECT T1.customer_id ,  T2.customer_first_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE card_type_code  =  \"Credit\""}
{"question": "Show all card type codes.", "query": "SELECT DISTINCT card_type_code FROM Customers_Cards"}
{"question": "What are the different card type codes?", "query": "SELECT DISTINCT card_type_code FROM Customers_Cards"}
{"question": "Show the number of card types.", "query": "SELECT count(DISTINCT card_type_code) FROM Customers_Cards"}
{"question": "How many different card types are there?", "query": "SELECT count(DISTINCT card_type_code) FROM Customers_Cards"}
{"question": "Show all transaction types.", "query": "SELECT DISTINCT transaction_type FROM Financial_Transactions"}
{"question": "What are the different types of transactions?", "query": "SELECT DISTINCT transaction_type FROM Financial_Transactions"}
{"question": "Show the number of transaction types.", "query": "SELECT count(DISTINCT transaction_type) FROM Financial_Transactions"}
{"question": "How many different types of transactions are there?", "query": "SELECT count(DISTINCT transaction_type) FROM Financial_Transactions"}
{"question": "What is the average and total transaction amount?", "query": "SELECT avg(transaction_amount) ,  sum(transaction_amount) FROM Financial_transactions"}
{"question": "Return the average transaction amount, as well as the total amount of all transactions.", "query": "SELECT avg(transaction_amount) ,  sum(transaction_amount) FROM Financial_transactions"}
{"question": "Show the card type codes and the number of transactions.", "query": "SELECT T2.card_type_code ,  count(*) FROM Financial_transactions AS T1 JOIN Customers_cards AS T2 ON T1.card_id  =  T2.card_id GROUP BY T2.card_type_code"}
{"question": "What are the different card types, and how many transactions have been made with each?", "query": "SELECT T2.card_type_code ,  count(*) FROM Financial_transactions AS T1 JOIN Customers_cards AS T2 ON T1.card_id  =  T2.card_id GROUP BY T2.card_type_code"}
{"question": "Show the transaction type and the number of transactions.", "query": "SELECT transaction_type ,  count(*) FROM Financial_transactions GROUP BY transaction_type"}
{"question": "What are the different transaction types, and how many transactions of each have taken place?", "query": "SELECT transaction_type ,  count(*) FROM Financial_transactions GROUP BY transaction_type"}
{"question": "What is the transaction type that has processed the greatest total amount in transactions?", "query": "SELECT transaction_type FROM Financial_transactions GROUP BY transaction_type ORDER BY sum(transaction_amount) DESC LIMIT 1"}
{"question": "Return the type of transaction with the highest total amount.", "query": "SELECT transaction_type FROM Financial_transactions GROUP BY transaction_type ORDER BY sum(transaction_amount) DESC LIMIT 1"}
{"question": "Show the account id and the number of transactions for each account", "query": "SELECT account_id ,  count(*) FROM Financial_transactions GROUP BY account_id"}
{"question": "What are the different account ids that have made financial transactions, as well as how many transactions correspond to each?", "query": "SELECT account_id ,  count(*) FROM Financial_transactions GROUP BY account_id"}
{"question": "How many tracks do we have?", "query": "SELECT count(*) FROM track"}
{"question": "Count the number of tracks.", "query": "SELECT count(*) FROM track"}
{"question": "Show the name and location for all tracks.", "query": "SELECT name ,  LOCATION FROM track"}
{"question": "What are the names and locations of all tracks?", "query": "SELECT name ,  LOCATION FROM track"}
{"question": "Show names and seatings, ordered by seating for all tracks opened after 2000.", "query": "SELECT name ,  seating FROM track WHERE year_opened  >  2000 ORDER BY seating"}
{"question": "What are the names and seatings for all tracks opened after 2000, ordered by seating?", "query": "SELECT name ,  seating FROM track WHERE year_opened  >  2000 ORDER BY seating"}
{"question": "What is the name, location and seating for the most recently opened track?", "query": "SELECT name ,  LOCATION ,  seating FROM track ORDER BY year_opened DESC LIMIT 1"}
{"question": "Return the name, location, and seating of the track that was opened in the most recent year.", "query": "SELECT name ,  LOCATION ,  seating FROM track ORDER BY year_opened DESC LIMIT 1"}
{"question": "What is the minimum, maximum, and average seating for all tracks.", "query": "SELECT min(seating) ,  max(seating) ,  avg(seating) FROM track"}
{"question": "Return the minimum, maximum, and average seating across all tracks.", "query": "SELECT min(seating) ,  max(seating) ,  avg(seating) FROM track"}
{"question": "Show the name, location, open year for all tracks with a seating higher than the average.", "query": "SELECT name ,  LOCATION ,  year_opened FROM track WHERE seating  >  (SELECT avg(seating) FROM track)"}
{"question": "What are the names, locations, and years of opening for tracks with seating higher than average?", "query": "SELECT name ,  LOCATION ,  year_opened FROM track WHERE seating  >  (SELECT avg(seating) FROM track)"}
{"question": "What are distinct locations where tracks are located?", "query": "SELECT DISTINCT LOCATION FROM track"}
{"question": "Give the different locations of tracks.", "query": "SELECT DISTINCT LOCATION FROM track"}
{"question": "How many races are there?", "query": "SELECT count(*) FROM race"}
{"question": "Count the number of races.", "query": "SELECT count(*) FROM race"}
{"question": "What are the distinct classes that races can have?", "query": "SELECT DISTINCT CLASS FROM race"}
{"question": "Return the different classes of races.", "query": "SELECT DISTINCT CLASS FROM race"}
{"question": "Show name, class, and date for all races.", "query": "SELECT name ,  CLASS ,  date FROM race"}
{"question": "What are the names, classes, and dates for all races?", "query": "SELECT name ,  CLASS ,  date FROM race"}
{"question": "Show the race class and number of races in each class.", "query": "SELECT CLASS ,  count(*) FROM race GROUP BY CLASS"}
{"question": "What are the different classes of races, and how many races correspond to each?", "query": "SELECT CLASS ,  count(*) FROM race GROUP BY CLASS"}
{"question": "What is the race class with most number of races.", "query": "SELECT CLASS FROM race GROUP BY CLASS ORDER BY count(*) DESC LIMIT 1"}
{"question": "Give the class of races that is most common.", "query": "SELECT CLASS FROM race GROUP BY CLASS ORDER BY count(*) DESC LIMIT 1"}
{"question": "List the race class with at least two races.", "query": "SELECT CLASS FROM race GROUP BY CLASS HAVING count(*)  >=  2"}
{"question": "What are the classes of races that have two or more corresponding races?", "query": "SELECT CLASS FROM race GROUP BY CLASS HAVING count(*)  >=  2"}
{"question": "What are the names for tracks without a race in class 'GT'.", "query": "SELECT name FROM track EXCEPT SELECT T2.name FROM race AS T1 JOIN track AS T2 ON T1.track_id  =  T2.track_id WHERE T1.class  =  'GT'"}
{"question": "Give the names of tracks that do not have a race in the class 'GT'.", "query": "SELECT name FROM track EXCEPT SELECT T2.name FROM race AS T1 JOIN track AS T2 ON T1.track_id  =  T2.track_id WHERE T1.class  =  'GT'"}
{"question": "Show all track names that have had no races.", "query": "SELECT name FROM track WHERE track_id NOT IN (SELECT track_id FROM race)"}
{"question": "Return the names of tracks that have no had any races.", "query": "SELECT name FROM track WHERE track_id NOT IN (SELECT track_id FROM race)"}
{"question": "Show year where a track with a seating at least 5000 opened and a track with seating no more than 4000 opened.", "query": "SELECT year_opened FROM track WHERE seating BETWEEN 4000 AND 5000"}
{"question": "What are the years of opening for tracks with seating between 4000 and 5000?", "query": "SELECT year_opened FROM track WHERE seating BETWEEN 4000 AND 5000"}
{"question": "Show the name of track and the number of races in each track.", "query": "SELECT T2.name ,  count(*) FROM race AS T1 JOIN track AS T2 ON T1.track_id  =  T2.track_id GROUP BY T1.track_id"}
{"question": "What are the names of different tracks, and how many races has each had?", "query": "SELECT T2.name ,  count(*) FROM race AS T1 JOIN track AS T2 ON T1.track_id  =  T2.track_id GROUP BY T1.track_id"}
{"question": "Show the name of track with most number of races.", "query": "SELECT T2.name FROM race AS T1 JOIN track AS T2 ON T1.track_id  =  T2.track_id GROUP BY T1.track_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "What is the name of the track that has had the greatest number of races?", "query": "SELECT T2.name FROM race AS T1 JOIN track AS T2 ON T1.track_id  =  T2.track_id GROUP BY T1.track_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "Show the name and date for each race and its track name.", "query": "SELECT T1.name ,  T1.date ,  T2.name FROM race AS T1 JOIN track AS T2 ON T1.track_id  =  T2.track_id"}
{"question": "What are the names and dates of races, and the names of the tracks where they are held?", "query": "SELECT T1.name ,  T1.date ,  T2.name FROM race AS T1 JOIN track AS T2 ON T1.track_id  =  T2.track_id"}
{"question": "Show the name and location of track with 1 race.", "query": "SELECT T2.name ,  T2.location FROM race AS T1 JOIN track AS T2 ON T1.track_id  =  T2.track_id GROUP BY T1.track_id HAVING count(*)  =  1"}
{"question": "What are the names and locations of tracks that have had exactly 1 race?", "query": "SELECT T2.name ,  T2.location FROM race AS T1 JOIN track AS T2 ON T1.track_id  =  T2.track_id GROUP BY T1.track_id HAVING count(*)  =  1"}
{"question": "Find the locations where have both tracks with more than 90000 seats and tracks with less than 70000 seats.", "query": "SELECT LOCATION FROM track WHERE seating  >  90000 INTERSECT SELECT LOCATION FROM track WHERE seating  <  70000"}
{"question": "What are the locations that have both tracks with more than 90000 seats, and tracks with fewer than 70000 seats?", "query": "SELECT LOCATION FROM track WHERE seating  >  90000 INTERSECT SELECT LOCATION FROM track WHERE seating  <  70000"}
{"question": "How many members have the black membership card?", "query": "SELECT count(*) FROM member WHERE Membership_card  =  'Black'"}
{"question": "Find the number of members living in each address.", "query": "SELECT count(*) ,  address FROM member GROUP BY address"}
{"question": "Give me the names of members whose address is in Harford or Waterbury.", "query": "SELECT name FROM member WHERE address  =  'Harford' OR address  =  'Waterbury'"}
{"question": "Find the ids and names of members who are under age 30 or with black membership card.", "query": "SELECT name ,  member_id FROM member WHERE Membership_card  =  'Black' OR age  <  30"}
{"question": "Find the purchase time, age and address of each member, and show the results in the order of purchase time.", "query": "SELECT Time_of_purchase ,  age ,  address FROM member ORDER BY Time_of_purchase"}
{"question": "Which membership card has more than 5 members?", "query": "SELECT Membership_card FROM member GROUP BY Membership_card HAVING count(*)  >  5"}
{"question": "Which address has both members younger than 30 and members older than 40?", "query": "SELECT address FROM member WHERE age  <  30 INTERSECT SELECT address FROM member WHERE age  >  40"}
{"question": "What is the membership card held by both members living in Hartford and ones living in Waterbury address?", "query": "SELECT membership_card FROM member WHERE address  =  'Hartford' INTERSECT SELECT membership_card FROM member WHERE address  =  'Waterbury'"}
{"question": "How many members are not living in Hartford?", "query": "SELECT count(*) FROM member WHERE address != 'Hartford'"}
{"question": "Which address do not have any member with the black membership card?", "query": "SELECT address FROM member EXCEPT SELECT address FROM member WHERE Membership_card  =  'Black'"}
{"question": "Show the shop addresses ordered by their opening year.", "query": "SELECT address FROM shop ORDER BY open_year"}
{"question": "What are the average score and average staff number of all shops?", "query": "SELECT avg(num_of_staff) ,  avg(score) FROM shop"}
{"question": "Find the id and address of the shops whose score is below the average score.", "query": "SELECT shop_id ,  address FROM shop WHERE score  <  (SELECT avg(score) FROM shop)"}
{"question": "Find the address and staff number of the shops that do not have any happy hour.", "query": "SELECT address ,  num_of_staff FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM happy_hour)"}
{"question": "What are the id and address of the shops which have a happy hour in May?", "query": "SELECT t1.address ,  t1.shop_id FROM shop AS t1 JOIN happy_hour AS t2 ON t1.shop_id  =  t2.shop_id WHERE MONTH  =  'May'"}
{"question": "which shop has happy hour most frequently? List its id and number of happy hours.", "query": "SELECT shop_id ,  count(*) FROM happy_hour GROUP BY shop_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "Which month has the most happy hours?", "query": "SELECT MONTH FROM happy_hour GROUP BY MONTH ORDER BY count(*) DESC LIMIT 1"}
{"question": "Which months have more than 2 happy hours?", "query": "SELECT MONTH FROM happy_hour GROUP BY MONTH HAVING count(*)  >  2"}
{"question": "How many albums are there?", "query": "SELECT count(*) FROM ALBUM"}
{"question": "Find the number of albums.", "query": "SELECT count(*) FROM ALBUM"}
{"question": "List the names of all music genres.", "query": "SELECT Name FROM GENRE"}
{"question": "What are the names of different music genres?", "query": "SELECT Name FROM GENRE"}
{"question": "Find all the customer information in state NY.", "query": "SELECT * FROM CUSTOMER WHERE State  =  \"NY\""}
{"question": "What is all the customer information for customers in NY state?", "query": "SELECT * FROM CUSTOMER WHERE State  =  \"NY\""}
{"question": "What are the first names and last names of the employees who live in Calgary city.", "query": "SELECT FirstName ,  LastName FROM EMPLOYEE WHERE City  =  \"Calgary\""}
{"question": "Find the full names of employees living in the city of Calgary.", "query": "SELECT FirstName ,  LastName FROM EMPLOYEE WHERE City  =  \"Calgary\""}
{"question": "What are the distinct billing countries of the invoices?", "query": "SELECT distinct(BillingCountry) FROM INVOICE"}
{"question": "Find the different billing countries for all invoices.", "query": "SELECT distinct(BillingCountry) FROM INVOICE"}
{"question": "Find the names of all artists that have \"a\" in their names.", "query": "SELECT Name FROM ARTIST WHERE Name LIKE \"%a%\""}
{"question": "What are the names of artist who have the letter 'a' in their names?", "query": "SELECT Name FROM ARTIST WHERE Name LIKE \"%a%\""}
{"question": "Find the title of all the albums of the artist \"AC/DC\".", "query": "SELECT Title FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId WHERE T2.Name  =  \"AC/DC\""}
{"question": "What are the titles of albums by the artist \"AC/DC\"?", "query": "SELECT Title FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId WHERE T2.Name  =  \"AC/DC\""}
{"question": "Hom many albums does the artist \"Metallica\" have?", "query": "SELECT COUNT(*) FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId WHERE T2.Name  =  \"Metallica\""}
{"question": "Find the number of albums by the artist \"Metallica\".", "query": "SELECT COUNT(*) FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId WHERE T2.Name  =  \"Metallica\""}
{"question": "Which artist does the album \"Balls to the Wall\" belong to?", "query": "SELECT T2.Name FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId WHERE T1.Title  =  \"Balls to the Wall\""}
{"question": "Find the name of the artist who made the album \"Balls to the Wall\".", "query": "SELECT T2.Name FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId WHERE T1.Title  =  \"Balls to the Wall\""}
{"question": "Which artist has the most albums?", "query": "SELECT T2.Name FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId GROUP BY T2.Name ORDER BY COUNT(*) DESC LIMIT 1"}
{"question": "What is the name of the artist with the greatest number of albums?", "query": "SELECT T2.Name FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId GROUP BY T2.Name ORDER BY COUNT(*) DESC LIMIT 1"}
{"question": "Find the names of all the tracks that contain the word \"you\".", "query": "SELECT Name FROM TRACK WHERE Name LIKE '%you%'"}
{"question": "What are the names of tracks that contain the the word you in them?", "query": "SELECT Name FROM TRACK WHERE Name LIKE '%you%'"}
{"question": "What is the average unit price of all the tracks?", "query": "SELECT AVG(UnitPrice) FROM TRACK"}
{"question": "Find the average unit price for a track.", "query": "SELECT AVG(UnitPrice) FROM TRACK"}
{"question": "What are the durations of the longest and the shortest tracks in milliseconds?", "query": "SELECT max(Milliseconds) ,  min(Milliseconds) FROM TRACK"}
{"question": "Find the maximum and minimum durations of tracks in milliseconds.", "query": "SELECT max(Milliseconds) ,  min(Milliseconds) FROM TRACK"}
{"question": "Show the album names, ids and the number of tracks for each album.", "query": "SELECT T1.Title ,  T2.AlbumID ,  COUNT(*) FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId  =  T2.AlbumId GROUP BY T2.AlbumID"}
{"question": "What are the names and ids of the different albums, and how many tracks are on each?", "query": "SELECT T1.Title ,  T2.AlbumID ,  COUNT(*) FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId  =  T2.AlbumId GROUP BY T2.AlbumID"}
{"question": "What is the name of the most common genre in all tracks?", "query": "SELECT T1.Name FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId GROUP BY T2.GenreId ORDER BY COUNT(*) DESC LIMIT 1"}
{"question": "Find the name of the genre that is most frequent across all tracks.", "query": "SELECT T1.Name FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId GROUP BY T2.GenreId ORDER BY COUNT(*) DESC LIMIT 1"}
{"question": "What is the least common media type in all tracks?", "query": "SELECT T1.Name FROM MEDIATYPE AS T1 JOIN TRACK AS T2 ON T1.MediaTypeId  =  T2.MediaTypeId GROUP BY T2.MediaTypeId ORDER BY COUNT(*) ASC LIMIT 1"}
{"question": "What is the name of the media type that is least common across all tracks?", "query": "SELECT T1.Name FROM MEDIATYPE AS T1 JOIN TRACK AS T2 ON T1.MediaTypeId  =  T2.MediaTypeId GROUP BY T2.MediaTypeId ORDER BY COUNT(*) ASC LIMIT 1"}
{"question": "Show the album names and ids for albums that contain tracks with unit price bigger than 1.", "query": "SELECT T1.Title ,  T2.AlbumID FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId  =  T2.AlbumId WHERE T2.UnitPrice  >  1 GROUP BY T2.AlbumID"}
{"question": "What are the titles and ids for albums containing tracks with unit price greater than 1?", "query": "SELECT T1.Title ,  T2.AlbumID FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId  =  T2.AlbumId WHERE T2.UnitPrice  >  1 GROUP BY T2.AlbumID"}
{"question": "How many tracks belong to rock genre?", "query": "SELECT COUNT(*) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  \"Rock\""}
{"question": "Count the number of tracks that are part of the rock genre.", "query": "SELECT COUNT(*) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  \"Rock\""}
{"question": "What is the average unit price of tracks that belong to Jazz genre?", "query": "SELECT AVG(UnitPrice) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  \"Jazz\""}
{"question": "Find the average unit price of jazz tracks.", "query": "SELECT AVG(UnitPrice) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  \"Jazz\""}
{"question": "What is the first name and last name of the customer that has email \"luisg@embraer.com.br\"?", "query": "SELECT FirstName ,  LastName FROM CUSTOMER WHERE Email  =  \"luisg@embraer.com.br\""}
{"question": "Find the full name of the customer with the email \"luisg@embraer.com.br\".", "query": "SELECT FirstName ,  LastName FROM CUSTOMER WHERE Email  =  \"luisg@embraer.com.br\""}
{"question": "How many customers have email that contains \"gmail.com\"?", "query": "SELECT COUNT(*) FROM CUSTOMER WHERE Email LIKE \"%gmail.com%\""}
{"question": "Count the number of customers that have an email containing \"gmail.com\".", "query": "SELECT COUNT(*) FROM CUSTOMER WHERE Email LIKE \"%gmail.com%\""}
{"question": "What is the first name and last name employee helps the customer with first name Leonie?", "query": "SELECT T2.FirstName ,  T2.LastName FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId  =  T2.EmployeeId WHERE T1.FirstName  =  \"Leonie\""}
{"question": "Find the full names of employees who help customers with the first name Leonie.", "query": "SELECT T2.FirstName ,  T2.LastName FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId  =  T2.EmployeeId WHERE T1.FirstName  =  \"Leonie\""}
{"question": "What city does the employee who helps the customer with postal code 70174 live in?", "query": "SELECT T2.City FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId  =  T2.EmployeeId WHERE T1.PostalCode  =  \"70174\""}
{"question": "Find the cities corresponding to employees who help customers with the postal code 70174.", "query": "SELECT T2.City FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId  =  T2.EmployeeId WHERE T1.PostalCode  =  \"70174\""}
{"question": "How many distinct cities does the employees live in?", "query": "SELECT COUNT(DISTINCT city) FROM EMPLOYEE"}
{"question": "Find the number of different cities that employees live in.", "query": "SELECT COUNT(DISTINCT city) FROM EMPLOYEE"}
{"question": "Find all invoice dates corresponding to customers with first name Astrid and last name Gruber.", "query": "SELECT T2.InvoiceDate FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId  =  T2.CustomerId WHERE T1.FirstName  =  \"Astrid\" AND LastName  =  \"Gruber\""}
{"question": "What are the invoice dates for customers with the first name Astrid and the last name Gruber?", "query": "SELECT T2.InvoiceDate FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId  =  T2.CustomerId WHERE T1.FirstName  =  \"Astrid\" AND LastName  =  \"Gruber\""}
{"question": "Find all the customer last names that do not have invoice totals larger than 20.", "query": "SELECT LastName FROM CUSTOMER EXCEPT SELECT T1.LastName FROM CUSTOMER AS T1 JOIN Invoice AS T2 ON T1.CustomerId  =  T2.CustomerId WHERE T2.total  >  20"}
{"question": "What are the last names of customers without invoice totals exceeding 20?", "query": "SELECT LastName FROM CUSTOMER EXCEPT SELECT T1.LastName FROM CUSTOMER AS T1 JOIN Invoice AS T2 ON T1.CustomerId  =  T2.CustomerId WHERE T2.total  >  20"}
{"question": "Find the first names of all customers that live in Brazil and have an invoice.", "query": "SELECT DISTINCT T1.FirstName FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId  =  T2.CustomerId WHERE T1.country  =  \"Brazil\""}
{"question": "What are the different first names for customers from Brazil who have also had an invoice?", "query": "SELECT DISTINCT T1.FirstName FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId  =  T2.CustomerId WHERE T1.country  =  \"Brazil\""}
{"question": "Find the address of all customers that live in Germany and have invoice.", "query": "SELECT DISTINCT T1.Address FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId  =  T2.CustomerId WHERE T1.country  =  \"Germany\""}
{"question": "What are the addresses of customers living in Germany who have had an invoice?", "query": "SELECT DISTINCT T1.Address FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId  =  T2.CustomerId WHERE T1.country  =  \"Germany\""}
{"question": "List the phone numbers of all employees.", "query": "SELECT Phone FROM EMPLOYEE"}
{"question": "What are the phone numbers for each employee?", "query": "SELECT Phone FROM EMPLOYEE"}
{"question": "How many tracks are in the AAC audio file media type?", "query": "SELECT COUNT(*) FROM MEDIATYPE AS T1 JOIN TRACK AS T2 ON T1.MediaTypeId  =  T2.MediaTypeId WHERE T1.Name  =  \"AAC audio file\""}
{"question": "Count the number of tracks that are of the media type \"AAC audio file\".", "query": "SELECT COUNT(*) FROM MEDIATYPE AS T1 JOIN TRACK AS T2 ON T1.MediaTypeId  =  T2.MediaTypeId WHERE T1.Name  =  \"AAC audio file\""}
{"question": "What is the average duration in milliseconds of tracks that belong to Latin or Pop genre?", "query": "SELECT AVG(Milliseconds) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  \"Latin\" OR T1.Name  =  \"Pop\""}
{"question": "Find the average millisecond length of Latin and Pop tracks.", "query": "SELECT AVG(Milliseconds) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  \"Latin\" OR T1.Name  =  \"Pop\""}
{"question": "Please show the employee first names and ids of employees who serve at least 10 customers.", "query": "SELECT T1.FirstName ,  T1.SupportRepId FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId  =  T2.EmployeeId GROUP BY T1.SupportRepId HAVING COUNT(*)  >=  10"}
{"question": "What are the first names and support rep ids for employees serving 10 or more customers?", "query": "SELECT T1.FirstName ,  T1.SupportRepId FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId  =  T2.EmployeeId GROUP BY T1.SupportRepId HAVING COUNT(*)  >=  10"}
{"question": "Please show the employee last names that serves no more than 20 customers.", "query": "SELECT T1.LastName FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId  =  T2.EmployeeId GROUP BY T1.SupportRepId HAVING COUNT(*)  <=  20"}
{"question": "What are the last names of employees who serve at most 20 customers?", "query": "SELECT T1.LastName FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId  =  T2.EmployeeId GROUP BY T1.SupportRepId HAVING COUNT(*)  <=  20"}
{"question": "Please list all album titles in alphabetical order.", "query": "SELECT Title FROM ALBUM ORDER BY Title"}
{"question": "What are all the album titles, in alphabetical order?", "query": "SELECT Title FROM ALBUM ORDER BY Title"}
{"question": "Please list the name and id of all artists that have at least 3 albums in alphabetical order.", "query": "SELECT T2.Name ,  T1.ArtistId FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistID GROUP BY T1.ArtistId HAVING COUNT(*)  >=  3 ORDER BY T2.Name"}
{"question": "What are the names and ids of artists with 3 or more albums, listed in alphabetical order?", "query": "SELECT T2.Name ,  T1.ArtistId FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistID GROUP BY T1.ArtistId HAVING COUNT(*)  >=  3 ORDER BY T2.Name"}
{"question": "Find the names of artists that do not have any albums.", "query": "SELECT Name FROM ARTIST EXCEPT SELECT T2.Name FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId"}
{"question": "What are the names of artists who have not released any albums?", "query": "SELECT Name FROM ARTIST EXCEPT SELECT T2.Name FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId"}
{"question": "What is the average unit price of rock tracks?", "query": "SELECT AVG(T2.UnitPrice) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  \"Rock\""}
{"question": "Find the average unit price of tracks from the Rock genre.", "query": "SELECT AVG(T2.UnitPrice) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  \"Rock\""}
{"question": "What are the duration of the longest and shortest pop tracks in milliseconds?", "query": "SELECT max(Milliseconds) ,  min(Milliseconds) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  \"Pop\""}
{"question": "Find the maximum and minimum millisecond lengths of pop tracks.", "query": "SELECT max(Milliseconds) ,  min(Milliseconds) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  \"Pop\""}
{"question": "What are the birth dates of employees living in Edmonton?", "query": "SELECT BirthDate FROM EMPLOYEE WHERE City  =  \"Edmonton\""}
{"question": "Find the birth dates corresponding to employees who live in the city of Edmonton.", "query": "SELECT BirthDate FROM EMPLOYEE WHERE City  =  \"Edmonton\""}
{"question": "What are the distinct unit prices of all tracks?", "query": "SELECT distinct(UnitPrice) FROM TRACK"}
{"question": "Find the distinct unit prices for tracks.", "query": "SELECT distinct(UnitPrice) FROM TRACK"}
{"question": "How many artists do not have any album?", "query": "SELECT count(*) FROM ARTIST WHERE artistid NOT IN(SELECT artistid FROM ALBUM)"}
{"question": "Cound the number of artists who have not released an album.", "query": "SELECT count(*) FROM ARTIST WHERE artistid NOT IN(SELECT artistid FROM ALBUM)"}
{"question": "What are the album titles for albums containing both 'Reggae' and 'Rock' genre tracks?", "query": "SELECT T1.Title FROM Album AS T1 JOIN Track AS T2 ON T1.AlbumId  =  T2.AlbumId JOIN Genre AS T3 ON T2.GenreID  =  T3.GenreID WHERE T3.Name  =  'Reggae' INTERSECT SELECT T1.Title FROM Album AS T1 JOIN Track AS T2 ON T1.AlbumId  =  T2.AlbumId JOIN Genre AS T3 ON T2.GenreID  =  T3.GenreID WHERE T3.Name  =  'Rock'"}
{"question": "Find the titles of albums that contain tracks of both the Reggae and Rock genres.", "query": "SELECT T1.Title FROM Album AS T1 JOIN Track AS T2 ON T1.AlbumId  =  T2.AlbumId JOIN Genre AS T3 ON T2.GenreID  =  T3.GenreID WHERE T3.Name  =  'Reggae' INTERSECT SELECT T1.Title FROM Album AS T1 JOIN Track AS T2 ON T1.AlbumId  =  T2.AlbumId JOIN Genre AS T3 ON T2.GenreID  =  T3.GenreID WHERE T3.Name  =  'Rock'"}
{"question": "Find all the phone numbers.", "query": "SELECT customer_phone FROM available_policies"}
{"question": "What are all the phone numbers?", "query": "SELECT customer_phone FROM available_policies"}
{"question": "What are the customer phone numbers under the policy \"Life Insurance\"?", "query": "SELECT customer_phone FROM available_policies WHERE policy_type_code  =  \"Life Insurance\""}
{"question": "What are the phone numbers of customers using the policy with the code \"Life Insurance\"?", "query": "SELECT customer_phone FROM available_policies WHERE policy_type_code  =  \"Life Insurance\""}
{"question": "Which policy type has the most records in the database?", "query": "SELECT policy_type_code FROM available_policies GROUP BY policy_type_code ORDER BY count(*) DESC LIMIT 1"}
{"question": "Which policy type appears most frequently in the available policies?", "query": "SELECT policy_type_code FROM available_policies GROUP BY policy_type_code ORDER BY count(*) DESC LIMIT 1"}
{"question": "What are all the customer phone numbers under the most popular policy type?", "query": "SELECT customer_phone FROM available_policies WHERE policy_type_code  =  (SELECT policy_type_code FROM available_policies GROUP BY policy_type_code ORDER BY count(*) DESC LIMIT 1)"}
{"question": "Find the phone numbers of customers using the most common policy type among the available policies.", "query": "SELECT customer_phone FROM available_policies WHERE policy_type_code  =  (SELECT policy_type_code FROM available_policies GROUP BY policy_type_code ORDER BY count(*) DESC LIMIT 1)"}
{"question": "Find the policy type used by more than 4 customers.", "query": "SELECT policy_type_code FROM available_policies GROUP BY policy_type_code HAVING count(*)  >  4"}
{"question": "Find the policy types more than 4 customers use. Show their type code.", "query": "SELECT policy_type_code FROM available_policies GROUP BY policy_type_code HAVING count(*)  >  4"}
{"question": "Find the total and average amount of settlements.", "query": "SELECT sum(settlement_amount) ,  avg(settlement_amount) FROM settlements"}
{"question": "Return the sum and average of all settlement amounts.", "query": "SELECT sum(settlement_amount) ,  avg(settlement_amount) FROM settlements"}
{"question": "Find the name of services that have been used for more than 2 times in first notification of loss.", "query": "SELECT t2.service_name FROM first_notification_of_loss AS t1 JOIN services AS t2 ON t1.service_id  =  t2.service_id GROUP BY t1.service_id HAVING count(*)  >  2"}
{"question": "Which services have been used more than twice in first notification of loss? Return the service name.", "query": "SELECT t2.service_name FROM first_notification_of_loss AS t1 JOIN services AS t2 ON t1.service_id  =  t2.service_id GROUP BY t1.service_id HAVING count(*)  >  2"}
{"question": "What is the effective date of the claim that has the largest amount of total settlement?", "query": "SELECT t1.Effective_Date FROM claims AS t1 JOIN settlements AS t2 ON t1.claim_id  =  t2.claim_id GROUP BY t1.claim_id ORDER BY sum(t2.settlement_amount) DESC LIMIT 1"}
{"question": "Find the claim that has the largest total settlement amount. Return the effective date of the claim.", "query": "SELECT t1.Effective_Date FROM claims AS t1 JOIN settlements AS t2 ON t1.claim_id  =  t2.claim_id GROUP BY t1.claim_id ORDER BY sum(t2.settlement_amount) DESC LIMIT 1"}
{"question": "How many policies are listed for the customer named \"Dayana Robel\"?", "query": "SELECT count(*) FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.customer_name  =  \"Dayana Robel\""}
{"question": "Count the total number of policies used by the customer named \"Dayana Robel\".", "query": "SELECT count(*) FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.customer_name  =  \"Dayana Robel\""}
{"question": "What is the name of the customer who has the most policies listed?", "query": "SELECT t1.customer_name FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id GROUP BY t1.customer_name ORDER BY count(*) DESC LIMIT 1"}
{"question": "Which customer uses the most policies? Give me the customer name.", "query": "SELECT t1.customer_name FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id GROUP BY t1.customer_name ORDER BY count(*) DESC LIMIT 1"}
{"question": "What are all the policy types of the customer named \"Dayana Robel\"?", "query": "SELECT DISTINCT t3.policy_type_code FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id JOIN available_policies AS t3 ON t2.policy_id  =  t3.policy_id WHERE t1.customer_name  =  \"Dayana Robel\""}
{"question": "Tell me the types of the policy used by the customer named \"Dayana Robel\".", "query": "SELECT DISTINCT t3.policy_type_code FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id JOIN available_policies AS t3 ON t2.policy_id  =  t3.policy_id WHERE t1.customer_name  =  \"Dayana Robel\""}
{"question": "What are all the policy types of the customer that has the most policies listed?", "query": "SELECT DISTINCT t3.policy_type_code FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id JOIN available_policies AS t3 ON t2.policy_id  =  t3.policy_id WHERE t1.customer_name  =  (SELECT t1.customer_name FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id GROUP BY t1.customer_name ORDER BY count(*) DESC LIMIT 1)"}
{"question": "List all the policy types used by the customer enrolled in the most policies.", "query": "SELECT DISTINCT t3.policy_type_code FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id JOIN available_policies AS t3 ON t2.policy_id  =  t3.policy_id WHERE t1.customer_name  =  (SELECT t1.customer_name FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id GROUP BY t1.customer_name ORDER BY count(*) DESC LIMIT 1)"}
{"question": "List all the services in the alphabetical order.", "query": "SELECT service_name FROM services ORDER BY service_name"}
{"question": "Give me a list of all the service names sorted alphabetically.", "query": "SELECT service_name FROM services ORDER BY service_name"}
{"question": "How many services are there?", "query": "SELECT count(*) FROM services"}
{"question": "Count the total number of available services.", "query": "SELECT count(*) FROM services"}
{"question": "Find the names of users who do not have a first notification of loss record.", "query": "SELECT customer_name FROM customers EXCEPT SELECT t1.customer_name FROM customers AS t1 JOIN first_notification_of_loss AS t2 ON t1.customer_id  =  t2.customer_id"}
{"question": "Which customers do not have a first notification of loss record? Give me the customer names.", "query": "SELECT customer_name FROM customers EXCEPT SELECT t1.customer_name FROM customers AS t1 JOIN first_notification_of_loss AS t2 ON t1.customer_id  =  t2.customer_id"}
{"question": "Find the names of customers who have used either the service \"Close a policy\" or the service \"Upgrade a policy\".", "query": "SELECT t1.customer_name FROM customers AS t1 JOIN first_notification_of_loss AS t2 ON t1.customer_id  =  t2.customer_id JOIN services AS t3 ON t2.service_id  =  t3.service_id WHERE t3.service_name  =  \"Close a policy\" OR t3.service_name  =  \"Upgrade a policy\""}
{"question": "Which customers have used the service named \"Close a policy\" or \"Upgrade a policy\"? Give me the customer names.", "query": "SELECT t1.customer_name FROM customers AS t1 JOIN first_notification_of_loss AS t2 ON t1.customer_id  =  t2.customer_id JOIN services AS t3 ON t2.service_id  =  t3.service_id WHERE t3.service_name  =  \"Close a policy\" OR t3.service_name  =  \"Upgrade a policy\""}
{"question": "Find the names of customers who have used both the service \"Close a policy\" and the service \"New policy application\".", "query": "SELECT t1.customer_name FROM customers AS t1 JOIN first_notification_of_loss AS t2 ON t1.customer_id  =  t2.customer_id JOIN services AS t3 ON t2.service_id  =  t3.service_id WHERE t3.service_name  =  \"Close a policy\" INTERSECT SELECT t1.customer_name FROM customers AS t1 JOIN first_notification_of_loss AS t2 ON t1.customer_id  =  t2.customer_id JOIN services AS t3 ON t2.service_id  =  t3.service_id WHERE t3.service_name  =  \"New policy application\""}
{"question": "Which customers have used both the service named \"Close a policy\" and the service named \"Upgrade a policy\"? Give me the customer names.", "query": "SELECT t1.customer_name FROM customers AS t1 JOIN first_notification_of_loss AS t2 ON t1.customer_id  =  t2.customer_id JOIN services AS t3 ON t2.service_id  =  t3.service_id WHERE t3.service_name  =  \"Close a policy\" INTERSECT SELECT t1.customer_name FROM customers AS t1 JOIN first_notification_of_loss AS t2 ON t1.customer_id  =  t2.customer_id JOIN services AS t3 ON t2.service_id  =  t3.service_id WHERE t3.service_name  =  \"New policy application\""}
{"question": "Find the IDs of customers whose name contains \"Diana\".", "query": "SELECT customer_id FROM customers WHERE customer_name LIKE \"%Diana%\""}
{"question": "What are the IDs of customers who have \"Diana\" in part of their names?", "query": "SELECT customer_id FROM customers WHERE customer_name LIKE \"%Diana%\""}
{"question": "What are the maximum and minimum settlement amount on record?", "query": "SELECT max(settlement_amount) ,  min(settlement_amount) FROM settlements"}
{"question": "Find the maximum and minimum settlement amount.", "query": "SELECT max(settlement_amount) ,  min(settlement_amount) FROM settlements"}
{"question": "List all the customers in increasing order of IDs.", "query": "SELECT customer_id ,  customer_name FROM customers ORDER BY customer_id ASC"}
{"question": "What is the ordered list of customer ids?", "query": "SELECT customer_id ,  customer_name FROM customers ORDER BY customer_id ASC"}
{"question": "Retrieve the open and close dates of all the policies associated with the customer whose name contains \"Diana\"", "query": "SELECT t2.date_opened ,  t2.date_closed FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.customer_name LIKE \"%Diana%\""}
{"question": "What are the open and close dates of all the policies used by the customer who have \"Diana\" in part of their names?", "query": "SELECT t2.date_opened ,  t2.date_closed FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.customer_name LIKE \"%Diana%\""}
{"question": "How many kinds of enzymes are there?", "query": "SELECT count(*) FROM enzyme"}
{"question": "What is the total count of enzymes?", "query": "SELECT count(*) FROM enzyme"}
{"question": "List the name of enzymes in descending lexicographical order.", "query": "SELECT name FROM enzyme ORDER BY name DESC"}
{"question": "What are the names of enzymes in descending order?", "query": "SELECT name FROM enzyme ORDER BY name DESC"}
{"question": "List the names and the locations that the enzymes can make an effect.", "query": "SELECT name ,  LOCATION FROM enzyme"}
{"question": "What are the names and locations of all enzymes listed?", "query": "SELECT name ,  LOCATION FROM enzyme"}
{"question": "What is the maximum Online Mendelian Inheritance in Man (OMIM) value of the enzymes?", "query": "SELECT max(OMIM) FROM enzyme"}
{"question": "What is the maximum OMIM value in the database?", "query": "SELECT max(OMIM) FROM enzyme"}
{"question": "What is the product, chromosome and porphyria related to the enzymes which take effect at the location 'Cytosol'?", "query": "SELECT product ,  chromosome ,  porphyria FROM enzyme WHERE LOCATION  =  'Cytosol'"}
{"question": "What is the product, chromosome, and porphyria of the enzymes located at 'Cytosol'?", "query": "SELECT product ,  chromosome ,  porphyria FROM enzyme WHERE LOCATION  =  'Cytosol'"}
{"question": "What are the names of enzymes who does not produce 'Heme'?", "query": "SELECT name FROM enzyme WHERE product != 'Heme'"}
{"question": "What are the names of enzymes whose product is not 'Heme'?", "query": "SELECT name FROM enzyme WHERE product != 'Heme'"}
{"question": "What are the names and trade names of the medicines which has 'Yes' value in the FDA record?", "query": "SELECT name ,  trade_name FROM medicine WHERE FDA_approved  =  'Yes'"}
{"question": "What are the names and trade names of the medcines that are FDA approved?", "query": "SELECT name ,  trade_name FROM medicine WHERE FDA_approved  =  'Yes'"}
{"question": "What are the names of enzymes in the medicine named 'Amisulpride' that can serve as an 'inhibitor'?", "query": "SELECT T1.name FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T1.id  =  T2.enzyme_id JOIN medicine AS T3 ON T2.medicine_id  =  T3.id WHERE T3.name  =  'Amisulpride' AND T2.interaction_type  =  'inhibitor'"}
{"question": "What are the names of the enzymes used in the medicine  Amisulpride that acts as inhibitors?", "query": "SELECT T1.name FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T1.id  =  T2.enzyme_id JOIN medicine AS T3 ON T2.medicine_id  =  T3.id WHERE T3.name  =  'Amisulpride' AND T2.interaction_type  =  'inhibitor'"}
{"question": "What are the ids and names of the medicine that can interact with two or more enzymes?", "query": "SELECT T1.id ,  T1.Name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id GROUP BY T1.id HAVING count(*)  >=  2"}
{"question": "For every medicine id, what are the names of the medicines that can interact with more than one enzyme?", "query": "SELECT T1.id ,  T1.Name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id GROUP BY T1.id HAVING count(*)  >=  2"}
{"question": "What are the ids, names and FDA approval status of medicines in descending order of the number of enzymes that it can interact with.", "query": "SELECT T1.id ,  T1.Name ,  T1.FDA_approved FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id GROUP BY T1.id ORDER BY count(*) DESC"}
{"question": "What are the ids, names, and FDA approval status for medicines ordered by descending number of possible enzyme interactions?", "query": "SELECT T1.id ,  T1.Name ,  T1.FDA_approved FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id GROUP BY T1.id ORDER BY count(*) DESC"}
{"question": "What is the id and name of the enzyme with most number of medicines that can interact as 'activator'?", "query": "SELECT T1.id ,  T1.name FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T1.id  =  T2.enzyme_id WHERE T2.interaction_type  =  'activitor' GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1"}
{"question": "What is the id and name of the enzyme that can interact with the most medicines as an activator?", "query": "SELECT T1.id ,  T1.name FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T1.id  =  T2.enzyme_id WHERE T2.interaction_type  =  'activitor' GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1"}
{"question": "What is the interaction type of the enzyme named 'ALA synthase' and the medicine named 'Aripiprazole'?", "query": "SELECT T1.interaction_type FROM medicine_enzyme_interaction AS T1 JOIN medicine AS T2 ON T1.medicine_id  =  T2.id JOIN enzyme AS T3 ON T1.enzyme_id  =  T3.id WHERE T3.name  =  'ALA synthase' AND T2.name  =  'Aripiprazole'"}
{"question": "What is the type of interaction for the enzyme named 'ALA synthase' and the medicine named 'Aripiprazole'?", "query": "SELECT T1.interaction_type FROM medicine_enzyme_interaction AS T1 JOIN medicine AS T2 ON T1.medicine_id  =  T2.id JOIN enzyme AS T3 ON T1.enzyme_id  =  T3.id WHERE T3.name  =  'ALA synthase' AND T2.name  =  'Aripiprazole'"}
{"question": "What is the most common interaction type between enzymes and medicine? And how many are there?", "query": "SELECT interaction_type ,  count(*) FROM medicine_enzyme_interaction GROUP BY interaction_type ORDER BY count(*) DESC LIMIT 1"}
{"question": "What are the most common types of interactions between enzymes and medicine, and how many types are there?", "query": "SELECT interaction_type ,  count(*) FROM medicine_enzyme_interaction GROUP BY interaction_type ORDER BY count(*) DESC LIMIT 1"}
{"question": "How many medicines have the FDA approval status 'No' ?", "query": "SELECT count(*) FROM medicine WHERE FDA_approved  =  'No'"}
{"question": "How many medicines were not approved by the FDA?", "query": "SELECT count(*) FROM medicine WHERE FDA_approved  =  'No'"}
{"question": "How many enzymes do not have any interactions?", "query": "SELECT count(*) FROM enzyme WHERE id NOT IN ( SELECT enzyme_id FROM medicine_enzyme_interaction );"}
{"question": "What is the count of enzymes without any interactions?", "query": "SELECT count(*) FROM enzyme WHERE id NOT IN ( SELECT enzyme_id FROM medicine_enzyme_interaction );"}
{"question": "What is the id and trade name of the medicines can interact with at least 3 enzymes?", "query": "SELECT T1.id ,  T1.trade_name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id GROUP BY T1.id HAVING COUNT(*)  >=  3"}
{"question": "What are the ids and trade names of the medicine that can interact with at least 3 enzymes?", "query": "SELECT T1.id ,  T1.trade_name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id GROUP BY T1.id HAVING COUNT(*)  >=  3"}
{"question": "What are the distinct name, location and products of the enzymes which has any 'inhibitor' interaction?", "query": "SELECT DISTINCT T1.name ,  T1.location ,  T1.product FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.enzyme_id  =  T1.id WHERE T2.interaction_type  =  'inhibitor'"}
{"question": "What are the different names, locations, and products of the enzymes that are capable inhibitor interactions?", "query": "SELECT DISTINCT T1.name ,  T1.location ,  T1.product FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.enzyme_id  =  T1.id WHERE T2.interaction_type  =  'inhibitor'"}
{"question": "List the medicine name and trade name which can both interact as 'inhibitor' and 'activitor' with enzymes.", "query": "SELECT T1.name ,  T1.trade_name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id WHERE interaction_type  =  'inhibitor' INTERSECT SELECT T1.name ,  T1.trade_name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id WHERE interaction_type  =  'activitor'"}
{"question": "What are the medicine and trade names that can interact as an inhibitor and activitor with enzymes?", "query": "SELECT T1.name ,  T1.trade_name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id WHERE interaction_type  =  'inhibitor' INTERSECT SELECT T1.name ,  T1.trade_name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id WHERE interaction_type  =  'activitor'"}
{"question": "Show the medicine names and trade names that cannot interact with the enzyme with product 'Heme'.", "query": "SELECT name ,  trade_name FROM medicine EXCEPT SELECT T1.name ,  T1.trade_name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id JOIN enzyme AS T3 ON T3.id  =  T2.enzyme_id WHERE T3.product  =  'Protoporphyrinogen IX'"}
{"question": "What are the medicine and trade names that cannot interact with the enzyme with the product 'Heme'?", "query": "SELECT name ,  trade_name FROM medicine EXCEPT SELECT T1.name ,  T1.trade_name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id JOIN enzyme AS T3 ON T3.id  =  T2.enzyme_id WHERE T3.product  =  'Protoporphyrinogen IX'"}
{"question": "How many distinct FDA approval statuses are there for the medicines?", "query": "SELECT count(DISTINCT FDA_approved) FROM medicine"}
{"question": "How many different FDA approval statuses exist for medicines?", "query": "SELECT count(DISTINCT FDA_approved) FROM medicine"}
{"question": "Which enzyme names have the substring \"ALA\"?", "query": "SELECT name FROM enzyme WHERE name LIKE \"%ALA%\""}
{"question": "What are the names of enzymes that include the string 'ALA'?", "query": "SELECT name FROM enzyme WHERE name LIKE \"%ALA%\""}
{"question": "find the number of medicines offered by each trade.", "query": "SELECT trade_name ,  count(*) FROM medicine GROUP BY trade_name"}
{"question": "How many medicines are offered by each trade name?", "query": "SELECT trade_name ,  count(*) FROM medicine GROUP BY trade_name"}
{"question": "List all schools and their nicknames in the order of founded year.", "query": "SELECT school ,  nickname FROM university ORDER BY founded"}
{"question": "What are the different schools and their nicknames, ordered by their founding years?", "query": "SELECT school ,  nickname FROM university ORDER BY founded"}
{"question": "List all public schools and their locations.", "query": "SELECT school ,  LOCATION FROM university WHERE affiliation  =  'Public'"}
{"question": "What are the public schools and what are their locations?", "query": "SELECT school ,  LOCATION FROM university WHERE affiliation  =  'Public'"}
{"question": "When was the school with the largest enrollment founded?", "query": "SELECT founded FROM university ORDER BY enrollment DESC LIMIT 1"}
{"question": "Return the founded year for the school with the largest enrollment.", "query": "SELECT founded FROM university ORDER BY enrollment DESC LIMIT 1"}
{"question": "Find the founded year of the newest non public school.", "query": "SELECT founded FROM university WHERE affiliation != 'Public' ORDER BY founded DESC LIMIT 1"}
{"question": "What is the founded year of the non public school that was founded most recently?", "query": "SELECT founded FROM university WHERE affiliation != 'Public' ORDER BY founded DESC LIMIT 1"}
{"question": "How many schools are in the basketball match?", "query": "SELECT count(DISTINCT school_id) FROM basketball_match"}
{"question": "Count the number of schools that have had basketball matches.", "query": "SELECT count(DISTINCT school_id) FROM basketball_match"}
{"question": "What is the highest acc percent score in the competition?", "query": "SELECT acc_percent FROM basketball_match ORDER BY acc_percent DESC LIMIT 1"}
{"question": "Return the highest acc percent across all basketball matches.", "query": "SELECT acc_percent FROM basketball_match ORDER BY acc_percent DESC LIMIT 1"}
{"question": "What is the primary conference of the school that has the lowest acc percent score in the competition?", "query": "SELECT t1.Primary_conference FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id ORDER BY t2.acc_percent LIMIT 1"}
{"question": "Return the primary conference of the school with the lowest acc percentage score.", "query": "SELECT t1.Primary_conference FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id ORDER BY t2.acc_percent LIMIT 1"}
{"question": "What is the team name and acc regular season score of the school that was founded for the longest time?", "query": "SELECT t2.team_name ,  t2.ACC_Regular_Season FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id ORDER BY t1.founded LIMIT 1"}
{"question": "Return the name of the team and the acc during the regular season for the school that was founded the earliest.", "query": "SELECT t2.team_name ,  t2.ACC_Regular_Season FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id ORDER BY t1.founded LIMIT 1"}
{"question": "Find the location and all games score of the school that has Clemson as its team name.", "query": "SELECT t2.All_Games ,  t1.location FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id WHERE team_name  =  'Clemson'"}
{"question": "What are the all games score and location of the school called Clemson?", "query": "SELECT t2.All_Games ,  t1.location FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id WHERE team_name  =  'Clemson'"}
{"question": "What are the average enrollment size of the universities that are founded before 1850?", "query": "SELECT avg(enrollment) FROM university WHERE founded  <  1850"}
{"question": "Return the average enrollment of universities founded before 1850.", "query": "SELECT avg(enrollment) FROM university WHERE founded  <  1850"}
{"question": "Show the enrollment and primary_conference of the oldest college.", "query": "SELECT enrollment ,  primary_conference FROM university ORDER BY founded LIMIT 1"}
{"question": "What are the enrollment and primary conference for the university which was founded the earliest?", "query": "SELECT enrollment ,  primary_conference FROM university ORDER BY founded LIMIT 1"}
{"question": "What is the total and minimum enrollment of all schools?", "query": "SELECT sum(enrollment) ,  min(enrollment) FROM university"}
{"question": "Return the total and minimum enrollments across all schools.", "query": "SELECT sum(enrollment) ,  min(enrollment) FROM university"}
{"question": "Find the total student enrollment for different affiliation type schools.", "query": "SELECT sum(enrollment) ,  affiliation FROM university GROUP BY affiliation"}
{"question": "What are the total enrollments of universities of each affiliation type?", "query": "SELECT sum(enrollment) ,  affiliation FROM university GROUP BY affiliation"}
{"question": "How many schools do not participate in the basketball match?", "query": "SELECT count(*) FROM university WHERE school_id NOT IN (SELECT school_id FROM basketball_match)"}
{"question": "Count the number of universities that do not participate in the baketball match.", "query": "SELECT count(*) FROM university WHERE school_id NOT IN (SELECT school_id FROM basketball_match)"}
{"question": "Find the schools that were either founded after 1850 or public.", "query": "SELECT school FROM university WHERE founded  >  1850 OR affiliation  =  'Public'"}
{"question": "What are the schools that were either founded before 1850 or are public?", "query": "SELECT school FROM university WHERE founded  >  1850 OR affiliation  =  'Public'"}
{"question": "Find how many different affiliation types there are.", "query": "SELECT count(DISTINCT affiliation) FROM university"}
{"question": "Count the number of different affiliation types.", "query": "SELECT count(DISTINCT affiliation) FROM university"}
{"question": "Find how many school locations have the word 'NY'.", "query": "SELECT count(*) FROM university WHERE LOCATION LIKE \"%NY%\""}
{"question": "How many universities have a location that contains NY?", "query": "SELECT count(*) FROM university WHERE LOCATION LIKE \"%NY%\""}
{"question": "Find the team names of the universities whose enrollments are smaller than the average enrollment size.", "query": "SELECT t2.team_name FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id WHERE enrollment  <  (SELECT avg(enrollment) FROM university)"}
{"question": "What are the names of teams from universities that have a below average enrollment?", "query": "SELECT t2.team_name FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id WHERE enrollment  <  (SELECT avg(enrollment) FROM university)"}
{"question": "Find the number of universities that have over a 20000 enrollment size for each affiliation type.", "query": "SELECT count(*) ,  affiliation FROM university WHERE enrollment  >  20000 GROUP BY affiliation"}
{"question": "What are the different affiliations, and how many schools with each have an enrollment size of above 20000?", "query": "SELECT count(*) ,  affiliation FROM university WHERE enrollment  >  20000 GROUP BY affiliation"}
{"question": "Find the total number of students enrolled in the colleges that were founded after the year of 1850 for each affiliation type.", "query": "SELECT sum(Enrollment) ,  affiliation FROM university WHERE founded  >  1850 GROUP BY affiliation"}
{"question": "What are the different affiliations, and what is the total enrollment of schools founded after 1850 for each enrollment type?", "query": "SELECT sum(Enrollment) ,  affiliation FROM university WHERE founded  >  1850 GROUP BY affiliation"}
{"question": "What is the maximum enrollment across all schools?", "query": "SELECT max(Enrollment) FROM university"}
{"question": "Return the maximum enrollment across all schools.", "query": "SELECT max(Enrollment) FROM university"}
{"question": "List all information regarding the basketball match.", "query": "SELECT * FROM basketball_match"}
{"question": "What is all the information about the basketball match?", "query": "SELECT * FROM basketball_match"}
{"question": "List names of all teams in the basketball competition, ordered by all home scores in descending order.", "query": "SELECT team_name FROM basketball_match ORDER BY All_Home DESC"}
{"question": "What are the names of all the teams in the basketball competition, sorted by all home scores in descending order?", "query": "SELECT team_name FROM basketball_match ORDER BY All_Home DESC"}
{"question": "the names of models that launched between 2002 and 2004.", "query": "SELECT Model_name FROM chip_model WHERE Launch_year BETWEEN 2002 AND 2004;"}
{"question": "Which model has the least amount of RAM? List the model name and the amount of RAM.", "query": "SELECT Model_name ,  RAM_MiB FROM chip_model ORDER BY RAM_MiB ASC LIMIT 1;"}
{"question": "What are the chip model and screen mode of the phone with hardware model name \"LG-P760\"?", "query": "SELECT chip_model ,  screen_mode FROM phone WHERE Hardware_Model_name = \"LG-P760\";"}
{"question": "How many phone hardware models are produced by the company named \"Nokia Corporation\"?", "query": "SELECT count(*) FROM phone WHERE Company_name = \"Nokia Corporation\";"}
{"question": "What is maximum and minimum RAM size of phone produced by company named \"Nokia Corporation\"?", "query": "SELECT max(T1.RAM_MiB) ,  min(T1.RAM_MiB) FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name  =  T2.chip_model WHERE T2.Company_name = \"Nokia Corporation\";"}
{"question": "What is the average ROM size of phones produced by the company named \"Nokia Corporation\"?", "query": "SELECT avg(T1.ROM_MiB) FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name  =  T2.chip_model WHERE T2.Company_name = \"Nokia Corporation\";"}
{"question": "List the hardware model name and company name for all the phones that were launched in year 2002 or have RAM size greater than 32.", "query": "SELECT T2.Hardware_Model_name ,  T2.Company_name FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name  =  T2.chip_model WHERE T1.Launch_year = 2002 OR T1.RAM_MiB  >  32;"}
{"question": "Find all phones that have word 'Full' in their accreditation types. List the Hardware Model name and Company name.", "query": "SELECT Hardware_Model_name ,  Company_name FROM phone WHERE Accreditation_type LIKE 'Full';"}
{"question": "Find the Char cells, Pixels and Hardware colours for the screen of the phone whose hardware model name is \"LG-P760\".", "query": "SELECT T1.Char_cells ,  T1.Pixels ,  T1.Hardware_colours FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE T2.Hardware_Model_name = \"LG-P760\";"}
{"question": "List the hardware model name and company name for the phone whose screen mode type is \"Graphics.\"", "query": "SELECT T2.Hardware_Model_name ,  T2.Company_name FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE T1.Type  =  \"Graphics\";"}
{"question": "Find the name of the company that has the least number of phone models. List the company name and the number of phone model produced by that company.", "query": "SELECT Company_name ,  count(*) FROM phone GROUP BY Company_name ORDER BY count(*) ASC LIMIT 1;"}
{"question": "List the name of the company that produced more than one phone model.", "query": "SELECT Company_name FROM phone GROUP BY Company_name HAVING count(*)  >  1;"}
{"question": "List the maximum, minimum and average number of used kb in screen mode.", "query": "SELECT max(used_kb) , min(used_kb) , avg(used_kb) FROM screen_mode;"}
{"question": "List the name of the phone model launched in year 2002 and with the highest RAM size.", "query": "SELECT T2.Hardware_Model_name FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name  =  T2.chip_model WHERE T1.Launch_year = 2002 ORDER BY T1.RAM_MiB DESC LIMIT 1;"}
{"question": "What are the wifi and screen mode type of the hardware model named \"LG-P760\"?", "query": "SELECT T1.WiFi , T3.Type FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name  =  T2.chip_model JOIN screen_mode AS T3 ON T2.screen_mode = T3.Graphics_mode WHERE T2.Hardware_Model_name = \"LG-P760\";"}
{"question": "List the hardware model name for the phones that have screen mode type \"Text\" or RAM size greater than 32.", "query": "SELECT T2.Hardware_Model_name FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name  =  T2.chip_model JOIN screen_mode AS T3 ON T2.screen_mode = T3.Graphics_mode WHERE T3.Type = \"Text\" OR T1.RAM_MiB  >  32;"}
{"question": "List the hardware model name for the phones that were produced by \"Nokia Corporation\" or whose screen mode type is \"Graphics.\"", "query": "SELECT DISTINCT T2.Hardware_Model_name FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE T1.Type  =  \"Graphics\" OR t2.Company_name  =  \"Nokia Corporation\""}
{"question": "List the hardware model name for the phons that were produced by \"Nokia Corporation\" but whose screen mode type is not Text.", "query": "SELECT DISTINCT T2.Hardware_Model_name FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE t2.Company_name  =  \"Nokia Corporation\" AND T1.Type != \"Text\";"}
{"question": "List the phone hardware model and company name for the phones whose screen usage in kb is between 10 and 15.", "query": "SELECT DISTINCT T2.Hardware_Model_name , T2.Company_name FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE T1.used_kb BETWEEN 10 AND 15;"}
{"question": "Find the number of phones for each accreditation type.", "query": "SELECT Accreditation_type ,  count(*) FROM phone GROUP BY Accreditation_type"}
{"question": "How many phones belongs to each accreditation type?", "query": "SELECT Accreditation_type ,  count(*) FROM phone GROUP BY Accreditation_type"}
{"question": "Find the accreditation level that more than 3 phones use.", "query": "SELECT Accreditation_level FROM phone GROUP BY Accreditation_level HAVING count(*)  >  3"}
{"question": "Find the details for all chip models.", "query": "SELECT * FROM chip_model"}
{"question": "How many models do not have the wifi function?", "query": "SELECT count(*) FROM chip_model WHERE wifi  =  'No'"}
{"question": "Count the number of chip model that do not have wifi.", "query": "SELECT count(*) FROM chip_model WHERE wifi  =  'No'"}
{"question": "List all the model names sorted by their launch year.", "query": "SELECT model_name FROM chip_model ORDER BY launch_year"}
{"question": "Find the average ram mib size of the chip models that are never used by any phone.", "query": "SELECT avg(RAM_MiB) FROM chip_model WHERE model_name NOT IN (SELECT chip_model FROM phone)"}
{"question": "Find the names of the chip models that are not used by any phone with full accreditation type.", "query": "SELECT model_name FROM chip_model EXCEPT SELECT chip_model FROM phone WHERE Accreditation_type  =  'Full'"}
{"question": "Find the pixels of the screen modes that are used by both phones with full accreditation types and phones with Provisional accreditation types.", "query": "SELECT t1.pixels FROM screen_mode AS t1 JOIN phone AS t2 ON t1.Graphics_mode  =  t2.screen_mode WHERE t2.Accreditation_type  =  'Provisional' INTERSECT SELECT t1.pixels FROM screen_mode AS t1 JOIN phone AS t2 ON t1.Graphics_mode  =  t2.screen_mode WHERE t2.Accreditation_type  =  'Full'"}
{"question": "How many countries are there in total?", "query": "SELECT count(*) FROM country"}
{"question": "Count the number of countries.", "query": "SELECT count(*) FROM country"}
{"question": "Show the country name and capital of all countries.", "query": "SELECT Country_name ,  Capital FROM country"}
{"question": "What are the names and capitals of each country?", "query": "SELECT Country_name ,  Capital FROM country"}
{"question": "Show all official native languages that contain the word \"English\".", "query": "SELECT Official_native_language FROM country WHERE Official_native_language LIKE \"%English%\""}
{"question": "What are the official native languages that contain the string \"English\".", "query": "SELECT Official_native_language FROM country WHERE Official_native_language LIKE \"%English%\""}
{"question": "Show all distinct positions of matches.", "query": "SELECT DISTINCT POSITION FROM match_season"}
{"question": "What are the different positions for match season?", "query": "SELECT DISTINCT POSITION FROM match_season"}
{"question": "Show the players from college UCLA.", "query": "SELECT Player FROM match_season WHERE College  =  \"UCLA\""}
{"question": "Who are the players from UCLA?", "query": "SELECT Player FROM match_season WHERE College  =  \"UCLA\""}
{"question": "Show the distinct position of players from college UCLA or Duke.", "query": "SELECT DISTINCT POSITION FROM match_season WHERE College  =  \"UCLA\" OR College  =  \"Duke\""}
{"question": "What are the different positions of players from UCLA or Duke colleges?", "query": "SELECT DISTINCT POSITION FROM match_season WHERE College  =  \"UCLA\" OR College  =  \"Duke\""}
{"question": "Show the draft pick numbers and draft classes of players whose positions are defenders.", "query": "SELECT Draft_Pick_Number ,  Draft_Class FROM match_season WHERE POSITION  =  \"Defender\""}
{"question": "What are the draft pick numbers and draft classes for players who play the Defender position?", "query": "SELECT Draft_Pick_Number ,  Draft_Class FROM match_season WHERE POSITION  =  \"Defender\""}
{"question": "How many distinct teams are involved in match seasons?", "query": "SELECT count(DISTINCT Team) FROM match_season"}
{"question": "Count the number of different teams involved in match season.", "query": "SELECT count(DISTINCT Team) FROM match_season"}
{"question": "Show the players and the years played.", "query": "SELECT Player ,  Years_Played FROM player"}
{"question": "Who are the different players and how many years has each played?", "query": "SELECT Player ,  Years_Played FROM player"}
{"question": "Show all team names.", "query": "SELECT Name FROM Team"}
{"question": "What are the names of all teams?", "query": "SELECT Name FROM Team"}
{"question": "Show the season, the player, and the name of the country that player belongs to.", "query": "SELECT T2.Season ,  T2.Player ,  T1.Country_name FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country"}
{"question": "For each player, what are their name, season, and country that they belong to?", "query": "SELECT T2.Season ,  T2.Player ,  T1.Country_name FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country"}
{"question": "Which players are from Indonesia?", "query": "SELECT T2.Player FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T1.Country_name  =  \"Indonesia\""}
{"question": "Who are the players from Indonesia?", "query": "SELECT T2.Player FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T1.Country_name  =  \"Indonesia\""}
{"question": "What are the distinct positions of the players from a country whose capital is Dublin?", "query": "SELECT DISTINCT T2.Position FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T1.Capital  =  \"Dublin\""}
{"question": "Give the different positions of players who play for the country with the capital Dublin.", "query": "SELECT DISTINCT T2.Position FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T1.Capital  =  \"Dublin\""}
{"question": "What are the official languages of the countries of players from Maryland or Duke college?", "query": "SELECT T1.Official_native_language FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T2.College  =  \"Maryland\" OR T2.College  =  \"Duke\""}
{"question": "Return the official native languages of countries who have players from Maryland or Duke colleges.", "query": "SELECT T1.Official_native_language FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T2.College  =  \"Maryland\" OR T2.College  =  \"Duke\""}
{"question": "How many distinct official languages are there among countries of players whose positions are defenders.", "query": "SELECT count(DISTINCT T1.Official_native_language) FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T2.Position  =  \"Defender\""}
{"question": "Count the number of different official languages corresponding to countries that players who play Defender are from.", "query": "SELECT count(DISTINCT T1.Official_native_language) FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T2.Position  =  \"Defender\""}
{"question": "Show the season, the player, and the name of the team that players belong to.", "query": "SELECT T1.Season ,  T1.Player ,  T2.Name FROM match_season AS T1 JOIN team AS T2 ON T1.Team  =  T2.Team_id"}
{"question": "Who are the different players, what season do they play in, and what is the name of the team they are on?", "query": "SELECT T1.Season ,  T1.Player ,  T2.Name FROM match_season AS T1 JOIN team AS T2 ON T1.Team  =  T2.Team_id"}
{"question": "Show the positions of the players from the team with name \"Ryley Goldner\".", "query": "SELECT T1.Position FROM match_season AS T1 JOIN team AS T2 ON T1.Team  =  T2.Team_id WHERE T2.Name  =  \"Ryley Goldner\""}
{"question": "Return the positions of players on the team Ryley Goldner.", "query": "SELECT T1.Position FROM match_season AS T1 JOIN team AS T2 ON T1.Team  =  T2.Team_id WHERE T2.Name  =  \"Ryley Goldner\""}
{"question": "How many distinct colleges are associated with players from the team with name \"Columbus Crew\".", "query": "SELECT count(DISTINCT T1.College) FROM match_season AS T1 JOIN team AS T2 ON T1.Team  =  T2.Team_id WHERE T2.Name  =  \"Columbus Crew\""}
{"question": "Count the number of different colleges that players who play for Columbus Crew are from.", "query": "SELECT count(DISTINCT T1.College) FROM match_season AS T1 JOIN team AS T2 ON T1.Team  =  T2.Team_id WHERE T2.Name  =  \"Columbus Crew\""}
{"question": "Show the players and years played for players from team \"Columbus Crew\".", "query": "SELECT T1.Player , T1.Years_Played FROM player AS T1 JOIN team AS T2 ON T1.Team  =  T2.Team_id WHERE T2.Name  =  \"Columbus Crew\""}
{"question": "What are the players who played for Columbus Crew, and how many years did each play for?", "query": "SELECT T1.Player , T1.Years_Played FROM player AS T1 JOIN team AS T2 ON T1.Team  =  T2.Team_id WHERE T2.Name  =  \"Columbus Crew\""}
{"question": "Show the position of players and the corresponding number of players.", "query": "SELECT POSITION ,  COUNT(*) FROM match_season GROUP BY POSITION"}
{"question": "How many players played each position?", "query": "SELECT POSITION ,  COUNT(*) FROM match_season GROUP BY POSITION"}
{"question": "Show the country names and the corresponding number of players.", "query": "SELECT Country_name ,  COUNT(*) FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country GROUP BY T1.Country_name"}
{"question": "How many players are from each country?", "query": "SELECT Country_name ,  COUNT(*) FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country GROUP BY T1.Country_name"}
{"question": "Return all players sorted by college in ascending alphabetical order.", "query": "SELECT player FROM match_season ORDER BY College ASC"}
{"question": "What are all the players who played in match season, sorted by college in ascending alphabetical order?", "query": "SELECT player FROM match_season ORDER BY College ASC"}
{"question": "Show the most common position of players in match seasons.", "query": "SELECT POSITION FROM match_season GROUP BY POSITION ORDER BY count(*) DESC LIMIT 1"}
{"question": "What is the position that is most common among players in match seasons?", "query": "SELECT POSITION FROM match_season GROUP BY POSITION ORDER BY count(*) DESC LIMIT 1"}
{"question": "Show the top 3 most common colleges of players in match seasons.", "query": "SELECT College FROM match_season GROUP BY College ORDER BY count(*) DESC LIMIT 3"}
{"question": "What are the three colleges from which the most players are from?", "query": "SELECT College FROM match_season GROUP BY College ORDER BY count(*) DESC LIMIT 3"}
{"question": "Show the name of colleges that have at least two players.", "query": "SELECT College FROM match_season GROUP BY College HAVING count(*)  >=  2"}
{"question": "What are the names of all colleges that have two or more players?", "query": "SELECT College FROM match_season GROUP BY College HAVING count(*)  >=  2"}
{"question": "Show the name of colleges that have at least two players in descending alphabetical order.", "query": "SELECT College FROM match_season GROUP BY College HAVING count(*)  >=  2 ORDER BY College DESC"}
{"question": "What are the names of colleges that have two or more players, listed in descending alphabetical order?", "query": "SELECT College FROM match_season GROUP BY College HAVING count(*)  >=  2 ORDER BY College DESC"}
{"question": "What are the names of teams that do no have match season record?", "query": "SELECT Name FROM team WHERE Team_id NOT IN (SELECT Team FROM match_season)"}
{"question": "Return the names of teams that have no match season record.", "query": "SELECT Name FROM team WHERE Team_id NOT IN (SELECT Team FROM match_season)"}
{"question": "What are the names of countries that have both players with position forward and players with position defender?", "query": "SELECT T1.Country_name FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T2.Position  =  \"Forward\" INTERSECT SELECT T1.Country_name FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T2.Position  =  \"Defender\""}
{"question": "Return the names of countries that have players that play the Forward position, as well as players who play the Defender position.", "query": "SELECT T1.Country_name FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T2.Position  =  \"Forward\" INTERSECT SELECT T1.Country_name FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T2.Position  =  \"Defender\""}
{"question": "Which college have both players with position midfielder and players with position defender?", "query": "SELECT College FROM match_season WHERE POSITION  =  \"Midfielder\" INTERSECT SELECT College FROM match_season WHERE POSITION  =  \"Defender\""}
{"question": "Return the colleges that have players who play the Midfielder position, as well as players who play the Defender position.", "query": "SELECT College FROM match_season WHERE POSITION  =  \"Midfielder\" INTERSECT SELECT College FROM match_season WHERE POSITION  =  \"Defender\""}
{"question": "How many climbers are there?", "query": "SELECT count(*) FROM climber"}
{"question": "Count the number of climbers.", "query": "SELECT count(*) FROM climber"}
{"question": "List the names of climbers in descending order of points.", "query": "SELECT Name FROM climber ORDER BY Points DESC"}
{"question": "What are the names of the climbers, ordered by points descending?", "query": "SELECT Name FROM climber ORDER BY Points DESC"}
{"question": "List the names of climbers whose country is not Switzerland.", "query": "SELECT Name FROM climber WHERE Country != \"Switzerland\""}
{"question": "What are the names of climbers who are not from the country of Switzerland?", "query": "SELECT Name FROM climber WHERE Country != \"Switzerland\""}
{"question": "What is the maximum point for climbers whose country is United Kingdom?", "query": "SELECT max(Points) FROM climber WHERE Country  =  \"United Kingdom\""}
{"question": "Return the maximum number of points for climbers from the United Kingdom.", "query": "SELECT max(Points) FROM climber WHERE Country  =  \"United Kingdom\""}
{"question": "How many distinct countries are the climbers from?", "query": "SELECT COUNT(DISTINCT Country) FROM climber"}
{"question": "Count the number of different countries that climbers are from.", "query": "SELECT COUNT(DISTINCT Country) FROM climber"}
{"question": "What are the names of mountains in ascending alphabetical order?", "query": "SELECT Name FROM mountain ORDER BY Name ASC"}
{"question": "Give the names of mountains in alphabetical order.", "query": "SELECT Name FROM mountain ORDER BY Name ASC"}
{"question": "What are the countries of mountains with height bigger than 5000?", "query": "SELECT Country FROM mountain WHERE Height  >  5000"}
{"question": "Return the countries of the mountains that have a height larger than 5000.", "query": "SELECT Country FROM mountain WHERE Height  >  5000"}
{"question": "What is the name of the highest mountain?", "query": "SELECT Name FROM mountain ORDER BY Height DESC LIMIT 1"}
{"question": "Return the name of the mountain with the greatest height.", "query": "SELECT Name FROM mountain ORDER BY Height DESC LIMIT 1"}
{"question": "List the distinct ranges of the mountains with the top 3 prominence.", "query": "SELECT DISTINCT Range FROM mountain ORDER BY Prominence DESC LIMIT 3"}
{"question": "What are the different ranges of the 3 mountains with the highest prominence?", "query": "SELECT DISTINCT Range FROM mountain ORDER BY Prominence DESC LIMIT 3"}
{"question": "Show names of climbers and the names of mountains they climb.", "query": "SELECT T1.Name ,  T2.Name FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID"}
{"question": "What are the names of climbers and the corresponding names of mountains that they climb?", "query": "SELECT T1.Name ,  T2.Name FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID"}
{"question": "Show the names of climbers and the heights of mountains they climb.", "query": "SELECT T1.Name ,  T2.Height FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID"}
{"question": "What are the names of climbers and the corresponding heights of the mountains that they climb?", "query": "SELECT T1.Name ,  T2.Height FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID"}
{"question": "Show the height of the mountain climbed by the climber with the maximum points.", "query": "SELECT T2.Height FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID ORDER BY T1.Points DESC LIMIT 1"}
{"question": "What is the height of the mountain climbined by the climbing who had the most points?", "query": "SELECT T2.Height FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID ORDER BY T1.Points DESC LIMIT 1"}
{"question": "Show the distinct names of mountains climbed by climbers from country \"West Germany\".", "query": "SELECT DISTINCT T2.Name FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID WHERE T1.Country  =  \"West Germany\""}
{"question": "What are the different names of mountains ascended by climbers from the country of West Germany?", "query": "SELECT DISTINCT T2.Name FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID WHERE T1.Country  =  \"West Germany\""}
{"question": "Show the times used by climbers to climb mountains in Country Uganda.", "query": "SELECT T1.Time FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID WHERE T2.Country  =  \"Uganda\""}
{"question": "What are the times used by climbers who climbed mountains in the country of Uganda?", "query": "SELECT T1.Time FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID WHERE T2.Country  =  \"Uganda\""}
{"question": "Please show the countries and the number of climbers from each country.", "query": "SELECT Country ,  COUNT(*) FROM climber GROUP BY Country"}
{"question": "How many climbers are from each country?", "query": "SELECT Country ,  COUNT(*) FROM climber GROUP BY Country"}
{"question": "List the countries that have more than one mountain.", "query": "SELECT Country FROM mountain GROUP BY Country HAVING COUNT(*)  >  1"}
{"question": "Which countries have more than one mountain?", "query": "SELECT Country FROM mountain GROUP BY Country HAVING COUNT(*)  >  1"}
{"question": "List the names of mountains that do not have any climber.", "query": "SELECT Name FROM mountain WHERE Mountain_ID NOT IN (SELECT Mountain_ID FROM climber)"}
{"question": "What are the names of countains that no climber has climbed?", "query": "SELECT Name FROM mountain WHERE Mountain_ID NOT IN (SELECT Mountain_ID FROM climber)"}
{"question": "Show the countries that have mountains with height more than 5600 stories and mountains with height less than 5200.", "query": "SELECT Country FROM mountain WHERE Height  >  5600 INTERSECT SELECT Country FROM mountain WHERE Height  <  5200"}
{"question": "What are the countries that have both mountains that are higher than 5600 and lower than 5200?", "query": "SELECT Country FROM mountain WHERE Height  >  5600 INTERSECT SELECT Country FROM mountain WHERE Height  <  5200"}
{"question": "Show the range that has the most number of mountains.", "query": "SELECT Range FROM mountain GROUP BY Range ORDER BY COUNT(*) DESC LIMIT 1"}
{"question": "Which range contains the most mountains?", "query": "SELECT Range FROM mountain GROUP BY Range ORDER BY COUNT(*) DESC LIMIT 1"}
{"question": "Show the names of mountains with height more than 5000 or prominence more than 1000.", "query": "SELECT Name FROM mountain WHERE Height  >  5000 OR Prominence  >  1000"}
{"question": "What are the names of mountains that have a height of over 5000 or a prominence of over 1000?", "query": "SELECT Name FROM mountain WHERE Height  >  5000 OR Prominence  >  1000"}
{"question": "How many body builders are there?", "query": "SELECT count(*) FROM body_builder"}
{"question": "List the total scores of body builders in ascending order.", "query": "SELECT Total FROM body_builder ORDER BY Total ASC"}
{"question": "List the snatch score and clean jerk score of body builders in ascending order of snatch score.", "query": "SELECT Snatch ,  Clean_Jerk FROM body_builder ORDER BY Snatch ASC"}
{"question": "What is the average snatch score of body builders?", "query": "SELECT avg(Snatch) FROM body_builder"}
{"question": "What are the clean and jerk score of the body builder with the highest total score?", "query": "SELECT Clean_Jerk FROM body_builder ORDER BY Total DESC LIMIT 1"}
{"question": "What are the birthdays of people in ascending order of height?", "query": "SELECT Birth_Date FROM People ORDER BY Height ASC"}
{"question": "What are the names of body builders?", "query": "SELECT T2.Name FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID"}
{"question": "What are the names of body builders whose total score is higher than 300?", "query": "SELECT T2.Name FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Total  >  300"}
{"question": "What is the name of the body builder with the greatest body weight?", "query": "SELECT T2.Name FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Weight DESC LIMIT 1"}
{"question": "What are the birth date and birth place of the body builder with the highest total points?", "query": "SELECT T2.Birth_Date ,  T2.Birth_Place FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Total DESC LIMIT 1"}
{"question": "What are the heights of body builders with total score smaller than 315?", "query": "SELECT T2.Height FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Total  <  315"}
{"question": "What is the average total score of body builders with height bigger than 200?", "query": "SELECT avg(T1.Total) FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Height  >  200"}
{"question": "What are the names of body builders in descending order of total scores?", "query": "SELECT T2.Name FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Total DESC"}
{"question": "List each birth place along with the number of people from there.", "query": "SELECT Birth_Place ,  COUNT(*) FROM people GROUP BY Birth_Place"}
{"question": "What is the most common birth place of people?", "query": "SELECT Birth_Place FROM people GROUP BY Birth_Place ORDER BY COUNT(*) DESC LIMIT 1"}
{"question": "What are the birth places that are shared by at least two people?", "query": "SELECT Birth_Place FROM people GROUP BY Birth_Place HAVING COUNT(*)  >=  2"}
{"question": "List the height and weight of people in descending order of height.", "query": "SELECT Height ,  Weight FROM people ORDER BY Height DESC"}
{"question": "Show all information about each body builder.", "query": "SELECT * FROM body_builder"}
{"question": "List the names and origins of people who are not body builders.", "query": "SELECT Name ,  birth_place FROM people EXCEPT SELECT T1.Name ,  T1.birth_place FROM people AS T1 JOIN body_builder AS T2 ON T1.people_id  =  T2.people_id"}
{"question": "How many distinct birth places are there?", "query": "SELECT count(DISTINCT Birth_Place) FROM people"}
{"question": "How many persons are not body builders?", "query": "SELECT count(*) FROM people WHERE people_id NOT IN (SELECT People_ID FROM body_builder)"}
{"question": "List the weight of the body builders who have snatch score higher than 140 or have the height greater than 200.", "query": "SELECT T2.weight FROM body_builder AS T1 JOIN people AS T2 ON T1.people_id  =  T2.people_id WHERE T1.snatch  >  140 OR T2.height  >  200;"}
{"question": "What are the total scores of the body builders whose birthday contains the string \"January\" ?", "query": "SELECT T1.total FROM body_builder AS T1 JOIN people AS T2 ON T1.people_id  =  T2.people_id WHERE T2.Birth_Date LIKE \"%January%\";"}
{"question": "What is the minimum snatch score?", "query": "SELECT min(snatch) FROM body_builder"}
{"question": "How many elections are there?", "query": "SELECT count(*) FROM election"}
{"question": "List the votes of elections in descending order.", "query": "SELECT Votes FROM election ORDER BY Votes DESC"}
{"question": "List the dates and vote percents of elections.", "query": "SELECT Date ,  Vote_Percent FROM election"}
{"question": "What are the minimum and maximum vote percents of elections?", "query": "SELECT min(Vote_Percent) ,  max(Vote_Percent) FROM election"}
{"question": "What are the names and parties of representatives?", "query": "SELECT Name ,  Party FROM representative"}
{"question": "What are the names of representatives whose party is not \"Republican\"?", "query": "SELECT Name FROM Representative WHERE Party != \"Republican\""}
{"question": "What are the life spans of representatives from New York state or Indiana state?", "query": "SELECT Lifespan FROM representative WHERE State  =  \"New York\" OR State  =  \"Indiana\""}
{"question": "What are the names of representatives and the dates of elections they participated in.", "query": "SELECT T2.Name ,  T1.Date FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID  =  T2.Representative_ID"}
{"question": "What are the names of representatives with more than 10000 votes in election?", "query": "SELECT T2.Name FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID  =  T2.Representative_ID WHERE Votes  >  10000"}
{"question": "What are the names of representatives in descending order of votes?", "query": "SELECT T2.Name FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID  =  T2.Representative_ID ORDER BY votes DESC"}
{"question": "What is the party of the representative that has the smallest number of votes.", "query": "SELECT T2.Party FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID  =  T2.Representative_ID ORDER BY votes ASC LIMIT 1"}
{"question": "What are the lifespans of representatives in descending order of vote percent?", "query": "SELECT T2.Lifespan FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID  =  T2.Representative_ID ORDER BY Vote_Percent DESC"}
{"question": "What is the average number of votes of representatives from party \"Republican\"?", "query": "SELECT avg(T1.Votes) FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID  =  T2.Representative_ID WHERE T2.Party  =  \"Republican\""}
{"question": "What are the different parties of representative? Show the party name and the number of representatives in each party.", "query": "SELECT Party ,  COUNT(*) FROM representative GROUP BY Party"}
{"question": "What is the party that has the largest number of representatives?", "query": "SELECT Party ,  COUNT(*) FROM representative GROUP BY Party ORDER BY COUNT(*) DESC LIMIT 1"}
{"question": "What parties have at least three representatives?", "query": "SELECT Party FROM representative GROUP BY Party HAVING COUNT(*)  >=  3"}
{"question": "What states have at least two representatives?", "query": "SELECT State FROM representative GROUP BY State HAVING COUNT(*)  >=  2"}
{"question": "List the names of representatives that have not participated in elections listed here.", "query": "SELECT Name FROM representative WHERE Representative_ID NOT IN (SELECT Representative_ID FROM election)"}
{"question": "Show the parties that have both representatives in New York state and representatives in Pennsylvania state.", "query": "SELECT Party FROM representative WHERE State  =  \"New York\" INTERSECT SELECT Party FROM representative WHERE State  =  \"Pennsylvania\""}
{"question": "How many distinct parties are there for representatives?", "query": "SELECT count(DISTINCT Party) FROM representative"}
{"question": "How many apartment bookings are there in total?", "query": "SELECT count(*) FROM Apartment_Bookings"}
{"question": "Count the total number of apartment bookings.", "query": "SELECT count(*) FROM Apartment_Bookings"}
{"question": "Show the start dates and end dates of all the apartment bookings.", "query": "SELECT booking_start_date ,  booking_end_date FROM Apartment_Bookings"}
{"question": "What are the start date and end date of each apartment booking?", "query": "SELECT booking_start_date ,  booking_end_date FROM Apartment_Bookings"}
{"question": "Show all distinct building descriptions.", "query": "SELECT DISTINCT building_description FROM Apartment_Buildings"}
{"question": "Give me a list of all the distinct building descriptions.", "query": "SELECT DISTINCT building_description FROM Apartment_Buildings"}
{"question": "Show the short names of the buildings managed by \"Emma\".", "query": "SELECT building_short_name FROM Apartment_Buildings WHERE building_manager\t =  \"Emma\""}
{"question": "Which buildings does \"Emma\" manage? Give me the short names of the buildings.", "query": "SELECT building_short_name FROM Apartment_Buildings WHERE building_manager\t =  \"Emma\""}
{"question": "Show the addresses and phones of all the buildings managed by \"Brenden\".", "query": "SELECT building_address ,  building_phone FROM Apartment_Buildings WHERE building_manager\t =  \"Brenden\""}
{"question": "What are the address and phone number of the buildings managed by \"Brenden\"?", "query": "SELECT building_address ,  building_phone FROM Apartment_Buildings WHERE building_manager\t =  \"Brenden\""}
{"question": "What are the building full names that contain the word \"court\"?", "query": "SELECT building_full_name FROM Apartment_Buildings WHERE building_full_name LIKE \"%court%\""}
{"question": "Find all the building full names containing the word \"court\".", "query": "SELECT building_full_name FROM Apartment_Buildings WHERE building_full_name LIKE \"%court%\""}
{"question": "What is the minimum and maximum number of bathrooms of all the apartments?", "query": "SELECT min(bathroom_count) ,  max(bathroom_count) FROM Apartments"}
{"question": "Give me the minimum and maximum bathroom count among all the apartments.", "query": "SELECT min(bathroom_count) ,  max(bathroom_count) FROM Apartments"}
{"question": "What is the average number of bedrooms of all apartments?", "query": "SELECT avg(bedroom_count) FROM Apartments"}
{"question": "Find the average number of bedrooms of all the apartments.", "query": "SELECT avg(bedroom_count) FROM Apartments"}
{"question": "Return the apartment number and the number of rooms for each apartment.", "query": "SELECT apt_number ,  room_count FROM Apartments"}
{"question": "What are the apartment number and the room count of each apartment?", "query": "SELECT apt_number ,  room_count FROM Apartments"}
{"question": "What is the average number of rooms of apartments with type code \"Studio\"?", "query": "SELECT avg(room_count) FROM Apartments WHERE apt_type_code  =  \"Studio\""}
{"question": "Find the average room count of the apartments that have the \"Studio\" type code.", "query": "SELECT avg(room_count) FROM Apartments WHERE apt_type_code  =  \"Studio\""}
{"question": "Return the apartment numbers of the apartments with type code \"Flat\".", "query": "SELECT apt_number FROM Apartments WHERE apt_type_code  =  \"Flat\""}
{"question": "Which apartments have type code \"Flat\"? Give me their apartment numbers.", "query": "SELECT apt_number FROM Apartments WHERE apt_type_code  =  \"Flat\""}
{"question": "Return the first names and last names of all guests", "query": "SELECT guest_first_name ,  guest_last_name FROM Guests"}
{"question": "What are the first names and last names of all the guests?", "query": "SELECT guest_first_name ,  guest_last_name FROM Guests"}
{"question": "Return the date of birth for all the guests with gender code \"Male\".", "query": "SELECT date_of_birth FROM Guests WHERE gender_code  =  \"Male\""}
{"question": "What are dates of birth of all the guests whose gender is \"Male\"?", "query": "SELECT date_of_birth FROM Guests WHERE gender_code  =  \"Male\""}
{"question": "Show the apartment numbers, start dates, and end dates of all the apartment bookings.", "query": "SELECT T2.apt_number ,  T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id"}
{"question": "What are the apartment number, start date, and end date of each apartment booking?", "query": "SELECT T2.apt_number ,  T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id"}
{"question": "What are the booking start and end dates of the apartments with type code \"Duplex\"?", "query": "SELECT T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.apt_type_code  =  \"Duplex\""}
{"question": "Return the booking start date and end date for the apartments that have type code \"Duplex\".", "query": "SELECT T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.apt_type_code  =  \"Duplex\""}
{"question": "What are the booking start and end dates of the apartments with more than 2 bedrooms?", "query": "SELECT T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.bedroom_count  >  2"}
{"question": "Find the booking start date and end date for the apartments that have more than two bedrooms.", "query": "SELECT T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.bedroom_count  >  2"}
{"question": "What is the booking status code of the apartment with apartment number \"Suite 634\"?", "query": "SELECT T1.booking_status_code FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.apt_number  =  \"Suite 634\""}
{"question": "Tell me the booking status code for the apartment with number \"Suite 634\".", "query": "SELECT T1.booking_status_code FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.apt_number  =  \"Suite 634\""}
{"question": "Show the distinct apartment numbers of the apartments that have bookings with status code \"Confirmed\".", "query": "SELECT DISTINCT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.booking_status_code  =  \"Confirmed\""}
{"question": "Which apartments have bookings with status code \"Confirmed\"? Return their apartment numbers.", "query": "SELECT DISTINCT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.booking_status_code  =  \"Confirmed\""}
{"question": "Show the average room count of the apartments that have booking status code \"Provisional\".", "query": "SELECT avg(room_count) FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.booking_status_code  =  \"Provisional\""}
{"question": "What is the average room count of the apartments whose booking status code is \"Provisional\"?", "query": "SELECT avg(room_count) FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.booking_status_code  =  \"Provisional\""}
{"question": "Show the guest first names, start dates, and end dates of all the apartment bookings.", "query": "SELECT T2.guest_first_name ,  T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id  =  T2.guest_id"}
{"question": "What are the guest first name, start date, and end date of each apartment booking?", "query": "SELECT T2.guest_first_name ,  T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id  =  T2.guest_id"}
{"question": "Show the start dates and end dates of all the apartment bookings made by guests with gender code \"Female\".", "query": "SELECT T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id  =  T2.guest_id WHERE T2.gender_code  =  \"Female\""}
{"question": "What are the start date and end date of the apartment bookings made by female guests (gender code \"Female\")?", "query": "SELECT T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id  =  T2.guest_id WHERE T2.gender_code  =  \"Female\""}
{"question": "Show the first names and last names of all the guests that have apartment bookings with status code \"Confirmed\".", "query": "SELECT T2.guest_first_name ,  T2.guest_last_name FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id  =  T2.guest_id WHERE T1.booking_status_code  =  \"Confirmed\""}
{"question": "Which guests have apartment bookings with status code \"Confirmed\"? Return their first names and last names.", "query": "SELECT T2.guest_first_name ,  T2.guest_last_name FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id  =  T2.guest_id WHERE T1.booking_status_code  =  \"Confirmed\""}
{"question": "Show the facility codes of apartments with more than 4 bedrooms.", "query": "SELECT T1.facility_code FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.bedroom_count  >  4"}
{"question": "What are the facility codes of the apartments with more than four bedrooms?", "query": "SELECT T1.facility_code FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.bedroom_count  >  4"}
{"question": "Show the total number of rooms of all apartments with facility code \"Gym\".", "query": "SELECT sum(T2.room_count) FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.facility_code  =  \"Gym\""}
{"question": "Find the total number of rooms in the apartments that have facility code \"Gym\".", "query": "SELECT sum(T2.room_count) FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.facility_code  =  \"Gym\""}
{"question": "Show the total number of rooms of the apartments in the building with short name \"Columbus Square\".", "query": "SELECT sum(T2.room_count) FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id  =  T2.building_id WHERE T1.building_short_name  =  \"Columbus Square\""}
{"question": "How many rooms in total are there in the apartments in the building with short name \"Columbus Square\"?", "query": "SELECT sum(T2.room_count) FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id  =  T2.building_id WHERE T1.building_short_name  =  \"Columbus Square\""}
{"question": "Show the addresses of the buildings that have apartments with more than 2 bathrooms.", "query": "SELECT T1.building_address FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id  =  T2.building_id WHERE T2.bathroom_count  >  2"}
{"question": "Which buildings have apartments that have more than two bathrooms? Give me the addresses of the buildings.", "query": "SELECT T1.building_address FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id  =  T2.building_id WHERE T2.bathroom_count  >  2"}
{"question": "Show the apartment type codes and apartment numbers in the buildings managed by \"Kyle\".", "query": "SELECT T2.apt_type_code ,  T2.apt_number FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id  =  T2.building_id WHERE T1.building_manager  =  \"Kyle\""}
{"question": "What apartment type codes and apartment numbers do the buildings managed by \"Kyle\" have?", "query": "SELECT T2.apt_type_code ,  T2.apt_number FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id  =  T2.building_id WHERE T1.building_manager  =  \"Kyle\""}
{"question": "Show the booking status code and the corresponding number of bookings.", "query": "SELECT \tbooking_status_code ,  COUNT(*) FROM Apartment_Bookings GROUP BY booking_status_code"}
{"question": "How many bookings does each booking status have? List the booking status code and the number of corresponding bookings.", "query": "SELECT \tbooking_status_code ,  COUNT(*) FROM Apartment_Bookings GROUP BY booking_status_code"}
{"question": "Return all the apartment numbers sorted by the room count in ascending order.", "query": "SELECT apt_number FROM Apartments ORDER BY room_count ASC"}
{"question": "Sort the apartment numbers in ascending order of room count.", "query": "SELECT apt_number FROM Apartments ORDER BY room_count ASC"}
{"question": "Return the apartment number with the largest number of bedrooms.", "query": "SELECT apt_number FROM Apartments ORDER BY bedroom_count DESC LIMIT 1"}
{"question": "What is the apartment number of the apartment with the most beds?", "query": "SELECT apt_number FROM Apartments ORDER BY bedroom_count DESC LIMIT 1"}
{"question": "Show the apartment type codes and the corresponding number of apartments sorted by the number of apartments in ascending order.", "query": "SELECT apt_type_code ,  COUNT(*) FROM Apartments GROUP BY apt_type_code ORDER BY COUNT(*) ASC"}
{"question": "Return each apartment type code with the number of apartments having that apartment type, in ascending order of the number of apartments.", "query": "SELECT apt_type_code ,  COUNT(*) FROM Apartments GROUP BY apt_type_code ORDER BY COUNT(*) ASC"}
{"question": "Show the top 3 apartment type codes sorted by the average number of rooms in descending order.", "query": "SELECT apt_type_code FROM Apartments GROUP BY apt_type_code ORDER BY avg(room_count) DESC LIMIT 3"}
{"question": "What are the top three apartment types in terms of the average room count? Give me the", "query": "SELECT apt_type_code FROM Apartments GROUP BY apt_type_code ORDER BY avg(room_count) DESC LIMIT 3"}
{"question": "Show the apartment type code that has the largest number of total rooms, together with the number of bathrooms and number of bedrooms.", "query": "SELECT apt_type_code ,  bathroom_count ,  bedroom_count FROM Apartments GROUP BY apt_type_code ORDER BY sum(room_count) DESC LIMIT 1"}
{"question": "Which apartment type has the largest number of total rooms? Return the apartment type code, its number of bathrooms and number of bedrooms.", "query": "SELECT apt_type_code ,  bathroom_count ,  bedroom_count FROM Apartments GROUP BY apt_type_code ORDER BY sum(room_count) DESC LIMIT 1"}
{"question": "Show the most common apartment type code.", "query": "SELECT apt_type_code FROM Apartments GROUP BY apt_type_code ORDER BY count(*) DESC LIMIT 1"}
{"question": "Which apartment type code appears the most often?", "query": "SELECT apt_type_code FROM Apartments GROUP BY apt_type_code ORDER BY count(*) DESC LIMIT 1"}
{"question": "Show the most common apartment type code among apartments with more than 1 bathroom.", "query": "SELECT apt_type_code FROM Apartments WHERE bathroom_count  >  1 GROUP BY apt_type_code ORDER BY count(*) DESC LIMIT 1"}
{"question": "Which apartment type code is the most common among apartments with more than one bathroom?", "query": "SELECT apt_type_code FROM Apartments WHERE bathroom_count  >  1 GROUP BY apt_type_code ORDER BY count(*) DESC LIMIT 1"}
{"question": "Show each apartment type code, and the maximum and minimum number of rooms for each type.", "query": "SELECT apt_type_code ,  max(room_count) ,  min(room_count) FROM Apartments GROUP BY apt_type_code"}
{"question": "Return each apartment type code along with the maximum and minimum number of rooms among each type.", "query": "SELECT apt_type_code ,  max(room_count) ,  min(room_count) FROM Apartments GROUP BY apt_type_code"}
{"question": "Show each gender code and the corresponding count of guests sorted by the count in descending order.", "query": "SELECT gender_code ,  COUNT(*) FROM Guests GROUP BY gender_code ORDER BY COUNT(*) DESC"}
{"question": "Sort the gender codes in descending order of their corresponding number of guests. Return both the gender codes and counts.", "query": "SELECT gender_code ,  COUNT(*) FROM Guests GROUP BY gender_code ORDER BY COUNT(*) DESC"}
{"question": "How many apartments do not have any facility?", "query": "SELECT count(*) FROM Apartments WHERE apt_id NOT IN (SELECT apt_id FROM Apartment_Facilities)"}
{"question": "Find the number of apartments that have no facility.", "query": "SELECT count(*) FROM Apartments WHERE apt_id NOT IN (SELECT apt_id FROM Apartment_Facilities)"}
{"question": "Show the apartment numbers of apartments with bookings that have status code both \"Provisional\" and \"Confirmed\"", "query": "SELECT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.booking_status_code  =  \"Confirmed\" INTERSECT SELECT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.booking_status_code  =  \"Provisional\""}
{"question": "Which apartments have bookings with both status codes \"Provisional\" and \"Confirmed\"? Give me the apartment numbers.", "query": "SELECT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.booking_status_code  =  \"Confirmed\" INTERSECT SELECT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.booking_status_code  =  \"Provisional\""}
{"question": "Show the apartment numbers of apartments with unit status availability of both 0 and 1.", "query": "SELECT T1.apt_number FROM Apartments AS T1 JOIN View_Unit_Status AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.available_yn  =  0 INTERSECT SELECT T1.apt_number FROM Apartments AS T1 JOIN View_Unit_Status AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.available_yn  =  1"}
{"question": "Which apartments have unit status availability of both 0 and 1? Return their apartment numbers.", "query": "SELECT T1.apt_number FROM Apartments AS T1 JOIN View_Unit_Status AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.available_yn  =  0 INTERSECT SELECT T1.apt_number FROM Apartments AS T1 JOIN View_Unit_Status AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.available_yn  =  1"}
{"question": "How many games are held after season 2007?", "query": "SELECT count(*) FROM game WHERE season  >  2007"}
{"question": "List the dates of games by the home team name in descending order.", "query": "SELECT Date FROM game ORDER BY home_team DESC"}
{"question": "List the season, home team, away team of all the games.", "query": "SELECT season ,  home_team ,  away_team FROM game"}
{"question": "What are the maximum, minimum and average home games each stadium held?", "query": "SELECT max(home_games) ,  min(home_games) ,  avg(home_games) FROM stadium"}
{"question": "What is the average attendance of stadiums with capacity percentage higher than 100%?", "query": "SELECT average_attendance FROM stadium WHERE capacity_percentage  >  100"}
{"question": "What are the player name, number of matches, and information source for players who do not suffer from injury of 'Knee problem'?", "query": "SELECT player ,  number_of_matches ,  SOURCE FROM injury_accident WHERE injury != 'Knee problem'"}
{"question": "What is the season of the game which causes the player 'Walter Samuel' to get injured?", "query": "SELECT T1.season FROM game AS T1 JOIN injury_accident AS T2 ON T1.id  =  T2.game_id WHERE T2.player  =  'Walter Samuel'"}
{"question": "What are the ids, scores, and dates of the games which caused at least two injury accidents?", "query": "SELECT T1.id ,  T1.score ,  T1.date FROM game AS T1 JOIN injury_accident AS T2 ON T2.game_id  =  T1.id GROUP BY T1.id HAVING count(*)  >=  2"}
{"question": "What are the id and name of the stadium where the most injury accidents happened?", "query": "SELECT T1.id ,  T1.name FROM stadium AS T1 JOIN game AS T2 ON T1.id  =  T2.stadium_id JOIN injury_accident AS T3 ON T2.id  =  T3.game_id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1"}
{"question": "Find the id and name of the stadium where the largest number of injury accidents occurred.", "query": "SELECT T1.id ,  T1.name FROM stadium AS T1 JOIN game AS T2 ON T1.id  =  T2.stadium_id JOIN injury_accident AS T3 ON T2.id  =  T3.game_id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1"}
{"question": "In which season and which stadium did any player have an injury of 'Foot injury' or 'Knee problem'?", "query": "SELECT T1.season ,  T2.name FROM game AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.id JOIN injury_accident AS T3 ON T1.id  =  T3.game_id WHERE T3.injury  =  'Foot injury' OR T3.injury  =  'Knee problem'"}
{"question": "How many different kinds of information sources are there for injury accidents?", "query": "SELECT count(DISTINCT SOURCE) FROM injury_accident"}
{"question": "How many games are free of injury accidents?", "query": "SELECT count(*) FROM game WHERE id NOT IN ( SELECT game_id FROM injury_accident )"}
{"question": "How many distinct kinds of injuries happened after season 2010?", "query": "SELECT count(DISTINCT T1.injury) FROM injury_accident AS T1 JOIN game AS T2 ON T1.game_id  =  T2.id WHERE T2.season  >  2010"}
{"question": "List the name of the stadium where both the player 'Walter Samuel' and the player 'Thiago Motta' got injured.", "query": "SELECT T2.name FROM game AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.id JOIN injury_accident AS T3 ON T1.id  =  T3.game_id WHERE T3.player  =  'Walter Samuel' INTERSECT SELECT T2.name FROM game AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.id JOIN injury_accident AS T3 ON T1.id  =  T3.game_id WHERE T3.player  =  'Thiago Motta'"}
{"question": "Show the name, average attendance, total attendance for stadiums where no accidents happened.", "query": "SELECT name ,  average_attendance ,  total_attendance FROM stadium EXCEPT SELECT T2.name ,  T2.average_attendance ,  T2.total_attendance FROM game AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.id JOIN injury_accident AS T3 ON T1.id  =  T3.game_id"}
{"question": "Which stadium name contains the substring \"Bank\"?", "query": "SELECT name FROM stadium WHERE name LIKE \"%Bank%\""}
{"question": "How many games has each stadium held?", "query": "SELECT T1.id ,  count(*) FROM stadium AS T1 JOIN game AS T2 ON T1.id  =  T2.stadium_id GROUP BY T1.id"}
{"question": "For each injury accident, find the date of the game and the name of the injured player in the game, and sort the results in descending order of game season.", "query": "SELECT T1.date ,  T2.player FROM game AS T1 JOIN injury_accident AS T2 ON T1.id  =  T2.game_id ORDER BY T1.season DESC"}
{"question": "List all country and league names.", "query": "SELECT T1.name ,  T2.name FROM Country AS T1 JOIN League AS T2 ON T1.id  =  T2.country_id"}
{"question": "How many leagues are there in England?", "query": "SELECT count(*) FROM Country AS T1 JOIN League AS T2 ON T1.id  =  T2.country_id WHERE T1.name  =  \"England\""}
{"question": "What is the average weight of all players?", "query": "SELECT avg(weight) FROM Player"}
{"question": "What is the maximum and minimum height of all players?", "query": "SELECT max(weight) ,  min(weight) FROM Player"}
{"question": "List all player names who have an overall rating higher than the average.", "query": "SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.overall_rating  >  ( SELECT avg(overall_rating) FROM Player_Attributes )"}
{"question": "What are the names of players who have the best dribbling?", "query": "SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.dribbling  =  ( SELECT max(overall_rating) FROM Player_Attributes)"}
{"question": "List the names of all players who have a crossing score higher than 90 and prefer their right foot.", "query": "SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.crossing  >  90 AND T2.preferred_foot  =  \"right\""}
{"question": "List the names of all left-footed players who have overall rating between 85 and 90.", "query": "SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.preferred_foot  =  \"left\" AND T2.overall_rating  >=  85 AND T2.overall_rating  <=  90"}
{"question": "What is the average rating for right-footed players and left-footed players?", "query": "SELECT preferred_foot ,  avg(overall_rating) FROM Player_Attributes GROUP BY preferred_foot"}
{"question": "Of all players with an overall rating greater than 80, how many are right-footed and left-footed?", "query": "SELECT preferred_foot ,  count(*) FROM Player_Attributes WHERE overall_rating  >  80 GROUP BY preferred_foot"}
{"question": "List all of the player ids with a height of at least 180cm and an overall rating higher than 85.", "query": "SELECT player_api_id FROM Player WHERE height  >=  180 INTERSECT SELECT player_api_id FROM Player_Attributes WHERE overall_rating  >  85"}
{"question": "List all of the ids for left-footed players with a height between 180cm and 190cm.", "query": "SELECT player_api_id FROM Player WHERE height  >=  180 AND height  <=  190 INTERSECT SELECT player_api_id FROM Player_Attributes WHERE preferred_foot  =  \"left\""}
{"question": "Who are the top 3 players in terms of overall rating?", "query": "SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id  =  T2.player_api_id ORDER BY overall_rating DESC LIMIT 3"}
{"question": "List the names and birthdays of the top five players in terms of potential.", "query": "SELECT DISTINCT T1.player_name ,  T1.birthday FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id  =  T2.player_api_id ORDER BY potential DESC LIMIT 5"}
{"question": "How many performances are there?", "query": "SELECT count(*) FROM performance"}
{"question": "List the hosts of performances in ascending order of attendance.", "query": "SELECT HOST FROM performance ORDER BY Attendance ASC"}
{"question": "What are the dates and locations of performances?", "query": "SELECT Date ,  LOCATION FROM performance"}
{"question": "Show the attendances of the performances at location \"TD Garden\" or \"Bell Centre\"", "query": "SELECT Attendance FROM performance WHERE LOCATION  =  \"TD Garden\" OR LOCATION  =  \"Bell Centre\""}
{"question": "What is the average number of attendees for performances?", "query": "SELECT avg(Attendance) FROM performance"}
{"question": "What is the date of the performance with the highest number of attendees?", "query": "SELECT Date FROM performance ORDER BY Attendance DESC LIMIT 1"}
{"question": "Show different locations and the number of performances at each location.", "query": "SELECT LOCATION ,  COUNT(*) FROM performance GROUP BY LOCATION"}
{"question": "Show the most common location of performances.", "query": "SELECT LOCATION FROM performance GROUP BY LOCATION ORDER BY COUNT(*) DESC LIMIT 1"}
{"question": "Show the locations that have at least two performances.", "query": "SELECT LOCATION FROM performance GROUP BY LOCATION HAVING COUNT(*)  >=  2"}
{"question": "Show the locations that have both performances with more than 2000 attendees and performances with less than 1000 attendees.", "query": "SELECT LOCATION FROM performance WHERE Attendance  >  2000 INTERSECT SELECT LOCATION FROM performance WHERE Attendance  <  1000"}
{"question": "Show the names of members and the location of the performances they attended.", "query": "SELECT T2.Name ,  T3.Location FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID  =  T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID  =  T3.Performance_ID"}
{"question": "Show the names of members and the location of performances they attended in ascending alphabetical order of their names.", "query": "SELECT T2.Name ,  T3.Location FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID  =  T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID  =  T3.Performance_ID ORDER BY T2.Name ASC"}
{"question": "Show the dates of performances with attending members whose roles are \"Violin\".", "query": "SELECT T3.Date FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID  =  T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID  =  T3.Performance_ID WHERE T2.Role  =  \"Violin\""}
{"question": "Show the names of members and the dates of performances they attended in descending order of attendance of the performances.", "query": "SELECT T2.Name ,  T3.Date FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID  =  T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID  =  T3.Performance_ID ORDER BY T3.Attendance DESC"}
{"question": "List the names of members who did not attend any performance.", "query": "SELECT Name FROM member WHERE Member_ID NOT IN (SELECT Member_ID FROM member_attendance)"}
{"question": "Find the buildings which have rooms with capacity more than 50.", "query": "SELECT DISTINCT building FROM classroom WHERE capacity  >  50"}
{"question": "What are the distinct buildings with capacities of greater than 50?", "query": "SELECT DISTINCT building FROM classroom WHERE capacity  >  50"}
{"question": "Count the number of rooms that are not in the Lamberton building.", "query": "SELECT count(*) FROM classroom WHERE building != 'Lamberton'"}
{"question": "How many classrooms are not in Lamberton?", "query": "SELECT count(*) FROM classroom WHERE building != 'Lamberton'"}
{"question": "What is the name and building of the departments whose budget is more than the average budget?", "query": "SELECT dept_name ,  building FROM department WHERE budget  >  (SELECT avg(budget) FROM department)"}
{"question": "Give the name and building of the departments with greater than average budget.", "query": "SELECT dept_name ,  building FROM department WHERE budget  >  (SELECT avg(budget) FROM department)"}
{"question": "Find the room number of the rooms which can sit 50 to 100 students and their buildings.", "query": "SELECT building ,  room_number FROM classroom WHERE capacity BETWEEN 50 AND 100"}
{"question": "What are the room numbers and corresponding buildings for classrooms which can seat between 50 to 100 students?", "query": "SELECT building ,  room_number FROM classroom WHERE capacity BETWEEN 50 AND 100"}
{"question": "Find the name and building of the department with the highest budget.", "query": "SELECT dept_name ,  building FROM department ORDER BY budget DESC LIMIT 1"}
{"question": "What is the department name and corresponding building for the department with the greatest budget?", "query": "SELECT dept_name ,  building FROM department ORDER BY budget DESC LIMIT 1"}
{"question": "What is the name of the student who has the highest total credits in the History department.", "query": "SELECT name FROM student WHERE dept_name  =  'History' ORDER BY tot_cred DESC LIMIT 1"}
{"question": "Give the name of the student in the History department with the most credits.", "query": "SELECT name FROM student WHERE dept_name  =  'History' ORDER BY tot_cred DESC LIMIT 1"}
{"question": "How many rooms does the Lamberton building have?", "query": "SELECT count(*) FROM classroom WHERE building  =  'Lamberton'"}
{"question": "Count the number of classrooms in Lamberton.", "query": "SELECT count(*) FROM classroom WHERE building  =  'Lamberton'"}
{"question": "How many students have advisors?", "query": "SELECT count(DISTINCT s_id) FROM advisor"}
{"question": "Count the number of students who have advisors.", "query": "SELECT count(DISTINCT s_id) FROM advisor"}
{"question": "How many departments offer courses?", "query": "SELECT count(DISTINCT dept_name) FROM course"}
{"question": "Count the number of departments which offer courses.", "query": "SELECT count(DISTINCT dept_name) FROM course"}
{"question": "How many different courses offered by Physics department?", "query": "SELECT count(DISTINCT course_id) FROM course WHERE dept_name  =  'Physics'"}
{"question": "Count the number of courses in the Physics department.", "query": "SELECT count(DISTINCT course_id) FROM course WHERE dept_name  =  'Physics'"}
{"question": "Find the title of courses that have two prerequisites?", "query": "SELECT T1.title FROM course AS T1 JOIN prereq AS T2 ON T1.course_id  =  T2.course_id GROUP BY T2.course_id HAVING count(*)  =  2"}
{"question": "What are the titles for courses with two prerequisites?", "query": "SELECT T1.title FROM course AS T1 JOIN prereq AS T2 ON T1.course_id  =  T2.course_id GROUP BY T2.course_id HAVING count(*)  =  2"}
{"question": "Find the title, credit, and department name of courses that have more than one prerequisites?", "query": "SELECT T1.title ,  T1.credits , T1.dept_name FROM course AS T1 JOIN prereq AS T2 ON T1.course_id  =  T2.course_id GROUP BY T2.course_id HAVING count(*)  >  1"}
{"question": "What is the title, credit value, and department name for courses with more than one prerequisite?", "query": "SELECT T1.title ,  T1.credits , T1.dept_name FROM course AS T1 JOIN prereq AS T2 ON T1.course_id  =  T2.course_id GROUP BY T2.course_id HAVING count(*)  >  1"}
{"question": "How many courses that do not have prerequisite?", "query": "SELECT count(*) FROM course WHERE course_id NOT IN (SELECT course_id FROM prereq)"}
{"question": "Count the number of courses without prerequisites.", "query": "SELECT count(*) FROM course WHERE course_id NOT IN (SELECT course_id FROM prereq)"}
{"question": "Find the name of the courses that do not have any prerequisite?", "query": "SELECT title FROM course WHERE course_id NOT IN (SELECT course_id FROM prereq)"}
{"question": "What are the titles of courses without prerequisites?", "query": "SELECT title FROM course WHERE course_id NOT IN (SELECT course_id FROM prereq)"}
{"question": "How many different instructors have taught some course?", "query": "SELECT COUNT (DISTINCT id) FROM teaches"}
{"question": "Count the number of distinct instructors who have taught a course.", "query": "SELECT COUNT (DISTINCT id) FROM teaches"}
{"question": "Find the total budgets of the Marketing or Finance department.", "query": "SELECT sum(budget) FROM department WHERE dept_name  =  'Marketing' OR dept_name  =  'Finance'"}
{"question": "What is the sum of budgets of the Marketing and Finance departments?", "query": "SELECT sum(budget) FROM department WHERE dept_name  =  'Marketing' OR dept_name  =  'Finance'"}
{"question": "Find the department name of the instructor whose name contains 'Soisalon'.", "query": "SELECT dept_name FROM instructor WHERE name LIKE '%Soisalon%'"}
{"question": "What is the name of the department with an instructure who has a name like 'Soisalon'?", "query": "SELECT dept_name FROM instructor WHERE name LIKE '%Soisalon%'"}
{"question": "How many rooms whose capacity is less than 50 does the Lamberton building have?", "query": "SELECT count(*) FROM classroom WHERE building  =  'Lamberton' AND capacity  <  50"}
{"question": "Count the number of rooms in Lamberton with capacity lower than 50.", "query": "SELECT count(*) FROM classroom WHERE building  =  'Lamberton' AND capacity  <  50"}
{"question": "Find the name and budget of departments whose budgets are more than the average budget.", "query": "SELECT dept_name ,  budget FROM department WHERE budget  >  (SELECT avg(budget) FROM department)"}
{"question": "What are the names and budgets of departments with budgets greater than the average?", "query": "SELECT dept_name ,  budget FROM department WHERE budget  >  (SELECT avg(budget) FROM department)"}
{"question": "what is the name of the instructor who is in Statistics department and earns the lowest salary?", "query": "SELECT name FROM instructor WHERE dept_name  =  'Statistics' ORDER BY salary LIMIT 1"}
{"question": "Give the name of the lowest earning instructor in the Statistics department.", "query": "SELECT name FROM instructor WHERE dept_name  =  'Statistics' ORDER BY salary LIMIT 1"}
{"question": "Find the title of course that is provided by both Statistics and Psychology departments.", "query": "SELECT title FROM course WHERE dept_name  =  'Statistics' INTERSECT SELECT title FROM course WHERE dept_name  =  'Psychology'"}
{"question": "What is the title of a course that is listed in both the Statistics and Psychology departments?", "query": "SELECT title FROM course WHERE dept_name  =  'Statistics' INTERSECT SELECT title FROM course WHERE dept_name  =  'Psychology'"}
{"question": "Find the title of course that is provided by Statistics but not Psychology departments.", "query": "SELECT title FROM course WHERE dept_name  =  'Statistics' EXCEPT SELECT title FROM course WHERE dept_name  =  'Psychology'"}
{"question": "What are the titles of courses that are in the Statistics department but not the Psychology department?", "query": "SELECT title FROM course WHERE dept_name  =  'Statistics' EXCEPT SELECT title FROM course WHERE dept_name  =  'Psychology'"}
{"question": "Find the id of instructors who taught a class in Fall 2009 but not in Spring 2010.", "query": "SELECT id FROM teaches WHERE semester  =  'Fall' AND YEAR  =  2009 EXCEPT SELECT id FROM teaches WHERE semester  =  'Spring' AND YEAR  =  2010"}
{"question": "What are the ids of instructors who taught in the Fall of 2009 but not in the Spring of 2010?", "query": "SELECT id FROM teaches WHERE semester  =  'Fall' AND YEAR  =  2009 EXCEPT SELECT id FROM teaches WHERE semester  =  'Spring' AND YEAR  =  2010"}
{"question": "Find the name of students who took any class in the years of 2009 and 2010.", "query": "SELECT DISTINCT T1.name FROM student AS T1 JOIN takes AS T2 ON T1.id  =  T2.id WHERE YEAR  =  2009 OR YEAR  =  2010"}
{"question": "What are the names of the students who took classes in 2009 or 2010?", "query": "SELECT DISTINCT T1.name FROM student AS T1 JOIN takes AS T2 ON T1.id  =  T2.id WHERE YEAR  =  2009 OR YEAR  =  2010"}
{"question": "Find the names of the top 3 departments that provide the largest amount of courses?", "query": "SELECT dept_name FROM course GROUP BY dept_name ORDER BY count(*) DESC LIMIT 3"}
{"question": "What are the names of the 3 departments with the most courses?", "query": "SELECT dept_name FROM course GROUP BY dept_name ORDER BY count(*) DESC LIMIT 3"}
{"question": "Find the name of the department that offers the highest total credits?", "query": "SELECT dept_name FROM course GROUP BY dept_name ORDER BY sum(credits) DESC LIMIT 1"}
{"question": "What is the name of the department with the most credits?", "query": "SELECT dept_name FROM course GROUP BY dept_name ORDER BY sum(credits) DESC LIMIT 1"}
{"question": "List the names of all courses ordered by their titles and credits.", "query": "SELECT title FROM course ORDER BY title ,  credits"}
{"question": "Given the titles of all courses, in order of titles and credits.", "query": "SELECT title FROM course ORDER BY title ,  credits"}
{"question": "Which department has the lowest budget?", "query": "SELECT dept_name FROM department ORDER BY budget LIMIT 1"}
{"question": "Give the name of the department with the lowest budget.", "query": "SELECT dept_name FROM department ORDER BY budget LIMIT 1"}
{"question": "List the names and buildings of all departments sorted by the budget from large to small.", "query": "SELECT dept_name ,  building FROM department ORDER BY budget DESC"}
{"question": "What are the names and buildings of the deparments, sorted by budget descending?", "query": "SELECT dept_name ,  building FROM department ORDER BY budget DESC"}
{"question": "Who is the instructor with the highest salary?", "query": "SELECT name FROM instructor ORDER BY salary DESC LIMIT 1"}
{"question": "Give the name of the highest paid instructor.", "query": "SELECT name FROM instructor ORDER BY salary DESC LIMIT 1"}
{"question": "List the information of all instructors ordered by their salary in ascending order.", "query": "SELECT * FROM instructor ORDER BY salary"}
{"question": "Give all information regarding instructors, in order of salary from least to greatest.", "query": "SELECT * FROM instructor ORDER BY salary"}
{"question": "Find the name of the students and their department names sorted by their total credits in ascending order.", "query": "SELECT name ,  dept_name FROM student ORDER BY tot_cred"}
{"question": "What are the names of students and their respective departments, ordered by number of credits from least to greatest?", "query": "SELECT name ,  dept_name FROM student ORDER BY tot_cred"}
{"question": "list in alphabetic order all course names and their instructors' names in year 2008.", "query": "SELECT T1.title ,  T3.name FROM course AS T1 JOIN teaches AS T2 ON T1.course_id  =  T2.course_id JOIN instructor AS T3 ON T2.id  =  T3.id WHERE YEAR  =  2008 ORDER BY T1.title"}
{"question": "Show all titles and their instructors' names for courses in 2008, in alphabetical order by title.", "query": "SELECT T1.title ,  T3.name FROM course AS T1 JOIN teaches AS T2 ON T1.course_id  =  T2.course_id JOIN instructor AS T3 ON T2.id  =  T3.id WHERE YEAR  =  2008 ORDER BY T1.title"}
{"question": "Find the name of instructors who are advising more than one student.", "query": "SELECT T1.name FROM instructor AS T1 JOIN advisor AS T2 ON T1.id  =  T2.i_id GROUP BY T2.i_id HAVING count(*)  >  1"}
{"question": "What are the names of instructors who advise more than one student?", "query": "SELECT T1.name FROM instructor AS T1 JOIN advisor AS T2 ON T1.id  =  T2.i_id GROUP BY T2.i_id HAVING count(*)  >  1"}
{"question": "Find the name of the students who have more than one advisor?", "query": "SELECT T1.name FROM student AS T1 JOIN advisor AS T2 ON T1.id  =  T2.s_id GROUP BY T2.s_id HAVING count(*)  >  1"}
{"question": "What are the names of students who have more than one advisor?", "query": "SELECT T1.name FROM student AS T1 JOIN advisor AS T2 ON T1.id  =  T2.s_id GROUP BY T2.s_id HAVING count(*)  >  1"}
{"question": "Find the number of rooms with more than 50 capacity for each building.", "query": "SELECT count(*) ,  building FROM classroom WHERE capacity  >  50 GROUP BY building"}
{"question": "How many rooms in each building have a capacity of over 50?", "query": "SELECT count(*) ,  building FROM classroom WHERE capacity  >  50 GROUP BY building"}
{"question": "Find the maximum and average capacity among rooms in each building.", "query": "SELECT max(capacity) ,  avg(capacity) ,  building FROM classroom GROUP BY building"}
{"question": "What are the greatest and average capacity for rooms in each building?", "query": "SELECT max(capacity) ,  avg(capacity) ,  building FROM classroom GROUP BY building"}
{"question": "Find the title of the course that is offered by more than one department.", "query": "SELECT title FROM course GROUP BY title HAVING count(*)  >  1"}
{"question": "What are the titles of courses that are offered in more than one department?", "query": "SELECT title FROM course GROUP BY title HAVING count(*)  >  1"}
{"question": "Find the total credits of courses provided by different department.", "query": "SELECT sum(credits) ,  dept_name FROM course GROUP BY dept_name"}
{"question": "How many total credits are offered by each department?", "query": "SELECT sum(credits) ,  dept_name FROM course GROUP BY dept_name"}
{"question": "Find the minimum salary for the departments whose average salary is above the average payment of all instructors.", "query": "SELECT min(salary) ,  dept_name FROM instructor GROUP BY dept_name HAVING avg(salary)  >  (SELECT avg(salary) FROM instructor)"}
{"question": "What is the lowest salary in departments with average salary greater than the overall average.", "query": "SELECT min(salary) ,  dept_name FROM instructor GROUP BY dept_name HAVING avg(salary)  >  (SELECT avg(salary) FROM instructor)"}
{"question": "Find the number of courses provided in each semester and year.", "query": "SELECT count(*) ,  semester ,  YEAR FROM SECTION GROUP BY semester ,  YEAR"}
{"question": "How many courses are provided in each semester and year?", "query": "SELECT count(*) ,  semester ,  YEAR FROM SECTION GROUP BY semester ,  YEAR"}
{"question": "Find the year which offers the largest number of courses.", "query": "SELECT YEAR FROM SECTION GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1"}
{"question": "Which year had the greatest number of courses?", "query": "SELECT YEAR FROM SECTION GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1"}
{"question": "Find the year and semester when offers the largest number of courses.", "query": "SELECT semester ,  YEAR FROM SECTION GROUP BY semester ,  YEAR ORDER BY count(*) DESC LIMIT 1"}
{"question": "What is the year and semester with the most courses?", "query": "SELECT semester ,  YEAR FROM SECTION GROUP BY semester ,  YEAR ORDER BY count(*) DESC LIMIT 1"}
{"question": "Find the name of department has the highest amount of students?", "query": "SELECT dept_name FROM student GROUP BY dept_name ORDER BY count(*) DESC LIMIT 1"}
{"question": "What is the name of the deparment with the highest enrollment?", "query": "SELECT dept_name FROM student GROUP BY dept_name ORDER BY count(*) DESC LIMIT 1"}
{"question": "Find the total number of students in each department.", "query": "SELECT count(*) ,  dept_name FROM student GROUP BY dept_name"}
{"question": "How many students are in each department?", "query": "SELECT count(*) ,  dept_name FROM student GROUP BY dept_name"}
{"question": "Find the semester and year which has the least number of student taking any class.", "query": "SELECT semester ,  YEAR FROM takes GROUP BY semester ,  YEAR ORDER BY count(*) LIMIT 1"}
{"question": "Which semeseter and year had the fewest students?", "query": "SELECT semester ,  YEAR FROM takes GROUP BY semester ,  YEAR ORDER BY count(*) LIMIT 1"}
{"question": "What is the id of the instructor who advises of all students from History department?", "query": "SELECT i_id FROM advisor AS T1 JOIN student AS T2 ON T1.s_id  =  T2.id WHERE T2.dept_name  =  'History'"}
{"question": "Give id of the instructor who advises students in the History department.", "query": "SELECT i_id FROM advisor AS T1 JOIN student AS T2 ON T1.s_id  =  T2.id WHERE T2.dept_name  =  'History'"}
{"question": "Find the name and salary of the instructors who are advisors of any student from History department?", "query": "SELECT T2.name ,  T2.salary FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id WHERE T3.dept_name  =  'History'"}
{"question": "What are the names and salaries of instructors who advises students in the History department?", "query": "SELECT T2.name ,  T2.salary FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id WHERE T3.dept_name  =  'History'"}
{"question": "Find the id of the courses that do not have any prerequisite?", "query": "SELECT course_id FROM course EXCEPT SELECT course_id FROM prereq"}
{"question": "What are the ids of courses without prerequisites?", "query": "SELECT course_id FROM course EXCEPT SELECT course_id FROM prereq"}
{"question": "What are the names of courses without prerequisites?", "query": "SELECT title FROM course WHERE course_id NOT IN (SELECT course_id FROM prereq)"}
{"question": "What is the title of the prerequisite class of International Finance course?", "query": "SELECT title FROM course WHERE course_id IN (SELECT T1.prereq_id FROM prereq AS T1 JOIN course AS T2 ON T1.course_id  =  T2.course_id WHERE T2.title  =  'International Finance')"}
{"question": "Give the title of the prerequisite to the course International Finance.", "query": "SELECT title FROM course WHERE course_id IN (SELECT T1.prereq_id FROM prereq AS T1 JOIN course AS T2 ON T1.course_id  =  T2.course_id WHERE T2.title  =  'International Finance')"}
{"question": "Find the title of course whose prerequisite is course Differential Geometry.", "query": "SELECT title FROM course WHERE course_id IN (SELECT T1.course_id FROM prereq AS T1 JOIN course AS T2 ON T1.prereq_id  =  T2.course_id WHERE T2.title  =  'Differential Geometry')"}
{"question": "What is the title of the course with Differential Geometry as a prerequisite?", "query": "SELECT title FROM course WHERE course_id IN (SELECT T1.course_id FROM prereq AS T1 JOIN course AS T2 ON T1.prereq_id  =  T2.course_id WHERE T2.title  =  'Differential Geometry')"}
{"question": "Find the names of students who have taken any course in the fall semester of year 2003.", "query": "SELECT name FROM student WHERE id IN (SELECT id FROM takes WHERE semester  =  'Fall' AND YEAR  =  2003)"}
{"question": "What are the names of students who took a course in the Fall of 2003?", "query": "SELECT name FROM student WHERE id IN (SELECT id FROM takes WHERE semester  =  'Fall' AND YEAR  =  2003)"}
{"question": "What is the title of the course that was offered at building Chandler during the fall semester in the year of 2010?", "query": "SELECT T1.title FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id  =  T2.course_id WHERE building  =  'Chandler' AND semester  =  'Fall' AND YEAR  =  2010"}
{"question": "Give the title of the course offered in Chandler during the Fall of 2010.", "query": "SELECT T1.title FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id  =  T2.course_id WHERE building  =  'Chandler' AND semester  =  'Fall' AND YEAR  =  2010"}
{"question": "Find the name of the instructors who taught C Programming course before.", "query": "SELECT T1.name FROM instructor AS T1 JOIN teaches AS T2 ON T1.id  =  T2.id JOIN course AS T3 ON T2.course_id  =  T3.course_id WHERE T3.title  =  'C Programming'"}
{"question": "What are the names of instructors who have taught C Programming courses?", "query": "SELECT T1.name FROM instructor AS T1 JOIN teaches AS T2 ON T1.id  =  T2.id JOIN course AS T3 ON T2.course_id  =  T3.course_id WHERE T3.title  =  'C Programming'"}
{"question": "Find the name and salary of instructors who are advisors of the students from the Math department.", "query": "SELECT T2.name ,  T2.salary FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id WHERE T3.dept_name  =  'Math'"}
{"question": "What are the names and salaries of instructors who advise students in the Math department?", "query": "SELECT T2.name ,  T2.salary FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id WHERE T3.dept_name  =  'Math'"}
{"question": "Find the name of instructors who are advisors of the students from the Math department, and sort the results by students' total credit.", "query": "SELECT T2.name FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id WHERE T3.dept_name  =  'Math' ORDER BY T3.tot_cred"}
{"question": "What are the names of all instructors who advise students in the math depart sorted by total credits of the student.", "query": "SELECT T2.name FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id WHERE T3.dept_name  =  'Math' ORDER BY T3.tot_cred"}
{"question": "What is the course title of the prerequisite of course Mobile Computing?", "query": "SELECT title FROM course WHERE course_id IN (SELECT T1.prereq_id FROM prereq AS T1 JOIN course AS T2 ON T1.course_id  =  T2.course_id WHERE T2.title  =  'Mobile Computing')"}
{"question": "What is the title of the course that is a prerequisite for Mobile Computing?", "query": "SELECT title FROM course WHERE course_id IN (SELECT T1.prereq_id FROM prereq AS T1 JOIN course AS T2 ON T1.course_id  =  T2.course_id WHERE T2.title  =  'Mobile Computing')"}
{"question": "Find the name of instructor who is the advisor of the student who has the highest number of total credits.", "query": "SELECT T2.name FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id ORDER BY T3.tot_cred DESC LIMIT 1"}
{"question": "What is the name of the instructor who advises the student with the greatest number of total credits?", "query": "SELECT T2.name FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id ORDER BY T3.tot_cred DESC LIMIT 1"}
{"question": "Find the name of instructors who didn't teach any courses?", "query": "SELECT name FROM instructor WHERE id NOT IN (SELECT id FROM teaches)"}
{"question": "What are the names of instructors who didn't teach?", "query": "SELECT name FROM instructor WHERE id NOT IN (SELECT id FROM teaches)"}
{"question": "Find the id of instructors who didn't teach any courses?", "query": "SELECT id FROM instructor EXCEPT SELECT id FROM teaches"}
{"question": "What are the ids of instructors who didnt' teach?", "query": "SELECT id FROM instructor EXCEPT SELECT id FROM teaches"}
{"question": "Find the names of instructors who didn't each any courses in any Spring semester.", "query": "SELECT name FROM instructor WHERE id NOT IN (SELECT id FROM teaches WHERE semester  =  'Spring')"}
{"question": "What are the names of instructors who didn't teach courses in the Spring?", "query": "SELECT name FROM instructor WHERE id NOT IN (SELECT id FROM teaches WHERE semester  =  'Spring')"}
{"question": "Find the name of the department which has the highest average salary of professors.", "query": "SELECT dept_name FROM instructor GROUP BY dept_name ORDER BY avg(salary) DESC LIMIT 1"}
{"question": "Which department has the highest average instructor salary?", "query": "SELECT dept_name FROM instructor GROUP BY dept_name ORDER BY avg(salary) DESC LIMIT 1"}
{"question": "Find the number and averaged salary of all instructors who are in the department with the highest budget.", "query": "SELECT avg(T1.salary) ,  count(*) FROM instructor AS T1 JOIN department AS T2 ON T1.dept_name  =  T2.dept_name ORDER BY T2.budget DESC LIMIT 1"}
{"question": "How many instructors are in the department with the highest budget, and what is their average salary?", "query": "SELECT avg(T1.salary) ,  count(*) FROM instructor AS T1 JOIN department AS T2 ON T1.dept_name  =  T2.dept_name ORDER BY T2.budget DESC LIMIT 1"}
{"question": "What is the title and credits of the course that is taught in the largest classroom (with the highest capacity)?", "query": "SELECT T3.title ,  T3.credits FROM classroom AS T1 JOIN SECTION AS T2 ON T1.building  =  T2.building AND T1.room_number  =  T2.room_number JOIN course AS T3 ON T2.course_id  =  T3.course_id WHERE T1.capacity  =  (SELECT max(capacity) FROM classroom)"}
{"question": "Give the title and credits for the course that is taught in the classroom with the greatest capacity.", "query": "SELECT T3.title ,  T3.credits FROM classroom AS T1 JOIN SECTION AS T2 ON T1.building  =  T2.building AND T1.room_number  =  T2.room_number JOIN course AS T3 ON T2.course_id  =  T3.course_id WHERE T1.capacity  =  (SELECT max(capacity) FROM classroom)"}
{"question": "Find the name of students who didn't take any course from Biology department.", "query": "SELECT name FROM student WHERE id NOT IN (SELECT T1.id FROM takes AS T1 JOIN course AS T2 ON T1.course_id  =  T2.course_id WHERE T2.dept_name  =  'Biology')"}
{"question": "What are the names of students who haven't taken any Biology courses?", "query": "SELECT name FROM student WHERE id NOT IN (SELECT T1.id FROM takes AS T1 JOIN course AS T2 ON T1.course_id  =  T2.course_id WHERE T2.dept_name  =  'Biology')"}
{"question": "Find the total number of students and total number of instructors for each department.", "query": "SELECT count(DISTINCT T2.id) ,  count(DISTINCT T3.id) ,  T3.dept_name FROM department AS T1 JOIN student AS T2 ON T1.dept_name  =  T2.dept_name JOIN instructor AS T3 ON T1.dept_name  =  T3.dept_name GROUP BY T3.dept_name"}
{"question": "How many students and instructors are in each department?", "query": "SELECT count(DISTINCT T2.id) ,  count(DISTINCT T3.id) ,  T3.dept_name FROM department AS T1 JOIN student AS T2 ON T1.dept_name  =  T2.dept_name JOIN instructor AS T3 ON T1.dept_name  =  T3.dept_name GROUP BY T3.dept_name"}
{"question": "Find the name of students who have taken the prerequisite course of the course with title International Finance.", "query": "SELECT T1.name FROM student AS T1 JOIN takes AS T2 ON T1.id  =  T2.id WHERE T2.course_id IN (SELECT T4.prereq_id FROM course AS T3 JOIN prereq AS T4 ON T3.course_id  =  T4.course_id WHERE T3.title  =  'International Finance')"}
{"question": "What are the names of students who have taken the prerequisite for the course International Finance?", "query": "SELECT T1.name FROM student AS T1 JOIN takes AS T2 ON T1.id  =  T2.id WHERE T2.course_id IN (SELECT T4.prereq_id FROM course AS T3 JOIN prereq AS T4 ON T3.course_id  =  T4.course_id WHERE T3.title  =  'International Finance')"}
{"question": "Find the name and salary of instructors whose salary is below the average salary of the instructors in the Physics department.", "query": "SELECT name ,  salary FROM instructor WHERE salary  <  (SELECT avg(salary) FROM instructor WHERE dept_name  =  'Physics')"}
{"question": "What are the names and salaries for instructors who earn less than the average salary of instructors in the Physics department?", "query": "SELECT name ,  salary FROM instructor WHERE salary  <  (SELECT avg(salary) FROM instructor WHERE dept_name  =  'Physics')"}
{"question": "Find the name of students who took some course offered by Statistics department.", "query": "SELECT T3.name FROM course AS T1 JOIN takes AS T2 ON T1.course_id  =  T2.course_id JOIN student AS T3 ON T2.id  =  T3.id WHERE T1.dept_name  =  'Statistics'"}
{"question": "What are the names of students who have taken Statistics courses?", "query": "SELECT T3.name FROM course AS T1 JOIN takes AS T2 ON T1.course_id  =  T2.course_id JOIN student AS T3 ON T2.id  =  T3.id WHERE T1.dept_name  =  'Statistics'"}
{"question": "Find the building, room number, semester and year of all courses offered by Psychology department sorted by course titles.", "query": "SELECT T2.building ,  T2.room_number ,  T2.semester ,  T2.year FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id  =  T2.course_id WHERE T1.dept_name  =  'Psychology' ORDER BY T1.title"}
{"question": "What are the building, room number, semester and year of courses in the Psychology department, sorted using course title?", "query": "SELECT T2.building ,  T2.room_number ,  T2.semester ,  T2.year FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id  =  T2.course_id WHERE T1.dept_name  =  'Psychology' ORDER BY T1.title"}
{"question": "Find the names of all instructors in computer science department", "query": "SELECT name FROM instructor WHERE dept_name  =  'Comp. Sci.'"}
{"question": "What are the names of all instructors in the Comp. Sci. department?", "query": "SELECT name FROM instructor WHERE dept_name  =  'Comp. Sci.'"}
{"question": "Find the names of all instructors in Comp. Sci. department with salary > 80000.", "query": "SELECT name FROM instructor WHERE dept_name  =  'Comp. Sci.'  AND salary  >  80000"}
{"question": "What are the names of the instructors in the Comp. Sci. department who earn more than 80000?", "query": "SELECT name FROM instructor WHERE dept_name  =  'Comp. Sci.'  AND salary  >  80000"}
{"question": "Find the names of all instructors who have taught some course and the course_id.", "query": "SELECT name ,  course_id FROM instructor AS T1 JOIN teaches AS T2 ON T1.ID  =  T2.ID"}
{"question": "What are the names of all instructors who have taught a course, as well as the corresponding course id?", "query": "SELECT name ,  course_id FROM instructor AS T1 JOIN teaches AS T2 ON T1.ID  =  T2.ID"}
{"question": "Find the names of all instructors in the Art department who have taught some course and the course_id.", "query": "SELECT name ,  course_id FROM instructor AS T1 JOIN teaches AS T2 ON T1.ID  =  T2.ID WHERE T1.dept_name  =  'Art'"}
{"question": "What are the names of Art instructors who have taught a course, and the corresponding course id?", "query": "SELECT name ,  course_id FROM instructor AS T1 JOIN teaches AS T2 ON T1.ID  =  T2.ID WHERE T1.dept_name  =  'Art'"}
{"question": "Find the names of all instructors whose name includes the substring “dar”.", "query": "SELECT name FROM instructor WHERE name LIKE '%dar%'"}
{"question": "What are the names of all instructors with names that include \"dar\"?", "query": "SELECT name FROM instructor WHERE name LIKE '%dar%'"}
{"question": "List in alphabetic order the names of all distinct instructors.", "query": "SELECT DISTINCT name FROM  instructor ORDER BY name"}
{"question": "List the distinct names of the instructors, ordered by name.", "query": "SELECT DISTINCT name FROM  instructor ORDER BY name"}
{"question": "Find courses that ran in Fall 2009 or in Spring 2010.", "query": "SELECT course_id FROM SECTION WHERE semester  =  'Fall' AND YEAR  =  2009 UNION SELECT course_id FROM SECTION WHERE semester  =  'Spring' AND YEAR  =  2010"}
{"question": "What are the ids for courses in the Fall of 2009 or the Spring of 2010?", "query": "SELECT course_id FROM SECTION WHERE semester  =  'Fall' AND YEAR  =  2009 UNION SELECT course_id FROM SECTION WHERE semester  =  'Spring' AND YEAR  =  2010"}
{"question": "Find courses that ran in Fall 2009 and in Spring 2010.", "query": "SELECT course_id FROM SECTION WHERE semester  =  'Fall' AND YEAR  =  2009 INTERSECT SELECT course_id FROM SECTION WHERE semester  =  'Spring' AND YEAR  =  2010"}
{"question": "What are the ids for courses that were offered in both Fall of 2009 and Spring of 2010?", "query": "SELECT course_id FROM SECTION WHERE semester  =  'Fall' AND YEAR  =  2009 INTERSECT SELECT course_id FROM SECTION WHERE semester  =  'Spring' AND YEAR  =  2010"}
{"question": "Find courses that ran in Fall 2009 but not in Spring 2010.", "query": "SELECT course_id FROM SECTION WHERE semester  =  'Fall' AND YEAR  =  2009 EXCEPT SELECT course_id FROM SECTION WHERE semester  =  'Spring' AND YEAR  =  2010"}
{"question": "What are the ids of courses offered in Fall of 2009 but not in Spring of 2010?", "query": "SELECT course_id FROM SECTION WHERE semester  =  'Fall' AND YEAR  =  2009 EXCEPT SELECT course_id FROM SECTION WHERE semester  =  'Spring' AND YEAR  =  2010"}
{"question": "Find the salaries of all distinct instructors that are less than the largest salary.", "query": "SELECT DISTINCT salary FROM instructor WHERE salary  <  (SELECT max(salary) FROM instructor)"}
{"question": "What are the distinct salaries of all instructors who earned less than the maximum salary?", "query": "SELECT DISTINCT salary FROM instructor WHERE salary  <  (SELECT max(salary) FROM instructor)"}
{"question": "Find the total number of instructors who teach a course in the Spring 2010 semester.", "query": "SELECT COUNT (DISTINCT ID) FROM teaches WHERE semester  =  'Spring' AND YEAR  =  2010"}
{"question": "How many instructors teach a course in the Spring of 2010?", "query": "SELECT COUNT (DISTINCT ID) FROM teaches WHERE semester  =  'Spring' AND YEAR  =  2010"}
{"question": "Find the names and average salaries of all departments whose average salary is greater than 42000.", "query": "SELECT dept_name ,  AVG (salary) FROM instructor GROUP BY dept_name HAVING AVG (salary)  >  42000"}
{"question": "What are the names and average salaries for departments with average salary higher than 42000?", "query": "SELECT dept_name ,  AVG (salary) FROM instructor GROUP BY dept_name HAVING AVG (salary)  >  42000"}
{"question": "Find names of instructors with salary greater than that of some (at least one) instructor in the Biology department.", "query": "SELECT name FROM instructor WHERE salary  >  (SELECT min(salary) FROM instructor WHERE dept_name  =  'Biology')"}
{"question": "What are the names of instructors who earn more than at least one instructor from the Biology department?", "query": "SELECT name FROM instructor WHERE salary  >  (SELECT min(salary) FROM instructor WHERE dept_name  =  'Biology')"}
{"question": "Find the names of all instructors whose salary is greater than the salary of all instructors in the Biology department.", "query": "SELECT name FROM instructor WHERE salary  >  (SELECT max(salary) FROM instructor WHERE dept_name  =  'Biology')"}
{"question": "What are the names of all instructors with a higher salary than any of the instructors in the Biology department?", "query": "SELECT name FROM instructor WHERE salary  >  (SELECT max(salary) FROM instructor WHERE dept_name  =  'Biology')"}
{"question": "How many debates are there?", "query": "SELECT count(*) FROM debate"}
{"question": "List the venues of debates in ascending order of the number of audience.", "query": "SELECT Venue FROM debate ORDER BY Num_of_Audience ASC"}
{"question": "What are the date and venue of each debate?", "query": "SELECT Date ,  Venue FROM debate"}
{"question": "List the dates of debates with number of audience bigger than 150", "query": "SELECT Date FROM debate WHERE Num_of_Audience  >  150"}
{"question": "Show the names of people aged either 35 or 36.", "query": "SELECT Name FROM  people WHERE Age  =  35 OR Age  =  36"}
{"question": "What is the party of the youngest people?", "query": "SELECT Party FROM people ORDER BY Age ASC LIMIT 1"}
{"question": "Show different parties of people along with the number of people in each party.", "query": "SELECT Party ,  COUNT(*) FROM people GROUP BY Party"}
{"question": "Show the party that has the most people.", "query": "SELECT Party FROM people GROUP BY Party ORDER BY COUNT(*) DESC LIMIT 1"}
{"question": "Show the distinct venues of debates", "query": "SELECT DISTINCT Venue FROM debate"}
{"question": "Show the names of people, and dates and venues of debates they are on the affirmative side.", "query": "SELECT T3.Name ,  T2.Date ,  T2.Venue FROM debate_people AS T1 JOIN debate AS T2 ON T1.Debate_ID  =  T2.Debate_ID JOIN people AS T3 ON T1.Affirmative  =  T3.People_ID"}
{"question": "Show the names of people, and dates and venues of debates they are on the negative side, ordered in ascending alphabetical order of name.", "query": "SELECT T3.Name ,  T2.Date ,  T2.Venue FROM debate_people AS T1 JOIN debate AS T2 ON T1.Debate_ID  =  T2.Debate_ID JOIN people AS T3 ON T1.Negative  =  T3.People_ID ORDER BY T3.Name ASC"}
{"question": "Show the names of people that are on affirmative side of debates with number of audience bigger than 200.", "query": "SELECT T3.Name FROM debate_people AS T1 JOIN debate AS T2 ON T1.Debate_ID  =  T2.Debate_ID JOIN people AS T3 ON T1.Affirmative  =  T3.People_ID WHERE T2.Num_of_Audience  >  200"}
{"question": "Show the names of people and the number of times they have been on the affirmative side of debates.", "query": "SELECT T2.Name ,  COUNT(*) FROM debate_people AS T1 JOIN people AS T2 ON T1.Affirmative  =  T2.People_ID GROUP BY T2.Name"}
{"question": "Show the names of people who have been on the negative side of debates at least twice.", "query": "SELECT T2.Name FROM debate_people AS T1 JOIN people AS T2 ON T1.Negative  =  T2.People_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2"}
{"question": "List the names of people that have not been on the affirmative side of debates.", "query": "SELECT Name FROM people WHERE People_id NOT IN (SELECT Affirmative FROM debate_people)"}
{"question": "List the names of all the customers in alphabetical order.", "query": "SELECT customer_details FROM customers ORDER BY customer_details"}
{"question": "Sort the customer names in alphabetical order.", "query": "SELECT customer_details FROM customers ORDER BY customer_details"}
{"question": "Find all the policy type codes associated with the customer \"Dayana Robel\"", "query": "SELECT policy_type_code FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id WHERE t2.customer_details  =  \"Dayana Robel\""}
{"question": "What are the type codes of the policies used by the customer \"Dayana Robel\"?", "query": "SELECT policy_type_code FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id WHERE t2.customer_details  =  \"Dayana Robel\""}
{"question": "Which type of policy is most frequently used? Give me the policy type code.", "query": "SELECT policy_type_code FROM policies GROUP BY policy_type_code ORDER BY count(*) DESC LIMIT 1"}
{"question": "Find the type code of the most frequently used policy.", "query": "SELECT policy_type_code FROM policies GROUP BY policy_type_code ORDER BY count(*) DESC LIMIT 1"}
{"question": "Find all the policy types that are used by more than 2 customers.", "query": "SELECT policy_type_code FROM policies GROUP BY policy_type_code HAVING count(*)  >  2"}
{"question": "Which types of policy are chosen by more than 2 customers? Give me the policy type codes.", "query": "SELECT policy_type_code FROM policies GROUP BY policy_type_code HAVING count(*)  >  2"}
{"question": "Find the total and average amount paid in claim headers.", "query": "SELECT sum(amount_piad) ,  avg(amount_piad) FROM claim_headers"}
{"question": "What are the total amount and average amount paid in claim headers?", "query": "SELECT sum(amount_piad) ,  avg(amount_piad) FROM claim_headers"}
{"question": "Find the total amount claimed in the most recently created document.", "query": "SELECT sum(t1.amount_claimed) FROM claim_headers AS t1 JOIN claims_documents AS t2 ON t1.claim_header_id  =  t2.claim_id WHERE t2.created_date  =  (SELECT created_date FROM claims_documents ORDER BY created_date LIMIT 1)"}
{"question": "How much amount in total were claimed in the most recently created document?", "query": "SELECT sum(t1.amount_claimed) FROM claim_headers AS t1 JOIN claims_documents AS t2 ON t1.claim_header_id  =  t2.claim_id WHERE t2.created_date  =  (SELECT created_date FROM claims_documents ORDER BY created_date LIMIT 1)"}
{"question": "What is the name of the customer who has made the largest amount of claim in a single claim?", "query": "SELECT t3.customer_details FROM claim_headers AS t1 JOIN policies AS t2 ON t1.policy_id  =  t2.policy_id JOIN customers AS t3 ON t2.customer_id  =  t3.customer_id WHERE t1.amount_claimed  =  (SELECT max(amount_claimed) FROM claim_headers)"}
{"question": "Which customer made the largest amount of claim in a single claim? Return the customer details.", "query": "SELECT t3.customer_details FROM claim_headers AS t1 JOIN policies AS t2 ON t1.policy_id  =  t2.policy_id JOIN customers AS t3 ON t2.customer_id  =  t3.customer_id WHERE t1.amount_claimed  =  (SELECT max(amount_claimed) FROM claim_headers)"}
{"question": "What is the name of the customer who has made the minimum amount of payment in one claim?", "query": "SELECT t3.customer_details FROM claim_headers AS t1 JOIN policies AS t2 ON t1.policy_id  =  t2.policy_id JOIN customers AS t3 ON t2.customer_id  =  t3.customer_id WHERE t1.amount_piad  =  (SELECT min(amount_piad) FROM claim_headers)"}
{"question": "Which customer made the smallest amount of claim in one claim? Return the customer details.", "query": "SELECT t3.customer_details FROM claim_headers AS t1 JOIN policies AS t2 ON t1.policy_id  =  t2.policy_id JOIN customers AS t3 ON t2.customer_id  =  t3.customer_id WHERE t1.amount_piad  =  (SELECT min(amount_piad) FROM claim_headers)"}
{"question": "Find the names of customers who have no policies associated.", "query": "SELECT customer_details FROM customers EXCEPT SELECT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id"}
{"question": "What are the names of customers who do not have any policies?", "query": "SELECT customer_details FROM customers EXCEPT SELECT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id"}
{"question": "How many claim processing stages are there in total?", "query": "SELECT count(*) FROM claims_processing_stages"}
{"question": "Find the number of distinct stages in claim processing.", "query": "SELECT count(*) FROM claims_processing_stages"}
{"question": "What is the name of the claim processing stage that most of the claims are on?", "query": "SELECT t2.claim_status_name FROM claims_processing AS t1 JOIN claims_processing_stages AS t2 ON t1.claim_stage_id  =  t2.claim_stage_id GROUP BY t1.claim_stage_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "Which claim processing stage has the most claims? Show the claim status name.", "query": "SELECT t2.claim_status_name FROM claims_processing AS t1 JOIN claims_processing_stages AS t2 ON t1.claim_stage_id  =  t2.claim_stage_id GROUP BY t1.claim_stage_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "Find the names of customers whose name contains \"Diana\".", "query": "SELECT customer_details FROM customers WHERE customer_details LIKE \"%Diana%\""}
{"question": "Which customers have the substring \"Diana\" in their names? Return the customer details.", "query": "SELECT customer_details FROM customers WHERE customer_details LIKE \"%Diana%\""}
{"question": "Find the names of the customers who have an deputy policy.", "query": "SELECT DISTINCT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.policy_type_code  =  \"Deputy\""}
{"question": "Which customers have an insurance policy with the type code \"Deputy\"? Give me the customer details.", "query": "SELECT DISTINCT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.policy_type_code  =  \"Deputy\""}
{"question": "Find the names of customers who either have an deputy policy or uniformed policy.", "query": "SELECT DISTINCT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.policy_type_code  =  \"Deputy\" OR t1.policy_type_code  =  \"Uniform\""}
{"question": "Which customers have an insurance policy with the type code \"Deputy\" or \"Uniform\"? Return the customer details.", "query": "SELECT DISTINCT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.policy_type_code  =  \"Deputy\" OR t1.policy_type_code  =  \"Uniform\""}
{"question": "Find the names of all the customers and staff members.", "query": "SELECT customer_details FROM customers UNION SELECT staff_details FROM staff"}
{"question": "What are the names of the customers and staff members?", "query": "SELECT customer_details FROM customers UNION SELECT staff_details FROM staff"}
{"question": "Find the number of records of each policy type and its type code.", "query": "SELECT policy_type_code ,  count(*) FROM policies GROUP BY policy_type_code"}
{"question": "For each policy type, return its type code and its count in the record.", "query": "SELECT policy_type_code ,  count(*) FROM policies GROUP BY policy_type_code"}
{"question": "Find the name of the customer that has been involved in the most policies.", "query": "SELECT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id GROUP BY t2.customer_details ORDER BY count(*) DESC LIMIT 1"}
{"question": "Which customer have the most policies? Give me the customer details.", "query": "SELECT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id GROUP BY t2.customer_details ORDER BY count(*) DESC LIMIT 1"}
{"question": "What is the description of the claim status \"Open\"?", "query": "SELECT claim_status_description FROM claims_processing_stages WHERE claim_status_name  =  \"Open\""}
{"question": "Find the description of the claim status \"Open\".", "query": "SELECT claim_status_description FROM claims_processing_stages WHERE claim_status_name  =  \"Open\""}
{"question": "How many distinct claim outcome codes are there?", "query": "SELECT count(DISTINCT claim_outcome_code) FROM claims_processing"}
{"question": "Count the number of distinct claim outcome codes.", "query": "SELECT count(DISTINCT claim_outcome_code) FROM claims_processing"}
{"question": "Which customer is associated with the latest policy?", "query": "SELECT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.start_date  =  (SELECT max(start_date) FROM policies)"}
{"question": "Find the customer who started a policy most recently.", "query": "SELECT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.start_date  =  (SELECT max(start_date) FROM policies)"}
{"question": "Show the number of accounts.", "query": "SELECT count(*) FROM Accounts"}
{"question": "How many accounts are there?", "query": "SELECT count(*) FROM Accounts"}
{"question": "How many customers have opened an account?", "query": "SELECT count(DISTINCT customer_id) FROM Accounts"}
{"question": "Count the number of customers who have an account.", "query": "SELECT count(DISTINCT customer_id) FROM Accounts"}
{"question": "Show the id, the date of account opened, the account name, and other account detail for all accounts.", "query": "SELECT account_id ,  date_account_opened ,  account_name ,  other_account_details FROM Accounts"}
{"question": "What are the ids, date opened, name, and other details for all accounts?", "query": "SELECT account_id ,  date_account_opened ,  account_name ,  other_account_details FROM Accounts"}
{"question": "Show the id, the account name, and other account details for all accounts by the customer with first name 'Meaghan'.", "query": "SELECT T1.account_id ,  T1.date_account_opened ,  T1.account_name ,  T1.other_account_details FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_first_name  =  'Meaghan'"}
{"question": "What are the ids, names, dates of opening, and other details for accounts corresponding to the customer with the first name \"Meaghan\"?", "query": "SELECT T1.account_id ,  T1.date_account_opened ,  T1.account_name ,  T1.other_account_details FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_first_name  =  'Meaghan'"}
{"question": "Show the account name and other account detail for all accounts by the customer with first name Meaghan and last name Keeling.", "query": "SELECT T1.account_name ,  T1.other_account_details FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_first_name  =  \"Meaghan\" AND T2.customer_last_name  =  \"Keeling\""}
{"question": "What are the names and other details for accounts corresponding to the customer named Meaghan Keeling?", "query": "SELECT T1.account_name ,  T1.other_account_details FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_first_name  =  \"Meaghan\" AND T2.customer_last_name  =  \"Keeling\""}
{"question": "Show the first name and last name for the customer with account name 900.", "query": "SELECT T2.customer_first_name ,  T2.customer_last_name FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.account_name  =  \"900\""}
{"question": "What are the full names of customers with the account name 900?", "query": "SELECT T2.customer_first_name ,  T2.customer_last_name FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.account_name  =  \"900\""}
{"question": "How many customers don't have an account?", "query": "SELECT count(*) FROM Customers WHERE customer_id NOT IN (SELECT customer_id FROM Accounts)"}
{"question": "Count the number of customers who do not have an account.", "query": "SELECT count(*) FROM Customers WHERE customer_id NOT IN (SELECT customer_id FROM Accounts)"}
{"question": "Show the unique first names, last names, and phone numbers for all customers with any account.", "query": "SELECT DISTINCT T1.customer_first_name ,  T1.customer_last_name ,  T1.phone_number FROM Customers AS T1 JOIN Accounts AS T2 ON T1.customer_id  =  T2.customer_id"}
{"question": "What are the distinct first names, last names, and phone numbers for customers with accounts?", "query": "SELECT DISTINCT T1.customer_first_name ,  T1.customer_last_name ,  T1.phone_number FROM Customers AS T1 JOIN Accounts AS T2 ON T1.customer_id  =  T2.customer_id"}
{"question": "Show customer ids who don't have an account.", "query": "SELECT customer_id FROM Customers EXCEPT SELECT customer_id FROM Accounts"}
{"question": "What are the customer ids for customers who do not have an account?", "query": "SELECT customer_id FROM Customers EXCEPT SELECT customer_id FROM Accounts"}
{"question": "How many accounts does each customer have? List the number and customer id.", "query": "SELECT count(*) ,  customer_id FROM Accounts GROUP BY customer_id"}
{"question": "Count the number of accounts corresponding to each customer id.", "query": "SELECT count(*) ,  customer_id FROM Accounts GROUP BY customer_id"}
{"question": "What is the customer id, first and last name with most number of accounts.", "query": "SELECT T1.customer_id ,  T2.customer_first_name ,  T2.customer_last_name FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "Return the id and full name of the customer with the most accounts.", "query": "SELECT T1.customer_id ,  T2.customer_first_name ,  T2.customer_last_name FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "Show id, first name and last name for all customers and the number of accounts.", "query": "SELECT T1.customer_id ,  T2.customer_first_name ,  T2.customer_last_name ,  count(*) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id"}
{"question": "What are the the full names and ids for all customers, and how many accounts does each have?", "query": "SELECT T1.customer_id ,  T2.customer_first_name ,  T2.customer_last_name ,  count(*) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id"}
{"question": "Show first name and id for all customers with at least 2 accounts.", "query": "SELECT T2.customer_first_name ,  T1.customer_id FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >=  2"}
{"question": "What are the first names and ids for customers who have two or more accounts?", "query": "SELECT T2.customer_first_name ,  T1.customer_id FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >=  2"}
{"question": "Show the number of customers.", "query": "SELECT count(*) FROM Customers"}
{"question": "Show the number of customers for each gender.", "query": "SELECT gender ,  count(*) FROM Customers GROUP BY gender"}
{"question": "How many customers are there of each gender?", "query": "SELECT gender ,  count(*) FROM Customers GROUP BY gender"}
{"question": "How many transactions do we have?", "query": "SELECT count(*) FROM Financial_transactions"}
{"question": "Count the number of transactions.", "query": "SELECT count(*) FROM Financial_transactions"}
{"question": "How many transaction does each account have? Show the number and account id.", "query": "SELECT count(*) ,  account_id FROM Financial_transactions"}
{"question": "Count the number of financial transactions that correspond to each account id.", "query": "SELECT count(*) ,  account_id FROM Financial_transactions"}
{"question": "How many transaction does account with name 337 have?", "query": "SELECT count(*) FROM Financial_transactions AS T1 JOIN Accounts AS T2 ON T1.account_id  =  T2.account_id WHERE T2.account_name  =  \"337\""}
{"question": "Count the number of financial transactions that the account with the name 337 has.", "query": "SELECT count(*) FROM Financial_transactions AS T1 JOIN Accounts AS T2 ON T1.account_id  =  T2.account_id WHERE T2.account_name  =  \"337\""}
{"question": "What is the average, minimum, maximum, and total transaction amount?", "query": "SELECT avg(transaction_amount) ,  min(transaction_amount) ,  max(transaction_amount) ,   sum(transaction_amount) FROM Financial_transactions"}
{"question": "Return the average, minimum, maximum, and total transaction amounts.", "query": "SELECT avg(transaction_amount) ,  min(transaction_amount) ,  max(transaction_amount) ,   sum(transaction_amount) FROM Financial_transactions"}
{"question": "Show ids for all transactions whose amounts are greater than the average.", "query": "SELECT transaction_id FROM Financial_transactions WHERE transaction_amount  >  (SELECT avg(transaction_amount) FROM Financial_transactions)"}
{"question": "What are the ids for transactions that have an amount greater than the average amount of a transaction?", "query": "SELECT transaction_id FROM Financial_transactions WHERE transaction_amount  >  (SELECT avg(transaction_amount) FROM Financial_transactions)"}
{"question": "Show the transaction types and the total amount of transactions.", "query": "SELECT transaction_type ,  sum(transaction_amount) FROM Financial_transactions GROUP BY transaction_type"}
{"question": "What are total transaction amounts for each transaction type?", "query": "SELECT transaction_type ,  sum(transaction_amount) FROM Financial_transactions GROUP BY transaction_type"}
{"question": "Show the account name, id and the number of transactions for each account.", "query": "SELECT T2.account_name ,  T1.account_id ,  count(*) FROM Financial_transactions AS T1 JOIN Accounts AS T2 ON T1.account_id  =  T2.account_id GROUP BY T1.account_id"}
{"question": "Return the names and ids of each account, as well as the number of transactions.", "query": "SELECT T2.account_name ,  T1.account_id ,  count(*) FROM Financial_transactions AS T1 JOIN Accounts AS T2 ON T1.account_id  =  T2.account_id GROUP BY T1.account_id"}
{"question": "Show the account id with most number of transactions.", "query": "SELECT account_id FROM Financial_transactions GROUP BY account_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "What is the id of the account with the most transactions?", "query": "SELECT account_id FROM Financial_transactions GROUP BY account_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "Show the account id and name with at least 4 transactions.", "query": "SELECT T1.account_id ,  T2.account_name FROM Financial_transactions AS T1 JOIN Accounts AS T2 ON T1.account_id  =  T2.account_id GROUP BY T1.account_id HAVING count(*)  >=  4"}
{"question": "What are the ids and names of accounts with 4 or more transactions?", "query": "SELECT T1.account_id ,  T2.account_name FROM Financial_transactions AS T1 JOIN Accounts AS T2 ON T1.account_id  =  T2.account_id GROUP BY T1.account_id HAVING count(*)  >=  4"}
{"question": "Show all product sizes.", "query": "SELECT DISTINCT product_size FROM Products"}
{"question": "What are the different product sizes?", "query": "SELECT DISTINCT product_size FROM Products"}
{"question": "Show all product colors.", "query": "SELECT DISTINCT product_color FROM Products"}
{"question": "What are the different product colors?", "query": "SELECT DISTINCT product_color FROM Products"}
{"question": "Show the invoice number and the number of transactions for each invoice.", "query": "SELECT invoice_number ,  count(*) FROM Financial_transactions GROUP BY invoice_number"}
{"question": "How many transactions correspond to each invoice number?", "query": "SELECT invoice_number ,  count(*) FROM Financial_transactions GROUP BY invoice_number"}
{"question": "What is the invoice number and invoice date for the invoice with most number of transactions?", "query": "SELECT T2.invoice_number ,  T2.invoice_date FROM Financial_transactions AS T1 JOIN Invoices AS T2 ON T1.invoice_number  =  T2.invoice_number GROUP BY T1.invoice_number ORDER BY count(*) DESC LIMIT 1"}
{"question": "What is the invoice number and invoice date corresponding to the invoice with the greatest number of transactions?", "query": "SELECT T2.invoice_number ,  T2.invoice_date FROM Financial_transactions AS T1 JOIN Invoices AS T2 ON T1.invoice_number  =  T2.invoice_number GROUP BY T1.invoice_number ORDER BY count(*) DESC LIMIT 1"}
{"question": "How many invoices do we have?", "query": "SELECT count(*) FROM Invoices"}
{"question": "Count the number of invoices.", "query": "SELECT count(*) FROM Invoices"}
{"question": "Show invoice dates and order id and details for all invoices.", "query": "SELECT T1.invoice_date ,  T1.order_id ,  T2.order_details FROM Invoices AS T1 JOIN Orders AS T2 ON T1.order_id  =  T2.order_id"}
{"question": "What are the invoice dates, order ids, and order details for all invoices?", "query": "SELECT T1.invoice_date ,  T1.order_id ,  T2.order_details FROM Invoices AS T1 JOIN Orders AS T2 ON T1.order_id  =  T2.order_id"}
{"question": "Show the order ids and the number of invoices for each order.", "query": "SELECT order_id ,  count(*) FROM Invoices GROUP BY order_id"}
{"question": "How many invoices correspond to each order id?", "query": "SELECT order_id ,  count(*) FROM Invoices GROUP BY order_id"}
{"question": "What is the order id and order details for the order more than two invoices.", "query": "SELECT T2.order_id ,  T2.order_details FROM Invoices AS T1 JOIN Orders AS T2 ON T1.order_id  =  T2.order_id GROUP BY T2.order_id HAVING count(*)  >  2"}
{"question": "Return the order ids and details for orderes with two or more invoices.", "query": "SELECT T2.order_id ,  T2.order_details FROM Invoices AS T1 JOIN Orders AS T2 ON T1.order_id  =  T2.order_id GROUP BY T2.order_id HAVING count(*)  >  2"}
{"question": "What is the customer last name, id and phone number with most number of orders?", "query": "SELECT T2.customer_last_name ,  T1.customer_id ,  T2.phone_number FROM Orders AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "Return the last name, id and phone number of the customer who has made the greatest number of orders.", "query": "SELECT T2.customer_last_name ,  T1.customer_id ,  T2.phone_number FROM Orders AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "Show all product names without an order.", "query": "SELECT product_name FROM Products EXCEPT SELECT T1.product_name FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id"}
{"question": "What are the names of products that have never been ordered?", "query": "SELECT product_name FROM Products EXCEPT SELECT T1.product_name FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id"}
{"question": "Show all product names and the total quantity ordered for each product name.", "query": "SELECT T2.product_name ,  sum(T1.product_quantity) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id  =  T2.product_id GROUP BY T2.product_name"}
{"question": "What are the different product names, and what is the sum of quantity ordered for each product?", "query": "SELECT T2.product_name ,  sum(T1.product_quantity) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id  =  T2.product_id GROUP BY T2.product_name"}
{"question": "Show the order ids and the number of items in each order.", "query": "SELECT order_id ,  count(*) FROM Order_items GROUP BY order_id"}
{"question": "How many order items correspond to each order id?", "query": "SELECT order_id ,  count(*) FROM Order_items GROUP BY order_id"}
{"question": "Show the product ids and the number of unique orders containing each product.", "query": "SELECT product_id ,  count(DISTINCT order_id) FROM Order_items GROUP BY product_id"}
{"question": "How many distinct order ids correspond to each product?", "query": "SELECT product_id ,  count(DISTINCT order_id) FROM Order_items GROUP BY product_id"}
{"question": "Show all product names and the number of customers having an order on each product.", "query": "SELECT T2.product_name ,  count(*) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id  =  T2.product_id JOIN Orders AS T3 ON T3.order_id  =  T1.order_id GROUP BY T2.product_name"}
{"question": "What are teh names of the different products, as well as the number of customers who have ordered each product.", "query": "SELECT T2.product_name ,  count(*) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id  =  T2.product_id JOIN Orders AS T3 ON T3.order_id  =  T1.order_id GROUP BY T2.product_name"}
{"question": "Show order ids and the number of products in each order.", "query": "SELECT order_id ,  count(DISTINCT product_id) FROM Order_items GROUP BY order_id"}
{"question": "How many different products correspond to each order id?", "query": "SELECT order_id ,  count(DISTINCT product_id) FROM Order_items GROUP BY order_id"}
{"question": "Show order ids and the total quantity in each order.", "query": "SELECT order_id ,  sum(product_quantity) FROM Order_items GROUP BY order_id"}
{"question": "Give the order ids for all orders, as well as the total product quantity in each.", "query": "SELECT order_id ,  sum(product_quantity) FROM Order_items GROUP BY order_id"}
{"question": "How many products were not included in any order?", "query": "SELECT count(*) FROM products WHERE product_id NOT IN ( SELECT product_id FROM Order_items )"}
{"question": "Count the number of products that were never ordered.", "query": "SELECT count(*) FROM products WHERE product_id NOT IN ( SELECT product_id FROM Order_items )"}
{"question": "How many churches opened before 1850 are there?", "query": "SELECT count(*) FROM Church WHERE Open_Date  <  1850"}
{"question": "Show the name, open date, and organizer for all churches.", "query": "SELECT name ,  open_date ,  organized_by FROM Church"}
{"question": "List all church names in descending order of opening date.", "query": "SELECT name FROM church ORDER BY open_date DESC"}
{"question": "Show the opening year in whcih at least two churches opened.", "query": "SELECT open_date FROM church GROUP BY open_date HAVING count(*)  >=  2"}
{"question": "Show the organizer and name for churches that opened between 1830 and 1840.", "query": "SELECT organized_by ,  name FROM church WHERE open_date BETWEEN 1830 AND 1840"}
{"question": "Show all opening years and the number of churches that opened in that year.", "query": "SELECT open_date ,  count(*) FROM church GROUP BY open_date"}
{"question": "Show the name and opening year for three churches that opened most recently.", "query": "SELECT name ,  open_date FROM church ORDER BY open_date DESC LIMIT 3"}
{"question": "How many female people are older than 30 in our record?", "query": "SELECT count(*) FROM people WHERE is_male  =  'F' AND age  >  30"}
{"question": "Show the country where people older than 30 and younger than 25 are from.", "query": "SELECT country FROM people WHERE age  <  25 INTERSECT SELECT country FROM people WHERE age  >  30"}
{"question": "Show the minimum, maximum, and average age for all people.", "query": "SELECT min(age) ,  max(age) ,  avg(age) FROM people"}
{"question": "Show the name and country for all people whose age is smaller than the average.", "query": "SELECT name ,  country FROM people WHERE age  <  (SELECT avg(age) FROM people)"}
{"question": "Show the pair of male and female names in all weddings after year 2014", "query": "SELECT T2.name ,  T3.name FROM wedding AS T1 JOIN people AS T2 ON T1.male_id  =  T2.people_id JOIN people AS T3 ON T1.female_id  =  T3.people_id WHERE T1.year  >  2014"}
{"question": "Show the name and age for all male people who don't have a wedding.", "query": "SELECT name ,  age FROM people WHERE is_male  =  'T' AND people_id NOT IN (SELECT male_id FROM wedding)"}
{"question": "Show all church names except for those that had a wedding in year 2015.", "query": "SELECT name FROM church EXCEPT SELECT T1.name FROM church AS T1 JOIN wedding AS T2 ON T1.church_id  =  T2.church_id WHERE T2.year  =  2015"}
{"question": "Show all church names that have hosted least two weddings.", "query": "SELECT T1.name FROM church AS T1 JOIN wedding AS T2 ON T1.church_id  =  T2.church_id GROUP BY T1.church_id HAVING count(*)  >=  2"}
{"question": "Show the names for all females from Canada having a wedding in year 2016.", "query": "SELECT T2.name FROM wedding AS T1 JOIN people AS T2 ON T1.female_id  =  T2.people_id WHERE T1.year  =  2016 AND T2.is_male  =  'F' AND T2.country  =  'Canada'"}
{"question": "How many weddings are there in year 2016?", "query": "SELECT count(*) FROM wedding WHERE YEAR  =  2016"}
{"question": "Show the church names for the weddings of all people older than 30.", "query": "SELECT T4.name FROM wedding AS T1 JOIN people AS T2 ON T1.male_id  =  T2.people_id JOIN people AS T3 ON T1.female_id  =  T3.people_id JOIN church AS T4 ON T4.church_id  =  T1.church_id WHERE T2.age  >  30 OR T3.age  >  30"}
{"question": "Show all countries and the number of people from each country.", "query": "SELECT country ,  count(*) FROM people GROUP BY country"}
{"question": "How many churches have a wedding in year 2016?", "query": "SELECT COUNT (DISTINCT church_id) FROM wedding WHERE YEAR  =  2016"}
{"question": "How many artists do we have?", "query": "SELECT count(*) FROM artist"}
{"question": "Count the number of artists.", "query": "SELECT count(*) FROM artist"}
{"question": "Show all artist name, age, and country ordered by the yeared they joined.", "query": "SELECT name ,  age ,  country FROM artist ORDER BY Year_Join"}
{"question": "What are the names, ages, and countries of artists, sorted by the year they joined?", "query": "SELECT name ,  age ,  country FROM artist ORDER BY Year_Join"}
{"question": "What are all distinct country for artists?", "query": "SELECT DISTINCT country FROM artist"}
{"question": "Return the different countries for artists.", "query": "SELECT DISTINCT country FROM artist"}
{"question": "Show all artist names and the year joined who are not from United States.", "query": "SELECT name ,  year_join FROM artist WHERE country != 'United States'"}
{"question": "What are the names and year of joining for artists that do not have the country \"United States\"?", "query": "SELECT name ,  year_join FROM artist WHERE country != 'United States'"}
{"question": "How many artists are above age 46 and joined after 1990?", "query": "SELECT count(*) FROM artist WHERE age  >  46 AND year_join  >  1990"}
{"question": "Count the number of artists who are older than 46 and joined after 1990.", "query": "SELECT count(*) FROM artist WHERE age  >  46 AND year_join  >  1990"}
{"question": "What is the average and minimum age of all artists from United States.", "query": "SELECT avg(age) ,  min(age) FROM artist WHERE country  =  'United States'"}
{"question": "Return the average and minimum ages across artists from the United States.", "query": "SELECT avg(age) ,  min(age) FROM artist WHERE country  =  'United States'"}
{"question": "What is the name of the artist who joined latest?", "query": "SELECT name FROM artist ORDER BY year_join DESC LIMIT 1"}
{"question": "Return the name of the artist who has the latest join year.", "query": "SELECT name FROM artist ORDER BY year_join DESC LIMIT 1"}
{"question": "How many exhibition are there in year 2005 or after?", "query": "SELECT count(*) FROM exhibition WHERE YEAR  >=  2005"}
{"question": "Count the number of exhibitions that happened in or after 2005.", "query": "SELECT count(*) FROM exhibition WHERE YEAR  >=  2005"}
{"question": "Show theme and year for all exhibitions with ticket prices lower than 15.", "query": "SELECT theme ,  YEAR FROM exhibition WHERE ticket_price  <  15"}
{"question": "What are the theme and year for all exhibitions that have a ticket price under 15?", "query": "SELECT theme ,  YEAR FROM exhibition WHERE ticket_price  <  15"}
{"question": "Show all artist names and the number of exhibitions for each artist.", "query": "SELECT T2.name ,  count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id  =  T2.artist_id GROUP BY T1.artist_id"}
{"question": "How many exhibitions has each artist had?", "query": "SELECT T2.name ,  count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id  =  T2.artist_id GROUP BY T1.artist_id"}
{"question": "What is the name and country for the artist with most number of exhibitions?", "query": "SELECT T2.name , T2.country FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id  =  T2.artist_id GROUP BY T1.artist_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "Return the name and country corresponding to the artist who has had the most exhibitions.", "query": "SELECT T2.name , T2.country FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id  =  T2.artist_id GROUP BY T1.artist_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "Show names for artists without any exhibition.", "query": "SELECT name FROM artist WHERE artist_id NOT IN (SELECT artist_id FROM exhibition)"}
{"question": "What are the names of artists that have not had any exhibitions?", "query": "SELECT name FROM artist WHERE artist_id NOT IN (SELECT artist_id FROM exhibition)"}
{"question": "What is the theme and artist name for the exhibition with a ticket price higher than the average?", "query": "SELECT T1.theme ,  T2.name FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id  =  T2.artist_id WHERE T1.ticket_price  >  (SELECT avg(ticket_price) FROM exhibition)"}
{"question": "Return the names of artists and the themes of their exhibitions that had a ticket price higher than average.", "query": "SELECT T1.theme ,  T2.name FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id  =  T2.artist_id WHERE T1.ticket_price  >  (SELECT avg(ticket_price) FROM exhibition)"}
{"question": "Show the average, minimum, and maximum ticket prices for exhibitions for all years before 2009.", "query": "SELECT avg(ticket_price) ,  min(ticket_price) ,  max(ticket_price) FROM exhibition WHERE YEAR  <  2009"}
{"question": "What are the average, minimum, and maximum ticket prices for exhibitions that happened prior to 2009?", "query": "SELECT avg(ticket_price) ,  min(ticket_price) ,  max(ticket_price) FROM exhibition WHERE YEAR  <  2009"}
{"question": "Show theme and year for all exhibitions in an descending order of ticket price.", "query": "SELECT theme ,  YEAR FROM exhibition ORDER BY ticket_price DESC"}
{"question": "What are the themes and years for exhibitions, sorted by ticket price descending?", "query": "SELECT theme ,  YEAR FROM exhibition ORDER BY ticket_price DESC"}
{"question": "What is the theme, date, and attendance for the exhibition in year 2004?", "query": "SELECT T2.theme ,  T1.date ,  T1.attendance FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T2.year  =  2004"}
{"question": "Return the themes, dates, and attendance for exhibitions that happened in 2004.", "query": "SELECT T2.theme ,  T1.date ,  T1.attendance FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T2.year  =  2004"}
{"question": "Show all artist names who didn't have an exhibition in 2004.", "query": "SELECT name FROM artist EXCEPT SELECT T2.name FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id  =  T2.artist_id WHERE T1.year  =  2004"}
{"question": "What are the names of artists who did not have an exhibition in 2004?", "query": "SELECT name FROM artist EXCEPT SELECT T2.name FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id  =  T2.artist_id WHERE T1.year  =  2004"}
{"question": "Show the theme for exhibitions with both records of an attendance below 100 and above 500.", "query": "SELECT T2.theme FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T1.attendance  <  100 INTERSECT SELECT T2.theme FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T1.attendance  >  500"}
{"question": "Which themes have had corresponding exhibitions that have had attendance both below 100 and above 500?", "query": "SELECT T2.theme FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T1.attendance  <  100 INTERSECT SELECT T2.theme FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T1.attendance  >  500"}
{"question": "How many exhibitions have a attendance more than 100 or have a ticket price below 10?", "query": "SELECT count(*) FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T1.attendance  >  100 OR T2.ticket_price  <  10"}
{"question": "Count the number of exhibitions that have had an attendnance of over 100 or a ticket prices under 10.", "query": "SELECT count(*) FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T1.attendance  >  100 OR T2.ticket_price  <  10"}
{"question": "Show all artist names with an average exhibition attendance over 200.", "query": "SELECT T3.name FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id JOIN artist AS T3 ON T3.artist_id  =  T2.artist_id GROUP BY T3.artist_id HAVING avg(T1.attendance)  >  200"}
{"question": "What are the names of artist whose exhibitions draw over 200 attendees on average?", "query": "SELECT T3.name FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id JOIN artist AS T3 ON T3.artist_id  =  T2.artist_id GROUP BY T3.artist_id HAVING avg(T1.attendance)  >  200"}
{"question": "Find the id of the item whose title is \"orange\".", "query": "SELECT i_id FROM item WHERE title  =  \"orange\""}
{"question": "List all information in the item table.", "query": "SELECT * FROM item"}
{"question": "Find the number of reviews.", "query": "SELECT count(*) FROM review"}
{"question": "Find the average and maximum rating of all reviews.", "query": "SELECT avg(rating) ,  max(rating) FROM review"}
{"question": "Find the highest rank of all reviews.", "query": "SELECT min(rank) FROM review"}
{"question": "How many different users wrote some reviews?", "query": "SELECT count(DISTINCT u_id) FROM review"}
{"question": "How many different items were reviewed by some users?", "query": "SELECT count(DISTINCT i_id) FROM review"}
{"question": "Find the number of items that did not receive any review.", "query": "SELECT count(*) FROM item WHERE i_id NOT IN (SELECT i_id FROM review)"}
{"question": "Find the names of users who did not leave any review.", "query": "SELECT name FROM useracct WHERE u_id NOT IN (SELECT u_id FROM review)"}
{"question": "Find the names of goods that receive a rating of 10.", "query": "SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id  =  T2.i_id WHERE T2.rating  =  10"}
{"question": "Find the titles of items whose rating is higher than the average review rating of all items.", "query": "SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id  =  T2.i_id WHERE T2.rating  >  (SELECT avg(rating) FROM review)"}
{"question": "Find the titles of items that received any rating below 5.", "query": "SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id  =  T2.i_id WHERE T2.rating  <  5"}
{"question": "Find the titles of items that received both a rating higher than 8 and a rating below 5.", "query": "SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id  =  T2.i_id WHERE T2.rating  >  8 INTERSECT SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id  =  T2.i_id WHERE T2.rating  <  5"}
{"question": "Find the names of items whose rank is higher than 3 and whose average rating is above 5.", "query": "SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id  =  T2.i_id WHERE T2.rank  >  3 INTERSECT SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id  =  T2.i_id GROUP BY T2.i_id HAVING avg(T2.rating)  >  5"}
{"question": "Find the name of the item with the lowest average rating.", "query": "SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id  =  T2.i_id GROUP BY T2.i_id ORDER BY avg(T2.rating) LIMIT 1"}
{"question": "List the titles of all items in alphabetic order .", "query": "SELECT title FROM item ORDER BY title"}
{"question": "Find the name of the user who gives the most reviews.", "query": "SELECT T1.name FROM useracct AS T1 JOIN review AS T2 ON T1.u_id  =  T2.u_id GROUP BY T2.u_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "Find the name and id of the item with the highest average rating.", "query": "SELECT T1.title ,  T1.i_id FROM item AS T1 JOIN review AS T2 ON T1.i_id  =  T2.i_id GROUP BY T2.i_id ORDER BY avg(T2.rating) DESC LIMIT 1"}
{"question": "Find the name and id of the good with the highest average rank.", "query": "SELECT T1.title ,  T1.i_id FROM item AS T1 JOIN review AS T2 ON T1.i_id  =  T2.i_id GROUP BY T2.i_id ORDER BY avg(T2.rank) DESC LIMIT 1"}
{"question": "For each user, return the name and the average rating of reviews given by them.", "query": "SELECT T1.name ,  avg(T2.rating) FROM useracct AS T1 JOIN review AS T2 ON T1.u_id  =  T2.u_id GROUP BY T2.u_id"}
{"question": "For each user, find their name and the number of reviews written by them.", "query": "SELECT T1.name ,  count(*) FROM useracct AS T1 JOIN review AS T2 ON T1.u_id  =  T2.u_id GROUP BY T2.u_id"}
{"question": "Find the name of the user who gave the highest rating.", "query": "SELECT T1.name FROM useracct AS T1 JOIN review AS T2 ON T1.u_id  =  T2.u_id ORDER BY T2.rating DESC LIMIT 1"}
{"question": "Find the name of the source user with the highest average trust score.", "query": "SELECT T1.name FROM useracct AS T1 JOIN trust AS T2 ON T1.u_id  =  T2.source_u_id GROUP BY T2.source_u_id ORDER BY avg(trust) DESC LIMIT 1"}
{"question": "Find each target user's name and average trust score.", "query": "SELECT T1.name ,  avg(trust) FROM useracct AS T1 JOIN trust AS T2 ON T1.u_id  =  T2.target_u_id GROUP BY T2.target_u_id"}
{"question": "Find the name of the target user with the lowest trust score.", "query": "SELECT T1.name FROM useracct AS T1 JOIN trust AS T2 ON T1.u_id  =  T2.target_u_id ORDER BY trust LIMIT 1"}
{"question": "Find the names of the items that did not receive any review.", "query": "SELECT title FROM item WHERE i_id NOT IN (SELECT i_id FROM review)"}
{"question": "Find the number of users who did not write any review.", "query": "SELECT count(*) FROM useracct WHERE u_id NOT IN (SELECT u_id FROM review)"}
{"question": "Find the number of items without any review.", "query": "SELECT count(*) FROM item WHERE i_id NOT IN (SELECT i_id FROM review)"}
{"question": "How many players are there?", "query": "SELECT count(*) FROM player"}
{"question": "List the names of players in ascending order of votes.", "query": "SELECT Player_name FROM player ORDER BY Votes ASC"}
{"question": "What are the gender and occupation of players?", "query": "SELECT Gender ,  Occupation FROM player"}
{"question": "List the name and residence for players whose occupation is not \"Researcher\".", "query": "SELECT Player_name ,  residence FROM player WHERE Occupation != \"Researcher\""}
{"question": "Show the names of sponsors of players whose residence is either \"Brandon\" or \"Birtle\".", "query": "SELECT Sponsor_name FROM player WHERE Residence  =  \"Brandon\" OR Residence  =  \"Birtle\""}
{"question": "What is the name of the player with the largest number of votes?", "query": "SELECT Player_name FROM player ORDER BY Votes DESC LIMIT 1"}
{"question": "Show different occupations along with the number of players in each occupation.", "query": "SELECT Occupation ,  COUNT(*) FROM player GROUP BY Occupation"}
{"question": "Please show the most common occupation of players.", "query": "SELECT Occupation FROM player GROUP BY Occupation ORDER BY COUNT(*) DESC LIMIT 1"}
{"question": "Show the residences that have at least two players.", "query": "SELECT Residence FROM player GROUP BY Residence HAVING COUNT(*)  >=  2"}
{"question": "Show the names of players and names of their coaches.", "query": "SELECT T3.Player_name ,  T2.coach_name FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID  =  T2.Coach_ID JOIN player AS T3 ON T1.Player_ID  =  T3.Player_ID"}
{"question": "Show the names of players coached by the rank 1 coach.", "query": "SELECT T3.Player_name FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID  =  T2.Coach_ID JOIN player AS T3 ON T1.Player_ID  =  T3.Player_ID WHERE T2.Rank  =  1"}
{"question": "Show the names and genders of players with a coach starting after 2011.", "query": "SELECT T3.Player_name ,  T3.gender FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID  =  T2.Coach_ID JOIN player AS T3 ON T1.Player_ID  =  T3.Player_ID WHERE T1.Starting_year  >  2011"}
{"question": "Show the names of players and names of their coaches in descending order of the votes of players.", "query": "SELECT T3.Player_name ,  T2.coach_name FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID  =  T2.Coach_ID JOIN player AS T3 ON T1.Player_ID  =  T3.Player_ID ORDER BY T3.Votes DESC"}
{"question": "List the names of players that do not have coaches.", "query": "SELECT Player_name FROM player WHERE Player_ID NOT IN (SELECT Player_ID FROM player_coach)"}
{"question": "Show the residences that have both a player of gender \"M\" and a player of gender \"F\".", "query": "SELECT Residence FROM player WHERE gender  =  \"M\" INTERSECT SELECT Residence FROM player WHERE gender  =  \"F\""}
{"question": "How many coaches does each club has? List the club id, name and the number of coaches.", "query": "SELECT T1.club_id ,  T1.club_name, count(*) FROM club AS T1 JOIN coach AS T2 ON T1.club_id  =  T2.club_id GROUP BY T1.club_id"}
{"question": "How many gold medals has the club with the most coaches won?", "query": "SELECT T1.club_id ,  T1.gold FROM match_result AS T1 JOIN coach AS T2 ON T1.club_id  =  T2.club_id GROUP BY T1.club_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "How many gymnasts are there?", "query": "SELECT count(*) FROM gymnast"}
{"question": "Count the number of gymnasts.", "query": "SELECT count(*) FROM gymnast"}
{"question": "List the total points of gymnasts in descending order.", "query": "SELECT Total_Points FROM gymnast ORDER BY Total_Points DESC"}
{"question": "What are the total points for all gymnasts, ordered by total points descending?", "query": "SELECT Total_Points FROM gymnast ORDER BY Total_Points DESC"}
{"question": "List the total points of gymnasts in descending order of floor exercise points.", "query": "SELECT Total_Points FROM gymnast ORDER BY Floor_Exercise_Points DESC"}
{"question": "What are the total points of gymnasts, ordered by their floor exercise points descending?", "query": "SELECT Total_Points FROM gymnast ORDER BY Floor_Exercise_Points DESC"}
{"question": "What is the average horizontal bar points for all gymnasts?", "query": "SELECT avg(Horizontal_Bar_Points) FROM gymnast"}
{"question": "Return the average horizontal bar points across all gymnasts.", "query": "SELECT avg(Horizontal_Bar_Points) FROM gymnast"}
{"question": "What are the names of people in ascending alphabetical order?", "query": "SELECT Name FROM People ORDER BY Name ASC"}
{"question": "Return the names of people, ordered alphabetically.", "query": "SELECT Name FROM People ORDER BY Name ASC"}
{"question": "What are the names of gymnasts?", "query": "SELECT T2.Name FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID"}
{"question": "Return the names of the gymnasts.", "query": "SELECT T2.Name FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID"}
{"question": "What are the names of gymnasts whose hometown is not \"Santo Domingo\"?", "query": "SELECT T2.Name FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID WHERE T2.Hometown != \"Santo Domingo\""}
{"question": "Return the names of gymnasts who did not grow up in Santo Domingo.", "query": "SELECT T2.Name FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID WHERE T2.Hometown != \"Santo Domingo\""}
{"question": "What is the age of the tallest person?", "query": "SELECT Age FROM people ORDER BY Height DESC LIMIT 1"}
{"question": "Return the age of the person with the greatest height.", "query": "SELECT Age FROM people ORDER BY Height DESC LIMIT 1"}
{"question": "List the names of the top 5 oldest people.", "query": "SELECT Name FROM People ORDER BY Age DESC LIMIT 5"}
{"question": "What are the names of the five oldest people?", "query": "SELECT Name FROM People ORDER BY Age DESC LIMIT 5"}
{"question": "What is the total point count of the youngest gymnast?", "query": "SELECT T1.Total_Points FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID ORDER BY T2.Age ASC LIMIT 1"}
{"question": "Return the total points of the gymnast with the lowest age.", "query": "SELECT T1.Total_Points FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID ORDER BY T2.Age ASC LIMIT 1"}
{"question": "What is the average age of all gymnasts?", "query": "SELECT avg(T2.Age) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID"}
{"question": "Return the average age across all gymnasts.", "query": "SELECT avg(T2.Age) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID"}
{"question": "What are the distinct hometowns of gymnasts with total points more than 57.5?", "query": "SELECT DISTINCT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID WHERE T1.Total_Points  >  57.5"}
{"question": "Give the different hometowns of gymnasts that have a total point score of above 57.5.", "query": "SELECT DISTINCT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID WHERE T1.Total_Points  >  57.5"}
{"question": "What are the hometowns of gymnasts and the corresponding number of gymnasts?", "query": "SELECT T2.Hometown ,  COUNT(*) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID GROUP BY T2.Hometown"}
{"question": "How many gymnasts are from each hometown?", "query": "SELECT T2.Hometown ,  COUNT(*) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID GROUP BY T2.Hometown"}
{"question": "What is the most common hometown of gymnasts?", "query": "SELECT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID GROUP BY T2.Hometown ORDER BY COUNT(*) DESC LIMIT 1"}
{"question": "Return the hometown that is most common among gymnasts.", "query": "SELECT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID GROUP BY T2.Hometown ORDER BY COUNT(*) DESC LIMIT 1"}
{"question": "What are the hometowns that are shared by at least two gymnasts?", "query": "SELECT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID GROUP BY T2.Hometown HAVING COUNT(*)  >=  2"}
{"question": "Give the hometowns from which two or more gymnasts are from.", "query": "SELECT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID GROUP BY T2.Hometown HAVING COUNT(*)  >=  2"}
{"question": "List the names of gymnasts in ascending order by their heights.", "query": "SELECT T2.Name FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID ORDER BY T2.Height ASC"}
{"question": "What are the names of gymnasts, ordered by their heights ascending?", "query": "SELECT T2.Name FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID ORDER BY T2.Height ASC"}
{"question": "List the distinct hometowns that are not associated with any gymnast.", "query": "SELECT DISTINCT Hometown FROM people EXCEPT SELECT DISTINCT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID"}
{"question": "From which hometowns did no gymnasts come from?", "query": "SELECT DISTINCT Hometown FROM people EXCEPT SELECT DISTINCT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID"}
{"question": "Show the hometowns shared by people older than 23 and younger than 20.", "query": "SELECT Hometown FROM people WHERE Age  >  23 INTERSECT SELECT Hometown FROM people WHERE Age  <  20"}
{"question": "From which hometowns did both people older than 23 and younger than 20 come from?", "query": "SELECT Hometown FROM people WHERE Age  >  23 INTERSECT SELECT Hometown FROM people WHERE Age  <  20"}
{"question": "How many distinct hometowns did these people have?", "query": "SELECT count(DISTINCT Hometown) FROM people"}
{"question": "Count the number of different hometowns of these people.", "query": "SELECT count(DISTINCT Hometown) FROM people"}
{"question": "Show the ages of gymnasts in descending order of total points.", "query": "SELECT T2.Age FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID ORDER BY T1.Total_Points DESC"}
{"question": "What are the ages of the gymnasts, ordered descending by their total points?", "query": "SELECT T2.Age FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID ORDER BY T1.Total_Points DESC"}
{"question": "Find the total savings balance of all accounts except the account with name ‘Brown’.", "query": "SELECT sum(T2.balance) FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid WHERE T1.name != 'Brown'"}
{"question": "What is the total balance of savings accounts not belonging to someone with the name Brown?", "query": "SELECT sum(T2.balance) FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid WHERE T1.name != 'Brown'"}
{"question": "How many accounts are there in total?", "query": "SELECT count(*) FROM accounts"}
{"question": "What is the total checking balance in all accounts?", "query": "SELECT sum(balance) FROM checking"}
{"question": "Find the total balance across checking accounts.", "query": "SELECT sum(balance) FROM checking"}
{"question": "Find the average checking balance.", "query": "SELECT avg(balance) FROM checking"}
{"question": "What is the average balance in checking accounts?", "query": "SELECT avg(balance) FROM checking"}
{"question": "How many accounts have a savings balance above the average savings balance?", "query": "SELECT count(*) FROM savings WHERE balance  >  (SELECT avg(balance) FROM savings)"}
{"question": "Find the number of accounts with a savings balance that is higher than the average savings balance.", "query": "SELECT count(*) FROM savings WHERE balance  >  (SELECT avg(balance) FROM savings)"}
{"question": "Find the name and id of accounts whose checking balance is below the maximum checking balance.", "query": "SELECT T1.custid ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  <  (SELECT max(balance) FROM checking)"}
{"question": "What are the customer id and name corresponding to accounts with a checking balance less than the largest checking balance?", "query": "SELECT T1.custid ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  <  (SELECT max(balance) FROM checking)"}
{"question": "What is the checking balance of the account whose owner’s name contains the substring ‘ee’?", "query": "SELECT T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T1.name LIKE '%ee%'"}
{"question": "Find the balance of the checking account belonging to an owner whose name contains 'ee'.", "query": "SELECT T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T1.name LIKE '%ee%'"}
{"question": "Find the checking balance and saving balance in the Brown’s account.", "query": "SELECT T2.balance ,  T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T1.name  =  'Brown'"}
{"question": "What are the checking and savings balances in accounts belonging to Brown?", "query": "SELECT T2.balance ,  T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T1.name  =  'Brown'"}
{"question": "Find the names of accounts whose checking balance is above the average checking balance, but savings balance is below the average savings balance.", "query": "SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  >  (SELECT avg(balance) FROM checking) INTERSECT SELECT T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  <  (SELECT avg(balance) FROM savings)"}
{"question": "What are the names of accounts with checking balances greater than the average checking balance and savings balances below the average savings balance?", "query": "SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  >  (SELECT avg(balance) FROM checking) INTERSECT SELECT T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  <  (SELECT avg(balance) FROM savings)"}
{"question": "Find the checking balance of the accounts whose savings balance is higher than the average savings balance.", "query": "SELECT T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T1.name IN (SELECT T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  >  (SELECT avg(balance) FROM savings))"}
{"question": "What are the balances of checking accounts belonging to people with savings balances greater than the average savings balance?", "query": "SELECT T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T1.name IN (SELECT T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  >  (SELECT avg(balance) FROM savings))"}
{"question": "List all customers’ names in the alphabetical order.", "query": "SELECT name FROM accounts ORDER BY name"}
{"question": "What are the names of all the customers in alphabetical order?", "query": "SELECT name FROM accounts ORDER BY name"}
{"question": "Find the name of account that has the lowest total checking and saving balance.", "query": "SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T2.balance + T3.balance LIMIT 1"}
{"question": "What is the name corresponding to the accoung with the lowest sum of checking and savings balances?", "query": "SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T2.balance + T3.balance LIMIT 1"}
{"question": "Find the names and total checking and savings balances of accounts whose savings balance is higher than the average savings balance.", "query": "SELECT T1.name ,  T2.balance + T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T3.balance  >  (SELECT avg(balance) FROM savings)"}
{"question": "What are the names and sum of checking and savings balances for accounts with savings balances higher than the average savings balance?", "query": "SELECT T1.name ,  T2.balance + T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T3.balance  >  (SELECT avg(balance) FROM savings)"}
{"question": "Find the name and checking balance of the account with the lowest savings balance.", "query": "SELECT T1.name ,  T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T3.balance LIMIT 1"}
{"question": "What are the names and balances of checking accounts belonging to the customer with the lowest savings balance?", "query": "SELECT T1.name ,  T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T3.balance LIMIT 1"}
{"question": "Find the number of checking accounts for each account name.", "query": "SELECT count(*) ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid GROUP BY T1.name"}
{"question": "What are the names of customers with accounts, and how many checking accounts do each of them have?", "query": "SELECT count(*) ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid GROUP BY T1.name"}
{"question": "Find the total saving balance for each account name.", "query": "SELECT sum(T2.balance) ,  T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid GROUP BY T1.name"}
{"question": "What are the names of customers with accounts, and what are the total savings balances for each?", "query": "SELECT sum(T2.balance) ,  T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid GROUP BY T1.name"}
{"question": "Find the name of accounts whose checking balance is below the average checking balance.", "query": "SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  <  (SELECT avg(balance) FROM checking)"}
{"question": "What are the names of customers with checking balances lower than the average checking balance?", "query": "SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  <  (SELECT avg(balance) FROM checking)"}
{"question": "Find the saving balance of the account with the highest checking balance.", "query": "SELECT T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T2.balance DESC LIMIT 1"}
{"question": "What is the savings balance of the account belonging to the customer with the highest checking balance?", "query": "SELECT T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T2.balance DESC LIMIT 1"}
{"question": "Find the total checking and saving balance of all accounts sorted by the total balance in ascending order.", "query": "SELECT T1.balance + T2.balance FROM checking AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid ORDER BY T1.balance + T2.balance"}
{"question": "What is the sum of checking and savings balances for all customers, ordered by the total balance?", "query": "SELECT T1.balance + T2.balance FROM checking AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid ORDER BY T1.balance + T2.balance"}
{"question": "Find the name and checking balance of the account with the lowest saving balance.", "query": "SELECT T2.balance ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T3.balance LIMIT 1"}
{"question": "What is the name and checking balance of the account which has the lowest savings balance?", "query": "SELECT T2.balance ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T3.balance LIMIT 1"}
{"question": "Find the name, checking balance and saving balance of all accounts in the bank.", "query": "SELECT T2.balance ,  T3.balance ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid"}
{"question": "What are the names, checking balances, and savings balances for all customers?", "query": "SELECT T2.balance ,  T3.balance ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid"}
{"question": "Find the name, checking balance and savings balance of all accounts in the bank sorted by their total checking and savings balance in descending order.", "query": "SELECT T2.balance ,  T3.balance ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T2.balance + T3.balance DESC"}
{"question": "What are the names, checking balances, and savings balances of customers, ordered by the total of checking and savings balances descending?", "query": "SELECT T2.balance ,  T3.balance ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T2.balance + T3.balance DESC"}
{"question": "Find the name of accounts whose checking balance is higher than corresponding saving balance.", "query": "SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T2.balance  >  T3.balance"}
{"question": "What are the names of customers with a higher checking balance than savings balance?", "query": "SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T2.balance  >  T3.balance"}
{"question": "Find the name and total checking and savings balance of the accounts whose savings balance is lower than corresponding checking balance.", "query": "SELECT T1.name ,  T3.balance + T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T3.balance  <  T2.balance"}
{"question": "What are the names of customers who have a savings balance lower than their checking balance, and what is the total of their checking and savings balances?", "query": "SELECT T1.name ,  T3.balance + T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T3.balance  <  T2.balance"}
{"question": "Find the name and savings balance of the top 3 accounts with the highest saving balance sorted by savings balance in descending order.", "query": "SELECT T1.name ,  T2.balance FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid ORDER BY T2.balance DESC LIMIT 3"}
{"question": "What are names and savings balances of the three accounts with the highest savings balances?", "query": "SELECT T1.name ,  T2.balance FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid ORDER BY T2.balance DESC LIMIT 3"}
{"question": "How many main stream browsers whose market share is at least 5 exist?", "query": "SELECT count(*) FROM browser WHERE market_share  >=  5"}
{"question": "List the name of browsers in descending order by market share.", "query": "SELECT name FROM browser ORDER BY market_share DESC"}
{"question": "List the ids, names and market shares of all browsers.", "query": "SELECT id ,  name ,  market_share FROM browser"}
{"question": "What is the maximum, minimum and average market share of the listed browsers?", "query": "SELECT max(market_share) ,  min(market_share) ,  avg(market_share) FROM browser"}
{"question": "What is the id and market share of the browser Safari?", "query": "SELECT id ,  market_share FROM browser WHERE name  =  'Safari'"}
{"question": "What are the name and os of web client accelerators that do not work with only a 'Broadband' type connection?", "query": "SELECT name ,  operating_system FROM web_client_accelerator WHERE CONNECTION != 'Broadband'"}
{"question": "What is the name of the browser that became compatible with the accelerator 'CProxy' after year 1998 ?", "query": "SELECT T1.name FROM browser AS T1 JOIN accelerator_compatible_browser AS T2 ON T1.id  =  T2.browser_id JOIN web_client_accelerator AS T3 ON T2.accelerator_id  =  T3.id WHERE T3.name  =  'CProxy' AND T2.compatible_since_year  >  1998"}
{"question": "What are the ids and names of the web accelerators that are compatible with two or more browsers?", "query": "SELECT T1.id ,  T1.Name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id  =  T1.id GROUP BY T1.id HAVING count(*)  >=  2"}
{"question": "What is the id and name of the browser that is compatible with the most web accelerators?", "query": "SELECT T1.id ,  T1.name FROM browser AS T1 JOIN accelerator_compatible_browser AS T2 ON T1.id  =  T2.browser_id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1"}
{"question": "When did the web accelerator 'CACHEbox' and browser 'Internet Explorer' become compatible?", "query": "SELECT T1.compatible_since_year FROM accelerator_compatible_browser AS T1 JOIN browser AS T2 ON T1.browser_id  =  T2.id JOIN web_client_accelerator AS T3 ON T1.accelerator_id  =  T3.id WHERE T3.name  =  'CACHEbox' AND T2.name  =  'Internet Explorer'"}
{"question": "How many different kinds of clients are supported by the web clients accelerators?", "query": "SELECT count(DISTINCT client) FROM web_client_accelerator"}
{"question": "How many accelerators are not compatible with the browsers listed ?", "query": "SELECT count(*) FROM web_client_accelerator WHERE id NOT IN ( SELECT accelerator_id FROM accelerator_compatible_browser );"}
{"question": "What distinct accelerator names are compatible with the browswers that have market share higher than 15?", "query": "SELECT DISTINCT T1.name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id  =  T1.id JOIN browser AS T3 ON T2.browser_id  =  T3.id WHERE T3.market_share  >  15;"}
{"question": "List the names of the browser that are compatible with both 'CACHEbox' and 'Fasterfox'.", "query": "SELECT T3.name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id  =  T1.id JOIN browser AS T3 ON T2.browser_id  =  T3.id WHERE T1.name  =  'CACHEbox' INTERSECT SELECT T3.name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id  =  T1.id JOIN browser AS T3 ON T2.browser_id  =  T3.id WHERE T1.name  =  'Fasterfox'"}
{"question": "Show the accelerator names and supporting operating systems that are not compatible with the browser named 'Opera'.", "query": "SELECT name ,  operating_system FROM web_client_accelerator EXCEPT SELECT T1.name ,  T1.operating_system FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id  =  T1.id JOIN browser AS T3 ON T2.browser_id  =  T3.id WHERE T3.name  =  'Opera'"}
{"question": "Which accelerator name contains substring \"Opera\"?", "query": "SELECT name FROM web_client_accelerator WHERE name LIKE \"%Opera%\""}
{"question": "Find the number of web accelerators used for each Operating system.", "query": "SELECT Operating_system ,  count(*) FROM web_client_accelerator GROUP BY Operating_system"}
{"question": "give me names of all compatible browsers and accelerators in the descending order of compatible year", "query": "SELECT T2.name ,  T3.name FROM accelerator_compatible_browser AS T1 JOIN browser AS T2 ON T1.browser_id  =  T2.id JOIN web_client_accelerator AS T3 ON T1.accelerator_id  =  T3.id ORDER BY T1.compatible_since_year DESC"}
{"question": "How many wrestlers are there?", "query": "SELECT count(*) FROM wrestler"}
{"question": "Count the number of wrestlers.", "query": "SELECT count(*) FROM wrestler"}
{"question": "List the names of wrestlers in descending order of days held.", "query": "SELECT Name FROM wrestler ORDER BY Days_held DESC"}
{"question": "What are the names of the wrestlers, ordered descending by days held?", "query": "SELECT Name FROM wrestler ORDER BY Days_held DESC"}
{"question": "What is the name of the wrestler with the fewest days held?", "query": "SELECT Name FROM wrestler ORDER BY Days_held ASC LIMIT 1"}
{"question": "Return the name of the wrestler who had the lowest number of days held.", "query": "SELECT Name FROM wrestler ORDER BY Days_held ASC LIMIT 1"}
{"question": "What are the distinct reigns of wrestlers whose location is not \"Tokyo,Japan\" ?", "query": "SELECT DISTINCT Reign FROM wrestler WHERE LOCATION != \"Tokyo , Japan\""}
{"question": "Give the different reigns of wrestlers who are not located in Tokyo, Japan.", "query": "SELECT DISTINCT Reign FROM wrestler WHERE LOCATION != \"Tokyo , Japan\""}
{"question": "What are the names and location of the wrestlers?", "query": "SELECT Name ,  LOCATION FROM wrestler"}
{"question": "Give the names and locations of all wrestlers.", "query": "SELECT Name ,  LOCATION FROM wrestler"}
{"question": "What are the elimination moves of wrestlers whose team is \"Team Orton\"?", "query": "SELECT Elimination_Move FROM Elimination WHERE Team  =  \"Team Orton\""}
{"question": "Return the elimination movies of wrestlers on Team Orton.", "query": "SELECT Elimination_Move FROM Elimination WHERE Team  =  \"Team Orton\""}
{"question": "What are the names of wrestlers and the elimination moves?", "query": "SELECT T2.Name ,  T1.Elimination_Move FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID  =  T2.Wrestler_ID"}
{"question": "Give the names of wrestlers and their elimination moves.", "query": "SELECT T2.Name ,  T1.Elimination_Move FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID  =  T2.Wrestler_ID"}
{"question": "List the names of wrestlers and the teams in elimination in descending order of days held.", "query": "SELECT T2.Name ,  T1.Team FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID  =  T2.Wrestler_ID ORDER BY T2.Days_held DESC"}
{"question": "What are the names of wrestlers and their teams in elimination, ordered descending by days held?", "query": "SELECT T2.Name ,  T1.Team FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID  =  T2.Wrestler_ID ORDER BY T2.Days_held DESC"}
{"question": "List the time of elimination of the wrestlers with largest days held.", "query": "SELECT T1.Time FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID  =  T2.Wrestler_ID ORDER BY T2.Days_held DESC LIMIT 1"}
{"question": "What is the time of elimination for the wrestler with the most days held?", "query": "SELECT T1.Time FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID  =  T2.Wrestler_ID ORDER BY T2.Days_held DESC LIMIT 1"}
{"question": "Show times of elimination of wrestlers with days held more than 50.", "query": "SELECT T1.Time FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID  =  T2.Wrestler_ID WHERE T2.Days_held  >  50"}
{"question": "What are the times of elimination for wrestlers with over 50 days held?", "query": "SELECT T1.Time FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID  =  T2.Wrestler_ID WHERE T2.Days_held  >  50"}
{"question": "Show different teams in eliminations and the number of eliminations from each team.", "query": "SELECT Team ,  COUNT(*) FROM elimination GROUP BY Team"}
{"question": "How many eliminations did each team have?", "query": "SELECT Team ,  COUNT(*) FROM elimination GROUP BY Team"}
{"question": "Show teams that have suffered more than three eliminations.", "query": "SELECT Team FROM elimination GROUP BY Team HAVING COUNT(*)  >  3"}
{"question": "Which teams had more than 3 eliminations?", "query": "SELECT Team FROM elimination GROUP BY Team HAVING COUNT(*)  >  3"}
{"question": "Show the reign and days held of wrestlers.", "query": "SELECT Reign ,  Days_held FROM wrestler"}
{"question": "What are the reigns and days held of all wrestlers?", "query": "SELECT Reign ,  Days_held FROM wrestler"}
{"question": "What are the names of wrestlers days held less than 100?", "query": "SELECT Name FROM wrestler WHERE Days_held  <  100"}
{"question": "Return the names of wrestlers with fewer than 100 days held.", "query": "SELECT Name FROM wrestler WHERE Days_held  <  100"}
{"question": "Please show the most common reigns of wrestlers.", "query": "SELECT Reign FROM wrestler GROUP BY Reign ORDER BY COUNT(*) DESC LIMIT 1"}
{"question": "Which reign is the most common among wrestlers?", "query": "SELECT Reign FROM wrestler GROUP BY Reign ORDER BY COUNT(*) DESC LIMIT 1"}
{"question": "List the locations that are shared by more than two wrestlers.", "query": "SELECT LOCATION FROM wrestler GROUP BY LOCATION HAVING COUNT(*)  >  2"}
{"question": "Which locations are shared by more than two wrestlers?", "query": "SELECT LOCATION FROM wrestler GROUP BY LOCATION HAVING COUNT(*)  >  2"}
{"question": "List the names of wrestlers that have not been eliminated.", "query": "SELECT Name FROM wrestler WHERE Wrestler_ID NOT IN (SELECT Wrestler_ID FROM elimination)"}
{"question": "What are the names of wrestlers who have never been eliminated?", "query": "SELECT Name FROM wrestler WHERE Wrestler_ID NOT IN (SELECT Wrestler_ID FROM elimination)"}
{"question": "Show the teams that have both wrestlers eliminated by \"Orton\" and wrestlers eliminated by \"Benjamin\".", "query": "SELECT Team FROM Elimination WHERE Eliminated_By  =  \"Orton\" INTERSECT SELECT Team FROM Elimination WHERE Eliminated_By  =  \"Benjamin\""}
{"question": "What are the teams that have both wrestlers eliminated by Orton and wrestlers eliminated by Benjamin?", "query": "SELECT Team FROM Elimination WHERE Eliminated_By  =  \"Orton\" INTERSECT SELECT Team FROM Elimination WHERE Eliminated_By  =  \"Benjamin\""}
{"question": "What is the number of distinct teams that suffer elimination?", "query": "SELECT COUNT (DISTINCT team) FROM elimination"}
{"question": "How many different teams have had eliminated wrestlers?", "query": "SELECT COUNT (DISTINCT team) FROM elimination"}
{"question": "Show the times of elimination by \"Punk\" or \"Orton\".", "query": "SELECT TIME FROM elimination WHERE Eliminated_By  =  \"Punk\" OR Eliminated_By  =  \"Orton\""}
{"question": "What are the times of elimination for any instances in which the elimination was done by Punk or Orton?", "query": "SELECT TIME FROM elimination WHERE Eliminated_By  =  \"Punk\" OR Eliminated_By  =  \"Orton\""}
{"question": "How many schools are there?", "query": "SELECT count(*) FROM school"}
{"question": "Count the number of schools.", "query": "SELECT count(*) FROM school"}
{"question": "Show all school names in alphabetical order.", "query": "SELECT school_name FROM school ORDER BY school_name"}
{"question": "List the name, location, mascot for all schools.", "query": "SELECT school_name ,  LOCATION ,  mascot FROM school"}
{"question": "What are the total and average enrollment of all schools?", "query": "SELECT sum(enrollment) ,  avg(enrollment) FROM school"}
{"question": "What are the mascots for schools with enrollments above the average?", "query": "SELECT mascot FROM school WHERE enrollment  >  (SELECT avg(enrollment) FROM school)"}
{"question": "List the name of the school with the smallest enrollment.", "query": "SELECT school_name FROM school ORDER BY enrollment LIMIT 1"}
{"question": "Show the average, maximum, minimum enrollment of all schools.", "query": "SELECT avg(enrollment) ,  max(enrollment) ,  min(enrollment) FROM school"}
{"question": "Show each county along with the number of schools and total enrollment in each county.", "query": "SELECT county ,  count(*) ,  sum(enrollment) FROM school GROUP BY county"}
{"question": "How many donors have endowment for school named \"Glenn\"?", "query": "SELECT count(DISTINCT T1.donator_name) FROM endowment AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id WHERE T2.school_name  =  \"Glenn\""}
{"question": "List each donator name and the amount of endowment in descending order of the amount of endowment.", "query": "SELECT donator_name ,  sum(amount) FROM endowment GROUP BY donator_name ORDER BY sum(amount) DESC"}
{"question": "List the names of the schools without any endowment.", "query": "SELECT school_name FROM school WHERE school_id NOT IN (SELECT school_id FROM endowment)"}
{"question": "List all the names of schools with an endowment amount smaller than or equal to 10.", "query": "SELECT T2.school_name FROM endowment AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id GROUP BY T1.school_id HAVING sum(T1.amount)  <=  10"}
{"question": "Show the names of donors who donated to both school \"Glenn\" and \"Triton.\"", "query": "SELECT T1.donator_name FROM endowment AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id WHERE T2.school_name  =  'Glenn' INTERSECT SELECT T1.donator_name FROM endowment AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id WHERE T2.school_name  =  'Triton'"}
{"question": "Show the names of all the donors except those whose donation amount less than 9.", "query": "SELECT donator_name FROM endowment EXCEPT SELECT donator_name FROM endowment WHERE amount  <  9"}
{"question": "List the amount and donor name for the largest amount of donation.", "query": "SELECT amount ,  donator_name FROM endowment ORDER BY amount DESC LIMIT 1"}
{"question": "How many budgets are above 3000 in year 2001 or before?", "query": "SELECT count(*) FROM budget WHERE budgeted  >  3000 AND YEAR  <=  2001"}
{"question": "Count the number of budgets in year 2001 or before whose budgeted amount is greater than 3000", "query": "SELECT count(*) FROM budget WHERE budgeted  >  3000 AND YEAR  <=  2001"}
{"question": "Show each school name, its budgeted amount, and invested amount in year 2002 or after.", "query": "SELECT T2.school_name ,  T1.budgeted ,  T1.invested FROM budget AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id WHERE T1.year  >=  2002"}
{"question": "Show all donor names.", "query": "SELECT DISTINCT donator_name FROM endowment"}
{"question": "How many budget record has a budget amount smaller than the invested amount?", "query": "SELECT count(*) FROM budget WHERE budgeted  <  invested"}
{"question": "What is the total budget amount for school \"Glenn\" in all years?", "query": "SELECT sum(T1.budgeted) FROM budget AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id WHERE T2.school_name  =  'Glenn'"}
{"question": "Show the names of schools with a total budget amount greater than 100 or a total endowment greater than 10.", "query": "SELECT T2.school_name FROM budget AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id JOIN endowment AS T3 ON T2.school_id  =  T3.school_id GROUP BY T2.school_name HAVING sum(T1.budgeted)  >  100 OR sum(T3.amount)  >  10"}
{"question": "Find the names of schools that have more than one donator with donation amount above 8.5.", "query": "SELECT T2.School_name FROM endowment AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id WHERE T1.amount  >  8.5 GROUP BY T1.school_id HAVING count(*)  >  1"}
{"question": "Find the number of schools that have more than one donator whose donation amount is less than 8.5.", "query": "SELECT count(*) FROM (SELECT * FROM endowment WHERE amount  >  8.5 GROUP BY school_id HAVING count(*)  >  1)"}
{"question": "List the name, IHSAA Football Class, and Mascot of the schools that have more than 6000 of budgeted amount or were founded before 2003, in the order of percent of total invested budget and total budgeted budget.", "query": "SELECT T1.School_name ,  T1.Mascot ,  T1.IHSAA_Football_Class FROM school AS T1 JOIN budget AS T2 ON T1.school_id  =  T2.school_id WHERE Budgeted  >  6000 OR YEAR  <  2003 ORDER BY T2.total_budget_percent_invested ,  T2.total_budget_percent_budgeted"}
{"question": "How many buildings are there?", "query": "SELECT count(*) FROM building"}
{"question": "Show the name, street address, and number of floors for all buildings ordered by the number of floors.", "query": "SELECT name ,  street_address ,  floors FROM building ORDER BY floors"}
{"question": "What is the name of the tallest building?", "query": "SELECT name FROM building ORDER BY height_feet DESC LIMIT 1"}
{"question": "What are the average, maximum, and minimum number of floors for all buildings?", "query": "SELECT avg(floors) ,  max(floors) ,  min(floors) FROM building"}
{"question": "Show the number of buildings with a height above the average or a number of floors above the average.", "query": "SELECT count(*) FROM building WHERE height_feet  >  (SELECT avg(height_feet) FROM building) OR floors  >  (SELECT avg(floors) FROM building)"}
{"question": "List the names of buildings with at least 200 feet of height and with at least 20 floors.", "query": "SELECT name FROM building WHERE height_feet  >=  200 AND floors  >=  20"}
{"question": "Show the names and locations of institutions that are founded after 1990 and have the type \"Private\".", "query": "SELECT institution ,  LOCATION FROM institution WHERE founded  >  1990 AND TYPE  =  'Private'"}
{"question": "Show institution types, along with the number of institutions and total enrollment for each type.", "query": "SELECT TYPE ,  count(*) ,  sum(enrollment) FROM institution GROUP BY TYPE"}
{"question": "Show the institution type with the largest number of institutions.", "query": "SELECT TYPE FROM institution GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1"}
{"question": "Show the institution type with an institution founded after 1990 and an institution with at least 1000 enrollment.", "query": "SELECT TYPE FROM institution WHERE founded  >  1990 AND enrollment  >=  1000"}
{"question": "Show the name of buildings that do not have any institution.", "query": "SELECT name FROM building WHERE building_id NOT IN (SELECT building_id FROM institution)"}
{"question": "Show the names of buildings except for those having an institution founded in 2003.", "query": "SELECT name FROM building EXCEPT SELECT T1.name FROM building AS T1 JOIN institution AS T2 ON T1.building_id  =  T2.building_id WHERE T2.founded  =  2003"}
{"question": "For each building, show the name of the building and the number of institutions in it.", "query": "SELECT T1.name ,  count(*) FROM building AS T1 JOIN institution AS T2 ON T1.building_id  =  T2.building_id GROUP BY T1.building_id"}
{"question": "Show the names and heights of buildings with at least two institutions founded after 1880.", "query": "SELECT T1.name ,  T1.height_feet FROM building AS T1 JOIN institution AS T2 ON T1.building_id  =  T2.building_id WHERE T2.founded  >  1880 GROUP BY T1.building_id HAVING count(*)  >=  2"}
{"question": "Show all the distinct institution types.", "query": "SELECT DISTINCT TYPE FROM institution"}
{"question": "Show institution names along with the number of proteins for each institution.", "query": "SELECT T1.institution ,  count(*) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id  =  T2.institution_id GROUP BY T1.institution_id"}
{"question": "How many proteins are associated with an institution founded after 1880 or an institution with type \"Private\"?", "query": "SELECT count(*) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id  =  T2.institution_id WHERE T1.founded  >  1880 OR T1.type  =  'Private'"}
{"question": "Show the protein name and the institution name.", "query": "SELECT T2.protein_name ,  T1.institution FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id  =  T2.institution_id"}
{"question": "How many proteins are associated with an institution in a building with at least 20 floors?", "query": "SELECT count(*) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id  =  T2.institution_id JOIN building AS T3 ON T3.building_id  =  T1.building_id WHERE T3.floors  >=  20"}
{"question": "How many institutions do not have an associated protein in our record?", "query": "SELECT count(*) FROM institution WHERE institution_id NOT IN (SELECT institution_id FROM protein)"}
{"question": "Show all the locations where no cinema has capacity over 800.", "query": "SELECT LOCATION FROM cinema EXCEPT SELECT LOCATION FROM cinema WHERE capacity  >  800"}
{"question": "Show all the locations where some cinemas were opened in both year 2010 and year 2011.", "query": "SELECT LOCATION FROM cinema WHERE openning_year  =  2010 INTERSECT SELECT LOCATION FROM cinema WHERE openning_year  =  2011"}
{"question": "How many cinema do we have?", "query": "SELECT count(*) FROM cinema"}
{"question": "Count the number of cinemas.", "query": "SELECT count(*) FROM cinema"}
{"question": "Show name, opening year, and capacity for each cinema.", "query": "SELECT name ,  openning_year ,  capacity FROM cinema"}
{"question": "Show the cinema name and location for cinemas with capacity above average.", "query": "SELECT name ,  LOCATION FROM cinema WHERE capacity  >  (SELECT avg(capacity) FROM cinema)"}
{"question": "What are all the locations with a cinema?", "query": "SELECT DISTINCT LOCATION FROM cinema"}
{"question": "Find the distinct locations that has a cinema.", "query": "SELECT DISTINCT LOCATION FROM cinema"}
{"question": "Show all the cinema names and opening years in descending order of opening year.", "query": "SELECT name ,  openning_year FROM cinema ORDER BY openning_year DESC"}
{"question": "What are the name and location of the cinema with the largest capacity?", "query": "SELECT name ,  LOCATION FROM cinema ORDER BY capacity DESC LIMIT 1"}
{"question": "Show the average, minimum, and maximum capacity for all the cinemas opened in year 2011 or later.", "query": "SELECT avg(capacity) ,  min(capacity) ,  max(capacity) FROM cinema WHERE openning_year  >=  2011"}
{"question": "Show each location and the number of cinemas there.", "query": "SELECT LOCATION ,  count(*) FROM cinema GROUP BY LOCATION"}
{"question": "What is the location with the most cinemas opened in year 2010 or later?", "query": "SELECT LOCATION FROM cinema WHERE openning_year  >=  2010 GROUP BY LOCATION ORDER BY count(*) DESC LIMIT 1"}
{"question": "Show all the locations with at least two cinemas with capacity above 300.", "query": "SELECT LOCATION FROM cinema WHERE capacity  >  300 GROUP BY LOCATION HAVING count(*)  >=  2"}
{"question": "Which locations have 2 or more cinemas with capacity over 300?", "query": "SELECT LOCATION FROM cinema WHERE capacity  >  300 GROUP BY LOCATION HAVING count(*)  >=  2"}
{"question": "Show the title and director for all films.", "query": "SELECT title ,  directed_by FROM film"}
{"question": "What are the title and director of each film?", "query": "SELECT title ,  directed_by FROM film"}
{"question": "Show all directors.", "query": "SELECT DISTINCT directed_by FROM film"}
{"question": "Who are all the directors?", "query": "SELECT DISTINCT directed_by FROM film"}
{"question": "List all directors along with the number of films directed by each director.", "query": "SELECT directed_by ,  count(*) FROM film GROUP BY directed_by"}
{"question": "What is total number of show times per dat for each cinema?", "query": "SELECT T2.name ,  sum(T1.show_times_per_day) FROM schedule AS T1 JOIN cinema AS T2 ON T1.cinema_id  =  T2.cinema_id GROUP BY T1.cinema_id"}
{"question": "What are the title and maximum price of each film?", "query": "SELECT T2.title ,  max(T1.price) FROM schedule AS T1 JOIN film AS T2 ON T1.film_id  =  T2.film_id GROUP BY T1.film_id"}
{"question": "Give me the title and highest price for each film.", "query": "SELECT T2.title ,  max(T1.price) FROM schedule AS T1 JOIN film AS T2 ON T1.film_id  =  T2.film_id GROUP BY T1.film_id"}
{"question": "Show cinema name, film title, date, and price for each record in schedule.", "query": "SELECT T3.name ,  T2.title ,  T1.date ,  T1.price FROM schedule AS T1 JOIN film AS T2 ON T1.film_id  =  T2.film_id JOIN cinema AS T3 ON T1.cinema_id  =  T3.cinema_id"}
{"question": "What are the title and director of the films without any schedule?", "query": "SELECT title ,  directed_by FROM film WHERE film_id NOT IN (SELECT film_id FROM schedule)"}
{"question": "Show director with the largest number of show times in total.", "query": "SELECT T2.directed_by FROM schedule AS T1 JOIN film AS T2 ON T1.film_id  =  T2.film_id GROUP BY T2.directed_by ORDER BY sum(T1.show_times_per_day) DESC LIMIT 1"}
{"question": "Find the locations that have more than one movie theater with capacity above 300.", "query": "SELECT LOCATION FROM cinema WHERE capacity  >  300 GROUP BY LOCATION HAVING count(*)  >  1"}
{"question": "In which locations are there more than one movie theater with capacity above 300?", "query": "SELECT LOCATION FROM cinema WHERE capacity  >  300 GROUP BY LOCATION HAVING count(*)  >  1"}
{"question": "How many films have the word 'Dummy' in their titles?", "query": "SELECT count(*) FROM film WHERE title LIKE \"%Dummy%\""}
{"question": "Count the number of films whose title contains the word 'Dummy'.", "query": "SELECT count(*) FROM film WHERE title LIKE \"%Dummy%\""}
{"question": "Are the customers holding coupons with amount 500 bad or good?", "query": "SELECT T1.good_or_bad_customer FROM customers AS T1 JOIN discount_coupons AS T2 ON T1.coupon_id  =  T2.coupon_id WHERE T2.coupon_amount  =  500"}
{"question": "How many bookings did each customer make? List the customer id, first name, and the count.", "query": "SELECT T1.customer_id ,  T1.first_name ,  count(*) FROM Customers AS T1 JOIN bookings AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id"}
{"question": "What is the maximum total amount paid by a customer? List the customer id and amount.", "query": "SELECT customer_id ,  sum(amount_paid) FROM Payments GROUP BY customer_id ORDER BY sum(amount_paid) DESC LIMIT 1"}
{"question": "What are the id and the amount of refund of the booking that incurred the most times of payments?", "query": "SELECT T1.booking_id ,  T1.amount_of_refund FROM Bookings AS T1 JOIN Payments AS T2 ON T1.booking_id  =  T2.booking_id GROUP BY T1.booking_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "What is the id of the product that is booked for 3 times?", "query": "SELECT product_id FROM products_booked GROUP BY product_id HAVING count(*)  =  3"}
{"question": "What is the product description of the product booked with an amount of 102.76?", "query": "SELECT T2.product_description FROM products_booked AS T1 JOIN products_for_hire AS T2 ON T1.product_id  =  T2.product_id WHERE T1.booked_amount  =  102.76"}
{"question": "What are the start date and end date of the booking that has booked the product named 'Book collection A'?", "query": "SELECT T3.booking_start_date ,   T3.booking_end_date FROM Products_for_hire AS T1 JOIN products_booked AS T2 ON T1.product_id  =  T2.product_id JOIN bookings AS T3 ON T2.booking_id  =  T3.booking_id WHERE T1.product_name  =  'Book collection A'"}
{"question": "What are the names of products whose availability equals to 1?", "query": "SELECT T2.product_name FROM view_product_availability AS T1 JOIN products_for_hire AS T2 ON T1.product_id  =  T2.product_id WHERE T1.available_yn  =  1"}
{"question": "How many different product types are there?", "query": "SELECT count(DISTINCT product_type_code) FROM products_for_hire"}
{"question": "What are the first name, last name, and gender of all the good customers? Order by their last name.", "query": "SELECT first_name ,  last_name ,  gender_mf FROM customers WHERE good_or_bad_customer  =  'good' ORDER BY last_name"}
{"question": "What is the average amount due for all the payments?", "query": "SELECT avg(amount_due) FROM payments"}
{"question": "What are the maximum, minimum, and average booked count for the products booked?", "query": "SELECT max(booked_count) ,  min(booked_count) ,  avg(booked_count) FROM products_booked"}
{"question": "What are all the distinct payment types?", "query": "SELECT DISTINCT payment_type_code FROM payments"}
{"question": "What are the daily hire costs for the products with substring 'Book' in its name?", "query": "SELECT daily_hire_cost FROM Products_for_hire WHERE product_name LIKE '%Book%'"}
{"question": "How many products are never booked with amount higher than 200?", "query": "SELECT count(*) FROM Products_for_hire WHERE product_id NOT IN ( SELECT product_id FROM products_booked WHERE booked_amount  >  200 )"}
{"question": "What are the coupon amount of the coupons owned by both good and bad customers?", "query": "SELECT T1.coupon_amount FROM Discount_Coupons AS T1 JOIN customers AS T2 ON T1.coupon_id  =  T2.coupon_id WHERE T2.good_or_bad_customer  =  'good' INTERSECT SELECT T1.coupon_amount FROM Discount_Coupons AS T1 JOIN customers AS T2 ON T1.coupon_id  =  T2.coupon_id WHERE T2.good_or_bad_customer  =  'bad'"}
{"question": "What are the payment date of the payment with amount paid higher than 300 or with payment type is 'Check'", "query": "SELECT payment_date FROM payments WHERE amount_paid  >  300 OR payment_type_code  =  'Check'"}
{"question": "What are the names and descriptions of the products that are of 'Cutlery' type and have daily hire cost lower than 20?", "query": "SELECT product_name ,  product_description FROM products_for_hire WHERE product_type_code  =  'Cutlery' AND daily_hire_cost  <  20"}
{"question": "How many phones are there?", "query": "SELECT count(*) FROM phone"}
{"question": "List the names of phones in ascending order of price.", "query": "SELECT Name FROM phone ORDER BY Price ASC"}
{"question": "What are the memories and carriers of phones?", "query": "SELECT Memory_in_G ,  Carrier FROM phone"}
{"question": "List the distinct carriers of phones with memories bigger than 32.", "query": "SELECT DISTINCT Carrier FROM phone WHERE Memory_in_G  >  32"}
{"question": "Show the names of phones with carrier either \"Sprint\" or \"TMobile\".", "query": "SELECT Name FROM phone WHERE Carrier  =  \"Sprint\" OR Carrier  =  \"TMobile\""}
{"question": "What is the carrier of the most expensive phone?", "query": "SELECT Carrier FROM phone ORDER BY Price DESC LIMIT 1"}
{"question": "Show different carriers of phones together with the number of phones with each carrier.", "query": "SELECT Carrier ,  COUNT(*) FROM phone GROUP BY Carrier"}
{"question": "Show the most frequently used carrier of the phones.", "query": "SELECT Carrier FROM phone GROUP BY Carrier ORDER BY COUNT(*) DESC LIMIT 1"}
{"question": "Show the carriers that have both phones with memory smaller than 32 and phones with memory bigger than 64.", "query": "SELECT Carrier FROM phone WHERE Memory_in_G  <  32 INTERSECT SELECT Carrier FROM phone WHERE Memory_in_G  >  64"}
{"question": "Show the names of phones and the districts of markets they are on.", "query": "SELECT T3.Name ,  T2.District FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID  =  T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID  =  T3.Phone_ID"}
{"question": "Show the names of phones and the districts of markets they are on, in ascending order of the ranking of the market.", "query": "SELECT T3.Name ,  T2.District FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID  =  T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID  =  T3.Phone_ID ORDER BY T2.Ranking"}
{"question": "Show the names of phones that are on market with number of shops greater than 50.", "query": "SELECT T3.Name FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID  =  T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID  =  T3.Phone_ID WHERE T2.Num_of_shops  >  50"}
{"question": "For each phone, show its names and total number of stocks.", "query": "SELECT T2.Name ,  sum(T1.Num_of_stock) FROM phone_market AS T1 JOIN phone AS T2 ON T1.Phone_ID  =  T2.Phone_ID GROUP BY T2.Name"}
{"question": "Show the names of phones that have total number of stocks bigger than 2000, in descending order of the total number of stocks.", "query": "SELECT T2.Name FROM phone_market AS T1 JOIN phone AS T2 ON T1.Phone_ID  =  T2.Phone_ID GROUP BY T2.Name HAVING sum(T1.Num_of_stock)  >=  2000 ORDER BY sum(T1.Num_of_stock) DESC"}
{"question": "List the names of phones that are not on any market.", "query": "SELECT Name FROM phone WHERE Phone_id NOT IN (SELECT Phone_ID FROM phone_market)"}
{"question": "How many gas companies are there?", "query": "SELECT count(*) FROM company"}
{"question": "What is the total number of companies?", "query": "SELECT count(*) FROM company"}
{"question": "List the company name and rank for all companies in the decreasing order of their sales.", "query": "SELECT company ,  rank FROM company ORDER BY Sales_billion DESC"}
{"question": "What is the name and rank of every company ordered by descending number of sales?", "query": "SELECT company ,  rank FROM company ORDER BY Sales_billion DESC"}
{"question": "Show the company name and the main industry for all companies whose headquarters are not from USA.", "query": "SELECT company ,  main_industry FROM company WHERE headquarters != 'USA'"}
{"question": "What are the companies and main industries of all companies that are not headquartered in the United States?", "query": "SELECT company ,  main_industry FROM company WHERE headquarters != 'USA'"}
{"question": "Show all company names and headquarters in the descending order of market value.", "query": "SELECT company ,  headquarters FROM company ORDER BY market_value DESC"}
{"question": "What are the names and headquarters of all companies ordered by descending market value?", "query": "SELECT company ,  headquarters FROM company ORDER BY market_value DESC"}
{"question": "Show minimum, maximum, and average market value for all companies.", "query": "SELECT min(market_value) ,  max(market_value) ,  avg(market_value) FROM company"}
{"question": "What is the minimum, maximum, and average market value for every company?", "query": "SELECT min(market_value) ,  max(market_value) ,  avg(market_value) FROM company"}
{"question": "Show all main industry for all companies.", "query": "SELECT DISTINCT main_industry FROM company"}
{"question": "What are the different main industries for all companies?", "query": "SELECT DISTINCT main_industry FROM company"}
{"question": "List all headquarters and the number of companies in each headquarter.", "query": "SELECT headquarters ,  count(*) FROM company GROUP BY headquarters"}
{"question": "For each headquarter, what are the headquarter and how many companies are centered there?", "query": "SELECT headquarters ,  count(*) FROM company GROUP BY headquarters"}
{"question": "Show all main industry and total market value in each industry.", "query": "SELECT main_industry ,  sum(market_value) FROM company GROUP BY main_industry"}
{"question": "What are the main indstries and total market value for each industry?", "query": "SELECT main_industry ,  sum(market_value) FROM company GROUP BY main_industry"}
{"question": "List the main industry with highest total market value and its number of companies.", "query": "SELECT main_industry ,  count(*) FROM company GROUP BY main_industry ORDER BY sum(market_value) DESC LIMIT 1"}
{"question": "For each main industry, what is the total number of companies for the industry with the highest total market value?", "query": "SELECT main_industry ,  count(*) FROM company GROUP BY main_industry ORDER BY sum(market_value) DESC LIMIT 1"}
{"question": "Show headquarters with at least two companies in the banking industry.", "query": "SELECT headquarters FROM company WHERE main_industry  =  'Banking' GROUP BY headquarters HAVING count(*)  >=  2"}
{"question": "What are the headquarters with at least two companies in the banking industry?", "query": "SELECT headquarters FROM company WHERE main_industry  =  'Banking' GROUP BY headquarters HAVING count(*)  >=  2"}
{"question": "Show gas station id, location, and manager_name for all gas stations ordered by open year.", "query": "SELECT station_id ,  LOCATION ,  manager_name FROM gas_station ORDER BY open_year"}
{"question": "What are the gas station ids, locations, and manager names for the gas stations ordered by opening year?", "query": "SELECT station_id ,  LOCATION ,  manager_name FROM gas_station ORDER BY open_year"}
{"question": "How many gas station are opened between 2000 and 2005?", "query": "SELECT count(*) FROM gas_station WHERE open_year BETWEEN 2000 AND 2005"}
{"question": "What is the total number of gas stations that opened between 2000 and 2005?", "query": "SELECT count(*) FROM gas_station WHERE open_year BETWEEN 2000 AND 2005"}
{"question": "Show all locations and the number of gas stations in each location ordered by the count.", "query": "SELECT LOCATION ,  count(*) FROM gas_station GROUP BY LOCATION ORDER BY count(*)"}
{"question": "For each location, how many gas stations are there in order?", "query": "SELECT LOCATION ,  count(*) FROM gas_station GROUP BY LOCATION ORDER BY count(*)"}
{"question": "Show all headquarters with both a company in banking industry and a company in Oil and gas.", "query": "SELECT headquarters FROM company WHERE main_industry  =  'Banking' INTERSECT SELECT headquarters FROM company WHERE main_industry  =  'Oil and gas'"}
{"question": "What are the headquarters that have both a company in the banking and 'oil and gas' industries?", "query": "SELECT headquarters FROM company WHERE main_industry  =  'Banking' INTERSECT SELECT headquarters FROM company WHERE main_industry  =  'Oil and gas'"}
{"question": "Show all headquarters without a company in banking industry.", "query": "SELECT headquarters FROM company EXCEPT SELECT headquarters FROM company WHERE main_industry  =  'Banking'"}
{"question": "What are the headquarters without companies that are in the banking industry?", "query": "SELECT headquarters FROM company EXCEPT SELECT headquarters FROM company WHERE main_industry  =  'Banking'"}
{"question": "Show the company name with the number of gas station.", "query": "SELECT T2.company ,  count(*) FROM station_company AS T1 JOIN company AS T2 ON T1.company_id  =  T2.company_id GROUP BY T1.company_id"}
{"question": "For each company id, what are the companies and how many gas stations does each one operate?", "query": "SELECT T2.company ,  count(*) FROM station_company AS T1 JOIN company AS T2 ON T1.company_id  =  T2.company_id GROUP BY T1.company_id"}
{"question": "Show company name and main industry without a gas station.", "query": "SELECT company ,  main_industry FROM company WHERE company_id NOT IN (SELECT company_id FROM station_company)"}
{"question": "What are the main industries of the companies without gas stations and what are the companies?", "query": "SELECT company ,  main_industry FROM company WHERE company_id NOT IN (SELECT company_id FROM station_company)"}
{"question": "Show the manager name for gas stations belonging to the ExxonMobil company.", "query": "SELECT T3.manager_name FROM station_company AS T1 JOIN company AS T2 ON T1.company_id  =  T2.company_id JOIN gas_station AS T3 ON T1.station_id  =  T3.station_id WHERE T2.company  =  'ExxonMobil'"}
{"question": "What are the names of the managers for gas stations that are operated by the ExxonMobil company?", "query": "SELECT T3.manager_name FROM station_company AS T1 JOIN company AS T2 ON T1.company_id  =  T2.company_id JOIN gas_station AS T3 ON T1.station_id  =  T3.station_id WHERE T2.company  =  'ExxonMobil'"}
{"question": "Show all locations where a gas station for company with market value greater than 100 is located.", "query": "SELECT T3.location FROM station_company AS T1 JOIN company AS T2 ON T1.company_id  =  T2.company_id JOIN gas_station AS T3 ON T1.station_id  =  T3.station_id WHERE T2.market_value  >  100"}
{"question": "What are the locations that have gas stations owned by a company with a market value greater than 100?", "query": "SELECT T3.location FROM station_company AS T1 JOIN company AS T2 ON T1.company_id  =  T2.company_id JOIN gas_station AS T3 ON T1.station_id  =  T3.station_id WHERE T2.market_value  >  100"}
{"question": "Show the manager name with most number of gas stations opened after 2000.", "query": "SELECT manager_name FROM gas_station WHERE open_year  >  2000 GROUP BY manager_name ORDER BY count(*) DESC LIMIT 1"}
{"question": "What is the name of the manager with the most gas stations that opened after 2000?", "query": "SELECT manager_name FROM gas_station WHERE open_year  >  2000 GROUP BY manager_name ORDER BY count(*) DESC LIMIT 1"}
{"question": "order all gas station locations by the opening year.", "query": "SELECT LOCATION FROM gas_station ORDER BY open_year"}
{"question": "What are the locations of all the gas stations ordered by opening year?", "query": "SELECT LOCATION FROM gas_station ORDER BY open_year"}
{"question": "find the rank, company names, market values of the companies in the banking industry order by their sales and profits in billion.", "query": "SELECT rank ,  company ,  market_value FROM company WHERE main_industry  =  'Banking' ORDER BY sales_billion ,  profits_billion"}
{"question": "What is the rank, company, and market value of every comapny in the banking industry ordered by sales and profits?", "query": "SELECT rank ,  company ,  market_value FROM company WHERE main_industry  =  'Banking' ORDER BY sales_billion ,  profits_billion"}
{"question": "find the location and Representative name of the gas stations owned by the companies with top 3 Asset amounts.", "query": "SELECT T3.location ,  T3.Representative_Name FROM station_company AS T1 JOIN company AS T2 ON T1.company_id  =  T2.company_id JOIN gas_station AS T3 ON T1.station_id  =  T3.station_id ORDER BY T2.Assets_billion DESC LIMIT 3"}
{"question": "What are the locations and representatives' names of the gas stations owned by the companies with the 3 largest amounts of assets?", "query": "SELECT T3.location ,  T3.Representative_Name FROM station_company AS T1 JOIN company AS T2 ON T1.company_id  =  T2.company_id JOIN gas_station AS T3 ON T1.station_id  =  T3.station_id ORDER BY T2.Assets_billion DESC LIMIT 3"}
{"question": "How many regions do we have?", "query": "SELECT count(*) FROM region"}
{"question": "Count the number of regions.", "query": "SELECT count(*) FROM region"}
{"question": "Show all distinct region names ordered by their labels.", "query": "SELECT DISTINCT region_name FROM region ORDER BY Label"}
{"question": "What are the different region names, ordered by labels?", "query": "SELECT DISTINCT region_name FROM region ORDER BY Label"}
{"question": "How many parties do we have?", "query": "SELECT count(DISTINCT party_name) FROM party"}
{"question": "Count the number of different parties.", "query": "SELECT count(DISTINCT party_name) FROM party"}
{"question": "Show the ministers and the time they took and left office, listed by the time they left office.", "query": "SELECT minister ,  took_office ,  left_office FROM party ORDER BY left_office"}
{"question": "Who are the ministers, when did they take office, and when did they leave office, ordered by when they left office?", "query": "SELECT minister ,  took_office ,  left_office FROM party ORDER BY left_office"}
{"question": "Show the minister who took office after 1961 or before 1959.", "query": "SELECT minister FROM party WHERE took_office  >  1961 OR took_office  <  1959"}
{"question": "Who are the ministers who took office after 1961 or before 1959?", "query": "SELECT minister FROM party WHERE took_office  >  1961 OR took_office  <  1959"}
{"question": "Show all ministers who do not belong to Progress Party.", "query": "SELECT minister FROM party WHERE party_name != 'Progress Party'"}
{"question": "Which ministers are not a part of the Progress Party?", "query": "SELECT minister FROM party WHERE party_name != 'Progress Party'"}
{"question": "Show all ministers and parties they belong to in descending order of the time they took office.", "query": "SELECT minister ,  party_name FROM party ORDER BY took_office DESC"}
{"question": "Who are the ministers and what parties do they belong to, listed descending by the times they took office?", "query": "SELECT minister ,  party_name FROM party ORDER BY took_office DESC"}
{"question": "Return the minister who left office at the latest time.", "query": "SELECT minister FROM party ORDER BY left_office DESC LIMIT 1"}
{"question": "Which minister left office the latest?", "query": "SELECT minister FROM party ORDER BY left_office DESC LIMIT 1"}
{"question": "List member names and their party names.", "query": "SELECT T1.member_name ,  T2.party_name FROM Member AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id"}
{"question": "What are the names of members and their corresponding parties?", "query": "SELECT T1.member_name ,  T2.party_name FROM Member AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id"}
{"question": "Show all party names and the number of members in each party.", "query": "SELECT T2.party_name ,  count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id GROUP BY T1.party_id"}
{"question": "How many members are in each party?", "query": "SELECT T2.party_name ,  count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id GROUP BY T1.party_id"}
{"question": "What is the name of party with most number of members?", "query": "SELECT T2.party_name FROM Member AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id GROUP BY T1.party_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "Return the name of the party with the most members.", "query": "SELECT T2.party_name FROM Member AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id GROUP BY T1.party_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "Show all party names and their region names.", "query": "SELECT T1.party_name ,  T2.region_name FROM party AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id"}
{"question": "What are the names of parties and their respective regions?", "query": "SELECT T1.party_name ,  T2.region_name FROM party AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id"}
{"question": "Show names of parties that does not have any members.", "query": "SELECT party_name FROM party WHERE party_id NOT IN (SELECT party_id FROM Member)"}
{"question": "What are the names of parties that have no members?", "query": "SELECT party_name FROM party WHERE party_id NOT IN (SELECT party_id FROM Member)"}
{"question": "Show the member names which are in both the party with id 3 and the party with id 1.", "query": "SELECT member_name FROM member WHERE party_id  =  3 INTERSECT SELECT member_name FROM member WHERE party_id  =  1"}
{"question": "Which member names are shared among members in the party with the id 3 and the party with the id 1?", "query": "SELECT member_name FROM member WHERE party_id  =  3 INTERSECT SELECT member_name FROM member WHERE party_id  =  1"}
{"question": "Show member names that are not in the Progress Party.", "query": "SELECT T1.member_name FROM Member AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id WHERE T2.Party_name != \"Progress Party\""}
{"question": "Which member names corresponding to members who are not in the Progress Party?", "query": "SELECT T1.member_name FROM Member AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id WHERE T2.Party_name != \"Progress Party\""}
{"question": "How many party events do we have?", "query": "SELECT count(*) FROM party_events"}
{"question": "Count the number of party events.", "query": "SELECT count(*) FROM party_events"}
{"question": "Show party names and the number of events for each party.", "query": "SELECT T2.party_name ,  count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id GROUP BY T1.party_id"}
{"question": "How many events are there for each party?", "query": "SELECT T2.party_name ,  count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id GROUP BY T1.party_id"}
{"question": "Show all member names who are not in charge of any event.", "query": "SELECT member_name FROM member EXCEPT SELECT T1.member_name FROM member AS T1 JOIN party_events AS T2 ON T1.member_id  =  T2.member_in_charge_id"}
{"question": "What are the names of members who are not in charge of any events?", "query": "SELECT member_name FROM member EXCEPT SELECT T1.member_name FROM member AS T1 JOIN party_events AS T2 ON T1.member_id  =  T2.member_in_charge_id"}
{"question": "What are the names of parties with at least 2 events?", "query": "SELECT T2.party_name FROM party_events AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id GROUP BY T1.party_id HAVING count(*)  >=  2"}
{"question": "Return the names of parties that have two or more events.", "query": "SELECT T2.party_name FROM party_events AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id GROUP BY T1.party_id HAVING count(*)  >=  2"}
{"question": "What is the name of member in charge of greatest number of events?", "query": "SELECT T1.member_name FROM member AS T1 JOIN party_events AS T2 ON T1.member_id  =  T2.member_in_charge_id GROUP BY T2.member_in_charge_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "Return the name of the member who is in charge of the most events.", "query": "SELECT T1.member_name FROM member AS T1 JOIN party_events AS T2 ON T1.member_id  =  T2.member_in_charge_id GROUP BY T2.member_in_charge_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "find the event names that have more than 2 records.", "query": "SELECT event_name FROM party_events GROUP BY event_name HAVING count(*)  >  2"}
{"question": "Which event names were used more than twice for party events?", "query": "SELECT event_name FROM party_events GROUP BY event_name HAVING count(*)  >  2"}
{"question": "How many Annual Meeting events happened in the United Kingdom region?", "query": "SELECT count(*) FROM region AS t1 JOIN party AS t2 ON t1.region_id  =  t2.region_id JOIN party_events AS t3 ON t2.party_id  =  t3.party_id WHERE t1.region_name  =  \"United Kingdom\" AND t3.Event_Name  =  \"Annaual Meeting\""}
{"question": "Count the number of Annual Meeting events that took place in the region of the United Kingdom.", "query": "SELECT count(*) FROM region AS t1 JOIN party AS t2 ON t1.region_id  =  t2.region_id JOIN party_events AS t3 ON t2.party_id  =  t3.party_id WHERE t1.region_name  =  \"United Kingdom\" AND t3.Event_Name  =  \"Annaual Meeting\""}
{"question": "How many pilots are there?", "query": "SELECT count(*) FROM pilot"}
{"question": "List the names of pilots in ascending order of rank.", "query": "SELECT Pilot_name FROM pilot ORDER BY Rank ASC"}
{"question": "What are the positions and teams of pilots?", "query": "SELECT POSITION ,  Team FROM pilot"}
{"question": "List the distinct positions of pilots older than 30.", "query": "SELECT DISTINCT POSITION FROM pilot WHERE Age  >  30"}
{"question": "Show the names of pilots from team \"Bradley\" or \"Fordham\".", "query": "SELECT Pilot_name FROM pilot WHERE Team  =  \"Bradley\" OR Team  =  \"Fordham\""}
{"question": "What is the joined year of the pilot of the highest rank?", "query": "SELECT Join_Year FROM pilot ORDER BY Rank ASC LIMIT 1"}
{"question": "What are the different nationalities of pilots? Show each nationality and the number of pilots of each nationality.", "query": "SELECT Nationality ,  COUNT(*) FROM pilot GROUP BY Nationality"}
{"question": "Show the most common nationality of pilots.", "query": "SELECT Nationality FROM pilot GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1"}
{"question": "Show the pilot positions that have both pilots joining after year 2005 and pilots joining before 2000.", "query": "SELECT POSITION FROM pilot WHERE Join_Year\t <  2000 INTERSECT SELECT POSITION FROM pilot WHERE Join_Year\t >  2005"}
{"question": "Show the names of pilots and models of aircrafts they have flied with.", "query": "SELECT T3.Pilot_name ,  T2.Model FROM pilot_record AS T1 JOIN aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN pilot AS T3 ON T1.Pilot_ID  =  T3.Pilot_ID"}
{"question": "Show the names of pilots and fleet series of the aircrafts they have flied with in ascending order of the rank of the pilot.", "query": "SELECT T3.Pilot_name ,  T2.Fleet_Series FROM pilot_record AS T1 JOIN aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN pilot AS T3 ON T1.Pilot_ID  =  T3.Pilot_ID ORDER BY T3.Rank"}
{"question": "Show the fleet series of the aircrafts flied by pilots younger than 34", "query": "SELECT T2.Fleet_Series FROM pilot_record AS T1 JOIN aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN pilot AS T3 ON T1.Pilot_ID  =  T3.Pilot_ID WHERE T3.Age  <  34"}
{"question": "Show the names of pilots and the number of records they have.", "query": "SELECT T2.Pilot_name ,  COUNT(*) FROM pilot_record AS T1 JOIN pilot AS T2 ON T1.pilot_ID  =  T2.pilot_ID GROUP BY T2.Pilot_name"}
{"question": "Show names of pilots that have more than one record.", "query": "SELECT T2.Pilot_name ,  COUNT(*) FROM pilot_record AS T1 JOIN pilot AS T2 ON T1.pilot_ID  =  T2.pilot_ID GROUP BY T2.Pilot_name HAVING COUNT(*)  >  1"}
{"question": "List the names of pilots that do not have any record.", "query": "SELECT Pilot_name FROM pilot WHERE Pilot_ID NOT IN (SELECT Pilot_ID FROM pilot_record)"}
{"question": "What document status codes do we have?", "query": "SELECT document_status_code FROM Ref_Document_Status;"}
{"question": "What is the description of document status code 'working'?", "query": "SELECT document_status_description FROM Ref_Document_Status WHERE document_status_code = \"working\";"}
{"question": "What document type codes do we have?", "query": "SELECT document_type_code FROM Ref_Document_Types;"}
{"question": "What is the description of document type 'Paper'?", "query": "SELECT document_type_description FROM Ref_Document_Types WHERE document_type_code = \"Paper\";"}
{"question": "What are the shipping agent names?", "query": "SELECT shipping_agent_name FROM Ref_Shipping_Agents;"}
{"question": "What is the shipping agent code of shipping agent UPS?", "query": "SELECT shipping_agent_code FROM Ref_Shipping_Agents WHERE shipping_agent_name = \"UPS\";"}
{"question": "What are all role codes?", "query": "SELECT role_code FROM ROLES;"}
{"question": "What is the description of role code ED?", "query": "SELECT role_description FROM ROLES WHERE role_code = \"ED\";"}
{"question": "What is the role of the employee named Koby?", "query": "SELECT T1.role_description FROM ROLES AS T1 JOIN Employees AS T2 ON T1.role_code = T2.role_code WHERE T2.employee_name = \"Koby\";"}
{"question": "List all document ids and receipt dates of documents.", "query": "SELECT document_id ,  receipt_date FROM Documents;"}
{"question": "How many employees does each role have? List role description, id and number of employees.", "query": "SELECT T1.role_description ,  T2.role_code ,  count(*) FROM ROLES AS T1 JOIN Employees AS T2 ON T1.role_code = T2.role_code GROUP BY T2.role_code;"}
{"question": "List roles that have more than one employee. List the role description and number of employees.", "query": "SELECT Roles.role_description , count(Employees.employee_id) FROM ROLES JOIN Employees ON Employees.role_code = Roles.role_code GROUP BY Employees.role_code HAVING count(Employees.employee_id)  >  1;"}
{"question": "What is the document status description of the document with id 1?", "query": "SELECT Ref_Document_Status.document_status_description FROM Ref_Document_Status JOIN Documents ON Documents.document_status_code = Ref_Document_Status.document_status_code WHERE Documents.document_id = 1;"}
{"question": "How many documents have the status code done?", "query": "SELECT count(*) FROM Documents WHERE document_status_code = \"done\";"}
{"question": "List the document type code for the document with the id 2.", "query": "SELECT document_type_code FROM Documents WHERE document_id = 2;"}
{"question": "List the document ids for any documents with the status code done and the type code paper.", "query": "SELECT document_id FROM Documents WHERE document_status_code = \"done\" AND document_type_code = \"Paper\";"}
{"question": "What is the name of the shipping agent of the document with id 2?", "query": "SELECT Ref_Shipping_Agents.shipping_agent_name FROM Ref_Shipping_Agents JOIN Documents ON Documents.shipping_agent_code = Ref_Shipping_Agents.shipping_agent_code WHERE Documents.document_id = 2;"}
{"question": "How many documents were shipped by USPS?", "query": "SELECT count(*) FROM Ref_Shipping_Agents JOIN Documents ON Documents.shipping_agent_code = Ref_Shipping_Agents.shipping_agent_code WHERE Ref_Shipping_Agents.shipping_agent_name = \"USPS\";"}
{"question": "Which shipping agent shipped the most documents? List the shipping agent name and the number of documents.", "query": "SELECT Ref_Shipping_Agents.shipping_agent_name , count(Documents.document_id) FROM Ref_Shipping_Agents JOIN Documents ON Documents.shipping_agent_code = Ref_Shipping_Agents.shipping_agent_code GROUP BY Ref_Shipping_Agents.shipping_agent_code ORDER BY count(Documents.document_id) DESC LIMIT 1;"}
{"question": "What is the receipt date of the document with id 3?", "query": "SELECT receipt_date FROM Documents WHERE document_id = 3;"}
{"question": "What address was the document with id 4 mailed to?", "query": "SELECT Addresses.address_details FROM Addresses JOIN Documents_Mailed ON Documents_Mailed.mailed_to_address_id = Addresses.address_id WHERE document_id = 4;"}
{"question": "What is the mail date of the document with id 7?", "query": "SELECT mailing_date FROM Documents_Mailed WHERE document_id = 7;"}
{"question": "List the document ids of documents with the status done and type Paper, which not shipped by the shipping agent named USPS.", "query": "SELECT document_id FROM Documents WHERE document_status_code  =  \"done\" AND document_type_code = \"Paper\" EXCEPT SELECT document_id FROM Documents JOIN Ref_Shipping_Agents ON Documents.shipping_agent_code = Ref_Shipping_Agents.shipping_agent_code WHERE Ref_Shipping_Agents.shipping_agent_name = \"USPS\";"}
{"question": "List document id of documents status is done and document type is Paper and the document is shipped by shipping agent named USPS.", "query": "SELECT document_id FROM Documents WHERE document_status_code  =  \"done\" AND document_type_code = \"Paper\" INTERSECT SELECT document_id FROM Documents JOIN Ref_Shipping_Agents ON Documents.shipping_agent_code = Ref_Shipping_Agents.shipping_agent_code WHERE Ref_Shipping_Agents.shipping_agent_name = \"USPS\";"}
{"question": "What is draft detail of the document with id 7?", "query": "SELECT draft_details FROM Document_Drafts WHERE document_id = 7;"}
{"question": "How many draft copies does the document with id 2 have?", "query": "SELECT count(*) FROM Draft_Copies WHERE document_id = 2;"}
{"question": "Which document has the most draft copies? List its document id and number of draft copies.", "query": "SELECT document_id , count(copy_number) FROM Draft_Copies GROUP BY document_id ORDER BY count(copy_number) DESC LIMIT 1;"}
{"question": "Which documents have more than 1 draft copies? List document id and number of draft copies.", "query": "SELECT document_id , count(*) FROM Draft_Copies GROUP BY document_id HAVING count(*)  >  1;"}
{"question": "List all employees in the circulation history of the document with id 1. List the employee's name.", "query": "SELECT Employees.employee_name FROM Employees JOIN Circulation_History ON Circulation_History.employee_id = Employees.employee_id WHERE Circulation_History.document_id = 1;"}
{"question": "List the employees who have not showed up in any circulation history of documents. List the employee's name.", "query": "SELECT employee_name FROM Employees EXCEPT SELECT Employees.employee_name FROM Employees JOIN Circulation_History ON Circulation_History.employee_id = Employees.employee_id"}
{"question": "Which employee has showed up in most circulation history documents. List the employee's name and the number of drafts and copies.", "query": "SELECT Employees.employee_name , count(*) FROM Employees JOIN Circulation_History ON Circulation_History.employee_id = Employees.employee_id GROUP BY Circulation_History.document_id , Circulation_History.draft_number , Circulation_History.copy_number ORDER BY count(*) DESC LIMIT 1;"}
{"question": "For each document, list the number of employees who have showed up in the circulation history of that document. List the document ids and number of employees.", "query": "SELECT document_id ,  count(DISTINCT employee_id) FROM Circulation_History GROUP BY document_id;"}
{"question": "List all department names ordered by their starting date.", "query": "SELECT dname FROM department ORDER BY mgr_start_date"}
{"question": "find all dependent names who have a spouse relation with some employee.", "query": "SELECT Dependent_name FROM dependent WHERE relationship  =  'Spouse'"}
{"question": "how many female dependents are there?", "query": "SELECT count(*) FROM dependent WHERE sex  =  'F'"}
{"question": "Find the names of departments that are located in Houston.", "query": "SELECT t1.dname FROM department AS t1 JOIN dept_locations AS t2 ON t1.dnumber  =  t2.dnumber WHERE t2.dlocation  =  'Houston'"}
{"question": "Return the first names and last names of employees who earn more than 30000 in salary.", "query": "SELECT fname ,  lname FROM employee WHERE salary  >  30000"}
{"question": "Find the number of employees of each gender whose salary is lower than 50000.", "query": "SELECT count(*) ,  sex FROM employee WHERE salary  <  50000 GROUP BY sex"}
{"question": "list the first and last names, and the addresses of all employees in the ascending order of their birth date.", "query": "SELECT fname ,  lname ,  address FROM employee ORDER BY Bdate"}
{"question": "what are the event details of the services that have the type code 'Marriage'?", "query": "SELECT T1.event_details FROM EVENTS AS T1 JOIN Services AS T2 ON T1.Service_ID  =  T2.Service_ID WHERE T2.Service_Type_Code  =  'Marriage'"}
{"question": "What are the ids and details of events that have more than one participants?", "query": "SELECT T1.event_id ,  T1.event_details FROM EVENTS AS T1 JOIN Participants_in_Events AS T2 ON T1.Event_ID  =  T2.Event_ID GROUP BY T1.Event_ID HAVING count(*)  >  1"}
{"question": "How many events have each participants attended? List the participant id, type and the number.", "query": "SELECT T1.Participant_ID ,  T1.Participant_Type_Code ,  count(*) FROM Participants AS T1 JOIN Participants_in_Events AS T2 ON T1.Participant_ID  =  T2.Participant_ID GROUP BY T1.Participant_ID"}
{"question": "What are all the the participant ids, type code and details?", "query": "SELECT Participant_ID ,  Participant_Type_Code ,  Participant_Details FROM  Participants"}
{"question": "How many participants belong to the type 'Organizer'?", "query": "SELECT count(*) FROM participants WHERE participant_type_code  =  'Organizer'"}
{"question": "List the type of the services in alphabetical order.", "query": "SELECT service_type_code FROM services ORDER BY service_type_code"}
{"question": "List the service id and details for the events.", "query": "SELECT service_id ,  event_details FROM EVENTS"}
{"question": "How many events had participants whose details had the substring 'Dr.'", "query": "SELECT count(*) FROM participants AS T1 JOIN Participants_in_Events AS T2 ON T1.Participant_ID  =  T2.Participant_ID WHERE T1.participant_details LIKE '%Dr.%'"}
{"question": "What is the most common participant type?", "query": "SELECT participant_type_code FROM participants GROUP BY participant_type_code ORDER BY count(*) DESC LIMIT 1"}
{"question": "Which service id and type has the least number of participants?", "query": "SELECT T3.service_id ,  T4.Service_Type_Code FROM participants AS T1 JOIN Participants_in_Events AS T2 ON T1.Participant_ID  =  T2.Participant_ID JOIN EVENTS AS T3 ON T2.Event_ID   =  T3.Event_ID JOIN services AS T4 ON T3.service_id  =  T4.service_id GROUP BY T3.service_id ORDER BY count(*) ASC LIMIT 1"}
{"question": "What is the id of the event with the most participants?", "query": "SELECT Event_ID FROM Participants_in_Events GROUP BY Event_ID ORDER BY count(*) DESC LIMIT 1"}
{"question": "Which events id does not have any participant with detail 'Kenyatta Kuhn'?", "query": "SELECT event_id FROM EVENTS EXCEPT SELECT T1.event_id FROM Participants_in_Events AS T1 JOIN Participants AS T2 ON T1.Participant_ID  =  T2.Participant_ID WHERE Participant_Details  =  'Kenyatta Kuhn'"}
{"question": "Which services type had both successful and failure event details?", "query": "SELECT T1.service_type_code FROM services AS T1 JOIN EVENTS AS T2 ON T1.service_id  =  T2.service_id WHERE T2.event_details  =  'Success' INTERSECT SELECT T1.service_type_code FROM services AS T1 JOIN EVENTS AS T2 ON T1.service_id  =  T2.service_id WHERE T2.event_details  =  'Fail'"}
{"question": "How many events did not have any participants?", "query": "SELECT count(*) FROM EVENTS WHERE event_id NOT IN (SELECT event_id FROM Participants_in_Events)"}
{"question": "What are all the distinct participant ids who attended any events?", "query": "SELECT count(DISTINCT participant_id) FROM participants_in_Events"}
{"question": "What is the name of the race held most recently?", "query": "SELECT name FROM races ORDER BY date DESC LIMIT 1"}
{"question": "What is the name of the race that occurred most recently?", "query": "SELECT name FROM races ORDER BY date DESC LIMIT 1"}
{"question": "What is the name and date of the most recent race?", "query": "SELECT name ,  date FROM races ORDER BY date DESC LIMIT 1"}
{"question": "What is the name and date of the race that occurred most recently?", "query": "SELECT name ,  date FROM races ORDER BY date DESC LIMIT 1"}
{"question": "Find the names of all races held in 2017.", "query": "SELECT name FROM races WHERE YEAR = 2017"}
{"question": "What are the names of all the races that occurred in the year 2017?", "query": "SELECT name FROM races WHERE YEAR = 2017"}
{"question": "Find the distinct names of all races held between 2014 and 2017?", "query": "SELECT DISTINCT name FROM races WHERE YEAR BETWEEN 2014 AND 2017"}
{"question": "What are the unique names of all race held between 2014 and 2017?", "query": "SELECT DISTINCT name FROM races WHERE YEAR BETWEEN 2014 AND 2017"}
{"question": "List the forename and surname of all distinct drivers who once had laptime less than 93000 milliseconds?", "query": "SELECT DISTINCT T1.forename ,  T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid WHERE T2.milliseconds < 93000"}
{"question": "What are the forenames and surnames of all unique drivers who had a lap time of less than 93000 milliseconds?", "query": "SELECT DISTINCT T1.forename ,  T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid WHERE T2.milliseconds < 93000"}
{"question": "Find all the distinct id and nationality of drivers who have had laptime more than 100000 milliseconds?", "query": "SELECT DISTINCT T1.driverid ,  T1.nationality FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid WHERE T2.milliseconds >  100000"}
{"question": "What are the different driver ids and nationalities of all drivers who had a laptime of more than 100000 milliseconds?", "query": "SELECT DISTINCT T1.driverid ,  T1.nationality FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid WHERE T2.milliseconds >  100000"}
{"question": "What are the forename and surname of the driver who has the smallest laptime?", "query": "SELECT T1.forename ,  T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid ORDER BY T2.milliseconds LIMIT 1"}
{"question": "What is the forename and surname of the driver with the shortest laptime?", "query": "SELECT T1.forename ,  T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid ORDER BY T2.milliseconds LIMIT 1"}
{"question": "What is the id and family name of the driver who has the longest laptime?", "query": "SELECT T1.driverid ,  T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid ORDER BY T2.milliseconds DESC LIMIT 1"}
{"question": "What is the id and last name of the driver with the longest laptime?", "query": "SELECT T1.driverid ,  T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid ORDER BY T2.milliseconds DESC LIMIT 1"}
{"question": "What is the id, forname and surname of the driver who had the first position in terms of laptime at least twice?", "query": "SELECT T1.driverid ,  T1.forename ,  T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid WHERE POSITION  =  '1' GROUP BY T1.driverid HAVING count(*)  >=  2"}
{"question": "What is the id, first name, and last name of the driver who was in the first position for laptime at least twice?", "query": "SELECT T1.driverid ,  T1.forename ,  T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid WHERE POSITION  =  '1' GROUP BY T1.driverid HAVING count(*)  >=  2"}
{"question": "How many drivers participated in the race Australian Grand Prix held in 2009?", "query": "SELECT count(*) FROM results AS T1 JOIN races AS T2 ON T1.raceid = T2.raceid WHERE T2.name = \"Australian Grand Prix\" AND YEAR = 2009"}
{"question": "How many drivers were in the Australian Grand Prix held in 2009?", "query": "SELECT count(*) FROM results AS T1 JOIN races AS T2 ON T1.raceid = T2.raceid WHERE T2.name = \"Australian Grand Prix\" AND YEAR = 2009"}
{"question": "How many drivers did not participate in the races held in 2009?", "query": "SELECT count(DISTINCT driverId) FROM results WHERE raceId NOT IN( SELECT raceId FROM races WHERE YEAR != 2009 )"}
{"question": "How many drivers did not race in 2009?", "query": "SELECT count(DISTINCT driverId) FROM results WHERE raceId NOT IN( SELECT raceId FROM races WHERE YEAR != 2009 )"}
{"question": "Give me a list of names and years of races that had any driver whose forename is Lewis?", "query": "SELECT T2.name ,  T2.year FROM results AS T1 JOIN races AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T1.driverid = T3.driverid WHERE T3.forename = \"Lewis\""}
{"question": "What are the names and years of all races that had a driver with the last name Lewis?", "query": "SELECT T2.name ,  T2.year FROM results AS T1 JOIN races AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T1.driverid = T3.driverid WHERE T3.forename = \"Lewis\""}
{"question": "Find the forename and surname of drivers whose nationality is German?", "query": "SELECT forename ,  surname FROM drivers WHERE nationality = \"German\""}
{"question": "What is the first and last name of all the German drivers?", "query": "SELECT forename ,  surname FROM drivers WHERE nationality = \"German\""}
{"question": "Find the id and forenames of drivers who participated both the races with name Australian Grand Prix and the races with name Chinese Grand Prix?", "query": "SELECT T2.driverid ,  T3.forename FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid  =  T3.driverid WHERE T1.name = \"Australian Grand Prix\" INTERSECT SELECT T2.driverid ,  T3.forename FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid  =  T3.driverid WHERE T1.name = \"Chinese Grand Prix\""}
{"question": "What is the id and first name of all the drivers who participated in the Australian Grand Prix and the Chinese Grand Prix?", "query": "SELECT T2.driverid ,  T3.forename FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid  =  T3.driverid WHERE T1.name = \"Australian Grand Prix\" INTERSECT SELECT T2.driverid ,  T3.forename FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid  =  T3.driverid WHERE T1.name = \"Chinese Grand Prix\""}
{"question": "What are the forenames and surnames of drivers who participated in the races named Australian Grand Prix but not the races named Chinese Grand Prix?", "query": "SELECT T3.forename ,  T3.surname FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid = T3.driverid WHERE T1.name = \"Australian Grand Prix\" EXCEPT SELECT T3.forename ,  T3.surname FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid = T3.driverid WHERE T1.name = \"Chinese Grand Prix\""}
{"question": "What are the first and last names of all drivers who participated in the Australian Grand Prix but not the Chinese Grand Prix?", "query": "SELECT T3.forename ,  T3.surname FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid = T3.driverid WHERE T1.name = \"Australian Grand Prix\" EXCEPT SELECT T3.forename ,  T3.surname FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid = T3.driverid WHERE T1.name = \"Chinese Grand Prix\""}
{"question": "Find all the forenames of distinct drivers who was in position 1 as standing and won?", "query": "SELECT DISTINCT T1.forename FROM drivers AS T1 JOIN driverstandings AS T2 ON T1.driverid = T2.driverid WHERE T2.position = 1 AND T2.wins = 1"}
{"question": "What are all the different first names of the drivers who are in position as standing and won?", "query": "SELECT DISTINCT T1.forename FROM drivers AS T1 JOIN driverstandings AS T2 ON T1.driverid = T2.driverid WHERE T2.position = 1 AND T2.wins = 1"}
{"question": "Find all the forenames of distinct drivers who won in position 1 as driver standing and had more than 20 points?", "query": "SELECT DISTINCT T1.forename FROM drivers AS T1 JOIN driverstandings AS T2 ON T1.driverid = T2.driverid WHERE T2.position = 1 AND T2.wins = 1 AND T2.points > 20"}
{"question": "What are the first names of the different drivers who won in position 1 as driver standing and had more than 20 points?", "query": "SELECT DISTINCT T1.forename FROM drivers AS T1 JOIN driverstandings AS T2 ON T1.driverid = T2.driverid WHERE T2.position = 1 AND T2.wins = 1 AND T2.points > 20"}
{"question": "What are the numbers of constructors for different nationalities?", "query": "SELECT count(*) ,  nationality FROM constructors GROUP BY nationality"}
{"question": "For each nationality, how many different constructors are there?", "query": "SELECT count(*) ,  nationality FROM constructors GROUP BY nationality"}
{"question": "What are the numbers of races for each constructor id?", "query": "SELECT count(*) ,  constructorid FROM constructorStandings GROUP BY constructorid"}
{"question": "For each constructor id, how many races are there?", "query": "SELECT count(*) ,  constructorid FROM constructorStandings GROUP BY constructorid"}
{"question": "What are the names of races that were held after 2017 and the circuits were in the country of Spain?", "query": "SELECT T1.name FROM races AS T1 JOIN circuits AS T2 ON T1.circuitid = T2.circuitid WHERE T2.country = \"Spain\" AND T1.year > 2017"}
{"question": "What are the names of the races held after 2017 in Spain?", "query": "SELECT T1.name FROM races AS T1 JOIN circuits AS T2 ON T1.circuitid = T2.circuitid WHERE T2.country = \"Spain\" AND T1.year > 2017"}
{"question": "What are the unique names of races that held after 2000 and the circuits were in Spain?", "query": "SELECT DISTINCT T1.name FROM races AS T1 JOIN circuits AS T2 ON T1.circuitid = T2.circuitid WHERE T2.country = \"Spain\" AND T1.year > 2000"}
{"question": "What are the names of all races held after 2000 in Spain?", "query": "SELECT DISTINCT T1.name FROM races AS T1 JOIN circuits AS T2 ON T1.circuitid = T2.circuitid WHERE T2.country = \"Spain\" AND T1.year > 2000"}
{"question": "Find the distinct driver id and the stop number of all drivers that have a shorter pit stop duration than some drivers in the race with id 841.", "query": "SELECT DISTINCT driverid ,  STOP FROM pitstops WHERE duration  <  (SELECT max(duration) FROM pitstops WHERE raceid  =  841)"}
{"question": "What is the id and stop number for each driver that has a shorter pit stop than the driver in the race with id 841?", "query": "SELECT DISTINCT driverid ,  STOP FROM pitstops WHERE duration  <  (SELECT max(duration) FROM pitstops WHERE raceid  =  841)"}
{"question": "Find the distinct driver id of all drivers that have a longer stop duration than some drivers in the race whose id is 841?", "query": "SELECT DISTINCT driverid ,  STOP FROM pitstops WHERE duration  >  (SELECT min(duration) FROM pitstops WHERE raceid  =  841)"}
{"question": "What are the different ids and stop durations of all the drivers whose stop lasted longer than the driver in the race with the id 841?", "query": "SELECT DISTINCT driverid ,  STOP FROM pitstops WHERE duration  >  (SELECT min(duration) FROM pitstops WHERE raceid  =  841)"}
{"question": "List the forenames of all distinct drivers in alphabetical order?", "query": "SELECT DISTINCT forename FROM drivers ORDER BY forename ASC"}
{"question": "What are the first names of all the different drivers in alphabetical order?", "query": "SELECT DISTINCT forename FROM drivers ORDER BY forename ASC"}
{"question": "List the names of all distinct races in reversed  lexicographic order?", "query": "SELECT DISTINCT name FROM races ORDER BY name DESC"}
{"question": "What are the different names of all the races in reverse alphabetical order?", "query": "SELECT DISTINCT name FROM races ORDER BY name DESC"}
{"question": "What are the names of races held between 2009 and 2011?", "query": "SELECT name FROM races WHERE YEAR BETWEEN 2009 AND 2011"}
{"question": "What are the names of all races held between 2009 and 2011?", "query": "SELECT name FROM races WHERE YEAR BETWEEN 2009 AND 2011"}
{"question": "What are the names of races held after 12:00:00 or before 09:00:00?", "query": "SELECT name FROM races WHERE TIME > \"12:00:00\" OR TIME < \"09:00:00\""}
{"question": "What are the names of all races that occurred after 12:00:00 or before 09:00:00?", "query": "SELECT name FROM races WHERE TIME > \"12:00:00\" OR TIME < \"09:00:00\""}
{"question": "What are the drivers' first, last names and id who had more than 8 pit stops or participated in more than 5 race results?", "query": "SELECT T1.forename ,  T1.surname ,  T1.driverid FROM drivers AS T1 JOIN pitstops AS T2 ON T1.driverid  =  T2.driverid GROUP BY T1.driverid HAVING count(*)  >  8 UNION SELECT T1.forename ,  T1.surname ,  T1.driverid FROM drivers AS T1 JOIN results AS T2 ON T1.driverid  =  T2.driverid GROUP BY T1.driverid HAVING count(*)  >  5"}
{"question": "What are the drivers' first names,last names, and ids for all those that had more than 8 stops or participated in more than 5 races?", "query": "SELECT T1.forename ,  T1.surname ,  T1.driverid FROM drivers AS T1 JOIN pitstops AS T2 ON T1.driverid  =  T2.driverid GROUP BY T1.driverid HAVING count(*)  >  8 UNION SELECT T1.forename ,  T1.surname ,  T1.driverid FROM drivers AS T1 JOIN results AS T2 ON T1.driverid  =  T2.driverid GROUP BY T1.driverid HAVING count(*)  >  5"}
{"question": "What are the drivers' last names and id who had 11 pit stops and participated in more than 5 race results?", "query": "SELECT T1.surname ,  T1.driverid FROM drivers AS T1 JOIN pitstops AS T2 ON T1.driverid  =  T2.driverid GROUP BY T1.driverid HAVING count(*)  =  11 INTERSECT SELECT T1.surname ,  T1.driverid FROM drivers AS T1 JOIN results AS T2 ON T1.driverid  =  T2.driverid GROUP BY T1.driverid HAVING count(*)  >  5"}
{"question": "What are the last names and ids of all drivers who had 11 pit stops and participated in more than 5 races?", "query": "SELECT T1.surname ,  T1.driverid FROM drivers AS T1 JOIN pitstops AS T2 ON T1.driverid  =  T2.driverid GROUP BY T1.driverid HAVING count(*)  =  11 INTERSECT SELECT T1.surname ,  T1.driverid FROM drivers AS T1 JOIN results AS T2 ON T1.driverid  =  T2.driverid GROUP BY T1.driverid HAVING count(*)  >  5"}
{"question": "What is the id and last name of the driver who participated in the most races after 2010?", "query": "SELECT T1.driverid ,  T1.surname FROM drivers AS T1 JOIN results AS T2 ON T1.driverid  =  T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid WHERE T3.year > 2010 GROUP BY T1.driverid ORDER BY count(*) DESC LIMIT 1"}
{"question": "What are the names of circuits that belong to UK or Malaysia?", "query": "SELECT name FROM circuits WHERE country = \"UK\" OR country = \"Malaysia\""}
{"question": "What are the names of all the circuits that are in the UK or Malaysia?", "query": "SELECT name FROM circuits WHERE country = \"UK\" OR country = \"Malaysia\""}
{"question": "Find the id and location of circuits that belong to France or Belgium?", "query": "SELECT circuitid ,  LOCATION FROM circuits WHERE country = \"France\" OR country = \"Belgium\""}
{"question": "What are the ids and locations of all circuits in France or Belgium?", "query": "SELECT circuitid ,  LOCATION FROM circuits WHERE country = \"France\" OR country = \"Belgium\""}
{"question": "Find the names of Japanese constructors that have once earned more than 5 points?", "query": "SELECT T1.name FROM constructors AS T1 JOIN constructorstandings AS T2 ON T1.constructorid = T2.constructorid WHERE T1.nationality = \"Japanese\" AND T2.points > 5"}
{"question": "What are the names of all the Japanese constructors that have earned more than 5 points?", "query": "SELECT T1.name FROM constructors AS T1 JOIN constructorstandings AS T2 ON T1.constructorid = T2.constructorid WHERE T1.nationality = \"Japanese\" AND T2.points > 5"}
{"question": "What is the average fastest lap speed in race named 'Monaco Grand Prix' in 2008 ?", "query": "SELECT avg(T2.fastestlapspeed) FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year = 2008 AND T1.name = \"Monaco Grand Prix\""}
{"question": "What is the average fastest lap speed for the Monaco Grand Prix in 2008?", "query": "SELECT avg(T2.fastestlapspeed) FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year = 2008 AND T1.name = \"Monaco Grand Prix\""}
{"question": "What is the maximum fastest lap speed in race named 'Monaco Grand Prix' in 2008 ?", "query": "SELECT max(T2.fastestlapspeed) FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year = 2008 AND T1.name = \"Monaco Grand Prix\""}
{"question": "What is the maximum fastest lap speed in the Monaco Grand Prix in 2008?", "query": "SELECT max(T2.fastestlapspeed) FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year = 2008 AND T1.name = \"Monaco Grand Prix\""}
{"question": "What are the maximum fastest lap speed in races held after 2004 grouped by race name and ordered by year?", "query": "SELECT max(T2.fastestlapspeed) ,  T1.name ,  T1.year FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year > 2014 GROUP BY T1.name ORDER BY T1.year"}
{"question": "For each race name, What is the maximum fastest lap speed for races after 2004 ordered by year?", "query": "SELECT max(T2.fastestlapspeed) ,  T1.name ,  T1.year FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year > 2014 GROUP BY T1.name ORDER BY T1.year"}
{"question": "What are the average fastest lap speed in races held after 2004 grouped by race name and ordered by year?", "query": "SELECT avg(T2.fastestlapspeed) ,  T1.name ,  T1.year FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year > 2014 GROUP BY T1.name ORDER BY T1.year"}
{"question": "What is the average fastest lap speed for races held after 2004, for each race, ordered by year?", "query": "SELECT avg(T2.fastestlapspeed) ,  T1.name ,  T1.year FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year > 2014 GROUP BY T1.name ORDER BY T1.year"}
{"question": "Find the id, forename and number of races of all drivers who have at least participated in two races?", "query": "SELECT T1.driverid ,  T1.forename ,  count(*) FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid HAVING count(*)  >=  2"}
{"question": "What is the id, forename, and number of races for all drivers that have participated in at least 2 races?", "query": "SELECT T1.driverid ,  T1.forename ,  count(*) FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid HAVING count(*)  >=  2"}
{"question": "Find the driver id and number of races of all drivers who have at most participated in 30 races?", "query": "SELECT T1.driverid ,  count(*) FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid HAVING count(*)  <=  30"}
{"question": "For each id of a driver who participated in at most 30 races, how many races did they participate in?", "query": "SELECT T1.driverid ,  count(*) FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid HAVING count(*)  <=  30"}
{"question": "Find the id and surname of the driver who participated the most number of races?", "query": "SELECT T1.driverid ,  T1.surname FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid ORDER BY count(*) DESC LIMIT 1"}
{"question": "What are the ids and last names of all drivers who participated in the most races?", "query": "SELECT T1.driverid ,  T1.surname FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid ORDER BY count(*) DESC LIMIT 1"}
{"question": "How many technicians are there?", "query": "SELECT count(*) FROM technician"}
{"question": "What is the number of technicians?", "query": "SELECT count(*) FROM technician"}
{"question": "List the names of technicians in ascending order of age.", "query": "SELECT Name FROM technician ORDER BY Age ASC"}
{"question": "What are the names of the technicians by ascending order of age?", "query": "SELECT Name FROM technician ORDER BY Age ASC"}
{"question": "What are the team and starting year of technicians?", "query": "SELECT Team ,  Starting_Year FROM technician"}
{"question": "What is the team and starting year for each technician?", "query": "SELECT Team ,  Starting_Year FROM technician"}
{"question": "List the name of technicians whose team is not \"NYY\".", "query": "SELECT Name FROM technician WHERE Team != \"NYY\""}
{"question": "What is the name of the technician whose team is not 'NYY'?", "query": "SELECT Name FROM technician WHERE Team != \"NYY\""}
{"question": "Show the name of technicians aged either 36 or 37", "query": "SELECT Name FROM technician WHERE Age  =  36 OR Age  =  37"}
{"question": "What are the names of the technicians aged either 36 or 37?", "query": "SELECT Name FROM technician WHERE Age  =  36 OR Age  =  37"}
{"question": "What is the starting year of the oldest technicians?", "query": "SELECT Starting_Year FROM technician ORDER BY Age DESC LIMIT 1"}
{"question": "What is the starting year for the oldest technician?", "query": "SELECT Starting_Year FROM technician ORDER BY Age DESC LIMIT 1"}
{"question": "Show different teams of technicians and the number of technicians in each team.", "query": "SELECT Team ,  COUNT(*) FROM technician GROUP BY Team"}
{"question": "For each team, how many technicians are there?", "query": "SELECT Team ,  COUNT(*) FROM technician GROUP BY Team"}
{"question": "Please show the team that has the most number of technicians.", "query": "SELECT Team FROM technician GROUP BY Team ORDER BY COUNT(*) DESC LIMIT 1"}
{"question": "What are the teams with the most technicians?", "query": "SELECT Team FROM technician GROUP BY Team ORDER BY COUNT(*) DESC LIMIT 1"}
{"question": "Show the team that have at least two technicians.", "query": "SELECT Team FROM technician GROUP BY Team HAVING COUNT(*)  >=  2"}
{"question": "What is the team with at least 2 technicians?", "query": "SELECT Team FROM technician GROUP BY Team HAVING COUNT(*)  >=  2"}
{"question": "Show names of technicians and series of machines they are assigned to repair.", "query": "SELECT T3.Name ,  T2.Machine_series FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id  =  T2.machine_id JOIN technician AS T3 ON T1.technician_ID  =  T3.technician_ID"}
{"question": "What are the names of technicians and the machine series that they repair?", "query": "SELECT T3.Name ,  T2.Machine_series FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id  =  T2.machine_id JOIN technician AS T3 ON T1.technician_ID  =  T3.technician_ID"}
{"question": "Show names of technicians in ascending order of quality rank of the machine they are assigned.", "query": "SELECT T3.Name FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id  =  T2.machine_id JOIN technician AS T3 ON T1.technician_ID  =  T3.technician_ID ORDER BY T2.quality_rank"}
{"question": "What are the names of the technicians by ascending order of quality rank for the machine they are assigned?", "query": "SELECT T3.Name FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id  =  T2.machine_id JOIN technician AS T3 ON T1.technician_ID  =  T3.technician_ID ORDER BY T2.quality_rank"}
{"question": "Show names of technicians who are assigned to repair machines with value point more than 70.", "query": "SELECT T3.Name FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id  =  T2.machine_id JOIN technician AS T3 ON T1.technician_ID  =  T3.technician_ID WHERE T2.value_points  >  70"}
{"question": "What are the names of the technicians that are assigned to repair machines with more point values than 70?", "query": "SELECT T3.Name FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id  =  T2.machine_id JOIN technician AS T3 ON T1.technician_ID  =  T3.technician_ID WHERE T2.value_points  >  70"}
{"question": "Show names of technicians and the number of machines they are assigned to repair.", "query": "SELECT T2.Name ,  COUNT(*) FROM repair_assignment AS T1 JOIN technician AS T2 ON T1.technician_ID  =  T2.technician_ID GROUP BY T2.Name"}
{"question": "What are the names of the technicians  and how many machines are they assigned to repair?", "query": "SELECT T2.Name ,  COUNT(*) FROM repair_assignment AS T1 JOIN technician AS T2 ON T1.technician_ID  =  T2.technician_ID GROUP BY T2.Name"}
{"question": "List the names of technicians who have not been assigned to repair machines.", "query": "SELECT Name FROM technician WHERE technician_id NOT IN (SELECT technician_id FROM repair_assignment)"}
{"question": "What are the names of the technicians that have not been assigned to repair machines?", "query": "SELECT Name FROM technician WHERE technician_id NOT IN (SELECT technician_id FROM repair_assignment)"}
{"question": "Show the starting years shared by technicians from team \"CLE\" and \"CWS\".", "query": "SELECT Starting_Year FROM technician WHERE Team  =  \"CLE\" INTERSECT SELECT Starting_Year FROM technician WHERE Team  =  \"CWS\""}
{"question": "What are the starting years shared by the technicians from the team \"CLE\" or \"CWS\"?", "query": "SELECT Starting_Year FROM technician WHERE Team  =  \"CLE\" INTERSECT SELECT Starting_Year FROM technician WHERE Team  =  \"CWS\""}
{"question": "How many entrepreneurs are there?", "query": "SELECT count(*) FROM entrepreneur"}
{"question": "Count the number of entrepreneurs.", "query": "SELECT count(*) FROM entrepreneur"}
{"question": "List the companies of entrepreneurs in descending order of money requested.", "query": "SELECT Company FROM entrepreneur ORDER BY Money_Requested DESC"}
{"question": "What are the companies of entrepreneurs, ordered descending by amount of money requested?", "query": "SELECT Company FROM entrepreneur ORDER BY Money_Requested DESC"}
{"question": "List the companies and the investors of entrepreneurs.", "query": "SELECT Company ,  Investor FROM entrepreneur"}
{"question": "What are the companies and investors that correspond to each entrepreneur?", "query": "SELECT Company ,  Investor FROM entrepreneur"}
{"question": "What is the average money requested by all entrepreneurs?", "query": "SELECT avg(Money_Requested) FROM entrepreneur"}
{"question": "Return the average money requested across all entrepreneurs.", "query": "SELECT avg(Money_Requested) FROM entrepreneur"}
{"question": "What are the names of people in ascending order of weight?", "query": "SELECT Name FROM People ORDER BY Weight ASC"}
{"question": "Return the names of people, ordered by weight ascending.", "query": "SELECT Name FROM People ORDER BY Weight ASC"}
{"question": "What are the names of entrepreneurs?", "query": "SELECT T2.Name FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID"}
{"question": "Return the names of entrepreneurs.", "query": "SELECT T2.Name FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID"}
{"question": "What are the names of entrepreneurs whose investor is not \"Rachel Elnaugh\"?", "query": "SELECT T2.Name FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Investor != \"Rachel Elnaugh\""}
{"question": "Return the names of entrepreneurs do no not have the investor Rachel Elnaugh.", "query": "SELECT T2.Name FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Investor != \"Rachel Elnaugh\""}
{"question": "What is the weight of the shortest person?", "query": "SELECT Weight FROM people ORDER BY Height ASC LIMIT 1"}
{"question": "Return the weight of the shortest person.", "query": "SELECT Weight FROM people ORDER BY Height ASC LIMIT 1"}
{"question": "What is the name of the entrepreneur with the greatest weight?", "query": "SELECT T2.Name FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Weight DESC LIMIT 1"}
{"question": "Return the name of the heaviest entrepreneur.", "query": "SELECT T2.Name FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Weight DESC LIMIT 1"}
{"question": "What is the total money requested by entrepreneurs with height more than 1.85?", "query": "SELECT sum(T1.Money_Requested) FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Height  >  1.85"}
{"question": "Give the total money requested by entrepreneurs who are taller than 1.85.", "query": "SELECT sum(T1.Money_Requested) FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Height  >  1.85"}
{"question": "What are the dates of birth of entrepreneurs with investor \"Simon Woodroffe\" or \"Peter Jones\"?", "query": "SELECT T2.Date_of_Birth FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Investor  =  \"Simon Woodroffe\" OR T1.Investor  =  \"Peter Jones\""}
{"question": "Return the dates of birth for entrepreneurs who have either the investor Simon Woodroffe or Peter Jones.", "query": "SELECT T2.Date_of_Birth FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Investor  =  \"Simon Woodroffe\" OR T1.Investor  =  \"Peter Jones\""}
{"question": "What are the weights of entrepreneurs in descending order of money requested?", "query": "SELECT T2.Weight FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Money_Requested DESC"}
{"question": "Return the weights of entrepreneurs, ordered descending by amount of money requested.", "query": "SELECT T2.Weight FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Money_Requested DESC"}
{"question": "What are the investors of entrepreneurs and the corresponding number of entrepreneurs invested by each investor?", "query": "SELECT Investor ,  COUNT(*) FROM entrepreneur GROUP BY Investor"}
{"question": "How many entrepreneurs correspond to each investor?", "query": "SELECT Investor ,  COUNT(*) FROM entrepreneur GROUP BY Investor"}
{"question": "What is the investor that has invested in the most number of entrepreneurs?", "query": "SELECT Investor FROM entrepreneur GROUP BY Investor ORDER BY COUNT(*) DESC LIMIT 1"}
{"question": "Return the investor who have invested in the greatest number of entrepreneurs.", "query": "SELECT Investor FROM entrepreneur GROUP BY Investor ORDER BY COUNT(*) DESC LIMIT 1"}
{"question": "What are the investors that have invested in at least two entrepreneurs?", "query": "SELECT Investor FROM entrepreneur GROUP BY Investor HAVING COUNT(*)  >=  2"}
{"question": "Return the investors who have invested in two or more entrepreneurs.", "query": "SELECT Investor FROM entrepreneur GROUP BY Investor HAVING COUNT(*)  >=  2"}
{"question": "List the names of entrepreneurs and their companies in descending order of money requested?", "query": "SELECT T2.Name ,  T1.Company FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Money_Requested"}
{"question": "What are the names of entrepreneurs and their corresponding investors, ordered descending by the amount of money requested?", "query": "SELECT T2.Name ,  T1.Company FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Money_Requested"}
{"question": "List the names of people that are not entrepreneurs.", "query": "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM entrepreneur)"}
{"question": "What are the names of people who are not entrepreneurs?", "query": "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM entrepreneur)"}
{"question": "Show the investors shared by entrepreneurs that requested more than 140000 and entrepreneurs that requested less than 120000.", "query": "SELECT Investor FROM entrepreneur WHERE Money_Requested  >  140000 INTERSECT SELECT Investor FROM entrepreneur WHERE Money_Requested  <  120000"}
{"question": "What are the investors who have invested in both entrepreneurs who requested more than 140000 and entrepreneurs who requested less than 120000?", "query": "SELECT Investor FROM entrepreneur WHERE Money_Requested  >  140000 INTERSECT SELECT Investor FROM entrepreneur WHERE Money_Requested  <  120000"}
{"question": "How many distinct companies are there?", "query": "SELECT count(DISTINCT Company) FROM entrepreneur"}
{"question": "Count the number of different companies.", "query": "SELECT count(DISTINCT Company) FROM entrepreneur"}
{"question": "Show the company of the tallest entrepreneur.", "query": "SELECT T1.Company FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Height DESC LIMIT 1"}
{"question": "Which company was started by the entrepreneur with the greatest height?", "query": "SELECT T1.Company FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Height DESC LIMIT 1"}
{"question": "How many perpetrators are there?", "query": "SELECT count(*) FROM perpetrator"}
{"question": "List the date of perpetrators in descending order of the number of people killed.", "query": "SELECT Date FROM perpetrator ORDER BY Killed DESC"}
{"question": "List the number of people injured by perpetrators in ascending order.", "query": "SELECT Injured FROM perpetrator ORDER BY Injured ASC"}
{"question": "What is the average number of people injured by all perpetrators?", "query": "SELECT avg(Injured) FROM perpetrator"}
{"question": "What is the location of the perpetrator with the largest kills.", "query": "SELECT LOCATION FROM perpetrator ORDER BY Killed DESC LIMIT 1"}
{"question": "What are the names of people in ascending order of height?", "query": "SELECT Name FROM People ORDER BY Height ASC"}
{"question": "What are the names of perpetrators?", "query": "SELECT T1.Name FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID  =  T2.People_ID"}
{"question": "What are the names of perpetrators whose country is not \"China\"?", "query": "SELECT T1.Name FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Country != \"China\""}
{"question": "What is the name of the perpetrator with the biggest weight.", "query": "SELECT T1.Name FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Weight DESC LIMIT 1"}
{"question": "What is the total kills of the perpetrators with height more than 1.84.", "query": "SELECT sum(T2.Killed) FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  1.84"}
{"question": "What are the names of perpetrators in country \"China\" or \"Japan\"?", "query": "SELECT T1.Name FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Country  =  \"China\" OR T2.Country  =  \"Japan\""}
{"question": "What are the heights of perpetrators in descending order of the number of people they injured?", "query": "SELECT T1.Height FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Injured DESC"}
{"question": "What are the countries of perpetrators? Show each country and the corresponding number of perpetrators there.", "query": "SELECT Country ,  COUNT(*) FROM perpetrator GROUP BY Country"}
{"question": "What is the country that has the most perpetrators?", "query": "SELECT Country ,  COUNT(*) FROM perpetrator GROUP BY Country ORDER BY COUNT(*) DESC LIMIT 1"}
{"question": "What are the countries that have at least two perpetrators?", "query": "SELECT Country ,  COUNT(*) FROM perpetrator GROUP BY Country HAVING COUNT(*)  >=  2"}
{"question": "List the names of perpetrators in descending order of the year.", "query": "SELECT T1.Name FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Year DESC"}
{"question": "List the names of people that are not perpetrators.", "query": "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM perpetrator)"}
{"question": "Show the countries that have both perpetrators with injures more than 50 and perpetrators with injures smaller than 20.", "query": "SELECT Country FROM perpetrator WHERE Injured  >  50 INTERSECT SELECT Country FROM perpetrator WHERE Injured  <  20"}
{"question": "How many distinct locations of perpetrators are there?", "query": "SELECT count(DISTINCT LOCATION) FROM perpetrator"}
{"question": "Show the date of the tallest perpetrator.", "query": "SELECT T2.Date FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1"}
{"question": "In which year did the most recent crime happen?", "query": "SELECT max(YEAR) FROM perpetrator;"}
{"question": "Report the name of all campuses in Los Angeles county.", "query": "SELECT campus FROM campuses WHERE county  =  \"Los Angeles\""}
{"question": "What campuses are located in the county of Los Angeles?", "query": "SELECT campus FROM campuses WHERE county  =  \"Los Angeles\""}
{"question": "What are the names of all campuses located at Chico?", "query": "SELECT campus FROM campuses WHERE LOCATION  =  \"Chico\""}
{"question": "What campuses are located in Chico?", "query": "SELECT campus FROM campuses WHERE LOCATION  =  \"Chico\""}
{"question": "Find all the campuses opened in 1958.", "query": "SELECT campus FROM campuses WHERE YEAR  =  1958"}
{"question": "What are the campuses that opened in 1958?", "query": "SELECT campus FROM campuses WHERE YEAR  =  1958"}
{"question": "Find the name of the campuses opened before 1800.", "query": "SELECT campus FROM campuses WHERE YEAR  <  1800"}
{"question": "What campuses opened before 1800?", "query": "SELECT campus FROM campuses WHERE YEAR  <  1800"}
{"question": "Which campus was opened between 1935 and 1939?", "query": "SELECT campus FROM campuses WHERE YEAR  >=  1935 AND YEAR  <=  1939"}
{"question": "What campuses opened between 1935 and 1939?", "query": "SELECT campus FROM campuses WHERE YEAR  >=  1935 AND YEAR  <=  1939"}
{"question": "Find the name of the campuses that is in Northridge, Los Angeles or in San Francisco, San Francisco.", "query": "SELECT campus FROM campuses WHERE LOCATION  =  \"Northridge\" AND county  =  \"Los Angeles\" UNION SELECT campus FROM campuses WHERE LOCATION  =  \"San Francisco\" AND county  =  \"San Francisco\""}
{"question": "What campuses are located in Northridge, Los Angeles or in San Francisco, San Francisco?", "query": "SELECT campus FROM campuses WHERE LOCATION  =  \"Northridge\" AND county  =  \"Los Angeles\" UNION SELECT campus FROM campuses WHERE LOCATION  =  \"San Francisco\" AND county  =  \"San Francisco\""}
{"question": "What is the campus fee of \"San Jose State University\" in year 1996?", "query": "SELECT campusfee FROM campuses AS T1 JOIN csu_fees AS T2 ON T1.id  =  t2.campus WHERE t1.campus  =  \"San Jose State University\" AND T2.year  =  1996"}
{"question": "What is the campus fee for San Jose State University in 1996?", "query": "SELECT campusfee FROM campuses AS T1 JOIN csu_fees AS T2 ON T1.id  =  t2.campus WHERE t1.campus  =  \"San Jose State University\" AND T2.year  =  1996"}
{"question": "What is the campus fee of \"San Francisco State University\" in year 1996?", "query": "SELECT campusfee FROM campuses AS T1 JOIN csu_fees AS T2 ON T1.id  =  t2.campus WHERE t1.campus  =  \"San Francisco State University\" AND T2.year  =  1996"}
{"question": "What is the campus fee for San Francisco State University in 1996?", "query": "SELECT campusfee FROM campuses AS T1 JOIN csu_fees AS T2 ON T1.id  =  t2.campus WHERE t1.campus  =  \"San Francisco State University\" AND T2.year  =  1996"}
{"question": "Find the count of universities whose campus fee is greater than the average campus fee.", "query": "SELECT count(*) FROM csu_fees WHERE campusfee  >  (SELECT avg(campusfee) FROM csu_fees)"}
{"question": "How many universities have a campus fee higher than average?", "query": "SELECT count(*) FROM csu_fees WHERE campusfee  >  (SELECT avg(campusfee) FROM csu_fees)"}
{"question": "How many universities have a campus fee greater than the average?", "query": "SELECT count(*) FROM csu_fees WHERE campusfee  >  (SELECT avg(campusfee) FROM csu_fees)"}
{"question": "Which university is in Los Angeles county and opened after 1950?", "query": "SELECT campus FROM campuses WHERE county  =  \"Los Angeles\" AND YEAR  >  1950"}
{"question": "What campuses are located in Los Angeles county and opened after 1950?", "query": "SELECT campus FROM campuses WHERE county  =  \"Los Angeles\" AND YEAR  >  1950"}
{"question": "Which year has the most degrees conferred?", "query": "SELECT YEAR FROM degrees GROUP BY YEAR ORDER BY sum(degrees) DESC LIMIT 1"}
{"question": "In what year was the most degrees conferred?", "query": "SELECT YEAR FROM degrees GROUP BY YEAR ORDER BY sum(degrees) DESC LIMIT 1"}
{"question": "Which campus has the most degrees conferred in all times?", "query": "SELECT campus FROM degrees GROUP BY campus ORDER BY sum(degrees) DESC LIMIT 1"}
{"question": "What campus has the most degrees  conferrred over its entire existence?", "query": "SELECT campus FROM degrees GROUP BY campus ORDER BY sum(degrees) DESC LIMIT 1"}
{"question": "Which campus has the most faculties in year 2003?", "query": "SELECT T1.campus FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  T2.campus WHERE T2.year  =  2003 ORDER BY T2.faculty DESC LIMIT 1"}
{"question": "What campus has the most faculties in 2003?", "query": "SELECT T1.campus FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  T2.campus WHERE T2.year  =  2003 ORDER BY T2.faculty DESC LIMIT 1"}
{"question": "Find the average fee on a CSU campus in 1996", "query": "SELECT avg(campusfee) FROM csu_fees WHERE YEAR  =  1996"}
{"question": "What is the average fee for a CSU campus in the year of 1996?", "query": "SELECT avg(campusfee) FROM csu_fees WHERE YEAR  =  1996"}
{"question": "What is the average fee on a CSU campus in 2005?", "query": "SELECT avg(campusfee) FROM csu_fees WHERE YEAR  =  2005"}
{"question": "What is the average fee for a CSU campus in the year of 2005?", "query": "SELECT avg(campusfee) FROM csu_fees WHERE YEAR  =  2005"}
{"question": "report the total number of degrees granted between 1998 and 2002.", "query": "SELECT T1.campus ,  sum(T2.degrees) FROM campuses AS T1 JOIN degrees AS T2 ON T1.id  =  T2.campus WHERE T2.year  >=  1998 AND T2.year  <=  2002 GROUP BY T1.campus"}
{"question": "how many degrees were conferred between 1998 and 2002?", "query": "SELECT T1.campus ,  sum(T2.degrees) FROM campuses AS T1 JOIN degrees AS T2 ON T1.id  =  T2.campus WHERE T2.year  >=  1998 AND T2.year  <=  2002 GROUP BY T1.campus"}
{"question": "For each Orange county campus, report the number of degrees granted after 2000.", "query": "SELECT T1.campus ,  sum(T2.degrees) FROM campuses AS T1 JOIN degrees AS T2 ON T1.id  =  T2.campus WHERE T1.county  =  \"Orange\" AND T2.year  >=  2000 GROUP BY T1.campus"}
{"question": "What is the total number of degrees granted after 2000 for each Orange county campus?", "query": "SELECT T1.campus ,  sum(T2.degrees) FROM campuses AS T1 JOIN degrees AS T2 ON T1.id  =  T2.campus WHERE T1.county  =  \"Orange\" AND T2.year  >=  2000 GROUP BY T1.campus"}
{"question": "Find the names of the campus which has more faculties in 2002 than every campus in Orange county.", "query": "SELECT T1.campus FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  T2.campus WHERE T2.year  =  2002 AND faculty  >  (SELECT max(faculty) FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  T2.campus WHERE T2.year  =  2002 AND T1.county  =  \"Orange\")"}
{"question": "What are the names of the campus that have more faculties in 2002 than the maximum number in Orange county?", "query": "SELECT T1.campus FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  T2.campus WHERE T2.year  =  2002 AND faculty  >  (SELECT max(faculty) FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  T2.campus WHERE T2.year  =  2002 AND T1.county  =  \"Orange\")"}
{"question": "What campus had more than 400 total enrollment but more than 200 full time enrollment in year 1956?", "query": "SELECT T1.campus FROM campuses AS t1 JOIN enrollments AS t2 ON t1.id  =  t2.campus WHERE t2.year  =  1956 AND totalenrollment_ay  >  400 AND FTE_AY  >  200"}
{"question": "What campus started in year 1956, has more than 200 full time students, and more than 400 students enrolled?", "query": "SELECT T1.campus FROM campuses AS t1 JOIN enrollments AS t2 ON t1.id  =  t2.campus WHERE t2.year  =  1956 AND totalenrollment_ay  >  400 AND FTE_AY  >  200"}
{"question": "How many campuses are there in Los Angeles county?", "query": "SELECT count(*) FROM campuses WHERE county  =  \"Los Angeles\""}
{"question": "How many campuses exist are in the county of LA?", "query": "SELECT count(*) FROM campuses WHERE county  =  \"Los Angeles\""}
{"question": "List the campuses in Los Angeles county.", "query": "SELECT campus FROM campuses WHERE county  =  \"Los Angeles\""}
{"question": "What campuses are in Los Angeles county?", "query": "SELECT campus FROM campuses WHERE county  =  \"Los Angeles\""}
{"question": "How many degrees were conferred in \"San Jose State University\" in 2000?", "query": "SELECT degrees FROM campuses AS T1 JOIN degrees AS T2 ON t1.id  =  t2.campus WHERE t1.campus  =  \"San Jose State University\" AND t2.year  =  2000"}
{"question": "How many degrees were conferred at San Jose State University in 2000?", "query": "SELECT degrees FROM campuses AS T1 JOIN degrees AS T2 ON t1.id  =  t2.campus WHERE t1.campus  =  \"San Jose State University\" AND t2.year  =  2000"}
{"question": "What are the degrees conferred in \"San Francisco State University\" in 2001.", "query": "SELECT degrees FROM campuses AS T1 JOIN degrees AS T2 ON t1.id  =  t2.campus WHERE t1.campus  =  \"San Francisco State University\" AND t2.year  =  2001"}
{"question": "What degrees were conferred in San Francisco State University in the year 2001?", "query": "SELECT degrees FROM campuses AS T1 JOIN degrees AS T2 ON t1.id  =  t2.campus WHERE t1.campus  =  \"San Francisco State University\" AND t2.year  =  2001"}
{"question": "How many faculty is there in total in the year of 2002?", "query": "SELECT sum(faculty) FROM faculty WHERE YEAR  =  2002"}
{"question": "How many faculty, in total, are there in the year 2002?", "query": "SELECT sum(faculty) FROM faculty WHERE YEAR  =  2002"}
{"question": "What is the number of faculty lines in campus \"Long Beach State University\" in 2002?", "query": "SELECT faculty FROM faculty AS T1 JOIN campuses AS T2 ON T1.campus  =  T2.id WHERE T1.year  =  2002 AND T2.campus  =  \"Long Beach State University\""}
{"question": "What is the number of faculty at Long Beach State University in 2002?", "query": "SELECT faculty FROM faculty AS T1 JOIN campuses AS T2 ON T1.campus  =  T2.id WHERE T1.year  =  2002 AND T2.campus  =  \"Long Beach State University\""}
{"question": "How many faculty lines are there in \"San Francisco State University\" in year 2004?", "query": "SELECT faculty FROM faculty AS T1 JOIN campuses AS T2 ON T1.campus  =  T2.id WHERE T1.year  =  2004 AND T2.campus  =  \"San Francisco State University\""}
{"question": "How many faculty lines are there at San Francisco State University in 2004?", "query": "SELECT faculty FROM faculty AS T1 JOIN campuses AS T2 ON T1.campus  =  T2.id WHERE T1.year  =  2004 AND T2.campus  =  \"San Francisco State University\""}
{"question": "List the campus that have between 600 and 1000 faculty lines in year 2004.", "query": "SELECT T1.campus FROM campuses AS t1 JOIN faculty AS t2 ON t1.id  =  t2.campus WHERE t2.faculty  >=  600 AND t2.faculty  <=  1000 AND T1.year  =  2004"}
{"question": "What are the campuses that had between 600 and 1000 faculty members in 2004?", "query": "SELECT T1.campus FROM campuses AS t1 JOIN faculty AS t2 ON t1.id  =  t2.campus WHERE t2.faculty  >=  600 AND t2.faculty  <=  1000 AND T1.year  =  2004"}
{"question": "How many faculty lines are there in the university that conferred the most number of degrees in year 2002?", "query": "SELECT T2.faculty FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  t2.campus JOIN degrees AS T3 ON T1.id  =  t3.campus AND t2.year  =  t3.year WHERE t2.year  =  2002 ORDER BY t3.degrees DESC LIMIT 1"}
{"question": "How many faculty members did the university that conferred the most degrees in 2002 have?", "query": "SELECT T2.faculty FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  t2.campus JOIN degrees AS T3 ON T1.id  =  t3.campus AND t2.year  =  t3.year WHERE t2.year  =  2002 ORDER BY t3.degrees DESC LIMIT 1"}
{"question": "How many faculty lines are there in the university that conferred the least number of degrees in year 2001?", "query": "SELECT T2.faculty FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  t2.campus JOIN degrees AS T3 ON T1.id  =  t3.campus AND t2.year  =  t3.year WHERE t2.year  =  2001 ORDER BY t3.degrees LIMIT 1"}
{"question": "How many faculty members are at the university that gave the least number of degrees in 2001?", "query": "SELECT T2.faculty FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  t2.campus JOIN degrees AS T3 ON T1.id  =  t3.campus AND t2.year  =  t3.year WHERE t2.year  =  2001 ORDER BY t3.degrees LIMIT 1"}
{"question": "How many undergraduates are there in \"San Jose State University\" in year 2004?", "query": "SELECT sum(t1.undergraduate) FROM discipline_enrollments AS t1 JOIN campuses AS t2 ON t1.campus  =  t2.id WHERE t1.year  =  2004 AND t2.campus  =  \"San Jose State University\""}
{"question": "How many undergraduates are there at San Jose State", "query": "SELECT sum(t1.undergraduate) FROM discipline_enrollments AS t1 JOIN campuses AS t2 ON t1.campus  =  t2.id WHERE t1.year  =  2004 AND t2.campus  =  \"San Jose State University\""}
{"question": "What is the number of graduates in \"San Francisco State University\" in year 2004?", "query": "SELECT sum(t1.graduate) FROM discipline_enrollments AS t1 JOIN campuses AS t2 ON t1.campus  =  t2.id WHERE t1.year  =  2004 AND t2.campus  =  \"San Francisco State University\""}
{"question": "How many people graduated from San Francisco State University in 2004?", "query": "SELECT sum(t1.graduate) FROM discipline_enrollments AS t1 JOIN campuses AS t2 ON t1.campus  =  t2.id WHERE t1.year  =  2004 AND t2.campus  =  \"San Francisco State University\""}
{"question": "What is the campus fee of \"San Francisco State University\" in year 2000?", "query": "SELECT t1.campusfee FROM csu_fees AS t1 JOIN campuses AS t2 ON t1.campus  =  t2.id WHERE t2.campus  =  \"San Francisco State University\" AND t1.year  =  2000"}
{"question": "In the year 2000, what is the campus fee for San Francisco State University?", "query": "SELECT t1.campusfee FROM csu_fees AS t1 JOIN campuses AS t2 ON t1.campus  =  t2.id WHERE t2.campus  =  \"San Francisco State University\" AND t1.year  =  2000"}
{"question": "Find the campus fee of \"San Jose State University\" in year 2000.", "query": "SELECT t1.campusfee FROM csu_fees AS t1 JOIN campuses AS t2 ON t1.campus  =  t2.id WHERE t2.campus  =  \"San Jose State University\" AND t1.year  =  2000"}
{"question": "What is the campus fee in the year 2000 for San Jose State University?", "query": "SELECT t1.campusfee FROM csu_fees AS t1 JOIN campuses AS t2 ON t1.campus  =  t2.id WHERE t2.campus  =  \"San Jose State University\" AND t1.year  =  2000"}
{"question": "How many CSU campuses are there?", "query": "SELECT count(*) FROM campuses"}
{"question": "What is the total number of campuses?", "query": "SELECT count(*) FROM campuses"}
{"question": "How many candidates are there?", "query": "SELECT count(*) FROM candidate"}
{"question": "Count the number of candidates.", "query": "SELECT count(*) FROM candidate"}
{"question": "Which poll resource provided the most number of candidate information?", "query": "SELECT poll_source FROM candidate GROUP BY poll_source ORDER BY count(*) DESC LIMIT 1"}
{"question": "Return the poll resource associated with the most candidates.", "query": "SELECT poll_source FROM candidate GROUP BY poll_source ORDER BY count(*) DESC LIMIT 1"}
{"question": "what are the top 3 highest support rates?", "query": "SELECT support_rate FROM candidate ORDER BY support_rate DESC LIMIT 3"}
{"question": "Return the top 3 greatest support rates.", "query": "SELECT support_rate FROM candidate ORDER BY support_rate DESC LIMIT 3"}
{"question": "Find the id of the candidate who got the lowest oppose rate.", "query": "SELECT Candidate_ID FROM candidate ORDER BY oppose_rate LIMIT 1"}
{"question": "What is the id of the candidate with the lowest oppose rate?", "query": "SELECT Candidate_ID FROM candidate ORDER BY oppose_rate LIMIT 1"}
{"question": "Please list support, consider, and oppose rates for each candidate in ascending order by unsure rate.", "query": "SELECT Support_rate ,  Consider_rate ,  Oppose_rate FROM candidate ORDER BY unsure_rate"}
{"question": "What are the support, consider, and oppose rates of each candidate, ordered ascending by their unsure rate?", "query": "SELECT Support_rate ,  Consider_rate ,  Oppose_rate FROM candidate ORDER BY unsure_rate"}
{"question": "which poll source does the highest oppose rate come from?", "query": "SELECT poll_source FROM candidate ORDER BY oppose_rate DESC LIMIT 1"}
{"question": "Return the poll source corresponding to the candidate who has the oppose rate.", "query": "SELECT poll_source FROM candidate ORDER BY oppose_rate DESC LIMIT 1"}
{"question": "List all people names in the order of their date of birth from old to young.", "query": "SELECT name FROM people ORDER BY date_of_birth"}
{"question": "What are the names of all people, ordered by their date of birth?", "query": "SELECT name FROM people ORDER BY date_of_birth"}
{"question": "Find the average height and weight for all males (sex is M).", "query": "SELECT avg(height) ,  avg(weight) FROM people WHERE sex  =  'M'"}
{"question": "What are the average height and weight across males (sex is M)?", "query": "SELECT avg(height) ,  avg(weight) FROM people WHERE sex  =  'M'"}
{"question": "find the names of people who are taller than 200 or lower than 190.", "query": "SELECT name FROM people WHERE height  >  200 OR height  <  190"}
{"question": "What are the names of people who have a height greater than 200 or less than 190?", "query": "SELECT name FROM people WHERE height  >  200 OR height  <  190"}
{"question": "Find the average and minimum weight for each gender.", "query": "SELECT avg(weight) ,  min(weight) ,  sex FROM people GROUP BY sex"}
{"question": "What are the average and minimum weights for people of each sex?", "query": "SELECT avg(weight) ,  min(weight) ,  sex FROM people GROUP BY sex"}
{"question": "Find the name and gender of the candidate who got the highest support rate.", "query": "SELECT t1.name ,  t1.sex FROM people AS t1 JOIN candidate AS t2 ON t1.people_id  =  t2.people_id ORDER BY t2.support_rate DESC LIMIT 1"}
{"question": "What is the name and sex of the candidate with the highest support rate?", "query": "SELECT t1.name ,  t1.sex FROM people AS t1 JOIN candidate AS t2 ON t1.people_id  =  t2.people_id ORDER BY t2.support_rate DESC LIMIT 1"}
{"question": "Find the name of the candidates whose oppose percentage is the lowest for each sex.", "query": "SELECT t1.name ,  t1.sex ,  min(oppose_rate) FROM people AS t1 JOIN candidate AS t2 ON t1.people_id  =  t2.people_id GROUP BY t1.sex"}
{"question": "For each sex, what is the name and sex of the candidate with the oppose rate for their sex?", "query": "SELECT t1.name ,  t1.sex ,  min(oppose_rate) FROM people AS t1 JOIN candidate AS t2 ON t1.people_id  =  t2.people_id GROUP BY t1.sex"}
{"question": "which gender got the highest average uncertain ratio.", "query": "SELECT t1.sex FROM people AS t1 JOIN candidate AS t2 ON t1.people_id  =  t2.people_id GROUP BY t1.sex ORDER BY avg(t2.unsure_rate) DESC LIMIT 1"}
{"question": "What is the sex of the candidate who had the highest unsure rate?", "query": "SELECT t1.sex FROM people AS t1 JOIN candidate AS t2 ON t1.people_id  =  t2.people_id GROUP BY t1.sex ORDER BY avg(t2.unsure_rate) DESC LIMIT 1"}
{"question": "what are the names of people who did not participate in the candidate election.", "query": "SELECT name FROM people WHERE people_id NOT IN (SELECT people_id FROM candidate)"}
{"question": "Give the names of people who did not participate in the candidate election.", "query": "SELECT name FROM people WHERE people_id NOT IN (SELECT people_id FROM candidate)"}
{"question": "Find the names of the candidates whose support percentage is lower than their oppose rate.", "query": "SELECT t1.name FROM people AS t1 JOIN candidate AS t2 ON t1.people_id  =  t2.people_id WHERE t2.support_rate  <  t2.oppose_rate"}
{"question": "What are the names of candidates who have a lower support rate than oppose rate?", "query": "SELECT t1.name FROM people AS t1 JOIN candidate AS t2 ON t1.people_id  =  t2.people_id WHERE t2.support_rate  <  t2.oppose_rate"}
{"question": "how many people are there whose weight is higher than 85 for each gender?", "query": "SELECT count(*) ,  sex FROM people WHERE weight  >  85 GROUP BY sex"}
{"question": "Count the number of people of each sex who have a weight higher than 85.", "query": "SELECT count(*) ,  sex FROM people WHERE weight  >  85 GROUP BY sex"}
{"question": "find the highest support percentage, lowest consider rate and oppose rate of all candidates.", "query": "SELECT max(support_rate) ,  min(consider_rate) ,  min(oppose_rate) FROM candidate"}
{"question": "Return the maximum support rate, minimum consider rate, and minimum oppose rate across all candidates?", "query": "SELECT max(support_rate) ,  min(consider_rate) ,  min(oppose_rate) FROM candidate"}
{"question": "list all female (sex is F) candidate names in the alphabetical order.", "query": "SELECT t1.name FROM people AS t1 JOIN candidate AS t2 ON t1.people_id  =  t2.people_id WHERE t1.sex  =  'F' ORDER BY t1.name"}
{"question": "What are the names of all female candidates in alphabetical order (sex is F)?", "query": "SELECT t1.name FROM people AS t1 JOIN candidate AS t2 ON t1.people_id  =  t2.people_id WHERE t1.sex  =  'F' ORDER BY t1.name"}
{"question": "find the name of people whose height is lower than the average.", "query": "SELECT name FROM people WHERE height  <  (SELECT avg(height) FROM people)"}
{"question": "What are the names of people who are shorter than average?", "query": "SELECT name FROM people WHERE height  <  (SELECT avg(height) FROM people)"}
{"question": "List all info about all people.", "query": "SELECT * FROM people"}
{"question": "What is all the information about all people?", "query": "SELECT * FROM people"}
{"question": "Find the titles of all movies directed by steven spielberg.", "query": "SELECT title FROM Movie WHERE director = 'Steven Spielberg'"}
{"question": "What are the names of all movies directed by Steven Spielberg?", "query": "SELECT title FROM Movie WHERE director = 'Steven Spielberg'"}
{"question": "What is the name of the movie produced after 2000 and directed by James Cameron?", "query": "SELECT title FROM Movie WHERE director = 'James Cameron' AND YEAR  >  2000"}
{"question": "What are the titles of all movies that James Cameron directed after 2000?", "query": "SELECT title FROM Movie WHERE director = 'James Cameron' AND YEAR  >  2000"}
{"question": "How many movies were made before 2000?", "query": "SELECT count(*) FROM Movie WHERE YEAR  <  2000"}
{"question": "Who is the director of movie Avatar?", "query": "SELECT director FROM Movie WHERE title  = 'Avatar'"}
{"question": "Who directed Avatar?", "query": "SELECT director FROM Movie WHERE title  = 'Avatar'"}
{"question": "How many reviewers listed?", "query": "SELECT count(*) FROM Reviewer"}
{"question": "How many reviewers are there?", "query": "SELECT count(*) FROM Reviewer"}
{"question": "What is the id of the reviewer whose name has substring “Mike”?", "query": "SELECT rID FROM Reviewer WHERE name LIKE \"%Mike%\""}
{"question": "What is the id of the reviewer whose name includes the word \"Mike\"?", "query": "SELECT rID FROM Reviewer WHERE name LIKE \"%Mike%\""}
{"question": "What is the reviewer id of Daniel Lewis?", "query": "SELECT rID FROM Reviewer WHERE name  =  \"Daniel Lewis\""}
{"question": "What is the id of the reviewer named Daniel Lewis?", "query": "SELECT rID FROM Reviewer WHERE name  =  \"Daniel Lewis\""}
{"question": "What is the total number of ratings that has more than 3 stars?", "query": "SELECT count(*) FROM Rating WHERE stars  >  3"}
{"question": "How many movie ratings have more than 3 stars?", "query": "SELECT count(*) FROM Rating WHERE stars  >  3"}
{"question": "What is the lowest and highest rating star?", "query": "SELECT max(stars) ,  min(stars) FROM Rating"}
{"question": "What is the maximum and mininum number of stars a rating can receive?", "query": "SELECT max(stars) ,  min(stars) FROM Rating"}
{"question": "Find all years that have a movie that received a rating of 4 or 5, and sort them in increasing order of year.", "query": "SELECT DISTINCT YEAR FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID  =  T2.mID WHERE T2.stars  >=  4 ORDER BY T1.year"}
{"question": "In what years did a movie receive a 4 or 5 star rating, and list the years from oldest to most recently?", "query": "SELECT DISTINCT YEAR FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID  =  T2.mID WHERE T2.stars  >=  4 ORDER BY T1.year"}
{"question": "What are the names of directors who directed movies with 5 star rating? Also return the title of these movies.", "query": "SELECT T1.director ,  T1.title FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID  =  T2.mID WHERE T2.stars  =  5"}
{"question": "What are the names of the directors who created a movie with a 5 star rating, and what was the name of those movies?", "query": "SELECT T1.director ,  T1.title FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID  =  T2.mID WHERE T2.stars  =  5"}
{"question": "What is the average rating star for each reviewer?", "query": "SELECT T2.name ,  avg(T1.stars) FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID GROUP BY T2.name"}
{"question": "What is the average number of stars that each reviewer awards for a movie?", "query": "SELECT T2.name ,  avg(T1.stars) FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID GROUP BY T2.name"}
{"question": "Find the titles of all movies that have no ratings.", "query": "SELECT title FROM Movie WHERE mID NOT IN (SELECT mID FROM Rating)"}
{"question": "What are the titles of all movies that have not been rated?", "query": "SELECT title FROM Movie WHERE mID NOT IN (SELECT mID FROM Rating)"}
{"question": "Find the names of all reviewers who have ratings with a NULL value for the date.", "query": "SELECT DISTINCT name FROM Reviewer AS T1 JOIN Rating AS T2 ON T1.rID  =  T2.rID WHERE ratingDate  =  \"null\""}
{"question": "What are the different names of all reviewers whose ratings do not have a date field?", "query": "SELECT DISTINCT name FROM Reviewer AS T1 JOIN Rating AS T2 ON T1.rID  =  T2.rID WHERE ratingDate  =  \"null\""}
{"question": "What is the average rating stars and title for the oldest movie?", "query": "SELECT avg(T1.stars) ,  T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T2.year  =  (SELECT min(YEAR) FROM Movie)"}
{"question": "For the oldest movie listed, what is its average rating and title?", "query": "SELECT avg(T1.stars) ,  T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T2.year  =  (SELECT min(YEAR) FROM Movie)"}
{"question": "What is the name of the most recent movie?", "query": "SELECT title FROM Movie WHERE YEAR  =  (SELECT max(YEAR) FROM Movie)"}
{"question": "What is the title of the newest movie?", "query": "SELECT title FROM Movie WHERE YEAR  =  (SELECT max(YEAR) FROM Movie)"}
{"question": "What is the maximum stars and year for the most recent movie?", "query": "SELECT max(T1.stars) ,  T2.year FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T2.year  =  (SELECT max(YEAR) FROM Movie)"}
{"question": "What is highest rating for the most recent movie and when was it released?", "query": "SELECT max(T1.stars) ,  T2.year FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T2.year  =  (SELECT max(YEAR) FROM Movie)"}
{"question": "What is the names of movies whose created year is after all movies directed by Steven Spielberg?", "query": "SELECT title FROM Movie WHERE YEAR  >  (SELECT max(YEAR) FROM Movie WHERE director  =  \"Steven Spielberg\")"}
{"question": "What are the names of all movies that were created after the most recent Steven Spielberg film?", "query": "SELECT title FROM Movie WHERE YEAR  >  (SELECT max(YEAR) FROM Movie WHERE director  =  \"Steven Spielberg\")"}
{"question": "What are the titles and directors of the movies whose star is greater than the average stars of the movies directed by James Cameron?", "query": "SELECT T2.title ,  T2.director FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T1.stars  >  (SELECT avg(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T2.director  =  \"James Cameron\")"}
{"question": "What are the titles and directors of all movies that have a rating higher than the average James Cameron film rating?", "query": "SELECT T2.title ,  T2.director FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T1.stars  >  (SELECT avg(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T2.director  =  \"James Cameron\")"}
{"question": "Return reviewer name, movie title, stars, and ratingDate. And sort the data first by reviewer name, then by movie title, and lastly by number of stars.", "query": "SELECT T3.name ,  T2.title ,  T1.stars ,  T1.ratingDate FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID ORDER BY T3.name ,  T2.title ,  T1.stars"}
{"question": "What is the reviewer name, film title, movie rating, and rating date  for every movie ordered by reviewer name, movie title, then finally rating?", "query": "SELECT T3.name ,  T2.title ,  T1.stars ,  T1.ratingDate FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID ORDER BY T3.name ,  T2.title ,  T1.stars"}
{"question": "Find the names of all reviewers who have contributed three or more ratings.", "query": "SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID GROUP BY T1.rID HAVING COUNT(*)  >=  3"}
{"question": "What are the names of all reviewers that have rated 3 or more movies?", "query": "SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID GROUP BY T1.rID HAVING COUNT(*)  >=  3"}
{"question": "Find the names of all reviewers who rated Gone with the Wind.", "query": "SELECT DISTINCT T3.name FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T2.title  =  'Gone with the Wind'"}
{"question": "What are the names of all the different reviewers who rates Gone with the Wind?", "query": "SELECT DISTINCT T3.name FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T2.title  =  'Gone with the Wind'"}
{"question": "Find the names of all directors whose movies are rated by Sarah Martinez.", "query": "SELECT DISTINCT T2.director FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T3.name  =  'Sarah Martinez'"}
{"question": "What are the names of all directors whose movies have been reviewed by Sarah Martinez?", "query": "SELECT DISTINCT T2.director FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T3.name  =  'Sarah Martinez'"}
{"question": "For any rating where the name of reviewer is the same as the director of the movie, return the reviewer name, movie title, and number of stars.", "query": "SELECT DISTINCT T3.name ,  T2.title ,  T1.stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T2.director  =  T3.name"}
{"question": "What are the different reviewer names, movie titles, and stars for every rating where the reviewer had the same name as the director?", "query": "SELECT DISTINCT T3.name ,  T2.title ,  T1.stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T2.director  =  T3.name"}
{"question": "Return all reviewer names and movie names together in a single list.", "query": "SELECT name FROM Reviewer UNION SELECT title FROM Movie"}
{"question": "What are the names of all the reviewers and movie names?", "query": "SELECT name FROM Reviewer UNION SELECT title FROM Movie"}
{"question": "Find the titles of all movies not reviewed by Chris Jackson.", "query": "SELECT DISTINCT title FROM Movie EXCEPT SELECT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T3.name  =  'Chris Jackson'"}
{"question": "What are the titles of all movies that were not reviewed by Chris Jackson?", "query": "SELECT DISTINCT title FROM Movie EXCEPT SELECT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T3.name  =  'Chris Jackson'"}
{"question": "For all directors who directed more than one movie, return the titles of all movies directed by them, along with the director name. Sort by director name, then movie title.", "query": "SELECT T1.title ,  T1.director FROM Movie AS T1 JOIN Movie AS T2 ON T1.director  =  T2.director WHERE T1.title != T2.title ORDER BY T1.director ,  T1.title"}
{"question": "For all directors who have directed more than one movie, what movies have they directed and what are their names?", "query": "SELECT T1.title ,  T1.director FROM Movie AS T1 JOIN Movie AS T2 ON T1.director  =  T2.director WHERE T1.title != T2.title ORDER BY T1.director ,  T1.title"}
{"question": "For directors who had more than one movie, return the titles and produced years of all movies directed by them.", "query": "SELECT T1.title ,  T1.year FROM Movie AS T1 JOIN Movie AS T2 ON T1.director  =  T2.director WHERE T1.title != T2.title"}
{"question": "For each director who directed more than one movie, what are the titles and dates of release for all those movies?", "query": "SELECT T1.title ,  T1.year FROM Movie AS T1 JOIN Movie AS T2 ON T1.director  =  T2.director WHERE T1.title != T2.title"}
{"question": "What are the names of the directors who made exactly one movie?", "query": "SELECT director FROM Movie GROUP BY director HAVING count(*)  =  1"}
{"question": "What are the names of all directors who made one movie?", "query": "SELECT director FROM Movie GROUP BY director HAVING count(*)  =  1"}
{"question": "What are the names of the directors who made exactly one movie excluding director NULL?", "query": "SELECT director FROM Movie WHERE director != \"null\" GROUP BY director HAVING count(*)  =  1"}
{"question": "What are the names of all directors who have made one movie except for the director named NULL?", "query": "SELECT director FROM Movie WHERE director != \"null\" GROUP BY director HAVING count(*)  =  1"}
{"question": "How many movie reviews does each director get?", "query": "SELECT count(*) ,  T1.director FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID  =  T2.mID GROUP BY T1.director"}
{"question": "For each director, how many reviews have they received?", "query": "SELECT count(*) ,  T1.director FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID  =  T2.mID GROUP BY T1.director"}
{"question": "Find the movies with the highest average rating. Return the movie titles and average rating.", "query": "SELECT T2.title ,  avg(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T1.mID ORDER BY avg(T1.stars) DESC LIMIT 1"}
{"question": "What are the movie titles with the highest average rating and what are those ratings?", "query": "SELECT T2.title ,  avg(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T1.mID ORDER BY avg(T1.stars) DESC LIMIT 1"}
{"question": "What are the movie titles and average rating of the movies with the lowest average rating?", "query": "SELECT T2.title ,  avg(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T1.mID ORDER BY avg(T1.stars) LIMIT 1"}
{"question": "What are the titles and average ratings for all movies that have the lowest average rating?", "query": "SELECT T2.title ,  avg(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T1.mID ORDER BY avg(T1.stars) LIMIT 1"}
{"question": "What are the names and years of the movies that has the top 3 highest rating star?", "query": "SELECT T2.title ,  T2.year FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID ORDER BY T1.stars DESC LIMIT 3"}
{"question": "What are the names and years released for the movies with the top 3 highest ratings?", "query": "SELECT T2.title ,  T2.year FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID ORDER BY T1.stars DESC LIMIT 3"}
{"question": "For each director, return the director's name together with the title of the movie they directed that received the highest rating among all of their movies, and the value of that rating. Ignore movies whose director is NULL.", "query": "SELECT T2.title ,  T1.stars ,  T2.director ,  max(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE director != \"null\" GROUP BY director"}
{"question": "For each director, what are the titles and ratings for all the movies they reviewed?", "query": "SELECT T2.title ,  T1.stars ,  T2.director ,  max(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE director != \"null\" GROUP BY director"}
{"question": "Find the title and star rating of the movie that got the least rating star for each reviewer.", "query": "SELECT T2.title ,  T1.rID ,  T1.stars ,  min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T1.rID"}
{"question": "For each reviewer id, what is the title and rating for the movie with the smallest rating?", "query": "SELECT T2.title ,  T1.rID ,  T1.stars ,  min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T1.rID"}
{"question": "Find the title and score of the movie with the lowest rating among all movies directed by each director.", "query": "SELECT T2.title ,  T1.stars ,  T2.director ,  min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T2.director"}
{"question": "For each director, what is the title and score of their most poorly rated movie?", "query": "SELECT T2.title ,  T1.stars ,  T2.director ,  min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T2.director"}
{"question": "What is the name of the movie that is rated by most of times?", "query": "SELECT T2.title ,  T1.mID FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T1.mID ORDER BY count(*) DESC LIMIT 1"}
{"question": "What is the name of the movie that has been reviewed the most?", "query": "SELECT T2.title ,  T1.mID FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T1.mID ORDER BY count(*) DESC LIMIT 1"}
{"question": "What are the titles of all movies that have rating star is between 3 and 5?", "query": "SELECT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T1.stars BETWEEN 3 AND 5"}
{"question": "What are the titles of all movies that have between 3 and 5 stars?", "query": "SELECT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T1.stars BETWEEN 3 AND 5"}
{"question": "Find the names of reviewers who had given higher than 3 star ratings.", "query": "SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID WHERE T1.stars  >  3"}
{"question": "What are the names of the reviewers who have rated a movie more than 3 stars before?", "query": "SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID WHERE T1.stars  >  3"}
{"question": "Find the average rating star for each movie that are not reviewed by Brittany Harris.", "query": "SELECT mID ,  avg(stars) FROM Rating WHERE mID NOT IN (SELECT T1.mID FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID WHERE T2.name  =  \"Brittany Harris\") GROUP BY mID"}
{"question": "What is the average rating for each movie that has never been reviewed by Brittany Harris?", "query": "SELECT mID ,  avg(stars) FROM Rating WHERE mID NOT IN (SELECT T1.mID FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID WHERE T2.name  =  \"Brittany Harris\") GROUP BY mID"}
{"question": "What are the ids of the movies that are not reviewed by Brittany Harris.", "query": "SELECT mID FROM Rating EXCEPT SELECT T1.mID FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID WHERE T2.name  =  \"Brittany Harris\""}
{"question": "What are the ids of all moviest hat have not been reviewed by Britanny Harris?", "query": "SELECT mID FROM Rating EXCEPT SELECT T1.mID FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID WHERE T2.name  =  \"Brittany Harris\""}
{"question": "Find the average rating star for each movie that received at least 2 ratings.", "query": "SELECT mID ,  avg(stars) FROM Rating GROUP BY mID HAVING count(*)  >=  2"}
{"question": "For each movie that received more than 3 reviews, what is the average rating?", "query": "SELECT mID ,  avg(stars) FROM Rating GROUP BY mID HAVING count(*)  >=  2"}
{"question": "find the ids of reviewers who did not give 4 star.", "query": "SELECT rID FROM Rating EXCEPT SELECT rID FROM Rating WHERE stars  =  4"}
{"question": "What are the ids of all reviewers who did not give 4 stars?", "query": "SELECT rID FROM Rating EXCEPT SELECT rID FROM Rating WHERE stars  =  4"}
{"question": "Find the ids of reviewers who didn't only give 4 star.", "query": "SELECT rID FROM Rating WHERE stars != 4"}
{"question": "What are the ids of all reviewers who have not given 4 stars at least once?", "query": "SELECT rID FROM Rating WHERE stars != 4"}
{"question": "What are names of the movies that are either made after 2000 or reviewed by Brittany Harris?", "query": "SELECT DISTINCT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T3.name  =  'Brittany Harris' OR T2.year  >  2000"}
{"question": "What are the names of all movies that were made after 2000 or reviewed by Brittany Harris?", "query": "SELECT DISTINCT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T3.name  =  'Brittany Harris' OR T2.year  >  2000"}
{"question": "What are names of the movies that are either made before 1980 or directed by James Cameron?", "query": "SELECT title FROM Movie WHERE director  =  \"James Cameron\" OR YEAR   <  1980"}
{"question": "What are the names of all movies made before 1980 or had James Cameron as the director?", "query": "SELECT title FROM Movie WHERE director  =  \"James Cameron\" OR YEAR   <  1980"}
{"question": "What are the names of reviewers who had rated 3 star and 4 star?", "query": "SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID WHERE T1.stars  =  3 INTERSECT SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID WHERE T1.stars  =  4"}
{"question": "What are the names of all reviewers that have given 3 or 4 stars for reviews?", "query": "SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID WHERE T1.stars  =  3 INTERSECT SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID WHERE T1.stars  =  4"}
{"question": "What are the names of movies that get 3 star and 4 star?", "query": "SELECT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T1.stars  =  3 INTERSECT SELECT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T1.stars  =  4"}
{"question": "What are the names of all movies that received 3 or 4 stars?", "query": "SELECT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T1.stars  =  3 INTERSECT SELECT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T1.stars  =  4"}
{"question": "How many counties are there?", "query": "SELECT count(*) FROM county_public_safety"}
{"question": "List the names of counties in descending order of population.", "query": "SELECT Name FROM county_public_safety ORDER BY Population DESC"}
{"question": "What are the names of the counties of public safety, ordered by population descending?", "query": "SELECT Name FROM county_public_safety ORDER BY Population DESC"}
{"question": "List the distinct police forces of counties whose location is not on east side.", "query": "SELECT DISTINCT Police_force FROM county_public_safety WHERE LOCATION != \"East\""}
{"question": "What are the different police forces of counties that are not located in the East?", "query": "SELECT DISTINCT Police_force FROM county_public_safety WHERE LOCATION != \"East\""}
{"question": "What are the minimum and maximum crime rate of counties?", "query": "SELECT min(Crime_rate) ,  max(Crime_rate) FROM county_public_safety"}
{"question": "Return the minimum and maximum crime rates across all counties.", "query": "SELECT min(Crime_rate) ,  max(Crime_rate) FROM county_public_safety"}
{"question": "Show the crime rates of counties in ascending order of number of police officers.", "query": "SELECT Crime_rate FROM county_public_safety ORDER BY Police_officers ASC"}
{"question": "What are the crime rates of counties sorted by number of offices ascending?", "query": "SELECT Crime_rate FROM county_public_safety ORDER BY Police_officers ASC"}
{"question": "What are the names of cities in ascending alphabetical order?", "query": "SELECT Name FROM city ORDER BY Name ASC"}
{"question": "Return the names of cities, ordered alphabetically.", "query": "SELECT Name FROM city ORDER BY Name ASC"}
{"question": "What are the percentage of hispanics in cities with the black percentage higher than 10?", "query": "SELECT Hispanic FROM city WHERE Black  >  10"}
{"question": "Return the hispanic percentage for cities in which the black percentage is greater than 10.", "query": "SELECT Hispanic FROM city WHERE Black  >  10"}
{"question": "List the name of the county with the largest population.", "query": "SELECT Name FROM county_public_safety ORDER BY Population DESC LIMIT 1"}
{"question": "What is the name of the county with the greatest population?", "query": "SELECT Name FROM county_public_safety ORDER BY Population DESC LIMIT 1"}
{"question": "List the names of the city with the top 5 white percentages.", "query": "SELECT Name FROM city ORDER BY White DESC LIMIT 5"}
{"question": "What are the names of the five cities with the greatest proportion of white people?", "query": "SELECT Name FROM city ORDER BY White DESC LIMIT 5"}
{"question": "Show names of cities and names of counties they are in.", "query": "SELECT T1.Name ,  T2.Name FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID  =  T2.County_ID"}
{"question": "What are the names of cities, as well as the names of the counties they correspond to?", "query": "SELECT T1.Name ,  T2.Name FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID  =  T2.County_ID"}
{"question": "Show white percentages of cities and the crime rates of counties they are in.", "query": "SELECT T1.White ,  T2.Crime_rate FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID  =  T2.County_ID"}
{"question": "What are the white percentages of cities, and the corresponding crime rates of the counties they correspond to?", "query": "SELECT T1.White ,  T2.Crime_rate FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID  =  T2.County_ID"}
{"question": "Show the name of cities in the county that has the largest number of police officers.", "query": "SELECT name FROM city WHERE county_ID  =  (SELECT county_ID FROM county_public_safety ORDER BY Police_officers DESC LIMIT 1)"}
{"question": "What are the names of cities that are in the county with the most police officers?", "query": "SELECT name FROM city WHERE county_ID  =  (SELECT county_ID FROM county_public_safety ORDER BY Police_officers DESC LIMIT 1)"}
{"question": "Show the number of cities in counties that have a population more than 20000.", "query": "SELECT count(*) FROM city WHERE county_ID IN (SELECT county_ID FROM county_public_safety WHERE population  >  20000)"}
{"question": "How many cities are in counties that have populations of over 20000?", "query": "SELECT count(*) FROM city WHERE county_ID IN (SELECT county_ID FROM county_public_safety WHERE population  >  20000)"}
{"question": "Show the crime rate of counties with a city having white percentage more than 90.", "query": "SELECT T2.Crime_rate FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID  =  T2.County_ID WHERE T1.White  >  90"}
{"question": "What are the crime rates of counties that contain cities that have white percentages of over 90?", "query": "SELECT T2.Crime_rate FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID  =  T2.County_ID WHERE T1.White  >  90"}
{"question": "Please show the police forces and the number of counties with each police force.", "query": "SELECT Police_force ,  COUNT(*) FROM county_public_safety GROUP BY Police_force"}
{"question": "How many counties correspond to each police force?", "query": "SELECT Police_force ,  COUNT(*) FROM county_public_safety GROUP BY Police_force"}
{"question": "What is the location shared by most counties?", "query": "SELECT LOCATION FROM county_public_safety GROUP BY LOCATION ORDER BY COUNT(*) DESC LIMIT 1"}
{"question": "Which location has the most corresponding counties?", "query": "SELECT LOCATION FROM county_public_safety GROUP BY LOCATION ORDER BY COUNT(*) DESC LIMIT 1"}
{"question": "List the names of counties that do not have any cities.", "query": "SELECT Name FROM county_public_safety WHERE County_ID NOT IN (SELECT County_ID FROM city)"}
{"question": "What are the names of counties that do not contain any cities?", "query": "SELECT Name FROM county_public_safety WHERE County_ID NOT IN (SELECT County_ID FROM city)"}
{"question": "Show the police force shared by counties with location on the east and west.", "query": "SELECT Police_force FROM county_public_safety WHERE LOCATION  =  \"East\" INTERSECT SELECT Police_force FROM county_public_safety WHERE LOCATION  =  \"West\""}
{"question": "Which police forces operate in both counties that are located in the East and in the West?", "query": "SELECT Police_force FROM county_public_safety WHERE LOCATION  =  \"East\" INTERSECT SELECT Police_force FROM county_public_safety WHERE LOCATION  =  \"West\""}
{"question": "Show the names of cities in counties that have a crime rate less than 100.", "query": "SELECT name FROM city WHERE county_id IN (SELECT county_id FROM county_public_safety WHERE Crime_rate  <  100)"}
{"question": "What are the names of cities that are in counties that have a crime rate below 100?", "query": "SELECT name FROM city WHERE county_id IN (SELECT county_id FROM county_public_safety WHERE Crime_rate  <  100)"}
{"question": "Show the case burden of counties in descending order of population.", "query": "SELECT Case_burden FROM county_public_safety ORDER BY Population DESC"}
{"question": "What are the case burdens of counties, ordered descending by population?", "query": "SELECT Case_burden FROM county_public_safety ORDER BY Population DESC"}
{"question": "Find the names of all modern rooms with a base price below $160 and two beds.", "query": "SELECT roomName FROM Rooms WHERE basePrice  <  160 AND beds =  2 AND decor  =  'modern';"}
{"question": "What are the names of modern rooms that have a base price lower than $160 and two beds.", "query": "SELECT roomName FROM Rooms WHERE basePrice  <  160 AND beds =  2 AND decor  =  'modern';"}
{"question": "Find all the rooms that have a price higher than 160 and can accommodate more than 2 people. Report room names and ids.", "query": "SELECT roomName ,  RoomId FROM Rooms WHERE basePrice  >  160 AND maxOccupancy  >  2;"}
{"question": "What are the room names and ids of all the rooms that cost more than 160 and can accommodate more than two people.", "query": "SELECT roomName ,  RoomId FROM Rooms WHERE basePrice  >  160 AND maxOccupancy  >  2;"}
{"question": "Find the most popular room in the hotel. The most popular room is the room that had seen the largest number of reservations.", "query": "SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T1.Room ORDER BY count(*) DESC LIMIT 1;"}
{"question": "Which room has the largest number of reservations?", "query": "SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T1.Room ORDER BY count(*) DESC LIMIT 1;"}
{"question": "How many kids stay in the rooms reserved by ROY SWEAZY?", "query": "SELECT kids FROM Reservations WHERE FirstName = \"ROY\" AND LastName  =  \"SWEAZY\";"}
{"question": "Find the number of kids staying in the rooms reserved by a person called ROY SWEAZ.", "query": "SELECT kids FROM Reservations WHERE FirstName = \"ROY\" AND LastName  =  \"SWEAZY\";"}
{"question": "How many times does ROY SWEAZY has reserved a room.", "query": "SELECT count(*) FROM Reservations WHERE FirstName = \"ROY\" AND LastName  =  \"SWEAZY\";"}
{"question": "Find the number of times ROY SWEAZY has reserved a room.", "query": "SELECT count(*) FROM Reservations WHERE FirstName = \"ROY\" AND LastName  =  \"SWEAZY\";"}
{"question": "Which room has the highest rate? List the room's full name, rate, check in and check out date.", "query": "SELECT T2.roomName ,  T1.Rate ,  T1.CheckIn ,  T1.CheckOut FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T1.Room ORDER BY T1.Rate DESC LIMIT 1;"}
{"question": "Return the name, rate, check in and check out date for the room with the highest rate.", "query": "SELECT T2.roomName ,  T1.Rate ,  T1.CheckIn ,  T1.CheckOut FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T1.Room ORDER BY T1.Rate DESC LIMIT 1;"}
{"question": "How many adults stay in the room CONRAD SELBIG checked in on Oct 23, 2010?", "query": "SELECT Adults FROM Reservations WHERE CheckIn  =  \"2010-10-23\" AND FirstName  =  \"CONRAD\" AND LastName  =  \"SELBIG\";"}
{"question": "Find the number of adults for the room reserved and checked in by CONRAD SELBIG on Oct 23, 2010.", "query": "SELECT Adults FROM Reservations WHERE CheckIn  =  \"2010-10-23\" AND FirstName  =  \"CONRAD\" AND LastName  =  \"SELBIG\";"}
{"question": "How many kids stay in the room DAMIEN TRACHSEL checked in on Sep 21, 2010?", "query": "SELECT Kids FROM Reservations WHERE CheckIn  =  \"2010-09-21\" AND FirstName  =  \"DAMIEN\" AND LastName  =  \"TRACHSEL\";"}
{"question": "Return the number of kids for the room reserved and checked in by DAMIEN TRACHSEL on  Sep 21, 2010.", "query": "SELECT Kids FROM Reservations WHERE CheckIn  =  \"2010-09-21\" AND FirstName  =  \"DAMIEN\" AND LastName  =  \"TRACHSEL\";"}
{"question": "How many king beds are there?", "query": "SELECT sum(beds) FROM Rooms WHERE bedtype  =  'King';"}
{"question": "Find the total number of king beds available.", "query": "SELECT sum(beds) FROM Rooms WHERE bedtype  =  'King';"}
{"question": "List the names and decor of rooms that have a king bed. Sort the list by their price.", "query": "SELECT roomName ,  decor FROM Rooms WHERE bedtype  =  'King' ORDER BY basePrice;"}
{"question": "What are the names and decor of rooms with a king bed? Sort them by their price", "query": "SELECT roomName ,  decor FROM Rooms WHERE bedtype  =  'King' ORDER BY basePrice;"}
{"question": "Which room has cheapest base price? List the room's name and the base price.", "query": "SELECT roomName ,  basePrice FROM Rooms ORDER BY basePrice ASC LIMIT 1;"}
{"question": "What are the room name and base price of the room with the lowest base price?", "query": "SELECT roomName ,  basePrice FROM Rooms ORDER BY basePrice ASC LIMIT 1;"}
{"question": "What is the decor of room Recluse and defiance?", "query": "SELECT decor FROM Rooms WHERE roomName  =  \"Recluse and defiance\";"}
{"question": "Return the decor of the room named \"Recluse and defiance\".", "query": "SELECT decor FROM Rooms WHERE roomName  =  \"Recluse and defiance\";"}
{"question": "What is the average base price of different bed type? List bed type and average base price.", "query": "SELECT bedType ,  avg(basePrice) FROM Rooms GROUP BY bedType;"}
{"question": "For each bed type, find the average base price of different bed type.", "query": "SELECT bedType ,  avg(basePrice) FROM Rooms GROUP BY bedType;"}
{"question": "What is the total number of people who could stay in the modern rooms in this inn?", "query": "SELECT sum(maxOccupancy) FROM Rooms WHERE decor  =  'modern';"}
{"question": "How many people in total can stay in the modern rooms of this inn?", "query": "SELECT sum(maxOccupancy) FROM Rooms WHERE decor  =  'modern';"}
{"question": "What kind of decor has the least number of reservations?", "query": "SELECT T2.decor FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T2.decor ORDER BY count(T2.decor) ASC LIMIT 1;"}
{"question": "What is the least popular kind of decor?", "query": "SELECT T2.decor FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T2.decor ORDER BY count(T2.decor) ASC LIMIT 1;"}
{"question": "List how many times the number of people in the room reached the maximum occupancy of the room. The number of people include adults and kids.", "query": "SELECT count(*) FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId WHERE T2.maxOccupancy  =  T1.Adults + T1.Kids;"}
{"question": "How many times the number of adults and kids staying in a room reached the maximum capacity of the room?", "query": "SELECT count(*) FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId WHERE T2.maxOccupancy  =  T1.Adults + T1.Kids;"}
{"question": "Find the first and last names of people who payed more than the rooms' base prices.", "query": "SELECT T1.firstname ,  T1.lastname FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId WHERE T1.Rate - T2.basePrice  >  0"}
{"question": "What are the first and last names of people who payed more than the rooms' base prices?", "query": "SELECT T1.firstname ,  T1.lastname FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId WHERE T1.Rate - T2.basePrice  >  0"}
{"question": "How many rooms are there?", "query": "SELECT count(*) FROM Rooms;"}
{"question": "What is the total number of rooms available in this inn?", "query": "SELECT count(*) FROM Rooms;"}
{"question": "Find the number of rooms with a king bed.", "query": "SELECT count(*) FROM Rooms WHERE bedType  =  \"King\";"}
{"question": "How many rooms have a king bed?", "query": "SELECT count(*) FROM Rooms WHERE bedType  =  \"King\";"}
{"question": "Find the number of rooms for each bed type.", "query": "SELECT bedType ,  count(*) FROM Rooms GROUP BY bedType;"}
{"question": "What are the number of rooms for each bed type?", "query": "SELECT bedType ,  count(*) FROM Rooms GROUP BY bedType;"}
{"question": "Find the name of the room with the maximum occupancy.", "query": "SELECT roomName FROM Rooms ORDER BY maxOccupancy DESC LIMIT 1;"}
{"question": "What is the name of the room that can accommodate the most people?", "query": "SELECT roomName FROM Rooms ORDER BY maxOccupancy DESC LIMIT 1;"}
{"question": "Find the id and name of the most expensive base price room.", "query": "SELECT RoomId ,  roomName FROM Rooms ORDER BY basePrice DESC LIMIT 1;"}
{"question": "Which room has the highest base price?", "query": "SELECT RoomId ,  roomName FROM Rooms ORDER BY basePrice DESC LIMIT 1;"}
{"question": "List the type of bed and name of all traditional rooms.", "query": "SELECT roomName ,  bedType FROM Rooms WHERE decor = \"traditional\";"}
{"question": "What are the bed type and name of all the rooms with traditional decor?", "query": "SELECT roomName ,  bedType FROM Rooms WHERE decor = \"traditional\";"}
{"question": "Find the number of rooms with king bed for each decor type.", "query": "SELECT decor ,  count(*) FROM Rooms WHERE bedType = \"King\" GROUP BY decor;"}
{"question": "How many rooms have king beds? Report the number for each decor type.", "query": "SELECT decor ,  count(*) FROM Rooms WHERE bedType = \"King\" GROUP BY decor;"}
{"question": "Find the average and minimum price of the rooms in different decor.", "query": "SELECT decor , avg(basePrice) ,  min(basePrice) FROM Rooms GROUP BY decor;"}
{"question": "What is the average minimum and price of the rooms for each different decor.", "query": "SELECT decor , avg(basePrice) ,  min(basePrice) FROM Rooms GROUP BY decor;"}
{"question": "List the name of all rooms sorted by their prices.", "query": "SELECT roomName FROM Rooms ORDER BY basePrice;"}
{"question": "Sort all the rooms according to the price. Just report the room names.", "query": "SELECT roomName FROM Rooms ORDER BY basePrice;"}
{"question": "Find the number of rooms with price higher than 120 for different decor.", "query": "SELECT decor , count(*) FROM Rooms WHERE basePrice  >  120 GROUP BY decor;"}
{"question": "How many rooms cost more than 120, for each different decor?", "query": "SELECT decor , count(*) FROM Rooms WHERE basePrice  >  120 GROUP BY decor;"}
{"question": "For each bed type, find the average room price.", "query": "SELECT bedType ,  avg(basePrice) FROM Rooms GROUP BY bedType;"}
{"question": "What is the average base price of rooms, for each bed type?", "query": "SELECT bedType ,  avg(basePrice) FROM Rooms GROUP BY bedType;"}
{"question": "List the name of rooms with king or queen bed.", "query": "SELECT roomName FROM Rooms WHERE bedType  =  \"King\" OR bedType  =  \"Queen\";"}
{"question": "What are the names of rooms that have either king or queen bed?", "query": "SELECT roomName FROM Rooms WHERE bedType  =  \"King\" OR bedType  =  \"Queen\";"}
{"question": "How many different types of beds are there?", "query": "SELECT count(DISTINCT bedType) FROM Rooms;"}
{"question": "Find the number of distinct bed types available in this inn.", "query": "SELECT count(DISTINCT bedType) FROM Rooms;"}
{"question": "Find the name and id of the top 3 expensive rooms.", "query": "SELECT RoomId ,  roomName FROM Rooms ORDER BY basePrice DESC LIMIT 3;"}
{"question": "What are the name and id of the three highest priced rooms?", "query": "SELECT RoomId ,  roomName FROM Rooms ORDER BY basePrice DESC LIMIT 3;"}
{"question": "Find the name of rooms whose price is higher than the average price.", "query": "SELECT roomName FROM Rooms WHERE basePrice  >  ( SELECT avg(basePrice) FROM Rooms );"}
{"question": "What are the name of rooms that cost more than the average.", "query": "SELECT roomName FROM Rooms WHERE basePrice  >  ( SELECT avg(basePrice) FROM Rooms );"}
{"question": "Find the number of rooms that do not have any reservation.", "query": "SELECT count(*) FROM rooms WHERE roomid NOT IN (SELECT DISTINCT room FROM reservations)"}
{"question": "How many rooms have not had any reservation yet?", "query": "SELECT count(*) FROM rooms WHERE roomid NOT IN (SELECT DISTINCT room FROM reservations)"}
{"question": "Return the name and number of reservations made for each of the rooms.", "query": "SELECT T2.roomName ,  count(*) ,  T1.Room FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T1.Room"}
{"question": "For each room, find its name and the number of times reservations were made for it.", "query": "SELECT T2.roomName ,  count(*) ,  T1.Room FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T1.Room"}
{"question": "Find the names of rooms that have been reserved for more than 60 times.", "query": "SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T1.Room HAVING count(*)  >  60"}
{"question": "What are the names of rooms whose reservation frequency exceeds 60 times?", "query": "SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T1.Room HAVING count(*)  >  60"}
{"question": "Find the name of rooms whose base price is between 120 and 150.", "query": "SELECT roomname FROM rooms WHERE baseprice BETWEEN 120 AND 150"}
{"question": "Which rooms cost between 120 and 150? Give me the room names.", "query": "SELECT roomname FROM rooms WHERE baseprice BETWEEN 120 AND 150"}
{"question": "Find the name of rooms booked by some customers whose first name contains ROY.", "query": "SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId WHERE firstname LIKE '%ROY%'"}
{"question": "What are the name of rooms booked by customers whose first name has \"ROY\" in part?", "query": "SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId WHERE firstname LIKE '%ROY%'"}
{"question": "what are the details of the cmi masters that have the cross reference code 'Tax'?", "query": "SELECT T1.cmi_details FROM Customer_Master_Index AS T1 JOIN CMI_Cross_References AS T2 ON T1.master_customer_id  =  T2.master_customer_id WHERE T2.source_system_code  =  'Tax'"}
{"question": "What is the cmi cross reference id that is related to at least one council tax entry? List the cross reference id and source system code.", "query": "SELECT T1.cmi_cross_ref_id ,  T1.source_system_code FROM CMI_Cross_References AS T1 JOIN Council_Tax AS T2 ON T1.cmi_cross_ref_id  =  T2.cmi_cross_ref_id GROUP BY T1.cmi_cross_ref_id HAVING count(*)  >=  1"}
{"question": "How many business rates are related to each cmi cross reference? List cross reference id, master customer id and the n", "query": "SELECT T2.cmi_cross_ref_id ,  T2.master_customer_id ,  count(*) FROM Business_Rates AS T1 JOIN CMI_Cross_References AS T2 ON T1.cmi_cross_ref_id  =  T2.cmi_cross_ref_id GROUP BY T2.cmi_cross_ref_id"}
{"question": "What is the tax source system code related to the benefits and overpayments? List the code and the benifit id, order by benifit id.", "query": "SELECT T1.source_system_code ,  T2.council_tax_id FROM CMI_Cross_References AS T1 JOIN Benefits_Overpayments AS T2 ON T1.cmi_cross_ref_id  =  T2.cmi_cross_ref_id ORDER BY T2.council_tax_id"}
{"question": "Wat is the tax source system code and master customer id of the taxes related to each parking fine id?", "query": "SELECT T1.source_system_code ,  T1.master_customer_id ,  T2.council_tax_id FROM CMI_Cross_References AS T1 JOIN Parking_Fines AS T2 ON T1.cmi_cross_ref_id  =  T2.cmi_cross_ref_id"}
{"question": "What are the renting arrears tax ids related to the customer master index whose detail is not 'Schmidt, Kertzmann and Lubowitz'?", "query": "SELECT T1.council_tax_id FROM Rent_Arrears AS T1 JOIN CMI_Cross_References AS T2 ON T1.cmi_cross_ref_id  =  T2.cmi_cross_ref_id JOIN Customer_Master_Index AS T3 ON T3.master_customer_id  =  T2.master_customer_id WHERE T3.cmi_details != 'Schmidt ,  Kertzmann and Lubowitz'"}
{"question": "What are the register ids of electoral registries that have the cross reference source system code 'Electoral' or 'Tax'?", "query": "SELECT T1.electoral_register_id FROM Electoral_Register AS T1 JOIN CMI_Cross_References AS T2 ON T1.cmi_cross_ref_id  =  T2.cmi_cross_ref_id WHERE T2.source_system_code  =  'Electoral' OR T2.source_system_code  =  'Tax'"}
{"question": "How many different source system code for the cmi cross references are there?", "query": "SELECT count(DISTINCT source_system_code) FROM CMI_cross_references"}
{"question": "List all information about customer master index, and sort them by details in descending order.", "query": "SELECT * FROM customer_master_index ORDER BY cmi_details DESC"}
{"question": "List the council tax ids and their related cmi cross references of all the parking fines.", "query": "SELECT council_tax_id ,  cmi_cross_ref_id FROM parking_fines"}
{"question": "How many council taxes are collected for renting arrears ?", "query": "SELECT count(*) FROM rent_arrears"}
{"question": "What are the distinct cross reference source system codes which are related to the master customer details 'Gottlieb, Becker and Wyman'?", "query": "SELECT DISTINCT T2.source_system_code FROM customer_master_index AS T1 JOIN cmi_cross_references AS T2 ON T1.master_customer_id  =  T2.master_customer_id WHERE T1.cmi_details  =  'Gottlieb ,  Becker and Wyman'"}
{"question": "Which cmi cross reference id is not related to any parking taxes?", "query": "SELECT cmi_cross_ref_id FROM cmi_cross_references EXCEPT SELECT cmi_cross_ref_id FROM parking_fines"}
{"question": "Which distinct source system code includes the substring 'en'?", "query": "SELECT DISTINCT source_system_code FROM cmi_cross_references WHERE source_system_code LIKE '%en%'"}
{"question": "How many parties are there?", "query": "SELECT count(*) FROM party"}
{"question": "Count the number of parties.", "query": "SELECT count(*) FROM party"}
{"question": "List the themes of parties in ascending order of number of hosts.", "query": "SELECT Party_Theme FROM party ORDER BY Number_of_hosts ASC"}
{"question": "What are the themes of parties ordered by the number of hosts in ascending manner?", "query": "SELECT Party_Theme FROM party ORDER BY Number_of_hosts ASC"}
{"question": "What are the themes and locations of parties?", "query": "SELECT Party_Theme ,  LOCATION FROM party"}
{"question": "Give me the theme and location of each party.", "query": "SELECT Party_Theme ,  LOCATION FROM party"}
{"question": "Show the first year and last year of parties with theme \"Spring\" or \"Teqnology\".", "query": "SELECT First_year ,  Last_year FROM party WHERE Party_Theme  =  \"Spring\" OR Party_Theme  =  \"Teqnology\""}
{"question": "What are the first year and last year of the parties whose theme is \"Spring\" or \"Teqnology\"?", "query": "SELECT First_year ,  Last_year FROM party WHERE Party_Theme  =  \"Spring\" OR Party_Theme  =  \"Teqnology\""}
{"question": "What is the average number of hosts for parties?", "query": "SELECT avg(Number_of_hosts) FROM party"}
{"question": "Compute the average number of hosts for parties.", "query": "SELECT avg(Number_of_hosts) FROM party"}
{"question": "What is the location of the party with the most hosts?", "query": "SELECT LOCATION FROM party ORDER BY Number_of_hosts DESC LIMIT 1"}
{"question": "Which party had the most hosts? Give me the party location.", "query": "SELECT LOCATION FROM party ORDER BY Number_of_hosts DESC LIMIT 1"}
{"question": "Show different nationalities along with the number of hosts of each nationality.", "query": "SELECT Nationality ,  COUNT(*) FROM HOST GROUP BY Nationality"}
{"question": "How many hosts does each nationality have? List the nationality and the count.", "query": "SELECT Nationality ,  COUNT(*) FROM HOST GROUP BY Nationality"}
{"question": "Show the most common nationality of hosts.", "query": "SELECT Nationality FROM HOST GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1"}
{"question": "Which nationality has the most hosts?", "query": "SELECT Nationality FROM HOST GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1"}
{"question": "Show the nations that have both hosts older than 45 and hosts younger than 35.", "query": "SELECT Nationality FROM HOST WHERE Age  >  45 INTERSECT SELECT Nationality FROM HOST WHERE Age  <  35"}
{"question": "Which nations have both hosts of age above 45 and hosts of age below 35?", "query": "SELECT Nationality FROM HOST WHERE Age  >  45 INTERSECT SELECT Nationality FROM HOST WHERE Age  <  35"}
{"question": "Show the themes of parties and the names of the party hosts.", "query": "SELECT T3.Party_Theme ,  T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID  =  T2.Host_ID JOIN party AS T3 ON T1.Party_ID  =  T3.Party_ID"}
{"question": "For each party, return its theme and the name of its host.", "query": "SELECT T3.Party_Theme ,  T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID  =  T2.Host_ID JOIN party AS T3 ON T1.Party_ID  =  T3.Party_ID"}
{"question": "Show the locations of parties and the names of the party hosts in ascending order of the age of the host.", "query": "SELECT T3.Location ,  T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID  =  T2.Host_ID JOIN party AS T3 ON T1.Party_ID  =  T3.Party_ID ORDER BY T2.Age"}
{"question": "For each party, find its location and the name of its host. Sort the result in ascending order of the age of the host.", "query": "SELECT T3.Location ,  T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID  =  T2.Host_ID JOIN party AS T3 ON T1.Party_ID  =  T3.Party_ID ORDER BY T2.Age"}
{"question": "Show the locations of parties with hosts older than 50.", "query": "SELECT T3.Location FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID  =  T2.Host_ID JOIN party AS T3 ON T1.Party_ID  =  T3.Party_ID WHERE T2.Age  >  50"}
{"question": "Which parties have hosts of age above 50? Give me the party locations.", "query": "SELECT T3.Location FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID  =  T2.Host_ID JOIN party AS T3 ON T1.Party_ID  =  T3.Party_ID WHERE T2.Age  >  50"}
{"question": "Show the host names for parties with number of hosts greater than 20.", "query": "SELECT T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID  =  T2.Host_ID JOIN party AS T3 ON T1.Party_ID  =  T3.Party_ID WHERE T3.Number_of_hosts  >  20"}
{"question": "Which parties have more than 20 hosts? Give me the host names for these parties.", "query": "SELECT T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID  =  T2.Host_ID JOIN party AS T3 ON T1.Party_ID  =  T3.Party_ID WHERE T3.Number_of_hosts  >  20"}
{"question": "Show the name and the nationality of the oldest host.", "query": "SELECT Name ,  Nationality FROM HOST ORDER BY Age DESC LIMIT 1"}
{"question": "What are the name and the nationality of the host of the highest age?", "query": "SELECT Name ,  Nationality FROM HOST ORDER BY Age DESC LIMIT 1"}
{"question": "List the names of hosts who did not serve as a host of any party in our record.", "query": "SELECT Name FROM HOST WHERE Host_ID NOT IN (SELECT Host_ID FROM party_host)"}
{"question": "What are the names of hosts who did not host any party in our record?", "query": "SELECT Name FROM HOST WHERE Host_ID NOT IN (SELECT Host_ID FROM party_host)"}
{"question": "Show all region code and region name sorted by the codes.", "query": "SELECT region_code ,  region_name FROM region ORDER BY region_code"}
{"question": "What are the codes and names for all regions, sorted by codes?", "query": "SELECT region_code ,  region_name FROM region ORDER BY region_code"}
{"question": "List all region names in alphabetical order.", "query": "SELECT region_name FROM region ORDER BY region_name"}
{"question": "What are the names of the regions in alphabetical order?", "query": "SELECT region_name FROM region ORDER BY region_name"}
{"question": "Show names for all regions except for Denmark.", "query": "SELECT region_name FROM region WHERE region_name != 'Denmark'"}
{"question": "Return the names of all regions other than Denmark.", "query": "SELECT region_name FROM region WHERE region_name != 'Denmark'"}
{"question": "How many storms had death records?", "query": "SELECT count(*) FROM storm WHERE Number_Deaths  >  0"}
{"question": "Count the number of storms in which at least 1 person died.", "query": "SELECT count(*) FROM storm WHERE Number_Deaths  >  0"}
{"question": "List name, dates active, and number of deaths for all storms with at least 1 death.", "query": "SELECT name ,  dates_active ,  number_deaths FROM storm WHERE number_deaths  >=  1"}
{"question": "What are the names, dates active, and number of deaths for storms that had 1 or more death?", "query": "SELECT name ,  dates_active ,  number_deaths FROM storm WHERE number_deaths  >=  1"}
{"question": "Show the average and maximum damage for all storms with max speed higher than 1000.", "query": "SELECT avg(damage_millions_USD) ,  max(damage_millions_USD) FROM storm WHERE max_speed  >  1000"}
{"question": "What is the average and maximum damage in millions for storms that had a max speed over 1000?", "query": "SELECT avg(damage_millions_USD) ,  max(damage_millions_USD) FROM storm WHERE max_speed  >  1000"}
{"question": "What is the total number of deaths and damage for all storms with a max speed greater than the average?", "query": "SELECT sum(number_deaths) ,  sum(damage_millions_USD) FROM storm WHERE max_speed  >  (SELECT avg(max_speed) FROM storm)"}
{"question": "Return the total number of deaths and total damange in millions for storms that had a max speed greater than the average.", "query": "SELECT sum(number_deaths) ,  sum(damage_millions_USD) FROM storm WHERE max_speed  >  (SELECT avg(max_speed) FROM storm)"}
{"question": "List name and damage for all storms in a descending order of max speed.", "query": "SELECT name ,  damage_millions_USD FROM storm ORDER BY max_speed DESC"}
{"question": "What are the names and damage in millions for storms, ordered by their max speeds descending?", "query": "SELECT name ,  damage_millions_USD FROM storm ORDER BY max_speed DESC"}
{"question": "How many regions are affected?", "query": "SELECT count(DISTINCT region_id) FROM affected_region"}
{"question": "Count the number of different affected regions.", "query": "SELECT count(DISTINCT region_id) FROM affected_region"}
{"question": "Show the name for regions not affected.", "query": "SELECT region_name FROM region WHERE region_id NOT IN (SELECT region_id FROM affected_region)"}
{"question": "What are the names of regions that were not affected?", "query": "SELECT region_name FROM region WHERE region_id NOT IN (SELECT region_id FROM affected_region)"}
{"question": "Show the name for regions and the number of storms for each region.", "query": "SELECT T1.region_name ,  count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id"}
{"question": "How many storms occured in each region?", "query": "SELECT T1.region_name ,  count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id"}
{"question": "List the name for storms and the number of affected regions for each storm.", "query": "SELECT T1.name ,  count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id"}
{"question": "How many regions were affected by each storm?", "query": "SELECT T1.name ,  count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id"}
{"question": "What is the storm name and max speed which affected the greatest number of regions?", "query": "SELECT T1.name ,  T1.max_speed FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "Return the name and max speed of the storm that affected the most regions.", "query": "SELECT T1.name ,  T1.max_speed FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "Show the name of storms which don't have affected region in record.", "query": "SELECT name FROM storm WHERE storm_id NOT IN (SELECT storm_id FROM affected_region)"}
{"question": "What are the names of storms that did not affect any regions?", "query": "SELECT name FROM storm WHERE storm_id NOT IN (SELECT storm_id FROM affected_region)"}
{"question": "Show storm name with at least two regions and 10 cities affected.", "query": "SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id HAVING count(*)  >=  2 INTERSECT SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id HAVING sum(T2.number_city_affected)  >=  10"}
{"question": "What are the names of storms that both affected two or more regions and affected a total of 10 or more cities?", "query": "SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id HAVING count(*)  >=  2 INTERSECT SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id HAVING sum(T2.number_city_affected)  >=  10"}
{"question": "Show all storm names except for those with at least two affected regions.", "query": "SELECT name FROM storm EXCEPT SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id HAVING count(*)  >=  2"}
{"question": "What are the names of storms that did not affect two or more regions?", "query": "SELECT name FROM storm EXCEPT SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id HAVING count(*)  >=  2"}
{"question": "What are the region names affected by the storm with a number of deaths of least 10?", "query": "SELECT T2.region_name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id WHERE T3.number_deaths  >=  10"}
{"question": "Return the names of the regions affected by storms that had a death count of at least 10.", "query": "SELECT T2.region_name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id WHERE T3.number_deaths  >=  10"}
{"question": "Show all storm names affecting region \"Denmark\".", "query": "SELECT T3.name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id WHERE T2.region_name  =  'Denmark'"}
{"question": "What are the names of the storms that affected Denmark?", "query": "SELECT T3.name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id WHERE T2.region_name  =  'Denmark'"}
{"question": "Show the region name with at least two storms.", "query": "SELECT T1.region_name FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id HAVING count(*)  >=  2"}
{"question": "What are the names of regions with two or more storms?", "query": "SELECT T1.region_name FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id HAVING count(*)  >=  2"}
{"question": "Find the names of the regions which were affected by the storm that killed the greatest number of people.", "query": "SELECT T2.region_name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id ORDER BY T3.Number_Deaths DESC LIMIT 1"}
{"question": "What are the names of regions that were affected by the storm in which the most people died?", "query": "SELECT T2.region_name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id ORDER BY T3.Number_Deaths DESC LIMIT 1"}
{"question": "Find the name of the storm that affected both Afghanistan and Albania regions.", "query": "SELECT T3.Name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id WHERE T2.Region_name  =  'Afghanistan' INTERSECT SELECT T3.Name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id WHERE T2.Region_name  =  'Albania'"}
{"question": "What are the names of the storms that affected both the regions of Afghanistan and Albania?", "query": "SELECT T3.Name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id WHERE T2.Region_name  =  'Afghanistan' INTERSECT SELECT T3.Name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id WHERE T2.Region_name  =  'Albania'"}
{"question": "How many counties are there in total?", "query": "SELECT count(*) FROM county"}
{"question": "Count the total number of counties.", "query": "SELECT count(*) FROM county"}
{"question": "Show the county name and population of all counties.", "query": "SELECT County_name ,  Population FROM county"}
{"question": "What are the name and population of each county?", "query": "SELECT County_name ,  Population FROM county"}
{"question": "Show the average population of all counties.", "query": "SELECT avg(Population) FROM county"}
{"question": "On average how large is the population of the counties?", "query": "SELECT avg(Population) FROM county"}
{"question": "Return the maximum and minimum population among all counties.", "query": "SELECT max(Population) ,  min(Population) FROM county"}
{"question": "What are the maximum and minimum population of the counties?", "query": "SELECT max(Population) ,  min(Population) FROM county"}
{"question": "Show all the distinct districts for elections.", "query": "SELECT DISTINCT District FROM election"}
{"question": "What are the distinct districts for elections?", "query": "SELECT DISTINCT District FROM election"}
{"question": "Show the zip code of the county with name \"Howard\".", "query": "SELECT Zip_code FROM county WHERE County_name  =  \"Howard\""}
{"question": "What is the zip code the county named \"Howard\" is located in?", "query": "SELECT Zip_code FROM county WHERE County_name  =  \"Howard\""}
{"question": "Show the delegate from district 1 in election.", "query": "SELECT Delegate FROM election WHERE District  =  1"}
{"question": "Who is the delegate of district 1 in the elections?", "query": "SELECT Delegate FROM election WHERE District  =  1"}
{"question": "Show the delegate and committee information of elections.", "query": "SELECT Delegate ,  Committee FROM election"}
{"question": "What are the delegate and committee information for each election record?", "query": "SELECT Delegate ,  Committee FROM election"}
{"question": "How many distinct governors are there?", "query": "SELECT count(DISTINCT Governor) FROM party"}
{"question": "Count the number of distinct governors.", "query": "SELECT count(DISTINCT Governor) FROM party"}
{"question": "Show the lieutenant governor and comptroller from the democratic party.", "query": "SELECT Lieutenant_Governor ,  Comptroller FROM party WHERE Party  =  \"Democratic\""}
{"question": "Who are the lieutenant governor and comptroller from the democratic party?", "query": "SELECT Lieutenant_Governor ,  Comptroller FROM party WHERE Party  =  \"Democratic\""}
{"question": "In which distinct years was the governor \"Eliot Spitzer\"?", "query": "SELECT DISTINCT YEAR FROM party WHERE Governor  =  \"Eliot Spitzer\""}
{"question": "Find the distinct years when the governor was named \"Eliot Spitzer\".", "query": "SELECT DISTINCT YEAR FROM party WHERE Governor  =  \"Eliot Spitzer\""}
{"question": "Show all the information about election.", "query": "SELECT * FROM election"}
{"question": "Return all the information for each election record.", "query": "SELECT * FROM election"}
{"question": "Show the delegates and the names of county they belong to.", "query": "SELECT T2.Delegate ,  T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District"}
{"question": "What are the delegate and name of the county they belong to, for each county?", "query": "SELECT T2.Delegate ,  T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District"}
{"question": "Which delegates are from counties with population smaller than 100000?", "query": "SELECT T2.Delegate FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District WHERE T1.Population  <  100000"}
{"question": "Find the delegates who are from counties with population below 100000.", "query": "SELECT T2.Delegate FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District WHERE T1.Population  <  100000"}
{"question": "How many distinct delegates are from counties with population larger than 50000?", "query": "SELECT count(DISTINCT T2.Delegate) FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District WHERE T1.Population  >  50000"}
{"question": "Count the number of distinct delegates who are from counties with population above 50000.", "query": "SELECT count(DISTINCT T2.Delegate) FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District WHERE T1.Population  >  50000"}
{"question": "What are the names of the county that the delegates on \"Appropriations\" committee belong to?", "query": "SELECT T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District WHERE T2.Committee  =  \"Appropriations\""}
{"question": "Which county do the delegates on \"Appropriations\" committee belong to? Give me the county names.", "query": "SELECT T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District WHERE T2.Committee  =  \"Appropriations\""}
{"question": "Show the delegates and the names of the party they belong to.", "query": "SELECT T1.Delegate ,  T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID"}
{"question": "For each delegate, find the names of the party they are part of.", "query": "SELECT T1.Delegate ,  T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID"}
{"question": "Who were the governors of the parties associated with delegates from district 1?", "query": "SELECT T2.Governor FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T1.District  =  1"}
{"question": "Find the parties associated with the delegates from district 1. Who served as governors of the parties?", "query": "SELECT T2.Governor FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T1.District  =  1"}
{"question": "Who were the comptrollers of the parties associated with the delegates from district 1 or district 2?", "query": "SELECT T2.Comptroller FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T1.District  =  1 OR T1.District  =  2"}
{"question": "Find the parties associated with the delegates from district 1 or 2. Who served as comptrollers of the parties?", "query": "SELECT T2.Comptroller FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T1.District  =  1 OR T1.District  =  2"}
{"question": "Return all the committees that have delegates from Democratic party.", "query": "SELECT T1.Committee FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T2.Party  =  \"Democratic\""}
{"question": "Which committees have delegates from the Democratic party?", "query": "SELECT T1.Committee FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T2.Party  =  \"Democratic\""}
{"question": "Show the name of each county along with the corresponding number of delegates from that county.", "query": "SELECT T1.County_name ,  COUNT(*) FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District GROUP BY T1.County_id"}
{"question": "For each county, find the name of the county and the number of delegates from that county.", "query": "SELECT T1.County_name ,  COUNT(*) FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District GROUP BY T1.County_id"}
{"question": "Show the name of each party and the corresponding number of delegates from that party.", "query": "SELECT T2.Party ,  COUNT(*) FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID GROUP BY T1.Party"}
{"question": "For each party, return the name of the party and the number of delegates from that party.", "query": "SELECT T2.Party ,  COUNT(*) FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID GROUP BY T1.Party"}
{"question": "Return the names of all counties sorted by population in ascending order.", "query": "SELECT County_name FROM county ORDER BY Population ASC"}
{"question": "Sort the names of all counties in ascending order of population.", "query": "SELECT County_name FROM county ORDER BY Population ASC"}
{"question": "Return the names of all counties sorted by county name in descending alphabetical order.", "query": "SELECT County_name FROM county ORDER BY County_name DESC"}
{"question": "Sort the names of all counties in descending alphabetical order.", "query": "SELECT County_name FROM county ORDER BY County_name DESC"}
{"question": "Show the name of the county with the biggest population.", "query": "SELECT County_name FROM county ORDER BY Population DESC LIMIT 1"}
{"question": "Which county has the largest population? Give me the name of the county.", "query": "SELECT County_name FROM county ORDER BY Population DESC LIMIT 1"}
{"question": "Show the 3 counties with the smallest population.", "query": "SELECT County_name FROM county ORDER BY Population ASC LIMIT 3"}
{"question": "What are the 3 counties that have the smallest population? Give me the county names.", "query": "SELECT County_name FROM county ORDER BY Population ASC LIMIT 3"}
{"question": "Show the names of counties that have at least two delegates.", "query": "SELECT T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District GROUP BY T1.County_id HAVING COUNT(*)  >=  2"}
{"question": "Which counties have two or more delegates? Give me the county names.", "query": "SELECT T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District GROUP BY T1.County_id HAVING COUNT(*)  >=  2"}
{"question": "Show the name of the party that has at least two records.", "query": "SELECT Party FROM party GROUP BY Party HAVING COUNT(*)  >=  2"}
{"question": "Which party has two or more records?", "query": "SELECT Party FROM party GROUP BY Party HAVING COUNT(*)  >=  2"}
{"question": "Show the name of the party that has the most delegates.", "query": "SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID GROUP BY T1.Party ORDER BY COUNT(*) DESC LIMIT 1"}
{"question": "Which party has the largest number of delegates?", "query": "SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID GROUP BY T1.Party ORDER BY COUNT(*) DESC LIMIT 1"}
{"question": "Show the people that have been governor the most times.", "query": "SELECT Governor FROM party GROUP BY Governor ORDER BY COUNT(*) DESC LIMIT 1"}
{"question": "Which people severed as governor most frequently?", "query": "SELECT Governor FROM party GROUP BY Governor ORDER BY COUNT(*) DESC LIMIT 1"}
{"question": "Show the people that have been comptroller the most times and the corresponding number of times.", "query": "SELECT Comptroller ,  COUNT(*) FROM party GROUP BY Comptroller ORDER BY COUNT(*) DESC LIMIT 1"}
{"question": "Which people severed as comptroller most frequently? Give me the name of the person and the frequency count.", "query": "SELECT Comptroller ,  COUNT(*) FROM party GROUP BY Comptroller ORDER BY COUNT(*) DESC LIMIT 1"}
{"question": "What are the names of parties that do not have delegates in election?", "query": "SELECT Party FROM party WHERE Party_ID NOT IN (SELECT Party FROM election)"}
{"question": "Which parties did not have any delegates in elections?", "query": "SELECT Party FROM party WHERE Party_ID NOT IN (SELECT Party FROM election)"}
{"question": "What are the names of parties that have both delegates on \"Appropriations\" committee and", "query": "SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T1.Committee  =  \"Appropriations\" INTERSECT SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T1.Committee  =  \"Economic Matters\""}
{"question": "Which parties have delegates in both the \"Appropriations\" committee and the \"Economic Matters\" committee?", "query": "SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T1.Committee  =  \"Appropriations\" INTERSECT SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T1.Committee  =  \"Economic Matters\""}
{"question": "Which committees have delegates from both democratic party and liberal party?", "query": "SELECT T1.Committee FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T2.Party  =  \"Democratic\" INTERSECT SELECT T1.Committee FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T2.Party  =  \"Liberal\""}
{"question": "Find the committees that have delegates both from from the democratic party and the liberal party.", "query": "SELECT T1.Committee FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T2.Party  =  \"Democratic\" INTERSECT SELECT T1.Committee FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T2.Party  =  \"Liberal\""}
{"question": "How many journalists are there?", "query": "SELECT count(*) FROM journalist"}
{"question": "List the names of journalists in ascending order of years working.", "query": "SELECT Name FROM journalist ORDER BY Years_working ASC"}
{"question": "What are the nationalities and ages of journalists?", "query": "SELECT Nationality ,  Age FROM journalist"}
{"question": "Show the names of journalists from \"England\" or \"Wales\".", "query": "SELECT Name FROM journalist WHERE Nationality  =  \"England\" OR Nationality  =  \"Wales\""}
{"question": "What is the average number of years spent working as a journalist?", "query": "SELECT avg(Years_working) FROM journalist"}
{"question": "What is the nationality of the journalist with the largest number of years working?", "query": "SELECT Nationality FROM journalist ORDER BY Years_working DESC LIMIT 1"}
{"question": "Show the different nationalities and the number of journalists of each nationality.", "query": "SELECT Nationality ,  COUNT(*) FROM journalist GROUP BY Nationality"}
{"question": "Show the most common nationality for journalists.", "query": "SELECT Nationality FROM journalist GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1"}
{"question": "Show the nations that have both journalists with more than 10 years of working and journalists with less than 3 years of working.", "query": "SELECT Nationality FROM journalist WHERE Years_working  >  10 INTERSECT SELECT Nationality FROM journalist WHERE Years_working  <  3"}
{"question": "Show the dates, places, and names of events in descending order of the attendance.", "query": "SELECT Date ,  Name ,  venue FROM event ORDER BY Event_Attendance DESC"}
{"question": "Show the names of journalists and the dates of the events they reported.", "query": "SELECT T3.Name ,  T2.Date FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID  =  T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID  =  T3.journalist_ID"}
{"question": "Show the names of journalists and the names of the events they reported in ascending order", "query": "SELECT T3.Name ,  T2.Name FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID  =  T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID  =  T3.journalist_ID ORDER BY T2.Event_Attendance ASC"}
{"question": "Show the names of journalists and the number of events they reported.", "query": "SELECT T3.Name ,  COUNT(*) FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID  =  T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID  =  T3.journalist_ID GROUP BY T3.Name"}
{"question": "Show the names of journalists that have reported more than one event.", "query": "SELECT T3.Name FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID  =  T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID  =  T3.journalist_ID GROUP BY T3.Name HAVING COUNT(*)  >  1"}
{"question": "List the names of journalists who have not reported any event.", "query": "SELECT Name FROM journalist WHERE journalist_ID NOT IN (SELECT journalist_ID FROM news_report)"}
{"question": "what are the average and maximum attendances of all events?", "query": "SELECT avg(Event_Attendance) ,  max(Event_Attendance) FROM event"}
{"question": "Find the average age and experience working length of journalists working on different role type.", "query": "SELECT avg(t1.age) ,  avg(Years_working) ,  t2.work_type FROM journalist AS t1 JOIN news_report AS t2 ON t1.journalist_id  =  t2.journalist_id GROUP BY t2.work_type"}
{"question": "List the event venues and names that have the top 2 most number of people attended.", "query": "SELECT venue ,  name FROM event ORDER BY Event_Attendance DESC LIMIT 2"}
{"question": "Show me all the restaurants.", "query": "SELECT ResName FROM Restaurant;"}
{"question": "What is the address of the restaurant Subway?", "query": "SELECT Address FROM Restaurant WHERE ResName = \"Subway\";"}
{"question": "What is the rating of the restaurant Subway?", "query": "SELECT Rating FROM Restaurant WHERE ResName = \"Subway\";"}
{"question": "List all restaurant types.", "query": "SELECT ResTypeName FROM Restaurant_Type;"}
{"question": "What is the description of the restaurant type Sandwich?", "query": "SELECT ResTypeDescription FROM Restaurant_Type WHERE ResTypeName = \"Sandwich\";"}
{"question": "Which restaurants have highest rating? List the restaurant name and its rating.", "query": "SELECT ResName , Rating FROM Restaurant ORDER BY Rating DESC LIMIT 1;"}
{"question": "What is the age of student Linda Smith?", "query": "SELECT Age FROM Student WHERE Fname = \"Linda\" AND Lname = \"Smith\";"}
{"question": "What is the gender of the student Linda Smith?", "query": "SELECT Sex FROM Student WHERE Fname = \"Linda\" AND Lname = \"Smith\";"}
{"question": "List all students' first names and last names who majored in 600.", "query": "SELECT Fname , Lname FROM Student WHERE Major  =  600;"}
{"question": "Which city does student Linda Smith live in?", "query": "SELECT city_code FROM Student WHERE Fname = \"Linda\" AND Lname = \"Smith\";"}
{"question": "Advisor 1121 has how many students?", "query": "SELECT count(*) FROM Student WHERE Advisor =  1121;"}
{"question": "Which Advisor has most of students? List advisor and the number of students.", "query": "SELECT Advisor ,  count(*) FROM Student GROUP BY Advisor ORDER BY count(Advisor) DESC LIMIT 1;"}
{"question": "Which major has least number of students? List the major and the number of students.", "query": "SELECT Major ,  count(*) FROM Student GROUP BY Major ORDER BY count(Major) ASC LIMIT 1;"}
{"question": "Which major has between 2 and 30 number of students? List major and the number of students.", "query": "SELECT Major ,  count(*) FROM Student GROUP BY Major HAVING count(Major) BETWEEN 2 AND 30;"}
{"question": "Which student's age is older than 18 and is majoring in 600? List each student's first and last name.", "query": "SELECT Fname , Lname FROM Student WHERE Age  >  18 AND Major = 600;"}
{"question": "List all female students age is older than 18 who is not majoring in 600. List students' first name and last name.", "query": "SELECT Fname , Lname FROM Student WHERE Age  >  18 AND Major != 600 AND Sex = 'F';"}
{"question": "How many restaurant is the Sandwich type restaurant?", "query": "SELECT count(*) FROM Restaurant JOIN Type_Of_Restaurant ON Restaurant.ResID =  Type_Of_Restaurant.ResID JOIN Restaurant_Type ON Type_Of_Restaurant.ResTypeID = Restaurant_Type.ResTypeID GROUP BY Type_Of_Restaurant.ResTypeID HAVING Restaurant_Type.ResTypeName = 'Sandwich'"}
{"question": "How long does student Linda Smith spend on the restaurant in total?", "query": "SELECT sum(Spent) FROM Student JOIN Visits_Restaurant ON Student.StuID = Visits_Restaurant.StuID WHERE Student.Fname = \"Linda\" AND Student.Lname = \"Smith\";"}
{"question": "How many times has the student Linda Smith visited Subway?", "query": "SELECT count(*) FROM Student JOIN Visits_Restaurant ON Student.StuID = Visits_Restaurant.StuID JOIN Restaurant ON Visits_Restaurant.ResID = Restaurant.ResID WHERE Student.Fname = \"Linda\" AND Student.Lname = \"Smith\" AND Restaurant.ResName = \"Subway\";"}
{"question": "When did Linda Smith visit Subway?", "query": "SELECT TIME FROM Student JOIN Visits_Restaurant ON Student.StuID = Visits_Restaurant.StuID JOIN Restaurant ON Visits_Restaurant.ResID = Restaurant.ResID WHERE Student.Fname = \"Linda\" AND Student.Lname = \"Smith\" AND Restaurant.ResName = \"Subway\";"}
{"question": "At which restaurant did the students spend the least amount of time? List restaurant and the time students spent on in total.", "query": "SELECT Restaurant.ResName ,  sum(Visits_Restaurant.Spent) FROM Visits_Restaurant JOIN Restaurant ON Visits_Restaurant.ResID = Restaurant.ResID GROUP BY Restaurant.ResID ORDER BY sum(Visits_Restaurant.Spent) ASC LIMIT 1;"}
{"question": "Which student visited restaurant most often? List student's first name and last name.", "query": "SELECT Student.Fname , Student.Lname FROM Student JOIN Visits_Restaurant ON Student.StuID = Visits_Restaurant.StuID GROUP BY Student.StuID ORDER BY count(*) DESC LIMIT 1;"}
{"question": "Find the ids of orders whose status is 'Success'.", "query": "SELECT actual_order_id FROM actual_orders WHERE order_status_code  =  'Success'"}
{"question": "Find the name and price of the product that has been ordered the greatest number of times.", "query": "SELECT t1.product_name ,   t1.product_price FROM products AS t1 JOIN regular_order_products AS t2 ON t1.product_id  =  t2.product_id GROUP BY t2.product_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "Find the number of customers in total.", "query": "SELECT count(*) FROM customers"}
{"question": "How many different payment methods are there?", "query": "SELECT count(DISTINCT payment_method) FROM customers"}
{"question": "Show the details of all trucks in the order of their license number.", "query": "SELECT truck_details FROM trucks ORDER BY truck_licence_number"}
{"question": "Find the name of the most expensive product.", "query": "SELECT product_name FROM products ORDER BY product_price DESC LIMIT 1"}
{"question": "Find the names of customers who are not living in the state of California.", "query": "SELECT customer_name FROM customers EXCEPT SELECT t1.customer_name FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id WHERE t3.state_province_county  =  'California'"}
{"question": "List the names and emails of customers who payed by Visa card.", "query": "SELECT customer_email ,  customer_name FROM customers WHERE payment_method  =  'Visa'"}
{"question": "Find the names and phone numbers of customers living in California state.", "query": "SELECT t1.customer_name ,  t1.customer_phone FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id WHERE t3.state_province_county  =  'California'"}
{"question": "Find the states which do not have any employee in their record.", "query": "SELECT state_province_county FROM addresses WHERE address_id NOT IN (SELECT employee_address_id FROM Employees)"}
{"question": "List the names, phone numbers, and emails of all customers sorted by their dates of becoming customers.", "query": "SELECT customer_name ,  customer_phone ,  customer_email FROM Customers ORDER BY date_became_customer"}
{"question": "Find the name of the first 5 customers.", "query": "SELECT customer_name FROM Customers ORDER BY date_became_customer LIMIT 5"}
{"question": "Find the payment method that is used most frequently.", "query": "SELECT payment_method FROM Customers GROUP BY payment_method ORDER BY count(*) DESC LIMIT 1"}
{"question": "List the names of all routes in alphabetic order.", "query": "SELECT route_name FROM Delivery_Routes ORDER BY route_name"}
{"question": "Find the name of route that has the highest number of deliveries.", "query": "SELECT t1.route_name FROM Delivery_Routes AS t1 JOIN Delivery_Route_Locations AS t2 ON t1.route_id  =  t2.route_id GROUP BY t1.route_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "List the state names and the number of customers living in each state.", "query": "SELECT t2.state_province_county ,  count(*) FROM customer_addresses AS t1 JOIN addresses AS t2 ON t1.address_id  =  t2.address_id GROUP BY t2.state_province_county"}
{"question": "How many authors are there?", "query": "SELECT count(*) FROM authors"}
{"question": "Count the number of authors.", "query": "SELECT count(*) FROM authors"}
{"question": "How many institutions are there?", "query": "SELECT count(*) FROM inst"}
{"question": "Count the number of institutions.", "query": "SELECT count(*) FROM inst"}
{"question": "How many papers are published in total?", "query": "SELECT count(*) FROM papers"}
{"question": "Count the number of total papers.", "query": "SELECT count(*) FROM papers"}
{"question": "What are the titles of papers published by \"Jeremy Gibbons\"?", "query": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE  t1.fname  =  \"Jeremy\" AND t1.lname  =  \"Gibbons\""}
{"question": "Find the titles of all the papers written by \"Jeremy Gibbons\"", "query": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE  t1.fname  =  \"Jeremy\" AND t1.lname  =  \"Gibbons\""}
{"question": "Find all the papers published by \"Aaron Turon\".", "query": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE  t1.fname  =  \"Aaron\" AND t1.lname  =  \"Turon\""}
{"question": "Find the titles of all the papers written by \"Aaron Turon\".", "query": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE  t1.fname  =  \"Aaron\" AND t1.lname  =  \"Turon\""}
{"question": "How many papers have \"Atsushi Ohori\" published?", "query": "SELECT count(*) FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE  t1.fname  =  \"Atsushi\" AND t1.lname  =  \"Ohori\""}
{"question": "How many papers are \"Atsushi Ohori\" the author of?", "query": "SELECT count(*) FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE  t1.fname  =  \"Atsushi\" AND t1.lname  =  \"Ohori\""}
{"question": "What is the name of the institution that \"Matthias Blume\" belongs to?", "query": "SELECT DISTINCT t3.name FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t1.fname  =  \"Matthias\" AND t1.lname  =  \"Blume\""}
{"question": "Which institution is the author \"Matthias Blume\" belong to? Give me the name of the institution.", "query": "SELECT DISTINCT t3.name FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t1.fname  =  \"Matthias\" AND t1.lname  =  \"Blume\""}
{"question": "Which institution does \"Katsuhiro Ueno\" belong to?", "query": "SELECT DISTINCT t3.name FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t1.fname  =  \"Katsuhiro\" AND t1.lname  =  \"Ueno\""}
{"question": "What is the name of the institution the author \"Katsuhiro Ueno\" belongs to?", "query": "SELECT DISTINCT t3.name FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t1.fname  =  \"Katsuhiro\" AND t1.lname  =  \"Ueno\""}
{"question": "Who belong to the institution \"University of Oxford\"? Show the first names and last names.", "query": "SELECT DISTINCT t1.fname ,  t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"University of Oxford\""}
{"question": "Find the first names and last names of the authors whose institution affiliation is \"University of Oxford\".", "query": "SELECT DISTINCT t1.fname ,  t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"University of Oxford\""}
{"question": "Which authors belong to the institution \"Google\"? Show the first names and last names.", "query": "SELECT DISTINCT t1.fname ,  t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"Google\""}
{"question": "Find the first names and last names of the authors whose institution affiliation is \"Google\".", "query": "SELECT DISTINCT t1.fname ,  t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"Google\""}
{"question": "What are the last names of the author of the paper titled \"Binders Unbound\"?", "query": "SELECT t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t3.title  =  \"Binders Unbound\""}
{"question": "Who is the author of the paper titled \"Binders Unbound\"? Give me the last name.", "query": "SELECT t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t3.title  =  \"Binders Unbound\""}
{"question": "Find the first and last name of the author(s) who wrote the paper \"Nameless, Painless\".", "query": "SELECT t1.fname ,  t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t3.title  =  \"Nameless ,  Painless\""}
{"question": "What are the first and last name of the author who published the paper titled \"Nameless, Painless\"?", "query": "SELECT t1.fname ,  t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t3.title  =  \"Nameless ,  Painless\""}
{"question": "What are the papers published under the institution \"Indiana University\"?", "query": "SELECT DISTINCT t1.title FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid  =  t2.paperid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"Indiana University\""}
{"question": "List the titles of the papers whose authors are from the institution \"Indiana University\".", "query": "SELECT DISTINCT t1.title FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid  =  t2.paperid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"Indiana University\""}
{"question": "Find all the papers published by the institution \"Google\".", "query": "SELECT DISTINCT t1.title FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid  =  t2.paperid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"Google\""}
{"question": "Which papers were written by authors from the institution \"Google\"?", "query": "SELECT DISTINCT t1.title FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid  =  t2.paperid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"Google\""}
{"question": "How many papers are published by the institution \"Tokohu University\"?", "query": "SELECT count(DISTINCT t1.title) FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid  =  t2.paperid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"Tokohu University\""}
{"question": "Find the number of papers published by authors from the institution \"Tokohu University\".", "query": "SELECT count(DISTINCT t1.title) FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid  =  t2.paperid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"Tokohu University\""}
{"question": "Find the number of papers published by the institution \"University of Pennsylvania\".", "query": "SELECT count(DISTINCT t1.title) FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid  =  t2.paperid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"University of Pennsylvania\""}
{"question": "How many papers are written by authors from the institution \"University of Pennsylvania\"?", "query": "SELECT count(DISTINCT t1.title) FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid  =  t2.paperid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"University of Pennsylvania\""}
{"question": "Find the papers which have \"Olin Shivers\" as an author.", "query": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t1.fname  =  \"Olin\" AND t1.lname  =  \"Shivers\""}
{"question": "Which papers did the author \"Olin Shivers\" write? Give me the paper titles.", "query": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t1.fname  =  \"Olin\" AND t1.lname  =  \"Shivers\""}
{"question": "Which papers have \"Stephanie Weirich\" as an author?", "query": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t1.fname  =  \"Stephanie\" AND t1.lname  =  \"Weirich\""}
{"question": "Find the titles of the papers the author \"Stephanie Weirich\" wrote.", "query": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t1.fname  =  \"Stephanie\" AND t1.lname  =  \"Weirich\""}
{"question": "Which paper is published in an institution in \"USA\" and have \"Turon\" as its second author?", "query": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid JOIN inst AS t4 ON t2.instid  =  t4.instid WHERE t4.country  =  \"USA\" AND t2.authorder  =  2 AND t1.lname  =  \"Turon\""}
{"question": "Find papers whose second author has last name \"Turon\" and is affiliated with an institution in the country \"USA\".", "query": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid JOIN inst AS t4 ON t2.instid  =  t4.instid WHERE t4.country  =  \"USA\" AND t2.authorder  =  2 AND t1.lname  =  \"Turon\""}
{"question": "Find the titles of papers whose first author is affiliated with an institution in the country \"Japan\" and has last name \"Ohori\"?", "query": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid JOIN inst AS t4 ON t2.instid  =  t4.instid WHERE t4.country  =  \"Japan\" AND t2.authorder  =  1 AND t1.lname  =  \"Ohori\""}
{"question": "Which papers' first author is affiliated with an institution in the country \"Japan\" and has last name \"Ohori\"? Give me the titles of the papers.", "query": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid JOIN inst AS t4 ON t2.instid  =  t4.instid WHERE t4.country  =  \"Japan\" AND t2.authorder  =  1 AND t1.lname  =  \"Ohori\""}
{"question": "What is the last name of the author that has published the most papers?", "query": "SELECT t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid GROUP BY t1.fname ,  t1.lname ORDER BY count(*) DESC LIMIT 1"}
{"question": "Which author has written the most papers? Find his or her last name.", "query": "SELECT t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid GROUP BY t1.fname ,  t1.lname ORDER BY count(*) DESC LIMIT 1"}
{"question": "Retrieve the country that has published the most papers.", "query": "SELECT t1.country FROM inst AS t1 JOIN authorship AS t2 ON t1.instid  =  t2.instid JOIN papers AS t3 ON t2.paperid  =  t3.paperid GROUP BY t1.country ORDER BY count(*) DESC LIMIT 1"}
{"question": "Find the country that the most papers are affiliated with.", "query": "SELECT t1.country FROM inst AS t1 JOIN authorship AS t2 ON t1.instid  =  t2.instid JOIN papers AS t3 ON t2.paperid  =  t3.paperid GROUP BY t1.country ORDER BY count(*) DESC LIMIT 1"}
{"question": "Find the name of the organization that has published the largest number of papers.", "query": "SELECT t1.name FROM inst AS t1 JOIN authorship AS t2 ON t1.instid  =  t2.instid JOIN papers AS t3 ON t2.paperid  =  t3.paperid GROUP BY t1.name ORDER BY count(*) DESC LIMIT 1"}
{"question": "Which institution has the most papers? Find the name of the institution.", "query": "SELECT t1.name FROM inst AS t1 JOIN authorship AS t2 ON t1.instid  =  t2.instid JOIN papers AS t3 ON t2.paperid  =  t3.paperid GROUP BY t1.name ORDER BY count(*) DESC LIMIT 1"}
{"question": "Find the titles of the papers that contain the word \"ML\".", "query": "SELECT title FROM papers WHERE title LIKE \"%ML%\""}
{"question": "Which papers have the substring \"ML\" in their titles? Return the titles of the papers.", "query": "SELECT title FROM papers WHERE title LIKE \"%ML%\""}
{"question": "Which paper's title contains the word \"Database\"?", "query": "SELECT title FROM papers WHERE title LIKE \"%Database%\""}
{"question": "Which papers have the substring \"Database\" in their titles? Show the titles of the papers.", "query": "SELECT title FROM papers WHERE title LIKE \"%Database%\""}
{"question": "Find the first names of all the authors who have written a paper with title containing the word \"Functional\".", "query": "SELECT t1.fname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t3.title LIKE \"%Functional%\""}
{"question": "Who has written a paper that has the word \"Functional\" in its title? Return the first names of the authors.", "query": "SELECT t1.fname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t3.title LIKE \"%Functional%\""}
{"question": "Find the last names of all the authors that have written a paper with title containing the word \"Monadic\".", "query": "SELECT t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t3.title LIKE \"%Monadic%\""}
{"question": "Which authors have written a paper with title containing the word \"Monadic\"? Return their last names.", "query": "SELECT t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t3.title LIKE \"%Monadic%\""}
{"question": "Retrieve the title of the paper that has the largest number of authors.", "query": "SELECT t2.title FROM authorship AS t1 JOIN papers AS t2 ON t1.paperid  =  t2.paperid WHERE t1.authorder  =  (SELECT max(authorder) FROM authorship)"}
{"question": "Which paper has the most authors? Give me the paper title.", "query": "SELECT t2.title FROM authorship AS t1 JOIN papers AS t2 ON t1.paperid  =  t2.paperid WHERE t1.authorder  =  (SELECT max(authorder) FROM authorship)"}
{"question": "What is the first name of the author with last name \"Ueno\"?", "query": "SELECT fname FROM authors WHERE lname  =  \"Ueno\""}
{"question": "Which authors have last name \"Ueno\"? List their first names.", "query": "SELECT fname FROM authors WHERE lname  =  \"Ueno\""}
{"question": "Find the last name of the author with first name \"Amal\".", "query": "SELECT lname FROM authors WHERE fname  =  \"Amal\""}
{"question": "Which authors have first name \"Amal\"? List their last names.", "query": "SELECT lname FROM authors WHERE fname  =  \"Amal\""}
{"question": "Find the first names of all the authors ordered in alphabetical order.", "query": "SELECT fname FROM authors ORDER BY fname"}
{"question": "Sort the first names of all the authors in alphabetical order.", "query": "SELECT fname FROM authors ORDER BY fname"}
{"question": "Retrieve all the last names of authors in alphabetical order.", "query": "SELECT lname FROM authors ORDER BY lname"}
{"question": "Give me a list of all the last names of authors sorted in alphabetical order", "query": "SELECT lname FROM authors ORDER BY lname"}
{"question": "Retrieve all the first and last names of authors in the alphabetical order of last names.", "query": "SELECT fname ,  lname FROM authors ORDER BY lname"}
{"question": "Sort the list of all the first and last names of authors in alphabetical order of the last names.", "query": "SELECT fname ,  lname FROM authors ORDER BY lname"}
{"question": "How many different last names do the actors and actresses have?", "query": "SELECT count(DISTINCT last_name) FROM actor"}
{"question": "Count the number of different last names actors have.", "query": "SELECT count(DISTINCT last_name) FROM actor"}
{"question": "What is the most popular first name of the actors?", "query": "SELECT first_name FROM actor GROUP BY first_name ORDER BY count(*) DESC LIMIT 1"}
{"question": "Return the most common first name among all actors.", "query": "SELECT first_name FROM actor GROUP BY first_name ORDER BY count(*) DESC LIMIT 1"}
{"question": "What is the most popular full name of the actors?", "query": "SELECT first_name ,  last_name FROM actor GROUP BY first_name ,  last_name ORDER BY count(*) DESC LIMIT 1"}
{"question": "Return the most common full name among all actors.", "query": "SELECT first_name ,  last_name FROM actor GROUP BY first_name ,  last_name ORDER BY count(*) DESC LIMIT 1"}
{"question": "Which districts have at least two addresses?", "query": "SELECT district FROM address GROUP BY district HAVING count(*)  >=  2"}
{"question": "Give the districts which have two or more addresses.", "query": "SELECT district FROM address GROUP BY district HAVING count(*)  >=  2"}
{"question": "What is the phone number and postal code of the address 1031 Daugavpils Parkway?", "query": "SELECT phone ,  postal_code FROM address WHERE address  =  '1031 Daugavpils Parkway'"}
{"question": "Give the phone and postal code corresponding to the address '1031 Daugavpils Parkway'.", "query": "SELECT phone ,  postal_code FROM address WHERE address  =  '1031 Daugavpils Parkway'"}
{"question": "Which city has the most addresses? List the city name, number of addresses, and city id.", "query": "SELECT T2.city ,  count(*) ,  T1.city_id FROM address AS T1 JOIN city AS T2 ON T1.city_id  =  T2.city_id GROUP BY T1.city_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "What are the city name, id, and number of addresses corresponding to the city with the most addressed?", "query": "SELECT T2.city ,  count(*) ,  T1.city_id FROM address AS T1 JOIN city AS T2 ON T1.city_id  =  T2.city_id GROUP BY T1.city_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "How many addresses are in the district of California?", "query": "SELECT count(*) FROM address WHERE district  =  'California'"}
{"question": "Count the number of addressed in the California district.", "query": "SELECT count(*) FROM address WHERE district  =  'California'"}
{"question": "Which film is rented at a fee of 0.99 and has less than 3 in the inventory? List the film title and id.", "query": "SELECT title ,  film_id FROM film WHERE rental_rate  =  0.99 INTERSECT SELECT T1.title ,  T1.film_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id  =  T2.film_id GROUP BY T1.film_id HAVING count(*)  <  3"}
{"question": "What are the title and id of the film which has a rental rate of 0.99 and an inventory of below 3?", "query": "SELECT title ,  film_id FROM film WHERE rental_rate  =  0.99 INTERSECT SELECT T1.title ,  T1.film_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id  =  T2.film_id GROUP BY T1.film_id HAVING count(*)  <  3"}
{"question": "How many cities are in Australia?", "query": "SELECT count(*) FROM city AS T1 JOIN country AS T2 ON T1.country_id  =  T2.country_id WHERE T2.country  =  'Australia'"}
{"question": "Count the number of cities in Australia.", "query": "SELECT count(*) FROM city AS T1 JOIN country AS T2 ON T1.country_id  =  T2.country_id WHERE T2.country  =  'Australia'"}
{"question": "Which countries have at least 3 cities?", "query": "SELECT T2.country FROM city AS T1 JOIN country AS T2 ON T1.country_id  =  T2.country_id GROUP BY T2.country_id HAVING count(*)  >=  3"}
{"question": "What are the countries that contain 3 or more cities?", "query": "SELECT T2.country FROM city AS T1 JOIN country AS T2 ON T1.country_id  =  T2.country_id GROUP BY T2.country_id HAVING count(*)  >=  3"}
{"question": "Find all the payment dates for the payments with an amount larger than 10 and the payments handled by a staff person with the first name Elsa.", "query": "SELECT payment_date FROM payment WHERE amount  >  10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.first_name  =  'Elsa'"}
{"question": "What are the payment dates for any payments that have an amount greater than 10 or were handled by a staff member with the first name Elsa?", "query": "SELECT payment_date FROM payment WHERE amount  >  10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.first_name  =  'Elsa'"}
{"question": "How many customers have an active value of 1?", "query": "SELECT count(*) FROM customer WHERE active = '1'"}
{"question": "Count the number of customers who are active.", "query": "SELECT count(*) FROM customer WHERE active = '1'"}
{"question": "Which film has the highest rental rate? And what is the rate?", "query": "SELECT title ,  rental_rate FROM film ORDER BY rental_rate DESC LIMIT 1"}
{"question": "What are the title and rental rate of the film with the highest rental rate?", "query": "SELECT title ,  rental_rate FROM film ORDER BY rental_rate DESC LIMIT 1"}
{"question": "Which film has the most number of actors or actresses? List the film name, film id and description.", "query": "SELECT T2.title ,  T2.film_id ,  T2.description FROM film_actor AS T1 JOIN film AS T2 ON T1.film_id  =  T2.film_id GROUP BY T2.film_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "What are the title, id, and description of the movie with the greatest number of actors?", "query": "SELECT T2.title ,  T2.film_id ,  T2.description FROM film_actor AS T1 JOIN film AS T2 ON T1.film_id  =  T2.film_id GROUP BY T2.film_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "Which film actor (actress) starred the most films? List his or her first name, last name and actor id.", "query": "SELECT T2.first_name ,  T2.last_name ,  T2.actor_id FROM film_actor AS T1 JOIN actor AS T2 ON T1.actor_id  =  T2.actor_id GROUP BY T2.actor_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "Return the full name and id of the actor or actress who starred in the greatest number of films.", "query": "SELECT T2.first_name ,  T2.last_name ,  T2.actor_id FROM film_actor AS T1 JOIN actor AS T2 ON T1.actor_id  =  T2.actor_id GROUP BY T2.actor_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "Which film actors (actresses) played a role in more than 30 films? List his or her first name and last name.", "query": "SELECT T2.first_name ,  T2.last_name FROM film_actor AS T1 JOIN actor AS T2 ON T1.actor_id  =  T2.actor_id GROUP BY T2.actor_id HAVING count(*)  >  30"}
{"question": "What are the full names of actors who had roles in more than 30 films?", "query": "SELECT T2.first_name ,  T2.last_name FROM film_actor AS T1 JOIN actor AS T2 ON T1.actor_id  =  T2.actor_id GROUP BY T2.actor_id HAVING count(*)  >  30"}
{"question": "Which store owns most items?", "query": "SELECT store_id FROM inventory GROUP BY store_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "What is the id of the store that has the most items in inventory?", "query": "SELECT store_id FROM inventory GROUP BY store_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "What is the total amount of all payments?", "query": "SELECT sum(amount) FROM payment"}
{"question": "Return the sum of all payment amounts.", "query": "SELECT sum(amount) FROM payment"}
{"question": "Which customer, who has made at least one payment, has spent the least money? List his or her first name, last name, and the id.", "query": "SELECT T1.first_name ,  T1.last_name ,  T1.customer_id FROM customer AS T1 JOIN payment AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY sum(amount) ASC LIMIT 1"}
{"question": "What is the full name and id of the customer who has the lowest total amount of payment?", "query": "SELECT T1.first_name ,  T1.last_name ,  T1.customer_id FROM customer AS T1 JOIN payment AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY sum(amount) ASC LIMIT 1"}
{"question": "What is the genre name of the film HUNGER ROOF?", "query": "SELECT T1.name FROM category AS T1 JOIN film_category AS T2 ON T1.category_id  =  T2.category_id JOIN film AS T3 ON T2.film_id  =  T3.film_id WHERE T3.title  =  'HUNGER ROOF'"}
{"question": "Return the name of the category to which the film 'HUNGER ROOF' belongs.", "query": "SELECT T1.name FROM category AS T1 JOIN film_category AS T2 ON T1.category_id  =  T2.category_id JOIN film AS T3 ON T2.film_id  =  T3.film_id WHERE T3.title  =  'HUNGER ROOF'"}
{"question": "How many films are there in each category? List the genre name, genre id and the count.", "query": "SELECT T2.name ,  T1.category_id ,  count(*) FROM film_category AS T1 JOIN category AS T2 ON T1.category_id  =  T2.category_id GROUP BY T1.category_id"}
{"question": "What are the names and ids of the different categories, and how many films are in each?", "query": "SELECT T2.name ,  T1.category_id ,  count(*) FROM film_category AS T1 JOIN category AS T2 ON T1.category_id  =  T2.category_id GROUP BY T1.category_id"}
{"question": "Which film has the most copies in the inventory? List both title and id.", "query": "SELECT T1.title ,  T1.film_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id  =  T2.film_id GROUP BY T1.film_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "What is the title and id of the film that has the greatest number of copies in inventory?", "query": "SELECT T1.title ,  T1.film_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id  =  T2.film_id GROUP BY T1.film_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "What is the film title and inventory id of the item in the inventory which was rented most frequently?", "query": "SELECT T1.title ,  T2.inventory_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id  =  T2.film_id JOIN rental AS T3 ON T2.inventory_id  =  T3.inventory_id GROUP BY T2.inventory_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "Return the title and inventory id of the film that is rented most often.", "query": "SELECT T1.title ,  T2.inventory_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id  =  T2.film_id JOIN rental AS T3 ON T2.inventory_id  =  T3.inventory_id GROUP BY T2.inventory_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "How many languages are in these films?", "query": "SELECT count(DISTINCT language_id) FROM film"}
{"question": "Count the number of different languages in these films.", "query": "SELECT count(DISTINCT language_id) FROM film"}
{"question": "What are all the movies rated as R? List the titles.", "query": "SELECT title FROM film WHERE rating  =  'R'"}
{"question": "Return the titles of any movies with an R rating.", "query": "SELECT title FROM film WHERE rating  =  'R'"}
{"question": "Where is store 1 located?", "query": "SELECT T2.address FROM store AS T1 JOIN address AS T2 ON T1.address_id  =  T2.address_id WHERE store_id  =  1"}
{"question": "Return the address of store 1.", "query": "SELECT T2.address FROM store AS T1 JOIN address AS T2 ON T1.address_id  =  T2.address_id WHERE store_id  =  1"}
{"question": "Which staff handled least number of payments? List the full name and the id.", "query": "SELECT T1.first_name ,  T1.last_name ,  T1.staff_id FROM staff AS T1 JOIN payment AS T2 ON T1.staff_id  =  T2.staff_id GROUP BY T1.staff_id ORDER BY count(*) ASC LIMIT 1"}
{"question": "Give the full name and staff id of the staff who has handled the fewest payments.", "query": "SELECT T1.first_name ,  T1.last_name ,  T1.staff_id FROM staff AS T1 JOIN payment AS T2 ON T1.staff_id  =  T2.staff_id GROUP BY T1.staff_id ORDER BY count(*) ASC LIMIT 1"}
{"question": "Which language does the film AIRPORT POLLOCK use? List the language name.", "query": "SELECT T2.name FROM film AS T1 JOIN LANGUAGE AS T2 ON T1.language_id  =  T2.language_id WHERE T1.title  =  'AIRPORT POLLOCK'"}
{"question": "What is the name of the language that the film 'AIRPORT POLLOCK' is in?", "query": "SELECT T2.name FROM film AS T1 JOIN LANGUAGE AS T2 ON T1.language_id  =  T2.language_id WHERE T1.title  =  'AIRPORT POLLOCK'"}
{"question": "How many stores are there?", "query": "SELECT count(*) FROM store"}
{"question": "Count the number of stores.", "query": "SELECT count(*) FROM store"}
{"question": "How many kinds of different ratings are listed?", "query": "SELECT count(DISTINCT rating) FROM film"}
{"question": "Count the number of different film ratings.", "query": "SELECT count(DISTINCT rating) FROM film"}
{"question": "Which movies have 'Deleted Scenes' as a substring in the special feature?", "query": "SELECT title FROM film WHERE special_features LIKE '%Deleted Scenes%'"}
{"question": "Return the titles of films that include 'Deleted Scenes' in their special feature section.", "query": "SELECT title FROM film WHERE special_features LIKE '%Deleted Scenes%'"}
{"question": "How many items in inventory does store 1 have?", "query": "SELECT count(*) FROM inventory WHERE store_id  =  1"}
{"question": "Count the number of items store 1 has in stock.", "query": "SELECT count(*) FROM inventory WHERE store_id  =  1"}
{"question": "When did the first payment happen?", "query": "SELECT payment_date FROM payment ORDER BY payment_date ASC LIMIT 1"}
{"question": "What was the date of the earliest payment?", "query": "SELECT payment_date FROM payment ORDER BY payment_date ASC LIMIT 1"}
{"question": "Where does the customer with the first name Linda live? And what is her email?", "query": "SELECT T2.address ,  T1.email FROM customer AS T1 JOIN address AS T2 ON T2.address_id  =  T1.address_id WHERE T1.first_name  =  'LINDA'"}
{"question": "Return the address and email of the customer with the first name Linda.", "query": "SELECT T2.address ,  T1.email FROM customer AS T1 JOIN address AS T2 ON T2.address_id  =  T1.address_id WHERE T1.first_name  =  'LINDA'"}
{"question": "Find all the films longer than 100 minutes, or rated PG, except those who cost more than 200 for replacement. List the titles.", "query": "SELECT title FROM film WHERE LENGTH  >  100 OR rating  =  'PG' EXCEPT SELECT title FROM film WHERE replacement_cost  >  200"}
{"question": "What are the titles of films that are either longer than 100 minutes or rated PG other than those that cost more than 200 to replace?", "query": "SELECT title FROM film WHERE LENGTH  >  100 OR rating  =  'PG' EXCEPT SELECT title FROM film WHERE replacement_cost  >  200"}
{"question": "What is the first name and the last name of the customer who made the earliest rental?", "query": "SELECT T1.first_name ,  T1.last_name FROM customer AS T1 JOIN rental AS T2 ON T1.customer_id  =  T2.customer_id ORDER BY T2.rental_date ASC LIMIT 1"}
{"question": "Return the full name of the customer who made the first rental.", "query": "SELECT T1.first_name ,  T1.last_name FROM customer AS T1 JOIN rental AS T2 ON T1.customer_id  =  T2.customer_id ORDER BY T2.rental_date ASC LIMIT 1"}
{"question": "What is the full name of the staff member who has rented a film to a customer with the first name April and the last name Burns?", "query": "SELECT DISTINCT T1.first_name ,  T1.last_name FROM staff AS T1 JOIN rental AS T2 ON T1.staff_id  =  T2.staff_id JOIN customer AS T3 ON T2.customer_id  =  T3.customer_id WHERE T3.first_name  =  'APRIL' AND T3.last_name  =  'BURNS'"}
{"question": "Return the full name of the staff who provided a customer with the first name April and the last name Burns with a film rental.", "query": "SELECT DISTINCT T1.first_name ,  T1.last_name FROM staff AS T1 JOIN rental AS T2 ON T1.staff_id  =  T2.staff_id JOIN customer AS T3 ON T2.customer_id  =  T3.customer_id WHERE T3.first_name  =  'APRIL' AND T3.last_name  =  'BURNS'"}
{"question": "Which store has most the customers?", "query": "SELECT store_id FROM customer GROUP BY store_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "Return the id of the store with the most customers.", "query": "SELECT store_id FROM customer GROUP BY store_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "What is the largest payment amount?", "query": "SELECT amount FROM payment ORDER BY amount DESC LIMIT 1"}
{"question": "Return the amount of the largest payment.", "query": "SELECT amount FROM payment ORDER BY amount DESC LIMIT 1"}
{"question": "Where does the staff member with the first name Elsa live?", "query": "SELECT T2.address FROM staff AS T1 JOIN address AS T2 ON T1.address_id  =  T2.address_id WHERE T1.first_name  =  'Elsa'"}
{"question": "Give the address of the staff member who has the first name Elsa.", "query": "SELECT T2.address FROM staff AS T1 JOIN address AS T2 ON T1.address_id  =  T2.address_id WHERE T1.first_name  =  'Elsa'"}
{"question": "What are the first names of customers who have not rented any films after '2005-08-23 02:06:01'?", "query": "SELECT first_name FROM customer WHERE customer_id NOT IN( SELECT customer_id FROM rental WHERE rental_date  >  '2005-08-23 02:06:01' )"}
{"question": "Return the first names of customers who did not rented a film after the date '2005-08-23 02:06:01'.", "query": "SELECT first_name FROM customer WHERE customer_id NOT IN( SELECT customer_id FROM rental WHERE rental_date  >  '2005-08-23 02:06:01' )"}
{"question": "How many bank branches are there?", "query": "SELECT count(*) FROM bank"}
{"question": "Count the number of bank branches.", "query": "SELECT count(*) FROM bank"}
{"question": "How many customers are there?", "query": "SELECT sum(no_of_customers) FROM bank"}
{"question": "What is the total number of customers across banks?", "query": "SELECT sum(no_of_customers) FROM bank"}
{"question": "Find the number of customers in the banks at New York City.", "query": "SELECT sum(no_of_customers) FROM bank WHERE city  =  'New York City'"}
{"question": "What is the total number of customers who use banks in New York City?", "query": "SELECT sum(no_of_customers) FROM bank WHERE city  =  'New York City'"}
{"question": "Find the average number of customers in all banks of Utah state.", "query": "SELECT avg(no_of_customers) FROM bank WHERE state  =  'Utah'"}
{"question": "What is the average number of customers across banks in the state of Utah?", "query": "SELECT avg(no_of_customers) FROM bank WHERE state  =  'Utah'"}
{"question": "Find the average number of customers cross all banks.", "query": "SELECT avg(no_of_customers) FROM bank"}
{"question": "What is the average number of bank customers?", "query": "SELECT avg(no_of_customers) FROM bank"}
{"question": "Find the city and state of the bank branch named morningside.", "query": "SELECT city ,  state FROM bank WHERE bname  =  'morningside'"}
{"question": "What city and state is the bank with the name morningside in?", "query": "SELECT city ,  state FROM bank WHERE bname  =  'morningside'"}
{"question": "Find the branch names of banks in the New York state.", "query": "SELECT bname FROM bank WHERE state  =  'New York'"}
{"question": "What are the names of banks in the state of New York?", "query": "SELECT bname FROM bank WHERE state  =  'New York'"}
{"question": "List the name of all customers sorted by their account balance in ascending order.", "query": "SELECT cust_name FROM customer ORDER BY acc_bal"}
{"question": "What are the names of all customers, ordered by account balance?", "query": "SELECT cust_name FROM customer ORDER BY acc_bal"}
{"question": "List the name of all different customers who have some loan sorted by their total loan amount.", "query": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id GROUP BY T1.cust_name ORDER BY sum(T2.amount)"}
{"question": "What are the names of the different customers who have taken out a loan, ordered by the total amount that they have taken?", "query": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id GROUP BY T1.cust_name ORDER BY sum(T2.amount)"}
{"question": "Find the state, account type, and credit score of the customer whose number of loan is 0.", "query": "SELECT state ,  acc_type ,  credit_score FROM customer WHERE no_of_loans  =  0"}
{"question": "What are the states, account types, and credit scores for customers who have 0 loans?", "query": "SELECT state ,  acc_type ,  credit_score FROM customer WHERE no_of_loans  =  0"}
{"question": "Find the number of different cities which banks are located at.", "query": "SELECT count(DISTINCT city) FROM bank"}
{"question": "In how many different cities are banks located?", "query": "SELECT count(DISTINCT city) FROM bank"}
{"question": "Find the number of different states which banks are located at.", "query": "SELECT count(DISTINCT state) FROM bank"}
{"question": "In how many different states are banks located?", "query": "SELECT count(DISTINCT state) FROM bank"}
{"question": "How many distinct types of accounts are there?", "query": "SELECT count(DISTINCT acc_type) FROM customer"}
{"question": "Count the number of different account types.", "query": "SELECT count(DISTINCT acc_type) FROM customer"}
{"question": "Find the name and account balance of the customer whose name includes the letter ‘a’.", "query": "SELECT cust_name ,  acc_bal FROM customer WHERE cust_name LIKE '%a%'"}
{"question": "What are the names and account balances of customers with the letter a in their names?", "query": "SELECT cust_name ,  acc_bal FROM customer WHERE cust_name LIKE '%a%'"}
{"question": "Find the total account balance of each customer from Utah or Texas.", "query": "SELECT sum(acc_bal) FROM customer WHERE state  =  'Utah' OR state  =  'Texas'"}
{"question": "What are the total account balances for each customer from Utah or Texas?", "query": "SELECT sum(acc_bal) FROM customer WHERE state  =  'Utah' OR state  =  'Texas'"}
{"question": "Find the name of customers who have both saving and checking account types.", "query": "SELECT cust_name FROM customer WHERE acc_type  =  'saving' INTERSECT SELECT cust_name FROM customer WHERE acc_type  =  'checking'"}
{"question": "What are the names of customers who have both savings and checking accounts?", "query": "SELECT cust_name FROM customer WHERE acc_type  =  'saving' INTERSECT SELECT cust_name FROM customer WHERE acc_type  =  'checking'"}
{"question": "Find the name of customers who do not have an saving account.", "query": "SELECT cust_name FROM customer EXCEPT SELECT cust_name FROM customer WHERE acc_type  =  'saving'"}
{"question": "What are the names of customers who do not have saving accounts?", "query": "SELECT cust_name FROM customer EXCEPT SELECT cust_name FROM customer WHERE acc_type  =  'saving'"}
{"question": "Find the name of customers who do not have a loan with a type of Mortgages.", "query": "SELECT cust_name FROM customer EXCEPT SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id WHERE T2.loan_type  =  'Mortgages'"}
{"question": "What are the names of customers who have not taken a Mortage loan?", "query": "SELECT cust_name FROM customer EXCEPT SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id WHERE T2.loan_type  =  'Mortgages'"}
{"question": "Find the name of customers who have loans of both Mortgages and Auto.", "query": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id WHERE loan_type  =  'Mortgages' INTERSECT SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id WHERE loan_type  =  'Auto'"}
{"question": "What are the names of customers who have taken both Mortgage and Auto loans?", "query": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id WHERE loan_type  =  'Mortgages' INTERSECT SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id WHERE loan_type  =  'Auto'"}
{"question": "Find the name of customers whose credit score is below the average credit scores of all customers.", "query": "SELECT cust_name FROM customer WHERE credit_score  <  (SELECT avg(credit_score) FROM customer)"}
{"question": "What are the names of customers with credit score less than the average credit score across customers?", "query": "SELECT cust_name FROM customer WHERE credit_score  <  (SELECT avg(credit_score) FROM customer)"}
{"question": "Find the branch name of the bank that has the most number of customers.", "query": "SELECT bname FROM bank ORDER BY no_of_customers DESC LIMIT 1"}
{"question": "What is the name of the bank branch with the greatest number of customers?", "query": "SELECT bname FROM bank ORDER BY no_of_customers DESC LIMIT 1"}
{"question": "Find the name of customer who has the lowest credit score.", "query": "SELECT cust_name FROM customer ORDER BY credit_score LIMIT 1"}
{"question": "What is the name of the customer with the worst credit score?", "query": "SELECT cust_name FROM customer ORDER BY credit_score LIMIT 1"}
{"question": "Find the name, account type, and account balance of the customer who has the highest credit score.", "query": "SELECT cust_name ,  acc_type ,  acc_bal FROM customer ORDER BY credit_score DESC LIMIT 1"}
{"question": "What is the name, account type, and account balance corresponding to the customer with the highest credit score?", "query": "SELECT cust_name ,  acc_type ,  acc_bal FROM customer ORDER BY credit_score DESC LIMIT 1"}
{"question": "Find the name of customer who has the highest amount of loans.", "query": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id GROUP BY T1.cust_name ORDER BY sum(T2.amount) DESC LIMIT 1"}
{"question": "What is the name of the customer who has greatest total loan amount?", "query": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id GROUP BY T1.cust_name ORDER BY sum(T2.amount) DESC LIMIT 1"}
{"question": "Find the state which has the most number of customers.", "query": "SELECT state FROM bank GROUP BY state ORDER BY sum(no_of_customers) DESC LIMIT 1"}
{"question": "Which state has the greatest total number of bank customers?", "query": "SELECT state FROM bank GROUP BY state ORDER BY sum(no_of_customers) DESC LIMIT 1"}
{"question": "For each account type, find the average account balance of customers with credit score lower than 50.", "query": "SELECT avg(acc_bal) ,  acc_type FROM customer WHERE credit_score  <  50 GROUP BY acc_type"}
{"question": "What is the average account balance of customers with credit score below 50 for the different account types?", "query": "SELECT avg(acc_bal) ,  acc_type FROM customer WHERE credit_score  <  50 GROUP BY acc_type"}
{"question": "For each state, find the total account balance of customers whose credit score is above 100.", "query": "SELECT sum(acc_bal) ,  state FROM customer WHERE credit_score  >  100 GROUP BY state"}
{"question": "What is the total account balance for customers with a credit score of above 100 for the different states?", "query": "SELECT sum(acc_bal) ,  state FROM customer WHERE credit_score  >  100 GROUP BY state"}
{"question": "Find the total amount of loans offered by each bank branch.", "query": "SELECT sum(amount) ,  T1.bname FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id GROUP BY T1.bname"}
{"question": "What are the names of the different bank branches, and what are their total loan amounts?", "query": "SELECT sum(amount) ,  T1.bname FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id GROUP BY T1.bname"}
{"question": "Find the name of customers who have more than one loan.", "query": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id GROUP BY T1.cust_name HAVING count(*)  >  1"}
{"question": "What are the names of customers who have taken out more than one loan?", "query": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id GROUP BY T1.cust_name HAVING count(*)  >  1"}
{"question": "Find the name and account balance of the customers who have loans with a total amount of more than 5000.", "query": "SELECT T1.cust_name ,  T1.acc_type FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id GROUP BY T1.cust_name HAVING sum(T2.amount)  >  5000"}
{"question": "What are the names and account balances for customers who have taken a total amount of more than 5000 in loans?", "query": "SELECT T1.cust_name ,  T1.acc_type FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id GROUP BY T1.cust_name HAVING sum(T2.amount)  >  5000"}
{"question": "Find the name of bank branch that provided the greatest total amount of loans.", "query": "SELECT T1.bname FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id GROUP BY T1.bname ORDER BY sum(T2.amount) DESC LIMIT 1"}
{"question": "What is the name of the bank branch that has lent the greatest amount?", "query": "SELECT T1.bname FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id GROUP BY T1.bname ORDER BY sum(T2.amount) DESC LIMIT 1"}
{"question": "Find the name of bank branch that provided the greatest total amount of loans to customers with credit score is less than 100.", "query": "SELECT T2.bname FROM loan AS T1 JOIN bank AS T2 ON T1.branch_id  =  T2.branch_id JOIN customer AS T3 ON T1.cust_id  =  T3.cust_id WHERE T3.credit_score  <  100 GROUP BY T2.bname ORDER BY sum(T1.amount) DESC LIMIT 1"}
{"question": "What is the name of the bank branch that has lended the largest total amount in loans, specifically to customers with credit scores below 100?", "query": "SELECT T2.bname FROM loan AS T1 JOIN bank AS T2 ON T1.branch_id  =  T2.branch_id JOIN customer AS T3 ON T1.cust_id  =  T3.cust_id WHERE T3.credit_score  <  100 GROUP BY T2.bname ORDER BY sum(T1.amount) DESC LIMIT 1"}
{"question": "Find the name of bank branches that provided some loans.", "query": "SELECT DISTINCT T1.bname FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id"}
{"question": "What are the names of the different banks that have provided loans?", "query": "SELECT DISTINCT T1.bname FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id"}
{"question": "Find the name and credit score of the customers who have some loans.", "query": "SELECT DISTINCT T1.cust_name ,  T1.credit_score FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id"}
{"question": "What are the different names and credit scores of customers who have taken a loan?", "query": "SELECT DISTINCT T1.cust_name ,  T1.credit_score FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id"}
{"question": "Find the the name of the customers who have a loan with amount more than 3000.", "query": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id WHERE amount  >  3000"}
{"question": "What are the names of customers who have a loan of more than 3000 in amount?", "query": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id WHERE amount  >  3000"}
{"question": "Find the city and name of bank branches that provide business loans.", "query": "SELECT T1.bname ,  T1.city FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id WHERE T2.loan_type  =  'Business'"}
{"question": "What are the names and cities of bank branches that offer loans for business?", "query": "SELECT T1.bname ,  T1.city FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id WHERE T2.loan_type  =  'Business'"}
{"question": "Find the names of bank branches that have provided a loan to any customer whose credit score is below 100.", "query": "SELECT T2.bname FROM loan AS T1 JOIN bank AS T2 ON T1.branch_id  =  T2.branch_id JOIN customer AS T3 ON T1.cust_id  =  T3.cust_id WHERE T3.credit_score  <  100"}
{"question": "What are the names of banks that have loaned money to customers with credit scores below 100?", "query": "SELECT T2.bname FROM loan AS T1 JOIN bank AS T2 ON T1.branch_id  =  T2.branch_id JOIN customer AS T3 ON T1.cust_id  =  T3.cust_id WHERE T3.credit_score  <  100"}
{"question": "Find the total amount of loans provided by bank branches in the state of New York.", "query": "SELECT sum(T2.amount) FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id WHERE T1.state  =  'New York'"}
{"question": "What is the total amount of money loaned by banks in New York state?", "query": "SELECT sum(T2.amount) FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id WHERE T1.state  =  'New York'"}
{"question": "Find the average credit score of the customers who have some loan.", "query": "SELECT avg(credit_score) FROM customer WHERE cust_id IN (SELECT cust_id FROM loan)"}
{"question": "What is the average credit score for customers who have taken a loan?", "query": "SELECT avg(credit_score) FROM customer WHERE cust_id IN (SELECT cust_id FROM loan)"}
{"question": "Find the average credit score of the customers who do not have any loan.", "query": "SELECT avg(credit_score) FROM customer WHERE cust_id NOT IN (SELECT cust_id FROM loan)"}
{"question": "What is the average credit score for customers who have never taken a loan?", "query": "SELECT avg(credit_score) FROM customer WHERE cust_id NOT IN (SELECT cust_id FROM loan)"}
{"question": "How many assessment notes are there in total?", "query": "SELECT count(*) FROM ASSESSMENT_NOTES"}
{"question": "What are the dates of the assessment notes?", "query": "SELECT date_of_notes FROM Assessment_Notes"}
{"question": "How many addresses have zip code 197?", "query": "SELECT count(*) FROM ADDRESSES WHERE zip_postcode  =  \"197\""}
{"question": "How many distinct incident type codes are there?", "query": "SELECT count(DISTINCT incident_type_code) FROM Behavior_Incident"}
{"question": "Return all distinct detention type codes.", "query": "SELECT DISTINCT detention_type_code FROM Detention"}
{"question": "What are the start and end dates for incidents with incident type code \"NOISE\"?", "query": "SELECT date_incident_start ,  date_incident_end FROM Behavior_Incident WHERE incident_type_code  =  \"NOISE\""}
{"question": "Return all detention summaries.", "query": "SELECT detention_summary FROM Detention"}
{"question": "Return the cell phone number and email address for all students.", "query": "SELECT cell_mobile_number ,  email_address FROM STUDENTS"}
{"question": "What is the email of the student with first name \"Emma\" and last name \"Rohan\"?", "query": "SELECT email_address FROM Students WHERE first_name  =  \"Emma\" AND last_name  =  \"Rohan\""}
{"question": "How many distinct students have been in detention?", "query": "SELECT count(DISTINCT student_id) FROM Students_in_Detention"}
{"question": "What is the gender of the teacher with last name \"Medhurst\"?", "query": "SELECT gender FROM TEACHERS WHERE last_name  =  \"Medhurst\""}
{"question": "What is the incident type description for the incident type with code \"VIOLENCE\"?", "query": "SELECT incident_type_description FROM Ref_Incident_Type WHERE incident_type_code  =  \"VIOLENCE\""}
{"question": "Find the maximum and minimum monthly rental for all student addresses.", "query": "SELECT max(monthly_rental) ,  min(monthly_rental) FROM Student_Addresses"}
{"question": "Find the first names of teachers whose email address contains the word \"man\".", "query": "SELECT first_name FROM Teachers WHERE email_address LIKE '%man%'"}
{"question": "List all information about the assessment notes sorted by date in ascending order.", "query": "SELECT * FROM Assessment_Notes ORDER BY date_of_notes ASC"}
{"question": "List all cities of addresses in alphabetical order.", "query": "SELECT city FROM Addresses ORDER BY city"}
{"question": "Find the first names and last names of teachers in alphabetical order of last name.", "query": "SELECT first_name ,  last_name FROM Teachers ORDER BY last_name"}
{"question": "Find all information about student addresses, and sort by monthly rental in descending order.", "query": "SELECT * FROM Student_Addresses ORDER BY monthly_rental DESC"}
{"question": "Find the id and first name of the student that has the most number of assessment notes?", "query": "SELECT T1.student_id ,  T2.first_name FROM Assessment_Notes AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "Find the ids and first names of the 3 teachers that have the most number of assessment notes?", "query": "SELECT T1.teacher_id ,  T2.first_name FROM Assessment_Notes AS T1 JOIN Teachers AS T2 ON T1.teacher_id  =  T2.teacher_id GROUP BY T1.teacher_id ORDER BY count(*) DESC LIMIT 3"}
{"question": "Find the id and last name of the student that has the most behavior incidents?", "query": "SELECT T1.student_id ,  T2.last_name FROM Behavior_Incident AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "Find the id and last name of the teacher that has the most detentions with detention type code \"AFTER\"?", "query": "SELECT T1.teacher_id ,  T2.last_name FROM Detention AS T1 JOIN Teachers AS T2 ON T1.teacher_id  =  T2.teacher_id WHERE T1.detention_type_code  =  \"AFTER\" GROUP BY T1.teacher_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "What are the id and first name of the student whose addresses have the highest average monthly rental?", "query": "SELECT T1.student_id ,  T2.first_name FROM Student_Addresses AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY AVG(monthly_rental) DESC LIMIT 1"}
{"question": "Find the id and city of the student address with the highest average monthly rental.", "query": "SELECT T2.address_id ,  T1.city FROM Addresses AS T1 JOIN Student_Addresses AS T2 ON T1.address_id  =  T2.address_id GROUP BY T2.address_id ORDER BY AVG(monthly_rental) DESC LIMIT 1"}
{"question": "What are the code and description of the most frequent behavior incident type?", "query": "SELECT T1.incident_type_code ,  T2.incident_type_description FROM Behavior_Incident AS T1 JOIN Ref_Incident_Type AS T2 ON T1.incident_type_code  =  T2.incident_type_code GROUP BY T1.incident_type_code ORDER BY count(*) DESC LIMIT 1"}
{"question": "What are the code and description of the least frequent detention type ?", "query": "SELECT T1.detention_type_code ,  T2.detention_type_description FROM Detention AS T1 JOIN Ref_Detention_Type AS T2 ON T1.detention_type_code  =  T2.detention_type_code GROUP BY T1.detention_type_code ORDER BY count(*) ASC LIMIT 1"}
{"question": "Find the dates of assessment notes for students with first name \"Fanny\".", "query": "SELECT T1.date_of_notes FROM Assessment_Notes AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id WHERE T2.first_name  =  \"Fanny\""}
{"question": "Find the texts of assessment notes for teachers with last name \"Schuster\".", "query": "SELECT T1.text_of_notes FROM Assessment_Notes AS T1 JOIN Teachers AS T2 ON T1.teacher_id  =  T2.teacher_id WHERE T2.last_name  =  \"Schuster\""}
{"question": "Find the start and end dates of behavior incidents of students with last name \"Fahey\".", "query": "SELECT T1.date_incident_start ,  date_incident_end FROM Behavior_Incident AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id WHERE T2.last_name  =  \"Fahey\""}
{"question": "Find the start and end dates of detentions of teachers with last name \"Schultz\".", "query": "SELECT T1.datetime_detention_start ,  datetime_detention_end FROM Detention AS T1 JOIN Teachers AS T2 ON T1.teacher_id  =  T2.teacher_id WHERE T2.last_name  =  \"Schultz\""}
{"question": "What are the id and zip code of the address with the highest monthly rental?", "query": "SELECT T2.address_id ,  T1.zip_postcode FROM Addresses AS T1 JOIN Student_Addresses AS T2 ON T1.address_id  =  T2.address_id ORDER BY monthly_rental DESC LIMIT 1"}
{"question": "What is the cell phone number of the student whose address has the lowest monthly rental?", "query": "SELECT T2.cell_mobile_number FROM Student_Addresses AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id ORDER BY T1.monthly_rental ASC LIMIT 1"}
{"question": "What are the monthly rentals of student addresses in Texas state?", "query": "SELECT T2.monthly_rental FROM Addresses AS T1 JOIN Student_Addresses AS T2 ON T1.address_id  =  T2.address_id WHERE T1.state_province_county  =  \"Texas\""}
{"question": "What are the first names and last names of students with address in Wisconsin state?", "query": "SELECT T2.first_name ,  T2.last_name FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.address_id WHERE T1.state_province_county  =  \"Wisconsin\""}
{"question": "What are the line 1 and average monthly rentals of all student addresses?", "query": "SELECT T1.line_1 ,  avg(T2.monthly_rental) FROM Addresses AS T1 JOIN Student_Addresses AS T2 ON T1.address_id  =  T2.address_id GROUP BY T2.address_id"}
{"question": "What is the zip code of the address where the teacher with first name \"Lyla\" lives?", "query": "SELECT T1.zip_postcode FROM Addresses AS T1 JOIN Teachers AS T2 ON T1.address_id  =  T2.address_id WHERE T2.first_name  =  \"Lyla\""}
{"question": "What are the email addresses of teachers whose address has zip code \"918\"?", "query": "SELECT T2.email_address FROM Addresses AS T1 JOIN Teachers AS T2 ON T1.address_id  =  T2.address_id WHERE T1.zip_postcode  =  \"918\""}
{"question": "How many students are not involved in any behavior incident?", "query": "SELECT count(*) FROM STUDENTS WHERE student_id NOT IN ( SELECT student_id FROM Behavior_Incident )"}
{"question": "Find the last names of teachers who are not involved in any detention.", "query": "SELECT last_name FROM Teachers EXCEPT SELECT T1.last_name FROM Teachers AS T1 JOIN Detention AS T2 ON T1.teacher_id  =  T2.teacher_id"}
{"question": "What are the line 1 of addresses shared by some students and some teachers?", "query": "SELECT T1.line_1 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.address_id INTERSECT SELECT T1.line_1 FROM Addresses AS T1 JOIN Teachers AS T2 ON T1.address_id  =  T2.address_id"}
{"question": "Which assets have 2 parts and have less than 2 fault logs? List the asset id and detail.", "query": "SELECT T1.asset_id ,  T1.asset_details FROM Assets AS T1 JOIN Asset_Parts AS T2 ON T1.asset_id  =  T2.asset_id GROUP BY T1.asset_id HAVING count(*)  =  2 INTERSECT SELECT T1.asset_id ,  T1.asset_details FROM Assets AS T1 JOIN Fault_Log AS T2 ON T1.asset_id  =  T2.asset_id GROUP BY T1.asset_id HAVING count(*)  <  2"}
{"question": "How many assets does each maintenance contract contain? List the number and the contract id.", "query": "SELECT count(*) ,  T1.maintenance_contract_id FROM Maintenance_Contracts AS T1 JOIN Assets AS T2 ON T1.maintenance_contract_id  =  T2.maintenance_contract_id GROUP BY T1.maintenance_contract_id"}
{"question": "How many assets does each third party company supply? List the count and the company id.", "query": "SELECT count(*) ,  T1.company_id FROM Third_Party_Companies AS T1 JOIN Assets AS T2 ON T1.company_id  =  T2.supplier_company_id GROUP BY T1.company_id"}
{"question": "Which third party companies have at least 2 maintenance engineers or have at least 2 maintenance contracts? List the company id and name.", "query": "SELECT T1.company_id ,  T1.company_name FROM Third_Party_Companies AS T1 JOIN Maintenance_Engineers AS T2 ON T1.company_id  =  T2.company_id GROUP BY T1.company_id HAVING count(*)  >=  2 UNION SELECT T3.company_id ,  T3.company_name FROM Third_Party_Companies AS T3 JOIN Maintenance_Contracts AS T4 ON T3.company_id  =  T4.maintenance_contract_company_id GROUP BY T3.company_id HAVING count(*)  >=  2"}
{"question": "What is the name and id of the staff who recorded the fault log but has not contacted any visiting engineers?", "query": "SELECT T1.staff_name ,  T1.staff_id FROM Staff AS T1 JOIN Fault_Log AS T2 ON T1.staff_id  =  T2.recorded_by_staff_id EXCEPT SELECT T3.staff_name ,  T3.staff_id FROM Staff AS T3 JOIN Engineer_Visits AS T4 ON T3.staff_id  =  T4.contact_staff_id"}
{"question": "Which engineer has visited the most times? Show the engineer id, first name and last name.", "query": "SELECT T1.engineer_id ,  T1.first_name ,  T1.last_name FROM Maintenance_Engineers AS T1 JOIN Engineer_Visits AS T2 GROUP BY T1.engineer_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "Which parts have more than 2 faults? Show the part name and id.", "query": "SELECT T1.part_name ,  T1.part_id FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id  =  T2.part_id GROUP BY T1.part_id HAVING count(*)  >  2"}
{"question": "List all every engineer's first name, last name, details and coresponding skill description.", "query": "SELECT T1.first_name ,  T1.last_name ,  T1.other_details ,  T3.skill_description FROM Maintenance_Engineers AS T1 JOIN Engineer_Skills AS T2 ON T1.engineer_id  =  T2.engineer_id JOIN Skills AS T3 ON T2.skill_id  =  T3.skill_id"}
{"question": "For all the faults of different parts, what are all the decriptions of the skills required to fix them? List the name of the faults and the skill description.", "query": "SELECT T1.fault_short_name ,  T3.skill_description FROM Part_Faults AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.part_fault_id  =  T2.part_fault_id JOIN Skills AS T3 ON T2.skill_id  =  T3.skill_id"}
{"question": "How many assets can each parts be used in? List the part name and the number.", "query": "SELECT T1.part_name ,  count(*) FROM Parts AS T1 JOIN Asset_Parts AS T2 ON T1.part_id  =  T2.part_id GROUP BY T1.part_name"}
{"question": "What are all the fault descriptions and the fault status of all the faults recoreded in the logs?", "query": "SELECT T1.fault_description ,  T2.fault_status FROM Fault_Log AS T1 JOIN Fault_Log_Parts AS T2 ON T1.fault_log_entry_id  =  T2.fault_log_entry_id"}
{"question": "How many engineer visits are required at most for a single fault log? List the number and the log entry id.", "query": "SELECT count(*) ,  T1.fault_log_entry_id FROM Fault_Log AS T1 JOIN Engineer_Visits AS T2 ON T1.fault_log_entry_id  =  T2.fault_log_entry_id GROUP BY T1.fault_log_entry_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "What are all the distinct last names of all the engineers?", "query": "SELECT DISTINCT last_name FROM Maintenance_Engineers"}
{"question": "How many fault status codes are recorded in the fault log parts table?", "query": "SELECT DISTINCT fault_status FROM Fault_Log_Parts"}
{"question": "Which engineers have never visited to maintain the assets? List the engineer first name and last name.", "query": "SELECT first_name ,  last_name FROM Maintenance_Engineers WHERE engineer_id NOT IN (SELECT engineer_id FROM Engineer_Visits)"}
{"question": "List the asset id, details, make and model for every asset.", "query": "SELECT asset_id ,  asset_details ,  asset_make ,  asset_model FROM Assets"}
{"question": "When was the first asset acquired?", "query": "SELECT asset_acquired_date FROM Assets ORDER BY asset_acquired_date ASC LIMIT 1"}
{"question": "Which part fault requires the most number of skills to fix? List part id and name.", "query": "SELECT T1.part_id ,  T1.part_name FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id  =  T2.part_id JOIN Skills_Required_To_Fix AS T3 ON T2.part_fault_id  =  T3.part_fault_id GROUP BY T1.part_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "Which kind of part has the least number of faults? List the part name.", "query": "SELECT T1.part_name FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id  =  T2.part_id GROUP BY T1.part_name ORDER BY count(*) ASC LIMIT 1"}
{"question": "Among those engineers who have visited, which engineer makes the least number of visits? List the engineer id, first name and last name.", "query": "SELECT T1.engineer_id ,  T1.first_name ,  T1.last_name FROM Maintenance_Engineers AS T1 JOIN Engineer_Visits AS T2 ON T1.engineer_id  =  T2.engineer_id GROUP BY T1.engineer_id ORDER BY count(*) ASC LIMIT 1"}
{"question": "Which staff have contacted which engineers? List the staff name and the engineer first name and last name.", "query": "SELECT T1.staff_name ,  T3.first_name ,  T3.last_name FROM Staff AS T1 JOIN Engineer_Visits AS T2 ON T1.staff_id  =  T2.contact_staff_id JOIN Maintenance_Engineers AS T3 ON T2.engineer_id  =  T3.engineer_id"}
{"question": "Which fault log included the most number of faulty parts? List the fault log id, description and record time.", "query": "SELECT T1.fault_log_entry_id ,  T1.fault_description ,  T1.fault_log_entry_datetime FROM Fault_Log AS T1 JOIN Fault_Log_Parts AS T2 ON T1.fault_log_entry_id  =  T2.fault_log_entry_id GROUP BY T1.fault_log_entry_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "Which skill is used in fixing the most number of faults? List the skill id and description.", "query": "SELECT T1.skill_id ,  T1.skill_description FROM Skills AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.skill_id  =  T2.skill_id GROUP BY T1.skill_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "What are all the distinct asset models?", "query": "SELECT DISTINCT asset_model FROM Assets"}
{"question": "List the all the assets make, model, details by the disposed date ascendingly.", "query": "SELECT asset_make ,  asset_model ,  asset_details FROM Assets ORDER BY asset_disposed_date ASC"}
{"question": "Which part has the least chargeable amount? List the part id and amount.", "query": "SELECT part_id ,  chargeable_amount FROM Parts ORDER BY chargeable_amount ASC LIMIT 1"}
{"question": "Which company started the earliest the maintenance contract? Show the company name.", "query": "SELECT T1.company_name FROM Third_Party_Companies AS T1 JOIN Maintenance_Contracts AS T2 ON T1.company_id  =  T2.maintenance_contract_company_id ORDER BY T2.contract_start_date ASC LIMIT 1"}
{"question": "What is the description of the type of the company who concluded its contracts most recently?", "query": "SELECT T1.company_name FROM Third_Party_Companies AS T1 JOIN Maintenance_Contracts AS T2 ON T1.company_id  =  T2.maintenance_contract_company_id JOIN Ref_Company_Types AS T3 ON T1.company_type_code  =  T3.company_type_code ORDER BY T2.contract_end_date DESC LIMIT 1"}
{"question": "Which gender makes up the majority of the staff?", "query": "SELECT gender FROM staff GROUP BY gender ORDER BY count(*) DESC LIMIT 1"}
{"question": "How many engineers did each staff contact? List both the contact staff name and number of engineers contacted.", "query": "SELECT T1.staff_name ,  count(*) FROM Staff AS T1 JOIN Engineer_Visits AS T2 ON T1.staff_id  =  T2.contact_staff_id GROUP BY T1.staff_name"}
{"question": "Which assets did not incur any fault log? List the asset model.", "query": "SELECT asset_model FROM Assets WHERE asset_id NOT IN (SELECT asset_id FROM Fault_Log)"}
{"question": "list the local authorities and services provided by all stations.", "query": "SELECT local_authority ,  services FROM station"}
{"question": "show all train numbers and names ordered by their time from early to late.", "query": "SELECT train_number ,  name FROM train ORDER BY TIME"}
{"question": "Give me the times and numbers of all trains that go to Chennai, ordered by time.", "query": "SELECT TIME ,  train_number FROM train WHERE destination  =  'Chennai' ORDER BY TIME"}
{"question": "How many trains have 'Express' in their names?", "query": "SELECT count(*) FROM train WHERE name LIKE \"%Express%\""}
{"question": "Find the number and time of the train that goes from Chennai to Guruvayur.", "query": "SELECT train_number ,  TIME FROM train WHERE origin  =  'Chennai' AND destination  =  'Guruvayur'"}
{"question": "Find the number of trains starting from each origin.", "query": "SELECT origin ,  count(*) FROM train GROUP BY origin"}
{"question": "Find the name of the train whose route runs through greatest number of stations.", "query": "SELECT t1.name FROM train AS t1 JOIN route AS t2 ON t1.id  =  t2.train_id GROUP BY t2.train_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "Find the number of trains for each station, as well as the station network name and services.", "query": "SELECT count(*) ,  t1.network_name ,  t1.services FROM station AS t1 JOIN route AS t2 ON t1.id  =  t2.station_id GROUP BY t2.station_id"}
{"question": "What is the average high temperature for each day of week?", "query": "SELECT avg(high_temperature) ,  day_of_week FROM weekly_weather GROUP BY day_of_week"}
{"question": "Give me the maximum low temperature and average precipitation at the Amersham station.", "query": "SELECT max(t1.low_temperature) ,  avg(t1.precipitation) FROM weekly_weather AS t1 JOIN station AS t2 ON t1.station_id  =  t2.id WHERE t2.network_name  =  \"Amersham\""}
{"question": "Find names and times of trains that run through stations for the local authority Chiltern.", "query": "SELECT t3.name ,  t3.time FROM station AS t1 JOIN route AS t2 ON t1.id  =  t2.station_id JOIN train AS t3 ON t2.train_id  =  t3.id WHERE t1.local_authority  =  \"Chiltern\""}
{"question": "How many different services are provided by all stations?", "query": "SELECT count(DISTINCT services) FROM station"}
{"question": "Find the id and local authority of the station with has the highest average high temperature.", "query": "SELECT t2.id ,  t2.local_authority FROM weekly_weather AS t1 JOIN station AS t2 ON t1.station_id  =  t2.id GROUP BY t1.station_id ORDER BY avg(high_temperature) DESC LIMIT 1"}
{"question": "Find the id and local authority of the station whose maximum precipitation is higher than 50.", "query": "SELECT t2.id ,  t2.local_authority FROM weekly_weather AS t1 JOIN station AS t2 ON t1.station_id  =  t2.id GROUP BY t1.station_id HAVING max(t1.precipitation)  >  50"}
{"question": "show the lowest low temperature and highest wind speed in miles per hour.", "query": "SELECT min(low_temperature) ,  max(wind_speed_mph) FROM weekly_weather"}
{"question": "Find the origins from which more than 1 train starts.", "query": "SELECT origin FROM train GROUP BY origin HAVING count(*)  >  1"}
{"question": "Find the number of professors in accounting department.", "query": "SELECT count(*) FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code WHERE DEPT_NAME  =  \"Accounting\""}
{"question": "How many professors are in the accounting dept?", "query": "SELECT count(*) FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code WHERE DEPT_NAME  =  \"Accounting\""}
{"question": "How many professors are teaching class with code ACCT-211?", "query": "SELECT count(DISTINCT PROF_NUM) FROM CLASS WHERE CRS_CODE  =  \"ACCT-211\""}
{"question": "How many professors teach a class with the code ACCT-211?", "query": "SELECT count(DISTINCT PROF_NUM) FROM CLASS WHERE CRS_CODE  =  \"ACCT-211\""}
{"question": "What is the first and last name of the professor in biology department?", "query": "SELECT T3.EMP_FNAME ,  T3.EMP_LNAME FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code JOIN employee AS T3 ON T1.EMP_NUM  =  T3.EMP_NUM WHERE DEPT_NAME  =  \"Biology\""}
{"question": "What are the first and last name of all biology professors?", "query": "SELECT T3.EMP_FNAME ,  T3.EMP_LNAME FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code JOIN employee AS T3 ON T1.EMP_NUM  =  T3.EMP_NUM WHERE DEPT_NAME  =  \"Biology\""}
{"question": "What are the first names and date of birth of professors teaching course ACCT-211?", "query": "SELECT DISTINCT T1.EMP_FNAME ,  T1.EMP_DOB FROM employee AS T1 JOIN CLASS AS T2 ON T1.EMP_NUM  =  T2.PROF_NUM WHERE CRS_CODE  =  \"ACCT-211\""}
{"question": "What are the first names and birthdates of the professors in charge of ACCT-211?", "query": "SELECT DISTINCT T1.EMP_FNAME ,  T1.EMP_DOB FROM employee AS T1 JOIN CLASS AS T2 ON T1.EMP_NUM  =  T2.PROF_NUM WHERE CRS_CODE  =  \"ACCT-211\""}
{"question": "How many classes are professor whose last name is Graztevski has?", "query": "SELECT count(*) FROM employee AS T1 JOIN CLASS AS T2 ON T1.EMP_NUM  =  T2.PROF_NUM WHERE T1.EMP_LNAME  =  'Graztevski'"}
{"question": "How many classes does the professor whose last name is Graztevski teach?", "query": "SELECT count(*) FROM employee AS T1 JOIN CLASS AS T2 ON T1.EMP_NUM  =  T2.PROF_NUM WHERE T1.EMP_LNAME  =  'Graztevski'"}
{"question": "What is the code of the school where the accounting department belongs to?", "query": "SELECT school_code FROM department WHERE dept_name  =  \"Accounting\""}
{"question": "What is the school code of the accounting department?", "query": "SELECT school_code FROM department WHERE dept_name  =  \"Accounting\""}
{"question": "How many credits does course CIS-220 have, and what its description?", "query": "SELECT crs_credit ,  crs_description FROM course WHERE crs_code  =  'CIS-220'"}
{"question": "What is the description for the CIS-220 and how many credits does it have?", "query": "SELECT crs_credit ,  crs_description FROM course WHERE crs_code  =  'CIS-220'"}
{"question": "what is the address of history department?", "query": "SELECT dept_address FROM department WHERE dept_name  =  'History'"}
{"question": "Where is the history department?", "query": "SELECT dept_address FROM department WHERE dept_name  =  'History'"}
{"question": "How many different locations does the school with code BUS has?", "query": "SELECT count(DISTINCT dept_address) FROM department WHERE school_code  =  'BUS'"}
{"question": "What are the different locations of the school with the code BUS?", "query": "SELECT count(DISTINCT dept_address) FROM department WHERE school_code  =  'BUS'"}
{"question": "How many different locations does each school have?", "query": "SELECT count(DISTINCT dept_address) ,  school_code FROM department GROUP BY school_code"}
{"question": "Count different addresses of each school.", "query": "SELECT count(DISTINCT dept_address) ,  school_code FROM department GROUP BY school_code"}
{"question": "Find the description and credit for the course QM-261?", "query": "SELECT crs_credit ,  crs_description FROM course WHERE crs_code  =  'QM-261'"}
{"question": "What is the course description and number of credits for QM-261?", "query": "SELECT crs_credit ,  crs_description FROM course WHERE crs_code  =  'QM-261'"}
{"question": "Find the number of departments in each school.", "query": "SELECT count(DISTINCT dept_name) ,  school_code FROM department GROUP BY school_code"}
{"question": "How many departments are in each school?", "query": "SELECT count(DISTINCT dept_name) ,  school_code FROM department GROUP BY school_code"}
{"question": "Find the number of different departments in each school whose number of different departments is less than 5.", "query": "SELECT count(DISTINCT dept_name) ,  school_code FROM department GROUP BY school_code HAVING count(DISTINCT dept_name)  <  5"}
{"question": "How many different departments are there in each school that has less than 5 apartments?", "query": "SELECT count(DISTINCT dept_name) ,  school_code FROM department GROUP BY school_code HAVING count(DISTINCT dept_name)  <  5"}
{"question": "How many sections does each course has?", "query": "SELECT count(*) ,  crs_code FROM CLASS GROUP BY crs_code"}
{"question": "How many sections does each course have?", "query": "SELECT count(*) ,  crs_code FROM CLASS GROUP BY crs_code"}
{"question": "What is the total credit does each department offer?", "query": "SELECT sum(crs_credit) ,  dept_code FROM course GROUP BY dept_code"}
{"question": "How many credits does the department offer?", "query": "SELECT sum(crs_credit) ,  dept_code FROM course GROUP BY dept_code"}
{"question": "Find the number of classes offered for all class rooms that held at least 2 classes.", "query": "SELECT count(*) ,  class_room FROM CLASS GROUP BY class_room HAVING count(*)  >=  2"}
{"question": "For each classroom with at least 2 classes, how many classes are offered?", "query": "SELECT count(*) ,  class_room FROM CLASS GROUP BY class_room HAVING count(*)  >=  2"}
{"question": "Find the number of classes in each department.", "query": "SELECT count(*) ,  dept_code FROM CLASS AS T1 JOIN course AS T2 ON T1.crs_code  =  T2.crs_code GROUP BY dept_code"}
{"question": "How many classes are held in each department?", "query": "SELECT count(*) ,  dept_code FROM CLASS AS T1 JOIN course AS T2 ON T1.crs_code  =  T2.crs_code GROUP BY dept_code"}
{"question": "Find the number of classes in each school.", "query": "SELECT count(*) ,  T3.school_code FROM CLASS AS T1 JOIN course AS T2 ON T1.crs_code  =  T2.crs_code JOIN department AS T3 ON T2.dept_code  =  T3.dept_code GROUP BY T3.school_code"}
{"question": "How many classes exist for each school?", "query": "SELECT count(*) ,  T3.school_code FROM CLASS AS T1 JOIN course AS T2 ON T1.crs_code  =  T2.crs_code JOIN department AS T3 ON T2.dept_code  =  T3.dept_code GROUP BY T3.school_code"}
{"question": "What is the number of professors for different school?", "query": "SELECT count(*) ,  T1.school_code FROM department AS T1 JOIN professor AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.school_code"}
{"question": "How many different professors are there for the different schools?", "query": "SELECT count(*) ,  T1.school_code FROM department AS T1 JOIN professor AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.school_code"}
{"question": "Find the count and code of the job has most employees.", "query": "SELECT emp_jobcode ,  count(*) FROM employee GROUP BY emp_jobcode ORDER BY count(*) DESC LIMIT 1"}
{"question": "What is the count and code of the job with the most employee?", "query": "SELECT emp_jobcode ,  count(*) FROM employee GROUP BY emp_jobcode ORDER BY count(*) DESC LIMIT 1"}
{"question": "Which school has the smallest amount of professors?", "query": "SELECT T1.school_code FROM department AS T1 JOIN professor AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.school_code ORDER BY count(*) LIMIT 1"}
{"question": "Which school has the fewest professors?", "query": "SELECT T1.school_code FROM department AS T1 JOIN professor AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.school_code ORDER BY count(*) LIMIT 1"}
{"question": "Find the number of professors with a Ph.D. degree in each department.", "query": "SELECT count(*) ,  dept_code FROM professor WHERE prof_high_degree  =  'Ph.D.' GROUP BY dept_code"}
{"question": "How many professors have a Ph.D. in each department?", "query": "SELECT count(*) ,  dept_code FROM professor WHERE prof_high_degree  =  'Ph.D.' GROUP BY dept_code"}
{"question": "Find the number of students for each department.", "query": "SELECT count(*) ,  dept_code FROM student GROUP BY dept_code"}
{"question": "Find the total number of hours have done for all students in each department.", "query": "SELECT sum(stu_hrs) ,  dept_code FROM student GROUP BY dept_code"}
{"question": "How many hours do the students spend studying in each department?", "query": "SELECT sum(stu_hrs) ,  dept_code FROM student GROUP BY dept_code"}
{"question": "Find the max, average, and minimum gpa of all students in each department.", "query": "SELECT max(stu_gpa) ,  avg(stu_gpa) ,  min(stu_gpa) ,  dept_code FROM student GROUP BY dept_code"}
{"question": "What is the highest, lowest, and average student GPA for every department?", "query": "SELECT max(stu_gpa) ,  avg(stu_gpa) ,  min(stu_gpa) ,  dept_code FROM student GROUP BY dept_code"}
{"question": "What is the name and the average gpa of department whose students have the highest average gpa?", "query": "SELECT T2.dept_name ,  avg(T1.stu_gpa) FROM student AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.dept_code ORDER BY avg(T1.stu_gpa) DESC LIMIT 1"}
{"question": "Which department has the highest average student GPA, and what is the average gpa?", "query": "SELECT T2.dept_name ,  avg(T1.stu_gpa) FROM student AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.dept_code ORDER BY avg(T1.stu_gpa) DESC LIMIT 1"}
{"question": "how many schools exist in total?", "query": "SELECT count(DISTINCT school_code) FROM department"}
{"question": "How many schools are there in the department?", "query": "SELECT count(DISTINCT school_code) FROM department"}
{"question": "How many different classes are there?", "query": "SELECT count(DISTINCT class_code) FROM CLASS"}
{"question": "How many unique classes are offered?", "query": "SELECT count(DISTINCT class_code) FROM CLASS"}
{"question": "How many courses are offered?", "query": "SELECT count(DISTINCT crs_code) FROM CLASS"}
{"question": "What are the number of different course codes?", "query": "SELECT count(DISTINCT crs_code) FROM CLASS"}
{"question": "How many departments does the college has?", "query": "SELECT count(DISTINCT dept_name) FROM department"}
{"question": "How many different departments are there?", "query": "SELECT count(DISTINCT dept_name) FROM department"}
{"question": "How many courses are offered by the Computer Info. Systems department?", "query": "SELECT count(*) FROM department AS T1 JOIN course AS T2 ON T1.dept_code  =  T2.dept_code WHERE dept_name  =  \"Computer Info. Systems\""}
{"question": "How many courses does the department of Computer Information Systmes offer?", "query": "SELECT count(*) FROM department AS T1 JOIN course AS T2 ON T1.dept_code  =  T2.dept_code WHERE dept_name  =  \"Computer Info. Systems\""}
{"question": "How many sections does course ACCT-211 has?", "query": "SELECT count(DISTINCT class_section) FROM CLASS WHERE crs_code  =  'ACCT-211'"}
{"question": "What is the number of different class sections offered in the course ACCT-211?", "query": "SELECT count(DISTINCT class_section) FROM CLASS WHERE crs_code  =  'ACCT-211'"}
{"question": "Find the total credits of all classes offered by each department.", "query": "SELECT sum(T1.crs_credit) ,  T1.dept_code FROM course AS T1 JOIN CLASS AS T2 ON T1.crs_code  =  T2.crs_code GROUP BY T1.dept_code"}
{"question": "What are the total number of credits offered by each department?", "query": "SELECT sum(T1.crs_credit) ,  T1.dept_code FROM course AS T1 JOIN CLASS AS T2 ON T1.crs_code  =  T2.crs_code GROUP BY T1.dept_code"}
{"question": "Find the name of the department that offers the largest number of credits of all classes.", "query": "SELECT T3.dept_name FROM course AS T1 JOIN CLASS AS T2 ON T1.crs_code  =  T2.crs_code JOIN department AS T3 ON T1.dept_code  =  T3.dept_code GROUP BY T1.dept_code ORDER BY sum(T1.crs_credit) DESC LIMIT 1"}
{"question": "Which department offers the most credits all together?", "query": "SELECT T3.dept_name FROM course AS T1 JOIN CLASS AS T2 ON T1.crs_code  =  T2.crs_code JOIN department AS T3 ON T1.dept_code  =  T3.dept_code GROUP BY T1.dept_code ORDER BY sum(T1.crs_credit) DESC LIMIT 1"}
{"question": "How many students enrolled in class ACCT-211?", "query": "SELECT count(*) FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code WHERE T1.crs_code  =  'ACCT-211'"}
{"question": "What are the total number of students enrolled in ACCT-211?", "query": "SELECT count(*) FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code WHERE T1.crs_code  =  'ACCT-211'"}
{"question": "What is the first name of each student enrolled in class ACCT-211?", "query": "SELECT T3.stu_fname FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN student AS T3 ON T2.stu_num  =  T3.stu_num WHERE T1.crs_code  =  'ACCT-211'"}
{"question": "What are the first names of all students in course ACCT-211?", "query": "SELECT T3.stu_fname FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN student AS T3 ON T2.stu_num  =  T3.stu_num WHERE T1.crs_code  =  'ACCT-211'"}
{"question": "What is the first name of students enrolled in class ACCT-211 and got grade C?", "query": "SELECT T3.stu_fname FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN student AS T3 ON T2.stu_num  =  T3.stu_num WHERE T1.crs_code  =  'ACCT-211' AND T2.enroll_grade  =  'C'"}
{"question": "What are the first names of all students who took ACCT-211 and received a C?", "query": "SELECT T3.stu_fname FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN student AS T3 ON T2.stu_num  =  T3.stu_num WHERE T1.crs_code  =  'ACCT-211' AND T2.enroll_grade  =  'C'"}
{"question": "Find the total number of employees.", "query": "SELECT count(*) FROM employee"}
{"question": "How many employees are there all together?", "query": "SELECT count(*) FROM employee"}
{"question": "How many professors do have a Ph.D. degree?", "query": "SELECT count(*) FROM professor WHERE prof_high_degree  =  'Ph.D.'"}
{"question": "What is the total number of professors with a Ph.D. ?", "query": "SELECT count(*) FROM professor WHERE prof_high_degree  =  'Ph.D.'"}
{"question": "How many students are enrolled in the class taught by some professor from the accounting department?", "query": "SELECT count(*) FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN course AS T3 ON T1.crs_code  =  T3.crs_code JOIN department AS T4 ON T3.dept_code  =  T4.dept_code WHERE T4.dept_name  =  'Accounting'"}
{"question": "How many students are enrolled in some classes that are taught by an accounting professor?", "query": "SELECT count(*) FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN course AS T3 ON T1.crs_code  =  T3.crs_code JOIN department AS T4 ON T3.dept_code  =  T4.dept_code WHERE T4.dept_name  =  'Accounting'"}
{"question": "What is the name of the department that has the largest number of students enrolled?", "query": "SELECT T4.dept_name FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN course AS T3 ON T1.crs_code  =  T3.crs_code JOIN department AS T4 ON T3.dept_code  =  T4.dept_code GROUP BY T3.dept_code ORDER BY count(*) DESC LIMIT 1"}
{"question": "What is the name of the department with the most students enrolled?", "query": "SELECT T4.dept_name FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN course AS T3 ON T1.crs_code  =  T3.crs_code JOIN department AS T4 ON T3.dept_code  =  T4.dept_code GROUP BY T3.dept_code ORDER BY count(*) DESC LIMIT 1"}
{"question": "list names of all departments ordered by their names.", "query": "SELECT dept_name FROM department ORDER BY dept_name"}
{"question": "What are the names of all departments in alphabetical order?", "query": "SELECT dept_name FROM department ORDER BY dept_name"}
{"question": "List the codes of all courses that take place in room KLR209.", "query": "SELECT class_code FROM CLASS WHERE class_room  =  'KLR209'"}
{"question": "What are the codes of all the courses that are located in room KLR209?", "query": "SELECT class_code FROM CLASS WHERE class_room  =  'KLR209'"}
{"question": "List the first name of all employees with job code PROF ordered by their date of birth.", "query": "SELECT emp_fname FROM employee WHERE emp_jobcode  =  'PROF' ORDER BY emp_dob"}
{"question": "What are the first names of all employees that are professors ordered by date of birth?", "query": "SELECT emp_fname FROM employee WHERE emp_jobcode  =  'PROF' ORDER BY emp_dob"}
{"question": "Find the first names and offices of all professors sorted by alphabetical order of their first name.", "query": "SELECT T2.emp_fname ,  T1.prof_office FROM professor AS T1 JOIN employee AS T2 ON T1.emp_num  =  T2.emp_num ORDER BY T2.emp_fname"}
{"question": "What are the first names and office locations for all professors sorted alphabetically by first name?", "query": "SELECT T2.emp_fname ,  T1.prof_office FROM professor AS T1 JOIN employee AS T2 ON T1.emp_num  =  T2.emp_num ORDER BY T2.emp_fname"}
{"question": "What is the first and last name of the oldest employee?", "query": "SELECT emp_fname ,  emp_lname FROM employee ORDER BY emp_dob LIMIT 1"}
{"question": "What are the first and last names of the employee with the earliest date of birth?", "query": "SELECT emp_fname ,  emp_lname FROM employee ORDER BY emp_dob LIMIT 1"}
{"question": "What is the first, last name, gpa of the youngest one among students whose GPA is above 3?", "query": "SELECT stu_fname ,  stu_lname ,  stu_gpa FROM student WHERE stu_gpa  >  3 ORDER BY stu_dob DESC LIMIT 1"}
{"question": "What is the first and last name of the youngest student with a GPA above 3, and what is their GPA?", "query": "SELECT stu_fname ,  stu_lname ,  stu_gpa FROM student WHERE stu_gpa  >  3 ORDER BY stu_dob DESC LIMIT 1"}
{"question": "What is the first name of students who got grade C in any class?", "query": "SELECT DISTINCT stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num WHERE enroll_grade  =  'C'"}
{"question": "What are the first names of all students who got a grade C in a class?", "query": "SELECT DISTINCT stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num WHERE enroll_grade  =  'C'"}
{"question": "What is the name of department where has the smallest number of professors?", "query": "SELECT T2.dept_name FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.dept_code ORDER BY count(*) LIMIT 1"}
{"question": "What is the name of the department with the fewest professors?", "query": "SELECT T2.dept_name FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.dept_code ORDER BY count(*) LIMIT 1"}
{"question": "What is the name of department where has the largest number of professors with a Ph.D. degree?", "query": "SELECT T2.dept_name ,  T1.dept_code FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code WHERE T1.prof_high_degree  =  'Ph.D.' GROUP BY T1.dept_code ORDER BY count(*) DESC LIMIT 1"}
{"question": "Which department has the most professors with a Ph.D.?", "query": "SELECT T2.dept_name ,  T1.dept_code FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code WHERE T1.prof_high_degree  =  'Ph.D.' GROUP BY T1.dept_code ORDER BY count(*) DESC LIMIT 1"}
{"question": "What are the first names of the professors who do not teach a class.", "query": "SELECT emp_fname FROM employee WHERE emp_jobcode  =  'PROF' EXCEPT SELECT T1.emp_fname FROM employee AS T1 JOIN CLASS AS T2 ON T1.emp_num  =  T2.prof_num"}
{"question": "What are the first names of all professors not teaching any classes?", "query": "SELECT emp_fname FROM employee WHERE emp_jobcode  =  'PROF' EXCEPT SELECT T1.emp_fname FROM employee AS T1 JOIN CLASS AS T2 ON T1.emp_num  =  T2.prof_num"}
{"question": "What is the first names of the professors from the history department who do not teach a class.", "query": "SELECT T1.emp_fname FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num JOIN department AS T3 ON T2.dept_code  =  T3.dept_code WHERE T3.dept_name  =  'History' EXCEPT SELECT T4.emp_fname FROM employee AS T4 JOIN CLASS AS T5 ON T4.emp_num  =  T5.prof_num"}
{"question": "What are the first names of all history professors who do not teach?", "query": "SELECT T1.emp_fname FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num JOIN department AS T3 ON T2.dept_code  =  T3.dept_code WHERE T3.dept_name  =  'History' EXCEPT SELECT T4.emp_fname FROM employee AS T4 JOIN CLASS AS T5 ON T4.emp_num  =  T5.prof_num"}
{"question": "What is the last name and office of the professor from the history department?", "query": "SELECT T1.emp_lname ,  T2.prof_office FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num JOIN department AS T3 ON T2.dept_code  =  T3.dept_code WHERE T3.dept_name  =  'History'"}
{"question": "What are the last name and office of all history professors?", "query": "SELECT T1.emp_lname ,  T2.prof_office FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num JOIN department AS T3 ON T2.dept_code  =  T3.dept_code WHERE T3.dept_name  =  'History'"}
{"question": "What is department name and office for the professor whose last name is Heffington?", "query": "SELECT T3.dept_name  ,  T2.prof_office FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num JOIN department AS T3 ON T2.dept_code  =  T3.dept_code WHERE T1.emp_lname  =  'Heffington'"}
{"question": "What is the name of the department and office location for the professor with the last name of Heffington?", "query": "SELECT T3.dept_name  ,  T2.prof_office FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num JOIN department AS T3 ON T2.dept_code  =  T3.dept_code WHERE T1.emp_lname  =  'Heffington'"}
{"question": "Find the last name and hire date of the professor who is in office DRE 102.", "query": "SELECT T1.emp_lname ,  T1.emp_hiredate FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num WHERE T2.prof_office  =  'DRE 102'"}
{"question": "What is the last name of the professor whose office is located in DRE 102, and when were they hired?", "query": "SELECT T1.emp_lname ,  T1.emp_hiredate FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num WHERE T2.prof_office  =  'DRE 102'"}
{"question": "What is the code of the course which the student whose last name is Smithson took?", "query": "SELECT T1.crs_code FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN student AS T3 ON T3.stu_num  =  T2.stu_num WHERE T3.stu_lname  =  'Smithson'"}
{"question": "What are the course codes for every class that the student with the last name Smithson took?", "query": "SELECT T1.crs_code FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN student AS T3 ON T3.stu_num  =  T2.stu_num WHERE T3.stu_lname  =  'Smithson'"}
{"question": "What are the description and credit of the course which the student whose last name is Smithson took?", "query": "SELECT T4.crs_description ,  T4.crs_credit FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN student AS T3 ON T3.stu_num  =  T2.stu_num JOIN course AS T4 ON T4.crs_code  =  T1.crs_code WHERE T3.stu_lname  =  'Smithson'"}
{"question": "How many credits is the course that the student with the last name Smithson took, and what is its description?", "query": "SELECT T4.crs_description ,  T4.crs_credit FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN student AS T3 ON T3.stu_num  =  T2.stu_num JOIN course AS T4 ON T4.crs_code  =  T1.crs_code WHERE T3.stu_lname  =  'Smithson'"}
{"question": "How many professors who has a either Ph.D. or MA degree?", "query": "SELECT count(*) FROM professor WHERE prof_high_degree  =  'Ph.D.' OR prof_high_degree  =  'MA'"}
{"question": "How many professors attained either Ph.D. or Masters degrees?", "query": "SELECT count(*) FROM professor WHERE prof_high_degree  =  'Ph.D.' OR prof_high_degree  =  'MA'"}
{"question": "How many professors who are from either Accounting or Biology department?", "query": "SELECT count(*) FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code WHERE T2.dept_name  =  'Accounting' OR T2.dept_name  =  'Biology'"}
{"question": "What is the number of professors who are in the Accounting or Biology departments?", "query": "SELECT count(*) FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code WHERE T2.dept_name  =  'Accounting' OR T2.dept_name  =  'Biology'"}
{"question": "Find the first name of the professor who is teaching two courses with code CIS-220 and QM-261.", "query": "SELECT T1.emp_fname FROM employee AS T1 JOIN CLASS AS T2 ON T1.emp_num  =  T2.prof_num WHERE crs_code  =  'CIS-220' INTERSECT SELECT T1.emp_fname FROM employee AS T1 JOIN CLASS AS T2 ON T1.emp_num  =  T2.prof_num WHERE crs_code  =  'QM-261'"}
{"question": "What is the first name of the professor who is teaching CIS-220 and QM-261?", "query": "SELECT T1.emp_fname FROM employee AS T1 JOIN CLASS AS T2 ON T1.emp_num  =  T2.prof_num WHERE crs_code  =  'CIS-220' INTERSECT SELECT T1.emp_fname FROM employee AS T1 JOIN CLASS AS T2 ON T1.emp_num  =  T2.prof_num WHERE crs_code  =  'QM-261'"}
{"question": "Find the first name of student who is taking classes from accounting and Computer Info. Systems departments", "query": "SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T2.class_code  =  T3.class_code JOIN course AS T4 ON T3.crs_code  =  T4.crs_code JOIN department AS T5 ON T5.dept_code  =  T4.dept_code WHERE T5.dept_name  =  'Accounting' INTERSECT SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T2.class_code  =  T3.class_code JOIN course AS T4 ON T3.crs_code  =  T4.crs_code JOIN department AS T5 ON T5.dept_code  =  T4.dept_code WHERE T5.dept_name  =  'Computer Info. Systems'"}
{"question": "What are the first names of all students taking accoutning and Computer Information Systems classes?", "query": "SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T2.class_code  =  T3.class_code JOIN course AS T4 ON T3.crs_code  =  T4.crs_code JOIN department AS T5 ON T5.dept_code  =  T4.dept_code WHERE T5.dept_name  =  'Accounting' INTERSECT SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T2.class_code  =  T3.class_code JOIN course AS T4 ON T3.crs_code  =  T4.crs_code JOIN department AS T5 ON T5.dept_code  =  T4.dept_code WHERE T5.dept_name  =  'Computer Info. Systems'"}
{"question": "What is the average gpa of the students enrolled in the course with code ACCT-211?", "query": "SELECT avg(T2.stu_gpa) FROM enroll AS T1 JOIN student AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T1.class_code  =  T3.class_code WHERE T3.crs_code  =  'ACCT-211'"}
{"question": "What is the average GPA of students taking ACCT-211?", "query": "SELECT avg(T2.stu_gpa) FROM enroll AS T1 JOIN student AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T1.class_code  =  T3.class_code WHERE T3.crs_code  =  'ACCT-211'"}
{"question": "What is the first name, gpa and phone number of the top 5 students with highest gpa?", "query": "SELECT stu_gpa ,  stu_phone ,  stu_fname FROM student ORDER BY stu_gpa DESC LIMIT 5"}
{"question": "What is the first name, GPA, and phone number of the students with the top 5 GPAs?", "query": "SELECT stu_gpa ,  stu_phone ,  stu_fname FROM student ORDER BY stu_gpa DESC LIMIT 5"}
{"question": "What is the department name of the students with lowest gpa belongs to?", "query": "SELECT T2.dept_name FROM student AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code ORDER BY stu_gpa LIMIT 1"}
{"question": "What is the name of the department with the student that has the lowest GPA?", "query": "SELECT T2.dept_name FROM student AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code ORDER BY stu_gpa LIMIT 1"}
{"question": "Find the first name and gpa of the students whose gpa is lower than the average gpa of all students.", "query": "SELECT stu_fname ,  stu_gpa FROM student WHERE stu_gpa  <  (SELECT avg(stu_gpa) FROM student)"}
{"question": "What is the first name and GPA of every student that has a GPA lower than average?", "query": "SELECT stu_fname ,  stu_gpa FROM student WHERE stu_gpa  <  (SELECT avg(stu_gpa) FROM student)"}
{"question": "Find the name and address of the department that has the highest number of students.", "query": "SELECT T2.dept_name ,  T2.dept_address FROM student AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.dept_code ORDER BY count(*) DESC LIMIT 1"}
{"question": "What is the name and address of the department with the most students?", "query": "SELECT T2.dept_name ,  T2.dept_address FROM student AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.dept_code ORDER BY count(*) DESC LIMIT 1"}
{"question": "Find the name, address, number of students in the departments that have the top 3 highest number of students.", "query": "SELECT T2.dept_name ,  T2.dept_address ,  count(*) FROM student AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.dept_code ORDER BY count(*) DESC LIMIT 3"}
{"question": "What is the name, address, and number of students in the departments that have the 3 most students?", "query": "SELECT T2.dept_name ,  T2.dept_address ,  count(*) FROM student AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.dept_code ORDER BY count(*) DESC LIMIT 3"}
{"question": "Find the first name and office of the professor who is in the history department and has a Ph.D. degree.", "query": "SELECT T1.emp_fname ,  T2.prof_office FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num JOIN department AS T3 ON T3.dept_code  =  T2.dept_code WHERE T3.dept_name  =  'History' AND T2.prof_high_degree  =  'Ph.D.'"}
{"question": "What are the first names and office of the professors who are in the history department and have a Ph.D?", "query": "SELECT T1.emp_fname ,  T2.prof_office FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num JOIN department AS T3 ON T3.dept_code  =  T2.dept_code WHERE T3.dept_name  =  'History' AND T2.prof_high_degree  =  'Ph.D.'"}
{"question": "Find the first names of all instructors who have taught some course and the course code.", "query": "SELECT T2.emp_fname ,  T1.crs_code FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num"}
{"question": "What are the first names of all teachers who have taught a course and the corresponding course codes?", "query": "SELECT T2.emp_fname ,  T1.crs_code FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num"}
{"question": "Find the first names of all instructors who have taught some course and the course description.", "query": "SELECT T2.emp_fname ,  T3.crs_description FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN course AS T3 ON T1.crs_code  =  T3.crs_code"}
{"question": "What are the first names of all teachers who have taught a course and the corresponding descriptions?", "query": "SELECT T2.emp_fname ,  T3.crs_description FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN course AS T3 ON T1.crs_code  =  T3.crs_code"}
{"question": "Find the first names and offices of all instructors who have taught some course and also find the course description.", "query": "SELECT T2.emp_fname ,  T4.prof_office ,  T3.crs_description FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN course AS T3 ON T1.crs_code  =  T3.crs_code JOIN professor AS T4 ON T2.emp_num  =  T4.emp_num"}
{"question": "What are the first names, office locations of all lecturers who have taught some course?", "query": "SELECT T2.emp_fname ,  T4.prof_office ,  T3.crs_description FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN course AS T3 ON T1.crs_code  =  T3.crs_code JOIN professor AS T4 ON T2.emp_num  =  T4.emp_num"}
{"question": "Find the first names and offices of all instructors who have taught some course and the course description and the department name.", "query": "SELECT T2.emp_fname ,  T4.prof_office ,  T3.crs_description ,  T5.dept_name FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN course AS T3 ON T1.crs_code  =  T3.crs_code JOIN professor AS T4 ON T2.emp_num  =  T4.emp_num JOIN department AS T5 ON T4.dept_code  =  T5.dept_code"}
{"question": "What are the first names, office locations, and departments of all instructors, and also what are the descriptions of the courses they teach?", "query": "SELECT T2.emp_fname ,  T4.prof_office ,  T3.crs_description ,  T5.dept_name FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN course AS T3 ON T1.crs_code  =  T3.crs_code JOIN professor AS T4 ON T2.emp_num  =  T4.emp_num JOIN department AS T5 ON T4.dept_code  =  T5.dept_code"}
{"question": "Find names of all students who took some course and the course description.", "query": "SELECT T1.stu_fname ,  T1.stu_lname ,  T4.crs_description FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T2.class_code  =  T3.class_code JOIN course AS T4 ON T3.crs_code  =  T4.crs_code"}
{"question": "What are the names of all students who took a class and the corresponding course descriptions?", "query": "SELECT T1.stu_fname ,  T1.stu_lname ,  T4.crs_description FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T2.class_code  =  T3.class_code JOIN course AS T4 ON T3.crs_code  =  T4.crs_code"}
{"question": "Find names of all students who took some course and got A or C.", "query": "SELECT T1.stu_fname ,  T1.stu_lname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num WHERE T2.enroll_grade  =  'C' OR T2.enroll_grade  =  'A'"}
{"question": "What are the names of all students taking a course who received an A or C?", "query": "SELECT T1.stu_fname ,  T1.stu_lname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num WHERE T2.enroll_grade  =  'C' OR T2.enroll_grade  =  'A'"}
{"question": "Find the first names of all professors in the Accounting department who is teaching some course and the class room.", "query": "SELECT T2.emp_fname ,  T1.class_room FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN professor AS T3 ON T2.emp_num  =  T3.emp_num JOIN department AS T4 ON T4.dept_code  =  T3.dept_code WHERE T4.dept_name  =  'Accounting'"}
{"question": "What are the first names of all Accounting professors who teach and what are the classrooms of the courses they teach?", "query": "SELECT T2.emp_fname ,  T1.class_room FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN professor AS T3 ON T2.emp_num  =  T3.emp_num JOIN department AS T4 ON T4.dept_code  =  T3.dept_code WHERE T4.dept_name  =  'Accounting'"}
{"question": "Find the first names and degree of all professors who are teaching some class in Computer Info. Systems department.", "query": "SELECT DISTINCT T2.emp_fname ,  T3.prof_high_degree FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN professor AS T3 ON T2.emp_num  =  T3.emp_num JOIN department AS T4 ON T4.dept_code  =  T3.dept_code WHERE T4.dept_name  =  'Computer Info. Systems'"}
{"question": "What are the different first names and highest degree attained for professors teaching in the Computer Information Systems department?", "query": "SELECT DISTINCT T2.emp_fname ,  T3.prof_high_degree FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN professor AS T3 ON T2.emp_num  =  T3.emp_num JOIN department AS T4 ON T4.dept_code  =  T3.dept_code WHERE T4.dept_name  =  'Computer Info. Systems'"}
{"question": "What is the last name of the student who got a grade A in the class with code 10018.", "query": "SELECT T1.stu_lname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num WHERE T2.enroll_grade  =  'A' AND T2.class_code  =  10018"}
{"question": "What is the last name of the student who received an A in the class with the code 10018?", "query": "SELECT T1.stu_lname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num WHERE T2.enroll_grade  =  'A' AND T2.class_code  =  10018"}
{"question": "Find the first name and office of history professor who did not get a Ph.D. degree.", "query": "SELECT T2.emp_fname ,  T1.prof_office FROM professor AS T1 JOIN employee AS T2 ON T1.emp_num  =  T2.emp_num JOIN department AS T3 ON T1.dept_code  =  T3.dept_code WHERE T3.dept_name  =  'History' AND T1.prof_high_degree != 'Ph.D.'"}
{"question": "What are the first names and offices of history professors who don't have Ph.D.s?", "query": "SELECT T2.emp_fname ,  T1.prof_office FROM professor AS T1 JOIN employee AS T2 ON T1.emp_num  =  T2.emp_num JOIN department AS T3 ON T1.dept_code  =  T3.dept_code WHERE T3.dept_name  =  'History' AND T1.prof_high_degree != 'Ph.D.'"}
{"question": "Find the first names of professors who are teaching more than one class.", "query": "SELECT T2.emp_fname FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num GROUP BY T1.prof_num HAVING count(*)  >  1"}
{"question": "What are the first names of all professors who teach more than one class?", "query": "SELECT T2.emp_fname FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num GROUP BY T1.prof_num HAVING count(*)  >  1"}
{"question": "Find the first names of students who took exactly one class.", "query": "SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num GROUP BY T2.stu_num HAVING count(*)  =  1"}
{"question": "What are the first names of student who only took one course?", "query": "SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num GROUP BY T2.stu_num HAVING count(*)  =  1"}
{"question": "Find the name of department that offers the class whose description has the word \"Statistics\".", "query": "SELECT T2.dept_name FROM course AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code WHERE T1.crs_description LIKE '%Statistics%'"}
{"question": "What is the name of the department that offers a course that has a description including the word \"Statistics\"?", "query": "SELECT T2.dept_name FROM course AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code WHERE T1.crs_description LIKE '%Statistics%'"}
{"question": "What is the first name of the student whose last name starting with the letter S and is taking ACCT-211 class?", "query": "SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T2.class_code  =  T3.class_code WHERE T3.crs_code  =  'ACCT-211' AND T1.stu_lname LIKE 'S%'"}
{"question": "What is the first name of the student whose last name starts with the letter S and is taking ACCT-211?", "query": "SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T2.class_code  =  T3.class_code WHERE T3.crs_code  =  'ACCT-211' AND T1.stu_lname LIKE 'S%'"}
{"question": "How many clubs are there?", "query": "SELECT count(*) FROM club"}
{"question": "What is the total number of clubs?", "query": "SELECT count(*) FROM club"}
{"question": "List the distinct region of clubs in ascending alphabetical order.", "query": "SELECT DISTINCT Region FROM club ORDER BY Region ASC"}
{"question": "What are the different regions of clubs in ascending alphabetical order?", "query": "SELECT DISTINCT Region FROM club ORDER BY Region ASC"}
{"question": "What is the average number of gold medals for clubs?", "query": "SELECT avg(Gold) FROM club_rank"}
{"question": "What is the average number of gold medals for a club?", "query": "SELECT avg(Gold) FROM club_rank"}
{"question": "What are the types and countries of competitions?", "query": "SELECT Competition_type ,  Country FROM competition"}
{"question": "What are the types of every competition and in which countries are they located?", "query": "SELECT Competition_type ,  Country FROM competition"}
{"question": "What are the distinct years in which the competitions type is not \"Tournament\"?", "query": "SELECT DISTINCT YEAR FROM competition WHERE Competition_type != \"Tournament\""}
{"question": "What are the different years for all competitions that are not of type equal to tournament?", "query": "SELECT DISTINCT YEAR FROM competition WHERE Competition_type != \"Tournament\""}
{"question": "What are the maximum and minimum number of silver medals for clubs.", "query": "SELECT max(Silver) ,  min(Silver) FROM club_rank"}
{"question": "What are the maximum and minimum number of silver medals for all the clubs?", "query": "SELECT max(Silver) ,  min(Silver) FROM club_rank"}
{"question": "How many clubs have total medals less than 10?", "query": "SELECT count(*) FROM club_rank WHERE Total  <  10"}
{"question": "What is the total number of clubs that have less than 10 medals in total?", "query": "SELECT count(*) FROM club_rank WHERE Total  <  10"}
{"question": "List all club names in ascending order of start year.", "query": "SELECT name FROM club ORDER BY Start_year ASC"}
{"question": "What are the names of all the clubs starting with the oldest?", "query": "SELECT name FROM club ORDER BY Start_year ASC"}
{"question": "List all club names in descending alphabetical order.", "query": "SELECT name FROM club ORDER BY name DESC"}
{"question": "What are the names of all the clubs ordered in descending alphabetical order?", "query": "SELECT name FROM club ORDER BY name DESC"}
{"question": "Please show the names and the players of clubs.", "query": "SELECT T1.name ,  T2.Player_id FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID"}
{"question": "What are the names and players of all the clubs?", "query": "SELECT T1.name ,  T2.Player_id FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID"}
{"question": "Show the names of clubs that have players with position \"Right Wing\".", "query": "SELECT T1.name FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID WHERE T2.Position  =  \"Right Wing\""}
{"question": "What are the names of the clubs that have players in the position of \"Right Wing\"?", "query": "SELECT T1.name FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID WHERE T2.Position  =  \"Right Wing\""}
{"question": "What is the average points of players from club with name \"AIB\".", "query": "SELECT avg(T2.Points) FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID WHERE T1.name  =  \"AIB\""}
{"question": "What is the average number of points for players from the \"AIB\" club?", "query": "SELECT avg(T2.Points) FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID WHERE T1.name  =  \"AIB\""}
{"question": "List the position of players and the average number of points of players of each position.", "query": "SELECT POSITION ,  avg(Points) FROM player GROUP BY POSITION"}
{"question": "For each position, what is the average number of points for players in that position?", "query": "SELECT POSITION ,  avg(Points) FROM player GROUP BY POSITION"}
{"question": "List the position of players with average number of points scored by players of that position bigger than 20.", "query": "SELECT POSITION FROM player GROUP BY name HAVING avg(Points)  >=  20"}
{"question": "What are the positions of players whose average number of points scored by that position is larger than 20?", "query": "SELECT POSITION FROM player GROUP BY name HAVING avg(Points)  >=  20"}
{"question": "List the types of competition and the number of competitions of each type.", "query": "SELECT Competition_type ,  COUNT(*) FROM competition GROUP BY Competition_type"}
{"question": "What are the types of competition and number of competitions for that type?", "query": "SELECT Competition_type ,  COUNT(*) FROM competition GROUP BY Competition_type"}
{"question": "List the most common type of competition.", "query": "SELECT Competition_type FROM competition GROUP BY Competition_type ORDER BY COUNT(*) DESC LIMIT 1"}
{"question": "What is the most common competition type?", "query": "SELECT Competition_type FROM competition GROUP BY Competition_type ORDER BY COUNT(*) DESC LIMIT 1"}
{"question": "List the types of competition that have at most five competitions of that type.", "query": "SELECT Competition_type FROM competition GROUP BY Competition_type HAVING COUNT(*)  <=  5"}
{"question": "What are the types of competition that have most 5 competitions for that type?", "query": "SELECT Competition_type FROM competition GROUP BY Competition_type HAVING COUNT(*)  <=  5"}
{"question": "List the names of clubs that do not have any players.", "query": "SELECT name FROM CLub WHERE Club_ID NOT IN (SELECT Club_ID FROM player)"}
{"question": "What are the names of all clubs that do not have any players?", "query": "SELECT name FROM CLub WHERE Club_ID NOT IN (SELECT Club_ID FROM player)"}
{"question": "What are the positions with both players having more than 20 points and less than 10 points.", "query": "SELECT POSITION FROM player WHERE Points  >  20 INTERSECT SELECT POSITION FROM player WHERE Points  <  10"}
{"question": "What are the positions of both players that have more than 20 20 points and less than 10 points?", "query": "SELECT POSITION FROM player WHERE Points  >  20 INTERSECT SELECT POSITION FROM player WHERE Points  <  10"}
{"question": "Show total points of all players.", "query": "SELECT sum(Points) FROM player"}
{"question": "What is the total number of points for all players?", "query": "SELECT sum(Points) FROM player"}
{"question": "how many different positions are there?", "query": "SELECT count(DISTINCT POSITION) FROM player"}
{"question": "How many different position for players are listed?", "query": "SELECT count(DISTINCT POSITION) FROM player"}
{"question": "what are the name of players who get more than the average points.", "query": "SELECT name FROM player WHERE points  >  (SELECT avg(points) FROM player)"}
{"question": "What are the names of all players that got more than the average number of points?", "query": "SELECT name FROM player WHERE points  >  (SELECT avg(points) FROM player)"}
{"question": "find the number of players whose points are lower than 30 in each position.", "query": "SELECT count(*) ,  POSITION FROM player WHERE points  <  30 GROUP BY POSITION"}
{"question": "What is the number of players who have points less than 30 for each position?", "query": "SELECT count(*) ,  POSITION FROM player WHERE points  <  30 GROUP BY POSITION"}
{"question": "which country did participated in the most number of Tournament competitions?", "query": "SELECT country FROM competition WHERE competition_type  =  'Tournament' GROUP BY country ORDER BY count(*) DESC LIMIT 1"}
{"question": "what is the name of the country that participated in the most tournament competitions?", "query": "SELECT country FROM competition WHERE competition_type  =  'Tournament' GROUP BY country ORDER BY count(*) DESC LIMIT 1"}
{"question": "which countries did participated in both Friendly and Tournament type competitions.", "query": "SELECT country FROM competition WHERE competition_type  =  'Friendly' INTERSECT SELECT country FROM competition WHERE competition_type  =  'Tournament'"}
{"question": "What are the countries that participated in both friendly and tournament type competitions?", "query": "SELECT country FROM competition WHERE competition_type  =  'Friendly' INTERSECT SELECT country FROM competition WHERE competition_type  =  'Tournament'"}
{"question": "Find the countries that have never participated in any competition with Friendly type.", "query": "SELECT country FROM competition EXCEPT SELECT country FROM competition WHERE competition_type  =  'Friendly'"}
{"question": "What are the countries that have never participated in any friendly-type competitions?", "query": "SELECT country FROM competition EXCEPT SELECT country FROM competition WHERE competition_type  =  'Friendly'"}
{"question": "How many furniture components are there in total?", "query": "SELECT sum(num_of_component) FROM furniture"}
{"question": "Return the name and id of the furniture with the highest market rate.", "query": "SELECT name ,  furniture_id FROM furniture ORDER BY market_rate DESC LIMIT 1"}
{"question": "find the total market rate of the furnitures that have the top 2 market shares.", "query": "SELECT sum(market_rate) FROM furniture ORDER BY market_rate DESC LIMIT 2"}
{"question": "Find the component amounts and names of all furnitures that have more than 10 components.", "query": "SELECT Num_of_Component ,  name FROM furniture WHERE Num_of_Component  >  10"}
{"question": "Find the name and component amount of the least popular furniture.", "query": "SELECT name ,  Num_of_Component FROM furniture ORDER BY market_rate LIMIT 1"}
{"question": "Find the names of furnitures whose prices are lower than the highest price.", "query": "SELECT t1.name FROM furniture AS t1 JOIN furniture_manufacte AS t2 ON t1.Furniture_ID  =  t2.Furniture_ID WHERE t2.Price_in_Dollar  <  (SELECT max(Price_in_Dollar) FROM furniture_manufacte)"}
{"question": "Which manufacturer has the most number of shops? List its name and year of opening.", "query": "SELECT open_year ,  name FROM manufacturer ORDER BY num_of_shops DESC LIMIT 1"}
{"question": "Find the average number of factories for the manufacturers that have more than 20 shops.", "query": "SELECT avg(Num_of_Factories) FROM manufacturer WHERE num_of_shops  >  20"}
{"question": "List all manufacturer names and ids ordered by their opening year.", "query": "SELECT name ,  manufacturer_id FROM manufacturer ORDER BY open_year"}
{"question": "Give me the name and year of opening of the manufacturers that have either less than 10 factories or more than 10 shops.", "query": "SELECT name ,  open_year FROM manufacturer WHERE num_of_shops  >  10 OR Num_of_Factories  <  10"}
{"question": "what is the average number of factories and maximum number of shops for manufacturers that opened before 1990.", "query": "SELECT max(num_of_shops) ,  avg(Num_of_Factories) FROM manufacturer WHERE open_year  <  1990"}
{"question": "Find the id and number of shops for the company that produces the most expensive furniture.", "query": "SELECT t1.manufacturer_id ,  t1.num_of_shops FROM manufacturer AS t1 JOIN furniture_manufacte AS t2 ON t1.manufacturer_id  =  t2.manufacturer_id ORDER BY t2.Price_in_Dollar DESC LIMIT 1"}
{"question": "Find the number of funiture types produced by each manufacturer as well as the company names.", "query": "SELECT count(*) ,  t1.name FROM manufacturer AS t1 JOIN furniture_manufacte AS t2 ON t1.manufacturer_id  =  t2.manufacturer_id GROUP BY t1.manufacturer_id"}
{"question": "Give me the names and prices of furnitures which some companies are manufacturing.", "query": "SELECT t1.name ,  t2.price_in_dollar FROM furniture AS t1 JOIN furniture_manufacte AS t2 ON t1.Furniture_ID  =  t2.Furniture_ID"}
{"question": "Find the market shares and names of furnitures which no any company is producing in our records.", "query": "SELECT Market_Rate ,  name FROM furniture WHERE Furniture_ID NOT IN (SELECT Furniture_ID FROM furniture_manufacte)"}
{"question": "Find the name of the company that produces both furnitures with less than 6 components and furnitures with more than 10 components.", "query": "SELECT t3.name FROM furniture AS t1 JOIN furniture_manufacte AS t2 ON t1.Furniture_ID  =  t2.Furniture_ID JOIN manufacturer AS t3 ON t2.manufacturer_id  =  t3.manufacturer_id WHERE t1.num_of_component  <  6 INTERSECT SELECT t3.name FROM furniture AS t1 JOIN furniture_manufacte AS t2 ON t1.Furniture_ID  =  t2.Furniture_ID JOIN manufacturer AS t3 ON t2.manufacturer_id  =  t3.manufacturer_id WHERE t1.num_of_component  >  10"}
{"question": "Display the first name and department name for each employee.", "query": "SELECT T1.first_name ,  T2.department_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id"}
{"question": "What are the first name and department name of all employees?", "query": "SELECT T1.first_name ,  T2.department_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id"}
{"question": "List the full name (first and last name), and salary for those employees who earn below 6000.", "query": "SELECT first_name ,  last_name ,  salary FROM employees WHERE salary  <  6000"}
{"question": "What are the full names and salaries for any employees earning less than 6000?", "query": "SELECT first_name ,  last_name ,  salary FROM employees WHERE salary  <  6000"}
{"question": "Display the first name, and department number for all employees whose last name is \"McEwen\".", "query": "SELECT first_name ,  department_id FROM employees WHERE last_name  =  'McEwen'"}
{"question": "What are the first names and department numbers for employees with last name McEwen?", "query": "SELECT first_name ,  department_id FROM employees WHERE last_name  =  'McEwen'"}
{"question": "Return all the information for all employees without any department number.", "query": "SELECT * FROM employees WHERE department_id  =  \"null\""}
{"question": "What are all the employees without a department number?", "query": "SELECT * FROM employees WHERE department_id  =  \"null\""}
{"question": "Display all the information about the department Marketing.", "query": "SELECT * FROM  departments WHERE department_name  =  'Marketing'"}
{"question": "What is all the information about the Marketing department?", "query": "SELECT * FROM  departments WHERE department_name  =  'Marketing'"}
{"question": "when is the hire date for those employees whose first name does not containing the letter M?", "query": "SELECT hire_date FROM employees WHERE first_name NOT LIKE '%M%'"}
{"question": "On what dates were employees without the letter M in their first names hired?", "query": "SELECT hire_date FROM employees WHERE first_name NOT LIKE '%M%'"}
{"question": "display the full name (first and last), hire date, salary, and department number for those employees whose first name does not containing the letter M.", "query": "SELECT first_name ,  last_name ,  hire_date ,  salary ,  department_id FROM employees WHERE first_name NOT LIKE '%M%'"}
{"question": "What are the full name, hire date, salary, and department id for employees without the letter M in their first name?", "query": "SELECT first_name ,  last_name ,  hire_date ,  salary ,  department_id FROM employees WHERE first_name NOT LIKE '%M%'"}
{"question": "display the full name (first and last), hire date, salary, and department number for those employees whose first name does not containing the letter M and make the result set in ascending order by department number.", "query": "SELECT first_name ,  last_name ,  hire_date ,  salary ,  department_id FROM employees WHERE first_name NOT LIKE '%M%' ORDER BY department_id"}
{"question": "What are the full name, hire data, salary and department id for employees without the letter M in their first name, ordered by ascending department id?", "query": "SELECT first_name ,  last_name ,  hire_date ,  salary ,  department_id FROM employees WHERE first_name NOT LIKE '%M%' ORDER BY department_id"}
{"question": "what is the phone number of employees whose salary is in the range of 8000 and 12000?", "query": "SELECT phone_number FROM employees WHERE salary BETWEEN 8000 AND 12000"}
{"question": "Return the phone numbers of employees with salaries between 8000 and 12000.", "query": "SELECT phone_number FROM employees WHERE salary BETWEEN 8000 AND 12000"}
{"question": "display all the information of employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40.", "query": "SELECT * FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR  department_id != 40"}
{"question": "Return all information about employees with salaries between 8000 and 12000 for which commission is not null or where their department id is not 40.", "query": "SELECT * FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"null\" OR  department_id != 40"}
{"question": "What are the full name (first and last name) and salary for all employees who does not have any value for commission?", "query": "SELECT first_name ,  last_name ,  salary FROM  employees WHERE commission_pct  =  \"null\""}
{"question": "Return the full names and salaries of employees with null commissions.", "query": "SELECT first_name ,  last_name ,  salary FROM  employees WHERE commission_pct  =  \"null\""}
{"question": "Display the first and last name, and salary for those employees whose first name is ending with the letter m.", "query": "SELECT first_name ,  last_name ,  salary FROM employees WHERE first_name LIKE '%m'"}
{"question": "Return the full names and salaries for employees with first names that end with the letter m.", "query": "SELECT first_name ,  last_name ,  salary FROM employees WHERE first_name LIKE '%m'"}
{"question": "Find job id and date of hire for those employees who was hired between November 5th, 2007 and July 5th, 2009.", "query": "SELECT job_id ,  hire_date FROM employees WHERE hire_date BETWEEN '2007-11-05' AND '2009-07-05'"}
{"question": "What are the job ids and dates of hire for employees hired after November 5th, 2007 and before July 5th, 2009?", "query": "SELECT job_id ,  hire_date FROM employees WHERE hire_date BETWEEN '2007-11-05' AND '2009-07-05'"}
{"question": "What are the first and last name for those employees who works either in department 70 or 90?", "query": "SELECT first_name ,  last_name FROM employees WHERE department_id  =  70 OR department_id  =  90"}
{"question": "What are the full names of employees who with in department 70 or 90?", "query": "SELECT first_name ,  last_name FROM employees WHERE department_id  =  70 OR department_id  =  90"}
{"question": "Find the salary and manager number for those employees who is working under a manager.", "query": "SELECT salary ,  manager_id FROM employees WHERE manager_id != \"null\""}
{"question": "What are the salaries and manager ids for employees who have managers?", "query": "SELECT salary ,  manager_id FROM employees WHERE manager_id != \"null\""}
{"question": "display all the details from Employees table for those employees who was hired before 2002-06-21.", "query": "SELECT * FROM employees WHERE hire_date  <  '2002-06-21'"}
{"question": "What is all the information about employees hired before June 21, 2002?", "query": "SELECT * FROM employees WHERE hire_date  <  '2002-06-21'"}
{"question": "display all the information for all employees who have the letters D or S in their first name and also arrange the result in descending order by salary.", "query": "SELECT * FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY salary DESC"}
{"question": "What is all the information about employees with D or S in their first name, ordered by salary descending?", "query": "SELECT * FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY salary DESC"}
{"question": "display those employees who joined after 7th September, 1987.", "query": "SELECT * FROM employees WHERE hire_date  >  '1987-09-07'"}
{"question": "Which employees were hired after September 7th, 1987?", "query": "SELECT * FROM employees WHERE hire_date  >  '1987-09-07'"}
{"question": "display the job title of jobs which minimum salary is greater than 9000.", "query": "SELECT job_title FROM jobs WHERE min_salary  >  9000"}
{"question": "Which job titles correspond to jobs with salaries over 9000?", "query": "SELECT job_title FROM jobs WHERE min_salary  >  9000"}
{"question": "display job Title, the difference between minimum and maximum salaries for those jobs which max salary within the range 12000 to 18000.", "query": "SELECT job_title ,  max_salary - min_salary FROM jobs WHERE max_salary BETWEEN 12000 AND 18000"}
{"question": "What are the job titles, and range of salaries for jobs with maximum salary between 12000 and 18000?", "query": "SELECT job_title ,  max_salary - min_salary FROM jobs WHERE max_salary BETWEEN 12000 AND 18000"}
{"question": "display the emails of the employees who have no commission percentage and salary within the range 7000 to 12000 and works in that department which number is 50.", "query": "SELECT email FROM employees WHERE commission_pct  =  \"null\" AND salary BETWEEN 7000 AND 12000 AND department_id = 50"}
{"question": "What are the emails of employees with null commission, salary between 7000 and 12000, and who work in department 50?", "query": "SELECT email FROM employees WHERE commission_pct  =  \"null\" AND salary BETWEEN 7000 AND 12000 AND department_id = 50"}
{"question": "display the employee ID for each employee and the date on which he ended his previous job.", "query": "SELECT employee_id ,  MAX(end_date) FROM job_history GROUP BY employee_id"}
{"question": "What are the employee ids for each employee and final dates of employment at their last job?", "query": "SELECT employee_id ,  MAX(end_date) FROM job_history GROUP BY employee_id"}
{"question": "display those departments where more than ten employees work who got a commission percentage.", "query": "SELECT department_id FROM employees GROUP BY department_id HAVING COUNT(commission_pct) > 10"}
{"question": "What are the department ids for which more than 10 employees had a commission?", "query": "SELECT department_id FROM employees GROUP BY department_id HAVING COUNT(commission_pct) > 10"}
{"question": "Find the ids of the departments where any manager is managing 4 or more employees.", "query": "SELECT DISTINCT department_id FROM employees GROUP BY department_id ,  manager_id HAVING COUNT(employee_id)  >= 4"}
{"question": "What are department ids for departments with managers managing more than 3 employees?", "query": "SELECT DISTINCT department_id FROM employees GROUP BY department_id ,  manager_id HAVING COUNT(employee_id)  >= 4"}
{"question": "display the average salary of employees for each department who gets a commission percentage.", "query": "SELECT department_id ,  AVG(salary) FROM employees WHERE commission_pct != \"null\" GROUP BY department_id"}
{"question": "What is the average salary of employees who have a commission percentage that is not null?", "query": "SELECT department_id ,  AVG(salary) FROM employees WHERE commission_pct != \"null\" GROUP BY department_id"}
{"question": "display the country ID and number of cities for each country.", "query": "SELECT country_id ,  COUNT(*) FROM locations GROUP BY country_id"}
{"question": "Give the country id and corresponding count of cities in each country.", "query": "SELECT country_id ,  COUNT(*) FROM locations GROUP BY country_id"}
{"question": "display job ID for those jobs that were done by two or more for more than 300 days.", "query": "SELECT job_id FROM job_history WHERE end_date - start_date  > 300 GROUP BY job_id HAVING COUNT(*) >= 2"}
{"question": "What are the job ids for jobs done more than once for a period of more than 300 days?", "query": "SELECT job_id FROM job_history WHERE end_date - start_date  > 300 GROUP BY job_id HAVING COUNT(*) >= 2"}
{"question": "display the ID for those employees who did two or more jobs in the past.", "query": "SELECT employee_id FROM job_history GROUP BY employee_id HAVING COUNT(*)  >= 2"}
{"question": "What are the employee ids for employees who have held two or more jobs?", "query": "SELECT employee_id FROM job_history GROUP BY employee_id HAVING COUNT(*)  >= 2"}
{"question": "Find employee with ID and name of the country presently where (s)he is working.", "query": "SELECT T1.employee_id ,  T4.country_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id JOIN countries AS T4 ON T3.country_id  =  T4.country_id"}
{"question": "What are all the employee ids and the names of the countries in which they work?", "query": "SELECT T1.employee_id ,  T4.country_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id JOIN countries AS T4 ON T3.country_id  =  T4.country_id"}
{"question": "display the department name and number of employees in each of the department.", "query": "SELECT T2.department_name ,  COUNT(*) FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T2.department_name"}
{"question": "Give the name of each department and the number of employees in each.", "query": "SELECT T2.department_name ,  COUNT(*) FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T2.department_name"}
{"question": "Can you return all detailed info of jobs which was done by any of the employees who is presently earning a salary on and above 12000?", "query": "SELECT * FROM  job_history AS T1 JOIN employees AS T2 ON T1.employee_id  =  T2.employee_id WHERE T2.salary  >=  12000"}
{"question": "What is all the job history info done by employees earning a salary greater than or equal to 12000?", "query": "SELECT * FROM  job_history AS T1 JOIN employees AS T2 ON T1.employee_id  =  T2.employee_id WHERE T2.salary  >=  12000"}
{"question": "display job title and average salary of employees.", "query": "SELECT job_title ,  AVG(salary) FROM employees AS T1 JOIN jobs AS T2 ON T1.job_id  =  T2.job_id GROUP BY T2.job_title"}
{"question": "What is the average salary for each job title?", "query": "SELECT job_title ,  AVG(salary) FROM employees AS T1 JOIN jobs AS T2 ON T1.job_id  =  T2.job_id GROUP BY T2.job_title"}
{"question": "What is the full name ( first name and last name ) for those employees who gets more salary than the employee whose id is 163?", "query": "SELECT first_name ,  last_name FROM employees WHERE salary  >  (SELECT salary FROM employees WHERE employee_id = 163 )"}
{"question": "Provide the full names of employees earning more than the employee with id 163.", "query": "SELECT first_name ,  last_name FROM employees WHERE salary  >  (SELECT salary FROM employees WHERE employee_id = 163 )"}
{"question": "return the smallest salary for every departments.", "query": "SELECT MIN(salary) ,  department_id FROM employees GROUP BY department_id"}
{"question": "What is the minimum salary in each department?", "query": "SELECT MIN(salary) ,  department_id FROM employees GROUP BY department_id"}
{"question": "Find the first name and last name and department id for those employees who earn such amount of salary which is the smallest salary of any of the departments.", "query": "SELECT first_name ,  last_name ,  department_id FROM employees WHERE salary IN (SELECT MIN(salary) FROM employees GROUP BY department_id)"}
{"question": "What are the full names and department ids for the lowest paid employees across all departments.", "query": "SELECT first_name ,  last_name ,  department_id FROM employees WHERE salary IN (SELECT MIN(salary) FROM employees GROUP BY department_id)"}
{"question": "Find the employee id for all employees who earn more than the average salary.", "query": "SELECT employee_id FROM employees WHERE salary  >  (SELECT AVG(salary) FROM employees)"}
{"question": "What are the employee ids for employees who make more than the average?", "query": "SELECT employee_id FROM employees WHERE salary  >  (SELECT AVG(salary) FROM employees)"}
{"question": "display the employee id and salary of all employees who report to Payam (first name).", "query": "SELECT employee_id ,  salary FROM employees WHERE manager_id  =  (SELECT employee_id FROM employees WHERE first_name  =  'Payam' )"}
{"question": "What are the employee ids of employees who report to Payam, and what are their salaries?", "query": "SELECT employee_id ,  salary FROM employees WHERE manager_id  =  (SELECT employee_id FROM employees WHERE first_name  =  'Payam' )"}
{"question": "find the name of all departments that do actually have one or more employees assigned to them.", "query": "SELECT DISTINCT T2.department_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id"}
{"question": "What are the names of departments that have at least one employee.", "query": "SELECT DISTINCT T2.department_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id"}
{"question": "get the details of employees who manage a department.", "query": "SELECT DISTINCT * FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id WHERE T1.employee_id  =  T2.manager_id"}
{"question": "What is all the information regarding employees who are managers?", "query": "SELECT DISTINCT * FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id WHERE T1.employee_id  =  T2.manager_id"}
{"question": "display all the information about the department Marketing.", "query": "SELECT * FROM  departments WHERE department_name  =  'Marketing'"}
{"question": "What are the employee ids for those who had two or more jobs.", "query": "SELECT employee_id FROM job_history GROUP BY employee_id HAVING COUNT(*)  >= 2"}
{"question": "What are the unique ids of those departments where any manager is managing 4 or more employees.", "query": "SELECT DISTINCT department_id FROM employees GROUP BY department_id ,  manager_id HAVING COUNT(employee_id)  >= 4"}
{"question": "Give the distinct department ids of departments in which a manager is in charge of 4 or more employees?", "query": "SELECT DISTINCT department_id FROM employees GROUP BY department_id ,  manager_id HAVING COUNT(employee_id)  >= 4"}
{"question": "Find the job ID for those jobs which average salary is above 8000.", "query": "SELECT job_id FROM employees GROUP BY job_id HAVING AVG(salary) > 8000"}
{"question": "What are the job ids corresponding to jobs with average salary above 8000?", "query": "SELECT job_id FROM employees GROUP BY job_id HAVING AVG(salary) > 8000"}
{"question": "display the employee ID and job name for all those jobs in department 80.", "query": "SELECT T1.employee_id ,  T2.job_title FROM employees AS T1 JOIN jobs AS T2 ON T1.job_id  =  T2.job_id WHERE T1.department_id = 80"}
{"question": "what are the employee ids and job titles for employees in department 80?", "query": "SELECT T1.employee_id ,  T2.job_title FROM employees AS T1 JOIN jobs AS T2 ON T1.job_id  =  T2.job_id WHERE T1.department_id = 80"}
{"question": "What is the first name and job id for all employees in the Finance department?", "query": "SELECT T1.first_name ,  T1.job_id FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id WHERE T2.department_name  =  'Finance'"}
{"question": "Give the first name and job id for all employees in the Finance department.", "query": "SELECT T1.first_name ,  T1.job_id FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id WHERE T2.department_name  =  'Finance'"}
{"question": "display all the information of the employees whose salary if within the range of smallest salary and 2500.", "query": "SELECT * FROM employees WHERE salary BETWEEN (SELECT MIN(salary) FROM employees) AND 2500"}
{"question": "What is all the information regarding employees with salaries above the minimum and under 2500?", "query": "SELECT * FROM employees WHERE salary BETWEEN (SELECT MIN(salary) FROM employees) AND 2500"}
{"question": "Find the ids of the employees who does not work in those departments where some employees works whose manager id within the range 100 and 200.", "query": "SELECT * FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)"}
{"question": "What are the ids for employees who do not work in departments with managers that have ids between 100 and 200?", "query": "SELECT * FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)"}
{"question": "display the employee name ( first name and last name ) and hire date for all employees in the same department as Clara.", "query": "SELECT first_name ,  last_name ,  hire_date FROM employees WHERE department_id  =  (SELECT department_id FROM employees WHERE first_name  =  \"Clara\")"}
{"question": "What are the full names and hire dates for employees in the same department as someone with the first name Clara?", "query": "SELECT first_name ,  last_name ,  hire_date FROM employees WHERE department_id  =  (SELECT department_id FROM employees WHERE first_name  =  \"Clara\")"}
{"question": "display the employee name ( first name and last name ) and hire date for all employees in the same department as Clara excluding Clara.", "query": "SELECT first_name ,  last_name ,  hire_date FROM employees WHERE department_id  =  ( SELECT department_id FROM employees WHERE first_name  =  \"Clara\") AND first_name != \"Clara\""}
{"question": "What are the full names and hire dates for employees in the same department as someone with the first name Clara, not including Clara?", "query": "SELECT first_name ,  last_name ,  hire_date FROM employees WHERE department_id  =  ( SELECT department_id FROM employees WHERE first_name  =  \"Clara\") AND first_name != \"Clara\""}
{"question": "display the employee number and name( first name and last name ) for all employees who work in a department with any employee whose name contains a ’T’.", "query": "SELECT employee_id ,  first_name ,  last_name FROM employees WHERE department_id IN ( SELECT department_id FROM employees WHERE first_name LIKE '%T%' )"}
{"question": "What are the ids and full names for employees who work in a department that has someone with a first name that contains the letter T?", "query": "SELECT employee_id ,  first_name ,  last_name FROM employees WHERE department_id IN ( SELECT department_id FROM employees WHERE first_name LIKE '%T%' )"}
{"question": "display the employee number, name( first name and last name ), and salary for all employees who earn more than the average salary and who work in a department with any employee with a 'J' in their first name.", "query": "SELECT employee_id ,  first_name ,  last_name ,  salary FROM employees WHERE salary  >  ( SELECT AVG (salary) FROM employees ) AND department_id IN ( SELECT department_id FROM employees WHERE first_name LIKE '%J%')"}
{"question": "What are the ids, full names, and salaries for employees making more than average and who work in a department with employees who have the letter J in their first name?", "query": "SELECT employee_id ,  first_name ,  last_name ,  salary FROM employees WHERE salary  >  ( SELECT AVG (salary) FROM employees ) AND department_id IN ( SELECT department_id FROM employees WHERE first_name LIKE '%J%')"}
{"question": "display the employee number and job id for all employees whose salary is smaller than any salary of those employees whose job title is MK_MAN.", "query": "SELECT employee_id ,  job_id FROM employees WHERE salary  <  ( SELECT min(salary) FROM employees WHERE job_id  =  'MK_MAN' )"}
{"question": "What are the employee ids and job ids for employees who make less than the lowest earning employee with title MK_MAN?", "query": "SELECT employee_id ,  job_id FROM employees WHERE salary  <  ( SELECT min(salary) FROM employees WHERE job_id  =  'MK_MAN' )"}
{"question": "display the employee number, name( first name and last name ) and job title for all employees whose salary is more than any salary of those employees whose job title is PU_MAN.", "query": "SELECT employee_id ,  first_name ,  last_name ,  job_id FROM employees WHERE salary  >  ( SELECT max(salary) FROM employees WHERE job_id  =  'PU_MAN' )"}
{"question": "What are the employee ids, full names, and job ids for employees who make more than the highest earning employee with title PU_MAN?", "query": "SELECT employee_id ,  first_name ,  last_name ,  job_id FROM employees WHERE salary  >  ( SELECT max(salary) FROM employees WHERE job_id  =  'PU_MAN' )"}
{"question": "display the department id and the total salary for those departments which contains at least two employees.", "query": "SELECT department_id ,  SUM(salary) FROM employees GROUP BY department_id HAVING count(*)  >=  2"}
{"question": "What are total salaries and department id for each department that has more than 2 employees?", "query": "SELECT department_id ,  SUM(salary) FROM employees GROUP BY department_id HAVING count(*)  >=  2"}
{"question": "display all the information of those employees who did not have any job in the past.", "query": "SELECT * FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)"}
{"question": "What is all the information about employees who have never had a job in the past?", "query": "SELECT * FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)"}
{"question": "display the department ID, full name (first and last name), salary for those employees who is highest salary in every department.", "query": "SELECT first_name ,   last_name ,   salary ,  department_id ,  MAX(salary) FROM employees GROUP BY department_id"}
{"question": "What are the department ids, full names, and salaries for employees who make the most in their departments?", "query": "SELECT first_name ,   last_name ,   salary ,  department_id ,  MAX(salary) FROM employees GROUP BY department_id"}
{"question": "display the first and last name, department, city, and state province for each employee.", "query": "SELECT T1.first_name ,  T1.last_name ,  T2.department_name ,  T3.city ,  T3.state_province FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id"}
{"question": "What are the full names, departments, cities, and state provinces for each employee?", "query": "SELECT T1.first_name ,  T1.last_name ,  T2.department_name ,  T3.city ,  T3.state_province FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id"}
{"question": "display those employees who contain a letter z to their first name and also display their last name, city.", "query": "SELECT T1.first_name ,  T1.last_name ,  T3.city FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id WHERE T1.first_name LIKE '%z%'"}
{"question": "What are the full names and cities of employees who have the letter Z in their first names?", "query": "SELECT T1.first_name ,  T1.last_name ,  T3.city FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id WHERE T1.first_name LIKE '%z%'"}
{"question": "display the department name, city, and state province for each department.", "query": "SELECT T1.department_name ,  T2.city ,  T2.state_province FROM departments AS T1 JOIN locations AS T2 ON T2.location_id  =  T1.location_id"}
{"question": "What are the department names, cities, and state provinces for each department?", "query": "SELECT T1.department_name ,  T2.city ,  T2.state_province FROM departments AS T1 JOIN locations AS T2 ON T2.location_id  =  T1.location_id"}
{"question": "display the full name (first and last name ) of employee with ID and name of the country presently where (s)he is working.", "query": "SELECT T1.first_name ,  T1.last_name , T1.employee_id ,  T4.country_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id JOIN countries AS T4 ON T3.country_id  =  T4.country_id"}
{"question": "What the full names, ids of each employee and the name of the country they are in?", "query": "SELECT T1.first_name ,  T1.last_name , T1.employee_id ,  T4.country_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id JOIN countries AS T4 ON T3.country_id  =  T4.country_id"}
{"question": "What are the department names and how many employees work in each of them?", "query": "SELECT department_name ,  COUNT(*) FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY department_name"}
{"question": "display the full name (first and last name), and salary of those employees who working in any department located in London.", "query": "SELECT first_name ,  last_name ,  salary FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN  locations AS T3 ON T2.location_id  =  T3.location_id WHERE  T3.city  =  'London'"}
{"question": "What are full names and salaries of employees working in the city of London?", "query": "SELECT first_name ,  last_name ,  salary FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN  locations AS T3 ON T2.location_id  =  T3.location_id WHERE  T3.city  =  'London'"}
{"question": "What is the name of the song that was released in the most recent year?", "query": "SELECT song_name ,  releasedate FROM song ORDER BY releasedate DESC LIMIT 1"}
{"question": "What is the name of the song that was released most recently?", "query": "SELECT song_name ,  releasedate FROM song ORDER BY releasedate DESC LIMIT 1"}
{"question": "What is the id of the longest song?", "query": "SELECT f_id FROM files ORDER BY duration DESC LIMIT 1"}
{"question": "Find the id of the song that lasts the longest.", "query": "SELECT f_id FROM files ORDER BY duration DESC LIMIT 1"}
{"question": "Find the names of all English songs.", "query": "SELECT song_name FROM song WHERE languages  =  \"english\""}
{"question": "What are the names of all songs in English?", "query": "SELECT song_name FROM song WHERE languages  =  \"english\""}
{"question": "What are the id of songs whose format is mp3.", "query": "SELECT f_id FROM files WHERE formats  =  \"mp3\""}
{"question": "What are the id of all the files in mp3 format?", "query": "SELECT f_id FROM files WHERE formats  =  \"mp3\""}
{"question": "List the name and country of origin for all singers who have produced songs with rating above 9.", "query": "SELECT DISTINCT T1.artist_name ,  T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.rating  >  9"}
{"question": "What are the different names and countries of origins for all artists whose song ratings are above 9?", "query": "SELECT DISTINCT T1.artist_name ,  T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.rating  >  9"}
{"question": "List the file size and format for all songs that have resolution lower than 800.", "query": "SELECT DISTINCT T1.file_size ,  T1.formats FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T2.resolution  <  800"}
{"question": "What are the file sizes and formats for all songs with a resolution lower than 800?", "query": "SELECT DISTINCT T1.file_size ,  T1.formats FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T2.resolution  <  800"}
{"question": "What is the name of the artist who produced the shortest song?", "query": "SELECT T1.artist_name FROM song AS T1 JOIN files AS T2 ON T1.f_id  =  T2.f_id ORDER BY T2.duration LIMIT 1"}
{"question": "What are the names of the artists who sang the shortest song?", "query": "SELECT T1.artist_name FROM song AS T1 JOIN files AS T2 ON T1.f_id  =  T2.f_id ORDER BY T2.duration LIMIT 1"}
{"question": "What are the names and countries of origin for the artists who produced the top three highly rated songs.", "query": "SELECT T1.artist_name ,  T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name ORDER BY T2.rating DESC LIMIT 3"}
{"question": "What are the names of the singers who sang the top 3 most highly rated songs and what countries do they hail from?", "query": "SELECT T1.artist_name ,  T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name ORDER BY T2.rating DESC LIMIT 3"}
{"question": "How many songs have 4 minute duration?", "query": "SELECT count(*) FROM files WHERE duration LIKE \"4:%\""}
{"question": "What is the count of the songs that last approximately 4 minutes?", "query": "SELECT count(*) FROM files WHERE duration LIKE \"4:%\""}
{"question": "How many artists are from Bangladesh?", "query": "SELECT count(*) FROM artist WHERE country  =  \"Bangladesh\""}
{"question": "How many Bangladeshi artists are listed?", "query": "SELECT count(*) FROM artist WHERE country  =  \"Bangladesh\""}
{"question": "What is the average rating of songs produced by female artists?", "query": "SELECT avg(T2.rating) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T1.gender  =  \"Female\""}
{"question": "How many songs, on average, are sung by a female artist?", "query": "SELECT avg(T2.rating) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T1.gender  =  \"Female\""}
{"question": "What is the most popular file format?", "query": "SELECT formats FROM files GROUP BY formats ORDER BY COUNT (*) DESC LIMIT 1"}
{"question": "Find the file format that is used by the most files.", "query": "SELECT formats FROM files GROUP BY formats ORDER BY COUNT (*) DESC LIMIT 1"}
{"question": "Find the names of the artists who are from UK and have produced English songs.", "query": "SELECT artist_name FROM artist WHERE country  =  \"UK\" INTERSECT SELECT artist_name FROM song WHERE languages  =  \"english\""}
{"question": "What are the names of the artists that are from the UK and sang songs in English?", "query": "SELECT artist_name FROM artist WHERE country  =  \"UK\" INTERSECT SELECT artist_name FROM song WHERE languages  =  \"english\""}
{"question": "Find the id of songs that are available in mp4 format and have resolution lower than 1000.", "query": "SELECT f_id FROM files WHERE formats  =  \"mp4\" INTERSECT SELECT f_id FROM song WHERE resolution  <  1000"}
{"question": "What is the id of the files that are available in the format of mp4 and a resolution smaller than 1000?", "query": "SELECT f_id FROM files WHERE formats  =  \"mp4\" INTERSECT SELECT f_id FROM song WHERE resolution  <  1000"}
{"question": "What is the country of origin of the artist who is female and produced a song in Bangla?", "query": "SELECT T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T1.gender  =  \"Female\" AND T2.languages  =  \"bangla\""}
{"question": "What countries are the female artists who sung in the language Bangla from?", "query": "SELECT T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T1.gender  =  \"Female\" AND T2.languages  =  \"bangla\""}
{"question": "What is the average duration of songs that have mp3 format and resolution below 800?", "query": "SELECT avg(T1.duration) FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T1.formats  =  \"mp3\" AND T2.resolution   <  800"}
{"question": "What is the average song duration for the songs that are in mp3 format and whose resolution below 800?", "query": "SELECT avg(T1.duration) FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T1.formats  =  \"mp3\" AND T2.resolution   <  800"}
{"question": "What is the number of artists for each gender?", "query": "SELECT count(*) ,  gender FROM artist GROUP BY gender"}
{"question": "How many artists are male and how many are female?", "query": "SELECT count(*) ,  gender FROM artist GROUP BY gender"}
{"question": "What is the average rating of songs for each language?", "query": "SELECT avg(rating) ,  languages FROM song GROUP BY languages"}
{"question": "What is the average song rating for each language?", "query": "SELECT avg(rating) ,  languages FROM song GROUP BY languages"}
{"question": "Return the gender and name of artist who produced the song with the lowest resolution.", "query": "SELECT T1.gender ,  T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name ORDER BY T2.resolution LIMIT 1"}
{"question": "What is the gender and name of the artist who sang the song with the smallest resolution?", "query": "SELECT T1.gender ,  T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name ORDER BY T2.resolution LIMIT 1"}
{"question": "For each file format, return the number of artists who released songs in that format.", "query": "SELECT count(*) ,  formats FROM files GROUP BY formats"}
{"question": "How many songs were released for each format?", "query": "SELECT count(*) ,  formats FROM files GROUP BY formats"}
{"question": "Find the distinct names of all songs that have a higher resolution than some songs in English.", "query": "SELECT DISTINCT song_name FROM song WHERE resolution  >  (SELECT min(resolution) FROM song WHERE languages  =  \"english\")"}
{"question": "What are the different names for all songs that have a higher resolution than English songs?", "query": "SELECT DISTINCT song_name FROM song WHERE resolution  >  (SELECT min(resolution) FROM song WHERE languages  =  \"english\")"}
{"question": "What are the names of all songs that have a lower rating than some song of blues genre?", "query": "SELECT song_name FROM song WHERE rating  <  (SELECT max(rating) FROM song WHERE genre_is  =  \"blues\")"}
{"question": "What are the names of the songs that have a lower rating than at least one blues song?", "query": "SELECT song_name FROM song WHERE rating  <  (SELECT max(rating) FROM song WHERE genre_is  =  \"blues\")"}
{"question": "What is the name and country of origin of the artist who released a song that has \"love\" in its title?", "query": "SELECT T1.artist_name ,  T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.song_name LIKE \"%love%\""}
{"question": "What are the names of the artists who released a song that has the word love in its title, and where are the artists from?", "query": "SELECT T1.artist_name ,  T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.song_name LIKE \"%love%\""}
{"question": "List the name and gender for all artists who released songs in March.", "query": "SELECT T1.artist_name ,  T1.gender FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.releasedate LIKE \"%Mar%\""}
{"question": "What are the names and genders of all artists who released songs in the month of March?", "query": "SELECT T1.artist_name ,  T1.gender FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.releasedate LIKE \"%Mar%\""}
{"question": "List the names of all genres in alphabetical oder, together with its ratings.", "query": "SELECT g_name ,  rating FROM genre ORDER BY g_name"}
{"question": "What are the names of all genres in alphabetical order, combined with its ratings?", "query": "SELECT g_name ,  rating FROM genre ORDER BY g_name"}
{"question": "Give me a list of the names of all songs ordered by their resolution.", "query": "SELECT song_name FROM song ORDER BY resolution"}
{"question": "What are the names of all songs that are ordered by their resolution numbers?", "query": "SELECT song_name FROM song ORDER BY resolution"}
{"question": "What are the ids of songs that are available in either mp4 format or have resolution above 720?", "query": "SELECT f_id FROM files WHERE formats  =  \"mp4\" UNION SELECT f_id FROM song WHERE resolution  >  720"}
{"question": "What are the ids of all songs that are available on mp4 or have a higher resolution than 720?", "query": "SELECT f_id FROM files WHERE formats  =  \"mp4\" UNION SELECT f_id FROM song WHERE resolution  >  720"}
{"question": "List the names of all songs that have 4 minute duration or are in English.", "query": "SELECT T2.song_name FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T1.duration LIKE \"4:%\" UNION SELECT song_name FROM song WHERE languages  =  \"english\""}
{"question": "What are the names of all songs that are approximately 4 minutes long or are in English?", "query": "SELECT T2.song_name FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T1.duration LIKE \"4:%\" UNION SELECT song_name FROM song WHERE languages  =  \"english\""}
{"question": "What is the language used most often in the songs?", "query": "SELECT languages FROM song GROUP BY languages ORDER BY count(*) DESC LIMIT 1"}
{"question": "What are the languages that are used most often in songs?", "query": "SELECT languages FROM song GROUP BY languages ORDER BY count(*) DESC LIMIT 1"}
{"question": "What is the language that was used most often in songs with resolution above 500?", "query": "SELECT artist_name FROM song WHERE resolution  >  500 GROUP BY languages ORDER BY count(*) DESC LIMIT 1"}
{"question": "What is the name of the artist, for each language, that has the most songs with a higher resolution than 500?", "query": "SELECT artist_name FROM song WHERE resolution  >  500 GROUP BY languages ORDER BY count(*) DESC LIMIT 1"}
{"question": "What are the names of artists who are Male and are from UK?", "query": "SELECT artist_name FROM artist WHERE country  =  \"UK\" AND gender  =  \"Male\""}
{"question": "What are the names of all male British artists?", "query": "SELECT artist_name FROM artist WHERE country  =  \"UK\" AND gender  =  \"Male\""}
{"question": "Find the names of songs whose genre is modern or language is English.", "query": "SELECT song_name FROM song WHERE genre_is  =  \"modern\" OR languages  =  \"english\""}
{"question": "What are the names of the songs that are modern or sung in English?", "query": "SELECT song_name FROM song WHERE genre_is  =  \"modern\" OR languages  =  \"english\""}
{"question": "Return the names of songs for which format is mp3 and resolution is below 1000.", "query": "SELECT T2.song_name FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T1.formats  =  \"mp3\" INTERSECT SELECT song_name FROM song WHERE resolution  <  1000"}
{"question": "What are the names of all songs that are in mp3 format and have a resolution lower than 1000?", "query": "SELECT T2.song_name FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T1.formats  =  \"mp3\" INTERSECT SELECT song_name FROM song WHERE resolution  <  1000"}
{"question": "Return the names of singers who are from UK and released an English song.", "query": "SELECT artist_name FROM artist WHERE country  =  \"UK\" INTERSECT SELECT T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.languages  =  \"english\""}
{"question": "What are the names of all singers that are from the UK and released a song in English?", "query": "SELECT artist_name FROM artist WHERE country  =  \"UK\" INTERSECT SELECT T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.languages  =  \"english\""}
{"question": "What are the average rating and resolution of songs that are in Bangla?", "query": "SELECT avg(rating) ,  avg(resolution) FROM song WHERE languages  =  \"bangla\""}
{"question": "What is the average rating and resolution of all bangla songs?", "query": "SELECT avg(rating) ,  avg(resolution) FROM song WHERE languages  =  \"bangla\""}
{"question": "What are the maximum and minimum resolution of songs whose duration is 3 minutes?", "query": "SELECT max(T2.resolution) ,  min(T2.resolution) FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T1.duration LIKE \"3:%\""}
{"question": "What is the maximum and minimum resolution of all songs that are approximately 3 minutes long?", "query": "SELECT max(T2.resolution) ,  min(T2.resolution) FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T1.duration LIKE \"3:%\""}
{"question": "What are the maximum duration and resolution of songs grouped and ordered by languages?", "query": "SELECT max(T1.duration) ,  max(T2.resolution) ,  T2.languages FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id GROUP BY T2.languages ORDER BY T2.languages"}
{"question": "What are the maximum duration and resolution of all songs, for each language, ordered alphabetically by language?", "query": "SELECT max(T1.duration) ,  max(T2.resolution) ,  T2.languages FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id GROUP BY T2.languages ORDER BY T2.languages"}
{"question": "What are the shortest duration and lowest rating of songs grouped by genre and ordered by genre?", "query": "SELECT min(T1.duration) ,  min(T2.rating) ,  T2.genre_is FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id GROUP BY T2.genre_is ORDER BY T2.genre_is"}
{"question": "What is the shortest and most poorly rated song for each genre, ordered alphabetically by genre?", "query": "SELECT min(T1.duration) ,  min(T2.rating) ,  T2.genre_is FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id GROUP BY T2.genre_is ORDER BY T2.genre_is"}
{"question": "Find the names and number of works of all artists who have at least one English songs.", "query": "SELECT T1.artist_name ,  count(*) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.languages  =  \"english\" GROUP BY T2.artist_name HAVING count(*)  >=  1"}
{"question": "What are the names and number of works for all artists who have sung at least one song in English?", "query": "SELECT T1.artist_name ,  count(*) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.languages  =  \"english\" GROUP BY T2.artist_name HAVING count(*)  >=  1"}
{"question": "Find the name and country of origin for all artists who have release at least one song of resolution above 900.", "query": "SELECT T1.artist_name ,  T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.resolution  >  900 GROUP BY T2.artist_name HAVING count(*)  >=  1"}
{"question": "What is the name and country of origin for each artist who has released a song with a resolution higher than 900?", "query": "SELECT T1.artist_name ,  T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.resolution  >  900 GROUP BY T2.artist_name HAVING count(*)  >=  1"}
{"question": "Find the names and number of works of the three artists who have produced the most songs.", "query": "SELECT T1.artist_name ,  count(*) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name GROUP BY T2.artist_name ORDER BY count(*) DESC LIMIT 3"}
{"question": "What are the names of the three artists who have produced the most songs, and how many works did they produce?", "query": "SELECT T1.artist_name ,  count(*) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name GROUP BY T2.artist_name ORDER BY count(*) DESC LIMIT 3"}
{"question": "Find the country of origin for the artist who made the least number of songs?", "query": "SELECT T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name GROUP BY T2.artist_name ORDER BY count(*) LIMIT 1"}
{"question": "What country is the artist who made the fewest songs from?", "query": "SELECT T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name GROUP BY T2.artist_name ORDER BY count(*) LIMIT 1"}
{"question": "What are the names of the songs whose rating is below the rating of all songs in English?", "query": "SELECT song_name FROM song WHERE rating  <   (SELECT min(rating) FROM song WHERE languages  =  'english')"}
{"question": "What are the song names for every song whose rating is less than the minimum rating for English songs?", "query": "SELECT song_name FROM song WHERE rating  <   (SELECT min(rating) FROM song WHERE languages  =  'english')"}
{"question": "What is ids of the songs whose resolution is higher than the resolution of any songs with rating lower than 8?", "query": "SELECT f_id FROM song WHERE resolution  >  (SELECT max(resolution) FROM song WHERE rating  <  8)"}
{"question": "What is the id of every song that has a resolution higher than that of a song with a rating below 8?", "query": "SELECT f_id FROM song WHERE resolution  >  (SELECT max(resolution) FROM song WHERE rating  <  8)"}
{"question": "What is ids of the songs whose resolution is higher than the average resolution of songs in modern genre?", "query": "SELECT f_id FROM song WHERE resolution  >  (SELECT avg(resolution) FROM song WHERE genre_is  =  \"modern\")"}
{"question": "What are the ids of all songs that have higher resolution of the average resolution in the modern genre?", "query": "SELECT f_id FROM song WHERE resolution  >  (SELECT avg(resolution) FROM song WHERE genre_is  =  \"modern\")"}
{"question": "Find the top 3 artists who have the largest number of songs works whose language is Bangla.", "query": "SELECT T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.languages  =  \"bangla\" GROUP BY T2.artist_name ORDER BY count(*) DESC LIMIT 3"}
{"question": "What are the top 3 artists with the largest number of songs in the language Bangla?", "query": "SELECT T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.languages  =  \"bangla\" GROUP BY T2.artist_name ORDER BY count(*) DESC LIMIT 3"}
{"question": "List the id, genre and artist name of English songs ordered by rating.", "query": "SELECT f_id ,  genre_is ,  artist_name FROM song WHERE languages  =   \"english\" ORDER BY rating"}
{"question": "What is the id, genre, and name of the artist for every English song ordered by ascending rating?", "query": "SELECT f_id ,  genre_is ,  artist_name FROM song WHERE languages  =   \"english\" ORDER BY rating"}
{"question": "List the duration, file size and format of songs whose genre is pop, ordered by title?", "query": "SELECT T1.duration ,  T1.file_size ,  T1.formats FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T2.genre_is  =  \"pop\" ORDER BY T2.song_name"}
{"question": "What is the duration, file size, and song format for every pop song, ordered by title alphabetically?", "query": "SELECT T1.duration ,  T1.file_size ,  T1.formats FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T2.genre_is  =  \"pop\" ORDER BY T2.song_name"}
{"question": "Find the names of the artists who have produced English songs but have never received rating higher than 8.", "query": "SELECT DISTINCT artist_name FROM song WHERE languages  =  \"english\" EXCEPT SELECT DISTINCT artist_name FROM song WHERE rating  >  8"}
{"question": "What are the names of the different artists that have produced a song in English but have never receieved a rating higher than 8?", "query": "SELECT DISTINCT artist_name FROM song WHERE languages  =  \"english\" EXCEPT SELECT DISTINCT artist_name FROM song WHERE rating  >  8"}
{"question": "Find the names of the artists who are from Bangladesh and have never received rating higher than 7.", "query": "SELECT DISTINCT artist_name FROM artist WHERE country  =  \"Bangladesh\" EXCEPT SELECT DISTINCT artist_name FROM song WHERE rating  >  7"}
{"question": "What are the names of the different artists from Bangladesh who never received a rating higher than a 7?", "query": "SELECT DISTINCT artist_name FROM artist WHERE country  =  \"Bangladesh\" EXCEPT SELECT DISTINCT artist_name FROM song WHERE rating  >  7"}
{"question": "what is the full name and id of the college with the largest number of baseball players?", "query": "SELECT T1.name_full ,  T1.college_id FROM college AS T1 JOIN player_college AS T2 ON T1.college_id  =  T2.college_id GROUP BY T1.college_id ORDER BY count(*) DESC LIMIT 1;"}
{"question": "Find the full name and id of the college that has the most baseball players.", "query": "SELECT T1.name_full ,  T1.college_id FROM college AS T1 JOIN player_college AS T2 ON T1.college_id  =  T2.college_id GROUP BY T1.college_id ORDER BY count(*) DESC LIMIT 1;"}
{"question": "What is average salary of the players in the team named 'Boston Red Stockings' ?", "query": "SELECT avg(T1.salary) FROM salary AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id_br WHERE T2.name  = 'Boston Red Stockings'"}
{"question": "Compute the average salary of the players in the team called 'Boston Red Stockings'.", "query": "SELECT avg(T1.salary) FROM salary AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id_br WHERE T2.name  = 'Boston Red Stockings'"}
{"question": "What are first and last names of players participating in all star game in 1998?", "query": "SELECT name_first ,  name_last FROM player AS T1 JOIN all_star AS T2 ON T1.player_id  =  T2.player_id WHERE YEAR  =  1998"}
{"question": "List the first and last name for players who participated in all star game in 1998.", "query": "SELECT name_first ,  name_last FROM player AS T1 JOIN all_star AS T2 ON T1.player_id  =  T2.player_id WHERE YEAR  =  1998"}
{"question": "What are the first name, last name and id of the player with the most all star game experiences? Also list the count.", "query": "SELECT T1.name_first , T1.name_last ,  T1.player_id ,   count(*) FROM player AS T1 JOIN all_star AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.player_id ORDER BY count(*) DESC LIMIT 1;"}
{"question": "Which player has the most all star game experiences? Give me the first name, last name and id of the player, as well as the number of times the player participated in all star game.", "query": "SELECT T1.name_first , T1.name_last ,  T1.player_id ,   count(*) FROM player AS T1 JOIN all_star AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.player_id ORDER BY count(*) DESC LIMIT 1;"}
{"question": "How many players enter hall of fame each year?", "query": "SELECT yearid ,  count(*) FROM hall_of_fame GROUP BY yearid;"}
{"question": "Count the number of players who enter hall of fame for each year.", "query": "SELECT yearid ,  count(*) FROM hall_of_fame GROUP BY yearid;"}
{"question": "What is the average number of attendance at home games for each year?", "query": "SELECT YEAR ,  avg(attendance) FROM home_game GROUP BY YEAR;"}
{"question": "For each year, return the year and the average number of attendance at home games.", "query": "SELECT YEAR ,  avg(attendance) FROM home_game GROUP BY YEAR;"}
{"question": "In 2014, what are the id and rank of the team that has the largest average number of attendance?", "query": "SELECT T2.team_id ,  T2.rank FROM home_game AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id WHERE T1.year  =  2014 GROUP BY T1.team_id ORDER BY avg(T1.attendance) DESC LIMIT 1;"}
{"question": "Find the id and rank of the team that has the highest average attendance rate in 2014.", "query": "SELECT T2.team_id ,  T2.rank FROM home_game AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id WHERE T1.year  =  2014 GROUP BY T1.team_id ORDER BY avg(T1.attendance) DESC LIMIT 1;"}
{"question": "What are the manager's first name, last name and id who won the most manager award?", "query": "SELECT T1.name_first ,  T1.name_last ,  T2.player_id FROM player AS T1 JOIN manager_award AS T2 ON T1.player_id  =  T2.player_id GROUP BY T2.player_id ORDER BY count(*) DESC LIMIT 1;"}
{"question": "Which manager won the most manager award? Give me the manager's first name, last name and id.", "query": "SELECT T1.name_first ,  T1.name_last ,  T2.player_id FROM player AS T1 JOIN manager_award AS T2 ON T1.player_id  =  T2.player_id GROUP BY T2.player_id ORDER BY count(*) DESC LIMIT 1;"}
{"question": "How many parks are there in the state of NY?", "query": "SELECT count(*) FROM park WHERE state  =  'NY';"}
{"question": "Show me the number of parks the state of NY has.", "query": "SELECT count(*) FROM park WHERE state  =  'NY';"}
{"question": "Which 3 players won the most player awards? List their full name and id.", "query": "SELECT T1.name_first ,  T1.name_last ,  T1.player_id FROM player AS T1 JOIN player_award AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.player_id ORDER BY count(*) DESC LIMIT 3;"}
{"question": "Find the first name, last name and id for the top three players won the most player awards.", "query": "SELECT T1.name_first ,  T1.name_last ,  T1.player_id FROM player AS T1 JOIN player_award AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.player_id ORDER BY count(*) DESC LIMIT 3;"}
{"question": "List three countries which are the origins of the least players.", "query": "SELECT birth_country FROM player GROUP BY birth_country ORDER BY count(*) ASC LIMIT 3;"}
{"question": "What are the three countries that the least players are from?", "query": "SELECT birth_country FROM player GROUP BY birth_country ORDER BY count(*) ASC LIMIT 3;"}
{"question": "Find all the players' first name and last name who have empty death record.", "query": "SELECT name_first ,  name_last FROM player WHERE death_year = '';"}
{"question": "What are the first name and last name of the players whose death record is empty?", "query": "SELECT name_first ,  name_last FROM player WHERE death_year = '';"}
{"question": "How many players born in USA are right-handed batters? That is, have the batter value 'R'.", "query": "SELECT count(*) FROM player WHERE birth_country = 'USA' AND bats  =  'R';"}
{"question": "Count the number of players who were born in USA and have bats information 'R'.", "query": "SELECT count(*) FROM player WHERE birth_country = 'USA' AND bats  =  'R';"}
{"question": "What is the average height of the players from the college named 'Yale University'?", "query": "SELECT avg(T1.height) FROM player AS T1 JOIN player_college AS T2 ON T1.player_id  =  T2.player_id JOIN college AS T3 ON T3.college_id  =  T2.college_id WHERE T3.name_full  =  'Yale University';"}
{"question": "Find the average height of the players who belong to the college called 'Yale University'.", "query": "SELECT avg(T1.height) FROM player AS T1 JOIN player_college AS T2 ON T1.player_id  =  T2.player_id JOIN college AS T3 ON T3.college_id  =  T2.college_id WHERE T3.name_full  =  'Yale University';"}
{"question": "What is the highest salary among each team? List the team name, id and maximum salary.", "query": "SELECT T1.name ,  T1.team_id ,  max(T2.salary) FROM team AS T1 JOIN salary AS T2 ON T1.team_id  =  T2.team_id GROUP BY T1.team_id;"}
{"question": "For each team, return the team name, id and the maximum salary among the team.", "query": "SELECT T1.name ,  T1.team_id ,  max(T2.salary) FROM team AS T1 JOIN salary AS T2 ON T1.team_id  =  T2.team_id GROUP BY T1.team_id;"}
{"question": "What are the name and id of the team offering the lowest average salary?", "query": "SELECT T1.name ,  T1.team_id FROM team AS T1 JOIN salary AS T2 ON T1.team_id = T2.team_id GROUP BY T1.team_id ORDER BY avg(T2.salary) ASC LIMIT 1;"}
{"question": "Which team offers the lowest average salary? Give me the name and id of the team.", "query": "SELECT T1.name ,  T1.team_id FROM team AS T1 JOIN salary AS T2 ON T1.team_id = T2.team_id GROUP BY T1.team_id ORDER BY avg(T2.salary) ASC LIMIT 1;"}
{"question": "Find the players' first name and last name who won award both in 1960 and in 1961.", "query": "SELECT T1.name_first , T1.name_last FROM player AS T1 JOIN player_award AS T2 WHERE T2.year  =  1960 INTERSECT SELECT T1.name_first , T1.name_last FROM player AS T1 JOIN player_award AS T2 WHERE T2.year  =  1961"}
{"question": "Which players won awards in both 1960 and 1961? Return their first names and last names.", "query": "SELECT T1.name_first , T1.name_last FROM player AS T1 JOIN player_award AS T2 WHERE T2.year  =  1960 INTERSECT SELECT T1.name_first , T1.name_last FROM player AS T1 JOIN player_award AS T2 WHERE T2.year  =  1961"}
{"question": "List players' first name and last name who have weight greater than 220 or height shorter than 75.", "query": "SELECT name_first ,  name_last FROM player WHERE weight  >  220 OR height  <  75"}
{"question": "What are the first name and last name of the players who have weight above 220 or height below 75?", "query": "SELECT name_first ,  name_last FROM player WHERE weight  >  220 OR height  <  75"}
{"question": "List the maximum scores of the team Boston Red Stockings when the team won in postseason?", "query": "SELECT max(T1.wins) FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner  =  T2.team_id_br WHERE T2.name  =  'Boston Red Stockings';"}
{"question": "What are the maximum scores the team Boston Red Stockings got when the team won in postseason?", "query": "SELECT max(T1.wins) FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner  =  T2.team_id_br WHERE T2.name  =  'Boston Red Stockings';"}
{"question": "How many times did Boston Red Stockings lose in 2009 postseason?", "query": "SELECT count(*) FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_loser  =  T2.team_id_br WHERE T2.name  =  'Boston Red Stockings' AND T1.year = 2009;"}
{"question": "Count the number of times the team \"Boston Red Stockings\" lost in 2009 postseason.", "query": "SELECT count(*) FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_loser  =  T2.team_id_br WHERE T2.name  =  'Boston Red Stockings' AND T1.year = 2009;"}
{"question": "What are the name and id of the team with the most victories in 2008 postseason?", "query": "SELECT T2.name ,  T1.team_id_winner FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner  =  T2.team_id_br WHERE T1.year  =  2008 GROUP BY T1.team_id_winner ORDER BY count(*) DESC LIMIT 1;"}
{"question": "Find the name and id of the team that won the most times in 2008 postseason.", "query": "SELECT T2.name ,  T1.team_id_winner FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner  =  T2.team_id_br WHERE T1.year  =  2008 GROUP BY T1.team_id_winner ORDER BY count(*) DESC LIMIT 1;"}
{"question": "What is the number of wins the team Boston Red Stockings got in the postseasons each year in history?", "query": "SELECT count(*) ,  T1.year FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner  =  T2.team_id_br WHERE T2.name  =  'Boston Red Stockings' GROUP BY T1.year"}
{"question": "For each year, return the year and the number of times the team Boston Red Stockings won in the postseasons.", "query": "SELECT count(*) ,  T1.year FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner  =  T2.team_id_br WHERE T2.name  =  'Boston Red Stockings' GROUP BY T1.year"}
{"question": "What is the total number of postseason games that team Boston Red Stockings participated in?", "query": "SELECT count(*) FROM ( SELECT * FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner  =  T2.team_id_br WHERE T2.name  =  'Boston Red Stockings' UNION SELECT * FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_loser  =  T2.team_id_br WHERE T2.name  =  'Boston Red Stockings' );"}
{"question": "How many times in total did the team Boston Red Stockings participate in postseason games?", "query": "SELECT count(*) FROM ( SELECT * FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner  =  T2.team_id_br WHERE T2.name  =  'Boston Red Stockings' UNION SELECT * FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_loser  =  T2.team_id_br WHERE T2.name  =  'Boston Red Stockings' );"}
{"question": "How many games in 1885 postseason resulted in ties (that is, the value of \"ties\" is '1')?", "query": "SELECT count(*) FROM postseason WHERE YEAR  =  1885 AND ties  =  1;"}
{"question": "Find the number of tied games (the value of \"ties\" is '1') in 1885 postseason.", "query": "SELECT count(*) FROM postseason WHERE YEAR  =  1885 AND ties  =  1;"}
{"question": "What is the total salary paid by team Boston Red Stockings in 2010?", "query": "SELECT sum(T1.salary) FROM salary AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id_br WHERE T2.name  = 'Boston Red Stockings' AND T1.year  =  2010"}
{"question": "What is the total salary expenses of team Boston Red Stockings in 2010?", "query": "SELECT sum(T1.salary) FROM salary AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id_br WHERE T2.name  = 'Boston Red Stockings' AND T1.year  =  2010"}
{"question": "How many players were in the team Boston Red Stockings in 2000?", "query": "SELECT count(*) FROM salary AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id_br WHERE T2.name  = 'Boston Red Stockings' AND T1.year  =  2000"}
{"question": "How many players did Boston Red Stockings have in 2000?", "query": "SELECT count(*) FROM salary AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id_br WHERE T2.name  = 'Boston Red Stockings' AND T1.year  =  2000"}
{"question": "List the 3 highest salaries of the players in 2001?", "query": "SELECT salary FROM salary WHERE YEAR  =  2001 ORDER BY salary DESC LIMIT 3;"}
{"question": "How much salary did the top 3 well-paid players get in 2001?", "query": "SELECT salary FROM salary WHERE YEAR  =  2001 ORDER BY salary DESC LIMIT 3;"}
{"question": "What were all the salary values of players in 2010 and 2001?", "query": "SELECT salary FROM salary WHERE YEAR  =  2010 UNION SELECT salary FROM salary WHERE YEAR  =  2001"}
{"question": "List all the salary values players received in 2010 and 2001.", "query": "SELECT salary FROM salary WHERE YEAR  =  2010 UNION SELECT salary FROM salary WHERE YEAR  =  2001"}
{"question": "In which year did the least people enter hall of fame?", "query": "SELECT yearid FROM hall_of_fame GROUP BY yearid ORDER BY count(*) ASC LIMIT 1;"}
{"question": "Find the year in which the least people enter hall of fame.", "query": "SELECT yearid FROM hall_of_fame GROUP BY yearid ORDER BY count(*) ASC LIMIT 1;"}
{"question": "How many parks are there in Atlanta city?", "query": "SELECT count(*) FROM park WHERE city = 'Atlanta';"}
{"question": "How many parks does Atlanta city have?", "query": "SELECT count(*) FROM park WHERE city = 'Atlanta';"}
{"question": "How many games were played in park \"Columbia Park\" in 1907?", "query": "SELECT count(*) FROM home_game AS T1 JOIN park AS T2 ON T1.park_id  =  T2.park_id WHERE T1.year = 1907 AND T2.park_name = 'Columbia Park';"}
{"question": "Count the number of games taken place in park \"Columbia Park\" in 1907.", "query": "SELECT count(*) FROM home_game AS T1 JOIN park AS T2 ON T1.park_id  =  T2.park_id WHERE T1.year = 1907 AND T2.park_name = 'Columbia Park';"}
{"question": "How many games were played in city Atlanta in 2000?", "query": "SELECT count(*) FROM home_game AS T1 JOIN park AS T2 ON T1.park_id  =  T2.park_id WHERE T1.year  =  2000 AND T2.city  =  'Atlanta';"}
{"question": "Find the number of games taken place in city Atlanta in 2000.", "query": "SELECT count(*) FROM home_game AS T1 JOIN park AS T2 ON T1.park_id  =  T2.park_id WHERE T1.year  =  2000 AND T2.city  =  'Atlanta';"}
{"question": "What is the total home game attendance of team Boston Red Stockings from 2000 to 2010?", "query": "SELECT sum(T1.attendance) FROM home_game AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id_br WHERE T2.name  =  'Boston Red Stockings' AND T1.year BETWEEN 2000 AND 2010;"}
{"question": "How many games in total did team Boston Red Stockings attend from 2000 to 2010?", "query": "SELECT sum(T1.attendance) FROM home_game AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id_br WHERE T2.name  =  'Boston Red Stockings' AND T1.year BETWEEN 2000 AND 2010;"}
{"question": "How much did the the player with first name Len and last name Barker earn between 1985 to 1990 in total?", "query": "SELECT sum(T1.salary) FROM salary AS T1 JOIN player AS T2 ON T1.player_id = T2.player_id WHERE T2.name_first  =  'Len' AND T2.name_last = 'Barker' AND T1.year BETWEEN 1985 AND 1990;"}
{"question": "Compute the total salary that the player with first name Len and last name Barker received between 1985 to 1990.", "query": "SELECT sum(T1.salary) FROM salary AS T1 JOIN player AS T2 ON T1.player_id = T2.player_id WHERE T2.name_first  =  'Len' AND T2.name_last = 'Barker' AND T1.year BETWEEN 1985 AND 1990;"}
{"question": "List players' first name and last name who received salary from team Washington Nationals in both 2005 and 2007.", "query": "SELECT T2.name_first ,  T2.name_last FROM salary AS T1 JOIN player AS T2 ON T1.player_id = T2.player_id JOIN team AS T3 ON T3.team_id_br = T1.team_id WHERE T1.year = 2005 AND T3.name = 'Washington Nationals' INTERSECT SELECT T2.name_first , T2.name_last FROM salary AS T1 JOIN player AS T2 ON T1.player_id = T2.player_id JOIN team AS T3 ON T3.team_id_br = T1.team_id WHERE T1.year = 2007 AND T3.name = 'Washington Nationals'"}
{"question": "What are the first name and last name of the players who were paid salary by team Washington Nationals in both 2005 and 2007?", "query": "SELECT T2.name_first ,  T2.name_last FROM salary AS T1 JOIN player AS T2 ON T1.player_id = T2.player_id JOIN team AS T3 ON T3.team_id_br = T1.team_id WHERE T1.year = 2005 AND T3.name = 'Washington Nationals' INTERSECT SELECT T2.name_first , T2.name_last FROM salary AS T1 JOIN player AS T2 ON T1.player_id = T2.player_id JOIN team AS T3 ON T3.team_id_br = T1.team_id WHERE T1.year = 2007 AND T3.name = 'Washington Nationals'"}
{"question": "How many home games did the team Boston Red Stockings play from 1990 to 2000 in total?", "query": "SELECT sum(T1.games) FROM home_game AS T1 JOIN team AS T2 ON T1.team_id = T2.team_id_br WHERE T2.name = 'Boston Red Stockings' AND T1.year BETWEEN 1990 AND 2000;"}
{"question": "Count the total number of games the team Boston Red Stockings attended from 1990 to 2000.", "query": "SELECT sum(T1.games) FROM home_game AS T1 JOIN team AS T2 ON T1.team_id = T2.team_id_br WHERE T2.name = 'Boston Red Stockings' AND T1.year BETWEEN 1990 AND 2000;"}
{"question": "Which team had the least number of attendances in home games in 1980?", "query": "SELECT T2.name FROM home_game AS T1 JOIN team AS T2 ON T1.team_id = T2.team_id_br WHERE T1.year = 1980 ORDER BY T1.attendance ASC LIMIT 1;"}
{"question": "Find the team that attended the least number of home games in 1980.", "query": "SELECT T2.name FROM home_game AS T1 JOIN team AS T2 ON T1.team_id = T2.team_id_br WHERE T1.year = 1980 ORDER BY T1.attendance ASC LIMIT 1;"}
{"question": "List the names of states that have more than 2 parks.", "query": "SELECT state FROM park GROUP BY state HAVING count(*)  >  2;"}
{"question": "Which states have more than 2 parks?", "query": "SELECT state FROM park GROUP BY state HAVING count(*)  >  2;"}
{"question": "How many team franchises are active, with active value 'Y'?", "query": "SELECT count(*) FROM team_franchise WHERE active = 'Y';"}
{"question": "Find the number of team franchises that are active (have 'Y' as \"active\" information).", "query": "SELECT count(*) FROM team_franchise WHERE active = 'Y';"}
{"question": "Which cities have 2 to 4 parks?", "query": "SELECT city FROM park GROUP BY city HAVING count(*) BETWEEN 2 AND 4;"}
{"question": "Find all the cities that have 2 to 4 parks.", "query": "SELECT city FROM park GROUP BY city HAVING count(*) BETWEEN 2 AND 4;"}
{"question": "Which park had most attendances in 2008?", "query": "SELECT T2.park_name FROM home_game AS T1 JOIN park AS T2 ON T1.park_id  =  T2.park_id WHERE T1.year = 2008 ORDER BY T1.attendance DESC LIMIT 1;"}
{"question": "Which park did the most people attend in 2008?", "query": "SELECT T2.park_name FROM home_game AS T1 JOIN park AS T2 ON T1.park_id  =  T2.park_id WHERE T1.year = 2008 ORDER BY T1.attendance DESC LIMIT 1;"}
{"question": "How many camera lenses have a focal length longer than 15 mm?", "query": "SELECT count(*) FROM camera_lens WHERE focal_length_mm  >  15"}
{"question": "Find the brand and name for each camera lens, and sort in descending order of maximum aperture.", "query": "SELECT brand ,  name FROM camera_lens ORDER BY max_aperture DESC"}
{"question": "List the id, color scheme, and name for all the photos.", "query": "SELECT id ,  color ,  name FROM photos"}
{"question": "What are the maximum and average height of the mountains?", "query": "SELECT max(height) ,  avg(height) FROM mountain"}
{"question": "What are the average prominence of the mountains in country 'Morocco'?", "query": "SELECT avg(prominence) FROM mountain WHERE country  =  'Morocco'"}
{"question": "What are the name, height and prominence of mountains which do not belong to the range 'Aberdare Range'?", "query": "SELECT name ,  height ,  prominence FROM mountain WHERE range != 'Aberdare Range'"}
{"question": "What are the id and name of the photos for mountains?", "query": "SELECT T1.id ,  T1.name FROM mountain AS T1 JOIN photos AS T2 ON T1.id  =  T2.mountain_id WHERE T1.height  >  4000"}
{"question": "What are the id and name of the mountains that have at least 2 photos?", "query": "SELECT T1.id ,  T1.name FROM mountain AS T1 JOIN photos AS T2 ON T1.id  =  T2.mountain_id GROUP BY T1.id HAVING count(*)  >=  2"}
{"question": "What are the names of the cameras that have taken picture of the most mountains?", "query": "SELECT T2.name FROM photos AS T1 JOIN camera_lens AS T2 ON T1.camera_lens_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1"}
{"question": "What are the names of photos taken with the lens brand 'Sigma' or 'Olympus'?", "query": "SELECT T1.name FROM camera_lens AS T1 JOIN photos AS T2 ON T2.camera_lens_id  =  T1.id WHERE T1.brand  =  'Sigma' OR T1.brand  =  'Olympus'"}
{"question": "How many different kinds of lens brands are there?", "query": "SELECT count(DISTINCT brand) FROM camera_lens"}
{"question": "How many camera lenses are not used in taking any photos?", "query": "SELECT count(*) FROM camera_lens WHERE id NOT IN ( SELECT camera_lens_id FROM photos )"}
{"question": "How many distinct kinds of camera lenses are used to take photos of mountains in the country 'Ethiopia'?", "query": "SELECT count(DISTINCT T2.camera_lens_id) FROM mountain AS T1 JOIN photos AS T2 ON T1.id  =  T2.mountain_id WHERE T1.country  =  'Ethiopia'"}
{"question": "List the brands of lenses that took both a picture of mountains with range 'Toubkal Atlas' and a picture of mountains with range 'Lasta Massif'", "query": "SELECT T3.brand FROM mountain AS T1 JOIN photos AS T2 ON T1.id  =  T2.mountain_id JOIN camera_lens AS T3 ON T2.camera_lens_id  =  T3.id WHERE T1.range  =  'Toubkal Atlas' INTERSECT SELECT T3.brand FROM mountain AS T1 JOIN photos AS T2 ON T1.id  =  T2.mountain_id JOIN camera_lens AS T3 ON T2.camera_lens_id  =  T3.id WHERE T1.range  =  'Lasta Massif'"}
{"question": "Show the name and prominence of the mountains whose picture is not taken by a lens of brand 'Sigma'.", "query": "SELECT name ,  prominence FROM mountain EXCEPT SELECT T1.name ,  T1.prominence FROM mountain AS T1 JOIN photos AS T2 ON T1.id  =  T2.mountain_id JOIN camera_lens AS T3 ON T2.camera_lens_id  =  T3.id WHERE T3.brand  =  'Sigma'"}
{"question": "List the camera lens names containing substring \"Digital\".", "query": "SELECT name FROM camera_lens WHERE name LIKE \"%Digital%\""}
{"question": "What is the name of each camera lens and the number of photos taken by it? Order the result by the count of photos.", "query": "SELECT T1.name ,  count(*) FROM camera_lens AS T1 JOIN photos AS T2 ON T1.id  =  T2.camera_lens_id GROUP BY T1.id ORDER BY count(*)"}
{"question": "Find the names of channels that are not owned by CCTV.", "query": "SELECT name FROM channel WHERE OWNER != 'CCTV'"}
{"question": "Which channels are not owned by CCTV? Give me the channel names.", "query": "SELECT name FROM channel WHERE OWNER != 'CCTV'"}
{"question": "List all channel names ordered by their rating in percent from big to small.", "query": "SELECT name FROM channel ORDER BY rating_in_percent DESC"}
{"question": "Give me a list of all the channel names sorted by the channel rating in descending order.", "query": "SELECT name FROM channel ORDER BY rating_in_percent DESC"}
{"question": "What is the owner of the channel that has the highest rating ratio?", "query": "SELECT OWNER FROM channel ORDER BY rating_in_percent DESC LIMIT 1"}
{"question": "Show me the owner of the channel with the highest rating.", "query": "SELECT OWNER FROM channel ORDER BY rating_in_percent DESC LIMIT 1"}
{"question": "how many programs are there?", "query": "SELECT count(*) FROM program"}
{"question": "Count the number of programs.", "query": "SELECT count(*) FROM program"}
{"question": "list all the names of programs, ordering by launch time.", "query": "SELECT name FROM program ORDER BY launch"}
{"question": "What is the list of program names, sorted by the order of launch date?", "query": "SELECT name FROM program ORDER BY launch"}
{"question": "List the name, origin and owner of each program.", "query": "SELECT name ,  origin ,  OWNER FROM program"}
{"question": "What are the name, origin and owner of each program?", "query": "SELECT name ,  origin ,  OWNER FROM program"}
{"question": "find the name of the program that was launched most recently.", "query": "SELECT name FROM program ORDER BY launch DESC LIMIT 1"}
{"question": "Which program was launched most recently? Return the program name.", "query": "SELECT name FROM program ORDER BY launch DESC LIMIT 1"}
{"question": "find the total percentage share of all channels owned by CCTV.", "query": "SELECT sum(Share_in_percent) FROM channel WHERE OWNER  =  'CCTV'"}
{"question": "What is the total share (in percent) of all the channels owned by CCTV?", "query": "SELECT sum(Share_in_percent) FROM channel WHERE OWNER  =  'CCTV'"}
{"question": "Find the names of the channels that are broadcast in the morning.", "query": "SELECT t1.name FROM channel AS t1 JOIN broadcast AS t2 ON t1.channel_id  =  t2.channel_id WHERE t2.time_of_day  =  'Morning'"}
{"question": "Which channels are broadcast in the morning? Give me the channel names.", "query": "SELECT t1.name FROM channel AS t1 JOIN broadcast AS t2 ON t1.channel_id  =  t2.channel_id WHERE t2.time_of_day  =  'Morning'"}
{"question": "what are the names of the channels that broadcast in both morning and night?", "query": "SELECT t1.name FROM channel AS t1 JOIN broadcast AS t2 ON t1.channel_id  =  t2.channel_id WHERE t2.time_of_day  =  'Morning' INTERSECT SELECT t1.name FROM channel AS t1 JOIN broadcast AS t2 ON t1.channel_id  =  t2.channel_id WHERE t2.time_of_day  =  'Night'"}
{"question": "Which channels broadcast both in the morning and at night? Give me the channel names.", "query": "SELECT t1.name FROM channel AS t1 JOIN broadcast AS t2 ON t1.channel_id  =  t2.channel_id WHERE t2.time_of_day  =  'Morning' INTERSECT SELECT t1.name FROM channel AS t1 JOIN broadcast AS t2 ON t1.channel_id  =  t2.channel_id WHERE t2.time_of_day  =  'Night'"}
{"question": "how many programs are broadcast in each time section of the day?", "query": "SELECT count(*) ,  time_of_day FROM broadcast GROUP BY time_of_day"}
{"question": "Count the number of programs broadcast for each time section of a day.", "query": "SELECT count(*) ,  time_of_day FROM broadcast GROUP BY time_of_day"}
{"question": "find the number of different programs that are broadcast during night time.", "query": "SELECT count(DISTINCT program_id) FROM broadcast WHERE time_of_day  =  'Night'"}
{"question": "How many distinct programs are broadcast at \"Night\" time?", "query": "SELECT count(DISTINCT program_id) FROM broadcast WHERE time_of_day  =  'Night'"}
{"question": "Find the names of programs that are never broadcasted in the morning.", "query": "SELECT name FROM program EXCEPT SELECT t1.name FROM program AS t1 JOIN broadcast AS t2 ON t1.program_id  =  t2.program_id WHERE t2.Time_of_day  =  \"Morning\""}
{"question": "Which programs are never broadcasted in the morning? Give me the names of the programs.", "query": "SELECT name FROM program EXCEPT SELECT t1.name FROM program AS t1 JOIN broadcast AS t2 ON t1.program_id  =  t2.program_id WHERE t2.Time_of_day  =  \"Morning\""}
{"question": "find the program owners that have some programs in both morning and night time.", "query": "SELECT t1.owner FROM program AS t1 JOIN broadcast AS t2 ON t1.program_id  =  t2.program_id WHERE t2.Time_of_day  =  \"Morning\" INTERSECT SELECT t1.owner FROM program AS t1 JOIN broadcast AS t2 ON t1.program_id  =  t2.program_id WHERE t2.Time_of_day  =  \"Night\""}
{"question": "Who are the owners of the programs that broadcast both in the morning and at night?", "query": "SELECT t1.owner FROM program AS t1 JOIN broadcast AS t2 ON t1.program_id  =  t2.program_id WHERE t2.Time_of_day  =  \"Morning\" INTERSECT SELECT t1.owner FROM program AS t1 JOIN broadcast AS t2 ON t1.program_id  =  t2.program_id WHERE t2.Time_of_day  =  \"Night\""}
{"question": "List all program origins in the alphabetical order.", "query": "SELECT origin FROM program ORDER BY origin"}
{"question": "What is the list of program origins ordered alphabetically?", "query": "SELECT origin FROM program ORDER BY origin"}
{"question": "what is the number of different channel owners?", "query": "SELECT count(DISTINCT OWNER) FROM channel"}
{"question": "Count the number of distinct channel owners.", "query": "SELECT count(DISTINCT OWNER) FROM channel"}
{"question": "find the names of programs whose origin is not in Beijing.", "query": "SELECT name FROM program WHERE origin != 'Beijing'"}
{"question": "Which programs' origins are not \"Beijing\"? Give me the program names.", "query": "SELECT name FROM program WHERE origin != 'Beijing'"}
{"question": "What are the names of the channels owned by CCTV or HBS?", "query": "SELECT name FROM channel WHERE OWNER  =  'CCTV' OR OWNER  =  'HBS'"}
{"question": "List the names of all the channels owned by either CCTV or HBS", "query": "SELECT name FROM channel WHERE OWNER  =  'CCTV' OR OWNER  =  'HBS'"}
{"question": "Find the total rating ratio for each channel owner.", "query": "SELECT sum(Rating_in_percent) ,  OWNER FROM channel GROUP BY OWNER"}
{"question": "What is the total rating of channel for each channel owner?", "query": "SELECT sum(Rating_in_percent) ,  OWNER FROM channel GROUP BY OWNER"}
{"question": "Find the name of the program that is broadcast most frequently.", "query": "SELECT t1.name FROM program AS t1 JOIN broadcast AS t2 ON t1.program_id  =  t2.program_id GROUP BY t2.program_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "Which program is broadcast most frequently? Give me the program name.", "query": "SELECT t1.name FROM program AS t1 JOIN broadcast AS t2 ON t1.program_id  =  t2.program_id GROUP BY t2.program_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "How many courses are there in total?", "query": "SELECT count(*) FROM COURSES"}
{"question": "Find the total number of courses offered.", "query": "SELECT count(*) FROM COURSES"}
{"question": "What are the descriptions of the courses with name \"database\"?", "query": "SELECT course_description FROM COURSES WHERE course_name  =  \"database\""}
{"question": "Return the description for the courses named \"database\".", "query": "SELECT course_description FROM COURSES WHERE course_name  =  \"database\""}
{"question": "What are the addresses of the course authors or tutors with personal name \"Cathrine\"", "query": "SELECT address_line_1 FROM Course_Authors_and_Tutors WHERE personal_name\t =  \"Cathrine\""}
{"question": "Return the addresses of the course authors or tutors whose personal name is \"Cathrine\".", "query": "SELECT address_line_1 FROM Course_Authors_and_Tutors WHERE personal_name\t =  \"Cathrine\""}
{"question": "List the addresses of all the course authors or tutors.", "query": "SELECT address_line_1 FROM Course_Authors_and_Tutors"}
{"question": "What is the address of each course author or tutor?", "query": "SELECT address_line_1 FROM Course_Authors_and_Tutors"}
{"question": "List all the login names and family names of course author and tutors.", "query": "SELECT login_name ,  family_name FROM Course_Authors_and_Tutors"}
{"question": "What are the login names and family names of course author and tutors?", "query": "SELECT login_name ,  family_name FROM Course_Authors_and_Tutors"}
{"question": "List all the dates of enrollment and completion of students.", "query": "SELECT date_of_enrolment ,  date_of_completion FROM Student_Course_Enrolment"}
{"question": "What are all the dates of enrollment and completion in record?", "query": "SELECT date_of_enrolment ,  date_of_completion FROM Student_Course_Enrolment"}
{"question": "How many distinct students are enrolled in courses?", "query": "SELECT count(DISTINCT student_id) FROM Student_Course_Enrolment"}
{"question": "Find the number of distinct students enrolled in courses.", "query": "SELECT count(DISTINCT student_id) FROM Student_Course_Enrolment"}
{"question": "How many distinct courses are enrolled in by students?", "query": "SELECT count(course_id) FROM Student_Course_Enrolment"}
{"question": "Find the number of distinct courses that have enrolled students.", "query": "SELECT count(course_id) FROM Student_Course_Enrolment"}
{"question": "Find the dates of the tests taken with result \"Pass\".", "query": "SELECT date_test_taken FROM Student_Tests_Taken WHERE test_result  =  \"Pass\""}
{"question": "Which tests have \"Pass\" results? Return the dates when the tests were taken.", "query": "SELECT date_test_taken FROM Student_Tests_Taken WHERE test_result  =  \"Pass\""}
{"question": "How many tests have result \"Fail\"?", "query": "SELECT count(*) FROM Student_Tests_Taken WHERE test_result  =  \"Fail\""}
{"question": "Count the number of tests with \"Fail\" result.", "query": "SELECT count(*) FROM Student_Tests_Taken WHERE test_result  =  \"Fail\""}
{"question": "What are the login names of the students with family name \"Ward\"?", "query": "SELECT login_name FROM Students WHERE family_name  =  \"Ward\""}
{"question": "Return the login names of the students whose family name is \"Ward\".", "query": "SELECT login_name FROM Students WHERE family_name  =  \"Ward\""}
{"question": "What are the dates of the latest logon of the students with family name \"Jaskolski\" or \"Langosh\"?", "query": "SELECT date_of_latest_logon FROM Students WHERE family_name  =  \"Jaskolski\" OR family_name  =  \"Langosh\""}
{"question": "Find the latest logon date of the students whose family name is \"Jaskolski\" or \"Langosh\".", "query": "SELECT date_of_latest_logon FROM Students WHERE family_name  =  \"Jaskolski\" OR family_name  =  \"Langosh\""}
{"question": "How many students have personal names that contain the word \"son\"?", "query": "SELECT COUNT(*) FROM Students WHERE personal_name LIKE \"%son%\""}
{"question": "Find the number of students who have the word \"son\" in their personal names.", "query": "SELECT COUNT(*) FROM Students WHERE personal_name LIKE \"%son%\""}
{"question": "List all the subject names.", "query": "SELECT subject_name FROM SUBJECTS"}
{"question": "What are the names of all the subjects.", "query": "SELECT subject_name FROM SUBJECTS"}
{"question": "List all the information about course authors and tutors in alphabetical order of the personal name.", "query": "SELECT * FROM Course_Authors_and_Tutors ORDER BY personal_name"}
{"question": "Sort the information about course authors and tutors in alphabetical order of the personal name.", "query": "SELECT * FROM Course_Authors_and_Tutors ORDER BY personal_name"}
{"question": "List the personal names and family names of all the students in alphabetical order of family name.", "query": "SELECT personal_name ,  family_name FROM Students ORDER BY family_name"}
{"question": "What are the personal names and family names of the students? Sort the result in alphabetical order of the family name.", "query": "SELECT personal_name ,  family_name FROM Students ORDER BY family_name"}
{"question": "List each test result and its count in descending order of count.", "query": "SELECT test_result ,  COUNT(*) FROM Student_Tests_Taken GROUP BY test_result ORDER BY COUNT(*) DESC"}
{"question": "For each distinct test result, find the number of students who got the result.", "query": "SELECT test_result ,  COUNT(*) FROM Student_Tests_Taken GROUP BY test_result ORDER BY COUNT(*) DESC"}
{"question": "Find the login name of the course author that teaches the course with name \"advanced database\".", "query": "SELECT T1.login_name FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id WHERE T2.course_name  =  \"advanced database\""}
{"question": "Which course author teaches the \"advanced database\" course? Give me his or her login name.", "query": "SELECT T1.login_name FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id WHERE T2.course_name  =  \"advanced database\""}
{"question": "Find the addresses of the course authors who teach the course with name \"operating system\" or \"data structure\".", "query": "SELECT T1.address_line_1 FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id WHERE T2.course_name  =  \"operating system\" OR T2.course_name  =  \"data structure\""}
{"question": "What are the addresses of the course authors who teach either \"operating system\" or \"data structure\" course.", "query": "SELECT T1.address_line_1 FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id WHERE T2.course_name  =  \"operating system\" OR T2.course_name  =  \"data structure\""}
{"question": "Find the personal name, family name, and author ID of the course author that teaches the most courses.", "query": "SELECT T1.personal_name ,  T1.family_name ,  T2.author_id FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id GROUP BY T2.author_id ORDER BY COUNT(*) DESC LIMIT 1"}
{"question": "What are the personal name, family name, and author ID of the course author who teaches the most courses?", "query": "SELECT T1.personal_name ,  T1.family_name ,  T2.author_id FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id GROUP BY T2.author_id ORDER BY COUNT(*) DESC LIMIT 1"}
{"question": "Find the addresses and author IDs of the course authors that teach at least two courses.", "query": "SELECT T1.address_line_1 ,  T2.author_id FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id GROUP BY T2.author_id HAVING Count(*)  >=  2"}
{"question": "Which course authors teach two or more courses? Give me their addresses and author IDs.", "query": "SELECT T1.address_line_1 ,  T2.author_id FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id GROUP BY T2.author_id HAVING Count(*)  >=  2"}
{"question": "Find the names of courses taught by the tutor who has personal name \"Julio\".", "query": "SELECT T2.course_name FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id WHERE T1.personal_name  =  \"Julio\""}
{"question": "What are the names of the courses taught by the tutor whose personal name is \"Julio\"?", "query": "SELECT T2.course_name FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id WHERE T1.personal_name  =  \"Julio\""}
{"question": "Find the names and descriptions of courses that belong to the subject named \"Computer Science\".", "query": "SELECT T1.course_name ,  T1.course_description FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id  =  T2.subject_id WHERE T2.subject_name  =  \"Computer Science\""}
{"question": "What are the names and descriptions of the all courses under the \"Computer Science\" subject?", "query": "SELECT T1.course_name ,  T1.course_description FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id  =  T2.subject_id WHERE T2.subject_name  =  \"Computer Science\""}
{"question": "Find the subject ID, subject name, and the corresponding number of available courses for each subject.", "query": "SELECT T1.subject_id ,  T2.subject_name ,  COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id  =  T2.subject_id GROUP BY T1.subject_id"}
{"question": "What are the subject ID, subject name, and the number of available courses for each subject?", "query": "SELECT T1.subject_id ,  T2.subject_name ,  COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id  =  T2.subject_id GROUP BY T1.subject_id"}
{"question": "Find the subject ID, name of subject and the corresponding number of courses for each subject, and sort by the course count in ascending order.", "query": "SELECT T1.subject_id ,  T2.subject_name ,  COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id  =  T2.subject_id GROUP BY T1.subject_id ORDER BY COUNT(*) ASC"}
{"question": "List the subject ID, name of subject and the number of courses available for each subject in ascending order of the course counts.", "query": "SELECT T1.subject_id ,  T2.subject_name ,  COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id  =  T2.subject_id GROUP BY T1.subject_id ORDER BY COUNT(*) ASC"}
{"question": "What is the date of enrollment of the course named \"Spanish\"?", "query": "SELECT T2.date_of_enrolment FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id WHERE T1.course_name  =  \"Spanish\""}
{"question": "Find the the date of enrollment of the \"Spanish\" course.", "query": "SELECT T2.date_of_enrolment FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id WHERE T1.course_name  =  \"Spanish\""}
{"question": "What is the name of the course that has the most student enrollment?", "query": "SELECT T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY COUNT(*) DESC LIMIT 1"}
{"question": "Which course is enrolled in by the most students? Give me the course name.", "query": "SELECT T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY COUNT(*) DESC LIMIT 1"}
{"question": "What are the names of the courses that have exactly 1 student enrollment?", "query": "SELECT T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name HAVING COUNT(*)  =  1"}
{"question": "Find the names of the courses that have just one student enrollment.", "query": "SELECT T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name HAVING COUNT(*)  =  1"}
{"question": "What are the descriptions and names of the courses that have student enrollment bigger than 2?", "query": "SELECT T1.course_description ,  T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name HAVING COUNT(*)  >  2"}
{"question": "Return the descriptions and names of the courses that have more than two students enrolled in.", "query": "SELECT T1.course_description ,  T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name HAVING COUNT(*)  >  2"}
{"question": "What is the name of each course and the corresponding number of student enrollment?", "query": "SELECT T1.course_name ,  COUNT(*) FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name"}
{"question": "List the name and the number of enrolled student for each course.", "query": "SELECT T1.course_name ,  COUNT(*) FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name"}
{"question": "What are the enrollment dates of all the tests that have result \"Pass\"?", "query": "SELECT T1.date_of_enrolment FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id  =  T2.registration_id WHERE T2.test_result  =  \"Pass\""}
{"question": "Find the enrollment date for all the tests that have \"Pass\" result.", "query": "SELECT T1.date_of_enrolment FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id  =  T2.registration_id WHERE T2.test_result  =  \"Pass\""}
{"question": "What are the completion dates of all the tests that have result \"Fail\"?", "query": "SELECT T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id  =  T2.registration_id WHERE T2.test_result  =  \"Fail\""}
{"question": "Return the completion date for all the tests that have \"Fail\" result.", "query": "SELECT T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id  =  T2.registration_id WHERE T2.test_result  =  \"Fail\""}
{"question": "List the dates of enrollment and completion of the student with personal name \"Karson\".", "query": "SELECT T1.date_of_enrolment ,  T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id WHERE T2.personal_name  =  \"Karson\""}
{"question": "On what dates did the student whose personal name is \"Karson\" enroll in and complete the courses?", "query": "SELECT T1.date_of_enrolment ,  T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id WHERE T2.personal_name  =  \"Karson\""}
{"question": "List the dates of enrollment and completion of the student with family name \"Zieme\" and personal name \"Bernie\".", "query": "SELECT T1.date_of_enrolment ,  T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id WHERE T2.family_name  =  \"Zieme\" AND T2.personal_name  =  \"Bernie\""}
{"question": "On what dates did the student with family name \"Zieme\" and personal name \"Bernie\" enroll in and complete the courses?", "query": "SELECT T1.date_of_enrolment ,  T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id WHERE T2.family_name  =  \"Zieme\" AND T2.personal_name  =  \"Bernie\""}
{"question": "Find the student ID and login name of the student with the most course enrollments", "query": "SELECT T1.student_id ,  T2.login_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY COUNT(*) DESC LIMIT 1"}
{"question": "What are the student ID and login name of the student who are enrolled in the most courses?", "query": "SELECT T1.student_id ,  T2.login_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY COUNT(*) DESC LIMIT 1"}
{"question": "Find the student ID and personal name of the student with at least two enrollments.", "query": "SELECT T1.student_id ,  T2.personal_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING COUNT(*)  >=  2"}
{"question": "Which student are enrolled in at least two courses? Give me the student ID and personal name.", "query": "SELECT T1.student_id ,  T2.personal_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING COUNT(*)  >=  2"}
{"question": "Find the student ID and middle name for all the students with at most two enrollments.", "query": "SELECT T1.student_id ,  T2.middle_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING COUNT(*)  <=  2"}
{"question": "What are the student IDs and middle names of the students enrolled in at most two courses?", "query": "SELECT T1.student_id ,  T2.middle_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING COUNT(*)  <=  2"}
{"question": "Find the personal names of students not enrolled in any course.", "query": "SELECT personal_name FROM Students EXCEPT SELECT T1.personal_name FROM Students AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.student_id  =  T2.student_id"}
{"question": "Which students not enrolled in any course? Find their personal names.", "query": "SELECT personal_name FROM Students EXCEPT SELECT T1.personal_name FROM Students AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.student_id  =  T2.student_id"}
{"question": "How many students did not have any course enrollment?", "query": "SELECT count(*) FROM Students WHERE student_id NOT IN (SELECT student_id FROM Student_Course_Enrolment)"}
{"question": "Count the number of students who did not enroll in any course.", "query": "SELECT count(*) FROM Students WHERE student_id NOT IN (SELECT student_id FROM Student_Course_Enrolment)"}
{"question": "Find the common login name of course authors and students.", "query": "SELECT login_name FROM Course_Authors_and_Tutors INTERSECT SELECT login_name FROM Students"}
{"question": "What are the login names used both by some course authors and some students?", "query": "SELECT login_name FROM Course_Authors_and_Tutors INTERSECT SELECT login_name FROM Students"}
{"question": "Find the common personal name of course authors and students.", "query": "SELECT personal_name FROM Course_Authors_and_Tutors INTERSECT SELECT personal_name FROM Students"}
{"question": "What are the personal names used both by some course authors and some students?", "query": "SELECT personal_name FROM Course_Authors_and_Tutors INTERSECT SELECT personal_name FROM Students"}
{"question": "Which claims caused more than 2 settlements or have the maximum claim value? List the date the claim was made and the claim id.", "query": "SELECT T1.Date_Claim_Made ,  T1.Claim_id FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_id  =  T2.Claim_id GROUP BY T1.Claim_id HAVING count(*)  >  2 UNION SELECT T1.Date_Claim_Made ,  T1.Claim_id FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_id  =  T2.Claim_id WHERE T1.Amount_Claimed  =  ( SELECT max(Amount_Claimed) FROM Claims )"}
{"question": "Find the claims that led to more than two settlements or have the maximum claim value. For each of them, return the date the claim was made and the id of the claim.", "query": "SELECT T1.Date_Claim_Made ,  T1.Claim_id FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_id  =  T2.Claim_id GROUP BY T1.Claim_id HAVING count(*)  >  2 UNION SELECT T1.Date_Claim_Made ,  T1.Claim_id FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_id  =  T2.Claim_id WHERE T1.Amount_Claimed  =  ( SELECT max(Amount_Claimed) FROM Claims )"}
{"question": "Which customer had at least 2 policies but did not file any claims? List the customer details and id.", "query": "SELECT T1.customer_details ,  T1.customer_id FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >=  2 EXCEPT SELECT T1.customer_details ,  T1.customer_id FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id  =  T2.customer_id JOIN Claims AS T3 ON T2.policy_id  =  T3.policy_id"}
{"question": "Give me the the customer details and id for the customers who had two or more policies but did not file any claims.", "query": "SELECT T1.customer_details ,  T1.customer_id FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >=  2 EXCEPT SELECT T1.customer_details ,  T1.customer_id FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id  =  T2.customer_id JOIN Claims AS T3 ON T2.policy_id  =  T3.policy_id"}
{"question": "List the method, date and amount of all the payments, in ascending order of date.", "query": "SELECT Payment_Method_Code ,  Date_Payment_Made ,  Amount_Payment FROM Payments ORDER BY Date_Payment_Made ASC"}
{"question": "What are the method, date and amount of each payment? Sort the list in ascending order of date.", "query": "SELECT Payment_Method_Code ,  Date_Payment_Made ,  Amount_Payment FROM Payments ORDER BY Date_Payment_Made ASC"}
{"question": "Among all the claims, what is the settlement amount of the claim with the largest claim amount? List both the settlement amount and claim amount.", "query": "SELECT Amount_Settled ,  Amount_Claimed FROM Claims ORDER BY Amount_Claimed DESC LIMIT 1"}
{"question": "Find the settlement amount of the claim with the largest claim amount. Show both the settlement amount and claim amount.", "query": "SELECT Amount_Settled ,  Amount_Claimed FROM Claims ORDER BY Amount_Claimed DESC LIMIT 1"}
{"question": "Among all the claims, what is the amount claimed in the claim with the least amount settled? List both the settlement amount and claim amount.", "query": "SELECT Amount_Settled ,  Amount_Claimed FROM Claims ORDER BY Amount_Settled ASC LIMIT 1"}
{"question": "Find the claimed amount in the claim with the least amount settled. Show both the settlement amount and claim amount.", "query": "SELECT Amount_Settled ,  Amount_Claimed FROM Claims ORDER BY Amount_Settled ASC LIMIT 1"}
{"question": "Among all the claims, which claims have a claimed amount larger than the average? List the date the claim was made and the date it was settled.", "query": "SELECT Date_Claim_Made ,  Date_Claim_Settled FROM Claims WHERE Amount_Claimed  >  ( SELECT avg(Amount_Claimed) FROM Claims )"}
{"question": "Give me the claim date, settlement date for all the claims whose claimed amount is larger than the average.", "query": "SELECT Date_Claim_Made ,  Date_Claim_Settled FROM Claims WHERE Amount_Claimed  >  ( SELECT avg(Amount_Claimed) FROM Claims )"}
{"question": "Among all the claims, which settlements have a claimed amount that is no more than the average? List the claim start date.", "query": "SELECT Date_Claim_Made FROM Claims WHERE Amount_Settled  <=  ( SELECT avg(Amount_Settled) FROM Claims )"}
{"question": "Return the claim start date for the claims whose claimed amount is no more than the average", "query": "SELECT Date_Claim_Made FROM Claims WHERE Amount_Settled  <=  ( SELECT avg(Amount_Settled) FROM Claims )"}
{"question": "How many settlements does each claim correspond to? List the claim id and the number of settlements.", "query": "SELECT T1.Claim_id ,  count(*) FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id  =  T2.claim_id GROUP BY T1.claim_id"}
{"question": "Find the number of settlements each claim corresponds to. Show the number together with the claim id.", "query": "SELECT T1.Claim_id ,  count(*) FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id  =  T2.claim_id GROUP BY T1.claim_id"}
{"question": "Which claim incurred the most number of settlements? List the claim id, the date the claim was made, and the number.", "query": "SELECT T1.claim_id ,  T1.date_claim_made ,  count(*) FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id  =  T2.claim_id GROUP BY T1.claim_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "Find the claim id and claim date of the claim that incurred the most settlement count. Also tell me the count.", "query": "SELECT T1.claim_id ,  T1.date_claim_made ,  count(*) FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id  =  T2.claim_id GROUP BY T1.claim_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "How many settlements were made on the claim with the most recent claim settlement date? List the number and the claim id.", "query": "SELECT count(*) ,  T1.claim_id FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id  =  T2.claim_id GROUP BY T1.claim_id ORDER BY T1.Date_Claim_Settled DESC LIMIT 1"}
{"question": "Find the claim id and the number of settlements made for the claim with the most recent settlement date.", "query": "SELECT count(*) ,  T1.claim_id FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id  =  T2.claim_id GROUP BY T1.claim_id ORDER BY T1.Date_Claim_Settled DESC LIMIT 1"}
{"question": "Of all the claims, what was the earliest date when any claim was made?", "query": "SELECT Date_Claim_Made FROM Claims ORDER BY Date_Claim_Made ASC LIMIT 1"}
{"question": "Tell me the the date when the first claim was made.", "query": "SELECT Date_Claim_Made FROM Claims ORDER BY Date_Claim_Made ASC LIMIT 1"}
{"question": "What is the total amount of settlement made for all the settlements?", "query": "SELECT sum(Amount_Settled) FROM Settlements"}
{"question": "Compute the total amount of settlement across all the settlements.", "query": "SELECT sum(Amount_Settled) FROM Settlements"}
{"question": "Who are the customers that had more than 1 policy? List the customer details and id.", "query": "SELECT T1.customer_details ,  T1.customer_id FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id  =  T2.Customer_id GROUP BY T1.customer_id HAVING count(*)  >  1"}
{"question": "Find the the customer details and id for the customers who had more than one policy.", "query": "SELECT T1.customer_details ,  T1.customer_id FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id  =  T2.Customer_id GROUP BY T1.customer_id HAVING count(*)  >  1"}
{"question": "What are the claim dates and settlement dates of all the settlements?", "query": "SELECT Date_Claim_Made ,  Date_Claim_Settled FROM Settlements"}
{"question": "Tell me the the claim date and settlement date for each settlement case.", "query": "SELECT Date_Claim_Made ,  Date_Claim_Settled FROM Settlements"}
{"question": "What is the most popular payment method?", "query": "SELECT Payment_Method_Code FROM Payments GROUP BY Payment_Method_Code ORDER BY count(*) DESC LIMIT 1"}
{"question": "Which payment method is used the most often?", "query": "SELECT Payment_Method_Code FROM Payments GROUP BY Payment_Method_Code ORDER BY count(*) DESC LIMIT 1"}
{"question": "With which kind of payment method were the least number of payments processed?", "query": "SELECT Payment_Method_Code FROM Payments GROUP BY Payment_Method_Code ORDER BY count(*) ASC LIMIT 1"}
{"question": "What is the payment method that were used the least often?", "query": "SELECT Payment_Method_Code FROM Payments GROUP BY Payment_Method_Code ORDER BY count(*) ASC LIMIT 1"}
{"question": "What is the total amount of payment?", "query": "SELECT sum(Amount_Payment) FROM Payments"}
{"question": "Compute the total amount of payment processed.", "query": "SELECT sum(Amount_Payment) FROM Payments"}
{"question": "What are all the distinct details of the customers?", "query": "SELECT DISTINCT customer_details FROM Customers"}
{"question": "Return the distinct customer details.", "query": "SELECT DISTINCT customer_details FROM Customers"}
{"question": "Which kind of policy type was chosen by the most customers?", "query": "SELECT Policy_Type_Code FROM Customer_Policies GROUP BY Policy_Type_Code ORDER BY count(*) DESC LIMIT 1"}
{"question": "Find the policy type the most customers choose.", "query": "SELECT Policy_Type_Code FROM Customer_Policies GROUP BY Policy_Type_Code ORDER BY count(*) DESC LIMIT 1"}
{"question": "How many settlements are there in total?", "query": "SELECT count(*) FROM Settlements"}
{"question": "Count the total number of settlements made.", "query": "SELECT count(*) FROM Settlements"}
{"question": "Which Payments were processed with Visa? List the payment Id, the date and the amount.", "query": "SELECT Payment_ID ,  Date_Payment_Made ,  Amount_Payment FROM Payments WHERE Payment_Method_Code  =  'Visa'"}
{"question": "Give me the payment Id, the date and the amount for all the payments processed with Visa.", "query": "SELECT Payment_ID ,  Date_Payment_Made ,  Amount_Payment FROM Payments WHERE Payment_Method_Code  =  'Visa'"}
{"question": "List the details of the customers who do not have any policies.", "query": "SELECT customer_details FROM Customers EXCEPT SELECT T1.customer_details FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.customer_id  =  T2.customer_id"}
{"question": "Which customers do not have any policies? Find the details of these customers.", "query": "SELECT customer_details FROM Customers EXCEPT SELECT T1.customer_details FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.customer_id  =  T2.customer_id"}
{"question": "List the date the claim was made, the date it was settled and the amount settled for all the claims which had exactly one settlement.", "query": "SELECT T1.claim_id ,  T1.date_claim_made ,  T1.Date_Claim_Settled FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_id  =  T2.Claim_id GROUP BY T1.claim_id HAVING count(*)  =  1"}
{"question": "Which claims had exactly one settlement? For each, tell me the the date the claim was made, the date it was settled and the amount settled.", "query": "SELECT T1.claim_id ,  T1.date_claim_made ,  T1.Date_Claim_Settled FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_id  =  T2.Claim_id GROUP BY T1.claim_id HAVING count(*)  =  1"}
{"question": "Find the total claimed amount of all the claims.", "query": "SELECT sum(Amount_Claimed) FROM Claims"}
{"question": "What is total amount claimed summed across all the claims?", "query": "SELECT sum(Amount_Claimed) FROM Claims"}
{"question": "Which department has the largest number of employees?", "query": "SELECT name FROM department GROUP BY departmentID ORDER BY count(departmentID) DESC LIMIT 1;"}
{"question": "Find the department with the most employees.", "query": "SELECT name FROM department GROUP BY departmentID ORDER BY count(departmentID) DESC LIMIT 1;"}
{"question": "What is the employee id of the head whose department has the least number of employees?", "query": "SELECT head FROM department GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;"}
{"question": "Tell me the employee id of the head of the department with the least employees.", "query": "SELECT head FROM department GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;"}
{"question": "what is the name and position of the head whose department has least number of employees?", "query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;"}
{"question": "Find the name and position of the head of the department with the least employees.", "query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;"}
{"question": "What are names of patients who made an appointment?", "query": "SELECT name FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn"}
{"question": "List the names of patients who have made appointments.", "query": "SELECT name FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn"}
{"question": "what are name and phone number of patients who had more than one appointment?", "query": "SELECT name ,  phone FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn GROUP BY T1.patient HAVING count(*)  >  1"}
{"question": "Which patients made more than one appointment? Tell me the name and phone number of these patients.", "query": "SELECT name ,  phone FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn GROUP BY T1.patient HAVING count(*)  >  1"}
{"question": "Find the id of the appointment with the most recent start date?", "query": "SELECT appointmentid FROM appointment ORDER BY START DESC LIMIT 1"}
{"question": "What is the id of the appointment that started most recently?", "query": "SELECT appointmentid FROM appointment ORDER BY START DESC LIMIT 1"}
{"question": "List the name of physicians who took some appointment.", "query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID"}
{"question": "What are the names of all the physicians who took appointments.", "query": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID"}
{"question": "List the name of physicians who never took any appointment.", "query": "SELECT name FROM physician EXCEPT SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID"}
{"question": "Which physicians have never taken any appointment? Find their names.", "query": "SELECT name FROM physician EXCEPT SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID"}
{"question": "Find the names of all physicians and their primary affiliated departments' names.", "query": "SELECT T1.name ,  T3.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID  =  T2.physician JOIN department AS T3 ON T2.department  =  T3.DepartmentID WHERE T2.PrimaryAffiliation  =  1"}
{"question": "What are the name and primarily affiliated department name of each physician?", "query": "SELECT T1.name ,  T3.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID  =  T2.physician JOIN department AS T3 ON T2.department  =  T3.DepartmentID WHERE T2.PrimaryAffiliation  =  1"}
{"question": "What is the name of the patient who made the most recent appointment?", "query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1"}
{"question": "Find the name of the patient who made the appointment with the most recent start date.", "query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1"}
{"question": "How many patients stay in room 112?", "query": "SELECT count(patient) FROM stay WHERE room  =  112"}
{"question": "Count the number of patients who stayed in room 112.", "query": "SELECT count(patient) FROM stay WHERE room  =  112"}
{"question": "How many patients' prescriptions are made by physician John Dorian?", "query": "SELECT count(T1.SSN) FROM patient AS T1 JOIN prescribes AS T2 ON T1.SSN  =  T2.patient JOIN physician AS T3 ON T2.physician  =  T3.employeeid WHERE T3.name = \"John Dorian\""}
{"question": "Find the number of patients' prescriptions physician John Dorian made.", "query": "SELECT count(T1.SSN) FROM patient AS T1 JOIN prescribes AS T2 ON T1.SSN  =  T2.patient JOIN physician AS T3 ON T2.physician  =  T3.employeeid WHERE T3.name = \"John Dorian\""}
{"question": "Find the name of medication used on the patient who stays in room 111?", "query": "SELECT T4.name FROM stay AS T1 JOIN patient AS T2 ON T1.Patient  =  T2.SSN JOIN Prescribes AS T3 ON T3.Patient  =  T2.SSN JOIN Medication AS T4 ON T3.Medication  =  T4.Code WHERE room  =  111"}
{"question": "What is the name of the medication used for the patient staying in room 111?", "query": "SELECT T4.name FROM stay AS T1 JOIN patient AS T2 ON T1.Patient  =  T2.SSN JOIN Prescribes AS T3 ON T3.Patient  =  T2.SSN JOIN Medication AS T4 ON T3.Medication  =  T4.Code WHERE room  =  111"}
{"question": "Find the patient who most recently stayed in room 111.", "query": "SELECT patient FROM stay WHERE room  =  111 ORDER BY staystart DESC LIMIT 1"}
{"question": "What is the id of the patient who stayed in room 111 most recently?", "query": "SELECT patient FROM stay WHERE room  =  111 ORDER BY staystart DESC LIMIT 1"}
{"question": "What is the name of the nurse has the most appointments?", "query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1"}
{"question": "Find the name of the nurse who has the largest number of appointments.", "query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1"}
{"question": "How many patients do each physician take care of? List their names and number of patients they take care of.", "query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid"}
{"question": "Return the name of each physician and the number of patients he or she treats.", "query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid"}
{"question": "Find the name of physicians who are in charge of more than one patient.", "query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1"}
{"question": "Which physicians are in charge of more than one patient? Give me their names.", "query": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1"}
{"question": "Find the number of rooms located on each block floor.", "query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor"}
{"question": "How many rooms does each block floor have?", "query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor"}
{"question": "Find the number of rooms for different block code?", "query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode"}
{"question": "How many rooms are located for each block code?", "query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode"}
{"question": "What are the unique block codes that have available rooms?", "query": "SELECT DISTINCT blockcode FROM room WHERE unavailable  =  0"}
{"question": "Tell me the distinct block codes where some rooms are available.", "query": "SELECT DISTINCT blockcode FROM room WHERE unavailable  =  0"}
{"question": "How many different types of rooms are there?", "query": "SELECT count(DISTINCT roomtype) FROM room"}
{"question": "Find the number of distinct room types available.", "query": "SELECT count(DISTINCT roomtype) FROM room"}
{"question": "What is the names of the physicians who prescribe medication Thesisin?", "query": "SELECT DISTINCT T1.name FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid = T2.physician JOIN medication AS T3 ON T3.code = T2.medication WHERE T3.name  =  \"Thesisin\""}
{"question": "List the names of all the physicians who prescribe Thesisin as medication.", "query": "SELECT DISTINCT T1.name FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid = T2.physician JOIN medication AS T3 ON T3.code = T2.medication WHERE T3.name  =  \"Thesisin\""}
{"question": "Find the name and position of physicians who prescribe some medication whose brand is X?", "query": "SELECT DISTINCT T1.name ,  T1.position FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid = T2.physician JOIN medication AS T3 ON T3.code = T2.medication WHERE T3.Brand  =  \"X\""}
{"question": "Which physicians prescribe a medication of brand X? Tell me the name and position of those physicians.", "query": "SELECT DISTINCT T1.name ,  T1.position FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid = T2.physician JOIN medication AS T3 ON T3.code = T2.medication WHERE T3.Brand  =  \"X\""}
{"question": "Find the number of medications prescribed for each brand.", "query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand"}
{"question": "How many medications are prescribed for each brand?", "query": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand"}
{"question": "Find the name of physicians whose position title contains the word 'senior'.", "query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'"}
{"question": "What are the names of the physicians who have 'senior' in their titles.", "query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'"}
{"question": "Find the patient who has the most recent undergoing treatment?", "query": "SELECT patient FROM undergoes ORDER BY dateundergoes LIMIT 1"}
{"question": "Which patient is undergoing the most recent treatment?", "query": "SELECT patient FROM undergoes ORDER BY dateundergoes LIMIT 1"}
{"question": "Find the names of all patients who have an undergoing treatment and are staying in room 111.", "query": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay  =  T3.StayID WHERE T3.room  =  111"}
{"question": "What are the names of patients who are staying in room 111 and have an undergoing treatment?", "query": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay  =  T3.StayID WHERE T3.room  =  111"}
{"question": "List the names of all distinct nurses ordered by alphabetical order?", "query": "SELECT DISTINCT name FROM nurse ORDER BY name"}
{"question": "What is the alphabetically ordered list of all the distinct names of nurses?", "query": "SELECT DISTINCT name FROM nurse ORDER BY name"}
{"question": "Find the names of nurses who are nursing an undergoing treatment.", "query": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN nurse AS T2 ON T1.AssistingNurse  =  T2.EmployeeID"}
{"question": "Which nurses are in charge of patients undergoing treatments?", "query": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN nurse AS T2 ON T1.AssistingNurse  =  T2.EmployeeID"}
{"question": "List the names of all distinct medications, ordered in an alphabetical order.", "query": "SELECT DISTINCT name FROM medication ORDER BY name"}
{"question": "What is the alphabetically ordered list of all distinct medications?", "query": "SELECT DISTINCT name FROM medication ORDER BY name"}
{"question": "What are the names of the physician who prescribed the highest dose?", "query": "SELECT T1.name FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid = T2.physician ORDER BY T2.dose DESC LIMIT 1"}
{"question": "Find the physician who prescribed the highest dose. What is his or her name?", "query": "SELECT T1.name FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid = T2.physician ORDER BY T2.dose DESC LIMIT 1"}
{"question": "List the physicians' employee ids together with their primary affiliation departments' ids.", "query": "SELECT physician ,  department FROM affiliated_with WHERE primaryaffiliation  =  1"}
{"question": "What are each physician's employee id and department id primarily affiliated.", "query": "SELECT physician ,  department FROM affiliated_with WHERE primaryaffiliation  =  1"}
{"question": "List the names of departments where some physicians are primarily affiliated with.", "query": "SELECT DISTINCT T2.name FROM affiliated_with AS T1 JOIN department AS T2 ON T1.department = T2.departmentid WHERE PrimaryAffiliation  =  1"}
{"question": "What are the names of departments that have primarily affiliated physicians.", "query": "SELECT DISTINCT T2.name FROM affiliated_with AS T1 JOIN department AS T2 ON T1.department = T2.departmentid WHERE PrimaryAffiliation  =  1"}
{"question": "What nurses are on call with block floor 1 and block code 1? Tell me their names.", "query": "SELECT nurse FROM on_call WHERE blockfloor  =  1 AND blockcode  =  1"}
{"question": "Find the ids of the nurses who are on call in block floor 1 and block code 1.", "query": "SELECT nurse FROM on_call WHERE blockfloor  =  1 AND blockcode  =  1"}
{"question": "What are the highest cost, lowest cost and average cost of procedures?", "query": "SELECT MAX(cost) ,  MIN(cost) ,  AVG(cost) FROM procedures"}
{"question": "Tell me the highest, lowest, and average cost of procedures.", "query": "SELECT MAX(cost) ,  MIN(cost) ,  AVG(cost) FROM procedures"}
{"question": "List the name and cost of all procedures sorted by the cost from the highest to the lowest.", "query": "SELECT name ,  cost FROM procedures ORDER BY cost DESC"}
{"question": "Sort the list of names and costs of all procedures in the descending order of cost.", "query": "SELECT name ,  cost FROM procedures ORDER BY cost DESC"}
{"question": "Find the three most expensive procedures.", "query": "SELECT name FROM procedures ORDER BY cost LIMIT 3"}
{"question": "What are the three most costly procedures?", "query": "SELECT name FROM procedures ORDER BY cost LIMIT 3"}
{"question": "Find the physicians who are trained in a procedure that costs more than 5000.", "query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T3.cost  >  5000"}
{"question": "Which physicians are trained in procedures that are more expensive than 5000?", "query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T3.cost  >  5000"}
{"question": "Find the physician who was trained in the most expensive procedure?", "query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1"}
{"question": "Which physician was trained in the procedure that costs the most.", "query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1"}
{"question": "What is the average cost of procedures that physician John Wen was trained in?", "query": "SELECT avg(T3.cost) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\""}
{"question": "Compute the mean price of procedures physician John Wen was trained in.", "query": "SELECT avg(T3.cost) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\""}
{"question": "Find the names of procedures which physician John Wen was trained in.", "query": "SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\""}
{"question": "What are the names of procedures physician John Wen was trained in?", "query": "SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\""}
{"question": "Find all procedures which cost more than 1000 or which physician John Wen was trained in.", "query": "SELECT name FROM procedures WHERE cost  >  1000 UNION SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\""}
{"question": "What are the procedures that cost more than 1000 or are specialized in by physician John Wen?", "query": "SELECT name FROM procedures WHERE cost  >  1000 UNION SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\""}
{"question": "Find the names of all procedures which cost more than 1000 but which physician John Wen was not trained in?", "query": "SELECT name FROM procedures WHERE cost  >  1000 EXCEPT SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\""}
{"question": "Among the procedures that cost more than 1000, which were not specialized in by physician John Wen?", "query": "SELECT name FROM procedures WHERE cost  >  1000 EXCEPT SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\""}
{"question": "Find the names of all procedures such that the cost is less than 5000 and physician John Wen was trained in.", "query": "SELECT name FROM procedures WHERE cost  <  5000 INTERSECT SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\""}
{"question": "What procedures cost less than 5000 and have John Wen as a trained physician?", "query": "SELECT name FROM procedures WHERE cost  <  5000 INTERSECT SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\""}
{"question": "Find the name of physicians who are affiliated with both Surgery and Psychiatry departments.", "query": "SELECT T1.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID  =  T2.physician JOIN department AS T3 ON T2.department  =  T3.DepartmentID WHERE T3.name  =  'Surgery' INTERSECT SELECT T1.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID  =  T2.physician JOIN department AS T3 ON T2.department  =  T3.DepartmentID WHERE T3.name  =  'Psychiatry'"}
{"question": "Which physicians are affiliated with both Surgery and Psychiatry departments? Tell me their names.", "query": "SELECT T1.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID  =  T2.physician JOIN department AS T3 ON T2.department  =  T3.DepartmentID WHERE T3.name  =  'Surgery' INTERSECT SELECT T1.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID  =  T2.physician JOIN department AS T3 ON T2.department  =  T3.DepartmentID WHERE T3.name  =  'Psychiatry'"}
{"question": "Find the name of physicians who are affiliated with Surgery or Psychiatry department.", "query": "SELECT T1.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID  =  T2.physician JOIN department AS T3 ON T2.department  =  T3.DepartmentID WHERE T3.name  =  'Surgery' OR T3.name  =  'Psychiatry'"}
{"question": "Which physicians are affiliated with either Surgery or Psychiatry department? Give me their names.", "query": "SELECT T1.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID  =  T2.physician JOIN department AS T3 ON T2.department  =  T3.DepartmentID WHERE T3.name  =  'Surgery' OR T3.name  =  'Psychiatry'"}
{"question": "Find the names of patients who are not using the medication of Procrastin-X.", "query": "SELECT name FROM patient EXCEPT SELECT T1.name FROM patient AS T1 JOIN Prescribes AS T2 ON T2.Patient  =  T1.SSN JOIN Medication AS T3 ON T2.Medication  =  T3.Code WHERE T3.name  =  'Procrastin-X'"}
{"question": "What are the names of patients who are not taking the medication of Procrastin-X.", "query": "SELECT name FROM patient EXCEPT SELECT T1.name FROM patient AS T1 JOIN Prescribes AS T2 ON T2.Patient  =  T1.SSN JOIN Medication AS T3 ON T2.Medication  =  T3.Code WHERE T3.name  =  'Procrastin-X'"}
{"question": "Find the number of patients who are not using the medication of Procrastin-X.", "query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )"}
{"question": "How many patients are not using Procrastin-X as medication?", "query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )"}
{"question": "How many appointments are there?", "query": "SELECT count(*) FROM appointment"}
{"question": "Count how many appointments have been made in total.", "query": "SELECT count(*) FROM appointment"}
{"question": "Find the names of nurses who are on call.", "query": "SELECT DISTINCT T1.name FROM nurse AS T1 JOIN on_call AS T2 ON T1.EmployeeID  =  T2.nurse"}
{"question": "What are the distinct names of nurses on call?", "query": "SELECT DISTINCT T1.name FROM nurse AS T1 JOIN on_call AS T2 ON T1.EmployeeID  =  T2.nurse"}
{"question": "How many ships are there?", "query": "SELECT count(*) FROM ship"}
{"question": "What is the number of ships?", "query": "SELECT count(*) FROM ship"}
{"question": "List the name of ships in ascending order of tonnage.", "query": "SELECT Name FROM ship ORDER BY Tonnage ASC"}
{"question": "what are the names of the ships ordered by ascending tonnage?", "query": "SELECT Name FROM ship ORDER BY Tonnage ASC"}
{"question": "What are the type and nationality of ships?", "query": "SELECT TYPE ,  Nationality FROM ship"}
{"question": "What are the types and nationalities of every ship?", "query": "SELECT TYPE ,  Nationality FROM ship"}
{"question": "List the name of ships whose nationality is not \"United States\".", "query": "SELECT Name FROM ship WHERE Nationality != \"United States\""}
{"question": "What are the names of the ships that are not from the United States?", "query": "SELECT Name FROM ship WHERE Nationality != \"United States\""}
{"question": "Show the name of ships whose nationality is either United States or United Kingdom.", "query": "SELECT Name FROM ship WHERE Nationality  =  \"United States\" OR Nationality  =  \"United Kingdom\""}
{"question": "What are the names of the ships  that are from either the US or the UK?", "query": "SELECT Name FROM ship WHERE Nationality  =  \"United States\" OR Nationality  =  \"United Kingdom\""}
{"question": "What is the name of the ship with the largest tonnage?", "query": "SELECT Name FROM ship ORDER BY Tonnage DESC LIMIT 1"}
{"question": "What is the ship with the largest amount of tonnage called?", "query": "SELECT Name FROM ship ORDER BY Tonnage DESC LIMIT 1"}
{"question": "Show different types of ships and the number of ships of each type.", "query": "SELECT TYPE ,  COUNT(*) FROM ship GROUP BY TYPE"}
{"question": "For each type, how many ships are there?", "query": "SELECT TYPE ,  COUNT(*) FROM ship GROUP BY TYPE"}
{"question": "Please show the most common type of ships.", "query": "SELECT TYPE FROM ship GROUP BY TYPE ORDER BY COUNT(*) DESC LIMIT 1"}
{"question": "What is the most common type of ships?", "query": "SELECT TYPE FROM ship GROUP BY TYPE ORDER BY COUNT(*) DESC LIMIT 1"}
{"question": "List the nations that have more than two ships.", "query": "SELECT Nationality FROM ship GROUP BY Nationality HAVING COUNT(*)  >  2"}
{"question": "What are the nations that have more than two ships?", "query": "SELECT Nationality FROM ship GROUP BY Nationality HAVING COUNT(*)  >  2"}
{"question": "Show different types of ships and the average tonnage of ships of each type.", "query": "SELECT TYPE ,  avg(Tonnage) FROM ship GROUP BY TYPE"}
{"question": "For each type, what is the average tonnage?", "query": "SELECT TYPE ,  avg(Tonnage) FROM ship GROUP BY TYPE"}
{"question": "Show codes and fates of missions, and names of ships involved.", "query": "SELECT T1.Code ,  T1.Fate ,  T2.Name FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID  =  T2.Ship_ID"}
{"question": "What are the mission codes, fates, and names of the ships involved?", "query": "SELECT T1.Code ,  T1.Fate ,  T2.Name FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID  =  T2.Ship_ID"}
{"question": "Show names of ships involved in a mission launched after 1928.", "query": "SELECT T2.Name FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID  =  T2.Ship_ID WHERE T1.Launched_Year  >  1928"}
{"question": "What are the names of ships that were involved in a mission launched after 1928?", "query": "SELECT T2.Name FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID  =  T2.Ship_ID WHERE T1.Launched_Year  >  1928"}
{"question": "Show the distinct fate of missions that involve ships with nationality \"United States\"", "query": "SELECT DISTINCT T1.Fate FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID  =  T2.Ship_ID WHERE T2.Nationality  =  \"United States\""}
{"question": "What are the different fates of the mission that involved ships from the United States?", "query": "SELECT DISTINCT T1.Fate FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID  =  T2.Ship_ID WHERE T2.Nationality  =  \"United States\""}
{"question": "List the name of ships that are not involved in any mission", "query": "SELECT Name FROM ship WHERE Ship_ID NOT IN (SELECT Ship_ID FROM mission)"}
{"question": "What are the names of the ships that are not involved in any missions?", "query": "SELECT Name FROM ship WHERE Ship_ID NOT IN (SELECT Ship_ID FROM mission)"}
{"question": "Show the types of ships that have both ships with tonnage larger than 6000 and ships with tonnage smaller than 4000.", "query": "SELECT TYPE FROM ship WHERE Tonnage  >  6000 INTERSECT SELECT TYPE FROM ship WHERE Tonnage  <  4000"}
{"question": "What are the types of the ships that have both shiips with tonnage more than 6000 and those with tonnage less than 4000?", "query": "SELECT TYPE FROM ship WHERE Tonnage  >  6000 INTERSECT SELECT TYPE FROM ship WHERE Tonnage  <  4000"}
{"question": "Find the number of students in total.", "query": "SELECT count(*) FROM list"}
{"question": "Find the last names of students studying in room 111.", "query": "SELECT lastname FROM list WHERE classroom  =  111"}
{"question": "What are the last names of students in room 111?", "query": "SELECT lastname FROM list WHERE classroom  =  111"}
{"question": "Find the first names of students studying in room 108.", "query": "SELECT firstname FROM list WHERE classroom  =  108"}
{"question": "What are the first names of students in room 108?", "query": "SELECT firstname FROM list WHERE classroom  =  108"}
{"question": "What are the first names of students studying in room 107?", "query": "SELECT DISTINCT firstname FROM list WHERE classroom  =  107"}
{"question": "List the first names of all the students in room 107.", "query": "SELECT DISTINCT firstname FROM list WHERE classroom  =  107"}
{"question": "For each classroom report the grade that is taught in it. Report just the classroom number and the grade number.", "query": "SELECT DISTINCT classroom ,  grade FROM list"}
{"question": "What are the grade number and classroom number of each class in the list?", "query": "SELECT DISTINCT classroom ,  grade FROM list"}
{"question": "Which grade is studying in classroom 103?", "query": "SELECT DISTINCT grade FROM list WHERE classroom  =  103"}
{"question": "Find the grade taught in classroom 103.", "query": "SELECT DISTINCT grade FROM list WHERE classroom  =  103"}
{"question": "Find the grade studying in room 105.", "query": "SELECT DISTINCT grade FROM list WHERE classroom  =  105"}
{"question": "Which grade is studying in room 105?", "query": "SELECT DISTINCT grade FROM list WHERE classroom  =  105"}
{"question": "Which classrooms are used by grade 4?", "query": "SELECT DISTINCT classroom FROM list WHERE grade  =  4"}
{"question": "Find the classrooms in which grade 4 is studying.", "query": "SELECT DISTINCT classroom FROM list WHERE grade  =  4"}
{"question": "Which classrooms are used by grade 5?", "query": "SELECT DISTINCT classroom FROM list WHERE grade  =  5"}
{"question": "Show me the classrooms grade 5 is using.", "query": "SELECT DISTINCT classroom FROM list WHERE grade  =  5"}
{"question": "Find the last names of the teachers that teach fifth grade.", "query": "SELECT DISTINCT T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE grade  =  5"}
{"question": "what are the last names of the teachers who teach grade 5?", "query": "SELECT DISTINCT T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE grade  =  5"}
{"question": "Find the first names of the teachers that teach first grade.", "query": "SELECT DISTINCT T2.firstname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE grade  =  1"}
{"question": "What are the first names of the teachers who teach grade 1?", "query": "SELECT DISTINCT T2.firstname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE grade  =  1"}
{"question": "Find the first names of all the teachers that teach in classroom 110.", "query": "SELECT firstname FROM teachers WHERE classroom  =  110"}
{"question": "Which teachers teach in classroom 110? Give me their first names.", "query": "SELECT firstname FROM teachers WHERE classroom  =  110"}
{"question": "Find the last names of teachers teaching in classroom 109.", "query": "SELECT lastname FROM teachers WHERE classroom  =  109"}
{"question": "Which teachers teach in classroom 109? Give me their last names.", "query": "SELECT lastname FROM teachers WHERE classroom  =  109"}
{"question": "Report the first name and last name of all the teachers.", "query": "SELECT DISTINCT firstname ,  lastname FROM teachers"}
{"question": "What are the first name and last name of all the teachers?", "query": "SELECT DISTINCT firstname ,  lastname FROM teachers"}
{"question": "Report the first name and last name of all the students.", "query": "SELECT DISTINCT firstname ,  lastname FROM list"}
{"question": "Show each student's first name and last name.", "query": "SELECT DISTINCT firstname ,  lastname FROM list"}
{"question": "Find all students taught by OTHA MOYER. Output the first and last names of the students.", "query": "SELECT T1.firstname ,  T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  \"OTHA\" AND T2.lastname  =  \"MOYER\""}
{"question": "Which students study under the teacher named OTHA MOYER? Give me the first and last names of the students.", "query": "SELECT T1.firstname ,  T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  \"OTHA\" AND T2.lastname  =  \"MOYER\""}
{"question": "Find all students taught by MARROTTE KIRK. Output first and last names of students.", "query": "SELECT T1.firstname ,  T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  \"MARROTTE\" AND T2.lastname  =  \"KIRK\""}
{"question": "Which are the first and last names of the students taught by MARROTTE KIRK?", "query": "SELECT T1.firstname ,  T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  \"MARROTTE\" AND T2.lastname  =  \"KIRK\""}
{"question": "Find the first and last name of all the teachers that teach EVELINA BROMLEY.", "query": "SELECT T2.firstname ,  T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.firstname  =  \"EVELINA\" AND T1.lastname  =  \"BROMLEY\""}
{"question": "Which teachers teach the student named EVELINA BROMLEY? Give me the first and last name  of the teachers.", "query": "SELECT T2.firstname ,  T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.firstname  =  \"EVELINA\" AND T1.lastname  =  \"BROMLEY\""}
{"question": "Find the last names of all the teachers that teach GELL TAMI.", "query": "SELECT T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.firstname  =  \"GELL\" AND T1.lastname  =  \"TAMI\""}
{"question": "What are the last names of the teachers who teach the student called GELL TAMI?", "query": "SELECT T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.firstname  =  \"GELL\" AND T1.lastname  =  \"TAMI\""}
{"question": "How many students does LORIA ONDERSMA teaches?", "query": "SELECT count(*) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  \"LORIA\" AND T2.lastname  =  \"ONDERSMA\""}
{"question": "Count the number of students the teacher LORIA ONDERSMA teaches.", "query": "SELECT count(*) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  \"LORIA\" AND T2.lastname  =  \"ONDERSMA\""}
{"question": "How many students does KAWA GORDON teaches?", "query": "SELECT count(*) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  \"KAWA\" AND T2.lastname  =  \"GORDON\""}
{"question": "Find the number of students taught by the teacher KAWA GORDON.", "query": "SELECT count(*) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  \"KAWA\" AND T2.lastname  =  \"GORDON\""}
{"question": "Find the number of students taught by TARRING LEIA.", "query": "SELECT count(*) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  \"TARRING\" AND T2.lastname  =  \"LEIA\""}
{"question": "How many students are taught by teacher TARRING LEIA?", "query": "SELECT count(*) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  \"TARRING\" AND T2.lastname  =  \"LEIA\""}
{"question": "How many teachers does the student named CHRISSY NABOZNY have?", "query": "SELECT count(*) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.firstname  =  \"CHRISSY\" AND T1.lastname  =  \"NABOZNY\""}
{"question": "Find the number of teachers who teach the student called CHRISSY NABOZNY.", "query": "SELECT count(*) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.firstname  =  \"CHRISSY\" AND T1.lastname  =  \"NABOZNY\""}
{"question": "How many teachers does the student named MADLOCK RAY have?", "query": "SELECT count(*) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.firstname  =  \"MADLOCK\" AND T1.lastname  =  \"RAY\""}
{"question": "Find the number of teachers who teach the student called MADLOCK RAY.", "query": "SELECT count(*) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.firstname  =  \"MADLOCK\" AND T1.lastname  =  \"RAY\""}
{"question": "Find all first-grade students who are NOT taught by OTHA MOYER. Report their first and last names.", "query": "SELECT DISTINCT T1.firstname ,  T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.grade  =  1 EXCEPT SELECT T1.firstname ,  T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  \"OTHA\" AND T2.lastname  =  \"MOYER\""}
{"question": "What are the first and last names of the first-grade students who are NOT taught by teacher OTHA MOYER?", "query": "SELECT DISTINCT T1.firstname ,  T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.grade  =  1 EXCEPT SELECT T1.firstname ,  T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  \"OTHA\" AND T2.lastname  =  \"MOYER\""}
{"question": "Find the last names of the students in third grade that are not taught by COVIN JEROME.", "query": "SELECT DISTINCT T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.grade  =  3 AND T2.firstname != \"COVIN\" AND T2.lastname != \"JEROME\""}
{"question": "Which students in third grade are not taught by teacher COVIN JEROME? Give me the last names of the students.", "query": "SELECT DISTINCT T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.grade  =  3 AND T2.firstname != \"COVIN\" AND T2.lastname != \"JEROME\""}
{"question": "For each grade, report the grade, the number of classrooms in which it is taught and the total number of students in the grade.", "query": "SELECT grade ,  count(DISTINCT classroom) ,  count(*) FROM list GROUP BY grade"}
{"question": "For each grade, return the grade number, the number of classrooms used for the grade, and the total number of students enrolled in the grade.", "query": "SELECT grade ,  count(DISTINCT classroom) ,  count(*) FROM list GROUP BY grade"}
{"question": "For each classroom, report the classroom number and the number of grades using it.", "query": "SELECT classroom ,  count(DISTINCT grade) FROM list GROUP BY classroom"}
{"question": "For each classroom, show the classroom number and count the number of distinct grades that use the room.", "query": "SELECT classroom ,  count(DISTINCT grade) FROM list GROUP BY classroom"}
{"question": "Which classroom has the most students?", "query": "SELECT classroom FROM list GROUP BY classroom ORDER BY count(*) DESC LIMIT 1"}
{"question": "Find the classroom that the most students use.", "query": "SELECT classroom FROM list GROUP BY classroom ORDER BY count(*) DESC LIMIT 1"}
{"question": "Report the number of students in each classroom.", "query": "SELECT classroom ,  count(*) FROM list GROUP BY classroom"}
{"question": "For each classroom, show the classroom number and find how many students are using it.", "query": "SELECT classroom ,  count(*) FROM list GROUP BY classroom"}
{"question": "For each grade 0 classroom, report the total number of students.", "query": "SELECT classroom ,  count(*) FROM list WHERE grade  =  \"0\" GROUP BY classroom"}
{"question": "For each grade 0 classroom, return the classroom number and the count of students.", "query": "SELECT classroom ,  count(*) FROM list WHERE grade  =  \"0\" GROUP BY classroom"}
{"question": "Report the total number of students for each fourth-grade classroom.", "query": "SELECT classroom ,  count(*) FROM list WHERE grade  =  \"4\" GROUP BY classroom"}
{"question": "For each fourth-grade classroom, show the classroom number and the total number of students using it.", "query": "SELECT classroom ,  count(*) FROM list WHERE grade  =  \"4\" GROUP BY classroom"}
{"question": "Find the name of the teacher who teaches the largest number of students.", "query": "SELECT T2.firstname ,  T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom GROUP BY T2.firstname ,  T2.lastname ORDER BY count(*) DESC LIMIT 1"}
{"question": "Which teacher teaches the most students? Give me the first name and last name of the teacher.", "query": "SELECT T2.firstname ,  T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom GROUP BY T2.firstname ,  T2.lastname ORDER BY count(*) DESC LIMIT 1"}
{"question": "Find the number of students in one classroom.", "query": "SELECT count(*) ,  classroom FROM list GROUP BY classroom"}
{"question": "How many students does one classroom have?", "query": "SELECT count(*) ,  classroom FROM list GROUP BY classroom"}
{"question": "How many companies are headquartered in the US?", "query": "SELECT count(*) FROM company WHERE Headquarters  =  'USA'"}
{"question": "List the names of companies by ascending number of sales.", "query": "SELECT Name FROM company ORDER BY Sales_in_Billion ASC"}
{"question": "What are the headquarters and industries of all companies?", "query": "SELECT Headquarters ,  Industry FROM company"}
{"question": "Show the names of companies in the banking or retailing industry?", "query": "SELECT Name FROM company WHERE Industry  =  \"Banking\" OR Industry  =  \"Retailing\""}
{"question": "What is the maximum and minimum market value of companies?", "query": "SELECT max(Market_Value_in_Billion) ,  min(Market_Value_in_Billion) FROM company"}
{"question": "What is the headquarter of the company with the largest sales?", "query": "SELECT Headquarters FROM company ORDER BY Sales_in_Billion DESC LIMIT 1"}
{"question": "Show the different headquarters and number of companies at each headquarter.", "query": "SELECT Headquarters ,  COUNT(*) FROM company GROUP BY Headquarters"}
{"question": "Show the most common headquarter for companies.", "query": "SELECT Headquarters FROM company GROUP BY Headquarters ORDER BY COUNT(*) DESC LIMIT 1"}
{"question": "Show the headquarters that have at least two companies.", "query": "SELECT Headquarters FROM company GROUP BY Headquarters HAVING COUNT(*)  >=  2"}
{"question": "Show the headquarters that have both companies in banking industry and companies in oil and gas industry.", "query": "SELECT Headquarters FROM company WHERE Industry  =  \"Banking\" INTERSECT SELECT Headquarters FROM company WHERE Industry  =  \"Oil and gas\""}
{"question": "Show the names of companies and of employees.", "query": "SELECT T3.Name ,  T2.Name FROM employment AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID JOIN company AS T3 ON T1.Company_ID  =  T3.Company_ID"}
{"question": "Show names of companies and that of employees in descending order of number of years working for that employee.", "query": "SELECT T3.Name ,  T2.Name FROM employment AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID JOIN company AS T3 ON T1.Company_ID  =  T3.Company_ID ORDER BY T1.Year_working"}
{"question": "Show the names of employees that work for companies with sales bigger than 200.", "query": "SELECT T2.Name FROM employment AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID JOIN company AS T3 ON T1.Company_ID  =  T3.Company_ID WHERE T3.Sales_in_Billion  >  200"}
{"question": "Show the names of companies and the number of employees they have", "query": "SELECT T3.Name ,  COUNT(*) FROM employment AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID JOIN company AS T3 ON T1.Company_ID  =  T3.Company_ID GROUP BY T3.Name"}
{"question": "List the names of people that are not employed by any company", "query": "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM employment)"}
{"question": "list the names of the companies with more than 200 sales in the descending order of sales and profits.", "query": "SELECT name FROM company WHERE Sales_in_Billion  >  200 ORDER BY Sales_in_Billion ,  Profits_in_Billion DESC"}
{"question": "How many film are there?", "query": "SELECT count(*) FROM film"}
{"question": "Count the number of films.", "query": "SELECT count(*) FROM film"}
{"question": "List the distinct director of all films.", "query": "SELECT DISTINCT Director FROM film"}
{"question": "What are the different film Directors?", "query": "SELECT DISTINCT Director FROM film"}
{"question": "What is the average ticket sales gross in dollars of films?", "query": "SELECT avg(Gross_in_dollar) FROM film"}
{"question": "Return the average gross sales in dollars across all films.", "query": "SELECT avg(Gross_in_dollar) FROM film"}
{"question": "What are the low and high estimates of film markets?", "query": "SELECT Low_Estimate ,  High_Estimate FROM film_market_estimation"}
{"question": "Return the low and high estimates for all film markets.", "query": "SELECT Low_Estimate ,  High_Estimate FROM film_market_estimation"}
{"question": "What are the types of film market estimations in year 1995?", "query": "SELECT TYPE FROM film_market_estimation WHERE YEAR  =  1995"}
{"question": "Return the types of film market estimations in 1995.", "query": "SELECT TYPE FROM film_market_estimation WHERE YEAR  =  1995"}
{"question": "What are the maximum and minimum number of cities in all markets.", "query": "SELECT max(Number_cities) ,  min(Number_cities) FROM market"}
{"question": "Return the maximum and minimum number of cities across all markets.", "query": "SELECT max(Number_cities) ,  min(Number_cities) FROM market"}
{"question": "How many markets have number of cities smaller than 300?", "query": "SELECT count(*) FROM market WHERE Number_cities  <  300"}
{"question": "Count the number of markets that have a number of cities lower than 300.", "query": "SELECT count(*) FROM market WHERE Number_cities  <  300"}
{"question": "List all countries of markets in ascending alphabetical order.", "query": "SELECT Country FROM market ORDER BY Country ASC"}
{"question": "What are the countries for each market, ordered alphabetically?", "query": "SELECT Country FROM market ORDER BY Country ASC"}
{"question": "List all countries of markets in descending order of number of cities.", "query": "SELECT Country FROM market ORDER BY Number_cities DESC"}
{"question": "What are the countries for each market ordered by decreasing number of cities?", "query": "SELECT Country FROM market ORDER BY Number_cities DESC"}
{"question": "Please show the titles of films and the types of market estimations.", "query": "SELECT T1.Title ,  T2.Type FROM film AS T1 JOIN film_market_estimation AS T2 ON T1.Film_ID  =  T2.Film_ID"}
{"question": "What are the titles of films and corresponding types of market estimations?", "query": "SELECT T1.Title ,  T2.Type FROM film AS T1 JOIN film_market_estimation AS T2 ON T1.Film_ID  =  T2.Film_ID"}
{"question": "Show the distinct director of films with market estimation in the year of 1995.", "query": "SELECT DISTINCT T1.Director FROM film AS T1 JOIN film_market_estimation AS T2 ON T1.Film_ID  =  T2.Film_ID WHERE T2.Year  =  1995"}
{"question": "Who are the different directors of films which had market estimation in 1995?", "query": "SELECT DISTINCT T1.Director FROM film AS T1 JOIN film_market_estimation AS T2 ON T1.Film_ID  =  T2.Film_ID WHERE T2.Year  =  1995"}
{"question": "What is the average number of cities of markets with low film market estimate bigger than 10000?", "query": "SELECT avg(T2.Number_cities) FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.Market_ID  =  T2.Market_ID WHERE T1.Low_Estimate  >  10000"}
{"question": "Give the average number of cities within markets that had a low market estimation larger than 10000?", "query": "SELECT avg(T2.Number_cities) FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.Market_ID  =  T2.Market_ID WHERE T1.Low_Estimate  >  10000"}
{"question": "Please list the countries and years of film market estimations.", "query": "SELECT T2.Country ,  T1.Year FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.Market_ID  =  T2.Market_ID"}
{"question": "What are the countries of markets and their corresponding years of market estimation?", "query": "SELECT T2.Country ,  T1.Year FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.Market_ID  =  T2.Market_ID"}
{"question": "Please list the years of film market estimations when the market is in country \"Japan\" in descending order.", "query": "SELECT T1.Year FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.Market_ID  =  T2.Market_ID WHERE T2.Country  =  \"Japan\" ORDER BY T1.Year DESC"}
{"question": "What are the years of film market estimation for the market of Japan, ordered by year descending?", "query": "SELECT T1.Year FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.Market_ID  =  T2.Market_ID WHERE T2.Country  =  \"Japan\" ORDER BY T1.Year DESC"}
{"question": "List the studios of each film and the number of films produced by that studio.", "query": "SELECT Studio ,  COUNT(*) FROM film GROUP BY Studio"}
{"question": "How films are produced by each studio?", "query": "SELECT Studio ,  COUNT(*) FROM film GROUP BY Studio"}
{"question": "List the name of film studio that have the most number of films.", "query": "SELECT Studio FROM film GROUP BY Studio ORDER BY COUNT(*) DESC LIMIT 1"}
{"question": "What is the name of teh studio that created the most films?", "query": "SELECT Studio FROM film GROUP BY Studio ORDER BY COUNT(*) DESC LIMIT 1"}
{"question": "List the names of studios that have at least two films.", "query": "SELECT Studio FROM film GROUP BY Studio HAVING COUNT(*)  >=  2"}
{"question": "What are the names of studios that have made two or more films?", "query": "SELECT Studio FROM film GROUP BY Studio HAVING COUNT(*)  >=  2"}
{"question": "List the title of films that do not have any market estimation.", "query": "SELECT Title FROM film WHERE Film_ID NOT IN (SELECT Film_ID FROM film_market_estimation)"}
{"question": "What are the titles of films that do not have a film market estimation?", "query": "SELECT Title FROM film WHERE Film_ID NOT IN (SELECT Film_ID FROM film_market_estimation)"}
{"question": "Show the studios that have produced films with director \"Nicholas Meyer\" and \"Walter Hill\".", "query": "SELECT Studio FROM film WHERE Director  =  \"Nicholas Meyer\" INTERSECT SELECT Studio FROM film WHERE Director  =  \"Walter Hill\""}
{"question": "What are the names of studios that have produced films with both Nicholas Meyer and Walter Hill?", "query": "SELECT Studio FROM film WHERE Director  =  \"Nicholas Meyer\" INTERSECT SELECT Studio FROM film WHERE Director  =  \"Walter Hill\""}
{"question": "Find the titles and studios of the films that are produced by some film studios that contained the word \"Universal\".", "query": "SELECT title ,  Studio FROM film WHERE Studio LIKE \"%Universal%\""}
{"question": "What are the titles and studios of films that have been produced by a studio whose name contains \"Universal\"?", "query": "SELECT title ,  Studio FROM film WHERE Studio LIKE \"%Universal%\""}
{"question": "Show the studios that have not produced films with director \"Walter Hill\".", "query": "SELECT Studio FROM film EXCEPT SELECT Studio FROM film WHERE Director  =  \"Walter Hill\""}
{"question": "Which studios have never worked with the director Walter Hill?", "query": "SELECT Studio FROM film EXCEPT SELECT Studio FROM film WHERE Director  =  \"Walter Hill\""}
{"question": "List the studios which average gross is above 4500000.", "query": "SELECT Studio FROM film GROUP BY Studio HAVING avg(Gross_in_dollar)  >=  4500000"}
{"question": "Which studios have an average gross of over 4500000?", "query": "SELECT Studio FROM film GROUP BY Studio HAVING avg(Gross_in_dollar)  >=  4500000"}
{"question": "What is the title of the film that has the highest high market estimation.", "query": "SELECT t1.title FROM film AS T1 JOIN film_market_estimation AS T2  ON T1.Film_ID  =  T2.Film_ID ORDER BY high_estimate DESC LIMIT 1"}
{"question": "Return the title of the film with the highest high estimate?", "query": "SELECT t1.title FROM film AS T1 JOIN film_market_estimation AS T2  ON T1.Film_ID  =  T2.Film_ID ORDER BY high_estimate DESC LIMIT 1"}
{"question": "What are the titles and directors of the films were never presented in China?", "query": "SELECT title ,  director FROM film WHERE film_id NOT IN (SELECT film_id FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.market_id  =  T2.Market_ID WHERE country  =  'China')"}
{"question": "Return the titles and directors of films that were never in the market of China.", "query": "SELECT title ,  director FROM film WHERE film_id NOT IN (SELECT film_id FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.market_id  =  T2.Market_ID WHERE country  =  'China')"}
{"question": "How many calendar items do we have?", "query": "SELECT count(*) FROM Ref_calendar"}
{"question": "Count the number of all the calendar items.", "query": "SELECT count(*) FROM Ref_calendar"}
{"question": "Show all calendar dates and day Numbers.", "query": "SELECT calendar_date ,  day_Number FROM Ref_calendar"}
{"question": "What are all the calendar dates and day Numbers?", "query": "SELECT calendar_date ,  day_Number FROM Ref_calendar"}
{"question": "Show the number of document types.", "query": "SELECT count(*) FROM Ref_document_types"}
{"question": "How many document types are there?", "query": "SELECT count(*) FROM Ref_document_types"}
{"question": "List all document type codes and document type names.", "query": "SELECT document_type_code ,  document_type_name FROM Ref_document_types"}
{"question": "What are all the document type codes and document type names?", "query": "SELECT document_type_code ,  document_type_name FROM Ref_document_types"}
{"question": "What is the name and description for document type code RV?", "query": "SELECT document_type_name ,  document_type_description FROM Ref_document_types WHERE document_type_code  =  \"RV\""}
{"question": "Give me the name and description of the document type code RV.", "query": "SELECT document_type_name ,  document_type_description FROM Ref_document_types WHERE document_type_code  =  \"RV\""}
{"question": "What is the document type code for document type \"Paper\"?", "query": "SELECT document_type_code FROM Ref_document_types WHERE document_type_name  =  \"Paper\""}
{"question": "Find the code of the document type \"Paper\".", "query": "SELECT document_type_code FROM Ref_document_types WHERE document_type_name  =  \"Paper\""}
{"question": "Show the number of documents with document type code CV or BK.", "query": "SELECT count(*) FROM All_documents WHERE document_type_code  =  \"CV\" OR document_type_code  =  \"BK\""}
{"question": "How many documents have document type code CV or BK?", "query": "SELECT count(*) FROM All_documents WHERE document_type_code  =  \"CV\" OR document_type_code  =  \"BK\""}
{"question": "What is the date when the document \"Marry CV\" was stored?", "query": "SELECT date_stored FROM All_documents WHERE Document_name  =  \"Marry CV\""}
{"question": "When was the document named \"Marry CV\" stored? Give me the date.", "query": "SELECT date_stored FROM All_documents WHERE Document_name  =  \"Marry CV\""}
{"question": "What is the day Number and date of all the documents?", "query": "SELECT T2.day_Number ,  T1.Date_Stored FROM All_documents AS T1 JOIN Ref_calendar AS T2 ON T1.date_stored  =  T2.calendar_date"}
{"question": "Return the day Number and stored date for all the documents.", "query": "SELECT T2.day_Number ,  T1.Date_Stored FROM All_documents AS T1 JOIN Ref_calendar AS T2 ON T1.date_stored  =  T2.calendar_date"}
{"question": "What is the document type name for the document with name \"How to read a book\"?", "query": "SELECT T2.document_type_name FROM All_documents AS T1 JOIN Ref_document_types AS T2 ON T1.document_type_code  =  T2.document_type_code WHERE T1.document_name  =  \"How to read a book\""}
{"question": "Find the document type name of the document named \"How to read a book\".", "query": "SELECT T2.document_type_name FROM All_documents AS T1 JOIN Ref_document_types AS T2 ON T1.document_type_code  =  T2.document_type_code WHERE T1.document_name  =  \"How to read a book\""}
{"question": "Show the number of locations.", "query": "SELECT count(*) FROM Ref_locations"}
{"question": "How many locations are listed in the database?", "query": "SELECT count(*) FROM Ref_locations"}
{"question": "List all location codes and location names.", "query": "SELECT location_code ,  location_name FROM Ref_locations"}
{"question": "What are all the location codes and location names?", "query": "SELECT location_code ,  location_name FROM Ref_locations"}
{"question": "What are the name and description for location code x?", "query": "SELECT location_name ,  location_description FROM Ref_locations WHERE location_code  =  \"x\""}
{"question": "Give me the name and description of the location with code x.", "query": "SELECT location_name ,  location_description FROM Ref_locations WHERE location_code  =  \"x\""}
{"question": "What is the location code for the country \"Canada\"?", "query": "SELECT location_code FROM Ref_locations WHERE location_name  =  \"Canada\""}
{"question": "Show the location code of the country \"Canada\".", "query": "SELECT location_code FROM Ref_locations WHERE location_name  =  \"Canada\""}
{"question": "How many roles are there?", "query": "SELECT count(*) FROM ROLES"}
{"question": "Count the total number of roles listed.", "query": "SELECT count(*) FROM ROLES"}
{"question": "List all role codes, role names, and role descriptions.", "query": "SELECT role_code ,  role_name ,  role_description FROM ROLES"}
{"question": "What are all the role codes, role names, and role descriptions?", "query": "SELECT role_code ,  role_name ,  role_description FROM ROLES"}
{"question": "What are the name and description for role code \"MG\"?", "query": "SELECT role_name ,  role_description FROM ROLES WHERE role_code  =  \"MG\""}
{"question": "Find the name and description of the role with code \"MG\".", "query": "SELECT role_name ,  role_description FROM ROLES WHERE role_code  =  \"MG\""}
{"question": "Show the description for role name \"Proof Reader\".", "query": "SELECT role_description FROM ROLES WHERE role_name  =  \"Proof Reader\""}
{"question": "What is the description of the role named \"Proof Reader\"?", "query": "SELECT role_description FROM ROLES WHERE role_name  =  \"Proof Reader\""}
{"question": "Find the number of employees we have.", "query": "SELECT count(*) FROM Employees"}
{"question": "Show the name, role code, and date of birth for the employee with name 'Armani'.", "query": "SELECT employee_name ,  role_code ,  date_of_birth FROM Employees WHERE employee_Name  =  'Armani'"}
{"question": "What are the name, role code, and date of birth of the employee named 'Armani'?", "query": "SELECT employee_name ,  role_code ,  date_of_birth FROM Employees WHERE employee_Name  =  'Armani'"}
{"question": "What is the id for the employee called Ebba?", "query": "SELECT employee_ID FROM Employees WHERE employee_name  =  \"Ebba\""}
{"question": "Show the id of the employee named Ebba.", "query": "SELECT employee_ID FROM Employees WHERE employee_name  =  \"Ebba\""}
{"question": "Show the names of all the employees with role \"HR\".", "query": "SELECT employee_name FROM Employees WHERE role_code  =  \"HR\""}
{"question": "Which employees have the role with code \"HR\"? Find their names.", "query": "SELECT employee_name FROM Employees WHERE role_code  =  \"HR\""}
{"question": "Show all role codes and the number of employees in each role.", "query": "SELECT role_code ,  count(*) FROM Employees GROUP BY role_code"}
{"question": "What is the code of each role and the number of employees in each role?", "query": "SELECT role_code ,  count(*) FROM Employees GROUP BY role_code"}
{"question": "What is the role code with the largest number of employees?", "query": "SELECT role_code FROM Employees GROUP BY role_code ORDER BY count(*) DESC LIMIT 1"}
{"question": "Find the code of the role that have the most employees.", "query": "SELECT role_code FROM Employees GROUP BY role_code ORDER BY count(*) DESC LIMIT 1"}
{"question": "Show all role codes with at least 3 employees.", "query": "SELECT role_code FROM Employees GROUP BY role_code HAVING count(*)  >=  3"}
{"question": "What are the roles with three or more employees? Give me the role codes.", "query": "SELECT role_code FROM Employees GROUP BY role_code HAVING count(*)  >=  3"}
{"question": "Show the role code with the least employees.", "query": "SELECT role_code FROM Employees GROUP BY role_code ORDER BY count(*) ASC LIMIT 1"}
{"question": "What is the role with the smallest number of employees? Find the role codes.", "query": "SELECT role_code FROM Employees GROUP BY role_code ORDER BY count(*) ASC LIMIT 1"}
{"question": "What is the role name and role description for employee called Ebba?", "query": "SELECT T2.role_name ,  T2.role_description FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code  =  T2.role_code WHERE T1.employee_name  =  \"Ebba\""}
{"question": "Show the name and description of the role played by the employee named Ebba.", "query": "SELECT T2.role_name ,  T2.role_description FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code  =  T2.role_code WHERE T1.employee_name  =  \"Ebba\""}
{"question": "Show the names of employees with role name Editor.", "query": "SELECT T1.employee_name FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code  =  T2.role_code WHERE T2.role_name  =  \"Editor\""}
{"question": "Find the names of all the employees whose the role name is \"Editor\".", "query": "SELECT T1.employee_name FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code  =  T2.role_code WHERE T2.role_name  =  \"Editor\""}
{"question": "Show the employee ids for all employees with role name \"Human Resource\" or \"Manager\".", "query": "SELECT T1.employee_id FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code  =  T2.role_code WHERE T2.role_name  =  \"Human Resource\" OR T2.role_name  =  \"Manager\""}
{"question": "What are the employee ids of the employees whose role name is \"Human Resource\" or \"Manager\"?", "query": "SELECT T1.employee_id FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code  =  T2.role_code WHERE T2.role_name  =  \"Human Resource\" OR T2.role_name  =  \"Manager\""}
{"question": "What are the different location codes for documents?", "query": "SELECT DISTINCT location_code FROM Document_locations"}
{"question": "Give me all the distinct location codes for documents.", "query": "SELECT DISTINCT location_code FROM Document_locations"}
{"question": "Show the location name for document \"Robin CV\".", "query": "SELECT T3.location_name FROM All_documents AS T1 JOIN Document_locations AS T2 ON T1.document_id  =  T2.document_id JOIN Ref_locations AS T3 ON T2.location_code  =  T3.location_code WHERE T1.document_name  =  \"Robin CV\""}
{"question": "What is the location name of the document \"Robin CV\"?", "query": "SELECT T3.location_name FROM All_documents AS T1 JOIN Document_locations AS T2 ON T1.document_id  =  T2.document_id JOIN Ref_locations AS T3 ON T2.location_code  =  T3.location_code WHERE T1.document_name  =  \"Robin CV\""}
{"question": "Show the location code, the starting date and ending data in that location for all the documents.", "query": "SELECT location_code ,  date_in_location_from ,  date_in_locaton_to FROM Document_locations"}
{"question": "What are each document's location code, and starting date and ending data in that location?", "query": "SELECT location_code ,  date_in_location_from ,  date_in_locaton_to FROM Document_locations"}
{"question": "What is \"the date in location from\" and \"the date in location to\" for the document with name \"Robin CV\"?", "query": "SELECT T1.date_in_location_from ,  T1.date_in_locaton_to FROM Document_locations AS T1 JOIN All_documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  \"Robin CV\""}
{"question": "Find the starting date and ending data in location for the document named \"Robin CV\".", "query": "SELECT T1.date_in_location_from ,  T1.date_in_locaton_to FROM Document_locations AS T1 JOIN All_documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  \"Robin CV\""}
{"question": "Show the location codes and the number of documents in each location.", "query": "SELECT location_code ,  count(*) FROM Document_locations GROUP BY location_code"}
{"question": "What is the code of each location and the number of documents in that location?", "query": "SELECT location_code ,  count(*) FROM Document_locations GROUP BY location_code"}
{"question": "What is the location code with the most documents?", "query": "SELECT location_code FROM Document_locations GROUP BY location_code ORDER BY count(*) DESC LIMIT 1"}
{"question": "Find the code of the location with the largest number of documents.", "query": "SELECT location_code FROM Document_locations GROUP BY location_code ORDER BY count(*) DESC LIMIT 1"}
{"question": "Show the location codes with at least 3 documents.", "query": "SELECT location_code FROM Document_locations GROUP BY location_code HAVING count(*)  >=  3"}
{"question": "What are the codes of the locations with at least three documents?", "query": "SELECT location_code FROM Document_locations GROUP BY location_code HAVING count(*)  >=  3"}
{"question": "Show the location name and code with the least documents.", "query": "SELECT T2.location_name ,  T1.location_code FROM Document_locations AS T1 JOIN Ref_locations AS T2 ON T1.location_code  =  T2.location_code GROUP BY T1.location_code ORDER BY count(*) ASC LIMIT 1"}
{"question": "What are the name and code of the location with the smallest number of documents?", "query": "SELECT T2.location_name ,  T1.location_code FROM Document_locations AS T1 JOIN Ref_locations AS T2 ON T1.location_code  =  T2.location_code GROUP BY T1.location_code ORDER BY count(*) ASC LIMIT 1"}
{"question": "What are the names of the employees who authorised the destruction and the employees who destroyed the corresponding documents?", "query": "SELECT T2.employee_name ,  T3.employee_name FROM Documents_to_be_destroyed AS T1 JOIN Employees AS T2 ON T1.Destruction_Authorised_by_Employee_ID = T2.employee_id JOIN Employees AS T3 ON T1.Destroyed_by_Employee_ID = T3.employee_id;"}
{"question": "List the names of the employees who authorized the destruction of documents and the employees who destroyed the corresponding documents.", "query": "SELECT T2.employee_name ,  T3.employee_name FROM Documents_to_be_destroyed AS T1 JOIN Employees AS T2 ON T1.Destruction_Authorised_by_Employee_ID = T2.employee_id JOIN Employees AS T3 ON T1.Destroyed_by_Employee_ID = T3.employee_id;"}
{"question": "Show the id of each employee and the number of document destruction authorised by that employee.", "query": "SELECT Destruction_Authorised_by_Employee_ID ,  count(*) FROM Documents_to_be_destroyed GROUP BY Destruction_Authorised_by_Employee_ID"}
{"question": "What are the id of each employee and the number of document destruction authorised by that employee?", "query": "SELECT Destruction_Authorised_by_Employee_ID ,  count(*) FROM Documents_to_be_destroyed GROUP BY Destruction_Authorised_by_Employee_ID"}
{"question": "Show the employee ids and the number of documents destroyed by each employee.", "query": "SELECT Destroyed_by_Employee_ID ,  count(*) FROM Documents_to_be_destroyed GROUP BY Destroyed_by_Employee_ID"}
{"question": "What are the id of each employee and the number of document destroyed by that employee?", "query": "SELECT Destroyed_by_Employee_ID ,  count(*) FROM Documents_to_be_destroyed GROUP BY Destroyed_by_Employee_ID"}
{"question": "Show the ids of the employees who don't authorize destruction for any document.", "query": "SELECT employee_id FROM Employees EXCEPT SELECT Destruction_Authorised_by_Employee_ID FROM Documents_to_be_destroyed"}
{"question": "Which employees do not authorize destruction for any document? Give me their employee ids.", "query": "SELECT employee_id FROM Employees EXCEPT SELECT Destruction_Authorised_by_Employee_ID FROM Documents_to_be_destroyed"}
{"question": "Show the ids of all employees who have authorized destruction.", "query": "SELECT DISTINCT Destruction_Authorised_by_Employee_ID FROM Documents_to_be_destroyed"}
{"question": "What are the ids of all the employees who authorize document destruction?", "query": "SELECT DISTINCT Destruction_Authorised_by_Employee_ID FROM Documents_to_be_destroyed"}
{"question": "Show the ids of all employees who have destroyed a document.", "query": "SELECT DISTINCT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed"}
{"question": "What are the ids of all the employees who have destroyed documents?", "query": "SELECT DISTINCT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed"}
{"question": "Show the ids of all employees who don't destroy any document.", "query": "SELECT employee_id FROM Employees EXCEPT SELECT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed"}
{"question": "Which employees do not destroy any document? Find their employee ids.", "query": "SELECT employee_id FROM Employees EXCEPT SELECT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed"}
{"question": "Show the ids of all employees who have either destroyed a document or made an authorization to do this.", "query": "SELECT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed UNION SELECT Destruction_Authorised_by_Employee_ID FROM Documents_to_be_destroyed"}
{"question": "Which employees have either destroyed a document or made an authorization to do so? Return their employee ids.", "query": "SELECT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed UNION SELECT Destruction_Authorised_by_Employee_ID FROM Documents_to_be_destroyed"}
{"question": "Count the total number of clubs.", "query": "SELECT count(*) FROM club"}
{"question": "What are the names of all clubs?", "query": "SELECT clubname FROM club"}
{"question": "Give me the name of each club.", "query": "SELECT clubname FROM club"}
{"question": "Count the total number of students.", "query": "SELECT count(*) FROM student"}
{"question": "What are the first names of all the students?", "query": "SELECT DISTINCT fname FROM student"}
{"question": "Find each student's first name.", "query": "SELECT DISTINCT fname FROM student"}
{"question": "Find the last names of the members of the club \"Bootup Baltimore\".", "query": "SELECT t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Bootup Baltimore\""}
{"question": "Who are the members of the club named \"Bootup Baltimore\"? Give me their last names.", "query": "SELECT t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Bootup Baltimore\""}
{"question": "Who are the members of the club named \"Hopkins Student Enterprises\"? Show the last name.", "query": "SELECT t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Hopkins Student Enterprises\""}
{"question": "Return the last name for the members of the club named \"Hopkins Student Enterprises\".", "query": "SELECT t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Hopkins Student Enterprises\""}
{"question": "How many members does the club \"Tennis Club\" has?", "query": "SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Tennis Club\""}
{"question": "Count the members of the club \"Tennis Club\".", "query": "SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Tennis Club\""}
{"question": "Find the number of members of club \"Pen and Paper Gaming\".", "query": "SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Pen and Paper Gaming\""}
{"question": "How many people have membership in the club \"Pen and Paper Gaming\"?", "query": "SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Pen and Paper Gaming\""}
{"question": "How many clubs does \"Linda Smith\" belong to?", "query": "SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.fname  =  \"Linda\" AND t3.lname  =  \"Smith\""}
{"question": "How many clubs does \"Linda Smith\" have membership for?", "query": "SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.fname  =  \"Linda\" AND t3.lname  =  \"Smith\""}
{"question": "Find the number of clubs where \"Tracy Kim\" is a member.", "query": "SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.fname  =  \"Tracy\" AND t3.lname  =  \"Kim\""}
{"question": "For how many clubs is \"Tracy Kim\" a member?", "query": "SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.fname  =  \"Tracy\" AND t3.lname  =  \"Kim\""}
{"question": "Find all the female members of club \"Bootup Baltimore\". Show the first name and last name.", "query": "SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Bootup Baltimore\" AND t3.sex  =  \"F\""}
{"question": "Give me the first name and last name for all the female members of the club \"Bootup Baltimore\".", "query": "SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Bootup Baltimore\" AND t3.sex  =  \"F\""}
{"question": "Find all the male members of club \"Hopkins Student Enterprises\". Show the first name and last name.", "query": "SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Hopkins Student Enterprises\" AND t3.sex  =  \"M\""}
{"question": "What are the first name and last name of each male member in club \"Hopkins Student Enterprises\"?", "query": "SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Hopkins Student Enterprises\" AND t3.sex  =  \"M\""}
{"question": "Find all members of \"Bootup Baltimore\" whose major is \"600\". Show the first name and last name.", "query": "SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Bootup Baltimore\" AND t3.major  =  \"600\""}
{"question": "Which members of \"Bootup Baltimore\" major in \"600\"? Give me their first names and last names.", "query": "SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Bootup Baltimore\" AND t3.major  =  \"600\""}
{"question": "Which club has the most members majoring in \"600\"?", "query": "SELECT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.major  =  \"600\" GROUP BY t1.clubname ORDER BY count(*) DESC LIMIT 1"}
{"question": "Find the club which has the largest number of members majoring in \"600\".", "query": "SELECT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.major  =  \"600\" GROUP BY t1.clubname ORDER BY count(*) DESC LIMIT 1"}
{"question": "Find the name of the club that has the most female students.", "query": "SELECT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.sex  =  \"F\" GROUP BY t1.clubname ORDER BY count(*) DESC LIMIT 1"}
{"question": "Which club has the most female students as their members? Give me the name of the club.", "query": "SELECT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.sex  =  \"F\" GROUP BY t1.clubname ORDER BY count(*) DESC LIMIT 1"}
{"question": "What is the description of the club named \"Tennis Club\"?", "query": "SELECT clubdesc FROM club WHERE clubname  =  \"Tennis Club\""}
{"question": "Find the description of the club called \"Tennis Club\".", "query": "SELECT clubdesc FROM club WHERE clubname  =  \"Tennis Club\""}
{"question": "Find the description of the club \"Pen and Paper Gaming\".", "query": "SELECT clubdesc FROM club WHERE clubname  =  \"Pen and Paper Gaming\""}
{"question": "What is the description of the club \"Pen and Paper Gaming\"?", "query": "SELECT clubdesc FROM club WHERE clubname  =  \"Pen and Paper Gaming\""}
{"question": "What is the location of the club named \"Tennis Club\"?", "query": "SELECT clublocation FROM club WHERE clubname  =  \"Tennis Club\""}
{"question": "Where us the club named \"Tennis Club\" located?", "query": "SELECT clublocation FROM club WHERE clubname  =  \"Tennis Club\""}
{"question": "Find the location of the club \"Pen and Paper Gaming\".", "query": "SELECT clublocation FROM club WHERE clubname  =  \"Pen and Paper Gaming\""}
{"question": "Where is the club \"Pen and Paper Gaming\" located?", "query": "SELECT clublocation FROM club WHERE clubname  =  \"Pen and Paper Gaming\""}
{"question": "Where is the club \"Hopkins Student Enterprises\" located?", "query": "SELECT clublocation FROM club WHERE clubname  =  \"Hopkins Student Enterprises\""}
{"question": "Tell me the location of the club \"Hopkins Student Enterprises\".", "query": "SELECT clublocation FROM club WHERE clubname  =  \"Hopkins Student Enterprises\""}
{"question": "Find the name of all the clubs at \"AKW\".", "query": "SELECT clubname FROM club WHERE clublocation  =  \"AKW\""}
{"question": "Which clubs are located at \"AKW\"? Return the club names.", "query": "SELECT clubname FROM club WHERE clublocation  =  \"AKW\""}
{"question": "How many clubs are located at \"HHH\"?", "query": "SELECT count(*) FROM club WHERE clublocation  =  \"HHH\""}
{"question": "Count the number of clubs located at \"HHH\".", "query": "SELECT count(*) FROM club WHERE clublocation  =  \"HHH\""}
{"question": "What are the first and last name of the president of the club \"Bootup Baltimore\"?", "query": "SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Bootup Baltimore\" AND t2.position  =  \"President\""}
{"question": "Who is the president of the club \"Bootup Baltimore\"? Give me the first and last name.", "query": "SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Bootup Baltimore\" AND t2.position  =  \"President\""}
{"question": "Who is the \"CTO\" of club \"Hopkins Student Enterprises\"? Show the first name and last name.", "query": "SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Hopkins Student Enterprises\" AND t2.position  =  \"CTO\""}
{"question": "Find the first name and last name for the \"CTO\" of the club \"Hopkins Student Enterprises\"?", "query": "SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Hopkins Student Enterprises\" AND t2.position  =  \"CTO\""}
{"question": "How many different roles are there in the club \"Bootup Baltimore\"?", "query": "SELECT count(DISTINCT t2.position) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid WHERE t1.clubname  =  \"Bootup Baltimore\""}
{"question": "Count the number of different positions in the club \"Bootup Baltimore\".", "query": "SELECT count(DISTINCT t2.position) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid WHERE t1.clubname  =  \"Bootup Baltimore\""}
{"question": "How many members of \"Bootup Baltimore\" are older than 18?", "query": "SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Bootup Baltimore\" AND t3.age  >  18"}
{"question": "Count the number of members in club \"Bootup Baltimore\" whose age is above 18.", "query": "SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Bootup Baltimore\" AND t3.age  >  18"}
{"question": "How many members of club \"Bootup Baltimore\" are younger than 18?", "query": "SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Bootup Baltimore\" AND t3.age  <  18"}
{"question": "Count the number of members in club \"Bootup Baltimore\" whose age is below 18.", "query": "SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Bootup Baltimore\" AND t3.age  <  18"}
{"question": "Find the names of all the clubs that have at least a member from the city with city code \"BAL\".", "query": "SELECT DISTINCT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.city_code  =  \"BAL\""}
{"question": "Which clubs have one or more members from the city with code \"BAL\"? Give me the names of the clubs.", "query": "SELECT DISTINCT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.city_code  =  \"BAL\""}
{"question": "Find the names of the clubs that have at least a member from the city with city code \"HOU\".", "query": "SELECT DISTINCT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.city_code  =  \"HOU\""}
{"question": "Which clubs have one or more members from the city with code \"HOU\"? Give me the names of the clubs.", "query": "SELECT DISTINCT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.city_code  =  \"HOU\""}
{"question": "How many clubs does the student named \"Eric Tai\" belong to?", "query": "SELECT count(DISTINCT t1.clubname) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.fname  =  \"Eric\" AND t3.lname  =  \"Tai\""}
{"question": "Count the number of clubs for which the student named \"Eric Tai\" is a member.", "query": "SELECT count(DISTINCT t1.clubname) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.fname  =  \"Eric\" AND t3.lname  =  \"Tai\""}
{"question": "List the clubs having \"Davis Steven\" as a member.", "query": "SELECT DISTINCT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.fname  =  \"Davis\" AND t3.lname  =  \"Steven\""}
{"question": "What are the names of the clubs that have \"Davis Steven\" as a member?", "query": "SELECT DISTINCT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.fname  =  \"Davis\" AND t3.lname  =  \"Steven\""}
{"question": "List the clubs that have at least a member with advisor \"1121\".", "query": "SELECT DISTINCT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.advisor  =  1121"}
{"question": "Which clubs have one or more members whose advisor is \"1121\"?", "query": "SELECT DISTINCT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.advisor  =  1121"}
{"question": "What is the average age of the members of the club \"Bootup Baltimore\"?", "query": "SELECT avg(t3.age) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Bootup Baltimore\""}
{"question": "Find the average age of the members in the club \"Bootup Baltimore\".", "query": "SELECT avg(t3.age) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Bootup Baltimore\""}
{"question": "Find the average age of members of the club \"Hopkins Student Enterprises\".", "query": "SELECT avg(t3.age) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Hopkins Student Enterprises\""}
{"question": "On average, how old are the members in the club \"Hopkins Student Enterprises\"?", "query": "SELECT avg(t3.age) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Hopkins Student Enterprises\""}
{"question": "Retrieve the average age of members of the club \"Tennis Club\".", "query": "SELECT avg(t3.age) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Tennis Club\""}
{"question": "Compute the average age of the members in the club \"Tennis Club\".", "query": "SELECT avg(t3.age) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Tennis Club\""}
{"question": "What are the distinct grant amount for the grants where the documents were sent before '1986-08-26 20:49:27' and grant were ended after '1989-03-16 18:27:16'?", "query": "SELECT T1.grant_amount FROM Grants AS T1 JOIN Documents AS T2 ON T1.grant_id  =  T2.grant_id WHERE T2.sent_date  <  '1986-08-26 20:49:27' INTERSECT SELECT grant_amount FROM grants WHERE grant_end_date  >  '1989-03-16 18:27:16'"}
{"question": "What are the different grant amounts for documents sent before '1986-08-26 20:49:27' and after the grant ended on '1989-03-16 18:27:16'?", "query": "SELECT T1.grant_amount FROM Grants AS T1 JOIN Documents AS T2 ON T1.grant_id  =  T2.grant_id WHERE T2.sent_date  <  '1986-08-26 20:49:27' INTERSECT SELECT grant_amount FROM grants WHERE grant_end_date  >  '1989-03-16 18:27:16'"}
{"question": "List the project details of the project both producing patent and paper as outcomes.", "query": "SELECT T1.project_details FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id WHERE T2.outcome_code  =  'Paper' INTERSECT SELECT T1.project_details FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id WHERE T2.outcome_code  =  'Patent'"}
{"question": "What are the details of the project that is producing both patents and papers as outcomes?", "query": "SELECT T1.project_details FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id WHERE T2.outcome_code  =  'Paper' INTERSECT SELECT T1.project_details FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id WHERE T2.outcome_code  =  'Patent'"}
{"question": "What is the total grant amount of the organisations described as research?", "query": "SELECT sum(grant_amount) FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id  =  T2.organisation_id JOIN organisation_Types AS T3 ON T2.organisation_type  =  T3.organisation_type WHERE T3.organisation_type_description  =  'Research'"}
{"question": "What is the total amount of grant money for research?", "query": "SELECT sum(grant_amount) FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id  =  T2.organisation_id JOIN organisation_Types AS T3 ON T2.organisation_type  =  T3.organisation_type WHERE T3.organisation_type_description  =  'Research'"}
{"question": "List from which date and to which date these staff work: project staff of the project which hires the most staffs", "query": "SELECT date_from ,  date_to FROM Project_Staff WHERE project_id IN( SELECT project_id FROM Project_Staff GROUP BY project_id ORDER BY count(*) DESC LIMIT 1 ) UNION SELECT date_from ,  date_to FROM Project_Staff WHERE role_code  =  'leader'"}
{"question": "From what date and to what date do the staff work on a project that has the most staff and has staff in a leader role?", "query": "SELECT date_from ,  date_to FROM Project_Staff WHERE project_id IN( SELECT project_id FROM Project_Staff GROUP BY project_id ORDER BY count(*) DESC LIMIT 1 ) UNION SELECT date_from ,  date_to FROM Project_Staff WHERE role_code  =  'leader'"}
{"question": "Find the organisation ids and details of the organisations which are involved in", "query": "SELECT T2.organisation_id ,  T2.organisation_details FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id  =  T2.organisation_id GROUP BY T2.organisation_id HAVING sum(T1.grant_amount)  >  6000"}
{"question": "What are the ids and details for all organizations that have grants of more than 6000 dollars?", "query": "SELECT T2.organisation_id ,  T2.organisation_details FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id  =  T2.organisation_id GROUP BY T2.organisation_id HAVING sum(T1.grant_amount)  >  6000"}
{"question": "What is the organisation type and id of the organisation which has the most number of research staff?", "query": "SELECT T1.organisation_type ,  T1.organisation_id FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id  =  T2.employer_organisation_id GROUP BY T1.organisation_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "What is the type and id of the organization that has the most research staff?", "query": "SELECT T1.organisation_type ,  T1.organisation_id FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id  =  T2.employer_organisation_id GROUP BY T1.organisation_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "Which organisation type hires most research staff?", "query": "SELECT T1.organisation_type FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id  =  T2.employer_organisation_id GROUP BY T1.organisation_type ORDER BY count(*) DESC LIMIT 1"}
{"question": "What is the type of the organization with the most research staff?", "query": "SELECT T1.organisation_type FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id  =  T2.employer_organisation_id GROUP BY T1.organisation_type ORDER BY count(*) DESC LIMIT 1"}
{"question": "Find out the send dates of the documents with the grant amount of more than 5000 were granted by organisation type described", "query": "SELECT T1.sent_date FROM documents AS T1 JOIN Grants AS T2 ON T1.grant_id  =  T2.grant_id JOIN Organisations AS T3 ON T2.organisation_id  =  T3.organisation_id JOIN organisation_Types AS T4 ON T3.organisation_type  =  T4.organisation_type WHERE T2.grant_amount  >  5000 AND T4.organisation_type_description  =  'Research'"}
{"question": "What are the send dates for all documents that have a grant amount of more than 5000 and are involved in research?", "query": "SELECT T1.sent_date FROM documents AS T1 JOIN Grants AS T2 ON T1.grant_id  =  T2.grant_id JOIN Organisations AS T3 ON T2.organisation_id  =  T3.organisation_id JOIN organisation_Types AS T4 ON T3.organisation_type  =  T4.organisation_type WHERE T2.grant_amount  >  5000 AND T4.organisation_type_description  =  'Research'"}
{"question": "What are the response received dates for the documents described as 'Regular' or granted with more than 100?", "query": "SELECT T1.response_received_date FROM Documents AS T1 JOIN Document_Types AS T2 ON T1.document_type_code  =  T2.document_type_code JOIN Grants AS T3 ON T1.grant_id  =  T3.grant_id WHERE T2.document_description  =  'Regular' OR T3.grant_amount  >  100"}
{"question": "What is the response received date for the document described as Regular that was granted more than 100 dollars?", "query": "SELECT T1.response_received_date FROM Documents AS T1 JOIN Document_Types AS T2 ON T1.document_type_code  =  T2.document_type_code JOIN Grants AS T3 ON T1.grant_id  =  T3.grant_id WHERE T2.document_description  =  'Regular' OR T3.grant_amount  >  100"}
{"question": "List the project details of the projects which did not hire any staff for a researcher role.", "query": "SELECT project_details FROM Projects WHERE project_id NOT IN ( SELECT project_id FROM Project_Staff WHERE role_code  =  'researcher' )"}
{"question": "What are the details for all projects that did not hire any staff in a research role?", "query": "SELECT project_details FROM Projects WHERE project_id NOT IN ( SELECT project_id FROM Project_Staff WHERE role_code  =  'researcher' )"}
{"question": "What are the task details, task id and project id for the projects which are detailed as 'omnis' or  have more than 2 outcomes?", "query": "SELECT T1.task_details ,  T1.task_id ,  T2.project_id FROM Tasks AS T1 JOIN Projects AS T2 ON T1.project_id  =  T2.project_id WHERE T2.project_details  =  'omnis' UNION SELECT T1.task_details ,  T1.task_id ,  T2.project_id FROM Tasks AS T1 JOIN Projects AS T2 ON T1.project_id  =  T2.project_id JOIN Project_outcomes AS T3 ON T2.project_id  =  T3.project_id GROUP BY T2.project_id HAVING count(*)  >  2"}
{"question": "What are the task details, task ids, and project ids for the progrects that are detailed as 'omnis' or have at least 3 outcomes?", "query": "SELECT T1.task_details ,  T1.task_id ,  T2.project_id FROM Tasks AS T1 JOIN Projects AS T2 ON T1.project_id  =  T2.project_id WHERE T2.project_details  =  'omnis' UNION SELECT T1.task_details ,  T1.task_id ,  T2.project_id FROM Tasks AS T1 JOIN Projects AS T2 ON T1.project_id  =  T2.project_id JOIN Project_outcomes AS T3 ON T2.project_id  =  T3.project_id GROUP BY T2.project_id HAVING count(*)  >  2"}
{"question": "When do all the researcher role staff start to work, and when do they stop working?", "query": "SELECT date_from ,  date_to FROM Project_Staff WHERE role_code  =  'researcher'"}
{"question": "When did researchers start and stop working?", "query": "SELECT date_from ,  date_to FROM Project_Staff WHERE role_code  =  'researcher'"}
{"question": "How many kinds of roles are there for the staff?", "query": "SELECT count(DISTINCT role_code) FROM Project_Staff"}
{"question": "How many different roles are there on the project staff?", "query": "SELECT count(DISTINCT role_code) FROM Project_Staff"}
{"question": "What is the total amount of grants given by each organisations? Also list the organisation id.", "query": "SELECT sum(grant_amount) ,  organisation_id FROM Grants GROUP BY organisation_id"}
{"question": "What is the total amount of grant money given to each organization and what is its id?", "query": "SELECT sum(grant_amount) ,  organisation_id FROM Grants GROUP BY organisation_id"}
{"question": "List the project details of the projects with the research outcome described with the substring 'Published'.", "query": "SELECT T1.project_details FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id JOIN Research_outcomes AS T3 ON T2.outcome_code  =  T3.outcome_code WHERE T3.outcome_description LIKE '%Published%'"}
{"question": "What are the details for the project whose research has been published?", "query": "SELECT T1.project_details FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id JOIN Research_outcomes AS T3 ON T2.outcome_code  =  T3.outcome_code WHERE T3.outcome_description LIKE '%Published%'"}
{"question": "How many staff does each project has? List the project id and the number in an ascending order.", "query": "SELECT T1.project_id ,  count(*) FROM Project_Staff AS T1 JOIN Projects AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.project_id ORDER BY count(*) ASC"}
{"question": "For each project id, how many staff does it have? List them in increasing order.", "query": "SELECT T1.project_id ,  count(*) FROM Project_Staff AS T1 JOIN Projects AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.project_id ORDER BY count(*) ASC"}
{"question": "What is the complete description of the researcher role.", "query": "SELECT role_description FROM Staff_Roles WHERE role_code  =  'researcher'"}
{"question": "What is the complete description of the job of a researcher?", "query": "SELECT role_description FROM Staff_Roles WHERE role_code  =  'researcher'"}
{"question": "When did the first staff for the projects started working?", "query": "SELECT date_from FROM Project_Staff ORDER BY date_from ASC LIMIT 1"}
{"question": "When did the first staff member start working?", "query": "SELECT date_from FROM Project_Staff ORDER BY date_from ASC LIMIT 1"}
{"question": "Which project made the most number of outcomes? List the project details and the project id.", "query": "SELECT T1.project_details ,  T1.project_id FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.project_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "What are the details and id of the project with the most outcomes?", "query": "SELECT T1.project_details ,  T1.project_id FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.project_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "Which projects have no outcome? List the project details.", "query": "SELECT project_details FROM Projects WHERE project_id NOT IN ( SELECT project_id FROM Project_outcomes )"}
{"question": "What are the details of the project with no outcomes?", "query": "SELECT project_details FROM Projects WHERE project_id NOT IN ( SELECT project_id FROM Project_outcomes )"}
{"question": "Which organisation hired the most number of research staff? List the organisation id, type and detail.", "query": "SELECT T1.organisation_id ,  T1.organisation_type ,  T1.organisation_details FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id  =  T2.employer_organisation_id GROUP BY T1.organisation_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "What are the ids, types, and details of the organization with the most research staff?", "query": "SELECT T1.organisation_id ,  T1.organisation_type ,  T1.organisation_details FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id  =  T2.employer_organisation_id GROUP BY T1.organisation_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "Show the role description and the id of the project staff involved in most number of project outcomes?", "query": "SELECT T1.role_description ,  T2.staff_id FROM Staff_Roles AS T1 JOIN Project_Staff AS T2 ON T1.role_code  =  T2.role_code JOIN Project_outcomes AS T3 ON T2.project_id  =  T3.project_id GROUP BY T2.staff_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "For each staff id, what is the description of the role that is involved with the most number of projects?", "query": "SELECT T1.role_description ,  T2.staff_id FROM Staff_Roles AS T1 JOIN Project_Staff AS T2 ON T1.role_code  =  T2.role_code JOIN Project_outcomes AS T3 ON T2.project_id  =  T3.project_id GROUP BY T2.staff_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "Which document type is described with the prefix 'Initial'?", "query": "SELECT document_type_code FROM Document_Types WHERE document_description LIKE 'Initial%'"}
{"question": "What is the type of the document whose description starts with the word 'Initial'?", "query": "SELECT document_type_code FROM Document_Types WHERE document_description LIKE 'Initial%'"}
{"question": "For grants with both documents described as 'Regular' and documents described as 'Initial Application', list its start date.", "query": "SELECT T1.grant_start_date FROM Grants AS T1 JOIN Documents AS T2 ON T1.grant_id  =  T2.grant_id JOIN Document_Types AS T3 ON T2.document_type_code  =  T3.document_type_code WHERE T3.document_description  =  'Regular' INTERSECT SELECT T1.grant_start_date FROM Grants AS T1 JOIN Documents AS T2 ON T1.grant_id  =  T2.grant_id JOIN Document_Types AS T3 ON T2.document_type_code  =  T3.document_type_code WHERE T3.document_description  =  'Initial Application'"}
{"question": "For grants that have descriptions of Regular and Initial Applications, what are their start dates?", "query": "SELECT T1.grant_start_date FROM Grants AS T1 JOIN Documents AS T2 ON T1.grant_id  =  T2.grant_id JOIN Document_Types AS T3 ON T2.document_type_code  =  T3.document_type_code WHERE T3.document_description  =  'Regular' INTERSECT SELECT T1.grant_start_date FROM Grants AS T1 JOIN Documents AS T2 ON T1.grant_id  =  T2.grant_id JOIN Document_Types AS T3 ON T2.document_type_code  =  T3.document_type_code WHERE T3.document_description  =  'Initial Application'"}
{"question": "How many documents can one grant have at most? List the grant id and number.", "query": "SELECT grant_id ,  count(*) FROM Documents GROUP BY grant_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "For each grant id, how many documents does it have, and which one has the most?", "query": "SELECT grant_id ,  count(*) FROM Documents GROUP BY grant_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "Find the organisation type description of the organisation detailed as 'quo'.", "query": "SELECT T1.organisation_type_description FROM organisation_Types AS T1 JOIN Organisations AS T2 ON T1.organisation_type  =  T2.organisation_type WHERE T2.organisation_details  =  'quo'"}
{"question": "What is the type description of the organization whose detail is listed as 'quo'?", "query": "SELECT T1.organisation_type_description FROM organisation_Types AS T1 JOIN Organisations AS T2 ON T1.organisation_type  =  T2.organisation_type WHERE T2.organisation_details  =  'quo'"}
{"question": "What are all the details of the organisations described as 'Sponsor'? Sort the result in an ascending order.", "query": "SELECT organisation_details FROM Organisations AS T1 JOIN organisation_Types AS T2 ON T1.organisation_type  =  T2.organisation_type WHERE T2.organisation_type_description  =  'Sponsor' ORDER BY organisation_details"}
{"question": "What are the details of all organizations that are described as Sponsors and sort the results in ascending order?", "query": "SELECT organisation_details FROM Organisations AS T1 JOIN organisation_Types AS T2 ON T1.organisation_type  =  T2.organisation_type WHERE T2.organisation_type_description  =  'Sponsor' ORDER BY organisation_details"}
{"question": "How many Patent outcomes are generated from all the projects?", "query": "SELECT count(*) FROM Project_outcomes WHERE outcome_code  =  'Patent'"}
{"question": "How many patents outcomes were listed for all the projects?", "query": "SELECT count(*) FROM Project_outcomes WHERE outcome_code  =  'Patent'"}
{"question": "How many project staff worked as leaders or started working before '1989-04-24 23:51:54'?", "query": "SELECT count(*) FROM Project_Staff WHERE role_code  =  'leader' OR date_from  <  '1989-04-24 23:51:54'"}
{"question": "How many project members were leaders or started working before '1989-04-24 23:51:54'?", "query": "SELECT count(*) FROM Project_Staff WHERE role_code  =  'leader' OR date_from  <  '1989-04-24 23:51:54'"}
{"question": "What is the last date of the staff leaving the projects?", "query": "SELECT date_to FROM Project_Staff ORDER BY date_to DESC LIMIT 1"}
{"question": "What is the last date that a staff member left a project?", "query": "SELECT date_to FROM Project_Staff ORDER BY date_to DESC LIMIT 1"}
{"question": "What are the result description of the project whose detail is 'sint'?", "query": "SELECT T1.outcome_description FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code  =  T2.outcome_code JOIN Projects AS T3 ON T2.project_id  =  T3.project_id WHERE T3.project_details  =  'sint'"}
{"question": "What is the description for the results whose project detail is 'sint'?", "query": "SELECT T1.outcome_description FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code  =  T2.outcome_code JOIN Projects AS T3 ON T2.project_id  =  T3.project_id WHERE T3.project_details  =  'sint'"}
{"question": "List the organisation id with the maximum outcome count, and the count.", "query": "SELECT T1.organisation_id ,  count(*) FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.organisation_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "What is the id of the organization with the maximum number of outcomes and how many outcomes are there?", "query": "SELECT T1.organisation_id ,  count(*) FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.organisation_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "List the project details of the projects launched by the organisation", "query": "SELECT project_details FROM Projects WHERE organisation_id IN ( SELECT organisation_id FROM Projects GROUP BY organisation_id ORDER BY count(*) DESC LIMIT 1 )"}
{"question": "What are the details for the projects which were launched by the organization with the most projects?", "query": "SELECT project_details FROM Projects WHERE organisation_id IN ( SELECT organisation_id FROM Projects GROUP BY organisation_id ORDER BY count(*) DESC LIMIT 1 )"}
{"question": "List the research staff details, and order in ascending order.", "query": "SELECT staff_details FROM Research_Staff ORDER BY staff_details ASC"}
{"question": "What details are there on the research staff? List the result in ascending alphabetical order.", "query": "SELECT staff_details FROM Research_Staff ORDER BY staff_details ASC"}
{"question": "How many tasks are there in total?", "query": "SELECT count(*) FROM Tasks"}
{"question": "How many tasks are there?", "query": "SELECT count(*) FROM Tasks"}
{"question": "How many tasks does each project have? List the task count and the project detail.", "query": "SELECT count(*) ,  T1.project_details FROM Projects AS T1 JOIN Tasks AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.project_id"}
{"question": "For each project id, how many tasks are there?", "query": "SELECT count(*) ,  T1.project_details FROM Projects AS T1 JOIN Tasks AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.project_id"}
{"question": "What are the staff roles of the staff who", "query": "SELECT role_code FROM Project_Staff WHERE date_from  >  '2003-04-19 15:06:20' AND date_to  <  '2016-03-15 00:33:18'"}
{"question": "What roles did staff members play between '2003-04-19 15:06:20' and '2016-03-15 00:33:18'?", "query": "SELECT role_code FROM Project_Staff WHERE date_from  >  '2003-04-19 15:06:20' AND date_to  <  '2016-03-15 00:33:18'"}
{"question": "What are the descriptions of all the project outcomes?", "query": "SELECT T1.outcome_description FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code  =  T2.outcome_code"}
{"question": "List the description of the outcomes for all projects.", "query": "SELECT T1.outcome_description FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code  =  T2.outcome_code"}
{"question": "Which role is most common for the staff?", "query": "SELECT role_code FROM Project_Staff GROUP BY role_code ORDER BY count(*) DESC LIMIT 1"}
{"question": "What is the most common role for the staff?", "query": "SELECT role_code FROM Project_Staff GROUP BY role_code ORDER BY count(*) DESC LIMIT 1"}
{"question": "How many friends does Dan have?", "query": "SELECT count(T2.friend) FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T1.name  =  'Dan'"}
{"question": "How many females does this network has?", "query": "SELECT count(*) FROM Person WHERE gender  =  'female'"}
{"question": "How many females are in the network?", "query": "SELECT count(*) FROM Person WHERE gender  =  'female'"}
{"question": "What is the average age for all person?", "query": "SELECT avg(age) FROM Person"}
{"question": "What is the average age for all people in the table?", "query": "SELECT avg(age) FROM Person"}
{"question": "How many different cities are they from?", "query": "SELECT count(DISTINCT city) FROM Person"}
{"question": "How many different cities do people originate from?", "query": "SELECT count(DISTINCT city) FROM Person"}
{"question": "How many type of jobs do they have?", "query": "SELECT count(DISTINCT job) FROM Person"}
{"question": "How many different jobs are listed?", "query": "SELECT count(DISTINCT job) FROM Person"}
{"question": "Who is the oldest person?", "query": "SELECT name FROM Person WHERE age  =  (SELECT max(age) FROM person)"}
{"question": "What is the name of the person who is the oldest?", "query": "SELECT name FROM Person WHERE age  =  (SELECT max(age) FROM person)"}
{"question": "Who is the oldest person whose job is student?", "query": "SELECT name FROM Person WHERE job  =  'student' AND age  =  (SELECT max(age) FROM person WHERE job  =  'student' )"}
{"question": "What is the name of the oldest student?", "query": "SELECT name FROM Person WHERE job  =  'student' AND age  =  (SELECT max(age) FROM person WHERE job  =  'student' )"}
{"question": "Who is the youngest male?", "query": "SELECT name FROM Person WHERE gender  =  'male' AND age  =  (SELECT min(age) FROM person WHERE gender  =  'male' )"}
{"question": "What is the name of the youngest male?", "query": "SELECT name FROM Person WHERE gender  =  'male' AND age  =  (SELECT min(age) FROM person WHERE gender  =  'male' )"}
{"question": "How old is the doctor named Zach?", "query": "SELECT age FROM Person WHERE job  =  'doctor' AND name  =  'Zach'"}
{"question": "What is the age of the doctor named Zach?", "query": "SELECT age FROM Person WHERE job  =  'doctor' AND name  =  'Zach'"}
{"question": "Who is the person whose age is below 30?", "query": "SELECT name FROM Person WHERE age  <  30"}
{"question": "What is the name of the person whose age is below 30?", "query": "SELECT name FROM Person WHERE age  <  30"}
{"question": "How many people whose age is greater 30 and job is engineer?", "query": "SELECT count(*) FROM Person WHERE age  >  30 AND job  =  'engineer'"}
{"question": "HOw many engineers are older than 30?", "query": "SELECT count(*) FROM Person WHERE age  >  30 AND job  =  'engineer'"}
{"question": "What is the average age for each gender?", "query": "SELECT avg(age) ,  gender FROM Person GROUP BY gender"}
{"question": "How old is each gender, on average?", "query": "SELECT avg(age) ,  gender FROM Person GROUP BY gender"}
{"question": "What is average age for different job title?", "query": "SELECT avg(age) ,  job FROM Person GROUP BY job"}
{"question": "How old is the average person for each job?", "query": "SELECT avg(age) ,  job FROM Person GROUP BY job"}
{"question": "What is average age of male for different job title?", "query": "SELECT avg(age) ,  job FROM Person WHERE gender  =  'male' GROUP BY job"}
{"question": "What is the average age for a male in each job?", "query": "SELECT avg(age) ,  job FROM Person WHERE gender  =  'male' GROUP BY job"}
{"question": "What is minimum age for different job title?", "query": "SELECT min(age) ,  job FROM Person GROUP BY job"}
{"question": "How old is the youngest person for each job?", "query": "SELECT min(age) ,  job FROM Person GROUP BY job"}
{"question": "Find the number of people who is under 40 for each gender.", "query": "SELECT count(*) ,  gender FROM Person WHERE age  <  40 GROUP BY gender"}
{"question": "How many people are under 40 for each gender?", "query": "SELECT count(*) ,  gender FROM Person WHERE age  <  40 GROUP BY gender"}
{"question": "Find the name of people whose age is greater than any engineer sorted by their age.", "query": "SELECT name FROM Person WHERE age  >  (SELECT min(age) FROM person WHERE job  =  'engineer') ORDER BY age"}
{"question": "What is the name of all the people who are older than at least one engineer? Order them by age.", "query": "SELECT name FROM Person WHERE age  >  (SELECT min(age) FROM person WHERE job  =  'engineer') ORDER BY age"}
{"question": "Find the number of people whose age is greater than all engineers.", "query": "SELECT count(*) FROM Person WHERE age  >  (SELECT max(age) FROM person WHERE job  =  'engineer')"}
{"question": "How many people are older than every engineer?", "query": "SELECT count(*) FROM Person WHERE age  >  (SELECT max(age) FROM person WHERE job  =  'engineer')"}
{"question": "list the name, job title of all people ordered by their names.", "query": "SELECT name ,  job FROM Person ORDER BY name"}
{"question": "What are the names and job titles of every person ordered alphabetically by name?", "query": "SELECT name ,  job FROM Person ORDER BY name"}
{"question": "Find the names of all person sorted in the descending order using age.", "query": "SELECT name FROM Person ORDER BY age DESC"}
{"question": "What are the names of everybody sorted by age in descending order?", "query": "SELECT name FROM Person ORDER BY age DESC"}
{"question": "Find the name and age of all males in order of their age.", "query": "SELECT name FROM Person WHERE gender  =  'male' ORDER BY age"}
{"question": "What is the name and age of every male? Order the results by age.", "query": "SELECT name FROM Person WHERE gender  =  'male' ORDER BY age"}
{"question": "Find the name and age of the person who is a friend of both Dan and Alice.", "query": "SELECT T1.name ,  T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Dan' INTERSECT SELECT T1.name ,   T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Alice'"}
{"question": "What are the names and ages of every person who is a friend of both Dan and Alice?", "query": "SELECT T1.name ,  T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Dan' INTERSECT SELECT T1.name ,   T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Alice'"}
{"question": "Find the name and age of the person who is a friend of Dan or Alice.", "query": "SELECT DISTINCT T1.name ,  T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Dan' OR T2.friend  =  'Alice'"}
{"question": "What are the different names and ages of every friend of either Dan or alice?", "query": "SELECT DISTINCT T1.name ,  T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Dan' OR T2.friend  =  'Alice'"}
{"question": "Find the name of the person who has friends with age above 40 and under age 30?", "query": "SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend IN (SELECT name FROM Person WHERE age  >  40) INTERSECT SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend IN (SELECT name FROM Person WHERE age  <  30)"}
{"question": "What are the names of every person who has a friend over 40 and under 30?", "query": "SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend IN (SELECT name FROM Person WHERE age  >  40) INTERSECT SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend IN (SELECT name FROM Person WHERE age  <  30)"}
{"question": "Find the name of the person who has friends with age above 40 but not under age 30?", "query": "SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend IN (SELECT name FROM Person WHERE age  >  40) EXCEPT SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend IN (SELECT name FROM Person WHERE age  <  30)"}
{"question": "What are the names of the people who are older 40 but no friends under age 30?", "query": "SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend IN (SELECT name FROM Person WHERE age  >  40) EXCEPT SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend IN (SELECT name FROM Person WHERE age  <  30)"}
{"question": "Find the name of the person who has no student friends.", "query": "SELECT name FROM person EXCEPT SELECT T2.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T1.job  =  'student'"}
{"question": "What are the names of the people who have no friends who are students?", "query": "SELECT name FROM person EXCEPT SELECT T2.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T1.job  =  'student'"}
{"question": "Find the person who has exactly one friend.", "query": "SELECT name FROM PersonFriend GROUP BY name HAVING count(*)  =  1"}
{"question": "What are the names of everybody who has exactly one friend?", "query": "SELECT name FROM PersonFriend GROUP BY name HAVING count(*)  =  1"}
{"question": "Who are the friends of Bob?", "query": "SELECT T2.friend FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T1.name  =  'Bob'"}
{"question": "Who are Bob's friends?", "query": "SELECT T2.friend FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T1.name  =  'Bob'"}
{"question": "Find the name of persons who are friends with Bob.", "query": "SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Bob'"}
{"question": "What are the names of all of Bob's friends?", "query": "SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Bob'"}
{"question": "Find the names of females who are friends with Zach", "query": "SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Zach' AND T1.gender  =  'female'"}
{"question": "What are the names of all females who are friends with Zach?", "query": "SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Zach' AND T1.gender  =  'female'"}
{"question": "Find the female friends of Alice.", "query": "SELECT T2.friend FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T2.name  =  'Alice' AND T1.gender  =  'female'"}
{"question": "What are all the friends of Alice who are female?", "query": "SELECT T2.friend FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T2.name  =  'Alice' AND T1.gender  =  'female'"}
{"question": "Find the male friend of Alice whose job is a doctor?", "query": "SELECT T2.friend FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T2.name  =  'Alice' AND T1.gender  =  'male' AND T1.job  =  'doctor'"}
{"question": "Who are the friends of Alice that are doctors?", "query": "SELECT T2.friend FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T2.name  =  'Alice' AND T1.gender  =  'male' AND T1.job  =  'doctor'"}
{"question": "Who has a friend that is from new york city?", "query": "SELECT T2.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T1.city  =  'new york city'"}
{"question": "What are the names of all friends who are from New York?", "query": "SELECT T2.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T1.city  =  'new york city'"}
{"question": "Who has friends that are younger than the average age?", "query": "SELECT DISTINCT T2.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T1.age  <  (SELECT avg(age) FROM person)"}
{"question": "What are the different names of friends who are younger than the average age for a friend?", "query": "SELECT DISTINCT T2.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T1.age  <  (SELECT avg(age) FROM person)"}
{"question": "Who has friends that are older than the average age? Print their friends and their ages as well", "query": "SELECT DISTINCT T2.name ,  T2.friend ,  T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T1.age  >  (SELECT avg(age) FROM person)"}
{"question": "Whare the names, friends, and ages of all people who are older than the average age of a person?", "query": "SELECT DISTINCT T2.name ,  T2.friend ,  T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T1.age  >  (SELECT avg(age) FROM person)"}
{"question": "Who is the friend of Zach with longest year relationship?", "query": "SELECT friend FROM PersonFriend WHERE name =  'Zach' AND YEAR  =  (SELECT max(YEAR) FROM PersonFriend WHERE name =  'Zach')"}
{"question": "Which friend of Zach has the longest-lasting friendship?", "query": "SELECT friend FROM PersonFriend WHERE name =  'Zach' AND YEAR  =  (SELECT max(YEAR) FROM PersonFriend WHERE name =  'Zach')"}
{"question": "What is the age of the friend of Zach with longest year relationship?", "query": "SELECT T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T2.name =  'Zach' AND T2.year  =  (SELECT max(YEAR) FROM PersonFriend WHERE name =  'Zach')"}
{"question": "What are the ages of all of Zach's friends who are in the longest relationship?", "query": "SELECT T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T2.name =  'Zach' AND T2.year  =  (SELECT max(YEAR) FROM PersonFriend WHERE name =  'Zach')"}
{"question": "Find the name of persons who are friends with Alice for the shortest years.", "query": "SELECT name FROM PersonFriend WHERE friend =  'Alice' AND YEAR  =  (SELECT min(YEAR) FROM PersonFriend WHERE friend =  'Alice')"}
{"question": "What are the names of all people who are friends with Alice for the shortest amount of time?", "query": "SELECT name FROM PersonFriend WHERE friend =  'Alice' AND YEAR  =  (SELECT min(YEAR) FROM PersonFriend WHERE friend =  'Alice')"}
{"question": "Find the name, age, and job title of persons who are friends with Alice for the longest years.", "query": "SELECT T1.name ,  T1.age ,  T1.job FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend =  'Alice' AND T2.year  =  (SELECT max(YEAR) FROM PersonFriend WHERE friend =  'Alice')"}
{"question": "What are the names, ages, and jobs of all people who are friends with Alice for the longest amount of time?", "query": "SELECT T1.name ,  T1.age ,  T1.job FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend =  'Alice' AND T2.year  =  (SELECT max(YEAR) FROM PersonFriend WHERE friend =  'Alice')"}
{"question": "Who is the person that has no friend?", "query": "SELECT name FROM person EXCEPT SELECT name FROM PersonFriend"}
{"question": "What are the names of all people who do not have friends?", "query": "SELECT name FROM person EXCEPT SELECT name FROM PersonFriend"}
{"question": "Which person whose friends have the oldest average age?", "query": "SELECT T2.name ,  avg(T1.age) FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend GROUP BY T2.name ORDER BY avg(T1.age) DESC LIMIT 1"}
{"question": "What is the name of the person who has the oldest average age for their friends, and what is that average age?", "query": "SELECT T2.name ,  avg(T1.age) FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend GROUP BY T2.name ORDER BY avg(T1.age) DESC LIMIT 1"}
{"question": "What is the total number of people who has no friend living in the city of Austin.", "query": "SELECT count(DISTINCT name) FROM PersonFriend WHERE friend NOT IN (SELECT name FROM person WHERE city  =  'Austin')"}
{"question": "What is the total number of people who have no friends living in Austin?", "query": "SELECT count(DISTINCT name) FROM PersonFriend WHERE friend NOT IN (SELECT name FROM person WHERE city  =  'Austin')"}
{"question": "Find Alice's friends of friends.", "query": "SELECT DISTINCT T4.name FROM PersonFriend AS T1 JOIN Person AS T2 ON T1.name  =  T2.name JOIN PersonFriend AS T3 ON T1.friend  =  T3.name JOIN PersonFriend AS T4 ON T3.friend  =  T4.name WHERE T2.name  =  'Alice' AND T4.name != 'Alice'"}
{"question": "What are the names of all of Alice's friends of friends?", "query": "SELECT DISTINCT T4.name FROM PersonFriend AS T1 JOIN Person AS T2 ON T1.name  =  T2.name JOIN PersonFriend AS T3 ON T1.friend  =  T3.name JOIN PersonFriend AS T4 ON T3.friend  =  T4.name WHERE T2.name  =  'Alice' AND T4.name != 'Alice'"}
{"question": "How many members are there?", "query": "SELECT count(*) FROM member"}
{"question": "List the names of members in ascending alphabetical order.", "query": "SELECT Name FROM member ORDER BY Name ASC"}
{"question": "What are the names and countries of members?", "query": "SELECT Name ,  Country FROM member"}
{"question": "Show the names of members whose country is \"United States\" or \"Canada\".", "query": "SELECT Name FROM member WHERE Country  =  \"United States\" OR Country  =  \"Canada\""}
{"question": "Show the different countries and the number of members from each.", "query": "SELECT Country ,  COUNT(*) FROM member GROUP BY Country"}
{"question": "Show the most common country across members.", "query": "SELECT Country FROM member GROUP BY Country ORDER BY COUNT(*) DESC LIMIT 1"}
{"question": "Which countries have more than two members?", "query": "SELECT Country FROM member GROUP BY Country HAVING COUNT(*)  >  2"}
{"question": "Show the leader names and locations of colleges.", "query": "SELECT Leader_Name ,  College_Location FROM college"}
{"question": "Show the names of members and names of colleges they go to.", "query": "SELECT T2.Name ,  T1.Name FROM college AS T1 JOIN member AS T2 ON T1.College_ID  =  T2.College_ID"}
{"question": "Show the names of members and the locations of colleges they go to in ascending alphabetical order of member names.", "query": "SELECT T2.Name ,  T1.College_Location FROM college AS T1 JOIN member AS T2 ON T1.College_ID  =  T2.College_ID ORDER BY T2.Name ASC"}
{"question": "Show the distinct leader names of colleges associated with members from country \"Canada\".", "query": "SELECT DISTINCT T1.Leader_Name FROM college AS T1 JOIN member AS T2 ON T1.College_ID  =  T2.College_ID WHERE T2.Country  =  \"Canada\""}
{"question": "Show the names of members and the decoration themes they have.", "query": "SELECT T1.Name ,  T2.Decoration_Theme FROM member AS T1 JOIN round AS T2 ON T1.Member_ID  =  T2.Member_ID"}
{"question": "Show the names of members that have a rank in round higher than 3.", "query": "SELECT T1.Name FROM member AS T1 JOIN round AS T2 ON T1.Member_ID  =  T2.Member_ID WHERE T2.Rank_in_Round  >  3"}
{"question": "Show the names of members in ascending order of their rank in rounds.", "query": "SELECT T1.Name FROM member AS T1 JOIN round AS T2 ON T1.Member_ID  =  T2.Member_ID ORDER BY Rank_in_Round ASC"}
{"question": "List the names of members who did not participate in any round.", "query": "SELECT Name FROM member WHERE Member_ID NOT IN (SELECT Member_ID FROM round)"}
{"question": "Find the name and access counts of all documents, in alphabetic order of the document name.", "query": "SELECT document_name ,  access_count FROM documents ORDER BY document_name"}
{"question": "What are the names of all the documents, as well as the access counts of each, ordered alphabetically?", "query": "SELECT document_name ,  access_count FROM documents ORDER BY document_name"}
{"question": "Find the name of the document that has been accessed the greatest number of times, as well as the count of how many times it has been accessed?", "query": "SELECT document_name ,  access_count FROM documents ORDER BY access_count DESC LIMIT 1"}
{"question": "What is the name of the document which has been accessed the most times, as well as the number of times it has been accessed?", "query": "SELECT document_name ,  access_count FROM documents ORDER BY access_count DESC LIMIT 1"}
{"question": "Find the types of documents with more than 4 documents.", "query": "SELECT document_type_code FROM documents GROUP BY document_type_code HAVING count(*)  >  4"}
{"question": "What are the codes of types of documents of which there are for or more?", "query": "SELECT document_type_code FROM documents GROUP BY document_type_code HAVING count(*)  >  4"}
{"question": "Find the total access count of all documents in the most popular document type.", "query": "SELECT sum(access_count) FROM documents GROUP BY document_type_code ORDER BY count(*) DESC LIMIT 1"}
{"question": "What is the total access count of documents that are of the most common document type?", "query": "SELECT sum(access_count) FROM documents GROUP BY document_type_code ORDER BY count(*) DESC LIMIT 1"}
{"question": "What is the average access count of documents?", "query": "SELECT avg(access_count) FROM documents"}
{"question": "Find the average access count across all documents?", "query": "SELECT avg(access_count) FROM documents"}
{"question": "What is the structure of the document with the least number of accesses?", "query": "SELECT t2.document_structure_description FROM documents AS t1 JOIN document_structures AS t2 ON t1.document_structure_code  =  t2.document_structure_code GROUP BY t1.document_structure_code ORDER BY count(*) DESC LIMIT 1"}
{"question": "Return the structure description of the document that has been accessed the fewest number of times.", "query": "SELECT t2.document_structure_description FROM documents AS t1 JOIN document_structures AS t2 ON t1.document_structure_code  =  t2.document_structure_code GROUP BY t1.document_structure_code ORDER BY count(*) DESC LIMIT 1"}
{"question": "What is the type of the document named \"David CV\"?", "query": "SELECT document_type_code FROM documents WHERE document_name  =  \"David CV\""}
{"question": "Return the type code of the document named \"David CV\".", "query": "SELECT document_type_code FROM documents WHERE document_name  =  \"David CV\""}
{"question": "Find the list of documents that are both in the most three popular type and have the most three popular structure.", "query": "SELECT document_name FROM documents GROUP BY document_type_code ORDER BY count(*) DESC LIMIT 3 INTERSECT SELECT document_name FROM documents GROUP BY document_structure_code ORDER BY count(*) DESC LIMIT 3"}
{"question": "What are the names of documents that have both one of the three most common types and one of three most common structures?", "query": "SELECT document_name FROM documents GROUP BY document_type_code ORDER BY count(*) DESC LIMIT 3 INTERSECT SELECT document_name FROM documents GROUP BY document_structure_code ORDER BY count(*) DESC LIMIT 3"}
{"question": "What document types do have more than 10000 total access number.", "query": "SELECT document_type_code FROM documents GROUP BY document_type_code HAVING sum(access_count)  >  10000"}
{"question": "Return the codes of the document types that do not have a total access count of over 10000.", "query": "SELECT document_type_code FROM documents GROUP BY document_type_code HAVING sum(access_count)  >  10000"}
{"question": "What are all the section titles of the document named \"David CV\"?", "query": "SELECT t2.section_title FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code  =  t2.document_code WHERE t1.document_name  =  \"David CV\""}
{"question": "Give the section titles of the document with the name \"David CV\".", "query": "SELECT t2.section_title FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code  =  t2.document_code WHERE t1.document_name  =  \"David CV\""}
{"question": "Find all the name of documents without any sections.", "query": "SELECT document_name FROM documents WHERE document_code NOT IN (SELECT document_code FROM document_sections)"}
{"question": "What are the names of documents that do not have any sections?", "query": "SELECT document_name FROM documents WHERE document_code NOT IN (SELECT document_code FROM document_sections)"}
{"question": "List all the username and passwords of users with the most popular role.", "query": "SELECT user_name ,  password FROM users GROUP BY role_code ORDER BY count(*) DESC LIMIT 1"}
{"question": "What are the usernames and passwords of users that have the most common role?", "query": "SELECT user_name ,  password FROM users GROUP BY role_code ORDER BY count(*) DESC LIMIT 1"}
{"question": "Find the average access counts of documents with functional area \"Acknowledgement\".", "query": "SELECT avg(t1.access_count) FROM documents AS t1 JOIN document_functional_areas AS t2 ON t1.document_code  =  t2.document_code JOIN functional_areas AS t3 ON t2.functional_area_code  =  t3.functional_area_code WHERE t3.functional_area_description  =  \"Acknowledgement\""}
{"question": "What are the average access counts of documents that have the functional area description \"Acknowledgement\"?", "query": "SELECT avg(t1.access_count) FROM documents AS t1 JOIN document_functional_areas AS t2 ON t1.document_code  =  t2.document_code JOIN functional_areas AS t3 ON t2.functional_area_code  =  t3.functional_area_code WHERE t3.functional_area_description  =  \"Acknowledgement\""}
{"question": "Find names of the document without any images.", "query": "SELECT document_name FROM documents EXCEPT SELECT t1.document_name FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code  =  t2.document_code JOIN document_sections_images AS t3 ON t2.section_id  =  t3.section_id"}
{"question": "What are the names of documents that do not have any images?", "query": "SELECT document_name FROM documents EXCEPT SELECT t1.document_name FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code  =  t2.document_code JOIN document_sections_images AS t3 ON t2.section_id  =  t3.section_id"}
{"question": "What is the name of the document with the most number of sections?", "query": "SELECT t1.document_name FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code  =  t2.document_code GROUP BY t1.document_code ORDER BY count(*) DESC LIMIT 1"}
{"question": "Return the name of the document that has the most sections.", "query": "SELECT t1.document_name FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code  =  t2.document_code GROUP BY t1.document_code ORDER BY count(*) DESC LIMIT 1"}
{"question": "List all the document names which contains \"CV\".", "query": "SELECT document_name FROM documents WHERE document_name LIKE \"%CV%\""}
{"question": "What are the names of documents that contain the substring \"CV\"?", "query": "SELECT document_name FROM documents WHERE document_name LIKE \"%CV%\""}
{"question": "How many users are logged in?", "query": "SELECT count(*) FROM users WHERE user_login  =  1"}
{"question": "Count the number of users that are logged in.", "query": "SELECT count(*) FROM users WHERE user_login  =  1"}
{"question": "Find the description of the most popular role among the users that have logged in.", "query": "SELECT role_description FROM ROLES WHERE role_code  =  (SELECT role_code FROM users WHERE user_login  =  1 GROUP BY role_code ORDER BY count(*) DESC LIMIT 1)"}
{"question": "What is the description of the most popular role among users that have logged in?", "query": "SELECT role_description FROM ROLES WHERE role_code  =  (SELECT role_code FROM users WHERE user_login  =  1 GROUP BY role_code ORDER BY count(*) DESC LIMIT 1)"}
{"question": "Find the average access count of documents with the least popular structure.", "query": "SELECT avg(access_count) FROM documents GROUP BY document_structure_code ORDER BY count(*) ASC LIMIT 1"}
{"question": "What is the average access count of documents that have the least common structure?", "query": "SELECT avg(access_count) FROM documents GROUP BY document_structure_code ORDER BY count(*) ASC LIMIT 1"}
{"question": "List all the image name and URLs in the order of their names.", "query": "SELECT image_name ,  image_url FROM images ORDER BY image_name"}
{"question": "What are the names and urls of images, sorted alphabetically?", "query": "SELECT image_name ,  image_url FROM images ORDER BY image_name"}
{"question": "Find the number of users in each role.", "query": "SELECT count(*) ,  role_code FROM users GROUP BY role_code"}
{"question": "What are the different role codes for users, and how many users have each?", "query": "SELECT count(*) ,  role_code FROM users GROUP BY role_code"}
{"question": "What document types have more than 2 corresponding documents?", "query": "SELECT document_type_code FROM documents GROUP BY document_type_code HAVING count(*)  >  2"}
{"question": "Give the codes of document types that have more than 2 corresponding documents.", "query": "SELECT document_type_code FROM documents GROUP BY document_type_code HAVING count(*)  >  2"}
{"question": "How many companies are there?", "query": "SELECT count(*) FROM Companies"}
{"question": "Count the number of companies.", "query": "SELECT count(*) FROM Companies"}
{"question": "List the names of companies in descending order of market value.", "query": "SELECT name FROM Companies ORDER BY Market_Value_billion DESC"}
{"question": "Sort the company names in descending order of the company's market value.", "query": "SELECT name FROM Companies ORDER BY Market_Value_billion DESC"}
{"question": "What are the names of companies whose headquarters are not \"USA\"?", "query": "SELECT name FROM Companies WHERE Headquarters != 'USA'"}
{"question": "Find the names of the companies whose headquarters are not located in \"USA\".", "query": "SELECT name FROM Companies WHERE Headquarters != 'USA'"}
{"question": "What are the name and assets of each company, sorted in ascending order of company name?", "query": "SELECT name ,  Assets_billion FROM Companies ORDER BY name ASC"}
{"question": "List the name and assets of each company in ascending order of company name.", "query": "SELECT name ,  Assets_billion FROM Companies ORDER BY name ASC"}
{"question": "What are the average profits of companies?", "query": "SELECT avg(Profits_billion) FROM Companies"}
{"question": "Compute the average profits companies make.", "query": "SELECT avg(Profits_billion) FROM Companies"}
{"question": "What are the maximum and minimum sales of the companies whose industries are not \"Banking\".", "query": "SELECT max(Sales_billion) ,  min(Sales_billion) FROM Companies WHERE Industry != \"Banking\""}
{"question": "Find the maximum and minimum sales of the companies that are not in the \"Banking\" industry.", "query": "SELECT max(Sales_billion) ,  min(Sales_billion) FROM Companies WHERE Industry != \"Banking\""}
{"question": "How many different industries are the companies in?", "query": "SELECT count(DISTINCT Industry) FROM Companies"}
{"question": "Count the number of distinct company industries.", "query": "SELECT count(DISTINCT Industry) FROM Companies"}
{"question": "List the names of buildings in descending order of building height.", "query": "SELECT name FROM buildings ORDER BY Height DESC"}
{"question": "What are the names of buildings sorted in descending order of building height?", "query": "SELECT name FROM buildings ORDER BY Height DESC"}
{"question": "Find the stories of the building with the largest height.", "query": "SELECT Stories FROM buildings ORDER BY Height DESC LIMIT 1"}
{"question": "What is the stories of highest building?", "query": "SELECT Stories FROM buildings ORDER BY Height DESC LIMIT 1"}
{"question": "List the name of a building along with the name of a company whose office is in the building.", "query": "SELECT T3.name ,  T2.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id  =  T2.id JOIN Companies AS T3 ON T1.company_id  =  T3.id"}
{"question": "For each company, return the company name and the name of the building its office is located in.", "query": "SELECT T3.name ,  T2.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id  =  T2.id JOIN Companies AS T3 ON T1.company_id  =  T3.id"}
{"question": "Show the names of the buildings that have more than one company offices.", "query": "SELECT T2.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id  =  T2.id JOIN Companies AS T3 ON T1.company_id  =  T3.id GROUP BY T1.building_id HAVING COUNT(*)  >  1"}
{"question": "Which buildings have more than one company offices? Give me the building names.", "query": "SELECT T2.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id  =  T2.id JOIN Companies AS T3 ON T1.company_id  =  T3.id GROUP BY T1.building_id HAVING COUNT(*)  >  1"}
{"question": "Show the name of the building that has the most company offices.", "query": "SELECT T2.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id  =  T2.id JOIN Companies AS T3 ON T1.company_id  =  T3.id GROUP BY T1.building_id ORDER BY COUNT(*) DESC LIMIT 1"}
{"question": "Which building has the largest number of company offices? Give me the building name.", "query": "SELECT T2.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id  =  T2.id JOIN Companies AS T3 ON T1.company_id  =  T3.id GROUP BY T1.building_id ORDER BY COUNT(*) DESC LIMIT 1"}
{"question": "Please show the names of the buildings whose status is \"on-hold\", in ascending order of stories.", "query": "SELECT name FROM buildings WHERE Status  =  \"on-hold\" ORDER BY Stories ASC"}
{"question": "Find the names of the buildings in \"on-hold\" status, and sort them in ascending order of building stories.", "query": "SELECT name FROM buildings WHERE Status  =  \"on-hold\" ORDER BY Stories ASC"}
{"question": "Please show each industry and the corresponding number of companies in that industry.", "query": "SELECT Industry ,  COUNT(*) FROM Companies GROUP BY Industry"}
{"question": "Whah are the name of each industry and the number of companies in that industry?", "query": "SELECT Industry ,  COUNT(*) FROM Companies GROUP BY Industry"}
{"question": "Please show the industries of companies in descending order of the number of companies.", "query": "SELECT Industry FROM Companies GROUP BY Industry ORDER BY COUNT(*) DESC"}
{"question": "Sort all the industries in descending order of the count of companies in each industry", "query": "SELECT Industry FROM Companies GROUP BY Industry ORDER BY COUNT(*) DESC"}
{"question": "List the industry shared by the most companies.", "query": "SELECT Industry FROM Companies GROUP BY Industry ORDER BY COUNT(*) DESC LIMIT 1"}
{"question": "Which industry has the most companies?", "query": "SELECT Industry FROM Companies GROUP BY Industry ORDER BY COUNT(*) DESC LIMIT 1"}
{"question": "List the names of buildings that have no company office.", "query": "SELECT name FROM buildings WHERE id NOT IN (SELECT building_id FROM Office_locations)"}
{"question": "Which buildings do not have any company office? Give me the building names.", "query": "SELECT name FROM buildings WHERE id NOT IN (SELECT building_id FROM Office_locations)"}
{"question": "Show the industries shared by companies whose headquarters are \"USA\" and companies whose headquarters are \"China\".", "query": "SELECT Industry FROM Companies WHERE Headquarters  =  \"USA\" INTERSECT SELECT Industry FROM Companies WHERE Headquarters  =  \"China\""}
{"question": "Which industries have both companies with headquarter in \"USA\" and companies with headquarter in \"China\"?", "query": "SELECT Industry FROM Companies WHERE Headquarters  =  \"USA\" INTERSECT SELECT Industry FROM Companies WHERE Headquarters  =  \"China\""}
{"question": "Find the number of companies whose industry is \"Banking\" or \"Conglomerate\",", "query": "SELECT count(*) FROM Companies WHERE Industry  =  \"Banking\" OR Industry  =  \"Conglomerate\""}
{"question": "How many companies are in either \"Banking\" industry or \"Conglomerate\" industry?", "query": "SELECT count(*) FROM Companies WHERE Industry  =  \"Banking\" OR Industry  =  \"Conglomerate\""}
{"question": "Show the headquarters shared by more than two companies.", "query": "SELECT Headquarters FROM Companies GROUP BY Headquarters HAVING COUNT(*)  >  2"}
{"question": "Which headquarter locations are used by more than 2 companies?", "query": "SELECT Headquarters FROM Companies GROUP BY Headquarters HAVING COUNT(*)  >  2"}
{"question": "How many products are there?", "query": "SELECT count(*) FROM Products"}
{"question": "List the name of products in ascending order of price.", "query": "SELECT Product_Name FROM Products ORDER BY Product_Price ASC"}
{"question": "What are the names and type codes of products?", "query": "SELECT Product_Name ,  Product_Type_Code FROM Products"}
{"question": "Show the prices of the products named \"Dining\" or \"Trading Policy\".", "query": "SELECT Product_Price FROM Products WHERE Product_Name  =  \"Dining\" OR Product_Name  =  \"Trading Policy\""}
{"question": "What is the average price for products?", "query": "SELECT avg(Product_Price) FROM Products"}
{"question": "What is the name of the product with the highest price?", "query": "SELECT Product_Name FROM Products ORDER BY Product_Price DESC LIMIT 1"}
{"question": "Show different type codes of products and the number of products with each type code.", "query": "SELECT Product_Type_Code ,  COUNT(*) FROM Products GROUP BY Product_Type_Code"}
{"question": "Show the most common type code across products.", "query": "SELECT Product_Type_Code FROM Products GROUP BY Product_Type_Code ORDER BY COUNT(*) DESC LIMIT 1"}
{"question": "Show the product type codes that have at least two products.", "query": "SELECT Product_Type_Code FROM Products GROUP BY Product_Type_Code HAVING COUNT(*)  >=  2"}
{"question": "Show the product type codes that have both products with price higher than 4500 and products with price lower than 3000.", "query": "SELECT Product_Type_Code FROM Products WHERE Product_Price  >  4500 INTERSECT SELECT Product_Type_Code FROM Products WHERE Product_Price  <  3000"}
{"question": "Show the names of products and the number of events they are in.", "query": "SELECT T1.Product_Name ,  COUNT(*) FROM Products AS T1 JOIN Products_in_Events AS T2 ON T1.Product_ID  =  T2.Product_ID GROUP BY T1.Product_Name"}
{"question": "Show the names of products and the number of events they are in, sorted by the number of events in descending order.", "query": "SELECT T1.Product_Name ,  COUNT(*) FROM Products AS T1 JOIN Products_in_Events AS T2 ON T1.Product_ID  =  T2.Product_ID GROUP BY T1.Product_Name ORDER BY COUNT(*) DESC"}
{"question": "Show the names of products that are in at least two events.", "query": "SELECT T1.Product_Name FROM Products AS T1 JOIN Products_in_Events AS T2 ON T1.Product_ID  =  T2.Product_ID GROUP BY T1.Product_Name HAVING COUNT(*)  >=  2"}
{"question": "Show the names of products that are in at least two events in ascending alphabetical order of product name.", "query": "SELECT T1.Product_Name FROM Products AS T1 JOIN Products_in_Events AS T2 ON T1.Product_ID  =  T2.Product_ID GROUP BY T1.Product_Name HAVING COUNT(*)  >=  2 ORDER BY T1.Product_Name"}
{"question": "List the names of products that are not in any event.", "query": "SELECT Product_Name FROM Products WHERE Product_ID NOT IN (SELECT Product_ID FROM Products_in_Events)"}
{"question": "How many artworks are there?", "query": "SELECT count(*) FROM artwork"}
{"question": "List the name of artworks in ascending alphabetical order.", "query": "SELECT Name FROM artwork ORDER BY Name ASC"}
{"question": "List the name of artworks whose type is not \"Program Talent Show\".", "query": "SELECT Name FROM artwork WHERE TYPE != \"Program Talent Show\""}
{"question": "What are the names and locations of festivals?", "query": "SELECT Festival_Name ,  LOCATION FROM festival_detail"}
{"question": "What are the names of the chairs of festivals, sorted in ascending order of the year held?", "query": "SELECT Chair_Name FROM festival_detail ORDER BY YEAR ASC"}
{"question": "What is the location of the festival with the largest number of audience?", "query": "SELECT LOCATION FROM festival_detail ORDER BY Num_of_Audience DESC LIMIT 1"}
{"question": "What are the names of festivals held in year 2007?", "query": "SELECT Festival_Name FROM festival_detail WHERE YEAR  =  2007"}
{"question": "What is the average number of audience for festivals?", "query": "SELECT avg(Num_of_Audience) FROM festival_detail"}
{"question": "Show the names of the three most recent festivals.", "query": "SELECT Festival_Name FROM festival_detail ORDER BY YEAR DESC LIMIT 3"}
{"question": "For each nomination, show the name of the artwork and name of the festival where it is nominated.", "query": "SELECT T2.Name ,  T3.Festival_Name FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID  =  T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID  =  T3.Festival_ID"}
{"question": "Show distinct types of artworks that are nominated in festivals in 2007.", "query": "SELECT DISTINCT T2.Type FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID  =  T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID  =  T3.Festival_ID WHERE T3.Year  =  2007"}
{"question": "Show the names of artworks in ascending order of the year they are nominated in.", "query": "SELECT T2.Name FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID  =  T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID  =  T3.Festival_ID ORDER BY T3.Year"}
{"question": "Show the names of festivals that have nominated artworks of type \"Program Talent Show\".", "query": "SELECT T3.Festival_Name FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID  =  T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID  =  T3.Festival_ID WHERE T2.Type  =  \"Program Talent Show\""}
{"question": "Show the ids and names of festivals that have at least two nominations for artworks.", "query": "SELECT T1.Festival_ID ,  T3.Festival_Name FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID  =  T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID  =  T3.Festival_ID GROUP BY T1.Festival_ID HAVING COUNT(*)  >=  2"}
{"question": "Show the id, name of each festival and the number of artworks it has nominated.", "query": "SELECT T1.Festival_ID ,  T3.Festival_Name ,  COUNT(*) FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID  =  T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID  =  T3.Festival_ID GROUP BY T1.Festival_ID"}
{"question": "Please show different types of artworks with the corresponding number of artworks of each type.", "query": "SELECT TYPE ,  COUNT(*) FROM artwork GROUP BY TYPE"}
{"question": "List the most common type of artworks.", "query": "SELECT TYPE FROM artwork GROUP BY TYPE ORDER BY COUNT(*) DESC LIMIT 1"}
{"question": "List the year in which there are more than one festivals.", "query": "SELECT YEAR FROM festival_detail GROUP BY YEAR HAVING COUNT(*)  >  1"}
{"question": "List the name of artworks that are not nominated.", "query": "SELECT Name FROM Artwork WHERE Artwork_ID NOT IN (SELECT Artwork_ID FROM nomination)"}
{"question": "Show the number of audience in year 2008 or 2010.", "query": "SELECT Num_of_Audience FROM festival_detail WHERE YEAR  =  2008 OR YEAR  =  2010"}
{"question": "What are the total number of the audiences who visited any of the festivals?", "query": "SELECT sum(Num_of_Audience) FROM festival_detail"}
{"question": "In which year are there festivals both inside the 'United States' and outside the 'United States'?", "query": "SELECT YEAR FROM festival_detail WHERE LOCATION  =  'United States' INTERSECT SELECT YEAR FROM festival_detail WHERE LOCATION != 'United States'"}
{"question": "How many premises are there?", "query": "SELECT count(*) FROM premises"}
{"question": "What are all the distinct premise types?", "query": "SELECT DISTINCT premises_type FROM premises"}
{"question": "Find the types and details for all premises and order by the premise type.", "query": "SELECT premises_type ,  premise_details FROM premises ORDER BY premises_type"}
{"question": "Show each premise type and the number of premises in that type.", "query": "SELECT premises_type ,  count(*) FROM premises GROUP BY premises_type"}
{"question": "Show all distinct product categories along with the number of mailshots in each category.", "query": "SELECT product_category ,  count(*) FROM mailshot_campaigns GROUP BY product_category"}
{"question": "Show the name and phone of the customer without any mailshot.", "query": "SELECT customer_name ,  customer_phone FROM customers WHERE customer_id NOT IN (SELECT customer_id FROM mailshot_customers)"}
{"question": "Show the name and phone for customers with a mailshot with outcome code 'No Response'.", "query": "SELECT T1.customer_name ,  T1.customer_phone FROM customers AS T1 JOIN mailshot_customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.outcome_code  =  'No Response'"}
{"question": "Show the outcome code of mailshots along with the number of mailshots in each outcome code.", "query": "SELECT outcome_code ,  count(*) FROM mailshot_customers GROUP BY outcome_code"}
{"question": "Show the names of customers who have at least 2 mailshots with outcome code 'Order'.", "query": "SELECT T2.customer_name FROM mailshot_customers AS T1 JOIN customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE outcome_code  =  'Order' GROUP BY T1.customer_id HAVING count(*)  >=  2"}
{"question": "Show the names of customers who have the most mailshots.", "query": "SELECT T2.customer_name FROM mailshot_customers AS T1 JOIN customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "What are the name and payment method of customers who have both mailshots in 'Order' outcome and mailshots in 'No Response' outcome.", "query": "SELECT T2.customer_name ,  T2.payment_method FROM mailshot_customers AS T1 JOIN customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.outcome_code  =  'Order' INTERSECT SELECT T2.customer_name ,  T2.payment_method FROM mailshot_customers AS T1 JOIN customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.outcome_code  =  'No Response'"}
{"question": "Show the premise type and address type code for all customer addresses.", "query": "SELECT T2.premises_type ,  T1.address_type_code FROM customer_addresses AS T1 JOIN premises AS T2 ON T1.premise_id  =  T2.premise_id"}
{"question": "What are the distinct address type codes for all customer addresses?", "query": "SELECT DISTINCT address_type_code FROM customer_addresses"}
{"question": "Show the shipping charge and customer id for customer orders with order status Cancelled or Paid.", "query": "SELECT order_shipping_charges ,  customer_id FROM customer_orders WHERE order_status_code  =  'Cancelled' OR order_status_code  =  'Paid'"}
{"question": "Show the names of customers having an order with shipping method FedEx and order status Paid.", "query": "SELECT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE shipping_method_code  =  'FedEx' AND order_status_code  =  'Paid'"}
{"question": "Count the number of courses.", "query": "SELECT count(*) FROM COURSE"}
{"question": "How many courses have more than 2 credits?", "query": "SELECT count(*) FROM COURSE WHERE Credits  >  2"}
{"question": "Count the number of courses with more than 2 credits.", "query": "SELECT count(*) FROM COURSE WHERE Credits  >  2"}
{"question": "List all names of courses with 1 credit?", "query": "SELECT CName FROM COURSE WHERE Credits  =  1"}
{"question": "What are the names of courses with 1 credit?", "query": "SELECT CName FROM COURSE WHERE Credits  =  1"}
{"question": "Which courses are taught on days MTW?", "query": "SELECT CName FROM COURSE WHERE Days  =  \"MTW\""}
{"question": "What are the course names for courses taught on MTW?", "query": "SELECT CName FROM COURSE WHERE Days  =  \"MTW\""}
{"question": "What is the number of departments in Division \"AS\"?", "query": "SELECT count(*) FROM DEPARTMENT WHERE Division  =  \"AS\""}
{"question": "How many departments are in the division AS?", "query": "SELECT count(*) FROM DEPARTMENT WHERE Division  =  \"AS\""}
{"question": "What are the phones of departments in Room 268?", "query": "SELECT DPhone FROM DEPARTMENT WHERE Room  =  268"}
{"question": "Give the phones for departments in room 268.", "query": "SELECT DPhone FROM DEPARTMENT WHERE Room  =  268"}
{"question": "Find the number of students that have at least one grade \"B\".", "query": "SELECT COUNT(DISTINCT StuID) FROM ENROLLED_IN WHERE Grade  =  \"B\""}
{"question": "How many students have had at least one \"B\" grade?", "query": "SELECT COUNT(DISTINCT StuID) FROM ENROLLED_IN WHERE Grade  =  \"B\""}
{"question": "Find the max and min grade point for all letter grade.", "query": "SELECT max(gradepoint) ,  min(gradepoint) FROM GRADECONVERSION"}
{"question": "What are the maximum and minumum grade points?", "query": "SELECT max(gradepoint) ,  min(gradepoint) FROM GRADECONVERSION"}
{"question": "Find the first names of students whose first names contain letter \"a\".", "query": "SELECT DISTINCT Fname FROM STUDENT WHERE Fname LIKE '%a%'"}
{"question": "What are the first names for students who have an \"a\" in their first name?", "query": "SELECT DISTINCT Fname FROM STUDENT WHERE Fname LIKE '%a%'"}
{"question": "Find the first names and last names of male (sex is M) faculties who live in building NEB.", "query": "SELECT Fname ,  Lname FROM FACULTY WHERE sex  =  \"M\" AND Building  =  \"NEB\""}
{"question": "What are the full names of faculties with sex M and who live in building NEB?", "query": "SELECT Fname ,  Lname FROM FACULTY WHERE sex  =  \"M\" AND Building  =  \"NEB\""}
{"question": "Find the rooms of faculties with rank professor who live in building NEB.", "query": "SELECT Room FROM FACULTY WHERE Rank  =  \"Professor\" AND Building  =  \"NEB\""}
{"question": "What are the rooms for members of the faculty who are professors and who live in building NEB?", "query": "SELECT Room FROM FACULTY WHERE Rank  =  \"Professor\" AND Building  =  \"NEB\""}
{"question": "Find the department name that is in Building \"Mergenthaler\".", "query": "SELECT DName FROM DEPARTMENT WHERE Building  =  \"Mergenthaler\""}
{"question": "What is the name of the department in the Building Mergenthaler?", "query": "SELECT DName FROM DEPARTMENT WHERE Building  =  \"Mergenthaler\""}
{"question": "List all information about courses sorted by credits in the ascending order.", "query": "SELECT * FROM COURSE ORDER BY Credits"}
{"question": "What is all the information about courses, ordered by credits ascending?", "query": "SELECT * FROM COURSE ORDER BY Credits"}
{"question": "List the course name of courses sorted by credits.", "query": "SELECT CName FROM COURSE ORDER BY Credits"}
{"question": "What are the course names, ordered by credits?", "query": "SELECT CName FROM COURSE ORDER BY Credits"}
{"question": "Find the first name of students in the descending order of age.", "query": "SELECT Fname FROM STUDENT ORDER BY Age DESC"}
{"question": "What are the first names of students, ordered by age from greatest to least?", "query": "SELECT Fname FROM STUDENT ORDER BY Age DESC"}
{"question": "Find the last name of female (sex is F) students in the descending order of age.", "query": "SELECT LName FROM STUDENT WHERE Sex  =  \"F\" ORDER BY Age DESC"}
{"question": "What are the last names of female students, ordered by age descending?", "query": "SELECT LName FROM STUDENT WHERE Sex  =  \"F\" ORDER BY Age DESC"}
{"question": "Find the last names of faculties in building Barton in alphabetic order.", "query": "SELECT Lname FROM FACULTY WHERE Building  =  \"Barton\" ORDER BY Lname"}
{"question": "What are the last names of faculty in building Barton, sorted by last name?", "query": "SELECT Lname FROM FACULTY WHERE Building  =  \"Barton\" ORDER BY Lname"}
{"question": "Find the first names of faculties of rank Professor in alphabetic order.", "query": "SELECT Fname FROM FACULTY WHERE Rank  =  \"Professor\" ORDER BY Fname"}
{"question": "What are the first names for all faculty professors, ordered by first name?", "query": "SELECT Fname FROM FACULTY WHERE Rank  =  \"Professor\" ORDER BY Fname"}
{"question": "Find the name of the department that has the biggest number of students minored in?", "query": "SELECT T1.DName FROM DEPARTMENT AS T1 JOIN MINOR_IN AS T2 ON T1.DNO  =  T2.DNO GROUP BY T2.DNO ORDER BY count(*) DESC LIMIT 1"}
{"question": "What is the name of the department with the most students minoring in it?", "query": "SELECT T1.DName FROM DEPARTMENT AS T1 JOIN MINOR_IN AS T2 ON T1.DNO  =  T2.DNO GROUP BY T2.DNO ORDER BY count(*) DESC LIMIT 1"}
{"question": "Find the name of the department that has no students minored in?", "query": "SELECT DName FROM DEPARTMENT EXCEPT SELECT T1.DName FROM DEPARTMENT AS T1 JOIN MINOR_IN AS T2 ON T1.DNO  =  T2.DNO"}
{"question": "What is the name of the department htat has no students minoring in it?", "query": "SELECT DName FROM DEPARTMENT EXCEPT SELECT T1.DName FROM DEPARTMENT AS T1 JOIN MINOR_IN AS T2 ON T1.DNO  =  T2.DNO"}
{"question": "Find the name of the department that has the fewest members.", "query": "SELECT T1.DName FROM DEPARTMENT AS T1 JOIN MEMBER_OF AS T2 ON T1.DNO  =  T2.DNO GROUP BY T2.DNO ORDER BY count(*) ASC LIMIT 1"}
{"question": "What is the name of the department with the fewest members?", "query": "SELECT T1.DName FROM DEPARTMENT AS T1 JOIN MEMBER_OF AS T2 ON T1.DNO  =  T2.DNO GROUP BY T2.DNO ORDER BY count(*) ASC LIMIT 1"}
{"question": "Find the rank of the faculty that the fewest faculties belong to.", "query": "SELECT Rank FROM FACULTY GROUP BY Rank ORDER BY count(*) ASC LIMIT 1"}
{"question": "What is the least common faculty rank?", "query": "SELECT Rank FROM FACULTY GROUP BY Rank ORDER BY count(*) ASC LIMIT 1"}
{"question": "What are the first and last names of the instructors who teach the top 3 number of courses?", "query": "SELECT T2.Fname ,  T2.Lname FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor  =  T2.FacID GROUP BY T1.Instructor ORDER BY count(*) DESC LIMIT 3"}
{"question": "What are the full names of the 3 instructors who teach the most courses?", "query": "SELECT T2.Fname ,  T2.Lname FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor  =  T2.FacID GROUP BY T1.Instructor ORDER BY count(*) DESC LIMIT 3"}
{"question": "Which building does the instructor who teaches the most number of courses live in?", "query": "SELECT T2.Building FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor  =  T2.FacID GROUP BY T1.Instructor ORDER BY count(*) DESC LIMIT 1"}
{"question": "Give the building that the instructor who teaches the greatest number of courses lives in.", "query": "SELECT T2.Building FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor  =  T2.FacID GROUP BY T1.Instructor ORDER BY count(*) DESC LIMIT 1"}
{"question": "What are the name of courses that have at least five enrollments?", "query": "SELECT T1.CName FROM COURSE AS T1 JOIN ENROLLED_IN AS T2 ON T1.CID  =  T2.CID GROUP BY T2.CID HAVING COUNT(*)  >=  5"}
{"question": "Give the names of the courses with at least five enrollments.", "query": "SELECT T1.CName FROM COURSE AS T1 JOIN ENROLLED_IN AS T2 ON T1.CID  =  T2.CID GROUP BY T2.CID HAVING COUNT(*)  >=  5"}
{"question": "Find the first name and last name of the instructor of course that has course name", "query": "SELECT T2.Fname ,  T2.Lname FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor  =  T2.FacID WHERE T1.CName  =  \"COMPUTER LITERACY\""}
{"question": "What is the full name of the instructor who has a course named COMPUTER LITERACY?", "query": "SELECT T2.Fname ,  T2.Lname FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor  =  T2.FacID WHERE T1.CName  =  \"COMPUTER LITERACY\""}
{"question": "Find the department name and room of the course INTRODUCTION TO COMPUTER SCIENCE.", "query": "SELECT T2.Dname ,  T2.Room FROM COURSE AS T1 JOIN DEPARTMENT AS T2 ON T1.DNO  =  T2.DNO WHERE T1.CName  =  \"INTRODUCTION TO COMPUTER SCIENCE\""}
{"question": "What are the department name and room for the course INTRODUCTION TO COMPUTER SCIENCE?", "query": "SELECT T2.Dname ,  T2.Room FROM COURSE AS T1 JOIN DEPARTMENT AS T2 ON T1.DNO  =  T2.DNO WHERE T1.CName  =  \"INTRODUCTION TO COMPUTER SCIENCE\""}
{"question": "Find the student first and last names and grade points of all enrollments.", "query": "SELECT T3.Fname ,  T3.LName ,  T2.gradepoint FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade  =  T2.lettergrade AND T1.StuID  =  T3.StuID"}
{"question": "What are the full names and gradepoints for all enrollments?", "query": "SELECT T3.Fname ,  T3.LName ,  T2.gradepoint FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade  =  T2.lettergrade AND T1.StuID  =  T3.StuID"}
{"question": "Find the distinct student first names of all students that have grade point at least 3.8 in one course.", "query": "SELECT DISTINCT T3.Fname FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade  =  T2.lettergrade AND T1.StuID  =  T3.StuID WHERE T2.gradepoint  >=  3.8"}
{"question": "What are the distinct first names for students with a grade point of 3.8 or above in at least one course?", "query": "SELECT DISTINCT T3.Fname FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade  =  T2.lettergrade AND T1.StuID  =  T3.StuID WHERE T2.gradepoint  >=  3.8"}
{"question": "Find the full names of faculties who are members of department with department number 520.", "query": "SELECT T1.Fname ,  T1.Lname FROM FACULTY AS T1 JOIN MEMBER_OF AS T2 ON T1.FacID  =  T2.FacID WHERE T2.DNO  =  520"}
{"question": "What are the full names of faculty members who are a part of department 520?", "query": "SELECT T1.Fname ,  T1.Lname FROM FACULTY AS T1 JOIN MEMBER_OF AS T2 ON T1.FacID  =  T2.FacID WHERE T2.DNO  =  520"}
{"question": "What are the first names and last names of the students that minor in the department with DNO 140.", "query": "SELECT T2.Fname ,  T2.Lname FROM MINOR_IN AS T1 JOIN STUDENT AS T2 ON T1.StuID  =  T2.StuID WHERE T1.DNO  =  140"}
{"question": "What are the full names of students minoring in department 140?", "query": "SELECT T2.Fname ,  T2.Lname FROM MINOR_IN AS T1 JOIN STUDENT AS T2 ON T1.StuID  =  T2.StuID WHERE T1.DNO  =  140"}
{"question": "Find the last names of faculties who are members of computer science department.", "query": "SELECT T2.Lname FROM DEPARTMENT AS T1 JOIN FACULTY AS T2 ON T1.DNO  =  T3.DNO JOIN MEMBER_OF AS T3 ON T2.FacID  =  T3.FacID WHERE T1.DName  =  \"Computer Science\""}
{"question": "What are the last names of faculty who are part of the computer science department?", "query": "SELECT T2.Lname FROM DEPARTMENT AS T1 JOIN FACULTY AS T2 ON T1.DNO  =  T3.DNO JOIN MEMBER_OF AS T3 ON T2.FacID  =  T3.FacID WHERE T1.DName  =  \"Computer Science\""}
{"question": "Find the average grade point of student whose last name is Smith.", "query": "SELECT avg(T2.gradepoint) FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade  =  T2.lettergrade AND T1.StuID  =  T3.StuID WHERE T3.LName  =  \"Smith\""}
{"question": "What is the average gradepoint for students with the last name Smith?", "query": "SELECT avg(T2.gradepoint) FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade  =  T2.lettergrade AND T1.StuID  =  T3.StuID WHERE T3.LName  =  \"Smith\""}
{"question": "What is the maximum and minimum grade point of students who live in NYC?", "query": "SELECT max(T2.gradepoint) ,  min(T2.gradepoint) FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade  =  T2.lettergrade AND T1.StuID  =  T3.StuID WHERE T3.city_code  =  \"NYC\""}
{"question": "Give the maximum and minimum gradepoints for students living in NYC?", "query": "SELECT max(T2.gradepoint) ,  min(T2.gradepoint) FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade  =  T2.lettergrade AND T1.StuID  =  T3.StuID WHERE T3.city_code  =  \"NYC\""}
{"question": "Find the names of courses that have either 3 credits or 1 credit but 4 hours.", "query": "SELECT CName FROM COURSE WHERE Credits  =  3 UNION SELECT CName FROM COURSE WHERE Credits  =  1 AND Hours  =  4"}
{"question": "What are the names of courses that give either 3 credits, or 1 credit and 4 hours?", "query": "SELECT CName FROM COURSE WHERE Credits  =  3 UNION SELECT CName FROM COURSE WHERE Credits  =  1 AND Hours  =  4"}
{"question": "Find the names of departments that are either in division AS or in division EN and in Building NEB.", "query": "SELECT DName FROM DEPARTMENT WHERE Division  =  \"AS\" UNION SELECT DName FROM DEPARTMENT WHERE Division  =  \"EN\" AND Building  =  \"NEB\""}
{"question": "What are the names of departments either in division AS, or in division EN and in building NEB?", "query": "SELECT DName FROM DEPARTMENT WHERE Division  =  \"AS\" UNION SELECT DName FROM DEPARTMENT WHERE Division  =  \"EN\" AND Building  =  \"NEB\""}
{"question": "Find the first name of students not enrolled in any course.", "query": "SELECT Fname FROM STUDENT WHERE StuID NOT IN (SELECT StuID FROM ENROLLED_IN)"}
{"question": "What are the first names of all students that are not enrolled in courses?", "query": "SELECT Fname FROM STUDENT WHERE StuID NOT IN (SELECT StuID FROM ENROLLED_IN)"}
{"question": "What are the ids of the top three products that were purchased in the largest amount?", "query": "SELECT product_id FROM product_suppliers ORDER BY total_amount_purchased DESC LIMIT 3"}
{"question": "Give the ids of the three products purchased in the largest amounts.", "query": "SELECT product_id FROM product_suppliers ORDER BY total_amount_purchased DESC LIMIT 3"}
{"question": "What are the product id and product type of the cheapest product?", "query": "SELECT product_id ,  product_type_code FROM products ORDER BY product_price LIMIT 1"}
{"question": "Give the id and product type of the product with the lowest price.", "query": "SELECT product_id ,  product_type_code FROM products ORDER BY product_price LIMIT 1"}
{"question": "Find the number of different product types.", "query": "SELECT count(DISTINCT product_type_code) FROM products"}
{"question": "Count the number of distinct product types.", "query": "SELECT count(DISTINCT product_type_code) FROM products"}
{"question": "Return the address of customer 10.", "query": "SELECT T1.address_details FROM addresses AS T1 JOIN customer_addresses AS T2 ON T1.address_id  =  T2.address_id WHERE T2.customer_id  =  10"}
{"question": "What is the address for the customer with id 10?", "query": "SELECT T1.address_details FROM addresses AS T1 JOIN customer_addresses AS T2 ON T1.address_id  =  T2.address_id WHERE T2.customer_id  =  10"}
{"question": "What are the staff ids and genders of all staffs whose job title is Department Manager?", "query": "SELECT T1.staff_id ,  T1.staff_gender FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.job_title_code  =  \"Department Manager\""}
{"question": "Return the staff ids and genders for any staff with the title Department Manager.", "query": "SELECT T1.staff_id ,  T1.staff_gender FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.job_title_code  =  \"Department Manager\""}
{"question": "For each payment method, return how many customers use it.", "query": "SELECT payment_method_code ,  count(*) FROM customers GROUP BY payment_method_code"}
{"question": "How many customers use each payment method?", "query": "SELECT payment_method_code ,  count(*) FROM customers GROUP BY payment_method_code"}
{"question": "What is the id of the product that was ordered the most often?", "query": "SELECT product_id FROM order_items GROUP BY product_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "Give the product id for the product that was ordered most frequently.", "query": "SELECT product_id FROM order_items GROUP BY product_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "What are the name, phone number and email address of the customer who made the largest number of orders?", "query": "SELECT T1.customer_name ,  T1.customer_phone ,  T1.customer_email FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T2.customer_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "Return the name, phone number and email address for the customer with the most orders.", "query": "SELECT T1.customer_name ,  T1.customer_phone ,  T1.customer_email FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T2.customer_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "What is the average price for each type of product?", "query": "SELECT product_type_code ,  avg(product_price) FROM products GROUP BY product_type_code"}
{"question": "Return the average price for each product type.", "query": "SELECT product_type_code ,  avg(product_price) FROM products GROUP BY product_type_code"}
{"question": "How many department stores does the store chain South have?", "query": "SELECT count(*) FROM department_stores AS T1 JOIN department_store_chain AS T2 ON T1.dept_store_chain_id  =  T2.dept_store_chain_id WHERE T2.dept_store_chain_name  =  \"South\""}
{"question": "Count the number of stores the chain South has.", "query": "SELECT count(*) FROM department_stores AS T1 JOIN department_store_chain AS T2 ON T1.dept_store_chain_id  =  T2.dept_store_chain_id WHERE T2.dept_store_chain_name  =  \"South\""}
{"question": "What is the name and job title of the staff who was assigned the latest?", "query": "SELECT T1.staff_name ,  T2.job_title_code FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id  =  T2.staff_id ORDER BY T2.date_assigned_to DESC LIMIT 1"}
{"question": "Return the name and job title of the staff with the latest date assigned.", "query": "SELECT T1.staff_name ,  T2.job_title_code FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id  =  T2.staff_id ORDER BY T2.date_assigned_to DESC LIMIT 1"}
{"question": "Give me the product type, name and price for all the products supplied by supplier id 3.", "query": "SELECT T2.product_type_code ,  T2.product_name ,  T2.product_price FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id  =  T2.product_id WHERE T1.supplier_id  =  3"}
{"question": "Return the product type, name, and price for products supplied by supplier 3.", "query": "SELECT T2.product_type_code ,  T2.product_name ,  T2.product_price FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id  =  T2.product_id WHERE T1.supplier_id  =  3"}
{"question": "Return the distinct name of customers whose order status is Pending, in the order of customer id.", "query": "SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_status_code  =  \"Pending\" ORDER BY T2.customer_id"}
{"question": "What are the distinct names of customers with an order status of Pending, sorted by customer id?", "query": "SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_status_code  =  \"Pending\" ORDER BY T2.customer_id"}
{"question": "Find the name and address of the customers who have both New and Pending orders.", "query": "SELECT T1.customer_name ,  T1.customer_address FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_status_code  =  \"New\" INTERSECT SELECT T1.customer_name ,  T1.customer_address FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_status_code  =  \"Pending\""}
{"question": "What are the names and addressed of customers who have both New and Pending orders?", "query": "SELECT T1.customer_name ,  T1.customer_address FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_status_code  =  \"New\" INTERSECT SELECT T1.customer_name ,  T1.customer_address FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_status_code  =  \"Pending\""}
{"question": "Return ids of all the products that are supplied by supplier id 2 and are more expensive than the average price of all products.", "query": "SELECT T1.product_id FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id  =  T2.product_id WHERE T1.supplier_id  =  2 AND T2.product_price  >  (SELECT avg(product_price) FROM products)"}
{"question": "What are the ids of products from the supplier with id 2, which are more expensive than the average price across all products?", "query": "SELECT T1.product_id FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id  =  T2.product_id WHERE T1.supplier_id  =  2 AND T2.product_price  >  (SELECT avg(product_price) FROM products)"}
{"question": "What is the id and name of the department store that has both marketing and managing department?", "query": "SELECT T2.dept_store_id ,  T2.store_name FROM departments AS T1 JOIN department_stores AS T2 ON T1.dept_store_id  =  T2.dept_store_id WHERE T1.department_name  =  \"marketing\" INTERSECT SELECT T2.dept_store_id ,  T2.store_name FROM departments AS T1 JOIN department_stores AS T2 ON T1.dept_store_id  =  T2.dept_store_id WHERE T1.department_name  =  \"managing\""}
{"question": "What are the ids and names of department stores with both marketing and managing departments?", "query": "SELECT T2.dept_store_id ,  T2.store_name FROM departments AS T1 JOIN department_stores AS T2 ON T1.dept_store_id  =  T2.dept_store_id WHERE T1.department_name  =  \"marketing\" INTERSECT SELECT T2.dept_store_id ,  T2.store_name FROM departments AS T1 JOIN department_stores AS T2 ON T1.dept_store_id  =  T2.dept_store_id WHERE T1.department_name  =  \"managing\""}
{"question": "What are the ids of the two department store chains with the largest number of department stores?", "query": "SELECT dept_store_chain_id FROM department_stores GROUP BY dept_store_chain_id ORDER BY count(*) DESC LIMIT 2"}
{"question": "Return the ids of the two department store chains with the most department stores.", "query": "SELECT dept_store_chain_id FROM department_stores GROUP BY dept_store_chain_id ORDER BY count(*) DESC LIMIT 2"}
{"question": "What is the id of the department with the least number of staff?", "query": "SELECT department_id FROM staff_department_assignments GROUP BY department_id ORDER BY count(*) LIMIT 1"}
{"question": "Return the id of the department with the fewest staff assignments.", "query": "SELECT department_id FROM staff_department_assignments GROUP BY department_id ORDER BY count(*) LIMIT 1"}
{"question": "For each product type, return the maximum and minimum price.", "query": "SELECT product_type_code ,  max(product_price) ,  min(product_price) FROM products GROUP BY product_type_code"}
{"question": "What are the maximum and minimum product prices for each product type?", "query": "SELECT product_type_code ,  max(product_price) ,  min(product_price) FROM products GROUP BY product_type_code"}
{"question": "Find the product type whose average price is higher than the average price of all products.", "query": "SELECT product_type_code FROM products GROUP BY product_type_code HAVING avg(product_price)  >  (SELECT avg(product_price) FROM products)"}
{"question": "What is the code of the product type with an average price higher than the average price of all products?", "query": "SELECT product_type_code FROM products GROUP BY product_type_code HAVING avg(product_price)  >  (SELECT avg(product_price) FROM products)"}
{"question": "Find the id and name of the staff who has been assigned for the shortest period.", "query": "SELECT T1.staff_id ,  T1.staff_name FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id  =  T2.staff_id ORDER BY date_assigned_to - date_assigned_from LIMIT 1"}
{"question": "What is the id and name of the staff who has been assigned for the least amount of time?", "query": "SELECT T1.staff_id ,  T1.staff_name FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id  =  T2.staff_id ORDER BY date_assigned_to - date_assigned_from LIMIT 1"}
{"question": "Return the names and ids of all products whose price is between 600 and 700.", "query": "SELECT product_name ,  product_id FROM products WHERE product_price BETWEEN 600 AND 700"}
{"question": "What are the names and ids of products costing between 600 and 700?", "query": "SELECT product_name ,  product_id FROM products WHERE product_price BETWEEN 600 AND 700"}
{"question": "Find the ids of all distinct customers who made order after some orders that were Cancelled.", "query": "SELECT DISTINCT customer_id FROM Customer_Orders WHERE order_date  >  (SELECT min(order_date) FROM Customer_Orders WHERE order_status_code  =  \"Cancelled\")"}
{"question": "What are the distinct ids of customers who made an order after any order that was Cancelled?", "query": "SELECT DISTINCT customer_id FROM Customer_Orders WHERE order_date  >  (SELECT min(order_date) FROM Customer_Orders WHERE order_status_code  =  \"Cancelled\")"}
{"question": "What is id of the staff who had a Staff Department Assignment earlier than any Clerical Staff?", "query": "SELECT staff_id FROM Staff_Department_Assignments WHERE date_assigned_to  <  (SELECT max(date_assigned_to) FROM Staff_Department_Assignments WHERE job_title_code  =  'Clerical Staff')"}
{"question": "Return the id of the staff whose Staff Department Assignment was earlier than that of any Clerical Staff.", "query": "SELECT staff_id FROM Staff_Department_Assignments WHERE date_assigned_to  <  (SELECT max(date_assigned_to) FROM Staff_Department_Assignments WHERE job_title_code  =  'Clerical Staff')"}
{"question": "What are the names and ids of customers whose address contains TN?", "query": "SELECT customer_name ,  customer_id FROM customers WHERE customer_address LIKE \"%TN%\""}
{"question": "Return the names and ids of customers who have TN in their address.", "query": "SELECT customer_name ,  customer_id FROM customers WHERE customer_address LIKE \"%TN%\""}
{"question": "Return the name and gender of the staff who was assigned in 2016.", "query": "SELECT T1.staff_name ,  T1.staff_gender FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.date_assigned_from LIKE \"2016%\""}
{"question": "What are the names and genders of staff who were assigned in 2016?", "query": "SELECT T1.staff_name ,  T1.staff_gender FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.date_assigned_from LIKE \"2016%\""}
{"question": "List the name of staff who has been assigned multiple jobs.", "query": "SELECT T1.staff_name FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id  =  T2.staff_id GROUP BY T2.staff_id HAVING COUNT (*)  >  1"}
{"question": "What are the names of staff who have been assigned multiple jobs?", "query": "SELECT T1.staff_name FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id  =  T2.staff_id GROUP BY T2.staff_id HAVING COUNT (*)  >  1"}
{"question": "List the name and phone number of all suppliers in the alphabetical order of their addresses.", "query": "SELECT T1.supplier_name ,  T1.supplier_phone FROM Suppliers AS T1 JOIN supplier_addresses AS T2 ON T1.supplier_id  =  T2.supplier_id JOIN addresses AS T3 ON T2.address_id  =  T3.address_id ORDER BY T3.address_details"}
{"question": "What are the names and phone numbers for all suppliers, sorted in alphabetical order of their addressed?", "query": "SELECT T1.supplier_name ,  T1.supplier_phone FROM Suppliers AS T1 JOIN supplier_addresses AS T2 ON T1.supplier_id  =  T2.supplier_id JOIN addresses AS T3 ON T2.address_id  =  T3.address_id ORDER BY T3.address_details"}
{"question": "What are the phone numbers of all customers and suppliers.", "query": "SELECT customer_phone FROM customers UNION SELECT supplier_phone FROM suppliers"}
{"question": "Return the phone numbers for all customers and suppliers.", "query": "SELECT customer_phone FROM customers UNION SELECT supplier_phone FROM suppliers"}
{"question": "Return the ids of all products that were ordered more than three times or supplied more than 80000.", "query": "SELECT product_id FROM Order_Items GROUP BY product_id HAVING count(*)  >  3 UNION SELECT product_id FROM Product_Suppliers GROUP BY product_id HAVING sum(total_amount_purchased)  >  80000"}
{"question": "What are the ids of all products that were either ordered more than 3 times or have a cumulative amount purchased of above 80000?", "query": "SELECT product_id FROM Order_Items GROUP BY product_id HAVING count(*)  >  3 UNION SELECT product_id FROM Product_Suppliers GROUP BY product_id HAVING sum(total_amount_purchased)  >  80000"}
{"question": "What are id and name of the products whose price is lower than 600 or higher than 900?", "query": "SELECT product_id ,  product_name FROM products WHERE product_price  <  600 OR product_price  >  900"}
{"question": "Give the ids and names of products with price lower than 600 or higher than 900.", "query": "SELECT product_id ,  product_name FROM products WHERE product_price  <  600 OR product_price  >  900"}
{"question": "Find the id of suppliers whose average amount purchased for each product is above 50000 or below 30000.", "query": "SELECT supplier_id FROM Product_Suppliers GROUP BY supplier_id HAVING avg(total_amount_purchased)  >  50000 OR avg(total_amount_purchased)  <  30000"}
{"question": "What are the ids of suppliers which have an average amount purchased of above 50000 or below 30000?", "query": "SELECT supplier_id FROM Product_Suppliers GROUP BY supplier_id HAVING avg(total_amount_purchased)  >  50000 OR avg(total_amount_purchased)  <  30000"}
{"question": "What are the average amount purchased and value purchased for the supplier who supplies the most products.", "query": "SELECT avg(total_amount_purchased) ,  avg(total_value_purchased) FROM Product_Suppliers WHERE supplier_id  =  (SELECT supplier_id FROM Product_Suppliers GROUP BY supplier_id ORDER BY count(*) DESC LIMIT 1)"}
{"question": "Return the average total amount purchased and total value purchased for the supplier who supplies the greatest number of products.", "query": "SELECT avg(total_amount_purchased) ,  avg(total_value_purchased) FROM Product_Suppliers WHERE supplier_id  =  (SELECT supplier_id FROM Product_Suppliers GROUP BY supplier_id ORDER BY count(*) DESC LIMIT 1)"}
{"question": "What is the largest and smallest customer codes?", "query": "SELECT max(customer_code) ,  min(customer_code) FROM Customers"}
{"question": "Return the maximum and minimum customer codes.", "query": "SELECT max(customer_code) ,  min(customer_code) FROM Customers"}
{"question": "List the names of all the distinct customers who bought a keyboard.", "query": "SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN order_items AS T3 ON T2.order_id  =  T3.order_id JOIN products AS T4 ON T3.product_id  =  T4.product_id WHERE T4.product_name  =  \"keyboard\""}
{"question": "What are the distinct names of customers who have purchased a keyboard?", "query": "SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN order_items AS T3 ON T2.order_id  =  T3.order_id JOIN products AS T4 ON T3.product_id  =  T4.product_id WHERE T4.product_name  =  \"keyboard\""}
{"question": "List the names and phone numbers of all the distinct suppliers who supply red jeans.", "query": "SELECT DISTINCT T1.supplier_name ,  T1.supplier_phone FROM suppliers AS T1 JOIN product_suppliers AS T2 ON T1.supplier_id  =  T2.supplier_id JOIN products AS T3 ON T2.product_id  =  T3.product_id WHERE T3.product_name  =  \"red jeans\""}
{"question": "What are the distinct names and phone numbers for suppliers who have red jeans?", "query": "SELECT DISTINCT T1.supplier_name ,  T1.supplier_phone FROM suppliers AS T1 JOIN product_suppliers AS T2 ON T1.supplier_id  =  T2.supplier_id JOIN products AS T3 ON T2.product_id  =  T3.product_id WHERE T3.product_name  =  \"red jeans\""}
{"question": "What are the highest and lowest prices of products, grouped by and alphabetically ordered by product type?", "query": "SELECT max(product_price) ,  min(product_price) ,  product_type_code FROM products GROUP BY product_type_code ORDER BY product_type_code"}
{"question": "Give the maximum and minimum product prices for each product type, grouped and ordered by product type.", "query": "SELECT max(product_price) ,  min(product_price) ,  product_type_code FROM products GROUP BY product_type_code ORDER BY product_type_code"}
{"question": "List the order id, customer id for orders in Cancelled status, ordered by their order dates.", "query": "SELECT order_id ,  customer_id FROM customer_orders WHERE order_status_code  =   \"Cancelled\" ORDER BY order_date"}
{"question": "What are the order ids and customer ids for orders that have been Cancelled, sorted by their order dates?", "query": "SELECT order_id ,  customer_id FROM customer_orders WHERE order_status_code  =   \"Cancelled\" ORDER BY order_date"}
{"question": "Find the names of products that were bought by at least two distinct customers.", "query": "SELECT DISTINCT T3.product_name FROM customer_orders AS T1 JOIN order_items AS T2 ON T1.order_id  =  T2.order_id JOIN products AS T3 ON T2.product_id  =  T3.product_id GROUP BY T3.product_id HAVING COUNT (DISTINCT T1.customer_id)  >=  2"}
{"question": "What are the distinct names of products purchased by at least two different customers?", "query": "SELECT DISTINCT T3.product_name FROM customer_orders AS T1 JOIN order_items AS T2 ON T1.order_id  =  T2.order_id JOIN products AS T3 ON T2.product_id  =  T3.product_id GROUP BY T3.product_id HAVING COUNT (DISTINCT T1.customer_id)  >=  2"}
{"question": "Find the names of customers who have bought by at least three distinct products.", "query": "SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN order_items AS T3 ON T2.order_id  =  T3.order_id GROUP BY T1.customer_id HAVING COUNT (DISTINCT T3.product_id)  >=  3"}
{"question": "What are the distinct names of customers who have purchased at least three different products?", "query": "SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN order_items AS T3 ON T2.order_id  =  T3.order_id GROUP BY T1.customer_id HAVING COUNT (DISTINCT T3.product_id)  >=  3"}
{"question": "Find the name and gender of the staff who has been assigned the job of Sales Person but never Clerical Staff.", "query": "SELECT T1.staff_name ,  T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.job_title_code  =  \"Sales Person\" EXCEPT SELECT T1.staff_name ,  T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.job_title_code  =  \"Clerical Staff\""}
{"question": "What are the names and genders of staff who have held the title Sales Person, but never Clerical Staff?", "query": "SELECT T1.staff_name ,  T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.job_title_code  =  \"Sales Person\" EXCEPT SELECT T1.staff_name ,  T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.job_title_code  =  \"Clerical Staff\""}
{"question": "Find the id and name of customers whose address contains WY state and do not use credit card for payment.", "query": "SELECT customer_id ,  customer_name FROM customers WHERE customer_address LIKE \"%WY%\" AND payment_method_code != \"Credit Card\""}
{"question": "What are the ids and names of customers with addressed that contain WY and who do not use a credit card for payment?", "query": "SELECT customer_id ,  customer_name FROM customers WHERE customer_address LIKE \"%WY%\" AND payment_method_code != \"Credit Card\""}
{"question": "Find the average price of all product clothes.", "query": "SELECT avg(product_price) FROM products WHERE product_type_code  =  'Clothes'"}
{"question": "What is the average price of clothes?", "query": "SELECT avg(product_price) FROM products WHERE product_type_code  =  'Clothes'"}
{"question": "Find the name of the most expensive hardware product.", "query": "SELECT product_name FROM products WHERE product_type_code  =  'Hardware' ORDER BY product_price DESC LIMIT 1"}
{"question": "What is the name of the hardware product with the greatest price?", "query": "SELECT product_name FROM products WHERE product_type_code  =  'Hardware' ORDER BY product_price DESC LIMIT 1"}
{"question": "How many aircrafts are there?", "query": "SELECT count(*) FROM aircraft"}
{"question": "What is the number of aircraft?", "query": "SELECT count(*) FROM aircraft"}
{"question": "List the description of all aircrafts.", "query": "SELECT Description FROM aircraft"}
{"question": "What are the descriptions for the aircrafts?", "query": "SELECT Description FROM aircraft"}
{"question": "What is the average number of international passengers of all airports?", "query": "SELECT avg(International_Passengers) FROM airport"}
{"question": "What is the average number of international passengers for an airport?", "query": "SELECT avg(International_Passengers) FROM airport"}
{"question": "What are the number of international and domestic passengers of the airport named London \"Heathrow\"?", "query": "SELECT International_Passengers ,  Domestic_Passengers FROM airport WHERE Airport_Name  =  \"London Heathrow\""}
{"question": "How many international and domestic passengers are there in the airport London Heathrow?", "query": "SELECT International_Passengers ,  Domestic_Passengers FROM airport WHERE Airport_Name  =  \"London Heathrow\""}
{"question": "What are the total number of Domestic Passengers of airports that contain the word \"London\".", "query": "SELECT sum(Domestic_Passengers) FROM airport WHERE Airport_Name LIKE \"%London%\""}
{"question": "What are the total number of domestic passengers at all London airports?", "query": "SELECT sum(Domestic_Passengers) FROM airport WHERE Airport_Name LIKE \"%London%\""}
{"question": "What are the maximum and minimum number of transit passengers of all aiports.", "query": "SELECT max(Transit_Passengers) ,  min(Transit_Passengers) FROM airport"}
{"question": "What is the maximum and mininum number of transit passengers for all airports?", "query": "SELECT max(Transit_Passengers) ,  min(Transit_Passengers) FROM airport"}
{"question": "What are the name of pilots aged 25 or older?", "query": "SELECT Name FROM pilot WHERE Age  >=  25"}
{"question": "what is the name of every pilot who is at least 25 years old?", "query": "SELECT Name FROM pilot WHERE Age  >=  25"}
{"question": "List all pilot names in ascending alphabetical order.", "query": "SELECT Name FROM pilot ORDER BY Name ASC"}
{"question": "What are the names of the pilots in alphabetical order?", "query": "SELECT Name FROM pilot ORDER BY Name ASC"}
{"question": "List names of all pilot aged 30 or younger in descending alphabetical order.", "query": "SELECT Name FROM pilot WHERE Age  <=  30 ORDER BY Name DESC"}
{"question": "What are the names of all pilots 30 years old or young in descending alphabetical order?", "query": "SELECT Name FROM pilot WHERE Age  <=  30 ORDER BY Name DESC"}
{"question": "Please show the names of aircrafts associated with airport with name \"London Gatwick\".", "query": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T3.Airport_Name  =  \"London Gatwick\""}
{"question": "What are the names of all the aircrafts associated with London Gatwick airport?", "query": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T3.Airport_Name  =  \"London Gatwick\""}
{"question": "Please show the names and descriptions of aircrafts associated with airports that have a total number of passengers bigger than 10000000.", "query": "SELECT T1.Aircraft ,  T1.Description FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T3.Total_Passengers  >  10000000"}
{"question": "What are the names and descriptions of aircrafts associated with an airport that has more total passengers than 10000000?", "query": "SELECT T1.Aircraft ,  T1.Description FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T3.Total_Passengers  >  10000000"}
{"question": "What is the average total number of passengers of airports that are associated with aircraft \"Robinson R-22\"?", "query": "SELECT avg(T3.Total_Passengers) FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T1.Aircraft  =  \"Robinson R-22\""}
{"question": "What is the average total number of passengers for all airports that the aircraft \"Robinson R-22\" visits?", "query": "SELECT avg(T3.Total_Passengers) FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T1.Aircraft  =  \"Robinson R-22\""}
{"question": "Please list the location and the winning aircraft name.", "query": "SELECT T2.Location ,  T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID  =  T2.Winning_Aircraft"}
{"question": "What is the location and name of the winning aircraft?", "query": "SELECT T2.Location ,  T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID  =  T2.Winning_Aircraft"}
{"question": "List the name of the aircraft that has been named winning aircraft the most number of times.", "query": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID  =  T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft ORDER BY COUNT(*) DESC LIMIT 1"}
{"question": "What is the name of the aircraft that has won an award the most?", "query": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID  =  T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft ORDER BY COUNT(*) DESC LIMIT 1"}
{"question": "List the names of aircrafts and the number of times it won matches.", "query": "SELECT T1.Aircraft ,  COUNT(*) FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID  =  T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft"}
{"question": "For each aircraft that has won an award, what is its name and how many time has it won?", "query": "SELECT T1.Aircraft ,  COUNT(*) FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID  =  T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft"}
{"question": "List names of all pilot in descending order of age.", "query": "SELECT Name FROM pilot ORDER BY Age DESC"}
{"question": "What are the names of all pilots listed by descending age?", "query": "SELECT Name FROM pilot ORDER BY Age DESC"}
{"question": "List the names of aircrafts and that won matches at least twice.", "query": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID  =  T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft HAVING COUNT(*)  >=  2"}
{"question": "What are the names of all aircrafts that have won a match at least twice?", "query": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID  =  T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft HAVING COUNT(*)  >=  2"}
{"question": "List the names of aircrafts and that did not win any match.", "query": "SELECT Aircraft FROM aircraft WHERE Aircraft_ID NOT IN (SELECT Winning_Aircraft FROM MATCH)"}
{"question": "What are the names of all aicrafts that have never won any match?", "query": "SELECT Aircraft FROM aircraft WHERE Aircraft_ID NOT IN (SELECT Winning_Aircraft FROM MATCH)"}
{"question": "Show the names of aircrafts that are associated with both an airport named \"London Heathrow\" and an airport named \"London Gatwick\"", "query": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T3.Airport_Name  =  \"London Heathrow\" INTERSECT SELECT T1.Aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T3.Airport_Name  =  \"London Gatwick\""}
{"question": "What are the names of all aircrafts that are associated with both London Heathrow and Gatwick airports?", "query": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T3.Airport_Name  =  \"London Heathrow\" INTERSECT SELECT T1.Aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T3.Airport_Name  =  \"London Gatwick\""}
{"question": "Show all information on the airport that has the largest number of international passengers.", "query": "SELECT * FROM airport ORDER BY International_Passengers DESC LIMIT 1"}
{"question": "What is all the information on the airport with the largest number of international passengers?", "query": "SELECT * FROM airport ORDER BY International_Passengers DESC LIMIT 1"}
{"question": "find the name and age of the pilot who has won the most number of times among the pilots who are younger than 30.", "query": "SELECT t1.name ,  t1.age FROM pilot AS t1 JOIN MATCH AS t2 ON t1.pilot_id  =  t2.winning_pilot WHERE t1.age  <  30 GROUP BY t2.winning_pilot ORDER BY count(*) DESC LIMIT 1"}
{"question": "What is the name and age of the pilot younger than 30 who has won the most number of times?", "query": "SELECT t1.name ,  t1.age FROM pilot AS t1 JOIN MATCH AS t2 ON t1.pilot_id  =  t2.winning_pilot WHERE t1.age  <  30 GROUP BY t2.winning_pilot ORDER BY count(*) DESC LIMIT 1"}
{"question": "what is the name and age of the youngest winning pilot?", "query": "SELECT t1.name ,  t1.age FROM pilot AS t1 JOIN MATCH AS t2 ON t1.pilot_id  =  t2.winning_pilot ORDER BY t1.age LIMIT 1"}
{"question": "How old is the youngest winning pilot and what is their name?", "query": "SELECT t1.name ,  t1.age FROM pilot AS t1 JOIN MATCH AS t2 ON t1.pilot_id  =  t2.winning_pilot ORDER BY t1.age LIMIT 1"}
{"question": "find the name of pilots who did not win the matches held in the country of Australia.", "query": "SELECT name FROM pilot WHERE pilot_id NOT IN (SELECT Winning_Pilot  FROM MATCH WHERE country  =  'Australia')"}
{"question": "What are the names of the pilots that have not won any matches in Australia?", "query": "SELECT name FROM pilot WHERE pilot_id NOT IN (SELECT Winning_Pilot  FROM MATCH WHERE country  =  'Australia')"}
{"question": "How many residents does each property have? List property id and resident count.", "query": "SELECT T1.property_id ,  count(*) FROM properties AS T1 JOIN residents AS T2 ON T1.property_id  =  T2.property_id GROUP BY T1.property_id"}
{"question": "What is the distinct service types that are provided by the organization which has detail 'Denesik and Sons Party'?", "query": "SELECT DISTINCT T1.service_type_code FROM services AS T1 JOIN organizations AS T2 ON T1.organization_id  =  T2.organization_id WHERE T2.organization_details  =  'Denesik and Sons Party'"}
{"question": "How many services has each resident requested? List the resident id, details, and the count in descending order of the count.", "query": "SELECT T1.resident_id ,  T1.other_details ,  count(*) FROM Residents AS T1 JOIN Residents_Services AS T2 ON T1.resident_id  =  T2.resident_id GROUP BY T1.resident_id ORDER BY count(*) DESC"}
{"question": "What is the maximum number that a certain service is provided? List the service id, details and number.", "query": "SELECT T1.service_id ,  T1.service_details ,  count(*) FROM Services AS T1 JOIN Residents_Services AS T2 ON T1.service_id  =  T2.service_id GROUP BY T1.service_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "List the id and type of each thing, and the details of the organization that owns it.", "query": "SELECT T1.thing_id ,  T1.type_of_Thing_Code ,  T2.organization_details FROM Things AS T1 JOIN Organizations AS T2 ON T1.organization_id  =  T2.organization_id"}
{"question": "What are the id and details of the customers who have at least 3 events?", "query": "SELECT T1.customer_id ,  T1.customer_details FROM Customers AS T1 JOIN Customer_Events AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >=  3"}
{"question": "What is each customer's move in date, and the corresponding customer id and details?", "query": "SELECT T2.date_moved_in ,  T1.customer_id ,  T1.customer_details FROM Customers AS T1 JOIN Customer_Events AS T2 ON T1.customer_id  =  T2.customer_id"}
{"question": "Which events have the number of notes between one and three? List the event id and the property id.", "query": "SELECT T1.Customer_Event_ID  ,  T1.property_id FROM Customer_Events AS T1 JOIN Customer_Event_Notes AS T2 ON T1.Customer_Event_ID  =  T2.Customer_Event_ID GROUP BY T1.customer_event_id HAVING count(*) BETWEEN 1 AND 3"}
{"question": "What are the distinct id and type of the thing that has the status 'Close' or has a status record before the date '2017-06-19 02:59:21'", "query": "SELECT DISTINCT T2.thing_id ,  T2.Type_of_Thing_Code FROM Timed_Status_of_Things AS T1 JOIN Things AS T2 ON T1.thing_id  =  T2.thing_id WHERE T1.Status_of_Thing_Code  =  'Close' OR T1.Date_and_Date  <  '2017-06-19 02:59:21'"}
{"question": "How many distinct locations have the things with service detail 'Unsatisfied' been located in?", "query": "SELECT count(DISTINCT T2.Location_Code) FROM Things AS T1 JOIN Timed_Locations_of_Things AS T2 ON T1.thing_id  =  T2.thing_id WHERE T1.service_details  =  'Unsatisfied'"}
{"question": "How many different status codes of things are there?", "query": "SELECT count(DISTINCT Status_of_Thing_Code) FROM Timed_Status_of_Things"}
{"question": "Which organizations are not a parent organization of others? List the organization id.", "query": "SELECT organization_id FROM organizations EXCEPT SELECT parent_organization_id FROM organizations"}
{"question": "When is the last day any resident moved in?", "query": "SELECT max(date_moved_in) FROM Residents"}
{"question": "What are the resident details containing the substring 'Miss'?", "query": "SELECT other_details FROM Residents WHERE other_details LIKE '%Miss%'"}
{"question": "List the customer event id and the corresponding move in date and property id.", "query": "SELECT customer_event_id ,  date_moved_in ,  property_id FROM customer_events"}
{"question": "How many customers did not have any event?", "query": "SELECT count(*) FROM customers WHERE customer_id NOT IN ( SELECT customer_id FROM customer_events )"}
{"question": "What are the distinct move in dates of the residents?", "query": "SELECT DISTINCT date_moved_in FROM residents"}
{"question": "List the locations of schools in ascending order of enrollment.", "query": "SELECT LOCATION FROM school ORDER BY Enrollment ASC"}
{"question": "What is the list of school locations sorted in ascending order of school enrollment?", "query": "SELECT LOCATION FROM school ORDER BY Enrollment ASC"}
{"question": "List the locations of schools in descending order of founded year.", "query": "SELECT LOCATION FROM school ORDER BY Founded DESC"}
{"question": "What is the list of school locations sorted in descending order of school foundation year?", "query": "SELECT LOCATION FROM school ORDER BY Founded DESC"}
{"question": "What are the enrollments of schools whose denomination is not \"Catholic\"?", "query": "SELECT Enrollment FROM school WHERE Denomination != \"Catholic\""}
{"question": "List the enrollment for each school that does not have \"Catholic\" as denomination.", "query": "SELECT Enrollment FROM school WHERE Denomination != \"Catholic\""}
{"question": "What is the average enrollment of schools?", "query": "SELECT avg(Enrollment) FROM school"}
{"question": "Take the average of the school enrollment.", "query": "SELECT avg(Enrollment) FROM school"}
{"question": "What are the teams of the players, sorted in ascending alphabetical order?", "query": "SELECT Team FROM player ORDER BY Team ASC"}
{"question": "Find the team of each player and sort them in ascending alphabetical order.", "query": "SELECT Team FROM player ORDER BY Team ASC"}
{"question": "How many different positions of players are there?", "query": "SELECT count(DISTINCT POSITION) FROM player"}
{"question": "Count the number of distinct player positions.", "query": "SELECT count(DISTINCT POSITION) FROM player"}
{"question": "Find the team of the player of the highest age.", "query": "SELECT Team FROM player ORDER BY Age DESC LIMIT 1"}
{"question": "Which team has the oldest player?", "query": "SELECT Team FROM player ORDER BY Age DESC LIMIT 1"}
{"question": "List the teams of the players with the top 5 largest ages.", "query": "SELECT Team FROM player ORDER BY Age DESC LIMIT 5"}
{"question": "What are the teams that have the 5 oldest players?", "query": "SELECT Team FROM player ORDER BY Age DESC LIMIT 5"}
{"question": "For each player, show the team and the location of school they belong to.", "query": "SELECT T1.Team ,  T2.Location FROM player AS T1 JOIN school AS T2 ON T1.School_ID  =  T2.School_ID"}
{"question": "What are the team and the location of school each player belongs to?", "query": "SELECT T1.Team ,  T2.Location FROM player AS T1 JOIN school AS T2 ON T1.School_ID  =  T2.School_ID"}
{"question": "Show the locations of schools that have more than 1 player.", "query": "SELECT T2.Location FROM player AS T1 JOIN school AS T2 ON T1.School_ID  =  T2.School_ID GROUP BY T1.School_ID HAVING COUNT(*)  >  1"}
{"question": "Which schools have more than 1 player? Give me the school locations.", "query": "SELECT T2.Location FROM player AS T1 JOIN school AS T2 ON T1.School_ID  =  T2.School_ID GROUP BY T1.School_ID HAVING COUNT(*)  >  1"}
{"question": "Show the denomination of the school that has the most players.", "query": "SELECT T2.Denomination FROM player AS T1 JOIN school AS T2 ON T1.School_ID  =  T2.School_ID GROUP BY T1.School_ID ORDER BY COUNT(*) DESC LIMIT 1"}
{"question": "What is the denomination of the school the most players belong to?", "query": "SELECT T2.Denomination FROM player AS T1 JOIN school AS T2 ON T1.School_ID  =  T2.School_ID GROUP BY T1.School_ID ORDER BY COUNT(*) DESC LIMIT 1"}
{"question": "Show locations and nicknames of schools.", "query": "SELECT T1.Location ,  T2.Nickname FROM school AS T1 JOIN school_details AS T2 ON T1.School_ID  =  T2.School_ID"}
{"question": "What are the location and nickname of each school?", "query": "SELECT T1.Location ,  T2.Nickname FROM school AS T1 JOIN school_details AS T2 ON T1.School_ID  =  T2.School_ID"}
{"question": "Please show different denominations and the corresponding number of schools.", "query": "SELECT Denomination ,  COUNT(*) FROM school GROUP BY Denomination"}
{"question": "For each denomination, return the denomination and the count of schools with that denomination.", "query": "SELECT Denomination ,  COUNT(*) FROM school GROUP BY Denomination"}
{"question": "Please show different denominations and the corresponding number of schools in descending order.", "query": "SELECT Denomination ,  COUNT(*) FROM school GROUP BY Denomination ORDER BY COUNT(*) DESC"}
{"question": "Order denominations in descending order of the count of schools with the denomination. Return each denomination with the count of schools.", "query": "SELECT Denomination ,  COUNT(*) FROM school GROUP BY Denomination ORDER BY COUNT(*) DESC"}
{"question": "List the school color of the school that has the largest enrollment.", "query": "SELECT School_Colors FROM school ORDER BY Enrollment DESC LIMIT 1"}
{"question": "What is the school color of the school with the largest enrollment?", "query": "SELECT School_Colors FROM school ORDER BY Enrollment DESC LIMIT 1"}
{"question": "List the locations of schools that do not have any player.", "query": "SELECT LOCATION FROM school WHERE School_ID NOT IN (SELECT School_ID FROM Player)"}
{"question": "Which schools do not have any player? Give me the school locations.", "query": "SELECT LOCATION FROM school WHERE School_ID NOT IN (SELECT School_ID FROM Player)"}
{"question": "Show the denomination shared by schools founded before 1890 and schools founded after 1900", "query": "SELECT Denomination FROM school WHERE Founded  <  1890 INTERSECT SELECT Denomination FROM school WHERE Founded  >  1900"}
{"question": "What are the denominations used by both schools founded before 1890 and schools founded  after 1900?", "query": "SELECT Denomination FROM school WHERE Founded  <  1890 INTERSECT SELECT Denomination FROM school WHERE Founded  >  1900"}
{"question": "Show the nicknames of schools that are not in division 1.", "query": "SELECT Nickname FROM school_details WHERE Division != \"Division 1\""}
{"question": "What are the nicknames of schools whose division is not 1?", "query": "SELECT Nickname FROM school_details WHERE Division != \"Division 1\""}
{"question": "Show the denomination shared by more than one school.", "query": "SELECT Denomination FROM school GROUP BY Denomination HAVING COUNT(*)  >  1"}
{"question": "What are the denomination more than one school have?", "query": "SELECT Denomination FROM school GROUP BY Denomination HAVING COUNT(*)  >  1"}
{"question": "Find all the distinct district names ordered by city area in descending.", "query": "SELECT DISTINCT District_name FROM district ORDER BY city_area DESC"}
{"question": "What are the different district names in order of descending city area?", "query": "SELECT DISTINCT District_name FROM district ORDER BY city_area DESC"}
{"question": "Find the list of page size which have more than 3 product listed", "query": "SELECT max_page_size FROM product GROUP BY max_page_size HAVING count(*)  >  3"}
{"question": "What is the maximum page size for everything that has more than 3 products listed?", "query": "SELECT max_page_size FROM product GROUP BY max_page_size HAVING count(*)  >  3"}
{"question": "Find the name and population of district with population between 200000 and 2000000", "query": "SELECT District_name ,  City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000"}
{"question": "What are the district names and city populations for all districts that between 200,000 and 2,000,000 residents?", "query": "SELECT District_name ,  City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000"}
{"question": "Find the name all districts with city area greater than 10 or population larger than 100000", "query": "SELECT district_name FROM district WHERE city_area  >  10 OR City_Population  >  100000"}
{"question": "What are the names of all districts with a city area greater than 10 or have more than 100000 people living there?", "query": "SELECT district_name FROM district WHERE city_area  >  10 OR City_Population  >  100000"}
{"question": "Which district has the largest population?", "query": "SELECT district_name FROM district ORDER BY city_population DESC LIMIT 1"}
{"question": "What is the name of the district with the most residents?", "query": "SELECT district_name FROM district ORDER BY city_population DESC LIMIT 1"}
{"question": "Which district has the least area?", "query": "SELECT district_name FROM district ORDER BY city_area ASC LIMIT 1"}
{"question": "What is the name of the district with the smallest area?", "query": "SELECT district_name FROM district ORDER BY city_area ASC LIMIT 1"}
{"question": "Find the total population of the top 3 districts with the largest area.", "query": "SELECT sum(city_population) FROM district ORDER BY city_area DESC LIMIT 3"}
{"question": "What is the total number of residents for the districts with the 3 largest areas?", "query": "SELECT sum(city_population) FROM district ORDER BY city_area DESC LIMIT 3"}
{"question": "Find all types of store and number of them.", "query": "SELECT TYPE ,  count(*) FROM store GROUP BY TYPE"}
{"question": "For each type of store, how many of them are there?", "query": "SELECT TYPE ,  count(*) FROM store GROUP BY TYPE"}
{"question": "Find the names of all stores in Khanewal District.", "query": "SELECT t1.store_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id WHERE t3.district_name  =  \"Khanewal District\""}
{"question": "What are the names of all the stores located in Khanewal District?", "query": "SELECT t1.store_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id WHERE t3.district_name  =  \"Khanewal District\""}
{"question": "Find all the stores in the district with the most population.", "query": "SELECT t1.store_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id WHERE district_id  =  (SELECT district_id FROM district ORDER BY city_population DESC LIMIT 1)"}
{"question": "What are the names of all the stores in the largest district by population?", "query": "SELECT t1.store_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id WHERE district_id  =  (SELECT district_id FROM district ORDER BY city_population DESC LIMIT 1)"}
{"question": "Which city is the headquarter of the store named \"Blackville\" in?", "query": "SELECT t3.headquartered_city FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id WHERE t1.store_name  =  \"Blackville\""}
{"question": "What city is the headquarter of the store Blackville?", "query": "SELECT t3.headquartered_city FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id WHERE t1.store_name  =  \"Blackville\""}
{"question": "Find the number of stores in each city.", "query": "SELECT t3.headquartered_city ,  count(*) FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id GROUP BY t3.headquartered_city"}
{"question": "How many stores are headquarted in each city?", "query": "SELECT t3.headquartered_city ,  count(*) FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id GROUP BY t3.headquartered_city"}
{"question": "Find the city with the most number of stores.", "query": "SELECT t3.headquartered_city FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id GROUP BY t3.headquartered_city ORDER BY count(*) DESC LIMIT 1"}
{"question": "What is the city with the most number of flagship stores?", "query": "SELECT t3.headquartered_city FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id GROUP BY t3.headquartered_city ORDER BY count(*) DESC LIMIT 1"}
{"question": "What is the average pages per minute color?", "query": "SELECT avg(pages_per_minute_color) FROM product"}
{"question": "What is the average number of pages per minute color?", "query": "SELECT avg(pages_per_minute_color) FROM product"}
{"question": "What products are available at store named \"Miramichi\"?", "query": "SELECT t1.product FROM product AS t1 JOIN store_product AS t2 ON t1.product_id  =  t2.product_id JOIN store AS t3 ON t2.store_id  =  t3.store_id WHERE t3.store_name  =  \"Miramichi\""}
{"question": "What products are sold at the store named Miramichi?", "query": "SELECT t1.product FROM product AS t1 JOIN store_product AS t2 ON t1.product_id  =  t2.product_id JOIN store AS t3 ON t2.store_id  =  t3.store_id WHERE t3.store_name  =  \"Miramichi\""}
{"question": "Find products with max page size as \"A4\" and pages per minute color smaller than 5.", "query": "SELECT product FROM product WHERE max_page_size  =  \"A4\" AND pages_per_minute_color  <  5"}
{"question": "What are the products with the maximum page size A4 that also have a pages per minute color smaller than 5?", "query": "SELECT product FROM product WHERE max_page_size  =  \"A4\" AND pages_per_minute_color  <  5"}
{"question": "Find products with max page size as \"A4\" or pages per minute color smaller than 5.", "query": "SELECT product FROM product WHERE max_page_size  =  \"A4\" OR pages_per_minute_color  <  5"}
{"question": "What are the products with the maximum page size eqal to A4 or a pages per minute color less than 5?", "query": "SELECT product FROM product WHERE max_page_size  =  \"A4\" OR pages_per_minute_color  <  5"}
{"question": "Find all the product whose name contains the word \"Scanner\".", "query": "SELECT product FROM product WHERE product LIKE \"%Scanner%\""}
{"question": "What are all of the products whose name includes the substring \"Scanner\"?", "query": "SELECT product FROM product WHERE product LIKE \"%Scanner%\""}
{"question": "Find the most prominent max page size among all the products.", "query": "SELECT max_page_size FROM product GROUP BY max_page_size ORDER BY count(*) DESC LIMIT 1"}
{"question": "What is the most common maximum page size?", "query": "SELECT max_page_size FROM product GROUP BY max_page_size ORDER BY count(*) DESC LIMIT 1"}
{"question": "Find the name of the products that are not using the most frequently-used max page size.", "query": "SELECT product FROM product WHERE product != (SELECT max_page_size FROM product GROUP BY max_page_size ORDER BY count(*) DESC LIMIT 1)"}
{"question": "What are the names of all products that are not the most frequently-used maximum page size?", "query": "SELECT product FROM product WHERE product != (SELECT max_page_size FROM product GROUP BY max_page_size ORDER BY count(*) DESC LIMIT 1)"}
{"question": "Find the total population of the districts where the area is bigger than the average city area.", "query": "SELECT sum(city_population) FROM district WHERE city_area  >  (SELECT avg(city_area) FROM district)"}
{"question": "What is the total population for all the districts that have an area larger tahn the average city area?", "query": "SELECT sum(city_population) FROM district WHERE city_area  >  (SELECT avg(city_area) FROM district)"}
{"question": "Find the names of districts where have both city mall and village store type stores.", "query": "SELECT t3.District_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id WHERE t1.Type  =  \"City Mall\" INTERSECT SELECT t3.District_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id WHERE t1.Type  =  \"Village Store\""}
{"question": "What are the names of the districts that have both mall and village store style shops?", "query": "SELECT t3.District_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id WHERE t1.Type  =  \"City Mall\" INTERSECT SELECT t3.District_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id WHERE t1.Type  =  \"Village Store\""}
{"question": "What is the total enrollment number of all colleges?", "query": "SELECT sum(enr) FROM College"}
{"question": "How many students are enrolled in college?", "query": "SELECT sum(enr) FROM College"}
{"question": "What is the average enrollment number?", "query": "SELECT avg(enr) FROM College"}
{"question": "How many students, on average, does each college have enrolled?", "query": "SELECT avg(enr) FROM College"}
{"question": "How many colleges in total?", "query": "SELECT count(*) FROM College"}
{"question": "How many different colleges are there?", "query": "SELECT count(*) FROM College"}
{"question": "How many players have more than 1000 hours of training?", "query": "SELECT count(*) FROM Player WHERE HS  >  1000"}
{"question": "How many different players trained for more than 1000 hours?", "query": "SELECT count(*) FROM Player WHERE HS  >  1000"}
{"question": "How many colleges has more than 15000 students?", "query": "SELECT count(*) FROM College WHERE enr  >  15000"}
{"question": "What is the number of colleges with a student population greater than 15000?", "query": "SELECT count(*) FROM College WHERE enr  >  15000"}
{"question": "What is the average training hours of all players?", "query": "SELECT avg(HS) FROM Player"}
{"question": "How many hours do the players train on average?", "query": "SELECT avg(HS) FROM Player"}
{"question": "Find the name and training hours of players whose hours are below 1500.", "query": "SELECT pName ,  HS FROM Player WHERE HS  <  1500"}
{"question": "What are the names and number of hours spent training for each player who trains for less than 1500 hours?", "query": "SELECT pName ,  HS FROM Player WHERE HS  <  1500"}
{"question": "How many different colleges do attend the tryout test?", "query": "SELECT count(DISTINCT cName) FROM tryout"}
{"question": "How many different colleges were represented at tryouts?", "query": "SELECT count(DISTINCT cName) FROM tryout"}
{"question": "What are the unique types of player positions in the tryout?", "query": "SELECT count(DISTINCT pPos) FROM tryout"}
{"question": "What are the different types of player positions?", "query": "SELECT count(DISTINCT pPos) FROM tryout"}
{"question": "How many students got accepted after the tryout?", "query": "SELECT count(*) FROM tryout WHERE decision  =  'yes'"}
{"question": "How many students received a yes from tryouts?", "query": "SELECT count(*) FROM tryout WHERE decision  =  'yes'"}
{"question": "How many students whose are playing the role of goalie?", "query": "SELECT count(*) FROM tryout WHERE pPos  =  'goalie'"}
{"question": "What is the number of students playing as a goalie?", "query": "SELECT count(*) FROM tryout WHERE pPos  =  'goalie'"}
{"question": "Find the max, average and min training hours of all players.", "query": "SELECT avg(HS) ,  max(HS) ,  min(HS) FROM Player"}
{"question": "What is the average, maximum, and minimum for the number of hours spent training?", "query": "SELECT avg(HS) ,  max(HS) ,  min(HS) FROM Player"}
{"question": "What is average enrollment of colleges in the state FL?", "query": "SELECT avg(enr) FROM College WHERE state  =  'FL'"}
{"question": "What is average number of students enrolled in Florida colleges?", "query": "SELECT avg(enr) FROM College WHERE state  =  'FL'"}
{"question": "What are the names of players whose training hours is between 500 and 1500?", "query": "SELECT pName FROM Player WHERE HS BETWEEN 500 AND 1500"}
{"question": "What are the names of players who train between 500 and 1500 hours?", "query": "SELECT pName FROM Player WHERE HS BETWEEN 500 AND 1500"}
{"question": "Find the players whose names contain letter 'a'.", "query": "SELECT DISTINCT pName FROM Player WHERE pName LIKE '%a%'"}
{"question": "Who are the players that have names containing the letter a?", "query": "SELECT DISTINCT pName FROM Player WHERE pName LIKE '%a%'"}
{"question": "Find the name, enrollment of the colleges whose size is bigger than 10000 and location is in state LA.", "query": "SELECT cName ,  enr FROM College WHERE enr  >  10000 AND state = \"LA\""}
{"question": "What are the names and enrollment numbers for colleges that have more than 10000 enrolled and are located in Louisiana?", "query": "SELECT cName ,  enr FROM College WHERE enr  >  10000 AND state = \"LA\""}
{"question": "List all information about college sorted by enrollment number in the ascending order.", "query": "SELECT * FROM College ORDER BY enr"}
{"question": "What information do you have on colleges sorted by increasing enrollment numbers?", "query": "SELECT * FROM College ORDER BY enr"}
{"question": "List the name of the colleges whose enrollment is greater 18000 sorted by the college's name.", "query": "SELECT cName FROM College WHERE enr  >  18000 ORDER BY cName"}
{"question": "What is the name of every college in alphabetical order that has more than 18000 students enrolled?", "query": "SELECT cName FROM College WHERE enr  >  18000 ORDER BY cName"}
{"question": "Find the name of players whose card is yes in the descending order of training hours.", "query": "SELECT pName FROM Player WHERE yCard  =  'yes' ORDER BY HS DESC"}
{"question": "What are the name of the players who received a card in descending order of the hours of training?", "query": "SELECT pName FROM Player WHERE yCard  =  'yes' ORDER BY HS DESC"}
{"question": "Find the name of different colleges involved in the tryout in alphabetical order.", "query": "SELECT DISTINCT cName FROM tryout ORDER BY cName"}
{"question": "What are the different names of the colleges involved in the tryout in alphabetical order?", "query": "SELECT DISTINCT cName FROM tryout ORDER BY cName"}
{"question": "Which position is most popular among players in the tryout?", "query": "SELECT pPos FROM tryout GROUP BY pPos ORDER BY count(*) DESC LIMIT 1"}
{"question": "What was the most popular position at tryouts?", "query": "SELECT pPos FROM tryout GROUP BY pPos ORDER BY count(*) DESC LIMIT 1"}
{"question": "Find the number of students who participate in the tryout for each college ordered by descending count.", "query": "SELECT count(*) ,  cName FROM tryout GROUP BY cName ORDER BY count(*) DESC"}
{"question": "How many students participated in tryouts for each college by descennding count?", "query": "SELECT count(*) ,  cName FROM tryout GROUP BY cName ORDER BY count(*) DESC"}
{"question": "What is minimum hours of the students playing in different position?", "query": "SELECT min(T2.HS) ,   T1.pPos FROM tryout AS T1 JOIN player AS T2 ON T1.pID  =  T2.pID GROUP BY T1.pPos"}
{"question": "For each position, what is the minimum time students spent practicing?", "query": "SELECT min(T2.HS) ,   T1.pPos FROM tryout AS T1 JOIN player AS T2 ON T1.pID  =  T2.pID GROUP BY T1.pPos"}
{"question": "What are the names of schools with the top 3 largest size?", "query": "SELECT cName FROM college ORDER BY enr DESC LIMIT 3"}
{"question": "What are the names of the schools with the top 3 largest class sizes?", "query": "SELECT cName FROM college ORDER BY enr DESC LIMIT 3"}
{"question": "What is the name of school that has the smallest enrollment in each state?", "query": "SELECT cName ,  state ,  min(enr) FROM college GROUP BY state"}
{"question": "What is the name of the school with smallest enrollment size per state?", "query": "SELECT cName ,  state ,  min(enr) FROM college GROUP BY state"}
{"question": "Find the states where have some college students in tryout.", "query": "SELECT DISTINCT state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName"}
{"question": "What are the different states that have students trying out?", "query": "SELECT DISTINCT state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName"}
{"question": "Find the states where have some college students in tryout and their decisions are yes.", "query": "SELECT DISTINCT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.decision  =  'yes'"}
{"question": "What are the different states that had students successfully try out?", "query": "SELECT DISTINCT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.decision  =  'yes'"}
{"question": "Find the name and college of students whose decisions are yes in the tryout.", "query": "SELECT T1.pName ,  T2.cName FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'yes'"}
{"question": "What are the names of all the players who received a yes during tryouts, and also what are the names of their colleges?", "query": "SELECT T1.pName ,  T2.cName FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'yes'"}
{"question": "Find the name of all students who were in the tryout sorted in alphabetic order.", "query": "SELECT T1.pName FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID ORDER BY T1.pName"}
{"question": "What are the names of all students who tried out in alphabetical order?", "query": "SELECT T1.pName FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID ORDER BY T1.pName"}
{"question": "Find the name and hours of the students whose tryout decision is yes.", "query": "SELECT T1.pName ,  T1.HS FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'yes'"}
{"question": "What are the names and hours spent practicing of every student who received a yes at tryouts?", "query": "SELECT T1.pName ,  T1.HS FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'yes'"}
{"question": "Find the states of the colleges that have students in the tryout who played in striker position.", "query": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'striker'"}
{"question": "What are the states of the colleges where students who tried out for the striker position attend?", "query": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'striker'"}
{"question": "Find the names of the students who are in the position of striker and got a yes tryout decision.", "query": "SELECT T1.pName FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'yes' AND T2.pPos  =  'striker'"}
{"question": "What are the names of all students who successfully tried out for the position of striker?", "query": "SELECT T1.pName FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'yes' AND T2.pPos  =  'striker'"}
{"question": "Find the state of the college which player Charles is attending.", "query": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName JOIN player AS T3 ON T2.pID  =  T3.pID WHERE T3.pName  =  'Charles'"}
{"question": "In which state is the college that Charles attends?", "query": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName JOIN player AS T3 ON T2.pID  =  T3.pID WHERE T3.pName  =  'Charles'"}
{"question": "Find the average and maximum hours for the students whose tryout decision is yes.", "query": "SELECT avg(T1.HS) ,  max(T1.HS) FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'yes'"}
{"question": "What is the average and maximum number of hours students who made the team practiced?", "query": "SELECT avg(T1.HS) ,  max(T1.HS) FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'yes'"}
{"question": "Find the average hours for the students whose tryout decision is no.", "query": "SELECT avg(T1.HS) FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'no'"}
{"question": "What is the average number of hours spent practicing for students who got rejected?", "query": "SELECT avg(T1.HS) FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'no'"}
{"question": "What is the maximum training hours for the students whose training hours is greater than 1000 in different positions?", "query": "SELECT max(T1.HS) ,  pPos FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T1.HS  >  1000 GROUP BY T2.pPos"}
{"question": "For each position, what is the maximum number of  hours for students who spent more than 1000 hours training?", "query": "SELECT max(T1.HS) ,  pPos FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T1.HS  >  1000 GROUP BY T2.pPos"}
{"question": "Which colleges do the tryout players whose name starts with letter D go to?", "query": "SELECT T1.cName FROM  tryout AS T1 JOIN player AS T2 ON T1.pID  =  T2.pID WHERE T2.pName LIKE 'D%'"}
{"question": "Which colleges does each player with a name that starts with the letter D  who tried out go to?", "query": "SELECT T1.cName FROM  tryout AS T1 JOIN player AS T2 ON T1.pID  =  T2.pID WHERE T2.pName LIKE 'D%'"}
{"question": "Which college has any student who is a goalie and succeeded in the tryout.", "query": "SELECT cName FROM  tryout WHERE decision  =  'yes' AND pPos  =  'goalie'"}
{"question": "What college has a student who successfully made the team in the role of a goalie?", "query": "SELECT cName FROM  tryout WHERE decision  =  'yes' AND pPos  =  'goalie'"}
{"question": "Find the name of the tryout players who are from the college with largest size.", "query": "SELECT T2.pName FROM  tryout AS T1 JOIN player AS T2 ON T1.pID  =  T2.pID WHERE T1.cName  =  (SELECT cName FROM college ORDER BY enr DESC LIMIT 1)"}
{"question": "What are the names of all tryout participants who are from the largest college?", "query": "SELECT T2.pName FROM  tryout AS T1 JOIN player AS T2 ON T1.pID  =  T2.pID WHERE T1.cName  =  (SELECT cName FROM college ORDER BY enr DESC LIMIT 1)"}
{"question": "What is the state and enrollment of the colleges where have any students who got accepted in the tryout decision.", "query": "SELECT DISTINCT T1.state ,  T1.enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.decision  =  'yes'"}
{"question": "How many students are enrolled in colleges that have student accepted during tryouts, and in which states are those colleges?", "query": "SELECT DISTINCT T1.state ,  T1.enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.decision  =  'yes'"}
{"question": "Find the names of either colleges in LA with greater than 15000 size or in state AZ with less than 13000 enrollment.", "query": "SELECT cName FROM College WHERE enr  <  13000 AND state = \"AZ\" UNION SELECT cName FROM College WHERE enr  >  15000 AND state = \"LA\""}
{"question": "What are the names of colleges in LA that have more than 15,000 students and of colleges in AZ with less than 13,000 students?", "query": "SELECT cName FROM College WHERE enr  <  13000 AND state = \"AZ\" UNION SELECT cName FROM College WHERE enr  >  15000 AND state = \"LA\""}
{"question": "Find the names of schools that have some students playing in goalie and mid positions.", "query": "SELECT cName FROM  tryout WHERE pPos  =  'goalie' INTERSECT SELECT cName FROM  tryout WHERE pPos  =  'mid'"}
{"question": "What are the names of all schools that have students trying out for the position of goal and 'mid'-field.", "query": "SELECT cName FROM  tryout WHERE pPos  =  'goalie' INTERSECT SELECT cName FROM  tryout WHERE pPos  =  'mid'"}
{"question": "Find the names of states that have some college students playing in goalie and mid positions.", "query": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'goalie' INTERSECT SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'mid'"}
{"question": "What are the names of the states that have some college students playing in the positions of goalie and mid-field?", "query": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'goalie' INTERSECT SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'mid'"}
{"question": "How many schools have some students playing in goalie and mid positions.", "query": "SELECT COUNT(*) FROM (SELECT cName FROM  tryout WHERE pPos  =  'goalie' INTERSECT SELECT cName FROM  tryout WHERE pPos  =  'mid')"}
{"question": "How many schools have students playing in goalie and mid-field positions?", "query": "SELECT COUNT(*) FROM (SELECT cName FROM  tryout WHERE pPos  =  'goalie' INTERSECT SELECT cName FROM  tryout WHERE pPos  =  'mid')"}
{"question": "Find the names of schools that have some players in the mid position but not in the goalie position.", "query": "SELECT cName FROM  tryout WHERE pPos  =  'mid' EXCEPT SELECT cName FROM  tryout WHERE pPos  =  'goalie'"}
{"question": "What are the names of the schools with some players in the mid position but no goalies?", "query": "SELECT cName FROM  tryout WHERE pPos  =  'mid' EXCEPT SELECT cName FROM  tryout WHERE pPos  =  'goalie'"}
{"question": "Find the names of states that have some college students playing in the mid position but not in the goalie position.", "query": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'mid' EXCEPT SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'goalie'"}
{"question": "What are the names of all the states with college students playing in the mid position but no goalies?", "query": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'mid' EXCEPT SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'goalie'"}
{"question": "How many states that have some college students playing in the mid position but not in the goalie position.", "query": "SELECT COUNT(*) FROM (SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'mid' EXCEPT SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'goalie')"}
{"question": "What is the count of states with college students playing in the mid position but not as goalies?", "query": "SELECT COUNT(*) FROM (SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'mid' EXCEPT SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'goalie')"}
{"question": "Find the states where have the colleges whose enrollments are less than the largest size.", "query": "SELECT DISTINCT state FROM college WHERE enr  <  (SELECT max(enr) FROM college)"}
{"question": "What are the states with colleges that have enrollments less than the some other college?", "query": "SELECT DISTINCT state FROM college WHERE enr  <  (SELECT max(enr) FROM college)"}
{"question": "Find names of colleges with enrollment greater than that of some (at least one) college in the FL state.", "query": "SELECT DISTINCT cName FROM college WHERE enr  >  (SELECT min(enr) FROM college WHERE state  =  'FL')"}
{"question": "What are the names of the colleges that are larger than at least one college in Florida?", "query": "SELECT DISTINCT cName FROM college WHERE enr  >  (SELECT min(enr) FROM college WHERE state  =  'FL')"}
{"question": "Find names of all colleges whose enrollment is greater than that of all colleges in the FL state.", "query": "SELECT cName FROM college WHERE enr  >  (SELECT max(enr) FROM college WHERE state  =  'FL')"}
{"question": "What are the names of all colleges with a larger enrollment than the largest college in Florida?", "query": "SELECT cName FROM college WHERE enr  >  (SELECT max(enr) FROM college WHERE state  =  'FL')"}
{"question": "What is the total number of enrollment of schools that do not have any goalie player?", "query": "SELECT sum(enr) FROM college WHERE cName NOT IN (SELECT cName FROM tryout WHERE pPos  =  \"goalie\")"}
{"question": "What is the total number of students enrolled in schools without any goalies?", "query": "SELECT sum(enr) FROM college WHERE cName NOT IN (SELECT cName FROM tryout WHERE pPos  =  \"goalie\")"}
{"question": "What is the number of states that has some college whose enrollment is larger than the average enrollment?", "query": "SELECT count(DISTINCT state) FROM college WHERE enr  >  (SELECT avg(enr) FROM college)"}
{"question": "How many states have a college with more students than average?", "query": "SELECT count(DISTINCT state) FROM college WHERE enr  >  (SELECT avg(enr) FROM college)"}
{"question": "What is the number of states that has some colleges whose enrollment is smaller than the average enrollment?", "query": "SELECT count(DISTINCT state) FROM college WHERE enr  <  (SELECT avg(enr) FROM college)"}
{"question": "How many states have smaller colleges than average?", "query": "SELECT count(DISTINCT state) FROM college WHERE enr  <  (SELECT avg(enr) FROM college)"}
{"question": "How many devices are there?", "query": "SELECT count(*) FROM device"}
{"question": "Count the number of devices.", "query": "SELECT count(*) FROM device"}
{"question": "List the carriers of devices in ascending alphabetical order.", "query": "SELECT Carrier FROM device ORDER BY Carrier ASC"}
{"question": "What are the different carriers for devices, listed in alphabetical order?", "query": "SELECT Carrier FROM device ORDER BY Carrier ASC"}
{"question": "What are the carriers of devices whose software platforms are not \"Android\"?", "query": "SELECT Carrier FROM device WHERE Software_Platform != 'Android'"}
{"question": "Return the device carriers that do not have Android as their software platform.", "query": "SELECT Carrier FROM device WHERE Software_Platform != 'Android'"}
{"question": "What are the names of shops in ascending order of open year?", "query": "SELECT Shop_Name FROM shop ORDER BY Open_Year ASC"}
{"question": "Return the names of shops, ordered by year of opening ascending.", "query": "SELECT Shop_Name FROM shop ORDER BY Open_Year ASC"}
{"question": "What is the average quantity of stocks?", "query": "SELECT avg(Quantity) FROM stock"}
{"question": "Give the average quantity of stocks.", "query": "SELECT avg(Quantity) FROM stock"}
{"question": "What are the names and location of the shops in ascending alphabetical order of name.", "query": "SELECT Shop_Name ,  LOCATION FROM shop ORDER BY Shop_Name ASC"}
{"question": "Return the names and locations of shops, ordered by name in alphabetical order.", "query": "SELECT Shop_Name ,  LOCATION FROM shop ORDER BY Shop_Name ASC"}
{"question": "How many different software platforms are there for devices?", "query": "SELECT count(DISTINCT Software_Platform) FROM device"}
{"question": "Count the number of different software platforms.", "query": "SELECT count(DISTINCT Software_Platform) FROM device"}
{"question": "List the open date of open year of the shop named \"Apple\".", "query": "SELECT Open_Date ,  Open_Year FROM shop WHERE Shop_Name  =  \"Apple\""}
{"question": "What are the open dates and years for the shop named Apple?", "query": "SELECT Open_Date ,  Open_Year FROM shop WHERE Shop_Name  =  \"Apple\""}
{"question": "List the name of the shop with the latest open year.", "query": "SELECT Shop_Name FROM shop ORDER BY Open_Year DESC LIMIT 1"}
{"question": "What is the shop name corresponding to the shop that opened in the most recent year?", "query": "SELECT Shop_Name FROM shop ORDER BY Open_Year DESC LIMIT 1"}
{"question": "Show names of shops and the carriers of devices they have in stock.", "query": "SELECT T3.Shop_Name ,  T2.Carrier FROM stock AS T1 JOIN device AS T2 ON T1.Device_ID  =  T2.Device_ID JOIN shop AS T3 ON T1.Shop_ID  =  T3.Shop_ID"}
{"question": "What are the names of device shops, and what are the carriers that they carry devices in stock for?", "query": "SELECT T3.Shop_Name ,  T2.Carrier FROM stock AS T1 JOIN device AS T2 ON T1.Device_ID  =  T2.Device_ID JOIN shop AS T3 ON T1.Shop_ID  =  T3.Shop_ID"}
{"question": "Show names of shops that have more than one kind of device in stock.", "query": "SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID  =  T2.Shop_ID GROUP BY T1.Shop_ID HAVING COUNT(*)  >  1"}
{"question": "What are the names of shops that have more than a single kind of device in stock?", "query": "SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID  =  T2.Shop_ID GROUP BY T1.Shop_ID HAVING COUNT(*)  >  1"}
{"question": "Show the name of the shop that has the most kind of devices in stock.", "query": "SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID  =  T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY COUNT(*) DESC LIMIT 1"}
{"question": "What is the name of the shop that has the most different kinds of devices in stock?", "query": "SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID  =  T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY COUNT(*) DESC LIMIT 1"}
{"question": "Show the name of the shop that have the largest quantity of devices in stock.", "query": "SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID  =  T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY SUM(T1.quantity) DESC LIMIT 1"}
{"question": "What is the name of the shop that has the greatest quantity of devices in stock?", "query": "SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID  =  T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY SUM(T1.quantity) DESC LIMIT 1"}
{"question": "Please show different software platforms and the corresponding number of devices using each.", "query": "SELECT Software_Platform ,  COUNT(*) FROM device GROUP BY Software_Platform"}
{"question": "What are the different software platforms for devices, and how many devices have each?", "query": "SELECT Software_Platform ,  COUNT(*) FROM device GROUP BY Software_Platform"}
{"question": "Please show the software platforms of devices in descending order of the count.", "query": "SELECT Software_Platform FROM device GROUP BY Software_Platform ORDER BY COUNT(*) DESC"}
{"question": "What are the different software platforms for devices, ordered by frequency descending?", "query": "SELECT Software_Platform FROM device GROUP BY Software_Platform ORDER BY COUNT(*) DESC"}
{"question": "List the software platform shared by the greatest number of devices.", "query": "SELECT Software_Platform FROM device GROUP BY Software_Platform ORDER BY COUNT(*) DESC LIMIT 1"}
{"question": "What is the software platform that is most common amongst all devices?", "query": "SELECT Software_Platform FROM device GROUP BY Software_Platform ORDER BY COUNT(*) DESC LIMIT 1"}
{"question": "List the names of shops that have no devices in stock.", "query": "SELECT Shop_Name FROM shop WHERE Shop_ID NOT IN (SELECT Shop_ID FROM stock)"}
{"question": "What are the names of shops that do not have any devices in stock?", "query": "SELECT Shop_Name FROM shop WHERE Shop_ID NOT IN (SELECT Shop_ID FROM stock)"}
{"question": "Show the locations shared by shops with open year later than 2012 and shops with open year before 2008.", "query": "SELECT LOCATION FROM shop WHERE Open_Year  >  2012 INTERSECT SELECT LOCATION FROM shop WHERE Open_Year  <  2008"}
{"question": "Which locations contains both shops that opened after the year 2012 and shops that opened before 2008?", "query": "SELECT LOCATION FROM shop WHERE Open_Year  >  2012 INTERSECT SELECT LOCATION FROM shop WHERE Open_Year  <  2008"}
{"question": "List the carriers of devices that have no devices in stock.", "query": "SELECT Carrier FROM device WHERE Device_ID NOT IN (SELECT Device_ID FROM stock)"}
{"question": "What are the carriers of devices that are not in stock anywhere?", "query": "SELECT Carrier FROM device WHERE Device_ID NOT IN (SELECT Device_ID FROM stock)"}
{"question": "Show the carriers of devices in stock at more than one shop.", "query": "SELECT T2.Carrier FROM stock AS T1 JOIN device AS T2 ON T1.Device_ID  =  T2.Device_ID GROUP BY T1.Device_ID HAVING COUNT(*)  >  1"}
{"question": "What are the carriers of devices that are in stock in more than a single shop?", "query": "SELECT T2.Carrier FROM stock AS T1 JOIN device AS T2 ON T1.Device_ID  =  T2.Device_ID GROUP BY T1.Device_ID HAVING COUNT(*)  >  1"}
{"question": "How many bookings do we have?", "query": "SELECT count(*) FROM BOOKINGS"}
{"question": "Count the total number of bookings made.", "query": "SELECT count(*) FROM BOOKINGS"}
{"question": "List the order dates of all the bookings.", "query": "SELECT Order_Date FROM BOOKINGS"}
{"question": "What is the order date of each booking?", "query": "SELECT Order_Date FROM BOOKINGS"}
{"question": "Show all the planned delivery dates and actual delivery dates of bookings.", "query": "SELECT Planned_Delivery_Date ,  Actual_Delivery_Date FROM BOOKINGS"}
{"question": "What are the planned delivery date and actual delivery date for each booking?", "query": "SELECT Planned_Delivery_Date ,  Actual_Delivery_Date FROM BOOKINGS"}
{"question": "Count the number of customers recorded.", "query": "SELECT count(*) FROM CUSTOMERS"}
{"question": "What are the phone and email for customer Harold?", "query": "SELECT Customer_Phone ,  Customer_Email_Address FROM CUSTOMERS WHERE Customer_Name  =  \"Harold\""}
{"question": "Find the phone number and email address of customer \"Harold\".", "query": "SELECT Customer_Phone ,  Customer_Email_Address FROM CUSTOMERS WHERE Customer_Name  =  \"Harold\""}
{"question": "Show all the Store_Name of drama workshop groups.", "query": "SELECT Store_Name FROM Drama_Workshop_Groups"}
{"question": "What are the store names of drama workshop groups?", "query": "SELECT Store_Name FROM Drama_Workshop_Groups"}
{"question": "Show the minimum, average, maximum order quantity of all invoices.", "query": "SELECT min(Order_Quantity) ,  avg(Order_Quantity) ,  max(Order_Quantity) FROM INVOICES"}
{"question": "What are the minimum, average, and maximum quantities ordered? Check all the invoices.", "query": "SELECT min(Order_Quantity) ,  avg(Order_Quantity) ,  max(Order_Quantity) FROM INVOICES"}
{"question": "What are the distinct payment method codes in all the invoices?", "query": "SELECT DISTINCT payment_method_code FROM INVOICES"}
{"question": "Show me the distinct payment method codes from the invoice record.", "query": "SELECT DISTINCT payment_method_code FROM INVOICES"}
{"question": "What is the description of the marketing region China?", "query": "SELECT Marketing_Region_Descriptrion FROM Marketing_Regions WHERE Marketing_Region_Name  =  \"China\""}
{"question": "Find the marketing region description of China?", "query": "SELECT Marketing_Region_Descriptrion FROM Marketing_Regions WHERE Marketing_Region_Name  =  \"China\""}
{"question": "Show all the distinct product names with price higher than the average.", "query": "SELECT DISTINCT Product_Name FROM PRODUCTS WHERE Product_Price  >  (SELECT avg(Product_Price) FROM PRODUCTS)"}
{"question": "What are the distinct names of the products that cost more than the average?", "query": "SELECT DISTINCT Product_Name FROM PRODUCTS WHERE Product_Price  >  (SELECT avg(Product_Price) FROM PRODUCTS)"}
{"question": "What is the name of the most expensive product?", "query": "SELECT Product_Name FROM PRODUCTS ORDER BY Product_Price DESC LIMIT 1"}
{"question": "Tell me the name of the most pricy product.", "query": "SELECT Product_Name FROM PRODUCTS ORDER BY Product_Price DESC LIMIT 1"}
{"question": "List all product names in ascending order of price.", "query": "SELECT Product_Name FROM Products ORDER BY Product_Price ASC"}
{"question": "Sort the names of products in ascending order of their price.", "query": "SELECT Product_Name FROM Products ORDER BY Product_Price ASC"}
{"question": "What is the phone number of the performer Ashley?", "query": "SELECT Customer_Phone FROM PERFORMERS WHERE Customer_Name  =  \"Ashley\""}
{"question": "Find the phone number of performer \"Ashley\".", "query": "SELECT Customer_Phone FROM PERFORMERS WHERE Customer_Name  =  \"Ashley\""}
{"question": "Show all payment method codes and the number of orders for each code.", "query": "SELECT payment_method_code ,  count(*) FROM INVOICES GROUP BY payment_method_code"}
{"question": "List the distinct payment method codes with the number of orders made", "query": "SELECT payment_method_code ,  count(*) FROM INVOICES GROUP BY payment_method_code"}
{"question": "What is the payment method code used by the most orders?", "query": "SELECT payment_method_code FROM INVOICES GROUP BY payment_method_code ORDER BY count(*) DESC LIMIT 1"}
{"question": "Find the payment method that is used the most often in all the invoices. Give me its code.", "query": "SELECT payment_method_code FROM INVOICES GROUP BY payment_method_code ORDER BY count(*) DESC LIMIT 1"}
{"question": "Which city is the address of the store named \"FJA Filming\" located in?", "query": "SELECT T1.City_Town FROM Addresses AS T1 JOIN Stores AS T2 ON T1.Address_ID  =  T2.Address_ID WHERE T2.Store_Name  =  \"FJA Filming\""}
{"question": "Find the city the store named \"FJA Filming\" is in.", "query": "SELECT T1.City_Town FROM Addresses AS T1 JOIN Stores AS T2 ON T1.Address_ID  =  T2.Address_ID WHERE T2.Store_Name  =  \"FJA Filming\""}
{"question": "What are the states or counties of the address of the stores with marketing region code \"CA\"?", "query": "SELECT T1.State_County FROM Addresses AS T1 JOIN Stores AS T2 ON T1.Address_ID  =  T2.Address_ID WHERE T2.Marketing_Region_Code  =  \"CA\""}
{"question": "Find the states or counties where the stores with marketing region code \"CA\" are located.", "query": "SELECT T1.State_County FROM Addresses AS T1 JOIN Stores AS T2 ON T1.Address_ID  =  T2.Address_ID WHERE T2.Marketing_Region_Code  =  \"CA\""}
{"question": "What is the name of the marketing region that the store Rob Dinning belongs to?", "query": "SELECT T1.Marketing_Region_Name FROM Marketing_Regions AS T1 JOIN Stores AS T2 ON T1.Marketing_Region_Code  =  T2.Marketing_Region_Code WHERE T2.Store_Name  =  \"Rob Dinning\""}
{"question": "Return the name of the marketing region the store Rob Dinning is located in.", "query": "SELECT T1.Marketing_Region_Name FROM Marketing_Regions AS T1 JOIN Stores AS T2 ON T1.Marketing_Region_Code  =  T2.Marketing_Region_Code WHERE T2.Store_Name  =  \"Rob Dinning\""}
{"question": "What are the descriptions of the service types with product price above 100?", "query": "SELECT T1.Service_Type_Description FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code WHERE T2.Product_Price  >  100"}
{"question": "Give me the descriptions of the service types that cost more than 100.", "query": "SELECT T1.Service_Type_Description FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code WHERE T2.Product_Price  >  100"}
{"question": "What is the description, code and the corresponding count of each service type?", "query": "SELECT T1.Service_Type_Description ,  T2.Service_Type_Code ,  COUNT(*) FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code GROUP BY T2.Service_Type_Code"}
{"question": "List the description, code and the number of services for each service type.", "query": "SELECT T1.Service_Type_Description ,  T2.Service_Type_Code ,  COUNT(*) FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code GROUP BY T2.Service_Type_Code"}
{"question": "What is the description and code of the type of service that is performed the most often?", "query": "SELECT T1.Service_Type_Description , T1.Service_Type_Code FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code GROUP BY T1.Service_Type_Code ORDER BY COUNT(*) DESC LIMIT 1"}
{"question": "Find the description and code of the service type that is performed the most times.", "query": "SELECT T1.Service_Type_Description , T1.Service_Type_Code FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code GROUP BY T1.Service_Type_Code ORDER BY COUNT(*) DESC LIMIT 1"}
{"question": "What are the phones and emails of workshop groups in which services are performed?", "query": "SELECT T1.Store_Phone ,  T1.Store_Email_Address FROM Drama_Workshop_Groups AS T1 JOIN Services AS T2 ON T1.Workshop_Group_ID  =  T2.Workshop_Group_ID"}
{"question": "Give me all the phone numbers and email addresses of the workshop groups where services are performed.", "query": "SELECT T1.Store_Phone ,  T1.Store_Email_Address FROM Drama_Workshop_Groups AS T1 JOIN Services AS T2 ON T1.Workshop_Group_ID  =  T2.Workshop_Group_ID"}
{"question": "What are the names of workshop groups in which services with product name \"film\" are performed?", "query": "SELECT T1.Store_Phone ,  T1.Store_Email_Address FROM Drama_Workshop_Groups AS T1 JOIN Services AS T2 ON T1.Workshop_Group_ID  =  T2.Workshop_Group_ID WHERE T2.Product_Name  =  \"film\""}
{"question": "Find the names of the workshop groups where services with product name \"film\" are performed.", "query": "SELECT T1.Store_Phone ,  T1.Store_Email_Address FROM Drama_Workshop_Groups AS T1 JOIN Services AS T2 ON T1.Workshop_Group_ID  =  T2.Workshop_Group_ID WHERE T2.Product_Name  =  \"film\""}
{"question": "What are the different product names? What is the average product price for each of them?", "query": "SELECT Product_Name ,  avg(Product_Price) FROM PRODUCTS GROUP BY Product_Name"}
{"question": "For each distinct product name, show its average product price.", "query": "SELECT Product_Name ,  avg(Product_Price) FROM PRODUCTS GROUP BY Product_Name"}
{"question": "What are the product names with average product price smaller than 1000000?", "query": "SELECT Product_Name FROM PRODUCTS GROUP BY Product_Name HAVING avg(Product_Price)  <  1000000"}
{"question": "Find the product names whose average product price is below 1000000.", "query": "SELECT Product_Name FROM PRODUCTS GROUP BY Product_Name HAVING avg(Product_Price)  <  1000000"}
{"question": "What are the total order quantities of photo products?", "query": "SELECT sum(T1.Order_Quantity) FROM ORDER_ITEMS AS T1 JOIN Products AS T2 ON T1.Product_ID  =  T2.Product_ID WHERE T2.Product_Name  =  \"photo\""}
{"question": "Compute the total order quantities of the product \"photo\".", "query": "SELECT sum(T1.Order_Quantity) FROM ORDER_ITEMS AS T1 JOIN Products AS T2 ON T1.Product_ID  =  T2.Product_ID WHERE T2.Product_Name  =  \"photo\""}
{"question": "What are the order details of the products with price higher than 2000?", "query": "SELECT T1.Other_Item_Details FROM ORDER_ITEMS AS T1 JOIN Products AS T2 ON T1.Product_ID  =  T2.Product_ID WHERE T2.Product_price  >  2000"}
{"question": "Find the order detail for the products with price above 2000.", "query": "SELECT T1.Other_Item_Details FROM ORDER_ITEMS AS T1 JOIN Products AS T2 ON T1.Product_ID  =  T2.Product_ID WHERE T2.Product_price  >  2000"}
{"question": "What are the actual delivery dates of orders with quantity 1?", "query": "SELECT T1.Actual_Delivery_Date FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID  =  T2.Order_ID WHERE T2.Order_Quantity  =  1"}
{"question": "List the actual delivery date for all the orders with quantity 1", "query": "SELECT T1.Actual_Delivery_Date FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID  =  T2.Order_ID WHERE T2.Order_Quantity  =  1"}
{"question": "What are the order dates of orders with price higher than 1000?", "query": "SELECT T1.Order_Date FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID  =  T2.Order_ID JOIN Products AS T3 ON T2.Product_ID  =  T3.Product_ID WHERE T3.Product_price  >  1000"}
{"question": "Find the order dates of the orders with price above 1000.", "query": "SELECT T1.Order_Date FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID  =  T2.Order_ID JOIN Products AS T3 ON T2.Product_ID  =  T3.Product_ID WHERE T3.Product_price  >  1000"}
{"question": "How many distinct currency codes are there for all drama workshop groups?", "query": "SELECT count(DISTINCT Currency_Code) FROM Drama_Workshop_Groups"}
{"question": "Find the number of distinct currency codes used in drama workshop groups.", "query": "SELECT count(DISTINCT Currency_Code) FROM Drama_Workshop_Groups"}
{"question": "What are the names of the drama workshop groups with address in Feliciaberg city?", "query": "SELECT T2.Store_Name FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID  =  T2.Address_ID WHERE T1.City_Town  =  \"Feliciaberg\""}
{"question": "Return the the names of the drama workshop groups that are located in Feliciaberg city.", "query": "SELECT T2.Store_Name FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID  =  T2.Address_ID WHERE T1.City_Town  =  \"Feliciaberg\""}
{"question": "What are the email addresses of the drama workshop groups with address in Alaska state?", "query": "SELECT T2.Store_Email_Address FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID  =  T2.Address_ID WHERE T1.State_County  =  \"Alaska\""}
{"question": "List the email addresses of the drama workshop groups located in Alaska state.", "query": "SELECT T2.Store_Email_Address FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID  =  T2.Address_ID WHERE T1.State_County  =  \"Alaska\""}
{"question": "Show all cities along with the number of drama workshop groups in each city.", "query": "SELECT T1.City_Town ,  count(*) FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID  =  T2.Address_ID GROUP BY T1.City_Town"}
{"question": "How many drama workshop groups are there in each city? Return both the city and the count.", "query": "SELECT T1.City_Town ,  count(*) FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID  =  T2.Address_ID GROUP BY T1.City_Town"}
{"question": "What is the marketing region code that has the most drama workshop groups?", "query": "SELECT Marketing_Region_Code FROM Drama_Workshop_Groups GROUP BY Marketing_Region_Code ORDER BY count(*) DESC LIMIT 1"}
{"question": "Which marketing region has the most drama workshop groups? Give me the region code.", "query": "SELECT Marketing_Region_Code FROM Drama_Workshop_Groups GROUP BY Marketing_Region_Code ORDER BY count(*) DESC LIMIT 1"}
{"question": "Show all cities where at least one customer lives in but no performer lives in.", "query": "SELECT T1.City_Town FROM Addresses AS T1 JOIN Customers AS T2 ON T1.Address_ID  =  T2.Address_ID EXCEPT SELECT T1.City_Town FROM Addresses AS T1 JOIN Performers AS T2 ON T1.Address_ID  =  T2.Address_ID"}
{"question": "Which cities have at least one customer but no performer?", "query": "SELECT T1.City_Town FROM Addresses AS T1 JOIN Customers AS T2 ON T1.Address_ID  =  T2.Address_ID EXCEPT SELECT T1.City_Town FROM Addresses AS T1 JOIN Performers AS T2 ON T1.Address_ID  =  T2.Address_ID"}
{"question": "What is the most frequent status of bookings?", "query": "SELECT Status_Code FROM BOOKINGS GROUP BY Status_Code ORDER BY count(*) DESC LIMIT 1"}
{"question": "Which status code is the most common of all the bookings?", "query": "SELECT Status_Code FROM BOOKINGS GROUP BY Status_Code ORDER BY count(*) DESC LIMIT 1"}
{"question": "What are the names of the workshop groups that have bookings with status code \"stop\"?", "query": "SELECT T2.Store_Name FROM Bookings AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Workshop_Group_ID  =  T2.Workshop_Group_ID WHERE T1.Status_Code  =  \"stop\""}
{"question": "Which workshop groups have bookings with status code \"stop\"? Give me the names.", "query": "SELECT T2.Store_Name FROM Bookings AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Workshop_Group_ID  =  T2.Workshop_Group_ID WHERE T1.Status_Code  =  \"stop\""}
{"question": "Show the names of all the clients with no booking.", "query": "SELECT Customer_Name FROM Clients EXCEPT SELECT T2.Customer_Name FROM Bookings AS T1 JOIN Clients AS T2 ON T1.Customer_ID  =  T2.Client_ID"}
{"question": "What are the names of the clients who do not have any booking?", "query": "SELECT Customer_Name FROM Clients EXCEPT SELECT T2.Customer_Name FROM Bookings AS T1 JOIN Clients AS T2 ON T1.Customer_ID  =  T2.Client_ID"}
{"question": "What is the average quantities ordered with payment method code \"MasterCard\" on invoices?", "query": "SELECT avg(Order_Quantity) FROM Invoices WHERE payment_method_code  =  \"MasterCard\""}
{"question": "Check the invoices record and compute the average quantities ordered with the payment method \"MasterCard\".", "query": "SELECT avg(Order_Quantity) FROM Invoices WHERE payment_method_code  =  \"MasterCard\""}
{"question": "What is the product ID of the most frequently ordered item on invoices?", "query": "SELECT Product_ID FROM INVOICES GROUP BY Product_ID ORDER BY COUNT(*) DESC LIMIT 1"}
{"question": "Find the id of the product ordered the most often on invoices.", "query": "SELECT Product_ID FROM INVOICES GROUP BY Product_ID ORDER BY COUNT(*) DESC LIMIT 1"}
{"question": "What is the description of the service type which offers both the photo product and the film product?", "query": "SELECT T1.Service_Type_Description FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code WHERE T2.Product_Name  =  'photo' INTERSECT SELECT T1.Service_Type_Description FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code WHERE T2.Product_Name  =  'film'"}
{"question": "Give me the description of the service type that offers not only the photo product but also the film product.", "query": "SELECT T1.Service_Type_Description FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code WHERE T2.Product_Name  =  'photo' INTERSECT SELECT T1.Service_Type_Description FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code WHERE T2.Product_Name  =  'film'"}
{"question": "How many bands are there?", "query": "SELECT count(*) FROM Band"}
{"question": "Find the number of bands.", "query": "SELECT count(*) FROM Band"}
{"question": "What are all the labels?", "query": "SELECT DISTINCT label FROM Albums"}
{"question": "What are the different album labels listed?", "query": "SELECT DISTINCT label FROM Albums"}
{"question": "Find all the albums in 2012.", "query": "SELECT * FROM Albums WHERE YEAR  =  2012"}
{"question": "return all columns of the albums created in the year of 2012.", "query": "SELECT * FROM Albums WHERE YEAR  =  2012"}
{"question": "Find all the stage positions of the musicians with first name \"Solveig\"", "query": "SELECT DISTINCT T1.stageposition FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id WHERE Firstname  =  \"Solveig\""}
{"question": "What are the different stage positions for all musicians whose first name is \"Solveig\"?", "query": "SELECT DISTINCT T1.stageposition FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id WHERE Firstname  =  \"Solveig\""}
{"question": "How many songs are there?", "query": "SELECT count(*) FROM Songs"}
{"question": "Count the number of songs.", "query": "SELECT count(*) FROM Songs"}
{"question": "Find all the songs performed by artist with last name \"Heilo\"", "query": "SELECT T3.Title FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T2.Lastname  =  \"Heilo\""}
{"question": "What are the names of the songs by the artist whose last name is \"Heilo\"?", "query": "SELECT T3.Title FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T2.Lastname  =  \"Heilo\""}
{"question": "Hom many musicians performed in the song \"Flash\"?", "query": "SELECT count(*) FROM performance AS T1 JOIN band AS T2 ON T1.bandmate  =  T2.id JOIN songs AS T3 ON T3.songid  =  T1.songid WHERE T3.Title  =  \"Flash\""}
{"question": "How many musicians play in the song \"Flash\"?", "query": "SELECT count(*) FROM performance AS T1 JOIN band AS T2 ON T1.bandmate  =  T2.id JOIN songs AS T3 ON T3.songid  =  T1.songid WHERE T3.Title  =  \"Flash\""}
{"question": "Find all the songs produced by artists with first name \"Marianne\".", "query": "SELECT T3.Title FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T2.firstname  =  \"Marianne\""}
{"question": "What are the names of all songs produced by the artist with the first name \"Marianne\"?", "query": "SELECT T3.Title FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T2.firstname  =  \"Marianne\""}
{"question": "Who performed the song named \"Badlands\"? Show the first name and the last name.", "query": "SELECT T2.firstname ,  T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T3.Title  =  \"Badlands\""}
{"question": "What are the first and last names of the artist who perfomed the song \"Badlands\"?", "query": "SELECT T2.firstname ,  T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T3.Title  =  \"Badlands\""}
{"question": "Who is performing in the back stage position for the song \"Badlands\"? Show the first name and the last name.", "query": "SELECT T2.firstname ,  T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T3.Title  =  \"Badlands\" AND T1.StagePosition  =  \"back\""}
{"question": "What are the first and last names of the performer who was in the back stage position for the song \"Badlands\"?", "query": "SELECT T2.firstname ,  T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T3.Title  =  \"Badlands\" AND T1.StagePosition  =  \"back\""}
{"question": "How many unique labels are there for albums?", "query": "SELECT count(DISTINCT label) FROM albums"}
{"question": "What are the unique labels for the albums?", "query": "SELECT count(DISTINCT label) FROM albums"}
{"question": "What is the label that has the most albums?", "query": "SELECT label FROM albums GROUP BY label ORDER BY count(*) DESC LIMIT 1"}
{"question": "What is the label with the most albums?", "query": "SELECT label FROM albums GROUP BY label ORDER BY count(*) DESC LIMIT 1"}
{"question": "What is the last name of the musician that have produced the most number of songs?", "query": "SELECT T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId GROUP BY lastname ORDER BY count(*) DESC LIMIT 1"}
{"question": "What is the last name of the musician who was in the most songs?", "query": "SELECT T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId GROUP BY lastname ORDER BY count(*) DESC LIMIT 1"}
{"question": "What is the last name of the musician that has been at the back position the most?", "query": "SELECT T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id WHERE stageposition  =  \"back\" GROUP BY lastname ORDER BY count(*) DESC LIMIT 1"}
{"question": "What is the last name of the musicians who has played back position the most?", "query": "SELECT T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id WHERE stageposition  =  \"back\" GROUP BY lastname ORDER BY count(*) DESC LIMIT 1"}
{"question": "Find all the songs whose name contains the word \"the\".", "query": "SELECT title FROM songs WHERE title LIKE '% the %'"}
{"question": "What are the names of the songs whose title has the word \"the\"?", "query": "SELECT title FROM songs WHERE title LIKE '% the %'"}
{"question": "What are all the instruments used?", "query": "SELECT DISTINCT instrument FROM Instruments"}
{"question": "What are the different instruments listed in the database?", "query": "SELECT DISTINCT instrument FROM Instruments"}
{"question": "What instrument did the musician with last name \"Heilo\" use in the song \"Le Pop\"?", "query": "SELECT T4.instrument FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId JOIN Instruments AS T4 ON T4.songid  =  T3.songid AND T4.bandmateid  =  T2.id WHERE T2.lastname  =  \"Heilo\" AND T3.title  =  \"Le Pop\""}
{"question": "What instruments did the musician with the last name \"Heilo\" play in the song \"Le Pop\"?", "query": "SELECT T4.instrument FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId JOIN Instruments AS T4 ON T4.songid  =  T3.songid AND T4.bandmateid  =  T2.id WHERE T2.lastname  =  \"Heilo\" AND T3.title  =  \"Le Pop\""}
{"question": "What is the most used instrument?", "query": "SELECT instrument FROM instruments GROUP BY instrument ORDER BY count(*) DESC LIMIT 1"}
{"question": "What instrument is used the most?", "query": "SELECT instrument FROM instruments GROUP BY instrument ORDER BY count(*) DESC LIMIT 1"}
{"question": "How many songs have used the instrument \"drums\"?", "query": "SELECT count(*) FROM instruments WHERE instrument  =  \"drums\""}
{"question": "How many songs use drums as an instrument?", "query": "SELECT count(*) FROM instruments WHERE instrument  =  \"drums\""}
{"question": "What instruments does the the song \"Le Pop\" use?", "query": "SELECT instrument FROM instruments AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  \"Le Pop\""}
{"question": "What are the instruments are used in the song \"Le Pop\"?", "query": "SELECT instrument FROM instruments AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  \"Le Pop\""}
{"question": "How many instruments does the song \"Le Pop\" use?", "query": "SELECT count(DISTINCT instrument) FROM instruments AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  \"Le Pop\""}
{"question": "How many different instruments are used in the song \"Le Pop\"?", "query": "SELECT count(DISTINCT instrument) FROM instruments AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  \"Le Pop\""}
{"question": "How many instrument does the musician with last name \"Heilo\" use?", "query": "SELECT count(DISTINCT instrument) FROM instruments AS T1 JOIN Band AS T2 ON T1.bandmateid  =  T2.id WHERE T2.lastname  =  \"Heilo\""}
{"question": "How many different instruments does the musician with the last name \"Heilo\" use?", "query": "SELECT count(DISTINCT instrument) FROM instruments AS T1 JOIN Band AS T2 ON T1.bandmateid  =  T2.id WHERE T2.lastname  =  \"Heilo\""}
{"question": "Find all the instruments ever used by the musician with last name \"Heilo\"?", "query": "SELECT instrument FROM instruments AS T1 JOIN Band AS T2 ON T1.bandmateid  =  T2.id WHERE T2.lastname  =  \"Heilo\""}
{"question": "What are all the instruments used by the musician with the last name \"Heilo\"?", "query": "SELECT instrument FROM instruments AS T1 JOIN Band AS T2 ON T1.bandmateid  =  T2.id WHERE T2.lastname  =  \"Heilo\""}
{"question": "Which song has the most vocals?", "query": "SELECT title FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid GROUP BY T1.songid ORDER BY count(*) DESC LIMIT 1"}
{"question": "What is the song with the most vocals?", "query": "SELECT title FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid GROUP BY T1.songid ORDER BY count(*) DESC LIMIT 1"}
{"question": "Which vocal type is the most frequently appearring type?", "query": "SELECT TYPE FROM vocals GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1"}
{"question": "What is the type of vocables that appears most frequently?", "query": "SELECT TYPE FROM vocals GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1"}
{"question": "Which vocal type has the band mate with last name \"Heilo\" played the most?", "query": "SELECT TYPE FROM vocals AS T1 JOIN band AS T2 ON T1.bandmate  =  T2.id WHERE lastname  =  \"Heilo\" GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1"}
{"question": "What is the type of vocals that the band member with the last name \"Heilo\" played the most?", "query": "SELECT TYPE FROM vocals AS T1 JOIN band AS T2 ON T1.bandmate  =  T2.id WHERE lastname  =  \"Heilo\" GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1"}
{"question": "What are the vocal types used in song \"Le Pop\"?", "query": "SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  \"Le Pop\""}
{"question": "What are the types of vocals used in the song \"Le Pop\"?", "query": "SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  \"Le Pop\""}
{"question": "Find the number of vocal types used in song \"Demon Kitty Rag\"?", "query": "SELECT count(*) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  \"Demon Kitty Rag\""}
{"question": "What are the types of vocals used in the song \"Demon Kitty Rag\"?", "query": "SELECT count(*) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  \"Demon Kitty Rag\""}
{"question": "How many songs have a lead vocal?", "query": "SELECT count(DISTINCT title) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE TYPE  =  \"lead\""}
{"question": "How many songs have vocals of type lead?", "query": "SELECT count(DISTINCT title) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE TYPE  =  \"lead\""}
{"question": "Which vocal type did the musician with first name \"Solveig\" played in the song with title \"A Bar in Amsterdam\"?", "query": "SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid JOIN band AS T3 ON T1.bandmate  =  T3.id WHERE T3.firstname  =  \"Solveig\" AND T2.title  =  \"A Bar In Amsterdam\""}
{"question": "What are the types of vocals that the musician with the first name \"Solveig\" played in the song \"A Bar in Amsterdam\"?", "query": "SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid JOIN band AS T3 ON T1.bandmate  =  T3.id WHERE T3.firstname  =  \"Solveig\" AND T2.title  =  \"A Bar In Amsterdam\""}
{"question": "Find all the songs that do not have a lead vocal.", "query": "SELECT DISTINCT title FROM vocals AS t1 JOIN songs AS t2 ON t1.songid  =  t2.songid EXCEPT SELECT t2.title FROM vocals AS t1 JOIN songs AS t2 ON t1.songid  =  t2.songid WHERE TYPE  =  \"lead\""}
{"question": "What are the names of the songs without a lead vocal?", "query": "SELECT DISTINCT title FROM vocals AS t1 JOIN songs AS t2 ON t1.songid  =  t2.songid EXCEPT SELECT t2.title FROM vocals AS t1 JOIN songs AS t2 ON t1.songid  =  t2.songid WHERE TYPE  =  \"lead\""}
{"question": "Find all the vocal types.", "query": "SELECT DISTINCT TYPE FROM vocals"}
{"question": "What are the different types of vocals?", "query": "SELECT DISTINCT TYPE FROM vocals"}
{"question": "What are the albums produced in year 2010?", "query": "SELECT * FROM Albums WHERE YEAR  =  2010"}
{"question": "What information is there on albums from 2010?", "query": "SELECT * FROM Albums WHERE YEAR  =  2010"}
{"question": "Who performed the song named \"Le Pop\"?", "query": "SELECT T2.firstname ,  T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T3.Title  =  \"Le Pop\""}
{"question": "What is the first and last name of artist who performed \"Le Pop\"?", "query": "SELECT T2.firstname ,  T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T3.Title  =  \"Le Pop\""}
{"question": "What is the last name of the musician that have produced the most songs?", "query": "SELECT T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId GROUP BY lastname ORDER BY count(*) DESC LIMIT 1"}
{"question": "What is the last name of the artist who sang the most songs?", "query": "SELECT T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId GROUP BY lastname ORDER BY count(*) DESC LIMIT 1"}
{"question": "What instrument did the musician with last name \"Heilo\" use in the song \"Badlands\"?", "query": "SELECT T4.instrument FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId JOIN Instruments AS T4 ON T4.songid  =  T3.songid AND T4.bandmateid  =  T2.id WHERE T2.lastname  =  \"Heilo\" AND T3.title  =  \"Badlands\""}
{"question": "What instruments did the musician with the last name \"Heilo\" play in \"Badlands\"?", "query": "SELECT T4.instrument FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId JOIN Instruments AS T4 ON T4.songid  =  T3.songid AND T4.bandmateid  =  T2.id WHERE T2.lastname  =  \"Heilo\" AND T3.title  =  \"Badlands\""}
{"question": "How many instruments does the song \"Badlands\" use?", "query": "SELECT count(DISTINCT instrument) FROM instruments AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  \"Badlands\""}
{"question": "How many different instruments are used in the song \"Badlands\"?", "query": "SELECT count(DISTINCT instrument) FROM instruments AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  \"Badlands\""}
{"question": "What are the vocal types used in song \"Badlands\"?", "query": "SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  \"Badlands\""}
{"question": "What types of vocals are used in the song \"Badlands\"?", "query": "SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  \"Badlands\""}
{"question": "Find the number of vocal types used in song \"Le Pop\"", "query": "SELECT count(*) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  \"Le Pop\""}
{"question": "How many vocal types are used in the song \"Le Pop\"?", "query": "SELECT count(*) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  \"Le Pop\""}
{"question": "How many songs have a shared vocal?", "query": "SELECT count(DISTINCT title) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE TYPE  =  \"shared\""}
{"question": "How many different songs have shared vocals?", "query": "SELECT count(DISTINCT title) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE TYPE  =  \"shared\""}
{"question": "Find all the songs that do not have a back vocal.", "query": "SELECT DISTINCT title FROM vocals AS t1 JOIN songs AS t2 ON t1.songid  =  t2.songid EXCEPT SELECT t2.title FROM vocals AS t1 JOIN songs AS t2 ON t1.songid  =  t2.songid WHERE TYPE  =  \"back\""}
{"question": "What are the different names of all songs without back vocals?", "query": "SELECT DISTINCT title FROM vocals AS t1 JOIN songs AS t2 ON t1.songid  =  t2.songid EXCEPT SELECT t2.title FROM vocals AS t1 JOIN songs AS t2 ON t1.songid  =  t2.songid WHERE TYPE  =  \"back\""}
{"question": "Which vocal type has the band mate with first name \"Solveig\" played the most?", "query": "SELECT TYPE FROM vocals AS T1 JOIN band AS T2 ON T1.bandmate  =  T2.id WHERE firstname  =  \"Solveig\" GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1"}
{"question": "What are the types of vocals that the band member with the first name \"Solveig\" played the most?", "query": "SELECT TYPE FROM vocals AS T1 JOIN band AS T2 ON T1.bandmate  =  T2.id WHERE firstname  =  \"Solveig\" GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1"}
{"question": "Which vocal type did the musician with last name \"Heilo\" played in the song with title \"Der Kapitan\"?", "query": "SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid JOIN band AS T3 ON T1.bandmate  =  T3.id WHERE T3.lastname  =  \"Heilo\" AND T2.title  =  \"Der Kapitan\""}
{"question": "What are the types of vocals that the musician with the last name \"Heilo\" played in \"Der Kapitan\"?", "query": "SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid JOIN band AS T3 ON T1.bandmate  =  T3.id WHERE T3.lastname  =  \"Heilo\" AND T2.title  =  \"Der Kapitan\""}
{"question": "Find the first name of the band mate that has performed in most songs.", "query": "SELECT t2.firstname FROM Performance AS t1 JOIN Band AS t2 ON t1.bandmate  =  t2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId GROUP BY firstname ORDER BY count(*) DESC LIMIT 1"}
{"question": "What is the first name of the band mate who perfomed in the most songs?", "query": "SELECT t2.firstname FROM Performance AS t1 JOIN Band AS t2 ON t1.bandmate  =  t2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId GROUP BY firstname ORDER BY count(*) DESC LIMIT 1"}
{"question": "Which vocal type has the band mate with first name \"Marianne\" played the most?", "query": "SELECT TYPE FROM vocals AS T1 JOIN band AS T2 ON T1.bandmate  =  T2.id WHERE firstname  =  \"Marianne\" GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1"}
{"question": "What is the vocal type of the band mate whose first name is \"Marianne\" played the most?", "query": "SELECT TYPE FROM vocals AS T1 JOIN band AS T2 ON T1.bandmate  =  T2.id WHERE firstname  =  \"Marianne\" GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1"}
{"question": "Who is performing in the back stage position for the song \"Der Kapitan\"? Show the first name and last name.", "query": "SELECT T2.firstname ,  T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T3.Title  =  \"Der Kapitan\" AND T1.StagePosition  =  \"back\""}
{"question": "What is the first and last name of the artist who performed back stage for the song \"Der Kapitan\"?", "query": "SELECT T2.firstname ,  T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T3.Title  =  \"Der Kapitan\" AND T1.StagePosition  =  \"back\""}
{"question": "Find the name of songs that does not have a back vocal.", "query": "SELECT DISTINCT title FROM vocals AS t1 JOIN songs AS t2 ON t1.songid  =  t2.songid EXCEPT SELECT t2.title FROM vocals AS t1 JOIN songs AS t2 ON t1.songid  =  t2.songid WHERE TYPE  =  \"back\""}
{"question": "What are the names of the songs that do not have back vocals?", "query": "SELECT DISTINCT title FROM vocals AS t1 JOIN songs AS t2 ON t1.songid  =  t2.songid EXCEPT SELECT t2.title FROM vocals AS t1 JOIN songs AS t2 ON t1.songid  =  t2.songid WHERE TYPE  =  \"back\""}
{"question": "What are the songs in album \"A Kiss Before You Go: Live in Hamburg\"?", "query": "SELECT T3.title FROM albums AS T1 JOIN tracklists AS T2 ON T1.aid  =  T2.albumid JOIN songs AS T3 ON T2.songid  =  T3.songid WHERE T1.title  =  \"A Kiss Before You Go: Live in Hamburg\""}
{"question": "What are the song titles on the album \"A Kiss Before You Go: Live in Hamburg\"?", "query": "SELECT T3.title FROM albums AS T1 JOIN tracklists AS T2 ON T1.aid  =  T2.albumid JOIN songs AS T3 ON T2.songid  =  T3.songid WHERE T1.title  =  \"A Kiss Before You Go: Live in Hamburg\""}
{"question": "What are all the songs in albums under label \"Universal Music Group\"?", "query": "SELECT T3.title FROM albums AS T1 JOIN tracklists AS T2 ON T1.aid  =  T2.albumid JOIN songs AS T3 ON T2.songid  =  T3.songid WHERE t1.label  =  \"Universal Music Group\""}
{"question": "What are the names of all the songs whose album is under the label of \"Universal Music Group\"?", "query": "SELECT T3.title FROM albums AS T1 JOIN tracklists AS T2 ON T1.aid  =  T2.albumid JOIN songs AS T3 ON T2.songid  =  T3.songid WHERE t1.label  =  \"Universal Music Group\""}
{"question": "Find the number of songs in all the studio albums.", "query": "SELECT count(DISTINCT T3.title) FROM albums AS T1 JOIN tracklists AS T2 ON T1.aid  =  T2.albumid JOIN songs AS T3 ON T2.songid  =  T3.songid WHERE t1.type  =  \"Studio\""}
{"question": "How many songs appear in studio albums?", "query": "SELECT count(DISTINCT T3.title) FROM albums AS T1 JOIN tracklists AS T2 ON T1.aid  =  T2.albumid JOIN songs AS T3 ON T2.songid  =  T3.songid WHERE t1.type  =  \"Studio\""}
{"question": "Who is the founder of Sony?", "query": "SELECT founder FROM manufacturers WHERE name  =  'Sony'"}
{"question": "Return the founder of Sony.", "query": "SELECT founder FROM manufacturers WHERE name  =  'Sony'"}
{"question": "Where is the headquarter of the company founded by James?", "query": "SELECT headquarter FROM manufacturers WHERE founder  =  'James'"}
{"question": "What is the headquarter of the company whose founder is James?", "query": "SELECT headquarter FROM manufacturers WHERE founder  =  'James'"}
{"question": "Find all manufacturers' names and their headquarters, sorted by the ones with highest revenue first.", "query": "SELECT name ,  headquarter FROM manufacturers ORDER BY revenue DESC"}
{"question": "What are the names and headquarters of all manufacturers, ordered by revenue descending?", "query": "SELECT name ,  headquarter FROM manufacturers ORDER BY revenue DESC"}
{"question": "What are the average, maximum and total revenues of all companies?", "query": "SELECT avg(revenue) ,  max(revenue) ,  sum(revenue) FROM manufacturers"}
{"question": "Return the average, maximum, and total revenues across all manufacturers.", "query": "SELECT avg(revenue) ,  max(revenue) ,  sum(revenue) FROM manufacturers"}
{"question": "How many companies were created by Andy?", "query": "SELECT count(*) FROM manufacturers WHERE founder  =  'Andy'"}
{"question": "Return the number of companies created by Andy.", "query": "SELECT count(*) FROM manufacturers WHERE founder  =  'Andy'"}
{"question": "Find the total revenue created by the companies whose headquarter is located at Austin.", "query": "SELECT sum(revenue) FROM manufacturers WHERE headquarter  =  'Austin'"}
{"question": "What is the sum of revenue from companies with headquarters in Austin?", "query": "SELECT sum(revenue) FROM manufacturers WHERE headquarter  =  'Austin'"}
{"question": "What are the different cities listed?", "query": "SELECT DISTINCT headquarter FROM manufacturers"}
{"question": "Give the distinct headquarters of manufacturers.", "query": "SELECT DISTINCT headquarter FROM manufacturers"}
{"question": "Find the number of manufactures that are based in Tokyo or Beijing.", "query": "SELECT count(*) FROM manufacturers WHERE headquarter  =  'Tokyo' OR headquarter  =  'Beijing'"}
{"question": "How many manufacturers have headquarters in either Tokyo or Beijing?", "query": "SELECT count(*) FROM manufacturers WHERE headquarter  =  'Tokyo' OR headquarter  =  'Beijing'"}
{"question": "Find the founder of the company whose name begins with the letter 'S'.", "query": "SELECT founder FROM manufacturers WHERE name LIKE 'S%'"}
{"question": "Who is the founders of companies whose first letter is S?", "query": "SELECT founder FROM manufacturers WHERE name LIKE 'S%'"}
{"question": "Find the name of companies whose revenue is between 100 and 150.", "query": "SELECT name FROM manufacturers WHERE revenue BETWEEN 100 AND 150"}
{"question": "What are the names of companies with revenue between 100 and 150?", "query": "SELECT name FROM manufacturers WHERE revenue BETWEEN 100 AND 150"}
{"question": "What is the total revenue of all companies whose main office is at Tokyo or Taiwan?", "query": "SELECT sum(revenue) FROM manufacturers WHERE Headquarter  =  'Tokyo' OR Headquarter  =  'Taiwan'"}
{"question": "Return the total revenue of companies with headquarters in Tokyo or Taiwan.", "query": "SELECT sum(revenue) FROM manufacturers WHERE Headquarter  =  'Tokyo' OR Headquarter  =  'Taiwan'"}
{"question": "Find the name of product that is produced by both companies Creative Labs and Sony.", "query": "SELECT T1.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code WHERE T2.name  =  'Creative Labs' INTERSECT SELECT T1.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code WHERE T2.name  =  'Sony'"}
{"question": "What are the names of products produced by both Creative Labs and Sony?", "query": "SELECT T1.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code WHERE T2.name  =  'Creative Labs' INTERSECT SELECT T1.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code WHERE T2.name  =  'Sony'"}
{"question": "Find the name, headquarter and founder of the manufacturer that has the highest revenue.", "query": "SELECT name ,  headquarter ,  founder FROM manufacturers ORDER BY revenue DESC LIMIT 1"}
{"question": "What are the names, headquarters and founders of the company with the highest revenue?", "query": "SELECT name ,  headquarter ,  founder FROM manufacturers ORDER BY revenue DESC LIMIT 1"}
{"question": "Find the name, headquarter and revenue of all manufacturers sorted by their revenue in the descending order.", "query": "SELECT name ,  headquarter ,  revenue FROM manufacturers ORDER BY revenue DESC"}
{"question": "What are the names, headquarters and revenues for manufacturers, sorted by revenue descending?", "query": "SELECT name ,  headquarter ,  revenue FROM manufacturers ORDER BY revenue DESC"}
{"question": "Find the name of companies whose revenue is greater than the average revenue of all companies.", "query": "SELECT name FROM manufacturers WHERE revenue  >  (SELECT avg(revenue) FROM manufacturers)"}
{"question": "What are the names of manufacturers with revenue greater than the average of all revenues?", "query": "SELECT name FROM manufacturers WHERE revenue  >  (SELECT avg(revenue) FROM manufacturers)"}
{"question": "Find the name of companies whose revenue is smaller than the revenue of all companies based in Austin.", "query": "SELECT name FROM manufacturers WHERE revenue  <  (SELECT min(revenue) FROM manufacturers WHERE headquarter  =  'Austin')"}
{"question": "What are the names of companies with revenue less than the lowest revenue of any manufacturer in Austin?", "query": "SELECT name FROM manufacturers WHERE revenue  <  (SELECT min(revenue) FROM manufacturers WHERE headquarter  =  'Austin')"}
{"question": "Find the total revenue of companies whose revenue is larger than the revenue of some companies based in Austin.", "query": "SELECT sum(revenue) FROM manufacturers WHERE revenue  >  (SELECT min(revenue) FROM manufacturers WHERE headquarter  =  'Austin')"}
{"question": "What is the total revenue of companies with revenue greater than the lowest revenue of any manufacturer in Austin?", "query": "SELECT sum(revenue) FROM manufacturers WHERE revenue  >  (SELECT min(revenue) FROM manufacturers WHERE headquarter  =  'Austin')"}
{"question": "Find the total revenue of companies of each founder.", "query": "SELECT sum(revenue) ,  founder FROM manufacturers GROUP BY founder"}
{"question": "What is the total revenue of companies started by founder?", "query": "SELECT sum(revenue) ,  founder FROM manufacturers GROUP BY founder"}
{"question": "Find the name and revenue of the company that earns the highest revenue in each city.", "query": "SELECT name ,  max(revenue) ,  Headquarter FROM manufacturers GROUP BY Headquarter"}
{"question": "What are the names and revenues of the companies with the highest revenues in each headquarter city?", "query": "SELECT name ,  max(revenue) ,  Headquarter FROM manufacturers GROUP BY Headquarter"}
{"question": "Find the total revenue for each manufacturer.", "query": "SELECT sum(revenue) ,  name FROM manufacturers GROUP BY name"}
{"question": "What is the total revenue of each manufacturer?", "query": "SELECT sum(revenue) ,  name FROM manufacturers GROUP BY name"}
{"question": "Find the average prices of all products from each manufacture, and list each company's name.", "query": "SELECT avg(T1.price) ,  T2.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code GROUP BY T2.name"}
{"question": "What are the average prices of products for each manufacturer?", "query": "SELECT avg(T1.price) ,  T2.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code GROUP BY T2.name"}
{"question": "Find the number of different products that are produced by companies at different headquarter cities.", "query": "SELECT count(DISTINCT T1.name) ,  T2.Headquarter FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code GROUP BY T2.Headquarter"}
{"question": "How many different products are produced in each headquarter city?", "query": "SELECT count(DISTINCT T1.name) ,  T2.Headquarter FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code GROUP BY T2.Headquarter"}
{"question": "Find number of products which Sony does not make.", "query": "SELECT count(DISTINCT name) FROM products WHERE name NOT IN (SELECT T1.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code WHERE T2.name  =  'Sony')"}
{"question": "How many products are not made by Sony?", "query": "SELECT count(DISTINCT name) FROM products WHERE name NOT IN (SELECT T1.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code WHERE T2.name  =  'Sony')"}
{"question": "Find the name of companies that do not make DVD drive.", "query": "SELECT name FROM manufacturers EXCEPT SELECT T2.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code WHERE T1.name  =  'DVD drive'"}
{"question": "What are the names of companies that do not make DVD drives?", "query": "SELECT name FROM manufacturers EXCEPT SELECT T2.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code WHERE T1.name  =  'DVD drive'"}
{"question": "Find the number of products for each manufacturer, showing the name of each company.", "query": "SELECT count(*) ,  T2.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code GROUP BY T2.name"}
{"question": "How many products are there for each manufacturer?", "query": "SELECT count(*) ,  T2.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code GROUP BY T2.name"}
{"question": "Select the names of all the products in the store.", "query": "SELECT Name FROM Products"}
{"question": "What are the names of all products?", "query": "SELECT Name FROM Products"}
{"question": "Select the names and the prices of all the products in the store.", "query": "SELECT name ,  price FROM products"}
{"question": "What are the names and prices of all products in the store?", "query": "SELECT name ,  price FROM products"}
{"question": "Select the name of the products with a price less than or equal to $200.", "query": "SELECT name FROM products WHERE price  <=  200"}
{"question": "What are the names of products with price at most 200?", "query": "SELECT name FROM products WHERE price  <=  200"}
{"question": "Find all information of all the products with a price between $60 and $120.", "query": "SELECT * FROM products WHERE price BETWEEN 60 AND 120"}
{"question": "What is all the information of all the products that have a price between 60 and 120?", "query": "SELECT * FROM products WHERE price BETWEEN 60 AND 120"}
{"question": "Compute the average price of all the products.", "query": "SELECT avg(price) FROM products"}
{"question": "What is the average price across all products?", "query": "SELECT avg(price) FROM products"}
{"question": "Compute the average price of all products with manufacturer code equal to 2.", "query": "SELECT avg(price) FROM products WHERE Manufacturer  =  2"}
{"question": "What is the average price of products with manufacturer codes equal to 2?", "query": "SELECT avg(price) FROM products WHERE Manufacturer  =  2"}
{"question": "Compute the number of products with a price larger than or equal to $180.", "query": "SELECT count(*) FROM products WHERE price >= 180"}
{"question": "How many products have prices of at least 180?", "query": "SELECT count(*) FROM products WHERE price >= 180"}
{"question": "Select the name and price of all products with a price larger than or equal to $180, and sort first by price (in descending order), and then by name  (in ascending order).", "query": "SELECT name ,  price FROM products WHERE price  >=  180 ORDER BY price DESC ,  name ASC"}
{"question": "What are the names and prices of products that cost at least 180, sorted by price decreasing and name ascending?", "query": "SELECT name ,  price FROM products WHERE price  >=  180 ORDER BY price DESC ,  name ASC"}
{"question": "Select all the data from the products and each product's manufacturer.", "query": "SELECT * FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer  =  T2.code"}
{"question": "What is all the product data, as well as  each product's manufacturer?", "query": "SELECT * FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer  =  T2.code"}
{"question": "Select the average price of each manufacturer's products, showing only the manufacturer's code.", "query": "SELECT AVG(Price) ,  Manufacturer FROM Products GROUP BY Manufacturer"}
{"question": "What are the average prices of products, grouped by manufacturer code?", "query": "SELECT AVG(Price) ,  Manufacturer FROM Products GROUP BY Manufacturer"}
{"question": "Select the average price of each manufacturer's products, showing the manufacturer's name.", "query": "SELECT avg(T1.Price) ,  T2.name FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer  =  T2.code GROUP BY T2.name"}
{"question": "What are the average prices of products, grouped by manufacturer name?", "query": "SELECT avg(T1.Price) ,  T2.name FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer  =  T2.code GROUP BY T2.name"}
{"question": "Select the names of manufacturer whose products have an average price higher than or equal to $150.", "query": "SELECT avg(T1.Price) ,  T2.name FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer  =  T2.code GROUP BY T2.name HAVING avg(T1.price) >= 150"}
{"question": "What are the names and average prices of products for manufacturers whose products cost on average 150 or more?", "query": "SELECT avg(T1.Price) ,  T2.name FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer  =  T2.code GROUP BY T2.name HAVING avg(T1.price) >= 150"}
{"question": "Select the name and price of the cheapest product.", "query": "SELECT name ,  price FROM Products ORDER BY price ASC LIMIT 1"}
{"question": "What is the name and price of the cheapest product?", "query": "SELECT name ,  price FROM Products ORDER BY price ASC LIMIT 1"}
{"question": "Select the name of each manufacturer along with the name and price of its most expensive product.", "query": "SELECT T1.Name ,  max(T1.Price) ,  T2.name FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer  =  T2.code GROUP BY T2.name"}
{"question": "For each manufacturer name, what are the names and prices of their most expensive product?", "query": "SELECT T1.Name ,  max(T1.Price) ,  T2.name FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer  =  T2.code GROUP BY T2.name"}
{"question": "Select the code of the product that is cheapest in each product category.", "query": "SELECT code ,  name ,  min(price) FROM products GROUP BY name"}
{"question": "What are the codes and names of the cheapest products in each category?", "query": "SELECT code ,  name ,  min(price) FROM products GROUP BY name"}
{"question": "What is the id of the problem log that is created most recently?", "query": "SELECT problem_log_id FROM problem_log ORDER BY log_entry_date DESC LIMIT 1"}
{"question": "Which problem log was created most recently? Give me the log id.", "query": "SELECT problem_log_id FROM problem_log ORDER BY log_entry_date DESC LIMIT 1"}
{"question": "What is the oldest log id and its corresponding problem id?", "query": "SELECT problem_log_id ,  problem_id FROM problem_log ORDER BY log_entry_date LIMIT 1"}
{"question": "Find the oldest log id and its corresponding problem id.", "query": "SELECT problem_log_id ,  problem_id FROM problem_log ORDER BY log_entry_date LIMIT 1"}
{"question": "Find all the ids and dates of the logs for the problem whose id is 10.", "query": "SELECT problem_log_id ,  log_entry_date FROM problem_log WHERE problem_id = 10"}
{"question": "For the problem with id 10, return the ids and dates of its problem logs.", "query": "SELECT problem_log_id ,  log_entry_date FROM problem_log WHERE problem_id = 10"}
{"question": "List all the log ids and their descriptions from the problem logs.", "query": "SELECT problem_log_id ,  log_entry_description FROM problem_log"}
{"question": "What are the log id and entry description of each problem?", "query": "SELECT problem_log_id ,  log_entry_description FROM problem_log"}
{"question": "List the first and last names of all distinct staff members who are assigned to the problem whose id is 1.", "query": "SELECT DISTINCT staff_first_name ,  staff_last_name FROM staff AS T1 JOIN problem_log AS T2 ON T1.staff_id = T2.assigned_to_staff_id WHERE T2.problem_id = 1"}
{"question": "Which staff members are assigned to the problem with id 1? Give me their first and last names.", "query": "SELECT DISTINCT staff_first_name ,  staff_last_name FROM staff AS T1 JOIN problem_log AS T2 ON T1.staff_id = T2.assigned_to_staff_id WHERE T2.problem_id = 1"}
{"question": "List the problem id and log id which are assigned to the staff named Rylan Homenick.", "query": "SELECT DISTINCT T2.problem_id ,  T2.problem_log_id FROM staff AS T1 JOIN problem_log AS T2 ON T1.staff_id = T2.assigned_to_staff_id WHERE T1.staff_first_name = \"Rylan\" AND T1.staff_last_name = \"Homenick\""}
{"question": "Which problem id and log id are assigned to the staff named Rylan Homenick?", "query": "SELECT DISTINCT T2.problem_id ,  T2.problem_log_id FROM staff AS T1 JOIN problem_log AS T2 ON T1.staff_id = T2.assigned_to_staff_id WHERE T1.staff_first_name = \"Rylan\" AND T1.staff_last_name = \"Homenick\""}
{"question": "How many problems are there for product voluptatem?", "query": "SELECT count(*) FROM product AS T1 JOIN problems AS T2 ON T1.product_id = T2.product_id WHERE T1.product_name = \"voluptatem\""}
{"question": "How many problems did the product called \"voluptatem\" have in record?", "query": "SELECT count(*) FROM product AS T1 JOIN problems AS T2 ON T1.product_id = T2.product_id WHERE T1.product_name = \"voluptatem\""}
{"question": "How many problems does the product with the most problems have? List the number of the problems and product name.", "query": "SELECT count(*) ,  T1.product_name FROM product AS T1 JOIN problems AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_name ORDER BY count(*) DESC LIMIT 1"}
{"question": "Which product has the most problems? Give me the number of problems and the product name.", "query": "SELECT count(*) ,  T1.product_name FROM product AS T1 JOIN problems AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_name ORDER BY count(*) DESC LIMIT 1"}
{"question": "Give me a list of descriptions of the problems that are reported by the staff whose first name is Christop.", "query": "SELECT T1.problem_description FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = \"Christop\""}
{"question": "Which problems are reported by the staff with first name \"Christop\"? Show the descriptions of the problems.", "query": "SELECT T1.problem_description FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = \"Christop\""}
{"question": "Find the ids of the problems that are reported by the staff whose last name is Bosco.", "query": "SELECT T1.problem_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_last_name = \"Bosco\""}
{"question": "Which problems are reported by the staff with last name \"Bosco\"? Show the ids of the problems.", "query": "SELECT T1.problem_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_last_name = \"Bosco\""}
{"question": "What are the ids of the problems which are reported after 1978-06-26?", "query": "SELECT problem_id FROM problems WHERE date_problem_reported > \"1978-06-26\""}
{"question": "Find the ids of the problems reported after 1978-06-26.", "query": "SELECT problem_id FROM problems WHERE date_problem_reported > \"1978-06-26\""}
{"question": "What are the ids of the problems which are reported before 1978-06-26?", "query": "SELECT problem_id FROM problems WHERE date_problem_reported < \"1978-06-26\""}
{"question": "Which problems are reported before 1978-06-26? Give me the ids of the problems.", "query": "SELECT problem_id FROM problems WHERE date_problem_reported < \"1978-06-26\""}
{"question": "For each product which has problems, what are the number of problems and the product id?", "query": "SELECT count(*) ,  T2.product_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_id"}
{"question": "For each product with some problems, list the count of problems and the product id.", "query": "SELECT count(*) ,  T2.product_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_id"}
{"question": "For each product that has problems, find the number of problems reported after 1986-11-13 and the product id?", "query": "SELECT count(*) ,  T2.product_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id WHERE T1.date_problem_reported > \"1986-11-13\" GROUP BY T2.product_id"}
{"question": "What are the products that have problems reported after 1986-11-13? Give me the product id and the count of problems reported after 1986-11-13.", "query": "SELECT count(*) ,  T2.product_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id WHERE T1.date_problem_reported > \"1986-11-13\" GROUP BY T2.product_id"}
{"question": "List the names of all the distinct product names in alphabetical order?", "query": "SELECT DISTINCT product_name FROM product ORDER BY product_name"}
{"question": "Sort all the distinct product names in alphabetical order.", "query": "SELECT DISTINCT product_name FROM product ORDER BY product_name"}
{"question": "List all the distinct product names ordered by product id?", "query": "SELECT DISTINCT product_name FROM product ORDER BY product_id"}
{"question": "What is the list of distinct product names sorted by product id?", "query": "SELECT DISTINCT product_name FROM product ORDER BY product_id"}
{"question": "What are the id of problems reported by the staff named Dameon Frami or Jolie Weber?", "query": "SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = \"Dameon\" AND T2.staff_last_name = \"Frami\" UNION SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = \"Jolie\" AND T2.staff_last_name = \"Weber\""}
{"question": "Which problems were reported by the staff named Dameon Frami or Jolie Weber? Give me the ids of the problems.", "query": "SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = \"Dameon\" AND T2.staff_last_name = \"Frami\" UNION SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = \"Jolie\" AND T2.staff_last_name = \"Weber\""}
{"question": "What are the product ids for the problems reported by Christop Berge with closure authorised by Ashley Medhurst?", "query": "SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = \"Christop\" AND T2.staff_last_name = \"Berge\" INTERSECT SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.closure_authorised_by_staff_id = T2.staff_id WHERE T2.staff_first_name = \"Ashley\" AND T2.staff_last_name = \"Medhurst\""}
{"question": "For which product was there a problem reported by Christop Berge, with closure authorised by Ashley Medhurst? Return the product ids.", "query": "SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = \"Christop\" AND T2.staff_last_name = \"Berge\" INTERSECT SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.closure_authorised_by_staff_id = T2.staff_id WHERE T2.staff_first_name = \"Ashley\" AND T2.staff_last_name = \"Medhurst\""}
{"question": "What are the ids of the problems reported before the date of any problem reported by Lysanne Turcotte?", "query": "SELECT T1.problem_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE date_problem_reported  <  ( SELECT min(date_problem_reported) FROM problems AS T3 JOIN staff AS T4 ON T3.reported_by_staff_id = T4.staff_id WHERE T4.staff_first_name = \"Lysanne\" AND T4.staff_last_name = \"Turcotte\" )"}
{"question": "Which problems were reported before the date of any problem reported by the staff Lysanne Turcotte? Give me the ids of the problems.", "query": "SELECT T1.problem_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE date_problem_reported  <  ( SELECT min(date_problem_reported) FROM problems AS T3 JOIN staff AS T4 ON T3.reported_by_staff_id = T4.staff_id WHERE T4.staff_first_name = \"Lysanne\" AND T4.staff_last_name = \"Turcotte\" )"}
{"question": "What are the ids of the problems reported after the date of any problems reported by Rylan Homenick?", "query": "SELECT T1.problem_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE date_problem_reported  >  ( SELECT max(date_problem_reported) FROM problems AS T3 JOIN staff AS T4 ON T3.reported_by_staff_id = T4.staff_id WHERE T4.staff_first_name = \"Rylan\" AND T4.staff_last_name = \"Homenick\" )"}
{"question": "Find the ids of the problems reported after the date of any problems reported by the staff Rylan Homenick.", "query": "SELECT T1.problem_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE date_problem_reported  >  ( SELECT max(date_problem_reported) FROM problems AS T3 JOIN staff AS T4 ON T3.reported_by_staff_id = T4.staff_id WHERE T4.staff_first_name = \"Rylan\" AND T4.staff_last_name = \"Homenick\" )"}
{"question": "Find the top 3 products which have the largest number of problems?", "query": "SELECT T2.product_name FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_name ORDER BY count(*) DESC LIMIT 3"}
{"question": "What are the three products that have the most problems?s", "query": "SELECT T2.product_name FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_name ORDER BY count(*) DESC LIMIT 3"}
{"question": "List the ids of the problems from the product \"voluptatem\" that are reported after 1995?", "query": "SELECT T1.problem_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id WHERE T2.product_name = \"voluptatem\" AND T1.date_problem_reported > \"1995\""}
{"question": "What are the ids of the problems that are from the product \"voluptatem\" and are reported after 1995?", "query": "SELECT T1.problem_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id WHERE T2.product_name = \"voluptatem\" AND T1.date_problem_reported > \"1995\""}
{"question": "Find the first and last name of the staff members who reported problems from the product \"rem\" but not \"aut\"?", "query": "SELECT T3.staff_first_name ,  T3.staff_last_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T2.product_name = \"rem\" EXCEPT SELECT T3.staff_first_name ,  T3.staff_last_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T2.product_name = \"aut\""}
{"question": "Which staff members who reported problems from the product \"rem\" but not \"aut\"? Give me their first and last names.", "query": "SELECT T3.staff_first_name ,  T3.staff_last_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T2.product_name = \"rem\" EXCEPT SELECT T3.staff_first_name ,  T3.staff_last_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T2.product_name = \"aut\""}
{"question": "Find the products which have problems reported by both Lacey Bosco and Kenton Champlin?", "query": "SELECT T2.product_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T3.staff_first_name = \"Lacey\" AND T3.staff_last_name = \"Bosco\" INTERSECT SELECT T2.product_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T3.staff_first_name = \"Kenton\" AND T3.staff_last_name = \"Champlin\""}
{"question": "Which products have problems reported by both the staff named Lacey Bosco and the staff named Kenton Champlin?", "query": "SELECT T2.product_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T3.staff_first_name = \"Lacey\" AND T3.staff_last_name = \"Bosco\" INTERSECT SELECT T2.product_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T3.staff_first_name = \"Kenton\" AND T3.staff_last_name = \"Champlin\""}
{"question": "How many branches where have more than average number of memberships are there?", "query": "SELECT count(*) FROM branch WHERE membership_amount  >  (SELECT avg(membership_amount) FROM branch)"}
{"question": "What is the number of branches that have more than the average number of memberships?", "query": "SELECT count(*) FROM branch WHERE membership_amount  >  (SELECT avg(membership_amount) FROM branch)"}
{"question": "Show name, address road, and city for all branches sorted by open year.", "query": "SELECT name ,  address_road ,  city FROM branch ORDER BY open_year"}
{"question": "What are the names, address roads, and cities of the branches ordered by opening year?", "query": "SELECT name ,  address_road ,  city FROM branch ORDER BY open_year"}
{"question": "What are names for top three branches with most number of membership?", "query": "SELECT name FROM branch ORDER BY membership_amount DESC LIMIT 3"}
{"question": "What are the names for the 3 branches that have the most memberships?", "query": "SELECT name FROM branch ORDER BY membership_amount DESC LIMIT 3"}
{"question": "Show all distinct city where branches with at least 100 memberships are located.", "query": "SELECT DISTINCT city FROM branch WHERE membership_amount  >=  100"}
{"question": "What are the different cities that have more than 100 memberships?", "query": "SELECT DISTINCT city FROM branch WHERE membership_amount  >=  100"}
{"question": "List all open years when at least two shops are opened.", "query": "SELECT open_year FROM branch GROUP BY open_year HAVING count(*)  >=  2"}
{"question": "What are the opening years in which at least two shops opened?", "query": "SELECT open_year FROM branch GROUP BY open_year HAVING count(*)  >=  2"}
{"question": "Show minimum and maximum amount of memberships for all branches opened in 2011 or located at city London.", "query": "SELECT min(membership_amount) ,  max(membership_amount) FROM branch WHERE open_year  =  2011 OR city  =  'London'"}
{"question": "What are the minimum and maximum membership amounts for all branches that either opened in 2011 or are located in London?", "query": "SELECT min(membership_amount) ,  max(membership_amount) FROM branch WHERE open_year  =  2011 OR city  =  'London'"}
{"question": "Show the city and the number of branches opened before 2010 for each city.", "query": "SELECT city ,  count(*) FROM branch WHERE open_year  <  2010 GROUP BY city"}
{"question": "For each city, how many branches opened before 2010?", "query": "SELECT city ,  count(*) FROM branch WHERE open_year  <  2010 GROUP BY city"}
{"question": "How many different levels do members have?", "query": "SELECT count(DISTINCT LEVEL) FROM member"}
{"question": "What are the different membership levels?", "query": "SELECT count(DISTINCT LEVEL) FROM member"}
{"question": "Show card number, name, and hometown for all members in a descending order of level.", "query": "SELECT card_number ,  name ,  hometown FROM member ORDER BY LEVEL DESC"}
{"question": "What are the card numbers, names, and hometowns of every member ordered by descending level?", "query": "SELECT card_number ,  name ,  hometown FROM member ORDER BY LEVEL DESC"}
{"question": "Show the membership level with most number of members.", "query": "SELECT LEVEL FROM member GROUP BY LEVEL ORDER BY count(*) DESC LIMIT 1"}
{"question": "What is the membership level with the most people?", "query": "SELECT LEVEL FROM member GROUP BY LEVEL ORDER BY count(*) DESC LIMIT 1"}
{"question": "Show all member names and registered branch names sorted by register year.", "query": "SELECT T3.name ,  T2.name FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id JOIN member AS T3 ON T1.member_id  =  T3.member_id ORDER BY T1.register_year"}
{"question": "What are the names of the members and branches at which they are registered sorted by year of registration?", "query": "SELECT T3.name ,  T2.name FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id JOIN member AS T3 ON T1.member_id  =  T3.member_id ORDER BY T1.register_year"}
{"question": "Show all branch names with the number of members in each branch registered after 2015.", "query": "SELECT T2.name ,  count(*) FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id WHERE T1.register_year  >  2015 GROUP BY T2.branch_id"}
{"question": "For each branch id, what are the names of the branches that were registered after 2015?", "query": "SELECT T2.name ,  count(*) FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id WHERE T1.register_year  >  2015 GROUP BY T2.branch_id"}
{"question": "Show member names without any registered branch.", "query": "SELECT name FROM member WHERE member_id NOT IN (SELECT member_id FROM membership_register_branch)"}
{"question": "What are the names of the members that have never registered at any branch?", "query": "SELECT name FROM member WHERE member_id NOT IN (SELECT member_id FROM membership_register_branch)"}
{"question": "List the branch name and city without any registered members.", "query": "SELECT name ,  city FROM branch WHERE branch_id NOT IN (SELECT branch_id FROM membership_register_branch)"}
{"question": "What are the names and cities of the branches that do not have any registered members?", "query": "SELECT name ,  city FROM branch WHERE branch_id NOT IN (SELECT branch_id FROM membership_register_branch)"}
{"question": "What is the name and open year for the branch with most number of memberships registered in 2016?", "query": "SELECT T2.name ,  T2.open_year FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id WHERE T1.register_year  =  2016 GROUP BY T2.branch_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "What is the name and opening year for the branch that registered the most members in 2016?", "query": "SELECT T2.name ,  T2.open_year FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id WHERE T1.register_year  =  2016 GROUP BY T2.branch_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "Show the member name and hometown who registered a branch in 2016.", "query": "SELECT T2.name ,  T2.hometown FROM membership_register_branch AS T1 JOIN member AS T2 ON T1.member_id  =  T2.member_id WHERE T1.register_year  =  2016"}
{"question": "What are the member names and hometowns of those who registered at a branch in 2016?", "query": "SELECT T2.name ,  T2.hometown FROM membership_register_branch AS T1 JOIN member AS T2 ON T1.member_id  =  T2.member_id WHERE T1.register_year  =  2016"}
{"question": "Show all city with a branch opened in 2001 and a branch with more than 100 membership.", "query": "SELECT city FROM branch WHERE open_year  =  2001 AND membership_amount  >  100"}
{"question": "What are the cities that have a branch that opened in 2001 and a branch with more than 100 members?", "query": "SELECT city FROM branch WHERE open_year  =  2001 AND membership_amount  >  100"}
{"question": "Show all cities without a branch having more than 100 memberships.", "query": "SELECT city FROM branch EXCEPT SELECT city FROM branch WHERE membership_amount  >  100"}
{"question": "What are the cities that do not have any branches with more than 100 members?", "query": "SELECT city FROM branch EXCEPT SELECT city FROM branch WHERE membership_amount  >  100"}
{"question": "What is the sum of total pounds of purchase in year 2018 for all branches in London?", "query": "SELECT sum(total_pounds) FROM purchase AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id WHERE T2.city  =  'London' AND T1.year  =  2018"}
{"question": "How many total pounds were purchased in the year 2018 at all London branches?", "query": "SELECT sum(total_pounds) FROM purchase AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id WHERE T2.city  =  'London' AND T1.year  =  2018"}
{"question": "What is the total number of purchases for members with level 6?", "query": "SELECT count(*) FROM purchase AS T1 JOIN member AS T2 ON T1.member_id  =  T2.member_id WHERE T2.level  =  6"}
{"question": "What are the total purchases for members rated at level 6?", "query": "SELECT count(*) FROM purchase AS T1 JOIN member AS T2 ON T1.member_id  =  T2.member_id WHERE T2.level  =  6"}
{"question": "Find the name of branches where have some members whose hometown is in Louisville, Kentucky and some in Hiram, Georgia.", "query": "SELECT T2.name FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id JOIN member AS T3 ON T1.member_id  =  T3.member_id WHERE T3.Hometown  =  'Louisville ,  Kentucky' INTERSECT SELECT T2.name FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id JOIN member AS T3 ON T1.member_id  =  T3.member_id WHERE T3.Hometown  =  'Hiram ,  Georgia'"}
{"question": "What are the names of the branches that have some members with a hometown in Louisville, Kentucky and also those from Hiram, Goergia?", "query": "SELECT T2.name FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id JOIN member AS T3 ON T1.member_id  =  T3.member_id WHERE T3.Hometown  =  'Louisville ,  Kentucky' INTERSECT SELECT T2.name FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id JOIN member AS T3 ON T1.member_id  =  T3.member_id WHERE T3.Hometown  =  'Hiram ,  Georgia'"}
{"question": "list the card number of all members whose hometown address includes word \"Kentucky\".", "query": "SELECT card_number FROM member WHERE Hometown LIKE \"%Kentucky%\""}
{"question": "What are the card numbers of members from Kentucky?", "query": "SELECT card_number FROM member WHERE Hometown LIKE \"%Kentucky%\""}
{"question": "How many students are there in total?", "query": "SELECT count(*) FROM STUDENT"}
{"question": "Find the number of voting records in total.", "query": "SELECT count(*) FROM VOTING_RECORD"}
{"question": "How many voting records do we have?", "query": "SELECT count(*) FROM VOTING_RECORD"}
{"question": "Find the distinct number of president votes.", "query": "SELECT count(DISTINCT President_Vote) FROM VOTING_RECORD"}
{"question": "How many distinct president votes are recorded?", "query": "SELECT count(DISTINCT President_Vote) FROM VOTING_RECORD"}
{"question": "Find the maximum age of all the students.", "query": "SELECT max(Age) FROM STUDENT"}
{"question": "What is the oldest age among the students?", "query": "SELECT max(Age) FROM STUDENT"}
{"question": "Find the last names of students with major 50.", "query": "SELECT LName FROM STUDENT WHERE Major  =  50"}
{"question": "What are the last names of students studying major 50?", "query": "SELECT LName FROM STUDENT WHERE Major  =  50"}
{"question": "Find the first names of students with age above 22.", "query": "SELECT Fname FROM STUDENT WHERE Age  >  22"}
{"question": "What are the first names of all the students aged above 22?", "query": "SELECT Fname FROM STUDENT WHERE Age  >  22"}
{"question": "What are the majors of male (sex is M) students?", "query": "SELECT Major FROM STUDENT WHERE Sex  =  \"M\""}
{"question": "List the major of each male student.", "query": "SELECT Major FROM STUDENT WHERE Sex  =  \"M\""}
{"question": "What is the average age of female (sex is F) students?", "query": "SELECT avg(Age) FROM STUDENT WHERE Sex  =  \"F\""}
{"question": "Find the average age of female students.", "query": "SELECT avg(Age) FROM STUDENT WHERE Sex  =  \"F\""}
{"question": "What are the maximum and minimum age of students with major 600?", "query": "SELECT max(Age) ,  min(Age) FROM STUDENT WHERE Major  =  600"}
{"question": "Tell me the ages of the oldest and youngest students studying major 600.", "query": "SELECT max(Age) ,  min(Age) FROM STUDENT WHERE Major  =  600"}
{"question": "Who are the advisors for students that live in a city with city code \"BAL\"?", "query": "SELECT Advisor FROM STUDENT WHERE city_code  =  \"BAL\""}
{"question": "Show the advisors of the students whose city of residence has city code \"BAL\".", "query": "SELECT Advisor FROM STUDENT WHERE city_code  =  \"BAL\""}
{"question": "What are the distinct secretary votes in the fall election cycle?", "query": "SELECT DISTINCT Secretary_Vote FROM VOTING_RECORD WHERE ELECTION_CYCLE  =  \"Fall\""}
{"question": "Return all the distinct secretary votes made in the fall election cycle.", "query": "SELECT DISTINCT Secretary_Vote FROM VOTING_RECORD WHERE ELECTION_CYCLE  =  \"Fall\""}
{"question": "What are the distinct president votes on 08/30/2015?", "query": "SELECT DISTINCT PRESIDENT_Vote FROM VOTING_RECORD WHERE Registration_Date  =  \"08/30/2015\""}
{"question": "Show all the distinct president votes made on 08/30/2015.", "query": "SELECT DISTINCT PRESIDENT_Vote FROM VOTING_RECORD WHERE Registration_Date  =  \"08/30/2015\""}
{"question": "Report the distinct registration date and the election cycle.", "query": "SELECT DISTINCT Registration_Date ,  Election_Cycle FROM VOTING_RECORD"}
{"question": "What are the distinct registration dates and the election cycles?", "query": "SELECT DISTINCT Registration_Date ,  Election_Cycle FROM VOTING_RECORD"}
{"question": "Report the distinct president vote and the vice president vote.", "query": "SELECT DISTINCT President_Vote ,  VICE_President_Vote FROM VOTING_RECORD"}
{"question": "List all the distinct president votes and the vice president votes.", "query": "SELECT DISTINCT President_Vote ,  VICE_President_Vote FROM VOTING_RECORD"}
{"question": "Find the distinct last names of the students who have class president votes.", "query": "SELECT DISTINCT T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.CLASS_President_VOTE"}
{"question": "What are the distinct last names of the students who have class president votes?", "query": "SELECT DISTINCT T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.CLASS_President_VOTE"}
{"question": "Find the distinct first names of the students who have class senator votes.", "query": "SELECT DISTINCT T1.Fname FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.CLASS_Senator_VOTE"}
{"question": "What are the distinct first names of the students who have class president votes?", "query": "SELECT DISTINCT T1.Fname FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.CLASS_Senator_VOTE"}
{"question": "Find the distinct ages of students who have secretary votes in the fall election cycle.", "query": "SELECT DISTINCT T1.Age FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.Secretary_Vote WHERE T2.Election_Cycle  =  \"Fall\""}
{"question": "What are the distinct ages of students who have secretary votes in the fall election cycle?", "query": "SELECT DISTINCT T1.Age FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.Secretary_Vote WHERE T2.Election_Cycle  =  \"Fall\""}
{"question": "Find the distinct Advisor of students who have treasurer votes in the spring election cycle.", "query": "SELECT DISTINCT T1.Advisor FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.Treasurer_Vote WHERE T2.Election_Cycle  =  \"Spring\""}
{"question": "Who served as an advisor for students who have treasurer votes in the spring election cycle?", "query": "SELECT DISTINCT T1.Advisor FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.Treasurer_Vote WHERE T2.Election_Cycle  =  \"Spring\""}
{"question": "Find the distinct majors of students who have treasurer votes.", "query": "SELECT DISTINCT T1.Major FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.Treasurer_Vote"}
{"question": "What are the distinct majors that students with treasurer votes are studying?", "query": "SELECT DISTINCT T1.Major FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.Treasurer_Vote"}
{"question": "Find the first and last names of all the female (sex is F) students who have president votes.", "query": "SELECT DISTINCT T1.Fname ,  T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.President_VOTE WHERE T1.sex  =  \"F\""}
{"question": "What are the first and last names of all the female students who have president votes?", "query": "SELECT DISTINCT T1.Fname ,  T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.President_VOTE WHERE T1.sex  =  \"F\""}
{"question": "Find the first and last name of all the students of age 18 who have vice president votes.", "query": "SELECT DISTINCT T1.Fname ,  T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.VICE_President_VOTE WHERE T1.age  =  18"}
{"question": "What are the first names and last names of the students who are 18 years old and have vice president votes.", "query": "SELECT DISTINCT T1.Fname ,  T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.VICE_President_VOTE WHERE T1.age  =  18"}
{"question": "How many male (sex is M) students have class senator votes in the fall election cycle?", "query": "SELECT count(*) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  Class_Senator_Vote WHERE T1.Sex  =  \"M\" AND T2.Election_Cycle  =  \"Fall\""}
{"question": "Count the number of male students who had class senator votes in the fall election cycle.", "query": "SELECT count(*) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  Class_Senator_Vote WHERE T1.Sex  =  \"M\" AND T2.Election_Cycle  =  \"Fall\""}
{"question": "Find the number of students whose city code is NYC and who have class senator votes in the spring election cycle.", "query": "SELECT count(*) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  Class_Senator_Vote WHERE T1.city_code  =  \"NYC\" AND T2.Election_Cycle  =  \"Spring\""}
{"question": "Which students live in the city with code \"NYC\" and have class senator votes in the spring election cycle? Count the numbers.", "query": "SELECT count(*) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  Class_Senator_Vote WHERE T1.city_code  =  \"NYC\" AND T2.Election_Cycle  =  \"Spring\""}
{"question": "Find the average age of students who live in the city with code \"NYC\" and have secretary votes in the spring election cycle.", "query": "SELECT avg(T1.Age) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  SECRETARY_Vote WHERE T1.city_code  =  \"NYC\" AND T2.Election_Cycle  =  \"Spring\""}
{"question": "What is the average age of students who have city code \"NYC\" and have secretary votes for the spring election cycle?", "query": "SELECT avg(T1.Age) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  SECRETARY_Vote WHERE T1.city_code  =  \"NYC\" AND T2.Election_Cycle  =  \"Spring\""}
{"question": "Find the average age of female (sex is F) students who have secretary votes in the spring election cycle.", "query": "SELECT avg(T1.Age) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  SECRETARY_Vote WHERE T1.Sex  =  \"F\" AND T2.Election_Cycle  =  \"Spring\""}
{"question": "What is the average age of the female students with secretary votes in the spring election cycle?", "query": "SELECT avg(T1.Age) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  SECRETARY_Vote WHERE T1.Sex  =  \"F\" AND T2.Election_Cycle  =  \"Spring\""}
{"question": "Find the distinct first names of all the students who have vice president votes and whose city code is not PIT.", "query": "SELECT DISTINCT T1.Fname FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.VICE_PRESIDENT_Vote EXCEPT SELECT DISTINCT Fname FROM STUDENT WHERE city_code  =  \"PIT\""}
{"question": "What are the distinct first names of the students who have vice president votes and reside in a city whose city code is not PIT?", "query": "SELECT DISTINCT T1.Fname FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.VICE_PRESIDENT_Vote EXCEPT SELECT DISTINCT Fname FROM STUDENT WHERE city_code  =  \"PIT\""}
{"question": "Find the distinct last names of all the students who have president votes and whose advisor is not 2192.", "query": "SELECT DISTINCT T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  PRESIDENT_Vote EXCEPT SELECT DISTINCT LName FROM STUDENT WHERE Advisor  =  \"2192\""}
{"question": "What are the distinct last names of the students who have president votes but do not have 2192 as the advisor?", "query": "SELECT DISTINCT T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  PRESIDENT_Vote EXCEPT SELECT DISTINCT LName FROM STUDENT WHERE Advisor  =  \"2192\""}
{"question": "Find the distinct last names of all the students who have president votes and whose advisor is 8741.", "query": "SELECT DISTINCT T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  PRESIDENT_Vote INTERSECT SELECT DISTINCT LName FROM STUDENT WHERE Advisor  =  \"8741\""}
{"question": "What are the distinct last names of the students who have president votes and have 8741 as the advisor?", "query": "SELECT DISTINCT T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  PRESIDENT_Vote INTERSECT SELECT DISTINCT LName FROM STUDENT WHERE Advisor  =  \"8741\""}
{"question": "For each advisor, report the total number of students advised by him or her.", "query": "SELECT Advisor ,  count(*) FROM STUDENT GROUP BY Advisor"}
{"question": "Report all advisors that advise more than 2 students.", "query": "SELECT Advisor FROM STUDENT GROUP BY Advisor HAVING COUNT(*)  >  2"}
{"question": "Which advisors have more than two students?", "query": "SELECT Advisor FROM STUDENT GROUP BY Advisor HAVING COUNT(*)  >  2"}
{"question": "Report all majors that have less than 3 students.", "query": "SELECT Major FROM STUDENT GROUP BY Major HAVING COUNT(*)  <  3"}
{"question": "What are the majors only less than three students are studying?", "query": "SELECT Major FROM STUDENT GROUP BY Major HAVING COUNT(*)  <  3"}
{"question": "For each election cycle, report the number of voting records.", "query": "SELECT Election_Cycle ,  count(*) FROM VOTING_RECORD GROUP BY Election_Cycle"}
{"question": "Count the number of voting records for each election cycle.", "query": "SELECT Election_Cycle ,  count(*) FROM VOTING_RECORD GROUP BY Election_Cycle"}
{"question": "Which major has the most students?", "query": "SELECT Major FROM STUDENT GROUP BY major ORDER BY count(*) DESC LIMIT 1"}
{"question": "Find the major that is studied by the largest number of students.", "query": "SELECT Major FROM STUDENT GROUP BY major ORDER BY count(*) DESC LIMIT 1"}
{"question": "What is the most common major among female (sex is F) students?", "query": "SELECT Major FROM STUDENT WHERE Sex  =  \"F\" GROUP BY major ORDER BY count(*) DESC LIMIT 1"}
{"question": "Find the major that is studied by the most female students.", "query": "SELECT Major FROM STUDENT WHERE Sex  =  \"F\" GROUP BY major ORDER BY count(*) DESC LIMIT 1"}
{"question": "What is the city_code of the city that the most students live in?", "query": "SELECT city_code FROM STUDENT GROUP BY city_code ORDER BY count(*) DESC LIMIT 1"}
{"question": "Return the code of the city that has the most students.", "query": "SELECT city_code FROM STUDENT GROUP BY city_code ORDER BY count(*) DESC LIMIT 1"}
{"question": "Report the distinct advisors who have more than 2 students.", "query": "SELECT Advisor FROM STUDENT GROUP BY Advisor HAVING count(*)  >  2"}
{"question": "Which advisors are advising more than 2 students?", "query": "SELECT Advisor FROM STUDENT GROUP BY Advisor HAVING count(*)  >  2"}
{"question": "Count the number of products.", "query": "SELECT count(*) FROM products"}
{"question": "How many colors are there?", "query": "SELECT count(*) FROM ref_colors"}
{"question": "Count the number of colors.", "query": "SELECT count(*) FROM ref_colors"}
{"question": "How many characteristics are there?", "query": "SELECT count(*) FROM CHARACTERISTICS"}
{"question": "Count the number of characteristics.", "query": "SELECT count(*) FROM CHARACTERISTICS"}
{"question": "What are the names and buying prices of all the products?", "query": "SELECT product_name ,  typical_buying_price FROM products"}
{"question": "Return the names and typical buying prices for all products.", "query": "SELECT product_name ,  typical_buying_price FROM products"}
{"question": "List the description of all the colors.", "query": "SELECT color_description FROM ref_colors"}
{"question": "What are the descriptions for each color?", "query": "SELECT color_description FROM ref_colors"}
{"question": "Find the names of all the product characteristics.", "query": "SELECT DISTINCT characteristic_name FROM CHARACTERISTICS"}
{"question": "What are the different names of the product characteristics?", "query": "SELECT DISTINCT characteristic_name FROM CHARACTERISTICS"}
{"question": "What are the names of products with category \"Spices\"?", "query": "SELECT product_name FROM products WHERE product_category_code  =  \"Spices\""}
{"question": "Return the names of products in the category 'Spices'.", "query": "SELECT product_name FROM products WHERE product_category_code  =  \"Spices\""}
{"question": "List the names, color descriptions and product descriptions of products with category \"Herbs\".", "query": "SELECT T1.product_name ,  T2.color_description ,  T1.product_description FROM products AS T1 JOIN Ref_colors AS T2 ON T1.color_code  =  T2.color_code WHERE product_category_code  =  \"Herbs\""}
{"question": "What are the names, color descriptions, and product descriptions for products in the 'Herbs' category?", "query": "SELECT T1.product_name ,  T2.color_description ,  T1.product_description FROM products AS T1 JOIN Ref_colors AS T2 ON T1.color_code  =  T2.color_code WHERE product_category_code  =  \"Herbs\""}
{"question": "How many products are there under the category \"Seeds\"?", "query": "SELECT count(*) FROM products WHERE product_category_code  =  \"Seeds\""}
{"question": "Count the number of products in the category 'Seeds'.", "query": "SELECT count(*) FROM products WHERE product_category_code  =  \"Seeds\""}
{"question": "Find the number of products with category \"Spices\" and typically sold above 1000.", "query": "SELECT count(*) FROM products WHERE product_category_code  =  \"Spices\" AND typical_buying_price  >  1000"}
{"question": "How many products are in the 'Spices' category and have a typical price of over 1000?", "query": "SELECT count(*) FROM products WHERE product_category_code  =  \"Spices\" AND typical_buying_price  >  1000"}
{"question": "What is the category and typical buying price  of the product with name \"cumin\"?", "query": "SELECT product_category_code ,  typical_buying_price FROM products WHERE product_name  =  \"cumin\""}
{"question": "Return the category code and typical price of 'cumin'.", "query": "SELECT product_category_code ,  typical_buying_price FROM products WHERE product_name  =  \"cumin\""}
{"question": "Which category does the product named \"flax\" belong to?", "query": "SELECT product_category_code FROM products WHERE product_name  =  \"flax\""}
{"question": "What is the code of the category that the product with the name 'flax' belongs to?", "query": "SELECT product_category_code FROM products WHERE product_name  =  \"flax\""}
{"question": "What is the name of the product with the color description 'yellow'?", "query": "SELECT T1.product_name FROM products AS T1 JOIN ref_colors AS T2 ON T1.color_code  =  T2.color_code WHERE T2.color_description  =  'yellow'"}
{"question": "Give the name of the products that have a color description 'yellow'.", "query": "SELECT T1.product_name FROM products AS T1 JOIN ref_colors AS T2 ON T1.color_code  =  T2.color_code WHERE T2.color_description  =  'yellow'"}
{"question": "Find the category descriptions of the products whose descriptions include letter 't'.", "query": "SELECT T1.product_category_description FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code  =  T2.product_category_code WHERE T2.product_description LIKE '%t%'"}
{"question": "What are the descriptions of the categories that products with product descriptions that contain the letter t are in?", "query": "SELECT T1.product_category_description FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code  =  T2.product_category_code WHERE T2.product_description LIKE '%t%'"}
{"question": "What is the color description of the product with name \"catnip\"?", "query": "SELECT t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t1.product_name  =  \"catnip\""}
{"question": "Give the color description for the product 'catnip'.", "query": "SELECT t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t1.product_name  =  \"catnip\""}
{"question": "What is the color code and description of the product named \"chervil\"?", "query": "SELECT t1.color_code ,  t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t1.product_name  =  \"chervil\""}
{"question": "Return the color code and description for the product with the name 'chervil'.", "query": "SELECT t1.color_code ,  t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t1.product_name  =  \"chervil\""}
{"question": "Find the id and color description of the products with at least 2 characteristics.", "query": "SELECT t1.product_id ,  t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code JOIN product_characteristics AS t3 ON t1.product_id  =  t3.product_id GROUP BY t1.product_id HAVING count(*)  >=  2"}
{"question": "What are the product ids and color descriptions for products with two or more characteristics?", "query": "SELECT t1.product_id ,  t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code JOIN product_characteristics AS t3 ON t1.product_id  =  t3.product_id GROUP BY t1.product_id HAVING count(*)  >=  2"}
{"question": "List all the product names with the color description \"white\".", "query": "SELECT t1.product_name FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t2.color_description  =  \"white\""}
{"question": "What are the names of products with 'white' as their color description?", "query": "SELECT t1.product_name FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t2.color_description  =  \"white\""}
{"question": "What are the name and typical buying and selling prices of the products that have color described as \"yellow\"?", "query": "SELECT t1.product_name ,  t1.typical_buying_price ,  t1.typical_selling_price FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t2.color_description  =  \"yellow\""}
{"question": "Return the names and typical buying and selling prices for products that have 'yellow' as their color description.", "query": "SELECT t1.product_name ,  t1.typical_buying_price ,  t1.typical_selling_price FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t2.color_description  =  \"yellow\""}
{"question": "How many characteristics does the product named \"sesame\" have?", "query": "SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id WHERE t1.product_name  =  \"sesame\""}
{"question": "Count the number of characteristics the product 'sesame' has.", "query": "SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id WHERE t1.product_name  =  \"sesame\""}
{"question": "How many distinct characteristic names does the product \"cumin\" have?", "query": "SELECT count(DISTINCT t3.characteristic_name) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"sesame\""}
{"question": "Count the number of different characteristic names the product 'cumin' has.", "query": "SELECT count(DISTINCT t3.characteristic_name) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"sesame\""}
{"question": "What are all the characteristic names of product \"sesame\"?", "query": "SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"sesame\""}
{"question": "Return the characteristic names of the 'sesame' product.", "query": "SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"sesame\""}
{"question": "List all the characteristic names and data types of product \"cumin\".", "query": "SELECT t3.characteristic_name ,  t3.characteristic_data_type FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"cumin\""}
{"question": "What are the names and data types of the characteristics of the 'cumin' product?", "query": "SELECT t3.characteristic_name ,  t3.characteristic_data_type FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"cumin\""}
{"question": "List all characteristics of product named \"sesame\" with type code \"Grade\".", "query": "SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"sesame\" AND t3.characteristic_type_code  =  \"Grade\""}
{"question": "What are the names of the characteristics of the product 'sesame' that have the characteristic type code 'Grade'?", "query": "SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"sesame\" AND t3.characteristic_type_code  =  \"Grade\""}
{"question": "How many characteristics does the product named \"laurel\" have?", "query": "SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"laurel\""}
{"question": "Count the number of characteristics of the product named 'laurel'.", "query": "SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"laurel\""}
{"question": "Find the number of characteristics that the product \"flax\" has.", "query": "SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"flax\""}
{"question": "Count the number of characteristics of the 'flax' product.", "query": "SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"flax\""}
{"question": "Find the name of the products that have the color description \"red\" and have the characteristic name \"fast\".", "query": "SELECT product_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id JOIN ref_colors AS t4 ON t1.color_code  =  t4.color_code WHERE t4.color_description  =  \"red\" AND t3.characteristic_name  =  \"fast\""}
{"question": "What are the names of the products that have a color description of 'red' and the 'fast' characteristic?", "query": "SELECT product_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id JOIN ref_colors AS t4 ON t1.color_code  =  t4.color_code WHERE t4.color_description  =  \"red\" AND t3.characteristic_name  =  \"fast\""}
{"question": "How many products have the characteristic named \"hot\"?", "query": "SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t3.characteristic_name  =  \"hot\""}
{"question": "Count the number of products with the 'hot' charactersitic.", "query": "SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t3.characteristic_name  =  \"hot\""}
{"question": "List the all the distinct names of the products with the characteristic name 'warm'.", "query": "SELECT DISTINCT t1.product_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t3.characteristic_name  =  \"warm\""}
{"question": "What are the different product names for products that have the 'warm' characteristic:?", "query": "SELECT DISTINCT t1.product_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t3.characteristic_name  =  \"warm\""}
{"question": "Find the number of the products that have their color described as \"red\" and have a characteristic named \"slow\".", "query": "SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id JOIN ref_colors AS t4 ON t1.color_code  =  t4.color_code WHERE t4.color_description  =  \"red\" AND t3.characteristic_name  =  \"slow\""}
{"question": "How many products have the color description 'red' and the characteristic name 'slow'?", "query": "SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id JOIN ref_colors AS t4 ON t1.color_code  =  t4.color_code WHERE t4.color_description  =  \"red\" AND t3.characteristic_name  =  \"slow\""}
{"question": "Count the products that have the color description \"white\" or have the characteristic name \"hot\".", "query": "SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id JOIN ref_colors AS t4 ON t1.color_code  =  t4.color_code WHERE t4.color_description  =  \"white\" OR t3.characteristic_name  =  \"hot\""}
{"question": "How many products have their color described as 'white' or have a characteristic with the name 'hot'?", "query": "SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id JOIN ref_colors AS t4 ON t1.color_code  =  t4.color_code WHERE t4.color_description  =  \"white\" OR t3.characteristic_name  =  \"hot\""}
{"question": "What is the unit of measuerment of the product category code \"Herbs\"?", "query": "SELECT unit_of_measure FROM ref_product_categories WHERE product_category_code  =  \"Herbs\""}
{"question": "Return the unit of measure for 'Herb' products.", "query": "SELECT unit_of_measure FROM ref_product_categories WHERE product_category_code  =  \"Herbs\""}
{"question": "Find the product category description of the product category with code \"Spices\".", "query": "SELECT product_category_description FROM ref_product_categories WHERE product_category_code  =  \"Spices\""}
{"question": "What is the description of the product category with the code 'Spices'?", "query": "SELECT product_category_description FROM ref_product_categories WHERE product_category_code  =  \"Spices\""}
{"question": "What is the product category description and unit of measurement of category \"Herbs\"?", "query": "SELECT product_category_description ,  unit_of_measure FROM ref_product_categories WHERE product_category_code  =  \"Herbs\""}
{"question": "Return the description and unit of measurement for products in the 'Herbs' category.", "query": "SELECT product_category_description ,  unit_of_measure FROM ref_product_categories WHERE product_category_code  =  \"Herbs\""}
{"question": "What is the unit of measurement of product named \"cumin\"?", "query": "SELECT t2.unit_of_measure FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code  =  t2.product_category_code WHERE t1.product_name  =  \"cumin\""}
{"question": "Give the unit of measure for the product with the name 'cumin'.", "query": "SELECT t2.unit_of_measure FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code  =  t2.product_category_code WHERE t1.product_name  =  \"cumin\""}
{"question": "Find the unit of measurement and product category code of product named \"chervil\".", "query": "SELECT t2.unit_of_measure ,  t2.product_category_code FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code  =  t2.product_category_code WHERE t1.product_name  =  \"chervil\""}
{"question": "What are the unit of measure and category code for the 'chervil' product?", "query": "SELECT t2.unit_of_measure ,  t2.product_category_code FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code  =  t2.product_category_code WHERE t1.product_name  =  \"chervil\""}
{"question": "Find the product names that are colored 'white' but do not have unit of measurement \"Handful\".", "query": "SELECT t1.product_name FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code  =  t2.product_category_code JOIN ref_colors AS t3 ON t1.color_code  =  t3.color_code WHERE t3.color_description  =  \"white\" AND t2.unit_of_measure != \"Handful\""}
{"question": "What are the names of products that are not 'white' in color and are not measured by the unit 'Handful'?", "query": "SELECT t1.product_name FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code  =  t2.product_category_code JOIN ref_colors AS t3 ON t1.color_code  =  t3.color_code WHERE t3.color_description  =  \"white\" AND t2.unit_of_measure != \"Handful\""}
{"question": "What is the description of the color for most products?", "query": "SELECT t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code GROUP BY t2.color_description ORDER BY count(*) DESC LIMIT 1"}
{"question": "Return the color description that is most common across all products.", "query": "SELECT t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code GROUP BY t2.color_description ORDER BY count(*) DESC LIMIT 1"}
{"question": "What is the description of the color used by least products?", "query": "SELECT t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code GROUP BY t2.color_description ORDER BY count(*) ASC LIMIT 1"}
{"question": "Give the color description that is least common across products.", "query": "SELECT t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code GROUP BY t2.color_description ORDER BY count(*) ASC LIMIT 1"}
{"question": "What is the characteristic name used by most number of the products?", "query": "SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id GROUP BY t3.characteristic_name ORDER BY count(*) DESC LIMIT 1"}
{"question": "Return the name of the characteristic that is most common across all products.", "query": "SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id GROUP BY t3.characteristic_name ORDER BY count(*) DESC LIMIT 1"}
{"question": "What are the names, details and data types of the characteristics which are never used by any product?", "query": "SELECT characteristic_name ,  other_characteristic_details ,  characteristic_data_type FROM CHARACTERISTICS EXCEPT SELECT t1.characteristic_name ,  t1.other_characteristic_details ,  t1.characteristic_data_type FROM CHARACTERISTICS AS t1 JOIN product_characteristics AS t2 ON t1.characteristic_id  =  t2.characteristic_id"}
{"question": "Give the names, details, and data types of characteristics that are not found in any product.", "query": "SELECT characteristic_name ,  other_characteristic_details ,  characteristic_data_type FROM CHARACTERISTICS EXCEPT SELECT t1.characteristic_name ,  t1.other_characteristic_details ,  t1.characteristic_data_type FROM CHARACTERISTICS AS t1 JOIN product_characteristics AS t2 ON t1.characteristic_id  =  t2.characteristic_id"}
{"question": "What are characteristic names used at least twice across all products?", "query": "SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id GROUP BY t3.characteristic_name HAVING count(*)  >= 2"}
{"question": "Give the names of characteristics that are in two or more products?", "query": "SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id GROUP BY t3.characteristic_name HAVING count(*)  >= 2"}
{"question": "How many colors are never used by any product?", "query": "SELECT count(*) FROM Ref_colors WHERE color_code NOT IN ( SELECT color_code FROM products )"}
{"question": "Count the number of colors that are not used in any products.", "query": "SELECT count(*) FROM Ref_colors WHERE color_code NOT IN ( SELECT color_code FROM products )"}
{"question": "How many events are there?", "query": "SELECT count(*) FROM event"}
{"question": "List all the event names by year from the most recent to the oldest.", "query": "SELECT name FROM event ORDER BY YEAR DESC"}
{"question": "What is the name of the event that happened in the most recent year?", "query": "SELECT name FROM event ORDER BY YEAR DESC LIMIT 1"}
{"question": "How many stadiums are there?", "query": "SELECT count(*) FROM stadium"}
{"question": "Find the name of the stadium that has the maximum capacity.", "query": "SELECT name FROM stadium ORDER BY capacity DESC LIMIT 1"}
{"question": "Find the names of stadiums whose capacity is smaller than the average capacity.", "query": "SELECT name FROM stadium WHERE capacity  <  (SELECT avg(capacity) FROM stadium)"}
{"question": "Find the country that has the most stadiums.", "query": "SELECT country FROM stadium GROUP BY country ORDER BY count(*) DESC LIMIT 1"}
{"question": "Which country has at most 3 stadiums listed?", "query": "SELECT country FROM stadium GROUP BY country HAVING count(*)  <=  3"}
{"question": "Which country has both stadiums with capacity greater than 60000 and stadiums with capacity less than 50000?", "query": "SELECT country FROM stadium WHERE capacity  >  60000 INTERSECT SELECT country FROM stadium WHERE capacity  <  50000"}
{"question": "How many cities have a stadium that was opened before the year of 2006?", "query": "SELECT count(DISTINCT city) FROM stadium WHERE opening_year  <  2006"}
{"question": "How many stadiums does each country have?", "query": "SELECT country ,  count(*) FROM stadium GROUP BY country"}
{"question": "Which countries do not have a stadium that was opened after 2006?", "query": "SELECT country FROM stadium EXCEPT SELECT country FROM stadium WHERE opening_year  >  2006"}
{"question": "How many stadiums are not in country \"Russia\"?", "query": "SELECT count(*) FROM stadium WHERE country != 'Russia'"}
{"question": "Find the names of all swimmers, sorted by their 100 meter scores in ascending order.", "query": "SELECT name FROM swimmer ORDER BY meter_100"}
{"question": "How many different countries are all the swimmers from?", "query": "SELECT count(DISTINCT nationality) FROM swimmer"}
{"question": "List countries that have more than one swimmer.", "query": "SELECT nationality ,  count(*) FROM swimmer GROUP BY nationality HAVING count(*)  >  1"}
{"question": "Find all 200 meter and 300 meter results of swimmers with nationality \"Australia\".", "query": "SELECT meter_200 ,  meter_300 FROM swimmer WHERE nationality  =  'Australia'"}
{"question": "Find the names of swimmers who has a result of \"win\".", "query": "SELECT t1.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id  =  t2.swimmer_id WHERE RESULT  =  'Win'"}
{"question": "What is the name of the stadium which held the most events?", "query": "SELECT t1.name FROM stadium AS t1 JOIN event AS t2 ON t1.id  =  t2.stadium_id GROUP BY t2.stadium_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "Find the name and capacity of the stadium where the event named \"World Junior\" happened.", "query": "SELECT t1.name ,  t1.capacity FROM stadium AS t1 JOIN event AS t2 ON t1.id  =  t2.stadium_id WHERE t2.name  =  'World Junior'"}
{"question": "Find the names of stadiums which have never had any event.", "query": "SELECT name FROM stadium WHERE id NOT IN (SELECT stadium_id FROM event)"}
{"question": "Find the name of the swimmer who has the most records.", "query": "SELECT t1.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id  =  t2.swimmer_id GROUP BY t2.swimmer_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "Find the name of the swimmer who has at least 2 records.", "query": "SELECT t1.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id  =  t2.swimmer_id GROUP BY t2.swimmer_id HAVING count(*)  >=  2"}
{"question": "Find the name and nationality of the swimmer who has won (i.e., has a result of \"win\") more than 1 time.", "query": "SELECT t1.name ,  t1.nationality FROM swimmer AS t1 JOIN record AS t2 ON t1.id  =  t2.swimmer_id WHERE RESULT  =  'Win' GROUP BY t2.swimmer_id HAVING count(*)  >  1"}
{"question": "Find the names of the swimmers who have no record.", "query": "SELECT name FROM swimmer WHERE id NOT IN (SELECT swimmer_id FROM record)"}
{"question": "Find the names of the swimmers who have both \"win\" and \"loss\" results in the record.", "query": "SELECT t1.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id  =  t2.swimmer_id WHERE RESULT  =  'Win' INTERSECT SELECT t1.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id  =  t2.swimmer_id WHERE RESULT  =  'Loss'"}
{"question": "Find the names of stadiums that some Australian swimmers have been to.", "query": "SELECT t4.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id  =  t2.swimmer_id JOIN event AS t3 ON t2.event_id  =  t3.id JOIN stadium AS t4 ON t4.id  =  t3.stadium_id WHERE t1.nationality  =  'Australia'"}
{"question": "Find the names of stadiums that the most swimmers have been to.", "query": "SELECT t3.name FROM record AS t1 JOIN event AS t2 ON t1.event_id  =  t2.id JOIN stadium AS t3 ON t3.id  =  t2.stadium_id GROUP BY t2.stadium_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "Find all details for each swimmer.", "query": "SELECT * FROM swimmer"}
{"question": "What is the average capacity of the stadiums that were opened in year 2005?", "query": "SELECT avg(capacity) FROM stadium WHERE opening_year  =  2005"}
{"question": "How many railways are there?", "query": "SELECT count(*) FROM railway"}
{"question": "List the builders of railways in ascending alphabetical order.", "query": "SELECT Builder FROM railway ORDER BY Builder ASC"}
{"question": "List the wheels and locations of the railways.", "query": "SELECT Wheels ,  LOCATION FROM railway"}
{"question": "What is the maximum level of managers in countries that are not \"Australia\"?", "query": "SELECT max(LEVEL) FROM manager WHERE Country != \"Australia\t\""}
{"question": "What is the average age for all managers?", "query": "SELECT avg(Age) FROM manager"}
{"question": "What are the names of managers in ascending order of level?", "query": "SELECT Name FROM manager ORDER BY LEVEL ASC"}
{"question": "What are the names and arrival times of trains?", "query": "SELECT Name ,  Arrival FROM train"}
{"question": "What is the name of the oldest manager?", "query": "SELECT Name FROM manager ORDER BY Age DESC LIMIT 1"}
{"question": "Show the names of trains and locations of railways they are in.", "query": "SELECT T2.Name ,  T1.Location FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID  =  T2.Railway_ID"}
{"question": "Show the builder of railways associated with the trains named \"Andaman Exp\".", "query": "SELECT T1.Builder FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID  =  T2.Railway_ID WHERE T2.Name  =  \"Andaman Exp\""}
{"question": "Show id and location of railways that are associated with more than one train.", "query": "SELECT T2.Railway_ID ,  T1.Location FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID  =  T2.Railway_ID GROUP BY T2.Railway_ID HAVING COUNT(*)  >  1"}
{"question": "Show the id and builder of the railway that are associated with the most trains.", "query": "SELECT T2.Railway_ID ,  T1.Builder FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID  =  T2.Railway_ID GROUP BY T2.Railway_ID ORDER BY COUNT(*) DESC LIMIT 1"}
{"question": "Show different builders of railways, along with the corresponding number of railways using each builder.", "query": "SELECT Builder ,  COUNT(*) FROM railway GROUP BY Builder"}
{"question": "Show the most common builder of railways.", "query": "SELECT Builder FROM railway GROUP BY Builder ORDER BY COUNT(*) DESC LIMIT 1"}
{"question": "Show different locations of railways along with the corresponding number of railways at each location.", "query": "SELECT LOCATION ,  COUNT(*) FROM railway GROUP BY LOCATION"}
{"question": "Show the locations that have more than one railways.", "query": "SELECT LOCATION FROM railway GROUP BY LOCATION HAVING COUNT(*)  >  1"}
{"question": "List the object number of railways that do not have any trains.", "query": "SELECT ObjectNumber FROM railway WHERE Railway_ID NOT IN (SELECT Railway_ID FROM train)"}
{"question": "Show the countries that have both managers of age above 50 and managers of age below 46.", "query": "SELECT Country FROM manager WHERE Age  >  50 INTERSECT SELECT Country FROM manager WHERE Age  <  46"}
{"question": "Show the distinct countries of managers.", "query": "SELECT DISTINCT Country FROM manager"}
{"question": "Show the working years of managers in descending order of their level.", "query": "SELECT Working_year_starts FROM manager ORDER BY LEVEL DESC"}
{"question": "Show the countries that have managers of age above 50 or below 46.", "query": "SELECT Country FROM manager WHERE Age  >  50 OR Age  <  46"}
{"question": "How many addresses are there in country USA?", "query": "SELECT count(*) FROM addresses WHERE country  =  'USA'"}
{"question": "Show all distinct cities in the address record.", "query": "SELECT DISTINCT city FROM addresses"}
{"question": "Show each state and the number of addresses in each state.", "query": "SELECT state_province_county ,  count(*) FROM addresses GROUP BY state_province_county"}
{"question": "Show names and phones of customers who do not have address information.", "query": "SELECT customer_name ,  customer_phone FROM customers WHERE customer_id NOT IN (SELECT customer_id FROM customer_address_history)"}
{"question": "Show the name of the customer who has the most orders.", "query": "SELECT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "Show the product type codes which have at least two products.", "query": "SELECT product_type_code FROM products GROUP BY product_type_code HAVING count(*)  >=  2"}
{"question": "Show the names of customers who have both an order in completed status and an order in part status.", "query": "SELECT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_status_code  =  'Completed' INTERSECT SELECT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_status_code  =  'Part'"}
{"question": "Show the name, phone, and payment method code for all customers in descending order of customer number.", "query": "SELECT customer_name ,  customer_phone ,  payment_method_code FROM customers ORDER BY customer_number DESC"}
{"question": "Show the product name and total order quantity for each product.", "query": "SELECT T1.product_name ,  sum(T2.order_quantity) FROM products AS T1 JOIN order_items AS T2 ON T1.product_id  =  T2.product_id GROUP BY T1.product_id"}
{"question": "Show the minimum, maximum, average price for all products.", "query": "SELECT min(product_price) ,  max(product_price) ,  avg(product_price) FROM products"}
{"question": "How many products have a price higher than the average?", "query": "SELECT count(*) FROM products WHERE product_price  >  (SELECT avg(product_price) FROM products)"}
{"question": "Show the customer name, customer address city, date from, and date to for each customer address history.", "query": "SELECT T2.customer_name ,  T3.city ,  T1.date_from ,  T1.date_to FROM customer_address_history AS T1 JOIN customers AS T2 ON T1.customer_id  =  T2.customer_id JOIN addresses AS T3 ON T1.address_id  =  T3.address_id"}
{"question": "Show the names of customers who use Credit Card payment method and have more than 2 orders.", "query": "SELECT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.payment_method_code  =  'Credit Card' GROUP BY T1.customer_id HAVING count(*)  >  2"}
{"question": "What are the name and phone of the customer with the most ordered product quantity?", "query": "SELECT  T1.customer_name ,  T1.customer_phone FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN order_items AS T3 ON T3.order_id  =  T2.order_id GROUP BY T1.customer_id ORDER BY sum(T3.order_quantity) DESC LIMIT 1"}
{"question": "Show the product type and name for the products with price higher than 1000 or lower than 500.", "query": "SELECT product_type_code ,  product_name FROM products WHERE product_price  >  1000 OR product_price  <  500"}
{"question": "Find the name of dorms only for female (F gender).", "query": "SELECT dorm_name FROM dorm WHERE gender  =  'F'"}
{"question": "What are the names of the all-female dorms?", "query": "SELECT dorm_name FROM dorm WHERE gender  =  'F'"}
{"question": "Find the name of dorms that can accommodate more than 300 students.", "query": "SELECT dorm_name FROM dorm WHERE student_capacity  >  300"}
{"question": "What are the names of all the dorms that can accomdate more than 300 students?", "query": "SELECT dorm_name FROM dorm WHERE student_capacity  >  300"}
{"question": "How many female students (sex is F) whose age is below 25?", "query": "SELECT count(*) FROM student WHERE sex  =  'F' AND age  <  25"}
{"question": "How many girl students who are younger than 25?", "query": "SELECT count(*) FROM student WHERE sex  =  'F' AND age  <  25"}
{"question": "Find the first name of students who is older than 20.", "query": "SELECT fname FROM student WHERE age  >  20"}
{"question": "What are the first names of all students who are older than 20?", "query": "SELECT fname FROM student WHERE age  >  20"}
{"question": "Find the first name of students living in city PHL whose age is between 20 and 25.", "query": "SELECT fname FROM student WHERE city_code  =  'PHL' AND age BETWEEN 20 AND 25"}
{"question": "What is the first name of the students who are in age 20 to 25 and living in PHL city?", "query": "SELECT fname FROM student WHERE city_code  =  'PHL' AND age BETWEEN 20 AND 25"}
{"question": "How many dorms are there?", "query": "SELECT count(*) FROM dorm"}
{"question": "How many dorms are in the database?", "query": "SELECT count(*) FROM dorm"}
{"question": "Find the number of distinct amenities.", "query": "SELECT count(*) FROM dorm_amenity"}
{"question": "How many diffrent dorm amenities are there?", "query": "SELECT count(*) FROM dorm_amenity"}
{"question": "Find the total capacity of all dorms.", "query": "SELECT sum(student_capacity) FROM dorm"}
{"question": "What is the total student capacity of all dorms?", "query": "SELECT sum(student_capacity) FROM dorm"}
{"question": "How many students exist?", "query": "SELECT count(*) FROM student"}
{"question": "Find the average age of all students living in the each city.", "query": "SELECT avg(age) ,  city_code FROM student GROUP BY city_code"}
{"question": "What is the average age for each city and what are those cities?", "query": "SELECT avg(age) ,  city_code FROM student GROUP BY city_code"}
{"question": "Find the average and total capacity of dorms for the students with gender X.", "query": "SELECT avg(student_capacity) ,  sum(student_capacity) FROM dorm WHERE gender  =  'X'"}
{"question": "What is the average and total capacity for all dorms who are of gender X?", "query": "SELECT avg(student_capacity) ,  sum(student_capacity) FROM dorm WHERE gender  =  'X'"}
{"question": "Find the number of dorms that have some amenity.", "query": "SELECT count(DISTINCT dormid) FROM has_amenity"}
{"question": "How many dorms have amenities?", "query": "SELECT count(DISTINCT dormid) FROM has_amenity"}
{"question": "Find the name of dorms that do not have any amenity", "query": "SELECT dorm_name FROM dorm WHERE dormid NOT IN (SELECT dormid FROM has_amenity)"}
{"question": "What are the names of all the dorms that don't have any amenities?", "query": "SELECT dorm_name FROM dorm WHERE dormid NOT IN (SELECT dormid FROM has_amenity)"}
{"question": "Find the number of distinct gender for dorms.", "query": "SELECT count(DISTINCT gender) FROM dorm"}
{"question": "How many different genders are there in the dorms?", "query": "SELECT count(DISTINCT gender) FROM dorm"}
{"question": "Find the capacity and gender type of the dorm whose name has substring ‘Donor’.", "query": "SELECT student_capacity ,  gender FROM dorm WHERE dorm_name LIKE '%Donor%'"}
{"question": "What is the student capacity and type of gender for the dorm whose name as the phrase Donor in it?", "query": "SELECT student_capacity ,  gender FROM dorm WHERE dorm_name LIKE '%Donor%'"}
{"question": "Find the name and gender type of the dorms whose capacity is greater than 300 or less than 100.", "query": "SELECT dorm_name ,  gender FROM dorm WHERE student_capacity  >  300 OR student_capacity  <  100"}
{"question": "What are the names and types of the dorms that have a capacity greater than 300 or less than 100?", "query": "SELECT dorm_name ,  gender FROM dorm WHERE student_capacity  >  300 OR student_capacity  <  100"}
{"question": "Find the numbers of different majors and cities.", "query": "SELECT count(DISTINCT major) ,  count(DISTINCT city_code) FROM student"}
{"question": "How many different majors are there and how many different city codes are there for each student?", "query": "SELECT count(DISTINCT major) ,  count(DISTINCT city_code) FROM student"}
{"question": "Find the name of dorms which have both TV Lounge and Study Room as amenities.", "query": "SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T3.amenity_name  =  'TV Lounge' INTERSECT SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T3.amenity_name  =  'Study Room'"}
{"question": "What is the name of the dorm with both a TV Lounge and Study Room listed as amenities?", "query": "SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T3.amenity_name  =  'TV Lounge' INTERSECT SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T3.amenity_name  =  'Study Room'"}
{"question": "Find the name of dorms which have TV Lounge but no Study Room as amenity.", "query": "SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T3.amenity_name  =  'TV Lounge' EXCEPT SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T3.amenity_name  =  'Study Room'"}
{"question": "What is the name of each dorm that has a TV Lounge but no study rooms?", "query": "SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T3.amenity_name  =  'TV Lounge' EXCEPT SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T3.amenity_name  =  'Study Room'"}
{"question": "Find the last name of students who is either female (sex is F) and living in the city of code BAL or male (sex is M) and in age of below 20.", "query": "SELECT lname FROM student WHERE sex  =  'F' AND city_code  =  'BAL' UNION SELECT lname FROM student WHERE sex  =  'M' AND age  <  20"}
{"question": "What is the last name of every student who is either female or living in a city with the code BAL or male and under 20?", "query": "SELECT lname FROM student WHERE sex  =  'F' AND city_code  =  'BAL' UNION SELECT lname FROM student WHERE sex  =  'M' AND age  <  20"}
{"question": "Find the name of the dorm with the largest capacity.", "query": "SELECT dorm_name FROM dorm ORDER BY student_capacity DESC LIMIT 1"}
{"question": "What are the names of the dorm with the largest capacity?", "query": "SELECT dorm_name FROM dorm ORDER BY student_capacity DESC LIMIT 1"}
{"question": "List in alphabetic order all different amenities.", "query": "SELECT amenity_name FROM dorm_amenity ORDER BY amenity_name"}
{"question": "What are the different dorm amenity names in alphabetical order?", "query": "SELECT amenity_name FROM dorm_amenity ORDER BY amenity_name"}
{"question": "Find the code of city where most of students are living in.", "query": "SELECT city_code FROM student GROUP BY city_code ORDER BY count(*) DESC LIMIT 1"}
{"question": "What is the code of the city with the most students?", "query": "SELECT city_code FROM student GROUP BY city_code ORDER BY count(*) DESC LIMIT 1"}
{"question": "Find the first and last name of students whose age is younger than the average age.", "query": "SELECT fname ,  lname FROM student WHERE age  <  (SELECT avg(age) FROM student)"}
{"question": "What is the first and last name of all students who are younger than average?", "query": "SELECT fname ,  lname FROM student WHERE age  <  (SELECT avg(age) FROM student)"}
{"question": "List the first and last name of students who are not living in the city with code HKG, and sorted the results by their ages.", "query": "SELECT fname ,  lname FROM student WHERE city_code != 'HKG' ORDER BY age"}
{"question": "What are the first and last names of all students who are not living in the city HKG and order the results by age?", "query": "SELECT fname ,  lname FROM student WHERE city_code != 'HKG' ORDER BY age"}
{"question": "List name of all amenities which Anonymous Donor Hall has, and sort the results in alphabetic order.", "query": "SELECT T1.amenity_name FROM dorm_amenity AS T1 JOIN has_amenity AS T2 ON T2.amenid  =  T1.amenid JOIN dorm AS T3 ON T2.dormid  =  T3.dormid WHERE T3.dorm_name  =  'Anonymous Donor Hall' ORDER BY T1.amenity_name"}
{"question": "What are the amenities in alphabetical order that Anonymous Donor Hall has?", "query": "SELECT T1.amenity_name FROM dorm_amenity AS T1 JOIN has_amenity AS T2 ON T2.amenid  =  T1.amenid JOIN dorm AS T3 ON T2.dormid  =  T3.dormid WHERE T3.dorm_name  =  'Anonymous Donor Hall' ORDER BY T1.amenity_name"}
{"question": "Find the number of dorms and total capacity for each gender.", "query": "SELECT count(*) ,  sum(student_capacity) ,  gender FROM dorm GROUP BY gender"}
{"question": "How many dorms are there and what is the total capacity for each gender?", "query": "SELECT count(*) ,  sum(student_capacity) ,  gender FROM dorm GROUP BY gender"}
{"question": "Find the average and oldest age for students with different sex.", "query": "SELECT avg(age) ,  max(age) ,  sex FROM student GROUP BY sex"}
{"question": "What is the average and oldest age for each gender of student?", "query": "SELECT avg(age) ,  max(age) ,  sex FROM student GROUP BY sex"}
{"question": "Find the number of students in each major.", "query": "SELECT count(*) ,  major FROM student GROUP BY major"}
{"question": "How many students are there in each major?", "query": "SELECT count(*) ,  major FROM student GROUP BY major"}
{"question": "Find the number and average age of students living in each city.", "query": "SELECT count(*) ,  avg(age) ,  city_code FROM student GROUP BY city_code"}
{"question": "How many students live in each city and what are their average ages?", "query": "SELECT count(*) ,  avg(age) ,  city_code FROM student GROUP BY city_code"}
{"question": "Find the average age and number of male students (with sex M) from each city.", "query": "SELECT count(*) ,  avg(age) ,  city_code FROM student WHERE sex  =  'M' GROUP BY city_code"}
{"question": "What is the average age and how many male students are there in each city?", "query": "SELECT count(*) ,  avg(age) ,  city_code FROM student WHERE sex  =  'M' GROUP BY city_code"}
{"question": "Find the number of students for the cities where have more than one student.", "query": "SELECT count(*) ,  city_code FROM student GROUP BY city_code HAVING count(*)  >  1"}
{"question": "How many students are from each city, and which cities have more than one cities?", "query": "SELECT count(*) ,  city_code FROM student GROUP BY city_code HAVING count(*)  >  1"}
{"question": "Find the first and last name of students who are not in the largest major.", "query": "SELECT fname ,  lname FROM student WHERE major != (SELECT major FROM student GROUP BY major ORDER BY count(*) DESC LIMIT 1)"}
{"question": "What is the first and last name of the students who are not in the largest major?", "query": "SELECT fname ,  lname FROM student WHERE major != (SELECT major FROM student GROUP BY major ORDER BY count(*) DESC LIMIT 1)"}
{"question": "Find the number of students whose age is older than the average age for each gender.", "query": "SELECT count(*) ,  sex FROM student WHERE age  >  (SELECT avg(age) FROM student) GROUP BY sex"}
{"question": "How many students are older than average for each gender?", "query": "SELECT count(*) ,  sex FROM student WHERE age  >  (SELECT avg(age) FROM student) GROUP BY sex"}
{"question": "Find the average age of students living in each dorm and the name of dorm.", "query": "SELECT avg(T1.age) ,  T3.dorm_name FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid GROUP BY T3.dorm_name"}
{"question": "What is the average age for each dorm and what are the names of each dorm?", "query": "SELECT avg(T1.age) ,  T3.dorm_name FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid GROUP BY T3.dorm_name"}
{"question": "Find the number of amenities for each of the dorms that can accommodate more than 100 students.", "query": "SELECT count(*) ,  T1.dormid FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid WHERE T1.student_capacity  >  100 GROUP BY T1.dormid"}
{"question": "For each dorm, how many amenities does it have?", "query": "SELECT count(*) ,  T1.dormid FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid WHERE T1.student_capacity  >  100 GROUP BY T1.dormid"}
{"question": "Find the number of students who is older than 20 in each dorm.", "query": "SELECT count(*) ,  T3.dorm_name FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T1.age  >  20 GROUP BY T3.dorm_name"}
{"question": "How many students are older than 20 in each dorm?", "query": "SELECT count(*) ,  T3.dorm_name FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T1.age  >  20 GROUP BY T3.dorm_name"}
{"question": "Find the first name of students who are living in the Smith Hall.", "query": "SELECT T1.fname FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T3.dorm_name  =  'Smith Hall'"}
{"question": "What are the first names of all students in Smith Hall?", "query": "SELECT T1.fname FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T3.dorm_name  =  'Smith Hall'"}
{"question": "Find the average age of students who are living in the dorm with the largest capacity.", "query": "SELECT avg(T1.age) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T3.student_capacity  =  (SELECT max(student_capacity) FROM dorm)"}
{"question": "What is the average age of students who are living in the dorm with the largest capacity?", "query": "SELECT avg(T1.age) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T3.student_capacity  =  (SELECT max(student_capacity) FROM dorm)"}
{"question": "Find the total number of students living in the male dorm (with gender M).", "query": "SELECT count(*) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T3.gender  =  'M'"}
{"question": "What are the total number of students who are living in a male dorm?", "query": "SELECT count(*) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T3.gender  =  'M'"}
{"question": "Find the number of female students (with F sex) living in Smith Hall", "query": "SELECT count(*) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T3.dorm_name  =  'Smith Hall' AND T1.sex  =  'F'"}
{"question": "How many female students live in Smith Hall?", "query": "SELECT count(*) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T3.dorm_name  =  'Smith Hall' AND T1.sex  =  'F'"}
{"question": "Find the name of amenities Smith Hall dorm have.", "query": "SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T1.dorm_name  =  'Smith Hall'"}
{"question": "What are the names of the amenities that Smith Hall has?", "query": "SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T1.dorm_name  =  'Smith Hall'"}
{"question": "Find the name of amenities Smith Hall dorm have. ordered the results by amenity names.", "query": "SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T1.dorm_name  =  'Smith Hall' ORDER BY T3.amenity_name"}
{"question": "What amenities does Smith Hall have in alphabetical order?", "query": "SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T1.dorm_name  =  'Smith Hall' ORDER BY T3.amenity_name"}
{"question": "Find the name of amenity that is most common in all dorms.", "query": "SELECT T1.amenity_name FROM dorm_amenity AS T1 JOIN has_amenity AS T2 ON T1.amenid  =  T2.amenid GROUP BY T2.amenid ORDER BY count(*) DESC LIMIT 1"}
{"question": "What is the most common amenity in the dorms?", "query": "SELECT T1.amenity_name FROM dorm_amenity AS T1 JOIN has_amenity AS T2 ON T1.amenid  =  T2.amenid GROUP BY T2.amenid ORDER BY count(*) DESC LIMIT 1"}
{"question": "Find the first name of students who are living in the dorm that has most number of amenities.", "query": "SELECT T1.fname FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid WHERE T2.dormid IN (SELECT T2.dormid FROM dorm AS T3 JOIN has_amenity AS T4 ON T3.dormid  =  T4.dormid JOIN dorm_amenity AS T5 ON T4.amenid  =  T5.amenid GROUP BY T3.dormid ORDER BY count(*) DESC LIMIT 1)"}
{"question": "What are the first names of all students who live in the dorm with the most amenities?", "query": "SELECT T1.fname FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid WHERE T2.dormid IN (SELECT T2.dormid FROM dorm AS T3 JOIN has_amenity AS T4 ON T3.dormid  =  T4.dormid JOIN dorm_amenity AS T5 ON T4.amenid  =  T5.amenid GROUP BY T3.dormid ORDER BY count(*) DESC LIMIT 1)"}
{"question": "Find the name and capacity of the dorm with least number of amenities.", "query": "SELECT T1.dorm_name ,  T1.student_capacity FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid GROUP BY T2.dormid ORDER BY count(*) LIMIT 1"}
{"question": "What is the name and capacity of the dorm with the fewest amount of amenities?", "query": "SELECT T1.dorm_name ,  T1.student_capacity FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid GROUP BY T2.dormid ORDER BY count(*) LIMIT 1"}
{"question": "Find the name of dorms that do not have amenity TV Lounge.", "query": "SELECT dorm_name FROM dorm EXCEPT SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T3.amenity_name  =  'TV Lounge'"}
{"question": "What are the names of the dorm that does not have a TV Lounge?", "query": "SELECT dorm_name FROM dorm EXCEPT SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T3.amenity_name  =  'TV Lounge'"}
{"question": "Find the first and last name of students who are living in the dorms that have amenity TV Lounge.", "query": "SELECT T1.fname ,  T1.lname FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid WHERE T2.dormid IN (SELECT T3.dormid FROM has_amenity AS T3 JOIN dorm_amenity AS T4 ON T3.amenid  =  T4.amenid WHERE T4.amenity_name  =  'TV Lounge')"}
{"question": "What are the first and last names of all students who are living in a dorm with a TV Lounge?", "query": "SELECT T1.fname ,  T1.lname FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid WHERE T2.dormid IN (SELECT T3.dormid FROM has_amenity AS T3 JOIN dorm_amenity AS T4 ON T3.amenid  =  T4.amenid WHERE T4.amenity_name  =  'TV Lounge')"}
{"question": "Find the first name and age of students who are living in the dorms that do not have amenity TV Lounge.", "query": "SELECT T1.fname ,  T1.age FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid WHERE T2.dormid NOT IN (SELECT T3.dormid FROM has_amenity AS T3 JOIN dorm_amenity AS T4 ON T3.amenid  =  T4.amenid WHERE T4.amenity_name  =  'TV Lounge')"}
{"question": "What is the first name and age of every student who lives in a dorm with a TV Lounge?", "query": "SELECT T1.fname ,  T1.age FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid WHERE T2.dormid NOT IN (SELECT T3.dormid FROM has_amenity AS T3 JOIN dorm_amenity AS T4 ON T3.amenid  =  T4.amenid WHERE T4.amenity_name  =  'TV Lounge')"}
{"question": "Find the name of amenities of the dorm where the student with last name Smith is living in.", "query": "SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid JOIN lives_in AS T4 ON T4.dormid  =  T1.dormid JOIN student AS T5 ON T5.stuid  =  T4.stuid WHERE T5.lname  =  'Smith'"}
{"question": "What are the amenities in the dorm that a student who has the last name of Smith lives in?", "query": "SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid JOIN lives_in AS T4 ON T4.dormid  =  T1.dormid JOIN student AS T5 ON T5.stuid  =  T4.stuid WHERE T5.lname  =  'Smith'"}
{"question": "Find the emails and phone numbers of all the customers, ordered by email address and phone number.", "query": "SELECT email_address ,  phone_number FROM customers ORDER BY email_address ,  phone_number"}
{"question": "What are the emails and phone numbers of all customers, sorted by email address and phone number?", "query": "SELECT email_address ,  phone_number FROM customers ORDER BY email_address ,  phone_number"}
{"question": "Which city has the least number of customers whose type code is \"Good Credit Rating\"?", "query": "SELECT town_city FROM customers WHERE customer_type_code  =  \"Good Credit Rating\" GROUP BY town_city ORDER BY count(*) LIMIT 1"}
{"question": "Return the city with the customer type code \"Good Credit Rating\" that had the fewest customers.", "query": "SELECT town_city FROM customers WHERE customer_type_code  =  \"Good Credit Rating\" GROUP BY town_city ORDER BY count(*) LIMIT 1"}
{"question": "List the name of all products along with the number of complaints that they have received.", "query": "SELECT t1.product_name ,  count(*) FROM products AS t1 JOIN complaints AS t2 ON t1.product_id  =  t2.product_id GROUP BY t1.product_name"}
{"question": "What are all the different product names, and how many complains has each received?", "query": "SELECT t1.product_name ,  count(*) FROM products AS t1 JOIN complaints AS t2 ON t1.product_id  =  t2.product_id GROUP BY t1.product_name"}
{"question": "Find the emails of customers who has filed a complaints of the product with the most complaints.", "query": "SELECT t1.email_address FROM customers AS t1 JOIN complaints AS t2 ON t1.customer_id  =  t2.customer_id GROUP BY t1.customer_id ORDER BY count(*) LIMIT 1"}
{"question": "What are the emails of customers who have filed complaints on the product which has had the greatest number of complaints?", "query": "SELECT t1.email_address FROM customers AS t1 JOIN complaints AS t2 ON t1.customer_id  =  t2.customer_id GROUP BY t1.customer_id ORDER BY count(*) LIMIT 1"}
{"question": "Which products has been complained by the customer who has filed least amount of complaints?", "query": "SELECT DISTINCT t1.product_name FROM products AS t1 JOIN complaints AS t2 ON t1.product_id  =  t2.product_id JOIN customers AS t3 GROUP BY t3.customer_id ORDER BY count(*) LIMIT 1"}
{"question": "Return the names of products that have had complaints filed by the customer who has filed the fewest complaints.", "query": "SELECT DISTINCT t1.product_name FROM products AS t1 JOIN complaints AS t2 ON t1.product_id  =  t2.product_id JOIN customers AS t3 GROUP BY t3.customer_id ORDER BY count(*) LIMIT 1"}
{"question": "What is the phone number of the customer who has filed the most recent complaint?", "query": "SELECT t1.phone_number FROM customers AS t1 JOIN complaints AS t2 ON t1.customer_id  =  t2.customer_id ORDER BY t2.date_complaint_raised DESC LIMIT 1"}
{"question": "Return the phone number of the customer who filed the complaint that was raised most recently.", "query": "SELECT t1.phone_number FROM customers AS t1 JOIN complaints AS t2 ON t1.customer_id  =  t2.customer_id ORDER BY t2.date_complaint_raised DESC LIMIT 1"}
{"question": "Find the email and phone number of the customers who have never filed a complaint before.", "query": "SELECT email_address ,  phone_number FROM customers WHERE customer_id NOT IN (SELECT customer_id FROM complaints)"}
{"question": "What are the emails and phone numbers of custoemrs who have never filed a complaint?", "query": "SELECT email_address ,  phone_number FROM customers WHERE customer_id NOT IN (SELECT customer_id FROM complaints)"}
{"question": "Find the phone number of all the customers and staff.", "query": "SELECT phone_number FROM customers UNION SELECT phone_number FROM staff"}
{"question": "What are the phone numbers of all customers and all staff members?", "query": "SELECT phone_number FROM customers UNION SELECT phone_number FROM staff"}
{"question": "What is the description of the product named \"Chocolate\"?", "query": "SELECT product_description FROM products WHERE product_name  =  \"Chocolate\""}
{"question": "Return the description of the product called \"Chocolate\".", "query": "SELECT product_description FROM products WHERE product_name  =  \"Chocolate\""}
{"question": "Find the name and category of the most expensive product.", "query": "SELECT product_name ,  product_category_code FROM products ORDER BY product_price DESC LIMIT 1"}
{"question": "What is the name and category code of the product with the highest price?", "query": "SELECT product_name ,  product_category_code FROM products ORDER BY product_price DESC LIMIT 1"}
{"question": "Find the prices of products which has never received a single complaint.", "query": "SELECT product_price FROM products WHERE product_id NOT IN (SELECT product_id FROM complaints)"}
{"question": "What are the prices of products that have never gotten a complaint?", "query": "SELECT product_price FROM products WHERE product_id NOT IN (SELECT product_id FROM complaints)"}
{"question": "What is the average price of the products for each category?", "query": "SELECT avg(product_price) ,  product_category_code FROM products GROUP BY product_category_code"}
{"question": "Return the average price of products that have each category code.", "query": "SELECT avg(product_price) ,  product_category_code FROM products GROUP BY product_category_code"}
{"question": "Find the last name of the staff member who processed the complaint of the cheapest product.", "query": "SELECT t1.last_name FROM staff AS t1 JOIN complaints AS t2 ON t1.staff_id  =  t2.staff_id JOIN products AS t3 ON t2.product_id  =  t3.product_id ORDER BY t3.product_price LIMIT 1"}
{"question": "What is the last name of the staff member in charge of the complaint on the product with the lowest price?", "query": "SELECT t1.last_name FROM staff AS t1 JOIN complaints AS t2 ON t1.staff_id  =  t2.staff_id JOIN products AS t3 ON t2.product_id  =  t3.product_id ORDER BY t3.product_price LIMIT 1"}
{"question": "Which complaint status has more than 3 records on file?", "query": "SELECT complaint_status_code FROM complaints GROUP BY complaint_status_code HAVING count(*)  >  3"}
{"question": "Return complaint status codes have more than 3 corresponding complaints?", "query": "SELECT complaint_status_code FROM complaints GROUP BY complaint_status_code HAVING count(*)  >  3"}
{"question": "Find the last name of the staff whose email address contains \"wrau\".", "query": "SELECT last_name FROM staff WHERE email_address LIKE \"%wrau%\""}
{"question": "What are the last names of staff with email addressed containing the substring \"wrau\"?", "query": "SELECT last_name FROM staff WHERE email_address LIKE \"%wrau%\""}
{"question": "How many customers are there in the customer type with the most customers?", "query": "SELECT count(*) FROM customers GROUP BY customer_type_code ORDER BY count(*) DESC LIMIT 1"}
{"question": "Count the number of customers that have the customer type that is most common.", "query": "SELECT count(*) FROM customers GROUP BY customer_type_code ORDER BY count(*) DESC LIMIT 1"}
{"question": "What is the last name of the staff who has handled the first ever complaint?", "query": "SELECT t1.last_name FROM staff AS t1 JOIN complaints AS t2 ON t1.staff_id  =  t2.staff_id ORDER BY t2.date_complaint_raised LIMIT 1"}
{"question": "Return the last name of the staff member who handled the complaint with the earliest date raised.", "query": "SELECT t1.last_name FROM staff AS t1 JOIN complaints AS t2 ON t1.staff_id  =  t2.staff_id ORDER BY t2.date_complaint_raised LIMIT 1"}
{"question": "How many distinct complaint type codes are there in the database?", "query": "SELECT count(DISTINCT complaint_type_code) FROM complaints"}
{"question": "Count the number of different complaint type codes.", "query": "SELECT count(DISTINCT complaint_type_code) FROM complaints"}
{"question": "Find the address line 1 and 2 of the customer with email \"vbogisich@example.org\".", "query": "SELECT address_line_1 ,  address_line_2 FROM customers WHERE email_address  =  \"vbogisich@example.org\""}
{"question": "What are lines 1 and 2 of the addressed of the customer with the email \"vbogisich@example.org\"?", "query": "SELECT address_line_1 ,  address_line_2 FROM customers WHERE email_address  =  \"vbogisich@example.org\""}
{"question": "Find the number of complaints with Product Failure type for each complaint status.", "query": "SELECT complaint_status_code ,  count(*) FROM complaints WHERE complaint_type_code  =  \"Product Failure\" GROUP BY complaint_status_code"}
{"question": "Of complaints with the type code \"Product Failure\", how many had each different status code?", "query": "SELECT complaint_status_code ,  count(*) FROM complaints WHERE complaint_type_code  =  \"Product Failure\" GROUP BY complaint_status_code"}
{"question": "What is first names of the top 5 staff who have handled the greatest number of complaints?", "query": "SELECT t1.first_name FROM staff AS t1 JOIN complaints AS t2 ON t1.staff_id  =  t2.staff_id GROUP BY t2.staff_id ORDER BY count(*) LIMIT 5"}
{"question": "Return the first names of the 5 staff members who have handled the most complaints.", "query": "SELECT t1.first_name FROM staff AS t1 JOIN complaints AS t2 ON t1.staff_id  =  t2.staff_id GROUP BY t2.staff_id ORDER BY count(*) LIMIT 5"}
{"question": "Which state has the most customers?", "query": "SELECT state FROM customers GROUP BY state ORDER BY count(*) LIMIT 1"}
{"question": "Give the state that has the most customers.", "query": "SELECT state FROM customers GROUP BY state ORDER BY count(*) LIMIT 1"}
{"question": "How many submissions are there?", "query": "SELECT count(*) FROM submission"}
{"question": "Count the number of submissions.", "query": "SELECT count(*) FROM submission"}
{"question": "List the authors of submissions in ascending order of scores.", "query": "SELECT Author FROM submission ORDER BY Scores ASC"}
{"question": "Find the author for each submission and list them in ascending order of submission score.", "query": "SELECT Author FROM submission ORDER BY Scores ASC"}
{"question": "What are the authors of submissions and their colleges?", "query": "SELECT Author ,  College FROM submission"}
{"question": "For each submission, show the author and their affiliated college.", "query": "SELECT Author ,  College FROM submission"}
{"question": "Show the names of authors from college \"Florida\" or \"Temple\"", "query": "SELECT Author FROM submission WHERE College  =  \"Florida\" OR College  =  \"Temple\""}
{"question": "Which authors with submissions are from college \"Florida\" or \"Temple\"?", "query": "SELECT Author FROM submission WHERE College  =  \"Florida\" OR College  =  \"Temple\""}
{"question": "What is the average score of submissions?", "query": "SELECT avg(Scores) FROM submission"}
{"question": "Compute the average score of submissions.", "query": "SELECT avg(Scores) FROM submission"}
{"question": "What is the author of the submission with the highest score?", "query": "SELECT Author FROM submission ORDER BY Scores DESC LIMIT 1"}
{"question": "Find the author who achieved the highest score in a submission.", "query": "SELECT Author FROM submission ORDER BY Scores DESC LIMIT 1"}
{"question": "Show different colleges along with the number of authors of submission from each college.", "query": "SELECT College ,  COUNT(*) FROM submission GROUP BY College"}
{"question": "For each college, return the college name and the count of authors with submissions from that college.", "query": "SELECT College ,  COUNT(*) FROM submission GROUP BY College"}
{"question": "Show the most common college of authors of submissions.", "query": "SELECT College FROM submission GROUP BY College ORDER BY COUNT(*) DESC LIMIT 1"}
{"question": "Which college has the most authors with submissions?", "query": "SELECT College FROM submission GROUP BY College ORDER BY COUNT(*) DESC LIMIT 1"}
{"question": "Show the colleges that have both authors with submission score larger than 90 and authors with submission score smaller than 80.", "query": "SELECT College FROM submission WHERE Scores  >  90 INTERSECT SELECT College FROM submission WHERE Scores  <  80"}
{"question": "Which colleges have both authors with submission score above 90 and authors with submission score below 80?", "query": "SELECT College FROM submission WHERE Scores  >  90 INTERSECT SELECT College FROM submission WHERE Scores  <  80"}
{"question": "Show the authors of submissions and the acceptance results of their submissions.", "query": "SELECT T2.Author ,  T1.Result FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID  =  T2.Submission_ID"}
{"question": "For each submission, find its author and acceptance result.", "query": "SELECT T2.Author ,  T1.Result FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID  =  T2.Submission_ID"}
{"question": "Show the result of the submission with the highest score.", "query": "SELECT T1.Result FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID  =  T2.Submission_ID ORDER BY T2.Scores DESC LIMIT 1"}
{"question": "Which submission received the highest score in acceptance result. Show me the result.", "query": "SELECT T1.Result FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID  =  T2.Submission_ID ORDER BY T2.Scores DESC LIMIT 1"}
{"question": "Show each author and the number of workshops they submitted to.", "query": "SELECT T2.Author ,  COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID  =  T2.Submission_ID GROUP BY T2.Author"}
{"question": "How many workshops did each author submit to? Return the author name and the number of workshops.", "query": "SELECT T2.Author ,  COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID  =  T2.Submission_ID GROUP BY T2.Author"}
{"question": "Show the authors who have submissions to more than one workshop.", "query": "SELECT T2.Author FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID  =  T2.Submission_ID GROUP BY T2.Author HAVING COUNT(DISTINCT T1.workshop_id)  >  1"}
{"question": "Which authors have submitted to more than one workshop?", "query": "SELECT T2.Author FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID  =  T2.Submission_ID GROUP BY T2.Author HAVING COUNT(DISTINCT T1.workshop_id)  >  1"}
{"question": "Show the date and venue of each workshop in ascending alphabetical order of the venue.", "query": "SELECT Date ,  Venue FROM workshop ORDER BY Venue"}
{"question": "Sort the each workshop in alphabetical order of the venue. Return the date and venue of each workshop.", "query": "SELECT Date ,  Venue FROM workshop ORDER BY Venue"}
{"question": "List the authors who do not have submission to any workshop.", "query": "SELECT Author FROM submission WHERE Submission_ID NOT IN (SELECT Submission_ID FROM acceptance)"}
{"question": "Which authors did not submit to any workshop?", "query": "SELECT Author FROM submission WHERE Submission_ID NOT IN (SELECT Submission_ID FROM acceptance)"}
{"question": "Find the number of investors in total.", "query": "SELECT count(*) FROM INVESTORS"}
{"question": "Show all investor details.", "query": "SELECT Investor_details FROM INVESTORS"}
{"question": "Show all distinct lot details.", "query": "SELECT DISTINCT lot_details FROM LOTS"}
{"question": "Show the maximum amount of transaction.", "query": "SELECT max(amount_of_transaction) FROM TRANSACTIONS"}
{"question": "Show all date and share count of transactions.", "query": "SELECT date_of_transaction ,  share_count FROM TRANSACTIONS"}
{"question": "What is the total share of transactions?", "query": "SELECT sum(share_count) FROM TRANSACTIONS"}
{"question": "Show all transaction ids with transaction code 'PUR'.", "query": "SELECT transaction_id FROM TRANSACTIONS WHERE transaction_type_code  =  'PUR'"}
{"question": "Show all dates of transactions whose type code is \"SALE\".", "query": "SELECT date_of_transaction FROM TRANSACTIONS WHERE transaction_type_code  =  \"SALE\""}
{"question": "Show the average amount of transactions with type code \"SALE\".", "query": "SELECT avg(amount_of_transaction) FROM TRANSACTIONS WHERE transaction_type_code  =  \"SALE\""}
{"question": "Show the description of transaction type with code \"PUR\".", "query": "SELECT transaction_type_description FROM Ref_Transaction_Types WHERE transaction_type_code\t  =  \"PUR\""}
{"question": "Show the minimum amount of transactions whose type code is \"PUR\" and whose share count is bigger than 50.", "query": "SELECT min(amount_of_transaction) FROM TRANSACTIONS WHERE transaction_type_code  =  \"PUR\" AND share_count  >  50"}
{"question": "Show the maximum share count of transactions where the amount is smaller than 10000", "query": "SELECT max(share_count) FROM TRANSACTIONS WHERE amount_of_transaction  <  10000"}
{"question": "Show the dates of transactions if the share count is bigger than 100 or the amount is bigger than 1000.", "query": "SELECT date_of_transaction FROM TRANSACTIONS WHERE share_count  >  100 OR amount_of_transaction  >  1000"}
{"question": "Show the transaction type descriptions and dates if the share count is smaller than 10.", "query": "SELECT T1.transaction_type_description ,  T2.date_of_transaction FROM Ref_Transaction_Types AS T1 JOIN TRANSACTIONS AS T2 ON T1.transaction_type_code  =  T2.transaction_type_code WHERE T2.share_count  <  10"}
{"question": "Show details of all investors if they make any transaction with share count greater than 100.", "query": "SELECT T1.Investor_details FROM  INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id  =  T2.investor_id WHERE T2.share_count  >  100"}
{"question": "How many distinct transaction types are used in the transactions?", "query": "SELECT COUNT(DISTINCT transaction_type_code) FROM TRANSACTIONS"}
{"question": "Return the lot details and investor ids.", "query": "SELECT lot_details ,  investor_id FROM LOTS"}
{"question": "Return the lot details of lots that belong to investors with details \"l\"?", "query": "SELECT T2.lot_details FROM INVESTORS AS T1 JOIN LOTS AS T2 ON  T1.investor_id  =  T2.investor_id WHERE T1.Investor_details  =  \"l\""}
{"question": "What are the purchase details of transactions with amount bigger than 10000?", "query": "SELECT T1.purchase_details FROM PURCHASES AS T1 JOIN TRANSACTIONS AS T2 ON T1.purchase_transaction_id  =  T2.transaction_id WHERE T2.amount_of_transaction  >  10000"}
{"question": "What are the sale details and dates of transactions with amount smaller than 3000?", "query": "SELECT T1.sales_details ,  T2.date_of_transaction FROM SALES AS T1 JOIN TRANSACTIONS AS T2 ON T1.sales_transaction_id  =  T2.transaction_id WHERE T2.amount_of_transaction  <  3000"}
{"question": "What are the lot details of lots associated with transactions with share count smaller than 50?", "query": "SELECT T1.lot_details FROM LOTS AS T1 JOIN TRANSACTIONS_LOTS AS T2 ON T1.lot_id  =  T2.transaction_id JOIN TRANSACTIONS AS T3 ON T2.transaction_id  =  T3.transaction_id WHERE T3.share_count  <  50"}
{"question": "What are the lot details of lots associated with transactions whose share count is bigger than 100 and whose type code is \"PUR\"?", "query": "SELECT T1.lot_details FROM LOTS AS T1 JOIN TRANSACTIONS_LOTS AS T2 ON  T1.lot_id  =  T2.transaction_id JOIN TRANSACTIONS AS T3 ON T2.transaction_id  =  T3.transaction_id WHERE T3.share_count  >  100 AND T3.transaction_type_code  =  \"PUR\""}
{"question": "Show the average transaction amount for different transaction types.", "query": "SELECT transaction_type_code ,  avg(amount_of_transaction) FROM TRANSACTIONS GROUP BY transaction_type_code"}
{"question": "Show the maximum and minimum share count of different transaction types.", "query": "SELECT transaction_type_code ,  max(share_count) ,  min(share_count) FROM TRANSACTIONS GROUP BY transaction_type_code"}
{"question": "Show the average share count of transactions for different investors.", "query": "SELECT investor_id ,  avg(share_count) FROM TRANSACTIONS GROUP BY investor_id"}
{"question": "Show the average share count of transactions each each investor, ordered by average share count.", "query": "SELECT investor_id ,  avg(share_count) FROM TRANSACTIONS GROUP BY investor_id ORDER BY avg(share_count)"}
{"question": "Show the average amount of transactions for different investors.", "query": "SELECT investor_id ,  avg(amount_of_transaction) FROM TRANSACTIONS GROUP BY investor_id"}
{"question": "Show the average amount of transactions for different lots.", "query": "SELECT T2.lot_id ,  avg(amount_of_transaction) FROM TRANSACTIONS AS T1 JOIN Transactions_Lots AS T2 ON T1.transaction_id  =  T2.transaction_id GROUP BY T2.lot_id"}
{"question": "Show the average amount of transactions for different lots, ordered by average amount of transactions.", "query": "SELECT T2.lot_id ,  avg(amount_of_transaction) FROM TRANSACTIONS AS T1 JOIN Transactions_Lots AS T2 ON T1.transaction_id  =  T2.transaction_id GROUP BY T2.lot_id ORDER BY avg(amount_of_transaction)"}
{"question": "Show the number of transactions with transaction type code \"SALE\" for different investors if it is larger than 0.", "query": "SELECT investor_id ,  COUNT(*) FROM TRANSACTIONS WHERE transaction_type_code  =  \"SALE\" GROUP BY investor_id"}
{"question": "Show the number of transactions for different investors.", "query": "SELECT investor_id ,  COUNT(*) FROM TRANSACTIONS GROUP BY investor_id"}
{"question": "Show the transaction type code that occurs the fewest times.", "query": "SELECT transaction_type_code FROM TRANSACTIONS GROUP BY transaction_type_code ORDER BY COUNT(*) ASC LIMIT 1"}
{"question": "Show the transaction type code that occurs the most frequently.", "query": "SELECT transaction_type_code FROM TRANSACTIONS GROUP BY transaction_type_code ORDER BY COUNT(*) DESC LIMIT 1"}
{"question": "Show the description of the transaction type that occurs most frequently.", "query": "SELECT T1.transaction_type_description FROM Ref_Transaction_Types AS T1 JOIN TRANSACTIONS AS T2 ON T1.transaction_type_code  =  T2.transaction_type_code GROUP BY T1.transaction_type_code ORDER BY COUNT(*) DESC LIMIT 1"}
{"question": "Show the id and details of the investor that has the largest number of transactions.", "query": "SELECT T2.investor_id ,  T1.Investor_details FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id  =  T2.investor_id GROUP BY T2.investor_id ORDER BY COUNT(*) DESC LIMIT 1"}
{"question": "Show the id and details for the investors who have the top 3 number of transactions.", "query": "SELECT T2.investor_id ,  T1.Investor_details FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id  =  T2.investor_id GROUP BY T2.investor_id ORDER BY COUNT(*) DESC LIMIT 3"}
{"question": "Show the ids of the investors who have at least two transactions.", "query": "SELECT T2.investor_id FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id  =  T2.investor_id GROUP BY T2.investor_id HAVING COUNT(*)  >=  2"}
{"question": "Show the ids and details of the investors who have at least two transactions with type code \"SALE\".", "query": "SELECT T2.investor_id ,  T1.Investor_details FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id  =  T2.investor_id WHERE T2.transaction_type_code  =  \"SALE\" GROUP BY T2.investor_id HAVING COUNT(*)  >=  2"}
{"question": "What are the dates of transactions with at least 100 share count or amount bigger than 100?", "query": "SELECT date_of_transaction FROM TRANSACTIONS WHERE share_count  >=  100 OR amount_of_transaction  >=  100"}
{"question": "What are the details of all sales and purchases?", "query": "SELECT sales_details FROM sales UNION SELECT purchase_details FROM purchases"}
{"question": "What are the details of the lots which are not used in any transactions?", "query": "SELECT lot_details FROM Lots EXCEPT SELECT T1.lot_details FROM Lots AS T1 JOIN transactions_lots AS T2 ON T1.lot_id  =  T2.lot_id"}
{"question": "How many available hotels are there in total?", "query": "SELECT count(*) FROM HOTELS"}
{"question": "Find the total number of available hotels.", "query": "SELECT count(*) FROM HOTELS"}
{"question": "What are the price ranges of hotels?", "query": "SELECT price_range FROM HOTELS"}
{"question": "Tell me the price ranges for all the hotels.", "query": "SELECT price_range FROM HOTELS"}
{"question": "Show all distinct location names.", "query": "SELECT DISTINCT Location_Name FROM LOCATIONS"}
{"question": "What are the distinct location names?", "query": "SELECT DISTINCT Location_Name FROM LOCATIONS"}
{"question": "Show the names and details of all the staff members.", "query": "SELECT Name ,  Other_Details FROM Staff"}
{"question": "What is the name and detail of each staff member?", "query": "SELECT Name ,  Other_Details FROM Staff"}
{"question": "Show details of all visitors.", "query": "SELECT Tourist_Details FROM VISITORS"}
{"question": "What is the detail of each visitor?", "query": "SELECT Tourist_Details FROM VISITORS"}
{"question": "Show the price ranges of hotels with 5 star ratings.", "query": "SELECT price_range FROM HOTELS WHERE star_rating_code  =  \"5\""}
{"question": "What are the price ranges of five star hotels?", "query": "SELECT price_range FROM HOTELS WHERE star_rating_code  =  \"5\""}
{"question": "Show the average price range of hotels that have 5 star ratings and allow pets.", "query": "SELECT avg(price_range) FROM HOTELS WHERE star_rating_code  =  \"5\" AND pets_allowed_yn  =  1"}
{"question": "What is the average price range of five star hotels that allow pets?", "query": "SELECT avg(price_range) FROM HOTELS WHERE star_rating_code  =  \"5\" AND pets_allowed_yn  =  1"}
{"question": "What is the address of the location \"UK Gallery\"?", "query": "SELECT Address FROM LOCATIONS WHERE Location_Name  =  \"UK Gallery\""}
{"question": "Find the address of the location named \"UK Gallery\".", "query": "SELECT Address FROM LOCATIONS WHERE Location_Name  =  \"UK Gallery\""}
{"question": "What is the detail of the location UK Gallery?", "query": "SELECT Other_Details FROM LOCATIONS WHERE Location_Name  =  \"UK Gallery\""}
{"question": "Return the detail of the location named \"UK Gallery\".", "query": "SELECT Other_Details FROM LOCATIONS WHERE Location_Name  =  \"UK Gallery\""}
{"question": "Which location names contain the word \"film\"?", "query": "SELECT Location_Name FROM LOCATIONS WHERE Location_Name LIKE \"%film%\""}
{"question": "Find all the locations whose names contain the word \"film\".", "query": "SELECT Location_Name FROM LOCATIONS WHERE Location_Name LIKE \"%film%\""}
{"question": "How many distinct names are associated with all the photos?", "query": "SELECT count(DISTINCT Name) FROM PHOTOS"}
{"question": "Count the number of distinct names associated with the photos.", "query": "SELECT count(DISTINCT Name) FROM PHOTOS"}
{"question": "What are the distinct visit dates?", "query": "SELECT DISTINCT Visit_Date FROM VISITS"}
{"question": "Find all the distinct visit dates.", "query": "SELECT DISTINCT Visit_Date FROM VISITS"}
{"question": "What are the names of the tourist attractions that can be accessed by bus?", "query": "SELECT Name FROM TOURIST_ATTRACTIONS WHERE How_to_Get_There  =  \"bus\""}
{"question": "Which tourist attractions can we get to by bus? Tell me the names of the attractions.", "query": "SELECT Name FROM TOURIST_ATTRACTIONS WHERE How_to_Get_There  =  \"bus\""}
{"question": "What are the names and opening hours of the tourist attractions that can be accessed by bus or walk?", "query": "SELECT Name ,  Opening_Hours FROM TOURIST_ATTRACTIONS WHERE How_to_Get_There  =  \"bus\" OR How_to_Get_There  =  \"walk\""}
{"question": "Find the names and opening hours of the tourist attractions that we get to by bus or walk.", "query": "SELECT Name ,  Opening_Hours FROM TOURIST_ATTRACTIONS WHERE How_to_Get_There  =  \"bus\" OR How_to_Get_There  =  \"walk\""}
{"question": "What are the star rating descriptions of the hotels with price above 10000?", "query": "SELECT T2.star_rating_description FROM HOTELS AS T1 JOIN Ref_Hotel_Star_Ratings AS T2 ON T1.star_rating_code  =  T2.star_rating_code WHERE T1.price_range  >  10000"}
{"question": "Give me the star rating descriptions of the hotels that cost more than 10000.", "query": "SELECT T2.star_rating_description FROM HOTELS AS T1 JOIN Ref_Hotel_Star_Ratings AS T2 ON T1.star_rating_code  =  T2.star_rating_code WHERE T1.price_range  >  10000"}
{"question": "What are the details and opening hours of the museums?", "query": "SELECT T1.Museum_Details ,  T2.Opening_Hours FROM MUSEUMS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Museum_ID  =  T2.Tourist_Attraction_ID"}
{"question": "Give me the detail and opening hour for each museum.", "query": "SELECT T1.Museum_Details ,  T2.Opening_Hours FROM MUSEUMS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Museum_ID  =  T2.Tourist_Attraction_ID"}
{"question": "What is the name of the tourist attraction that is associated with the photo \"game1\"?", "query": "SELECT T2.Name FROM PHOTOS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID WHERE T1.Name  =  \"game1\""}
{"question": "Which tourist attraction is associated with the photo \"game1\"? Return its name.", "query": "SELECT T2.Name FROM PHOTOS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID WHERE T1.Name  =  \"game1\""}
{"question": "What are the names and descriptions of the photos taken at the tourist attraction \"film festival\"?", "query": "SELECT T1.Name ,  T1.Description FROM PHOTOS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID WHERE T2.Name  =  \"film festival\""}
{"question": "Find the names and descriptions of the photos taken at the tourist attraction called \"film festival\".", "query": "SELECT T1.Name ,  T1.Description FROM PHOTOS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID WHERE T2.Name  =  \"film festival\""}
{"question": "What are the details and ways to get to tourist attractions related to royal family?", "query": "SELECT T1.Royal_Family_Details ,  T2.How_to_Get_There FROM ROYAL_FAMILY AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Royal_Family_ID  =  T2.Tourist_Attraction_ID"}
{"question": "Which tourist attractions are related to royal family? Tell me their details and how we can get there.", "query": "SELECT T1.Royal_Family_Details ,  T2.How_to_Get_There FROM ROYAL_FAMILY AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Royal_Family_ID  =  T2.Tourist_Attraction_ID"}
{"question": "What are the details of the shops that can be accessed by walk?", "query": "SELECT T1.Shop_Details FROM SHOPS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Shop_ID  =  T2.Tourist_Attraction_ID WHERE T2.How_to_Get_There  =  \"walk\""}
{"question": "Find the details of the shops that can be reached by walk.", "query": "SELECT T1.Shop_Details FROM SHOPS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Shop_ID  =  T2.Tourist_Attraction_ID WHERE T2.How_to_Get_There  =  \"walk\""}
{"question": "What is the name of the staff that is in charge of the attraction named \"US museum\"?", "query": "SELECT T1.Name FROM STAFF AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID WHERE T2.Name  =  \"US museum\""}
{"question": "Tell me the name of the staff in charge of the attraction called \"US museum\".", "query": "SELECT T1.Name FROM STAFF AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID WHERE T2.Name  =  \"US museum\""}
{"question": "What are the details of the markets that can be accessed by walk or bus?", "query": "SELECT T1.Market_Details FROM Street_Markets AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Market_ID  =  T2.Tourist_Attraction_ID WHERE T2.How_to_Get_There  =  \"walk\" OR  T2.How_to_Get_There  =  \"bus\""}
{"question": "Find the details of all the markets that are accessible by walk or bus.", "query": "SELECT T1.Market_Details FROM Street_Markets AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Market_ID  =  T2.Tourist_Attraction_ID WHERE T2.How_to_Get_There  =  \"walk\" OR  T2.How_to_Get_There  =  \"bus\""}
{"question": "What are the visit date and details of the visitor whose detail is 'Vincent'?", "query": "SELECT T2.Visit_Date ,  T2.Visit_Details FROM VISITORS AS T1 JOIN VISITS AS T2 ON T1.Tourist_ID  =  T2.Tourist_ID WHERE T1.Tourist_Details  =  \"Vincent\""}
{"question": "Find the visit date and details of the tourist whose detail is 'Vincent'", "query": "SELECT T2.Visit_Date ,  T2.Visit_Details FROM VISITORS AS T1 JOIN VISITS AS T2 ON T1.Tourist_ID  =  T2.Tourist_ID WHERE T1.Tourist_Details  =  \"Vincent\""}
{"question": "Which tourist attractions does the visitor with detail 'Vincent' visit?", "query": "SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID JOIN VISITORS AS T3 ON T2.Tourist_ID  =  T3.Tourist_ID WHERE T3.Tourist_Details  =  \"Vincent\""}
{"question": "Show the tourist attractions visited by the tourist whose detail is 'Vincent'.", "query": "SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID JOIN VISITORS AS T3 ON T2.Tourist_ID  =  T3.Tourist_ID WHERE T3.Tourist_Details  =  \"Vincent\""}
{"question": "What are the names of the tourist attractions and the dates when the tourists named Vincent or Vivian visited there?", "query": "SELECT T1.Name ,  T3.Visit_Date FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Tourist_ID WHERE T2.Tourist_Details  =  \"Vincent\" OR T2.Tourist_Details  =  \"Vivian\""}
{"question": "For each tourist attraction, return its name and the date when the tourists named Vincent or Vivian visited there.", "query": "SELECT T1.Name ,  T3.Visit_Date FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Tourist_ID WHERE T2.Tourist_Details  =  \"Vincent\" OR T2.Tourist_Details  =  \"Vivian\""}
{"question": "Show the average price of hotels for each star rating code.", "query": "SELECT star_rating_code ,  avg(price_range) FROM HOTELS GROUP BY star_rating_code"}
{"question": "What is the average price range of hotels for each each star rating code?", "query": "SELECT star_rating_code ,  avg(price_range) FROM HOTELS GROUP BY star_rating_code"}
{"question": "Show the average price of hotels for different pet policy.", "query": "SELECT pets_allowed_yn ,  avg(price_range) FROM HOTELS GROUP BY pets_allowed_yn"}
{"question": "What are the average prices of hotels grouped by their pet policy.", "query": "SELECT pets_allowed_yn ,  avg(price_range) FROM HOTELS GROUP BY pets_allowed_yn"}
{"question": "Show the id and star rating of each hotel, ordered by its price from low to high.", "query": "SELECT hotel_id ,  star_rating_code FROM HOTELS ORDER BY price_range ASC"}
{"question": "Find the id and star rating of each hotel and sort them in increasing order of price.", "query": "SELECT hotel_id ,  star_rating_code FROM HOTELS ORDER BY price_range ASC"}
{"question": "Show the details of the top 3 most expensive hotels.", "query": "SELECT other_hotel_details FROM HOTELS ORDER BY price_range DESC LIMIT 3"}
{"question": "What are the details of the three most expensive hotels?", "query": "SELECT other_hotel_details FROM HOTELS ORDER BY price_range DESC LIMIT 3"}
{"question": "Show the details and star ratings of the 3 least expensive hotels.", "query": "SELECT other_hotel_details ,  star_rating_code FROM HOTELS ORDER BY price_range ASC LIMIT 3"}
{"question": "What are the details and star ratings of the three hotels with the lowest price ranges?", "query": "SELECT other_hotel_details ,  star_rating_code FROM HOTELS ORDER BY price_range ASC LIMIT 3"}
{"question": "Show the transportation method most people choose to get to tourist attractions.", "query": "SELECT How_to_Get_There FROM Tourist_Attractions GROUP BY How_to_Get_There ORDER BY COUNT(*) DESC LIMIT 1"}
{"question": "Which transportation method is used the most often to get to tourist attractions?", "query": "SELECT How_to_Get_There FROM Tourist_Attractions GROUP BY How_to_Get_There ORDER BY COUNT(*) DESC LIMIT 1"}
{"question": "Show the description and code of the attraction type most tourist attractions belong to.", "query": "SELECT T1.Attraction_Type_Description ,  T2.Attraction_Type_Code FROM Ref_Attraction_Types AS T1 JOIN Tourist_Attractions AS T2 ON T1.Attraction_Type_Code  =  T2.Attraction_Type_Code GROUP BY T2.Attraction_Type_Code ORDER BY COUNT(*) DESC LIMIT 1"}
{"question": "Which attraction type does the most tourist attractions belong to? Tell me its  attraction type description and code.", "query": "SELECT T1.Attraction_Type_Description ,  T2.Attraction_Type_Code FROM Ref_Attraction_Types AS T1 JOIN Tourist_Attractions AS T2 ON T1.Attraction_Type_Code  =  T2.Attraction_Type_Code GROUP BY T2.Attraction_Type_Code ORDER BY COUNT(*) DESC LIMIT 1"}
{"question": "Show different ways to get to attractions and the number of attractions that can be accessed in the corresponding way.", "query": "SELECT How_to_Get_There ,  COUNT(*) FROM Tourist_Attractions GROUP BY How_to_Get_There"}
{"question": "List all the possible ways to get to attractions, together with the number of attractions accessible by these methods.", "query": "SELECT How_to_Get_There ,  COUNT(*) FROM Tourist_Attractions GROUP BY How_to_Get_There"}
{"question": "Show different tourist attractions' names, ids, and the corresponding number of visits.", "query": "SELECT T1.Name ,  T2.Tourist_Attraction_ID ,   COUNT(*) FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID"}
{"question": "What are the name, id and the corresponding number of visits for each  tourist attraction?", "query": "SELECT T1.Name ,  T2.Tourist_Attraction_ID ,   COUNT(*) FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID"}
{"question": "Show the names and ids of tourist attractions that are visited at least two times.", "query": "SELECT T1.Name ,  T2.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID HAVING count(*)  >=  2"}
{"question": "Which tourist attractions are visited at least twice? Give me their names and ids.", "query": "SELECT T1.Name ,  T2.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID HAVING count(*)  >=  2"}
{"question": "Show the names and ids of tourist attractions that are visited at most once.", "query": "SELECT T1.Name ,  T1.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID HAVING count(*)  <=  1"}
{"question": "What are the names and ids of the tourist attractions that are visited at most once?", "query": "SELECT T1.Name ,  T1.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID HAVING count(*)  <=  1"}
{"question": "What are the names of tourist attractions that can be reached by walk or is at address 660 Shea Crescent?", "query": "SELECT T2.Name FROM Locations AS T1 JOIN Tourist_Attractions AS T2 ON T1.Location_ID  =  T2.Location_ID WHERE T1.Address  =  \"660 Shea Crescent\" OR T2.How_to_Get_There  =  \"walk\""}
{"question": "Find the names of the tourist attractions that is either accessible by walk or at address 660 Shea Crescent.", "query": "SELECT T2.Name FROM Locations AS T1 JOIN Tourist_Attractions AS T2 ON T1.Location_ID  =  T2.Location_ID WHERE T1.Address  =  \"660 Shea Crescent\" OR T2.How_to_Get_There  =  \"walk\""}
{"question": "What are the names of the tourist attractions that have parking or shopping as their feature details?", "query": "SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN Tourist_Attraction_Features AS T2 ON T1.tourist_attraction_id  =  T2.tourist_attraction_id JOIN Features AS T3 ON T2.Feature_ID  =  T3.Feature_ID WHERE T3.feature_Details  =  'park' UNION SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN Tourist_Attraction_Features AS T2 ON T1.tourist_attraction_id  =  T2.tourist_attraction_id JOIN Features AS T3 ON T2.Feature_ID  =  T3.Feature_ID WHERE T3.feature_Details  =  'shopping'"}
{"question": "Find the tourist attractions that have parking or shopping as their feature details. What are the names of the attractions?", "query": "SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN Tourist_Attraction_Features AS T2 ON T1.tourist_attraction_id  =  T2.tourist_attraction_id JOIN Features AS T3 ON T2.Feature_ID  =  T3.Feature_ID WHERE T3.feature_Details  =  'park' UNION SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN Tourist_Attraction_Features AS T2 ON T1.tourist_attraction_id  =  T2.tourist_attraction_id JOIN Features AS T3 ON T2.Feature_ID  =  T3.Feature_ID WHERE T3.feature_Details  =  'shopping'"}
{"question": "What are the names of tourist attractions that can be reached by bus or is at address 254 Ottilie Junction?", "query": "SELECT T2.Name FROM Locations AS T1 JOIN Tourist_Attractions AS T2 ON T1.Location_ID  =  T2.Location_ID WHERE T1.Address  =  \"254 Ottilie Junction\" OR T2.How_to_Get_There  =  \"bus\""}
{"question": "Find the names of the tourist attractions that is either accessible by bus or at address 254 Ottilie Junction.", "query": "SELECT T2.Name FROM Locations AS T1 JOIN Tourist_Attractions AS T2 ON T1.Location_ID  =  T2.Location_ID WHERE T1.Address  =  \"254 Ottilie Junction\" OR T2.How_to_Get_There  =  \"bus\""}
{"question": "What are the names of the tourist attractions Vincent and Marcelle visit?", "query": "SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Tourist_ID WHERE T2.Tourist_Details  =  \"Vincent\" INTERSECT SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Tourist_ID WHERE T2.Tourist_Details  =  \"Marcelle\""}
{"question": "Which tourist attractions do the tourists Vincent and Marcelle visit? Tell me the names of the attractions.", "query": "SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Tourist_ID WHERE T2.Tourist_Details  =  \"Vincent\" INTERSECT SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Tourist_ID WHERE T2.Tourist_Details  =  \"Marcelle\""}
{"question": "What are the names of tourist attraction that Alison visited but Rosalind did not visit?", "query": "SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Tourist_ID WHERE T2.Tourist_Details  =  \"Alison\" EXCEPT SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Tourist_ID WHERE T2.Tourist_Details  =  \"Rosalind\""}
{"question": "Find the the names of the tourist attractions that the tourist named Alison visited but Rosalind did not visit.", "query": "SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Tourist_ID WHERE T2.Tourist_Details  =  \"Alison\" EXCEPT SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Tourist_ID WHERE T2.Tourist_Details  =  \"Rosalind\""}
{"question": "How many tourists did not make any visit?", "query": "SELECT count(*) FROM Visitors WHERE Tourist_ID NOT IN ( SELECT Tourist_ID FROM Visits )"}
{"question": "Count the number of tourists who did not visit any place.", "query": "SELECT count(*) FROM Visitors WHERE Tourist_ID NOT IN ( SELECT Tourist_ID FROM Visits )"}
{"question": "How many video games exist?", "query": "SELECT count(*) FROM Video_games"}
{"question": "How many video games do you have?", "query": "SELECT count(*) FROM Video_games"}
{"question": "How many video game types exist?", "query": "SELECT count(DISTINCT gtype) FROM Video_games"}
{"question": "What is the count of different game types?", "query": "SELECT count(DISTINCT gtype) FROM Video_games"}
{"question": "Show all video game types.", "query": "SELECT DISTINCT gtype FROM Video_games"}
{"question": "What are the different types of video games?", "query": "SELECT DISTINCT gtype FROM Video_games"}
{"question": "Show all video games and their types in the order of their names.", "query": "SELECT gname ,  gtype FROM Video_games ORDER BY gname"}
{"question": "What are the names of all the video games and their types in alphabetical order?", "query": "SELECT gname ,  gtype FROM Video_games ORDER BY gname"}
{"question": "Show all video games with type Collectible card game.", "query": "SELECT gname FROM Video_games WHERE gtype  =  \"Collectible card game\""}
{"question": "What are the names of all video games that are collectible cards?", "query": "SELECT gname FROM Video_games WHERE gtype  =  \"Collectible card game\""}
{"question": "What is the type of video game Call of Destiny.", "query": "SELECT gtype FROM Video_games WHERE gname  =  \"Call of Destiny\""}
{"question": "What type of game is Call of Destiny?", "query": "SELECT gtype FROM Video_games WHERE gname  =  \"Call of Destiny\""}
{"question": "How many video games have type Massively multiplayer online game?", "query": "SELECT count(*) FROM Video_games WHERE gtype  =  \"Massively multiplayer online game\""}
{"question": "Count the number of video games with Massively multiplayer online game type .", "query": "SELECT count(*) FROM Video_games WHERE gtype  =  \"Massively multiplayer online game\""}
{"question": "Show all video game types and the number of video games in each type.", "query": "SELECT gtype ,  count(*) FROM Video_games GROUP BY gtype"}
{"question": "What are the types of video games and how many are in each type?", "query": "SELECT gtype ,  count(*) FROM Video_games GROUP BY gtype"}
{"question": "Which game type has most number of games?", "query": "SELECT gtype FROM Video_games GROUP BY gtype ORDER BY count(*) DESC LIMIT 1"}
{"question": "What type has the most games?", "query": "SELECT gtype FROM Video_games GROUP BY gtype ORDER BY count(*) DESC LIMIT 1"}
{"question": "Which game type has least number of games?", "query": "SELECT gtype FROM Video_games GROUP BY gtype ORDER BY count(*) LIMIT 1"}
{"question": "What is the type with the fewest games?", "query": "SELECT gtype FROM Video_games GROUP BY gtype ORDER BY count(*) LIMIT 1"}
{"question": "Show ids for all students who live in CHI.", "query": "SELECT StuID FROM Student WHERE city_code  =  \"CHI\""}
{"question": "What are the ids of all students who live in CHI?", "query": "SELECT StuID FROM Student WHERE city_code  =  \"CHI\""}
{"question": "Show ids for all students who have advisor 1121.", "query": "SELECT StuID FROM Student WHERE Advisor  =  1121"}
{"question": "What are the ids of all students who have advisor number 1121?", "query": "SELECT StuID FROM Student WHERE Advisor  =  1121"}
{"question": "Show first name for all students with major 600.", "query": "SELECT Fname FROM Student WHERE Major  =  600"}
{"question": "What are the first names for all students who are from the major numbered 600?", "query": "SELECT Fname FROM Student WHERE Major  =  600"}
{"question": "Show the average, minimum, and maximum age for different majors.", "query": "SELECT major ,  avg(age) ,  min(age) ,  max(age) FROM Student GROUP BY major"}
{"question": "What are the average, minimum, and max ages for each of the different majors?", "query": "SELECT major ,  avg(age) ,  min(age) ,  max(age) FROM Student GROUP BY major"}
{"question": "Show all advisors who have at least two students.", "query": "SELECT advisor FROM Student GROUP BY advisor HAVING count(*)  >=  2"}
{"question": "What are the advisors", "query": "SELECT advisor FROM Student GROUP BY advisor HAVING count(*)  >=  2"}
{"question": "How many sports do we have?", "query": "SELECT count(DISTINCT sportname) FROM Sportsinfo"}
{"question": "How many different types of sports do we offer?", "query": "SELECT count(DISTINCT sportname) FROM Sportsinfo"}
{"question": "How many students play sports?", "query": "SELECT count(DISTINCT StuID) FROM Sportsinfo"}
{"question": "How many different students are involved in sports?", "query": "SELECT count(DISTINCT StuID) FROM Sportsinfo"}
{"question": "List ids for all student who are on scholarship.", "query": "SELECT StuID FROM Sportsinfo WHERE onscholarship  =  'Y'"}
{"question": "What are the ids for all sporty students who are on scholarship?", "query": "SELECT StuID FROM Sportsinfo WHERE onscholarship  =  'Y'"}
{"question": "Show last names for all student who are on scholarship.", "query": "SELECT T2.Lname FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T1.onscholarship  =  'Y'"}
{"question": "What are the last names for all scholarship students?", "query": "SELECT T2.Lname FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T1.onscholarship  =  'Y'"}
{"question": "How many games are played for all students?", "query": "SELECT sum(gamesplayed) FROM Sportsinfo"}
{"question": "What is the total number of games played?", "query": "SELECT sum(gamesplayed) FROM Sportsinfo"}
{"question": "How many games are played for all football games by students on scholarship?", "query": "SELECT sum(gamesplayed) FROM Sportsinfo WHERE sportname  =  \"Football\" AND onscholarship  =  'Y'"}
{"question": "What is the total number of all football games played by scholarship students?", "query": "SELECT sum(gamesplayed) FROM Sportsinfo WHERE sportname  =  \"Football\" AND onscholarship  =  'Y'"}
{"question": "Show all sport name and the number of students.", "query": "SELECT sportname ,  count(*) FROM Sportsinfo GROUP BY sportname"}
{"question": "How many students play each sport?", "query": "SELECT sportname ,  count(*) FROM Sportsinfo GROUP BY sportname"}
{"question": "Show all student IDs with the number of sports and total number of games played", "query": "SELECT StuID ,  count(*) ,  sum(gamesplayed) FROM Sportsinfo GROUP BY StuID"}
{"question": "What are the ids of all students along with how many sports and games did they play?", "query": "SELECT StuID ,  count(*) ,  sum(gamesplayed) FROM Sportsinfo GROUP BY StuID"}
{"question": "Show all student IDs with more than total 10 hours per week on all sports played.", "query": "SELECT StuID FROM Sportsinfo GROUP BY StuID HAVING sum(hoursperweek)  >  10"}
{"question": "What are the student IDs for everybody who worked for more than 10 hours per week on all sports?", "query": "SELECT StuID FROM Sportsinfo GROUP BY StuID HAVING sum(hoursperweek)  >  10"}
{"question": "What is the first name and last name of the student who have most number of sports?", "query": "SELECT T2.Fname ,  T2.Lname FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID GROUP BY T1.StuID ORDER BY count(*) DESC LIMIT 1"}
{"question": "What is the first and last name of the student who played the most sports?", "query": "SELECT T2.Fname ,  T2.Lname FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID GROUP BY T1.StuID ORDER BY count(*) DESC LIMIT 1"}
{"question": "Which sport has most number of students on scholarship?", "query": "SELECT sportname FROM Sportsinfo WHERE onscholarship  =  'Y' GROUP BY sportname ORDER BY count(*) DESC LIMIT 1"}
{"question": "What is the sport with the most scholarship students?", "query": "SELECT sportname FROM Sportsinfo WHERE onscholarship  =  'Y' GROUP BY sportname ORDER BY count(*) DESC LIMIT 1"}
{"question": "Show student ids who don't have any sports.", "query": "SELECT StuID FROM Student EXCEPT SELECT StuID FROM Sportsinfo"}
{"question": "What are the ids of all students who don't play sports?", "query": "SELECT StuID FROM Student EXCEPT SELECT StuID FROM Sportsinfo"}
{"question": "Show student ids who are on scholarship and have major 600.", "query": "SELECT StuID FROM Student WHERE major  =  600 INTERSECT SELECT StuID FROM Sportsinfo WHERE onscholarship  =  'Y'"}
{"question": "What are the student ids for those on scholarship in major number 600?", "query": "SELECT StuID FROM Student WHERE major  =  600 INTERSECT SELECT StuID FROM Sportsinfo WHERE onscholarship  =  'Y'"}
{"question": "Show student ids who are female and play football.", "query": "SELECT StuID FROM Student WHERE sex  =  'F' INTERSECT SELECT StuID FROM Sportsinfo WHERE sportname  =  \"Football\""}
{"question": "What are the ids of all female students who play football?", "query": "SELECT StuID FROM Student WHERE sex  =  'F' INTERSECT SELECT StuID FROM Sportsinfo WHERE sportname  =  \"Football\""}
{"question": "Show all male student ids who don't play football.", "query": "SELECT StuID FROM Student WHERE sex  =  'M' EXCEPT SELECT StuID FROM Sportsinfo WHERE sportname  =  \"Football\""}
{"question": "What are the ids of all male students who do not play football?", "query": "SELECT StuID FROM Student WHERE sex  =  'M' EXCEPT SELECT StuID FROM Sportsinfo WHERE sportname  =  \"Football\""}
{"question": "Show total hours per week and number of games played for student David Shieber.", "query": "SELECT sum(hoursperweek) ,  sum(gamesplayed) FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T2.Fname  =  \"David\" AND T2.Lname  =  \"Shieber\""}
{"question": "What is the total number of hours per work and number of games played by David Shieber?", "query": "SELECT sum(hoursperweek) ,  sum(gamesplayed) FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T2.Fname  =  \"David\" AND T2.Lname  =  \"Shieber\""}
{"question": "Show total hours per week and number of games played for students under 20.", "query": "SELECT sum(hoursperweek) ,  sum(gamesplayed) FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T2.age  <  20"}
{"question": "What is the total number of hours per week and number of games played by students under 20?", "query": "SELECT sum(hoursperweek) ,  sum(gamesplayed) FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T2.age  <  20"}
{"question": "How many students play video games?", "query": "SELECT count(DISTINCT StuID) FROM Plays_games"}
{"question": "How many different students play games?", "query": "SELECT count(DISTINCT StuID) FROM Plays_games"}
{"question": "Show ids of students who don't play video game.", "query": "SELECT StuID FROM Student EXCEPT SELECT StuID FROM Plays_games"}
{"question": "What are the ids of all students who are not video game players?", "query": "SELECT StuID FROM Student EXCEPT SELECT StuID FROM Plays_games"}
{"question": "Show ids of students who play video game and play sports.", "query": "SELECT StuID FROM Sportsinfo INTERSECT SELECT StuID FROM Plays_games"}
{"question": "What are the ids of all students who played video games and sports?", "query": "SELECT StuID FROM Sportsinfo INTERSECT SELECT StuID FROM Plays_games"}
{"question": "Show all game ids and the number of hours played.", "query": "SELECT gameid ,  sum(hours_played) FROM Plays_games GROUP BY gameid"}
{"question": "What are ids and total number of hours played for each game?", "query": "SELECT gameid ,  sum(hours_played) FROM Plays_games GROUP BY gameid"}
{"question": "Show all student ids and the number of hours played.", "query": "SELECT Stuid ,  sum(hours_played) FROM Plays_games GROUP BY Stuid"}
{"question": "What are the ids of all students and number of hours played?", "query": "SELECT Stuid ,  sum(hours_played) FROM Plays_games GROUP BY Stuid"}
{"question": "Show the game name that has most number of hours played.", "query": "SELECT gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid  =  T2.gameid GROUP BY T1.gameid ORDER BY sum(hours_played) DESC LIMIT 1"}
{"question": "What is the name of the game that has been played the most?", "query": "SELECT gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid  =  T2.gameid GROUP BY T1.gameid ORDER BY sum(hours_played) DESC LIMIT 1"}
{"question": "Show all game names played by at least 1000 hours.", "query": "SELECT gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid  =  T2.gameid GROUP BY T1.gameid HAVING sum(hours_played)  >=  1000"}
{"question": "What are the names of all the games that have been played for at least 1000 hours?", "query": "SELECT gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid  =  T2.gameid GROUP BY T1.gameid HAVING sum(hours_played)  >=  1000"}
{"question": "Show all game names played by Linda Smith", "query": "SELECT Gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid  =  T2.gameid JOIN Student AS T3 ON T3.Stuid  =  T1.Stuid WHERE T3.Lname  =  \"Smith\" AND T3.Fname  =  \"Linda\""}
{"question": "What are the names of all games played by Linda Smith?", "query": "SELECT Gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid  =  T2.gameid JOIN Student AS T3 ON T3.Stuid  =  T1.Stuid WHERE T3.Lname  =  \"Smith\" AND T3.Fname  =  \"Linda\""}
{"question": "Find the last and first name of students who are playing Football or Lacrosse.", "query": "SELECT T2.lname ,  T2.fname FROM SportsInfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T1.SportName  =  \"Football\" OR T1.SportName  =  \"Lacrosse\""}
{"question": "What is the first and last name of all students who play Football or Lacrosse?", "query": "SELECT T2.lname ,  T2.fname FROM SportsInfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T1.SportName  =  \"Football\" OR T1.SportName  =  \"Lacrosse\""}
{"question": "Find the first name and age of the students who are playing both Football and Lacrosse.", "query": "SELECT fname ,  age FROM Student WHERE StuID IN (SELECT StuID FROM Sportsinfo WHERE SportName  =  \"Football\" INTERSECT SELECT StuID FROM Sportsinfo WHERE SportName  =  \"Lacrosse\")"}
{"question": "What are the first names and ages of all students who are playing both Football and Lacrosse?", "query": "SELECT fname ,  age FROM Student WHERE StuID IN (SELECT StuID FROM Sportsinfo WHERE SportName  =  \"Football\" INTERSECT SELECT StuID FROM Sportsinfo WHERE SportName  =  \"Lacrosse\")"}
{"question": "Find the last name and gender of the students who are playing both Call of Destiny and Works of Widenius games.", "query": "SELECT lname ,  sex FROM Student WHERE StuID IN (SELECT T1.StuID FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.GameID  =  T2.GameID WHERE T2.Gname  =  \"Call of Destiny\" INTERSECT SELECT T1.StuID FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.GameID  =  T2.GameID WHERE T2.Gname  =  \"Works of Widenius\")"}
{"question": "what is the last name and gender of all students who played both Call of Destiny and Works of Widenius?", "query": "SELECT lname ,  sex FROM Student WHERE StuID IN (SELECT T1.StuID FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.GameID  =  T2.GameID WHERE T2.Gname  =  \"Call of Destiny\" INTERSECT SELECT T1.StuID FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.GameID  =  T2.GameID WHERE T2.Gname  =  \"Works of Widenius\")"}
{"question": "Find the name of all customers.", "query": "SELECT customer_name FROM customers"}
{"question": "What are the names of all the customers?", "query": "SELECT customer_name FROM customers"}
{"question": "Return the total number of distinct customers.", "query": "SELECT count(*) FROM customers"}
{"question": "What is the average amount of items ordered in each order?", "query": "SELECT avg(order_quantity) FROM order_items"}
{"question": "Find the average order quantity per order.", "query": "SELECT avg(order_quantity) FROM order_items"}
{"question": "What are the names of customers who use payment method \"Cash\"?", "query": "SELECT customer_name FROM customers WHERE payment_method  =  \"Cash\""}
{"question": "Which customers use \"Cash\" for payment method? Return the customer names.", "query": "SELECT customer_name FROM customers WHERE payment_method  =  \"Cash\""}
{"question": "Find the \"date became customers\" of the customers whose ID is between 10 and 20.", "query": "SELECT date_became_customer FROM customers WHERE customer_id BETWEEN 10 AND 20"}
{"question": "What are the dates when customers with ids between 10 and 20 became customers?", "query": "SELECT date_became_customer FROM customers WHERE customer_id BETWEEN 10 AND 20"}
{"question": "Which payment method is used by most customers?", "query": "SELECT payment_method FROM customers GROUP BY payment_method ORDER BY count(*) DESC LIMIT 1"}
{"question": "What are the names of customers using the most popular payment method?", "query": "SELECT customer_name FROM customers WHERE payment_method  =  (SELECT payment_method FROM customers GROUP BY payment_method ORDER BY count(*) DESC LIMIT 1)"}
{"question": "Find the name of the customers who use the most frequently used payment method.", "query": "SELECT customer_name FROM customers WHERE payment_method  =  (SELECT payment_method FROM customers GROUP BY payment_method ORDER BY count(*) DESC LIMIT 1)"}
{"question": "What are all the payment methods?", "query": "SELECT DISTINCT payment_method FROM customers"}
{"question": "Return all the distinct payment methods used by customers.", "query": "SELECT DISTINCT payment_method FROM customers"}
{"question": "What are the details of all products?", "query": "SELECT DISTINCT product_details FROM products"}
{"question": "Return the the details of all products.", "query": "SELECT DISTINCT product_details FROM products"}
{"question": "Find the name of all customers whose name contains \"Alex\".", "query": "SELECT customer_name FROM customers WHERE customer_name LIKE \"%Alex%\""}
{"question": "Which customer's name contains \"Alex\"? Find the full name.", "query": "SELECT customer_name FROM customers WHERE customer_name LIKE \"%Alex%\""}
{"question": "Find the detail of products whose detail contains the word \"Latte\" or the word \"Americano\"", "query": "SELECT product_details FROM products WHERE product_details LIKE \"%Latte%\" OR product_details LIKE \"%Americano%\""}
{"question": "Which product's detail contains the word \"Latte\" or \"Americano\"? Return the full detail.", "query": "SELECT product_details FROM products WHERE product_details LIKE \"%Latte%\" OR product_details LIKE \"%Americano%\""}
{"question": "What is the address content of the customer named \"Maudie Kertzmann\"?", "query": "SELECT t3.address_content FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id WHERE t1.customer_name  =  \"Maudie Kertzmann\""}
{"question": "Return the address content for the customer whose name is \"Maudie Kertzmann\".", "query": "SELECT t3.address_content FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id WHERE t1.customer_name  =  \"Maudie Kertzmann\""}
{"question": "How many customers are living in city \"Lake Geovannyton\"?", "query": "SELECT count(*) FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id WHERE t3.city  =  \"Lake Geovannyton\""}
{"question": "Find the number of customers who live in the city called Lake Geovannyton.", "query": "SELECT count(*) FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id WHERE t3.city  =  \"Lake Geovannyton\""}
{"question": "Find the name of customers who are living in Colorado?", "query": "SELECT t1.customer_name FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id WHERE t3.state_province_county  =  \"Colorado\""}
{"question": "What are the names of customers who live in Colorado state?", "query": "SELECT t1.customer_name FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id WHERE t3.state_province_county  =  \"Colorado\""}
{"question": "Find the list of cities that no customer is living in.", "query": "SELECT city FROM addresses WHERE city NOT IN ( SELECT DISTINCT t3.city FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id)"}
{"question": "What are the cities no customers live in?", "query": "SELECT city FROM addresses WHERE city NOT IN ( SELECT DISTINCT t3.city FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id)"}
{"question": "Which city has the most customers living in?", "query": "SELECT t3.city FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id GROUP BY t3.city ORDER BY count(*) DESC LIMIT 1"}
{"question": "Find the city where the most customers live.", "query": "SELECT t3.city FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id GROUP BY t3.city ORDER BY count(*) DESC LIMIT 1"}
{"question": "Retrieve the list of all cities.", "query": "SELECT DISTINCT city FROM addresses"}
{"question": "List all the distinct cities", "query": "SELECT DISTINCT city FROM addresses"}
{"question": "Find the city with post code 255.", "query": "SELECT city FROM addresses WHERE zip_postcode  =  255"}
{"question": "Which city is post code 255 located in?", "query": "SELECT city FROM addresses WHERE zip_postcode  =  255"}
{"question": "Find the state and country of all cities with post code starting with 4.", "query": "SELECT state_province_county ,  country FROM addresses WHERE zip_postcode LIKE \"4%\""}
{"question": "What are the state and country of all the cities that have post codes starting with 4.\\", "query": "SELECT state_province_county ,  country FROM addresses WHERE zip_postcode LIKE \"4%\""}
{"question": "List the countries having more than 4 addresses listed.", "query": "SELECT country FROM addresses GROUP BY country HAVING count(address_id)  >  4"}
{"question": "For which countries are there more than four distinct addresses listed?", "query": "SELECT country FROM addresses GROUP BY country HAVING count(address_id)  >  4"}
{"question": "List all the contact channel codes that were used less than 5 times.", "query": "SELECT channel_code FROM customer_contact_channels GROUP BY channel_code HAVING count(customer_id)  <  5"}
{"question": "Which contact channel codes were used less than 5 times?", "query": "SELECT channel_code FROM customer_contact_channels GROUP BY channel_code HAVING count(customer_id)  <  5"}
{"question": "Which contact channel has been used by the customer with name \"Tillman Ernser\"?", "query": "SELECT DISTINCT channel_code FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.customer_name  =  \"Tillman Ernser\""}
{"question": "Find the contact channel code that was used by the customer named \"Tillman Ernser\".", "query": "SELECT DISTINCT channel_code FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.customer_name  =  \"Tillman Ernser\""}
{"question": "What is the \"active to date\" of the latest contact channel used by \"Tillman Ernser\"?", "query": "SELECT max(t2.active_to_date) FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.customer_name  =  \"Tillman Ernser\""}
{"question": "Return the the \"active to date\" of the latest contact channel used by the customer named \"Tillman Ernser\".", "query": "SELECT max(t2.active_to_date) FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.customer_name  =  \"Tillman Ernser\""}
{"question": "What is the average time span of contact channels in the database?", "query": "SELECT avg(active_to_date - active_from_date) FROM customer_contact_channels"}
{"question": "Compute the average active time span of contact channels.", "query": "SELECT avg(active_to_date - active_from_date) FROM customer_contact_channels"}
{"question": "What is the channel code and contact number of the customer contact channel that was active for the longest time?", "query": "SELECT channel_code ,  contact_number FROM customer_contact_channels WHERE active_to_date - active_from_date  =  (SELECT active_to_date - active_from_date FROM customer_contact_channels ORDER BY (active_to_date - active_from_date) DESC LIMIT 1)"}
{"question": "Return the channel code and contact number of the customer contact channel whose active duration was the longest.", "query": "SELECT channel_code ,  contact_number FROM customer_contact_channels WHERE active_to_date - active_from_date  =  (SELECT active_to_date - active_from_date FROM customer_contact_channels ORDER BY (active_to_date - active_from_date) DESC LIMIT 1)"}
{"question": "Find the name and active date of the customer that use email as the contact channel.", "query": "SELECT t1.customer_name ,  t2.active_from_date FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id  =  t2.customer_id WHERE t2.channel_code  =  'Email'"}
{"question": "What are the name and active date of the customers whose contact channel code is email?", "query": "SELECT t1.customer_name ,  t2.active_from_date FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id  =  t2.customer_id WHERE t2.channel_code  =  'Email'"}
{"question": "What is the name of the customer that made the order with the largest quantity?", "query": "SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id WHERE t3.order_quantity  =  ( SELECT max(order_quantity) FROM order_items)"}
{"question": "Find the name of the customer who made the order of the largest amount of goods.", "query": "SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id WHERE t3.order_quantity  =  ( SELECT max(order_quantity) FROM order_items)"}
{"question": "What is the name of the customer that has purchased the most items?", "query": "SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id GROUP BY t1.customer_name ORDER BY sum(t3.order_quantity) DESC LIMIT 1"}
{"question": "Give me the name of the customer who ordered the most items in total.", "query": "SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id GROUP BY t1.customer_name ORDER BY sum(t3.order_quantity) DESC LIMIT 1"}
{"question": "What is the payment method of the customer that has purchased the least quantity of items?", "query": "SELECT t1.payment_method FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id GROUP BY t1.customer_name ORDER BY sum(t3.order_quantity) LIMIT 1"}
{"question": "Tell me the payment method used by the customer who ordered the least amount of goods in total.", "query": "SELECT t1.payment_method FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id GROUP BY t1.customer_name ORDER BY sum(t3.order_quantity) LIMIT 1"}
{"question": "How many types of products have Rodrick Heaney bought in total?", "query": "SELECT count(DISTINCT t3.product_id) FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id WHERE t1.customer_name  =  \"Rodrick Heaney\""}
{"question": "Find the number of distinct products Rodrick Heaney has bought so far.", "query": "SELECT count(DISTINCT t3.product_id) FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id WHERE t1.customer_name  =  \"Rodrick Heaney\""}
{"question": "What is the total quantity of products purchased by \"Rodrick Heaney\"?", "query": "SELECT sum(t3.order_quantity) FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id WHERE t1.customer_name  =  \"Rodrick Heaney\""}
{"question": "Tell me the total quantity of products bought by the customer called \"Rodrick Heaney\".", "query": "SELECT sum(t3.order_quantity) FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id WHERE t1.customer_name  =  \"Rodrick Heaney\""}
{"question": "How many customers have at least one order with status \"Cancelled\"?", "query": "SELECT count(DISTINCT customer_id) FROM customer_orders WHERE order_status  =  \"Cancelled\""}
{"question": "Return the number of customers who have at least one order with \"Cancelled\" status.", "query": "SELECT count(DISTINCT customer_id) FROM customer_orders WHERE order_status  =  \"Cancelled\""}
{"question": "How many orders have detail \"Second time\"?", "query": "SELECT count(*) FROM customer_orders WHERE order_details  =  \"Second time\""}
{"question": "Tell me the number of orders with \"Second time\" as order detail.", "query": "SELECT count(*) FROM customer_orders WHERE order_details  =  \"Second time\""}
{"question": "Find the customer name and date of the orders that have the status \"Delivered\".", "query": "SELECT t1.customer_name ,  t2.order_date FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id WHERE order_status  =  \"Delivered\""}
{"question": "What are the customer name and date of the orders whose status is \"Delivered\".", "query": "SELECT t1.customer_name ,  t2.order_date FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id WHERE order_status  =  \"Delivered\""}
{"question": "What is the total number of products that are in orders with status \"Cancelled\"?", "query": "SELECT sum(t2.order_quantity) FROM customer_orders AS t1 JOIN order_items AS t2 ON t1.order_id  =  t2.order_id WHERE t1.order_status  =  \"Cancelled\""}
{"question": "Find the total quantity of products associated with the orders in the \"Cancelled\" status.", "query": "SELECT sum(t2.order_quantity) FROM customer_orders AS t1 JOIN order_items AS t2 ON t1.order_id  =  t2.order_id WHERE t1.order_status  =  \"Cancelled\""}
{"question": "Find the total amount of products ordered before 2018-03-17 07:13:53.", "query": "SELECT sum(t2.order_quantity) FROM customer_orders AS t1 JOIN order_items AS t2 ON t1.order_id  =  t2.order_id WHERE t1.order_date  <  \"2018-03-17 07:13:53\""}
{"question": "What is the total amount of products purchased before 2018-03-17 07:13:53?", "query": "SELECT sum(t2.order_quantity) FROM customer_orders AS t1 JOIN order_items AS t2 ON t1.order_id  =  t2.order_id WHERE t1.order_date  <  \"2018-03-17 07:13:53\""}
{"question": "Who made the latest order?", "query": "SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id ORDER BY t2.order_date DESC LIMIT 1"}
{"question": "Find the name of the customer who made an order most recently.", "query": "SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id ORDER BY t2.order_date DESC LIMIT 1"}
{"question": "Which product has been ordered most number of times?", "query": "SELECT t2.product_details FROM order_items AS t1 JOIN products AS t2 ON t1.product_id  =  t2.product_id GROUP BY t1.product_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "What is the most frequently ordered product? Tell me the detail of the product", "query": "SELECT t2.product_details FROM order_items AS t1 JOIN products AS t2 ON t1.product_id  =  t2.product_id GROUP BY t1.product_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "Find the name and ID of the product whose total order quantity is the largest.", "query": "SELECT t2.product_details ,  t2.product_id FROM order_items AS t1 JOIN products AS t2 ON t1.product_id  =  t2.product_id GROUP BY t1.product_id ORDER BY sum(t1.order_quantity) LIMIT 1"}
{"question": "What are the name and ID of the product bought the most.", "query": "SELECT t2.product_details ,  t2.product_id FROM order_items AS t1 JOIN products AS t2 ON t1.product_id  =  t2.product_id GROUP BY t1.product_id ORDER BY sum(t1.order_quantity) LIMIT 1"}
{"question": "Find all the addresses in East Julianaside, Texas or in Gleasonmouth, Arizona.", "query": "SELECT address_content FROM addresses WHERE city  =  \"East Julianaside\" AND state_province_county  =  \"Texas\" UNION SELECT address_content FROM addresses WHERE city  =  \"Gleasonmouth\" AND state_province_county  =  \"Arizona\""}
{"question": "What are all the addresses in East Julianaside, Texas or in Gleasonmouth, Arizona.", "query": "SELECT address_content FROM addresses WHERE city  =  \"East Julianaside\" AND state_province_county  =  \"Texas\" UNION SELECT address_content FROM addresses WHERE city  =  \"Gleasonmouth\" AND state_province_county  =  \"Arizona\""}
{"question": "Find the name of customers who did not pay with Cash.", "query": "SELECT customer_name FROM customers WHERE payment_method != 'Cash'"}
{"question": "What is the name of customers who do not use Cash as payment method.", "query": "SELECT customer_name FROM customers WHERE payment_method != 'Cash'"}
{"question": "Find the names of customers who never ordered product Latte.", "query": "SELECT customer_name FROM customers EXCEPT SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id JOIN products AS t4 ON t3.product_id  =  t4.product_id WHERE t4.product_details  =  'Latte'"}
{"question": "What are names of customers who never ordered product Latte.", "query": "SELECT customer_name FROM customers EXCEPT SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id JOIN products AS t4 ON t3.product_id  =  t4.product_id WHERE t4.product_details  =  'Latte'"}
{"question": "Find the names of customers who never placed an order.", "query": "SELECT customer_name FROM customers EXCEPT SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id"}
{"question": "What are the names of customers who never made an order.", "query": "SELECT customer_name FROM customers EXCEPT SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id"}
{"question": "Find the names of customers who ordered both products Latte and Americano.", "query": "SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id JOIN products AS t4 ON t3.product_id  =  t4.product_id WHERE t4.product_details  =  'Latte' INTERSECT SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id JOIN products AS t4 ON t3.product_id  =  t4.product_id WHERE t4.product_details  =  'Americano'"}
{"question": "What are the names of customers who have purchased both products Latte and Americano?", "query": "SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id JOIN products AS t4 ON t3.product_id  =  t4.product_id WHERE t4.product_details  =  'Latte' INTERSECT SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id JOIN products AS t4 ON t3.product_id  =  t4.product_id WHERE t4.product_details  =  'Americano'"}
{"question": "How many artists are there?", "query": "SELECT count(*) FROM artist"}
{"question": "List the age of all music artists.", "query": "SELECT Age FROM artist"}
{"question": "What are the ages of all music artists?", "query": "SELECT Age FROM artist"}
{"question": "What is the average age of all artists?", "query": "SELECT avg(Age) FROM artist"}
{"question": "Return the average age across all artists.", "query": "SELECT avg(Age) FROM artist"}
{"question": "What are the famous titles of the artist \"Triumfall\"?", "query": "SELECT Famous_Title FROM artist WHERE Artist  =  \"Triumfall\""}
{"question": "Return the famous titles of the artist called \"Triumfall\".", "query": "SELECT Famous_Title FROM artist WHERE Artist  =  \"Triumfall\""}
{"question": "What are the distinct Famous release dates?", "query": "SELECT distinct(Famous_Release_date) FROM artist"}
{"question": "Give the distinct famous release dates for all artists.", "query": "SELECT distinct(Famous_Release_date) FROM artist"}
{"question": "Return the dates of ceremony and the results of all music festivals", "query": "SELECT Date_of_ceremony ,  RESULT FROM music_festival"}
{"question": "What are the dates of ceremony and results for each music festival?", "query": "SELECT Date_of_ceremony ,  RESULT FROM music_festival"}
{"question": "What are the category of music festivals with result \"Awarded\"?", "query": "SELECT Category FROM music_festival WHERE RESULT  =  \"Awarded\""}
{"question": "Return the categories of music festivals that have the result \"Awarded\".", "query": "SELECT Category FROM music_festival WHERE RESULT  =  \"Awarded\""}
{"question": "What are the maximum and minimum week on top of all volumes?", "query": "SELECT max(Weeks_on_Top) ,  min(Weeks_on_Top) FROM volume"}
{"question": "Give the maximum and minimum weeks on top across all volumes.", "query": "SELECT max(Weeks_on_Top) ,  min(Weeks_on_Top) FROM volume"}
{"question": "What are the songs in volumes with more than 1 week on top?", "query": "SELECT Song FROM volume WHERE Weeks_on_Top  >  1"}
{"question": "Give the songs included in volumes that have more than 1 week on top.", "query": "SELECT Song FROM volume WHERE Weeks_on_Top  >  1"}
{"question": "Please list all songs in volumes in ascending alphabetical order.", "query": "SELECT Song FROM volume ORDER BY Song"}
{"question": "What are the the songs in volumes, listed in ascending order?", "query": "SELECT Song FROM volume ORDER BY Song"}
{"question": "How many distinct artists do the volumes associate to?", "query": "SELECT COUNT(DISTINCT Artist_ID) FROM volume"}
{"question": "Count the number of distinct artists who have volumes.", "query": "SELECT COUNT(DISTINCT Artist_ID) FROM volume"}
{"question": "Please show the date of ceremony of the volumes that last more than 2 weeks on top.", "query": "SELECT T1.Date_of_ceremony FROM music_festival AS T1 JOIN volume AS T2 ON T1.Volume  =  T2.Volume_ID WHERE T2.Weeks_on_Top  >  2"}
{"question": "What are the dates of ceremony at music festivals corresponding to volumes that lasted more than 2 weeks on top?", "query": "SELECT T1.Date_of_ceremony FROM music_festival AS T1 JOIN volume AS T2 ON T1.Volume  =  T2.Volume_ID WHERE T2.Weeks_on_Top  >  2"}
{"question": "Please show the songs that have result \"nominated\" at music festivals.", "query": "SELECT T2.Song FROM music_festival AS T1 JOIN volume AS T2 ON T1.Volume  =  T2.Volume_ID WHERE T1.Result  =  \"Nominated\""}
{"question": "What are the songs in volumes that have resulted in a nomination at music festivals?", "query": "SELECT T2.Song FROM music_festival AS T1 JOIN volume AS T2 ON T1.Volume  =  T2.Volume_ID WHERE T1.Result  =  \"Nominated\""}
{"question": "What are the issue dates of volumes associated with the artist \"Gorgoroth\"?", "query": "SELECT T2.Issue_Date FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T1.Artist  =  \"Gorgoroth\""}
{"question": "Return the issue dates of volumes that are by the artist named Gorgoroth.", "query": "SELECT T2.Issue_Date FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T1.Artist  =  \"Gorgoroth\""}
{"question": "What are the songs in volumes associated with the artist aged 32 or older?", "query": "SELECT T2.Song FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T1.age  >=  32"}
{"question": "Return names of songs in volumes that are by artists that are at least 32 years old.", "query": "SELECT T2.Song FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T1.age  >=  32"}
{"question": "What is the average weeks on top of volumes associated with the artist aged 25 or younger?", "query": "SELECT avg(T2.Weeks_on_Top) FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T1.age  <=  25"}
{"question": "Return the average number of weeks on top for volumes by artists that are at most 25 years old.", "query": "SELECT avg(T2.Weeks_on_Top) FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T1.age  <=  25"}
{"question": "What are the famous title of the artists associated with volumes with more than 2 weeks on top?", "query": "SELECT T1.Famous_Title FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T2.Weeks_on_Top  >  2"}
{"question": "Return the famous titles for artists that have volumes that lasted more than 2 weeks on top.", "query": "SELECT T1.Famous_Title FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T2.Weeks_on_Top  >  2"}
{"question": "Please list the age and famous title of artists in descending order of age.", "query": "SELECT Famous_Title ,  Age FROM artist ORDER BY Age DESC"}
{"question": "What are the famous titles and ages of each artist, listed in descending order by age?", "query": "SELECT Famous_Title ,  Age FROM artist ORDER BY Age DESC"}
{"question": "What is the famous release date of the artist with the oldest age?", "query": "SELECT Famous_Release_date FROM artist ORDER BY Age DESC LIMIT 1"}
{"question": "Return the famous release date for the oldest artist.", "query": "SELECT Famous_Release_date FROM artist ORDER BY Age DESC LIMIT 1"}
{"question": "Please show the categories of the music festivals and the count.", "query": "SELECT Category ,  COUNT(*) FROM music_festival GROUP BY Category"}
{"question": "Return the number of music festivals of each category.", "query": "SELECT Category ,  COUNT(*) FROM music_festival GROUP BY Category"}
{"question": "What is the most common result of the music festival?", "query": "SELECT RESULT FROM music_festival GROUP BY RESULT ORDER BY COUNT(*) DESC LIMIT 1"}
{"question": "Return the result that is most frequent at music festivals.", "query": "SELECT RESULT FROM music_festival GROUP BY RESULT ORDER BY COUNT(*) DESC LIMIT 1"}
{"question": "Please show the categories of the music festivals with count more than 1.", "query": "SELECT Category FROM music_festival GROUP BY Category HAVING COUNT(*)  >  1"}
{"question": "What are the categories of music festivals for which there have been more than 1 music festival?", "query": "SELECT Category FROM music_festival GROUP BY Category HAVING COUNT(*)  >  1"}
{"question": "What is the song in the volume with the maximum weeks on top?", "query": "SELECT Song FROM volume ORDER BY Weeks_on_Top DESC LIMIT 1"}
{"question": "Return the song in the volume that has spent the most weeks on top?", "query": "SELECT Song FROM volume ORDER BY Weeks_on_Top DESC LIMIT 1"}
{"question": "Find the famous titles of artists that do not have any volume.", "query": "SELECT Famous_Title FROM artist WHERE Artist_ID NOT IN(SELECT Artist_ID FROM volume)"}
{"question": "What are the famous titles of artists who do not have any volumes?", "query": "SELECT Famous_Title FROM artist WHERE Artist_ID NOT IN(SELECT Artist_ID FROM volume)"}
{"question": "Show the famous titles of the artists with both volumes that lasted more than 2 weeks on top and volumes that lasted less than 2 weeks on top.", "query": "SELECT T1.Famous_Title FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T2.Weeks_on_Top  >  2 INTERSECT SELECT T1.Famous_Title FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T2.Weeks_on_Top  <  2"}
{"question": "What are the famous titles of artists who have not only had volumes that spent more than 2 weeks on top but also volumes that spent less than 2 weeks on top?", "query": "SELECT T1.Famous_Title FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T2.Weeks_on_Top  >  2 INTERSECT SELECT T1.Famous_Title FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T2.Weeks_on_Top  <  2"}
{"question": "What are the date of ceremony of music festivals with category \"Best Song\" and result \"Awarded\"?", "query": "SELECT Date_of_ceremony FROM music_festival WHERE Category  =  \"Best Song\" AND RESULT  =  \"Awarded\""}
{"question": "Return the dates of ceremony corresponding to music festivals that had the category \"Best Song\" and result \"Awarded\".", "query": "SELECT Date_of_ceremony FROM music_festival WHERE Category  =  \"Best Song\" AND RESULT  =  \"Awarded\""}
{"question": "What is the issue date of the volume with the minimum weeks on top?", "query": "SELECT Issue_Date FROM volume ORDER BY Weeks_on_Top ASC LIMIT 1"}
{"question": "Return the issue date of the volume that has spent the fewest weeks on top.", "query": "SELECT Issue_Date FROM volume ORDER BY Weeks_on_Top ASC LIMIT 1"}
{"question": "How many distinct artists have volumes?", "query": "SELECT COUNT(DISTINCT Artist_ID) FROM volume"}
{"question": "Count the number of artists who have had volumes.", "query": "SELECT COUNT(DISTINCT Artist_ID) FROM volume"}
{"question": "Please show the results of music festivals and the number of music festivals that have had each, ordered by this count.", "query": "SELECT RESULT ,  COUNT(*) FROM music_festival GROUP BY RESULT ORDER BY COUNT(*) DESC"}
{"question": "How many music festivals have had each kind of result, ordered descending by count?", "query": "SELECT RESULT ,  COUNT(*) FROM music_festival GROUP BY RESULT ORDER BY COUNT(*) DESC"}
{"question": "What are the issue dates of volumes associated with the artist aged 23 or younger?", "query": "SELECT Issue_Date FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T1.age  <=  23"}
{"question": "Return the issue dates of volumes by artists who are at most 23 years old?", "query": "SELECT Issue_Date FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T1.age  <=  23"}
{"question": "How many roller coasters are there?", "query": "SELECT count(*) FROM roller_coaster"}
{"question": "List the names of roller coasters by ascending order of length.", "query": "SELECT Name FROM roller_coaster ORDER BY LENGTH ASC"}
{"question": "What are the lengths and heights of roller coasters?", "query": "SELECT LENGTH ,  Height FROM roller_coaster"}
{"question": "List the names of countries whose language is not \"German\".", "query": "SELECT Name FROM country WHERE Languages != \"German\""}
{"question": "Show the statuses of roller coasters longer than 3300 or higher than 100.", "query": "SELECT Status FROM roller_coaster WHERE LENGTH  >  3300 OR Height  >  100"}
{"question": "What are the speeds of the longest roller coaster?", "query": "SELECT Speed FROM roller_coaster ORDER BY LENGTH DESC LIMIT 1"}
{"question": "What is the average speed of roller coasters?", "query": "SELECT avg(Speed) FROM roller_coaster"}
{"question": "Show the different statuses and the numbers of roller coasters for each status.", "query": "SELECT Status ,  COUNT(*) FROM roller_coaster GROUP BY Status"}
{"question": "Please show the most common status of roller coasters.", "query": "SELECT Status FROM roller_coaster GROUP BY Status ORDER BY COUNT(*) DESC LIMIT 1"}
{"question": "List the status shared by more than two roller coaster.", "query": "SELECT Status FROM roller_coaster GROUP BY Status HAVING COUNT(*)  >  2"}
{"question": "Show the park of the roller coaster with the highest speed.", "query": "SELECT Park FROM roller_coaster ORDER BY Speed DESC LIMIT 1"}
{"question": "Show the names of roller coasters and names of country they are in.", "query": "SELECT T2.Name ,  T1.Name FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID  =  T2.Country_ID"}
{"question": "Show the names of countries that have more than one roller coaster.", "query": "SELECT T1.Name FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID  =  T2.Country_ID GROUP BY T1.Name HAVING COUNT(*)  >  1"}
{"question": "Show the name and population of the country that has the highest roller coaster.", "query": "SELECT T1.Name ,  T1.population FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID  =  T2.Country_ID ORDER BY T2.Height DESC LIMIT 1"}
{"question": "Show the names of countries and the average speed of roller coasters from each country.", "query": "SELECT T1.Name ,  avg(T2.Speed) FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID  =  T2.Country_ID GROUP BY T1.Name"}
{"question": "How many countries do not have an roller coaster longer than 3000?", "query": "SELECT count(*) FROM country WHERE country_id NOT IN ( SELECT country_id FROM roller_coaster WHERE LENGTH  >  3000 )"}
{"question": "What are the country names, area and population which has both roller coasters with speed higher", "query": "SELECT T1.name ,  T1.area ,  T1.population FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID  =  T2.Country_ID WHERE T2.speed  >  60 INTERSECT SELECT T1.name ,  T1.area ,  T1.population FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID  =  T2.Country_ID WHERE T2.speed  <  55"}
{"question": "How many different captain ranks are there?", "query": "SELECT count(DISTINCT rank) FROM captain"}
{"question": "Count the number of different ranks of captain.", "query": "SELECT count(DISTINCT rank) FROM captain"}
{"question": "How many captains are in each rank?", "query": "SELECT count(*) ,  rank FROM captain GROUP BY rank"}
{"question": "Count the number of captains that have each rank.", "query": "SELECT count(*) ,  rank FROM captain GROUP BY rank"}
{"question": "How many captains with younger than 50 are in each rank?", "query": "SELECT count(*) ,  rank FROM captain WHERE age  <  50 GROUP BY rank"}
{"question": "Count the number of captains younger than 50 of each rank.", "query": "SELECT count(*) ,  rank FROM captain WHERE age  <  50 GROUP BY rank"}
{"question": "Sort all captain names by their ages from old to young.", "query": "SELECT name FROM captain ORDER BY age DESC"}
{"question": "What are the names of captains, sorted by age descending?", "query": "SELECT name FROM captain ORDER BY age DESC"}
{"question": "Find the name, class and rank of all captains.", "query": "SELECT name ,  CLASS ,  rank FROM captain"}
{"question": "What are the names, classes, and ranks of all captains?", "query": "SELECT name ,  CLASS ,  rank FROM captain"}
{"question": "Which rank is the most common among captains?", "query": "SELECT rank FROM captain GROUP BY rank ORDER BY count(*) DESC LIMIT 1"}
{"question": "Return the rank for which there are the fewest captains.", "query": "SELECT rank FROM captain GROUP BY rank ORDER BY count(*) DESC LIMIT 1"}
{"question": "Which classes have more than two captains?", "query": "SELECT CLASS FROM captain GROUP BY CLASS HAVING count(*)  >  2"}
{"question": "Give the classes that have more than two captains.", "query": "SELECT CLASS FROM captain GROUP BY CLASS HAVING count(*)  >  2"}
{"question": "Find the name of captains whose rank are either Midshipman or Lieutenant.", "query": "SELECT name FROM captain WHERE rank  =  'Midshipman' OR rank  =  'Lieutenant'"}
{"question": "What are the names of captains that have either the rank Midshipman or Lieutenant?", "query": "SELECT name FROM captain WHERE rank  =  'Midshipman' OR rank  =  'Lieutenant'"}
{"question": "What are the average and minimum age of captains in different class?", "query": "SELECT avg(age) ,  min(age) ,  CLASS FROM captain GROUP BY CLASS"}
{"question": "Return the average and minimum age of captains in each class.", "query": "SELECT avg(age) ,  min(age) ,  CLASS FROM captain GROUP BY CLASS"}
{"question": "Find the captain rank that has some captains in both Cutter and Armed schooner classes.", "query": "SELECT rank FROM captain WHERE CLASS  =  'Cutter' INTERSECT SELECT rank FROM captain WHERE CLASS  =  'Armed schooner'"}
{"question": "What are the ranks of captains that are both in the Cutter and Armed schooner classes?", "query": "SELECT rank FROM captain WHERE CLASS  =  'Cutter' INTERSECT SELECT rank FROM captain WHERE CLASS  =  'Armed schooner'"}
{"question": "Find the captain rank that has no captain in Third-rate ship of the line class.", "query": "SELECT rank FROM captain EXCEPT SELECT rank FROM captain WHERE CLASS  =  'Third-rate ship of the line'"}
{"question": "What are the ranks of captains that have no captain that are in the Third-rate ship of the line class?", "query": "SELECT rank FROM captain EXCEPT SELECT rank FROM captain WHERE CLASS  =  'Third-rate ship of the line'"}
{"question": "What is the name of the youngest captain?", "query": "SELECT name FROM captain ORDER BY age LIMIT 1"}
{"question": "Return the name of the youngest captain.", "query": "SELECT name FROM captain ORDER BY age LIMIT 1"}
{"question": "how many ships are there?", "query": "SELECT count(*) FROM ship"}
{"question": "Count the number of ships.", "query": "SELECT count(*) FROM ship"}
{"question": "Find the name, type, and flag of the ship that is built in the most recent year.", "query": "SELECT name ,  TYPE ,  flag FROM ship ORDER BY built_year DESC LIMIT 1"}
{"question": "What is the name, type, and flag of the ship that was built in the most recent year?", "query": "SELECT name ,  TYPE ,  flag FROM ship ORDER BY built_year DESC LIMIT 1"}
{"question": "Group by ships by flag, and return number of ships that have each flag.", "query": "SELECT count(*) ,  flag FROM ship GROUP BY flag"}
{"question": "What are the different ship flags, and how many ships have each?", "query": "SELECT count(*) ,  flag FROM ship GROUP BY flag"}
{"question": "Which flag is most widely used among all ships?", "query": "SELECT flag FROM ship GROUP BY flag ORDER BY count(*) DESC LIMIT 1"}
{"question": "Return the flag that is most common among all ships.", "query": "SELECT flag FROM ship GROUP BY flag ORDER BY count(*) DESC LIMIT 1"}
{"question": "List all ship names in the order of built year and class.", "query": "SELECT name FROM ship ORDER BY built_year ,  CLASS"}
{"question": "What are the names of ships, ordered by year they were built and their class?", "query": "SELECT name FROM ship ORDER BY built_year ,  CLASS"}
{"question": "Find the ship type that are used by both ships with Panama and Malta flags.", "query": "SELECT TYPE FROM ship WHERE flag  =  'Panama' INTERSECT SELECT TYPE FROM ship WHERE flag  =  'Malta'"}
{"question": "What types of ships have both ships that have Panama Flags and Malta flags?", "query": "SELECT TYPE FROM ship WHERE flag  =  'Panama' INTERSECT SELECT TYPE FROM ship WHERE flag  =  'Malta'"}
{"question": "In which year were most of ships built?", "query": "SELECT built_year FROM ship GROUP BY built_year ORDER BY count(*) DESC LIMIT 1"}
{"question": "What is the year in which most ships were built?", "query": "SELECT built_year FROM ship GROUP BY built_year ORDER BY count(*) DESC LIMIT 1"}
{"question": "Find the name of the ships that have more than one captain.", "query": "SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id  =  t2.ship_id GROUP BY t2.ship_id HAVING count(*)  >  1"}
{"question": "What are the names of ships that have more than one captain?", "query": "SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id  =  t2.ship_id GROUP BY t2.ship_id HAVING count(*)  >  1"}
{"question": "what are the names and classes of the ships that do not have any captain yet?", "query": "SELECT name ,  CLASS FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain)"}
{"question": "Return the names and classes of ships that do not have a captain?", "query": "SELECT name ,  CLASS FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain)"}
{"question": "Find the name of the ship that is steered by the youngest captain.", "query": "SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id  =  t2.ship_id ORDER BY t2.age LIMIT 1"}
{"question": "What is the name of the ship that is commanded by the youngest captain?", "query": "SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id  =  t2.ship_id ORDER BY t2.age LIMIT 1"}
{"question": "Find the name and flag of ships that are not steered by any captain with Midshipman rank.", "query": "SELECT name ,  flag FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain WHERE rank  =  'Midshipman')"}
{"question": "What are the names and flags of ships that do not have a captain with the rank of Midshipman?", "query": "SELECT name ,  flag FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain WHERE rank  =  'Midshipman')"}
{"question": "Find the name of the ships that are steered by both a captain with Midshipman rank and a captain with Lieutenant rank.", "query": "SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id  =  t2.ship_id WHERE t2.rank  =  'Midshipman' INTERSECT SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id  =  t2.ship_id WHERE t2.rank  =  'Lieutenant'"}
{"question": "What are the names of ships that are commanded by both captains with the rank of Midshipman and captains with the rank of Lieutenant?", "query": "SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id  =  t2.ship_id WHERE t2.rank  =  'Midshipman' INTERSECT SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id  =  t2.ship_id WHERE t2.rank  =  'Lieutenant'"}
{"question": "What is id of the city that hosted events in the most recent year?", "query": "SELECT host_city FROM hosting_city ORDER BY YEAR DESC LIMIT 1"}
{"question": "Find the city that hosted some events in the most recent year. What is the id of this city?", "query": "SELECT host_city FROM hosting_city ORDER BY YEAR DESC LIMIT 1"}
{"question": "Find the match ids of the cities that hosted competition \"1994 FIFA World Cup qualification\"?", "query": "SELECT match_id FROM MATCH WHERE competition = \"1994 FIFA World Cup qualification\""}
{"question": "What is the match id of the competition called \"1994 FIFA World Cup qualification\"?", "query": "SELECT match_id FROM MATCH WHERE competition = \"1994 FIFA World Cup qualification\""}
{"question": "Find the cities which were once a host city after 2010?", "query": "SELECT T1.city FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city WHERE T2.year  >  2010"}
{"question": "Which cities served as a host city after 2010?", "query": "SELECT T1.city FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city WHERE T2.year  >  2010"}
{"question": "Which city has hosted the most events?", "query": "SELECT T1.city FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id  =  T2.host_city GROUP BY T2.host_city ORDER BY count(*) DESC LIMIT 1"}
{"question": "Find the city that hosted the most events.", "query": "SELECT T1.city FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id  =  T2.host_city GROUP BY T2.host_city ORDER BY count(*) DESC LIMIT 1"}
{"question": "What is the venue of the competition \"1994 FIFA World Cup qualification\" hosted by \"Nanjing ( Jiangsu )\"?", "query": "SELECT T3.venue FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city JOIN MATCH AS T3 ON T2.match_id = T3.match_id WHERE T1.city = \"Nanjing ( Jiangsu )\" AND T3.competition = \"1994 FIFA World Cup qualification\""}
{"question": "Find the venue of the competition \"1994 FIFA World Cup qualification\" which was hosted by \"Nanjing ( Jiangsu )\".", "query": "SELECT T3.venue FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city JOIN MATCH AS T3 ON T2.match_id = T3.match_id WHERE T1.city = \"Nanjing ( Jiangsu )\" AND T3.competition = \"1994 FIFA World Cup qualification\""}
{"question": "Give me the temperature of Shanghai in January.", "query": "SELECT T2.Jan FROM city AS T1 JOIN temperature AS T2 ON T1.city_id = T2.city_id WHERE T1.city = \"Shanghai\""}
{"question": "What is the temperature of \"Shanghai\" city in January?", "query": "SELECT T2.Jan FROM city AS T1 JOIN temperature AS T2 ON T1.city_id = T2.city_id WHERE T1.city = \"Shanghai\""}
{"question": "What is the host year of city \"Taizhou ( Zhejiang )\"?", "query": "SELECT T2.year FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id  =  T2.host_city WHERE T1.city  =  \"Taizhou ( Zhejiang )\""}
{"question": "IN which year did city \"Taizhou ( Zhejiang )\" serve as a host city?", "query": "SELECT T2.year FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id  =  T2.host_city WHERE T1.city  =  \"Taizhou ( Zhejiang )\""}
{"question": "Which three cities have the largest regional population?", "query": "SELECT city FROM city ORDER BY regional_population DESC LIMIT 3"}
{"question": "What are the three largest cities in terms of regional population?", "query": "SELECT city FROM city ORDER BY regional_population DESC LIMIT 3"}
{"question": "Which city has the lowest GDP? Please list the city name and its GDP.", "query": "SELECT city ,  GDP FROM city ORDER BY GDP LIMIT 1"}
{"question": "What is the city with the smallest GDP? Return the city and its GDP.", "query": "SELECT city ,  GDP FROM city ORDER BY GDP LIMIT 1"}
{"question": "Which city has the highest temperature in February?", "query": "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id ORDER BY T2.Feb DESC LIMIT 1"}
{"question": "In February, which city marks the highest temperature?", "query": "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id ORDER BY T2.Feb DESC LIMIT 1"}
{"question": "Give me a list of cities whose temperature in March is lower than that in July or higher than that in Oct?", "query": "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id WHERE T2.Mar  <  T2.Jul OR T2.Mar  >  T2.Oct"}
{"question": "Which cities' temperature in March is lower than that in July or higher than that in Oct?", "query": "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id WHERE T2.Mar  <  T2.Jul OR T2.Mar  >  T2.Oct"}
{"question": "Give me a list of cities whose temperature in Mar is lower than that in July and which have also served as host cities?", "query": "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id WHERE T2.Mar  <  T2.Jul INTERSECT SELECT T3.city FROM city AS T3 JOIN hosting_city AS T4 ON T3.city_id  =  T4.host_city"}
{"question": "Which cities have lower temperature in March than in July and have been once host cities?", "query": "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id WHERE T2.Mar  <  T2.Jul INTERSECT SELECT T3.city FROM city AS T3 JOIN hosting_city AS T4 ON T3.city_id  =  T4.host_city"}
{"question": "Give me a list of cities whose temperature in Mar is lower than that in Dec and which have never been host cities.", "query": "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id WHERE T2.Mar  <  T2.Dec EXCEPT SELECT T3.city FROM city AS T3 JOIN hosting_city AS T4 ON T3.city_id  =  T4.host_city"}
{"question": "Which cities have lower temperature in March than in Dec and have never served as host cities?", "query": "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id WHERE T2.Mar  <  T2.Dec EXCEPT SELECT T3.city FROM city AS T3 JOIN hosting_city AS T4 ON T3.city_id  =  T4.host_city"}
{"question": "Give me a list of cities whose temperature in Feb is higher than that in Jun or cities that were once host cities?", "query": "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id WHERE T2.Feb  >  T2.Jun UNION SELECT T3.city FROM city AS T3 JOIN hosting_city AS T4 ON T3.city_id  =  T4.host_city"}
{"question": "Which cities have higher temperature in Feb than in Jun or have once served as host cities?", "query": "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id WHERE T2.Feb  >  T2.Jun UNION SELECT T3.city FROM city AS T3 JOIN hosting_city AS T4 ON T3.city_id  =  T4.host_city"}
{"question": "Please give me a list of cities whose regional population is over 10000000.", "query": "SELECT city FROM city WHERE regional_population  >  10000000"}
{"question": "Which cities have regional population above 10000000?", "query": "SELECT city FROM city WHERE regional_population  >  10000000"}
{"question": "Please give me a list of cities whose regional population is over 8000000 or under 5000000.", "query": "SELECT city FROM city WHERE regional_population  >  10000000 UNION SELECT city FROM city WHERE regional_population  <  5000000"}
{"question": "Which cities have regional population above 8000000 or below 5000000?", "query": "SELECT city FROM city WHERE regional_population  >  10000000 UNION SELECT city FROM city WHERE regional_population  <  5000000"}
{"question": "Find the number of matches in different competitions.", "query": "SELECT count(*) ,  Competition FROM MATCH GROUP BY Competition"}
{"question": "For each competition, count the number of matches.", "query": "SELECT count(*) ,  Competition FROM MATCH GROUP BY Competition"}
{"question": "List venues of all matches in the order of their dates starting from the most recent one.", "query": "SELECT venue FROM MATCH ORDER BY date DESC"}
{"question": "What are the venues of all the matches? Sort them in the descending order of match date.", "query": "SELECT venue FROM MATCH ORDER BY date DESC"}
{"question": "what is the GDP of the city with the largest population.", "query": "SELECT gdp FROM city ORDER BY Regional_Population DESC LIMIT 1"}
{"question": "Find the GDP of the city with the largest regional population.", "query": "SELECT gdp FROM city ORDER BY Regional_Population DESC LIMIT 1"}
{"question": "What are the GDP and population of the city that already served as a host more than once?", "query": "SELECT t1.gdp ,  t1.Regional_Population FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id  =  T2.host_city GROUP BY t2.Host_City HAVING count(*)  >  1"}
{"question": "Which cities have served as host cities more than once? Return me their GDP and population.", "query": "SELECT t1.gdp ,  t1.Regional_Population FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id  =  T2.host_city GROUP BY t2.Host_City HAVING count(*)  >  1"}
{"question": "List every individual's first name, middle name and last name in alphabetical order by last name.", "query": "SELECT individual_first_name ,  individual_middle_name ,  individual_last_name FROM individuals ORDER BY individual_last_name"}
{"question": "What are the first, middle, and last names of all individuals, ordered by last name?", "query": "SELECT individual_first_name ,  individual_middle_name ,  individual_last_name FROM individuals ORDER BY individual_last_name"}
{"question": "List all the types of forms.", "query": "SELECT DISTINCT form_type_code FROM forms"}
{"question": "What are the different types of forms?", "query": "SELECT DISTINCT form_type_code FROM forms"}
{"question": "Find the name of the most popular party form.", "query": "SELECT t1.form_name FROM forms AS t1 JOIN party_forms AS t2 ON t1.form_id  =  t2.form_id GROUP BY t2.form_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "What is the name of the party form that is most common?", "query": "SELECT t1.form_name FROM forms AS t1 JOIN party_forms AS t2 ON t1.form_id  =  t2.form_id GROUP BY t2.form_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "Find the payment method and phone of the party with email \"enrico09@example.com\".", "query": "SELECT payment_method_code ,  party_phone FROM parties WHERE party_email  =  \"enrico09@example.com\""}
{"question": "What is the payment method code and party phone of the party with the email 'enrico09@example.com'?", "query": "SELECT payment_method_code ,  party_phone FROM parties WHERE party_email  =  \"enrico09@example.com\""}
{"question": "Find the emails of parties with the most popular party form.", "query": "SELECT t1.party_email FROM parties AS t1 JOIN party_forms AS t2 ON t1.party_id  =  t2.party_id WHERE t2.form_id  =  (SELECT form_id FROM party_forms GROUP BY form_id ORDER BY count(*) DESC LIMIT 1)"}
{"question": "What are the party emails associated with parties that used the party form that is the most common?", "query": "SELECT t1.party_email FROM parties AS t1 JOIN party_forms AS t2 ON t1.party_id  =  t2.party_id WHERE t2.form_id  =  (SELECT form_id FROM party_forms GROUP BY form_id ORDER BY count(*) DESC LIMIT 1)"}
{"question": "List all the name of organizations in order of the date formed.", "query": "SELECT organization_name FROM organizations ORDER BY date_formed ASC"}
{"question": "What are the names of organizations, ordered by the date they were formed, ascending?", "query": "SELECT organization_name FROM organizations ORDER BY date_formed ASC"}
{"question": "Find the name of the youngest organization.", "query": "SELECT organization_name FROM organizations ORDER BY date_formed DESC LIMIT 1"}
{"question": "What is the name of the organization that was formed most recently?", "query": "SELECT organization_name FROM organizations ORDER BY date_formed DESC LIMIT 1"}
{"question": "Find the last name of the latest contact individual of the organization \"Labour Party\".", "query": "SELECT t3.individual_last_name FROM organizations AS t1 JOIN organization_contact_individuals AS t2 ON t1.organization_id  =  t2.organization_id JOIN individuals AS t3 ON t2.individual_id  =  t3.individual_id WHERE t1.organization_name  =  \"Labour Party\" ORDER BY t2.date_contact_to DESC LIMIT 1"}
{"question": "What is the last name of the contact individual from the Labour party organization who was contacted most recently?", "query": "SELECT t3.individual_last_name FROM organizations AS t1 JOIN organization_contact_individuals AS t2 ON t1.organization_id  =  t2.organization_id JOIN individuals AS t3 ON t2.individual_id  =  t3.individual_id WHERE t1.organization_name  =  \"Labour Party\" ORDER BY t2.date_contact_to DESC LIMIT 1"}
{"question": "Find the last name of the first ever contact person of the organization with the highest UK Vat number.", "query": "SELECT t3.individual_last_name FROM organizations AS t1 JOIN organization_contact_individuals AS t2 ON t1.organization_id  =  t2.organization_id JOIN individuals AS t3 ON t2.individual_id  =  t3.individual_id WHERE t1.uk_vat_number  =  (SELECT max(uk_vat_number) FROM organizations) ORDER BY t2.date_contact_to ASC LIMIT 1"}
{"question": "What is the last name of the first individual contacted from the organization with the maximum UK Vat number across all organizations?", "query": "SELECT t3.individual_last_name FROM organizations AS t1 JOIN organization_contact_individuals AS t2 ON t1.organization_id  =  t2.organization_id JOIN individuals AS t3 ON t2.individual_id  =  t3.individual_id WHERE t1.uk_vat_number  =  (SELECT max(uk_vat_number) FROM organizations) ORDER BY t2.date_contact_to ASC LIMIT 1"}
{"question": "Count the number of services.", "query": "SELECT count(*) FROM services"}
{"question": "Find name of the services that has never been used.", "query": "SELECT service_name FROM services EXCEPT SELECT t1.service_name FROM services AS t1 JOIN party_services AS t2 ON t1.service_id  =  t2.service_id"}
{"question": "What are the names of the services that have never been used?", "query": "SELECT service_name FROM services EXCEPT SELECT t1.service_name FROM services AS t1 JOIN party_services AS t2 ON t1.service_id  =  t2.service_id"}
{"question": "Find the name of all the cities and states.", "query": "SELECT town_city FROM addresses UNION SELECT state_province_county FROM addresses"}
{"question": "What are the names of all cities and states?", "query": "SELECT town_city FROM addresses UNION SELECT state_province_county FROM addresses"}
{"question": "How many cities are there in state \"Colorado\"?", "query": "SELECT count(*) FROM addresses WHERE state_province_county  =  \"Colorado\""}
{"question": "Count the number of cities in the state of Colorado.", "query": "SELECT count(*) FROM addresses WHERE state_province_county  =  \"Colorado\""}
{"question": "Find the payment method code used by more than 3 parties.", "query": "SELECT payment_method_code FROM parties GROUP BY payment_method_code HAVING count(*)  >  3"}
{"question": "What are the payment method codes that have been used by more than 3 parties?", "query": "SELECT payment_method_code FROM parties GROUP BY payment_method_code HAVING count(*)  >  3"}
{"question": "Find the name of organizations whose names contain \"Party\".", "query": "SELECT organization_name FROM organizations WHERE organization_name LIKE \"%Party%\""}
{"question": "What are the names of organizations that contain the word \"Party\"?", "query": "SELECT organization_name FROM organizations WHERE organization_name LIKE \"%Party%\""}
{"question": "How many distinct payment methods are used by parties?", "query": "SELECT count(DISTINCT payment_method_code) FROM parties"}
{"question": "Count the number of different payment method codes used by parties.", "query": "SELECT count(DISTINCT payment_method_code) FROM parties"}
{"question": "Which is the email of the party that has used the services the most number of times?", "query": "SELECT t1.party_email FROM parties AS t1 JOIN party_services AS t2 ON t1.party_id  =  t2.customer_id GROUP BY t1.party_email ORDER BY count(*) DESC LIMIT 1"}
{"question": "Return the party email that has used party services the greatest number of times.", "query": "SELECT t1.party_email FROM parties AS t1 JOIN party_services AS t2 ON t1.party_id  =  t2.customer_id GROUP BY t1.party_email ORDER BY count(*) DESC LIMIT 1"}
{"question": "Which state can address \"6862 Kaitlyn Knolls\" possibly be in?", "query": "SELECT state_province_county FROM addresses WHERE line_1_number_building LIKE \"%6862 Kaitlyn Knolls%\""}
{"question": "Give the state corresponding to the line number building \"6862 Kaitlyn Knolls\".", "query": "SELECT state_province_county FROM addresses WHERE line_1_number_building LIKE \"%6862 Kaitlyn Knolls%\""}
{"question": "What is the name of organization that has the greatest number of contact individuals?", "query": "SELECT t1.organization_name FROM organizations AS t1 JOIN organization_contact_individuals AS t2 ON t1.organization_id  =  t2.organization_id GROUP BY t1.organization_name ORDER BY count(*) DESC LIMIT 1"}
{"question": "Return the name of the organization which has the most contact individuals.", "query": "SELECT t1.organization_name FROM organizations AS t1 JOIN organization_contact_individuals AS t2 ON t1.organization_id  =  t2.organization_id GROUP BY t1.organization_name ORDER BY count(*) DESC LIMIT 1"}
{"question": "Find the last name of the individuals that have been contact individuals of an organization.", "query": "SELECT DISTINCT t1.individual_last_name FROM individuals AS t1 JOIN organization_contact_individuals AS t2 ON t1.individual_id  =  t2.individual_id"}
{"question": "What are the last names of individuals who have been contact individuals for an organization?", "query": "SELECT DISTINCT t1.individual_last_name FROM individuals AS t1 JOIN organization_contact_individuals AS t2 ON t1.individual_id  =  t2.individual_id"}
{"question": "How many drivers are there?", "query": "SELECT count(*) FROM driver"}
{"question": "Show the name, home city, and age for all drivers.", "query": "SELECT name ,  home_city ,  age FROM driver"}
{"question": "Show the party and the number of drivers in each party.", "query": "SELECT party ,  count(*) FROM driver GROUP BY party"}
{"question": "Show the name of drivers in descending order of age.", "query": "SELECT name FROM driver ORDER BY age DESC"}
{"question": "Show all different home cities.", "query": "SELECT DISTINCT home_city FROM driver"}
{"question": "Show the home city with the most number of drivers.", "query": "SELECT home_city FROM driver GROUP BY home_city ORDER BY count(*) DESC LIMIT 1"}
{"question": "Show the party with drivers from Hartford and drivers older than 40.", "query": "SELECT party FROM driver WHERE home_city  =  'Hartford' AND age  >  40"}
{"question": "Show home city where at least two drivers older than 40 are from.", "query": "SELECT home_city FROM driver WHERE age  >  40 GROUP BY home_city HAVING count(*)  >=  2"}
{"question": "Show all home cities except for those having a driver older than 40.", "query": "SELECT home_city FROM driver EXCEPT SELECT home_city FROM driver WHERE age  >  40"}
{"question": "Show the names of the drivers without a school bus.", "query": "SELECT name FROM driver WHERE driver_id NOT IN (SELECT driver_id FROM school_bus)"}
{"question": "Show the types of schools that have two schools.", "query": "SELECT TYPE FROM school GROUP BY TYPE HAVING count(*)  =  2"}
{"question": "Show the school name and driver name for all school buses.", "query": "SELECT T2.school ,  T3.name FROM school_bus AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id JOIN driver AS T3 ON T1.driver_id  =  T3.driver_id"}
{"question": "What is the maximum, minimum and average years spent working on a school bus?", "query": "SELECT max(years_working) ,  min(years_working) ,  avg(years_working) FROM school_bus"}
{"question": "Show the school name and type for schools without a school bus.", "query": "SELECT school ,  TYPE FROM school WHERE school_id NOT IN (SELECT school_id FROM school_bus)"}
{"question": "Show the type of school and the number of buses for each type.", "query": "SELECT T2.type ,  count(*) FROM school_bus AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id GROUP BY T2.type"}
{"question": "How many drivers are from Hartford city or younger than 40?", "query": "SELECT count(*) FROM driver WHERE home_city  =  'Hartford' OR age  <  40"}
{"question": "List names for drivers from Hartford city and younger than 40.", "query": "SELECT name FROM driver WHERE home_city  =  'Hartford' AND age  <  40"}
{"question": "find the name of driver who is driving the school bus with the longest working history.", "query": "SELECT t1.name FROM driver AS t1 JOIN school_bus AS t2 ON t1.driver_id  =  t2.driver_id ORDER BY years_working DESC LIMIT 1"}
{"question": "How many flights have a velocity larger than 200?", "query": "SELECT count(*) FROM flight WHERE velocity  >  200"}
{"question": "List the vehicle flight number, date and pilot of all the flights, ordered by altitude.", "query": "SELECT vehicle_flight_number ,  date ,  pilot FROM flight ORDER BY altitude ASC"}
{"question": "List the id, country, city and name of the airports ordered alphabetically by the name.", "query": "SELECT id ,  country ,  city ,  name FROM airport ORDER BY name"}
{"question": "What is maximum group equity shareholding of the companies?", "query": "SELECT max(group_equity_shareholding) FROM operate_company"}
{"question": "What is the velocity of the pilot named 'Thompson'?", "query": "SELECT avg(velocity) FROM flight WHERE pilot  =  'Thompson'"}
{"question": "What are the names and types of the companies that have ever operated a flight?", "query": "SELECT T1.name ,  T1.type FROM operate_company AS T1 JOIN flight AS t2 ON T1.id  =  T2.company_id"}
{"question": "What are the names of the airports which are not in the country 'Iceland'?", "query": "SELECT name FROM airport WHERE country != 'Iceland'"}
{"question": "What are the distinct types of the companies that have operated any flights with velocity less than 200?", "query": "SELECT DISTINCT T1.type FROM operate_company AS T1 JOIN flight AS t2 ON T1.id  =  T2.company_id WHERE T2.velocity  <  200"}
{"question": "What are the ids and names of the companies that operated more than one flight?", "query": "SELECT T1.id ,  T1.name FROM operate_company AS T1 JOIN flight AS t2 ON T1.id  =  T2.company_id GROUP BY T1.id HAVING count(*)  >  1"}
{"question": "What is the id, name and IATA code of the airport that had most number of flights?", "query": "SELECT T1.id ,  T1.name ,  T1.IATA FROM airport AS T1 JOIN flight AS T2 ON T1.id  =  T2.airport_id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1"}
{"question": "What are the different pilot names who had piloted a flight in the country 'United States' or in the airport named 'Billund Airport'?", "query": "SELECT DISTINCT T2.pilot FROM airport AS T1 JOIN flight AS T2 ON T1.id  =  T2.airport_id WHERE T1.country  =  'United States' OR T1.name  =  'Billund Airport'"}
{"question": "What is the most common company type, and how many are there?", "query": "SELECT TYPE ,  count(*) FROM operate_company GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1"}
{"question": "How many airports haven't the pilot 'Thompson' driven an aircraft?", "query": "SELECT count(*) FROM airport WHERE id NOT IN ( SELECT airport_id FROM flight WHERE pilot  =  'Thompson' );"}
{"question": "List the name of the pilots who have flied for both a company that mainly provide 'Cargo' services and a company that runs 'Catering services' activities.", "query": "SELECT T2.pilot FROM operate_company AS T1 JOIN flight AS t2 ON T1.id  =  T2.company_id WHERE T1.principal_activities  =  'Cargo' INTERSECT SELECT T2.pilot FROM operate_company AS T1 JOIN flight AS t2 ON T1.id  =  T2.company_id WHERE T1.principal_activities  =  'Catering services'"}
{"question": "Which of the airport names contains the word 'international'?", "query": "SELECT name FROM airport WHERE name LIKE '%international%'"}
{"question": "How many companies operates airlines in each airport?", "query": "SELECT T3.id ,  count(*) FROM operate_company AS T1 JOIN flight AS t2 ON T1.id  =  T2.company_id JOIN airport AS T3 ON T2.airport_id  =  T3.id GROUP BY T3.id"}
{"question": "how many airports are there in each country?", "query": "SELECT count(*) ,  country FROM airport GROUP BY country"}
{"question": "which countries have more than 2 airports?", "query": "SELECT country FROM airport GROUP BY country HAVING count(*)  >  2"}
{"question": "which pilot is in charge of the most number of flights?", "query": "SELECT pilot FROM flight GROUP BY pilot ORDER BY count(*) DESC LIMIT 1"}
{"question": "Show all account ids and account details.", "query": "SELECT account_id ,  account_details FROM Accounts"}
{"question": "What are the ids and details of all accounts?", "query": "SELECT account_id ,  account_details FROM Accounts"}
{"question": "How many statements do we have?", "query": "SELECT count(*) FROM Statements"}
{"question": "Count the number of statements.", "query": "SELECT count(*) FROM Statements"}
{"question": "List all statement ids and statement details.", "query": "SELECT STATEMENT_ID ,  statement_details FROM Statements"}
{"question": "What are the ids and details of all statements?", "query": "SELECT STATEMENT_ID ,  statement_details FROM Statements"}
{"question": "Show statement id, statement detail, account detail for accounts.", "query": "SELECT T1.statement_id ,  T2.statement_details ,  T1.account_details FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id  =  T2.statement_id"}
{"question": "What are the statement ids, statement details, and account details, for all accounts?", "query": "SELECT T1.statement_id ,  T2.statement_details ,  T1.account_details FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id  =  T2.statement_id"}
{"question": "Show all statement id and the number of accounts for each statement.", "query": "SELECT STATEMENT_ID ,  count(*) FROM Accounts GROUP BY STATEMENT_ID"}
{"question": "What are the different statement ids on accounts, and the number of accounts for each?", "query": "SELECT STATEMENT_ID ,  count(*) FROM Accounts GROUP BY STATEMENT_ID"}
{"question": "Show the statement id and the statement detail for the statement with most number of accounts.", "query": "SELECT T1.statement_id ,  T2.statement_details FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id  =  T2.statement_id GROUP BY T1.statement_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "What are the statement id and statement detail for the statement that has the most corresponding accounts?", "query": "SELECT T1.statement_id ,  T2.statement_details FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id  =  T2.statement_id GROUP BY T1.statement_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "Show the number of documents.", "query": "SELECT count(*) FROM Documents"}
{"question": "Count the number of documents.", "query": "SELECT count(*) FROM Documents"}
{"question": "List the document type code, document name, and document description for the document with name 'Noel CV' or name 'King Book'.", "query": "SELECT document_type_code ,  document_name ,  document_description FROM Documents WHERE document_name  =  'Noel CV' OR document_name  =  'King Book'"}
{"question": "What are the type come, name, and description of the document that has either the name 'Noel CV' or 'King Book'?", "query": "SELECT document_type_code ,  document_name ,  document_description FROM Documents WHERE document_name  =  'Noel CV' OR document_name  =  'King Book'"}
{"question": "Show the ids and names of all documents.", "query": "SELECT document_id ,  document_name FROM Documents"}
{"question": "What are the ids and names for each of the documents?", "query": "SELECT document_id ,  document_name FROM Documents"}
{"question": "Find names and ids of all documents with document type code BK.", "query": "SELECT document_name ,  document_id FROM Documents WHERE document_type_code  =  \"BK\""}
{"question": "What are the names and ids of documents that have the type code BK?", "query": "SELECT document_name ,  document_id FROM Documents WHERE document_type_code  =  \"BK\""}
{"question": "How many documents are with document type code BK for each product id?", "query": "SELECT count(*) ,  project_id FROM Documents WHERE document_type_code  =  \"BK\" GROUP BY project_id"}
{"question": "Count the number of documents with the type code BK that correspond to each product id.", "query": "SELECT count(*) ,  project_id FROM Documents WHERE document_type_code  =  \"BK\" GROUP BY project_id"}
{"question": "Show the document name and the document date for all documents on project with details 'Graph Database project'.", "query": "SELECT document_name ,  document_date FROM Documents AS T1 JOIN projects AS T2 ON T1.project_id  =  T2.project_id WHERE T2.project_details  =  'Graph Database project'"}
{"question": "What are the names and dates for documents corresponding to project that has the details 'Graph Database project'?", "query": "SELECT document_name ,  document_date FROM Documents AS T1 JOIN projects AS T2 ON T1.project_id  =  T2.project_id WHERE T2.project_details  =  'Graph Database project'"}
{"question": "Show project ids and the number of documents in each project.", "query": "SELECT project_id ,  count(*) FROM Documents GROUP BY project_id"}
{"question": "How many documents correspond with each project id?", "query": "SELECT project_id ,  count(*) FROM Documents GROUP BY project_id"}
{"question": "What is the id of the project with least number of documents?", "query": "SELECT project_id FROM Documents GROUP BY project_id ORDER BY count(*) ASC LIMIT 1"}
{"question": "Return the id of the project that has the fewest corresponding documents.", "query": "SELECT project_id FROM Documents GROUP BY project_id ORDER BY count(*) ASC LIMIT 1"}
{"question": "Show the ids for projects with at least 2 documents.", "query": "SELECT project_id FROM Documents GROUP BY project_id HAVING count(*)  >=  2"}
{"question": "What are project ids of projects that have 2 or more corresponding documents?", "query": "SELECT project_id FROM Documents GROUP BY project_id HAVING count(*)  >=  2"}
{"question": "List document type codes and the number of documents in each code.", "query": "SELECT document_type_code ,  count(*) FROM Documents GROUP BY document_type_code"}
{"question": "How many documents are there of each type?", "query": "SELECT document_type_code ,  count(*) FROM Documents GROUP BY document_type_code"}
{"question": "What is the document type code with most number of documents?", "query": "SELECT document_type_code FROM Documents GROUP BY document_type_code ORDER BY count(*) DESC LIMIT 1"}
{"question": "Return the code of the document type that is most common.", "query": "SELECT document_type_code FROM Documents GROUP BY document_type_code ORDER BY count(*) DESC LIMIT 1"}
{"question": "Show the document type code with fewer than 3 documents.", "query": "SELECT document_type_code FROM Documents GROUP BY document_type_code HAVING count(*)  <  3"}
{"question": "What are the codes corresponding to document types for which there are less than 3 documents?", "query": "SELECT document_type_code FROM Documents GROUP BY document_type_code HAVING count(*)  <  3"}
{"question": "Show the statement detail and the corresponding document name for the statement with detail 'Private Project'.", "query": "SELECT T1.statement_details ,  T2.document_name FROM Statements AS T1 JOIN Documents AS T2 ON T1.statement_id  =  T2.document_id WHERE T1.statement_details  =  'Private Project'"}
{"question": "What are the details for statements with the details 'Private Project', and what are the names of the corresponding documents?", "query": "SELECT T1.statement_details ,  T2.document_name FROM Statements AS T1 JOIN Documents AS T2 ON T1.statement_id  =  T2.document_id WHERE T1.statement_details  =  'Private Project'"}
{"question": "Show all document type codes, document type names, document type descriptions.", "query": "SELECT document_type_code ,  document_type_name ,  document_type_description FROM Ref_document_types"}
{"question": "What are the codes, names, and descriptions of the different document types?", "query": "SELECT document_type_code ,  document_type_name ,  document_type_description FROM Ref_document_types"}
{"question": "What is the document type description for document type named Film?", "query": "SELECT document_type_description FROM Ref_document_types WHERE document_type_name  =  \"Film\""}
{"question": "Return the description of the document type name 'Film'.", "query": "SELECT document_type_description FROM Ref_document_types WHERE document_type_name  =  \"Film\""}
{"question": "What is the document type name and the document type description and creation date for all the documents?", "query": "SELECT T1.document_type_name ,  T1.document_type_description ,  T2.Document_date FROM Ref_document_types AS T1 JOIN Documents AS T2 ON T1.document_type_code  =  T2.document_type_code"}
{"question": "Return the type name, type description, and date of creation for each document.", "query": "SELECT T1.document_type_name ,  T1.document_type_description ,  T2.Document_date FROM Ref_document_types AS T1 JOIN Documents AS T2 ON T1.document_type_code  =  T2.document_type_code"}
{"question": "Show the number of projects.", "query": "SELECT count(*) FROM Projects"}
{"question": "How many projects are there?", "query": "SELECT count(*) FROM Projects"}
{"question": "List ids and details for all projects.", "query": "SELECT project_id ,  project_details FROM Projects"}
{"question": "What are the ids and details for each project?", "query": "SELECT project_id ,  project_details FROM Projects"}
{"question": "What is the project id and detail for the project with at least two documents?", "query": "SELECT T1.project_id ,  T1.project_details FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.project_id HAVING count(*)  >  2"}
{"question": "Return the ids and details corresponding to projects for which there are more than two documents.", "query": "SELECT T1.project_id ,  T1.project_details FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.project_id HAVING count(*)  >  2"}
{"question": "What is the project detail for the project with document \"King Book\"?", "query": "SELECT T1.project_details FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id  =  T2.project_id WHERE T2.document_name  =  \"King Book\""}
{"question": "Give the details of the project with the document name 'King Book'.", "query": "SELECT T1.project_details FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id  =  T2.project_id WHERE T2.document_name  =  \"King Book\""}
{"question": "How many budget types do we have?", "query": "SELECT count(*) FROM Ref_budget_codes"}
{"question": "Count the number of budget codes.", "query": "SELECT count(*) FROM Ref_budget_codes"}
{"question": "List all budget type codes and descriptions.", "query": "SELECT budget_type_code ,  budget_type_description FROM Ref_budget_codes"}
{"question": "What are the type codes and descriptions of each budget type?", "query": "SELECT budget_type_code ,  budget_type_description FROM Ref_budget_codes"}
{"question": "What is the description for the budget type with code ORG?", "query": "SELECT budget_type_description FROM Ref_budget_codes WHERE budget_type_code  =  \"ORG\""}
{"question": "Return the description of the budget type that has the code ORG.", "query": "SELECT budget_type_description FROM Ref_budget_codes WHERE budget_type_code  =  \"ORG\""}
{"question": "How many documents have expenses?", "query": "SELECT count(*) FROM Documents_with_expenses"}
{"question": "Count the number of documents with expenses.", "query": "SELECT count(*) FROM Documents_with_expenses"}
{"question": "What are the document ids for the budget type code 'SF'?", "query": "SELECT document_id FROM Documents_with_expenses WHERE budget_type_code  =  'SF'"}
{"question": "Give the ids of documents with expenses that have the budget code 'SF'.", "query": "SELECT document_id FROM Documents_with_expenses WHERE budget_type_code  =  'SF'"}
{"question": "Show the budget type code and description and the corresponding document id.", "query": "SELECT T2.budget_type_code ,  T2.budget_type_description ,  T1.document_id FROM Documents_with_expenses AS T1 JOIN Ref_budget_codes AS T2 ON T1.budget_type_code  =  T2.budget_type_code"}
{"question": "Return the budget type codes, budget type descriptions and document ids for documents with expenses.", "query": "SELECT T2.budget_type_code ,  T2.budget_type_description ,  T1.document_id FROM Documents_with_expenses AS T1 JOIN Ref_budget_codes AS T2 ON T1.budget_type_code  =  T2.budget_type_code"}
{"question": "Show ids for all documents with budget types described as 'Government'.", "query": "SELECT T1.document_id FROM Documents_with_expenses AS T1 JOIN Ref_Budget_Codes AS T2 ON T1.Budget_Type_code  =  T2.Budget_Type_code WHERE T2.budget_type_Description  =  \"Government\""}
{"question": "Give the ids for documents that have the budget description 'Government'.", "query": "SELECT T1.document_id FROM Documents_with_expenses AS T1 JOIN Ref_Budget_Codes AS T2 ON T1.Budget_Type_code  =  T2.Budget_Type_code WHERE T2.budget_type_Description  =  \"Government\""}
{"question": "Show budget type codes and the number of documents in each budget type.", "query": "SELECT budget_type_code ,  count(*) FROM Documents_with_expenses GROUP BY budget_type_code"}
{"question": "What are the different budget type codes, and how many documents are there for each?", "query": "SELECT budget_type_code ,  count(*) FROM Documents_with_expenses GROUP BY budget_type_code"}
{"question": "What is the budget type code with most number of documents.", "query": "SELECT budget_type_code FROM Documents_with_expenses GROUP BY budget_type_code ORDER BY count(*) DESC LIMIT 1"}
{"question": "Give the budget type code that is most common among documents with expenses.", "query": "SELECT budget_type_code FROM Documents_with_expenses GROUP BY budget_type_code ORDER BY count(*) DESC LIMIT 1"}
{"question": "What are the ids of documents which don't have expense budgets?", "query": "SELECT document_id FROM Documents EXCEPT SELECT document_id FROM Documents_with_expenses"}
{"question": "Return the ids of documents that do not have expenses.", "query": "SELECT document_id FROM Documents EXCEPT SELECT document_id FROM Documents_with_expenses"}
{"question": "Show ids for all documents in type CV without expense budgets.", "query": "SELECT document_id FROM Documents WHERE document_type_code  =  \"CV\" EXCEPT SELECT document_id FROM Documents_with_expenses"}
{"question": "What are the ids of documents with the type code CV that do not have expenses.", "query": "SELECT document_id FROM Documents WHERE document_type_code  =  \"CV\" EXCEPT SELECT document_id FROM Documents_with_expenses"}
{"question": "What are the ids of documents with letter 's' in the name with any expense budgets.", "query": "SELECT T1.document_id FROM Documents AS T1 JOIN Documents_with_expenses AS T2 ON T1.document_id  =  T2.document_id WHERE T1.document_name LIKE '%s%'"}
{"question": "Give the ids of documents that have expenses and contain the letter s in their names.", "query": "SELECT T1.document_id FROM Documents AS T1 JOIN Documents_with_expenses AS T2 ON T1.document_id  =  T2.document_id WHERE T1.document_name LIKE '%s%'"}
{"question": "How many documents do not have any expense?", "query": "SELECT count(*) FROM Documents WHERE document_id NOT IN ( SELECT document_id FROM Documents_with_expenses )"}
{"question": "Count the number of documents that do not have expenses.", "query": "SELECT count(*) FROM Documents WHERE document_id NOT IN ( SELECT document_id FROM Documents_with_expenses )"}
{"question": "What are the dates for the documents with both 'GV' type and 'SF' type expenses?", "query": "SELECT T1.document_date FROM Documents AS T1 JOIN Documents_with_Expenses AS T2 ON T1.document_id  =  T2.document_id WHERE T2.budget_type_code  =  'GV' INTERSECT SELECT T1.document_date FROM Documents AS T1 JOIN Documents_with_Expenses AS T2 ON T1.document_id  =  T2.document_id WHERE T2.budget_type_code  =  'SF'"}
{"question": "Give the dates of creation for documents that have both budget type codes 'GV' and 'SF'.", "query": "SELECT T1.document_date FROM Documents AS T1 JOIN Documents_with_Expenses AS T2 ON T1.document_id  =  T2.document_id WHERE T2.budget_type_code  =  'GV' INTERSECT SELECT T1.document_date FROM Documents AS T1 JOIN Documents_with_Expenses AS T2 ON T1.document_id  =  T2.document_id WHERE T2.budget_type_code  =  'SF'"}
{"question": "What are the account details with the largest value or with value having char '5' in it?", "query": "SELECT max(Account_details) FROM Accounts UNION SELECT Account_details FROM Accounts WHERE Account_details LIKE \"%5%\""}
{"question": "Return the account details with the greatest value, as well as those that include the character 5.", "query": "SELECT max(Account_details) FROM Accounts UNION SELECT Account_details FROM Accounts WHERE Account_details LIKE \"%5%\""}
{"question": "Find the total number of scientists.", "query": "SELECT count(*) FROM scientists"}
{"question": "How many scientists are there?", "query": "SELECT count(*) FROM scientists"}
{"question": "Find the total hours of all projects.", "query": "SELECT sum(hours) FROM projects"}
{"question": "What is the total number of hours for all projects?", "query": "SELECT sum(hours) FROM projects"}
{"question": "How many different scientists are assigned to any project?", "query": "SELECT count(DISTINCT scientist) FROM assignedto"}
{"question": "Count the number of different scientists assigned to any project.", "query": "SELECT count(DISTINCT scientist) FROM assignedto"}
{"question": "Find the number of distinct projects.", "query": "SELECT count(DISTINCT name) FROM projects"}
{"question": "How many different projects are there?", "query": "SELECT count(DISTINCT name) FROM projects"}
{"question": "Find the average hours of all projects.", "query": "SELECT avg(hours) FROM projects"}
{"question": "What is the average hours across all projects?", "query": "SELECT avg(hours) FROM projects"}
{"question": "Find the name of project that continues for the longest time.", "query": "SELECT name FROM projects ORDER BY hours DESC LIMIT 1"}
{"question": "What is the name of the project with the most hours?", "query": "SELECT name FROM projects ORDER BY hours DESC LIMIT 1"}
{"question": "List the name of all projects that are operated longer than the average working hours of all projects.", "query": "SELECT name FROM projects WHERE hours  >  (SELECT avg(hours) FROM projects)"}
{"question": "What are the names of projects that have taken longer than the average number of hours for all projects?", "query": "SELECT name FROM projects WHERE hours  >  (SELECT avg(hours) FROM projects)"}
{"question": "Find the name and hours of project that has the most number of scientists.", "query": "SELECT T1.name ,  T1.hours FROM projects AS T1 JOIN assignedto AS T2 ON T1.code  =  T2.project GROUP BY T2.project ORDER BY count(*) DESC LIMIT 1"}
{"question": "What is the name and hours for the project which has the most scientists assigned to it?", "query": "SELECT T1.name ,  T1.hours FROM projects AS T1 JOIN assignedto AS T2 ON T1.code  =  T2.project GROUP BY T2.project ORDER BY count(*) DESC LIMIT 1"}
{"question": "Find the name of the project for which a scientist whose name contains ‘Smith’ is assigned to.", "query": "SELECT T2.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T3.name LIKE '%Smith%'"}
{"question": "What is the name of the project that has a scientist assigned to it whose name contains 'Smith'?", "query": "SELECT T2.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T3.name LIKE '%Smith%'"}
{"question": "Find the total hours of the projects that scientists named Michael Rogers or Carol Smith are assigned to.", "query": "SELECT sum(T2.hours) FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T3.name  =  'Michael Rogers' OR T3.name  =  'Carol Smith'"}
{"question": "What is the sum of hours for projects that scientists with the name Michael Rogers or Carol Smith are assigned to?", "query": "SELECT sum(T2.hours) FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T3.name  =  'Michael Rogers' OR T3.name  =  'Carol Smith'"}
{"question": "Find the name of projects that require between 100 and 300 hours of work.", "query": "SELECT name FROM projects WHERE hours BETWEEN 100 AND 300"}
{"question": "What are the names of projects that require between 100 and 300 hours?", "query": "SELECT name FROM projects WHERE hours BETWEEN 100 AND 300"}
{"question": "Find the name of the scientist who worked on both a project named 'Matter of Time' and a project named 'A Puzzling Parallax'.", "query": "SELECT T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T2.name  =  'Matter of Time' INTERSECT SELECT T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T2.name  =  'A Puzzling Parallax'"}
{"question": "What are the names of any scientists who worked on projects named 'Matter of Time' and 'A Puzzling Pattern'?", "query": "SELECT T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T2.name  =  'Matter of Time' INTERSECT SELECT T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T2.name  =  'A Puzzling Parallax'"}
{"question": "List the names of all scientists sorted in alphabetical order.", "query": "SELECT name FROM scientists ORDER BY name"}
{"question": "What are the names of all the scientists in alphabetical order?", "query": "SELECT name FROM scientists ORDER BY name"}
{"question": "Find the number of scientists involved for each project name.", "query": "SELECT count(*) ,  T1.name FROM projects AS T1 JOIN assignedto AS T2 ON T1.code  =  T2.project GROUP BY T1.name"}
{"question": "What are the naems of all the projects, and how many scientists were assigned to each of them?", "query": "SELECT count(*) ,  T1.name FROM projects AS T1 JOIN assignedto AS T2 ON T1.code  =  T2.project GROUP BY T1.name"}
{"question": "Find the number of scientists involved for the projects that require more than 300 hours.", "query": "SELECT count(*) ,  T1.name FROM projects AS T1 JOIN assignedto AS T2 ON T1.code  =  T2.project WHERE T1.hours  >  300 GROUP BY T1.name"}
{"question": "What are the names of projects that require more than 300 hours, and how many scientists are assigned to each?", "query": "SELECT count(*) ,  T1.name FROM projects AS T1 JOIN assignedto AS T2 ON T1.code  =  T2.project WHERE T1.hours  >  300 GROUP BY T1.name"}
{"question": "Find the number of projects which each scientist is working on and scientist's name.", "query": "SELECT count(*) ,  T1.name FROM scientists AS T1 JOIN assignedto AS T2 ON T1.ssn  =  T2.scientist GROUP BY T1.name"}
{"question": "What are the names of the scientists, and how many projects are each of them working on?", "query": "SELECT count(*) ,  T1.name FROM scientists AS T1 JOIN assignedto AS T2 ON T1.ssn  =  T2.scientist GROUP BY T1.name"}
{"question": "Find the SSN and name of scientists who are assigned to the project with the longest hours.", "query": "SELECT T3.ssn ,  T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T2.hours  =  (SELECT max(hours) FROM projects)"}
{"question": "What are the SSN and names of scientists working on the project with the most hours?", "query": "SELECT T3.ssn ,  T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T2.hours  =  (SELECT max(hours) FROM projects)"}
{"question": "Find the name of scientists who are assigned to some project.", "query": "SELECT T2.name FROM assignedto AS T1 JOIN scientists AS T2 ON T1.scientist  =  T2.ssn"}
{"question": "What are the names of scientists who are assigned to any project?", "query": "SELECT T2.name FROM assignedto AS T1 JOIN scientists AS T2 ON T1.scientist  =  T2.ssn"}
{"question": "Select the project names which are not assigned yet.", "query": "SELECT Name FROM Projects WHERE Code NOT IN (SELECT Project FROM AssignedTo)"}
{"question": "What are the names of projects that have not been assigned?", "query": "SELECT Name FROM Projects WHERE Code NOT IN (SELECT Project FROM AssignedTo)"}
{"question": "Find the name of scientists who are not assigned to any project.", "query": "SELECT Name FROM scientists WHERE ssn NOT IN (SELECT scientist FROM AssignedTo)"}
{"question": "What are the names of scientists who have not been assigned a project?", "query": "SELECT Name FROM scientists WHERE ssn NOT IN (SELECT scientist FROM AssignedTo)"}
{"question": "Find the number of scientists who are not assigned to any project.", "query": "SELECT count(*) FROM scientists WHERE ssn NOT IN (SELECT scientist FROM AssignedTo)"}
{"question": "How many scientists do not have any projects assigned to them?", "query": "SELECT count(*) FROM scientists WHERE ssn NOT IN (SELECT scientist FROM AssignedTo)"}
{"question": "Find the names of scientists who are not working on the project with the highest hours.", "query": "SELECT name FROM scientists EXCEPT SELECT T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T2.hours  =  (SELECT max(hours) FROM projects)"}
{"question": "What are the names of scientists who are not working on the project with the most hours?", "query": "SELECT name FROM scientists EXCEPT SELECT T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T2.hours  =  (SELECT max(hours) FROM projects)"}
{"question": "List all the scientists' names, their projects' names, and the hours worked by that scientist on each project, in alphabetical order of project name, and then scientist name.", "query": "SELECT T1.Name ,  T3.Name ,  T3.Hours FROM Scientists AS T1 JOIN AssignedTo AS T2 ON T1.SSN = T2.Scientist JOIN Projects AS T3 ON T2.Project = T3.Code ORDER BY T3.Name ,  T1.Name"}
{"question": "What are the names of each scientist, the names of the projects that they work on, and the hours for each of those projects, listed in alphabetical order by project name, then scientist name.", "query": "SELECT T1.Name ,  T3.Name ,  T3.Hours FROM Scientists AS T1 JOIN AssignedTo AS T2 ON T1.SSN = T2.Scientist JOIN Projects AS T3 ON T2.Project = T3.Code ORDER BY T3.Name ,  T1.Name"}
{"question": "Find name of the project that needs the least amount of time to finish and the name of scientists who worked on it.", "query": "SELECT T2.name ,  T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T2.hours  =  (SELECT min(hours) FROM projects)"}
{"question": "What is the name of the project that requires the fewest number of hours, and the names of the scientists assigned to it?", "query": "SELECT T2.name ,  T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T2.hours  =  (SELECT min(hours) FROM projects)"}
{"question": "What is the name of the highest rated wine?", "query": "SELECT Name FROM WINE ORDER BY Score LIMIT 1"}
{"question": "Give the name of the wine with the highest score.", "query": "SELECT Name FROM WINE ORDER BY Score LIMIT 1"}
{"question": "Which winery is the wine that has the highest score from?", "query": "SELECT Winery FROM WINE ORDER BY SCORE LIMIT 1"}
{"question": "What is the winery at which the wine with the highest score was made?", "query": "SELECT Winery FROM WINE ORDER BY SCORE LIMIT 1"}
{"question": "Find the names of all wines produced in 2008.", "query": "SELECT Name FROM WINE WHERE YEAR  =  \"2008\""}
{"question": "What are the names of all wines produced in 2008?", "query": "SELECT Name FROM WINE WHERE YEAR  =  \"2008\""}
{"question": "List the grapes and appelations of all wines.", "query": "SELECT Grape ,  Appelation FROM WINE"}
{"question": "What are the grapes and appelations of each wine?", "query": "SELECT Grape ,  Appelation FROM WINE"}
{"question": "List the names and scores of all wines.", "query": "SELECT Name ,  Score FROM WINE"}
{"question": "What are the names and scores of all wines?", "query": "SELECT Name ,  Score FROM WINE"}
{"question": "List the area and county of all appelations.", "query": "SELECT Area ,  County FROM APPELLATIONS"}
{"question": "What are the areas and counties for all appelations?", "query": "SELECT Area ,  County FROM APPELLATIONS"}
{"question": "What are the prices of wines produced before the year of 2010?", "query": "SELECT Price FROM WINE WHERE YEAR  <  2010"}
{"question": "Return the prices of wines produced before 2010.", "query": "SELECT Price FROM WINE WHERE YEAR  <  2010"}
{"question": "List the names of all distinct wines that have scores higher than 90.", "query": "SELECT Name FROM WINE WHERE score  >  90"}
{"question": "What are the names of wines with scores higher than 90?", "query": "SELECT Name FROM WINE WHERE score  >  90"}
{"question": "List the names of all distinct wines that are made of red color grape.", "query": "SELECT DISTINCT T2.Name FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Color  =  \"Red\""}
{"question": "What are the names of wines made from red grapes?", "query": "SELECT DISTINCT T2.Name FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Color  =  \"Red\""}
{"question": "Find the names of all distinct wines that have appellations in North Coast area.", "query": "SELECT DISTINCT T2.Name FROM APPELLATIONs AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.Area  =  \"North Coast\""}
{"question": "What are the distinct names of wines that have appellations in the North Coast area?", "query": "SELECT DISTINCT T2.Name FROM APPELLATIONs AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.Area  =  \"North Coast\""}
{"question": "How many wines are produced at Robert Biale winery?", "query": "SELECT count(*) FROM WINE WHERE Winery  =  \"Robert Biale\""}
{"question": "Count the number of wines produced at Robert Biale winery.", "query": "SELECT count(*) FROM WINE WHERE Winery  =  \"Robert Biale\""}
{"question": "How many appelations are in Napa Country?", "query": "SELECT count(*) FROM APPELLATIONS WHERE County  =  \"Napa\""}
{"question": "Count the number of appelations in Napa County.", "query": "SELECT count(*) FROM APPELLATIONS WHERE County  =  \"Napa\""}
{"question": "Give me the average prices of wines that are produced by appelations in Sonoma County.", "query": "SELECT AVG(T2.Price) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.County  =  \"Sonoma\""}
{"question": "What is the average price of wines produced in appelations in Sonoma County?", "query": "SELECT AVG(T2.Price) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.County  =  \"Sonoma\""}
{"question": "What are the names and scores of wines that are made of white color grapes?", "query": "SELECT T2.Name ,   T2.Score FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Color  =  \"White\""}
{"question": "Give the names and scores of wines made from white grapes.", "query": "SELECT T2.Name ,   T2.Score FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Color  =  \"White\""}
{"question": "Find the maximum price of wins from the appelations in Central Coast area and produced before the year of 2005.", "query": "SELECT max(T2.Price) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.Area  =  \"Central Coast\" AND T2.year  <  2005"}
{"question": "What is the maximum price of wines from the appelation in the Central Coast area, which was produced before 2005?", "query": "SELECT max(T2.Price) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.Area  =  \"Central Coast\" AND T2.year  <  2005"}
{"question": "Find the the grape whose white color grapes are used to produce wines with scores higher than 90.", "query": "SELECT DISTINCT T1.Grape FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Color  =  \"White\" AND T2.score  >  90"}
{"question": "Find the white grape used to produce wines with scores above 90.", "query": "SELECT DISTINCT T1.Grape FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Color  =  \"White\" AND T2.score  >  90"}
{"question": "What are the wines that have prices higher than 50 and made of Red color grapes?", "query": "SELECT T2.Name FROM Grapes AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Color  =  \"Red\" AND T2.price  >  50"}
{"question": "What are the names of wines made from red grapes and with prices above 50?", "query": "SELECT T2.Name FROM Grapes AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Color  =  \"Red\" AND T2.price  >  50"}
{"question": "What are the wines that have prices lower than 50 and have appelations in Monterey county?", "query": "SELECT T2.Name FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.County  =  \"Monterey\" AND T2.price  <  50"}
{"question": "Give the neames of wines with prices below 50 and with appelations in Monterey county.", "query": "SELECT T2.Name FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.County  =  \"Monterey\" AND T2.price  <  50"}
{"question": "What are the numbers of wines for different grapes?", "query": "SELECT count(*) ,  Grape FROM WINE GROUP BY Grape"}
{"question": "How many wines are there for each grape?", "query": "SELECT count(*) ,  Grape FROM WINE GROUP BY Grape"}
{"question": "What are the average prices of wines for different years?", "query": "SELECT avg(Price) ,  YEAR FROM WINE GROUP BY YEAR"}
{"question": "What is the average prices of wines for each each?", "query": "SELECT avg(Price) ,  YEAR FROM WINE GROUP BY YEAR"}
{"question": "Find the distinct names of all wines that have prices higher than some wines from John Anthony winery.", "query": "SELECT DISTINCT Name FROM WINE WHERE Price  >  (SELECT min(Price) FROM wine WHERE Winery  =  \"John Anthony\")"}
{"question": "What are the distinct names of wines with prices higher than any wine from John Anthony winery.", "query": "SELECT DISTINCT Name FROM WINE WHERE Price  >  (SELECT min(Price) FROM wine WHERE Winery  =  \"John Anthony\")"}
{"question": "List the names of all distinct wines in alphabetical order.", "query": "SELECT DISTINCT Name FROM WINE ORDER BY Name"}
{"question": "What are the names of wines, sorted in alphabetical order?", "query": "SELECT DISTINCT Name FROM WINE ORDER BY Name"}
{"question": "List the names of all distinct wines ordered by price.", "query": "SELECT DISTINCT Name FROM WINE ORDER BY price"}
{"question": "What are the names of wines, sorted by price ascending?", "query": "SELECT DISTINCT Name FROM WINE ORDER BY price"}
{"question": "What is the area of the appelation that produces the highest number of wines before the year of 2010?", "query": "SELECT T1.Area FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation GROUP BY T2.Appelation HAVING T2.year  <  2010 ORDER BY count(*) DESC LIMIT 1"}
{"question": "What is the area for the appelation which produced the most wines prior to 2010?", "query": "SELECT T1.Area FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation GROUP BY T2.Appelation HAVING T2.year  <  2010 ORDER BY count(*) DESC LIMIT 1"}
{"question": "What is the color of the grape whose wine products has the highest average price?", "query": "SELECT T1.Color FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape GROUP BY T2.Grape ORDER BY AVG(Price) DESC LIMIT 1"}
{"question": "Give the color of the grape whose wine products have the highest average price?", "query": "SELECT T1.Color FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape GROUP BY T2.Grape ORDER BY AVG(Price) DESC LIMIT 1"}
{"question": "Find the distinct names of wines produced before the year of 2000 or after the year of 2010.", "query": "SELECT DISTINCT Name FROM WINE WHERE YEAR  <  2000 OR YEAR  >  2010"}
{"question": "Give the distinct names of wines made before 2000 or after 2010.", "query": "SELECT DISTINCT Name FROM WINE WHERE YEAR  <  2000 OR YEAR  >  2010"}
{"question": "Find the distinct winery of wines having price between 50 and 100.", "query": "SELECT DISTINCT Winery FROM WINE WHERE Price BETWEEN 50 AND 100"}
{"question": "What are the distinct wineries which produce wines costing between 50 and 100?", "query": "SELECT DISTINCT Winery FROM WINE WHERE Price BETWEEN 50 AND 100"}
{"question": "What are the average prices and cases of wines produced in the year of 2009 and made of Zinfandel grape?", "query": "SELECT AVG(Price) ,  AVG(Cases) FROM WINE WHERE YEAR  =  2009 AND Grape  =  \"Zinfandel\""}
{"question": "Give the average price and case of wines made from Zinfandel grapes in the year 2009.", "query": "SELECT AVG(Price) ,  AVG(Cases) FROM WINE WHERE YEAR  =  2009 AND Grape  =  \"Zinfandel\""}
{"question": "What are the maximum price and score of wines produced by St. Helena appelation?", "query": "SELECT max(Price) ,  max(Score) FROM WINE WHERE Appelation  =  \"St. Helena\""}
{"question": "Give the maximum price and score for wines produced in the appelation St. Helena.", "query": "SELECT max(Price) ,  max(Score) FROM WINE WHERE Appelation  =  \"St. Helena\""}
{"question": "What are the maximum price and score of wines in each year?", "query": "SELECT max(Price) ,  max(Score) ,  YEAR FROM WINE GROUP BY YEAR"}
{"question": "What are the maximum price and score of wines for each year?", "query": "SELECT max(Price) ,  max(Score) ,  YEAR FROM WINE GROUP BY YEAR"}
{"question": "What are the average price and score of wines grouped by appelation?", "query": "SELECT avg(Price) ,  avg(Score) ,  Appelation FROM WINE GROUP BY Appelation"}
{"question": "What are the average price and score of wines for each appelation?", "query": "SELECT avg(Price) ,  avg(Score) ,  Appelation FROM WINE GROUP BY Appelation"}
{"question": "Find the wineries that have at least four wines.", "query": "SELECT Winery FROM WINE GROUP BY Winery HAVING count(*)  >=  4"}
{"question": "Which wineries produce at least four wines?", "query": "SELECT Winery FROM WINE GROUP BY Winery HAVING count(*)  >=  4"}
{"question": "Find the country of all appelations who have at most three wines.", "query": "SELECT T1.County FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation GROUP BY T2.Appelation HAVING count(*)  <=  3"}
{"question": "What are the countries for appelations with at most 3 wines?", "query": "SELECT T1.County FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation GROUP BY T2.Appelation HAVING count(*)  <=  3"}
{"question": "What are the names of wines whose production year are before the year of all wines by Brander winery?", "query": "SELECT Name FROM WINE WHERE YEAR  <  (SELECT min(YEAR) FROM WINE WHERE Winery  =  \"Brander\")"}
{"question": "What are the names of wines produced before any wine from the Brander winery?", "query": "SELECT Name FROM WINE WHERE YEAR  <  (SELECT min(YEAR) FROM WINE WHERE Winery  =  \"Brander\")"}
{"question": "What are the names of wines that are more expensive then all wines made in the year 2006?", "query": "SELECT Name FROM WINE WHERE Price  >  (SELECT max(Price) FROM WINE WHERE YEAR  =  2006)"}
{"question": "Give the names of wines with prices above any wine produced in 2006.", "query": "SELECT Name FROM WINE WHERE Price  >  (SELECT max(Price) FROM WINE WHERE YEAR  =  2006)"}
{"question": "Find the top 3 wineries with the greatest number of wines made of white color grapes.", "query": "SELECT T2.Winery FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.GRAPE  =  T2.GRAPE WHERE T1.Color  =  \"White\" GROUP BY T2.Winery ORDER BY count(*) DESC LIMIT 3"}
{"question": "Which 3 wineries produce the most wines made from white grapes?", "query": "SELECT T2.Winery FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.GRAPE  =  T2.GRAPE WHERE T1.Color  =  \"White\" GROUP BY T2.Winery ORDER BY count(*) DESC LIMIT 3"}
{"question": "List the grape, winery and year of the wines whose price is bigger than 100 ordered by year.", "query": "SELECT Grape ,  Winery ,  YEAR FROM WINE WHERE Price  >   100 ORDER BY YEAR"}
{"question": "What are the grapes, wineries and years for wines with price higher than 100, sorted by year?", "query": "SELECT Grape ,  Winery ,  YEAR FROM WINE WHERE Price  >   100 ORDER BY YEAR"}
{"question": "List the grape, appelation and name of wines whose score is higher than 93 ordered by Name.", "query": "SELECT Grape ,  Appelation ,  Name FROM WINE WHERE Score  >  93 ORDER BY Name"}
{"question": "What are the grapes, appelations, and wines with scores above 93, sorted by Name?", "query": "SELECT Grape ,  Appelation ,  Name FROM WINE WHERE Score  >  93 ORDER BY Name"}
{"question": "Find the appelations that produce wines after the year of 2008 but not in Central Coast area.", "query": "SELECT Appelation FROM WINE WHERE YEAR  >  2008 EXCEPT SELECT Appelation FROM APPELLATIONS WHERE Area  =  \"Central Coast\""}
{"question": "What are the appelations for wines produced after 2008 but not in the Central Coast area?", "query": "SELECT Appelation FROM WINE WHERE YEAR  >  2008 EXCEPT SELECT Appelation FROM APPELLATIONS WHERE Area  =  \"Central Coast\""}
{"question": "Find the average price of wines that are not produced from Sonoma county.", "query": "SELECT avg(price) FROM wine WHERE Appelation NOT IN (SELECT T1.Appelation FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.County  =  'Sonoma')"}
{"question": "What is the average price for wines not produced in Sonoma county?", "query": "SELECT avg(price) FROM wine WHERE Appelation NOT IN (SELECT T1.Appelation FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.County  =  'Sonoma')"}
{"question": "Find the county where produces the most number of wines with score higher than 90.", "query": "SELECT T1.County FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T2.Score  >  90 GROUP BY T1.County ORDER BY count(*) DESC LIMIT 1"}
{"question": "What is the county that produces the most wines scoring higher than 90?", "query": "SELECT T1.County FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T2.Score  >  90 GROUP BY T1.County ORDER BY count(*) DESC LIMIT 1"}
{"question": "How many train stations are there?", "query": "SELECT count(*) FROM station"}
{"question": "Show the name, location, and number of platforms for all stations.", "query": "SELECT name ,  LOCATION ,  number_of_platforms FROM station"}
{"question": "What are all locations of train stations?", "query": "SELECT DISTINCT LOCATION FROM station"}
{"question": "Show the names and total passengers for all train stations not in London.", "query": "SELECT name ,  total_passengers FROM station WHERE LOCATION != 'London'"}
{"question": "Show the names and main services for train stations that have the top three total number of passengers.", "query": "SELECT name ,  main_services FROM station ORDER BY total_passengers DESC LIMIT 3"}
{"question": "What is the average and maximum number of total passengers for train stations in London or Glasgow?", "query": "SELECT avg(total_passengers) ,  max(total_passengers) FROM station WHERE LOCATION  =  'London' OR LOCATION  =  'Glasgow'"}
{"question": "Show all locations and the total number of platforms and passengers for all train stations in each location.", "query": "SELECT LOCATION ,  sum(number_of_platforms) ,  sum(total_passengers) FROM station GROUP BY LOCATION"}
{"question": "Show all locations that have train stations with at least 15 platforms and train stations with more than 25 total passengers.", "query": "SELECT DISTINCT LOCATION FROM station WHERE number_of_platforms  >=  15 AND total_passengers  >  25"}
{"question": "Show all locations which don't have a train station with at least 15 platforms.", "query": "SELECT LOCATION FROM station EXCEPT SELECT LOCATION FROM station WHERE number_of_platforms  >=  15"}
{"question": "Show the location with most number of train stations.", "query": "SELECT LOCATION FROM station GROUP BY LOCATION ORDER BY count(*) DESC LIMIT 1"}
{"question": "Show the name, time, and service for all trains.", "query": "SELECT name ,  TIME ,  service FROM train"}
{"question": "Show the number of trains", "query": "SELECT count(*) FROM train"}
{"question": "Show the name and service for all trains in order by time.", "query": "SELECT name ,  service FROM train ORDER BY TIME"}
{"question": "Show the station name and number of trains in each station.", "query": "SELECT T2.name ,  count(*) FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id GROUP BY T1.station_id"}
{"question": "show the train name and station name for each train.", "query": "SELECT T2.name ,  T3.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id JOIN train AS T3 ON T3.train_id  =  T1.train_id"}
{"question": "Show all train names and times in stations in London in descending order by train time.", "query": "SELECT T3.name ,  T3.time FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id JOIN train AS T3 ON T3.train_id  =  T1.train_id WHERE T2.location  =  'London' ORDER BY T3.time DESC"}
{"question": "Show the station name with greatest number of trains.", "query": "SELECT T2.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id GROUP BY T1.station_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "Show the station name with at least two trains.", "query": "SELECT T2.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id GROUP BY T1.station_id HAVING count(*)  >=  2"}
{"question": "Show all locations with only 1 station.", "query": "SELECT LOCATION FROM station GROUP BY LOCATION HAVING count(*)  =  1"}
{"question": "Show station names without any trains.", "query": "SELECT name FROM station WHERE station_id NOT IN (SELECT station_id FROM train_station)"}
{"question": "What are the names of the stations which serve both \"Ananthapuri Express\" and \"Guruvayur Express\" trains?", "query": "SELECT T2.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id JOIN train AS T3 ON T3.train_id  =  T1.train_id WHERE T3.Name  =  \"Ananthapuri Express\" INTERSECT SELECT T2.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id JOIN train AS T3 ON T3.train_id  =  T1.train_id WHERE T3.Name  =  \"Guruvayur Express\""}
{"question": "Find the names of the trains that do not pass any station located in London.", "query": "SELECT T2.name FROM train_station AS T1 JOIN train AS T2 ON T1.train_id  =  T2.train_id WHERE T1.station_id NOT IN (SELECT T4.station_id FROM train_station AS T3 JOIN station AS T4 ON T3.station_id  =  T4.station_id WHERE t4.location  =  \"London\")"}
{"question": "List the names and locations of all stations ordered by their yearly entry exit and interchange amounts.", "query": "SELECT name ,  LOCATION FROM station ORDER BY Annual_entry_exit ,  Annual_interchanges"}
{"question": "List all vehicle id", "query": "SELECT vehicle_id FROM Vehicles;"}
{"question": "What are the ids of all vehicles?", "query": "SELECT vehicle_id FROM Vehicles;"}
{"question": "How many vehicle in total?", "query": "SELECT count(*) FROM Vehicles;"}
{"question": "How many vehicles exist?", "query": "SELECT count(*) FROM Vehicles;"}
{"question": "Show the detail of vehicle with id 1.", "query": "SELECT vehicle_details FROM Vehicles WHERE vehicle_id = 1;"}
{"question": "What are the details of the car with id 1?", "query": "SELECT vehicle_details FROM Vehicles WHERE vehicle_id = 1;"}
{"question": "List the first name middle name and last name of all staff.", "query": "SELECT first_name ,  middle_name ,  last_name FROM Staff;"}
{"question": "What are the first, middle, and last names of all staff?", "query": "SELECT first_name ,  middle_name ,  last_name FROM Staff;"}
{"question": "What is the birthday of the staff member with first name as Janessa and last name as Sawayn?", "query": "SELECT date_of_birth FROM Staff WHERE first_name = \"Janessa\" AND last_name = \"Sawayn\";"}
{"question": "What is the date of birth for the staff member named Janessa Sawayn?", "query": "SELECT date_of_birth FROM Staff WHERE first_name = \"Janessa\" AND last_name = \"Sawayn\";"}
{"question": "When did the staff member with first name as Janessa and last name as Sawayn join the company?", "query": "SELECT date_joined_staff FROM Staff WHERE first_name = \"Janessa\" AND last_name = \"Sawayn\";"}
{"question": "When did the staff member named Janessa Sawayn join the company?", "query": "SELECT date_joined_staff FROM Staff WHERE first_name = \"Janessa\" AND last_name = \"Sawayn\";"}
{"question": "When did the staff member with first name as Janessa and last name as Sawayn leave the company?", "query": "SELECT date_left_staff FROM Staff WHERE first_name = \"Janessa\" AND last_name = \"Sawayn\";"}
{"question": "When did the staff member Janessa Sawayn leave the company?", "query": "SELECT date_left_staff FROM Staff WHERE first_name = \"Janessa\" AND last_name = \"Sawayn\";"}
{"question": "How many staff have the first name Ludie?", "query": "SELECT count(*) FROM Staff WHERE first_name = \"Ludie\";"}
{"question": "How many employees have a first name of Ludie?", "query": "SELECT count(*) FROM Staff WHERE first_name = \"Ludie\";"}
{"question": "What is the nickname of staff with first name as Janessa and last name as Sawayn?", "query": "SELECT nickname FROM Staff WHERE first_name = \"Janessa\" AND last_name = \"Sawayn\";"}
{"question": "What is the nickname of the employee named Janessa Sawayn?", "query": "SELECT nickname FROM Staff WHERE first_name = \"Janessa\" AND last_name = \"Sawayn\";"}
{"question": "How many staff in total?", "query": "SELECT count(*) FROM Staff;"}
{"question": "How many employees are there?", "query": "SELECT count(*) FROM Staff;"}
{"question": "Which city does staff with first name as Janessa and last name as Sawayn live?", "query": "SELECT T1.city FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T2.first_name = \"Janessa\" AND T2.last_name = \"Sawayn\";"}
{"question": "In what city does Janessa Sawayn live?", "query": "SELECT T1.city FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T2.first_name = \"Janessa\" AND T2.last_name = \"Sawayn\";"}
{"question": "Which country and state does staff with first name as Janessa and last name as Sawayn lived?", "query": "SELECT T1.country ,  T1.state_province_county FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T2.first_name = \"Janessa\" AND T2.last_name = \"Sawayn\";"}
{"question": "In which country and state does Janessa Sawayn live?", "query": "SELECT T1.country ,  T1.state_province_county FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T2.first_name = \"Janessa\" AND T2.last_name = \"Sawayn\";"}
{"question": "How long is the total lesson time took by customer with first name as Rylan and last name as Goodwin?", "query": "SELECT sum(T1.lesson_time) FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id  = T2.customer_id WHERE T2.first_name = \"Rylan\" AND T2.last_name = \"Goodwin\";"}
{"question": "How long is the total lesson time took by the customer named Rylan Goodwin?", "query": "SELECT sum(T1.lesson_time) FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id  = T2.customer_id WHERE T2.first_name = \"Rylan\" AND T2.last_name = \"Goodwin\";"}
{"question": "What is the zip code of staff with first name as Janessa and last name as Sawayn lived?", "query": "SELECT T1.zip_postcode FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T2.first_name = \"Janessa\" AND T2.last_name = \"Sawayn\";"}
{"question": "What is the zip code of the hosue of the employee named Janessa Sawayn?", "query": "SELECT T1.zip_postcode FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T2.first_name = \"Janessa\" AND T2.last_name = \"Sawayn\";"}
{"question": "How many staff live in state Georgia?", "query": "SELECT count(*) FROM Addresses WHERE state_province_county = \"Georgia\";"}
{"question": "How many employees live in Georgia?", "query": "SELECT count(*) FROM Addresses WHERE state_province_county = \"Georgia\";"}
{"question": "Find out the first name and last name of staff lived in city Damianfort.", "query": "SELECT T2.first_name ,  T2.last_name FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T1.city = \"Damianfort\";"}
{"question": "What is the first and last name of all employees who live in the city Damianfort?", "query": "SELECT T2.first_name ,  T2.last_name FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T1.city = \"Damianfort\";"}
{"question": "Which city lives most of staffs? List the city name and number of staffs.", "query": "SELECT T1.city ,  count(*) FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id GROUP BY T1.city ORDER BY count(*) DESC LIMIT 1;"}
{"question": "In which city do the most employees live and how many of them live there?", "query": "SELECT T1.city ,  count(*) FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id GROUP BY T1.city ORDER BY count(*) DESC LIMIT 1;"}
{"question": "List the states which have between 2 to 4 staffs living there.", "query": "SELECT T1.state_province_county FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id GROUP BY T1.state_province_county HAVING count(*) BETWEEN 2 AND 4;"}
{"question": "What are the names of the states that have 2 to 4 employees living there?", "query": "SELECT T1.state_province_county FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id GROUP BY T1.state_province_county HAVING count(*) BETWEEN 2 AND 4;"}
{"question": "List the first name and last name of all customers.", "query": "SELECT first_name ,  last_name FROM Customers;"}
{"question": "What are the first and last names for all customers?", "query": "SELECT first_name ,  last_name FROM Customers;"}
{"question": "List email address and birthday of customer whose first name as Carole.", "query": "SELECT email_address ,  date_of_birth FROM Customers WHERE first_name = \"Carole\""}
{"question": "What are the email addresses and date of births for all customers who have a first name of Carole?", "query": "SELECT email_address ,  date_of_birth FROM Customers WHERE first_name = \"Carole\""}
{"question": "List phone number and email address of customer with more than 2000 outstanding balance.", "query": "SELECT phone_number ,  email_address FROM Customers WHERE amount_outstanding  >  2000;"}
{"question": "What are the phone numbers and email addresses of all customers who have an outstanding balance of more than 2000?", "query": "SELECT phone_number ,  email_address FROM Customers WHERE amount_outstanding  >  2000;"}
{"question": "What is the status code, mobile phone number and email address of customer with last name as Kohler or first name as Marina?", "query": "SELECT customer_status_code ,  cell_mobile_phone_number ,  email_address FROM Customers WHERE first_name = \"Marina\" OR last_name  =  \"Kohler\""}
{"question": "What is the status code, phone number, and email address of the customer whose last name is Kohler or whose first name is Marina?", "query": "SELECT customer_status_code ,  cell_mobile_phone_number ,  email_address FROM Customers WHERE first_name = \"Marina\" OR last_name  =  \"Kohler\""}
{"question": "When are the birthdays of customer who are classified as 'Good Customer' status?", "query": "SELECT date_of_birth FROM Customers WHERE customer_status_code  =  'Good Customer'"}
{"question": "What is the date of birth of every customer whose status code is 'Good Customer'?", "query": "SELECT date_of_birth FROM Customers WHERE customer_status_code  =  'Good Customer'"}
{"question": "When did customer with first name as Carole and last name as Bernhard became a customer?", "query": "SELECT date_became_customer FROM Customers WHERE first_name = \"Carole\" AND last_name = \"Bernhard\";"}
{"question": "When did Carole Bernhard first become a customer?", "query": "SELECT date_became_customer FROM Customers WHERE first_name = \"Carole\" AND last_name = \"Bernhard\";"}
{"question": "How many customers in total?", "query": "SELECT count(*) FROM Customers;"}
{"question": "List all customer status codes and the number of customers having each status code.", "query": "SELECT customer_status_code , count(*) FROM Customers GROUP BY customer_status_code;"}
{"question": "For each customer status code, how many customers are classified that way?", "query": "SELECT customer_status_code , count(*) FROM Customers GROUP BY customer_status_code;"}
{"question": "Which customer status code has least number of customers?", "query": "SELECT customer_status_code FROM Customers GROUP BY customer_status_code ORDER BY count(*) ASC LIMIT 1;"}
{"question": "What is the status code with the least number of customers?", "query": "SELECT customer_status_code FROM Customers GROUP BY customer_status_code ORDER BY count(*) ASC LIMIT 1;"}
{"question": "How many lessons taken by customer with first name as Rylan and last name as Goodwin were completed?", "query": "SELECT count(*) FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id  = T2.customer_id WHERE T2.first_name = \"Rylan\" AND T2.last_name = \"Goodwin\" AND T1.lesson_status_code = \"Completed\";"}
{"question": "How many lessons did the customer Ryan Goodwin complete?", "query": "SELECT count(*) FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id  = T2.customer_id WHERE T2.first_name = \"Rylan\" AND T2.last_name = \"Goodwin\" AND T1.lesson_status_code = \"Completed\";"}
{"question": "What is maximum, minimum and average amount of outstanding of customer?", "query": "SELECT max(amount_outstanding) ,  min(amount_outstanding) ,  avg(amount_outstanding) FROM Customers;"}
{"question": "What is the maximum, minimum, and average amount of money outsanding for all customers?", "query": "SELECT max(amount_outstanding) ,  min(amount_outstanding) ,  avg(amount_outstanding) FROM Customers;"}
{"question": "List the first name and last name of customers have the amount of outstanding between 1000 and 3000.", "query": "SELECT first_name ,  last_name FROM Customers WHERE amount_outstanding BETWEEN 1000 AND 3000;"}
{"question": "What are the first and last names of all customers with between 1000 and 3000 dollars outstanding?", "query": "SELECT first_name ,  last_name FROM Customers WHERE amount_outstanding BETWEEN 1000 AND 3000;"}
{"question": "List first name and last name of customers lived in city Lockmanfurt.", "query": "SELECT T1.first_name ,  T1.last_name FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id WHERE T2.city = \"Lockmanfurt\";"}
{"question": "What are the first and last names of all customers who lived in Lockmanfurt?", "query": "SELECT T1.first_name ,  T1.last_name FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id WHERE T2.city = \"Lockmanfurt\";"}
{"question": "Which country does customer with first name as Carole and last name as Bernhard lived in?", "query": "SELECT T2.country FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id WHERE T1.first_name = \"Carole\" AND T1.last_name = \"Bernhard\""}
{"question": "What is the country in which the customer Carole Bernhard lived?", "query": "SELECT T2.country FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id WHERE T1.first_name = \"Carole\" AND T1.last_name = \"Bernhard\""}
{"question": "What is zip code of customer with first name as Carole and last name as Bernhard?", "query": "SELECT T2.zip_postcode FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id WHERE T1.first_name = \"Carole\" AND T1.last_name = \"Bernhard\""}
{"question": "What is the zip code of the customer Carole Bernhard?", "query": "SELECT T2.zip_postcode FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id WHERE T1.first_name = \"Carole\" AND T1.last_name = \"Bernhard\""}
{"question": "Which city does has most number of customers?", "query": "SELECT T2.city FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id GROUP BY T2.city ORDER BY count(*) DESC LIMIT 1;"}
{"question": "What is the city with the most customers?", "query": "SELECT T2.city FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id GROUP BY T2.city ORDER BY count(*) DESC LIMIT 1;"}
{"question": "How much in total does customer with first name as Carole and last name as Bernhard paid?", "query": "SELECT sum(T1.amount_payment) FROM Customer_Payments AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.first_name = \"Carole\" AND T2.last_name = \"Bernhard\""}
{"question": "What is the total amount of moeny paid by the customer Carole Bernhard?", "query": "SELECT sum(T1.amount_payment) FROM Customer_Payments AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.first_name = \"Carole\" AND T2.last_name = \"Bernhard\""}
{"question": "List the number of customers that did not have any payment history.", "query": "SELECT count(*) FROM Customers WHERE customer_id NOT IN ( SELECT customer_id FROM Customer_Payments );"}
{"question": "How many customers have no payment histories?", "query": "SELECT count(*) FROM Customers WHERE customer_id NOT IN ( SELECT customer_id FROM Customer_Payments );"}
{"question": "List first name and last name of customers that have more than 2 payments.", "query": "SELECT T2.first_name ,  T2.last_name FROM Customer_Payments AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >  2;"}
{"question": "What are the first and last names of all customers with more than 2 payments?", "query": "SELECT T2.first_name ,  T2.last_name FROM Customer_Payments AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >  2;"}
{"question": "List all payment methods and number of payments using each payment methods.", "query": "SELECT payment_method_code ,  count(*) FROM Customer_Payments GROUP BY payment_method_code;"}
{"question": "For each payment method, how many payments were made?", "query": "SELECT payment_method_code ,  count(*) FROM Customer_Payments GROUP BY payment_method_code;"}
{"question": "How many lessons were in cancelled state?", "query": "SELECT count(*) FROM Lessons WHERE lesson_status_code = \"Cancelled\";"}
{"question": "How many lessons have been cancelled?", "query": "SELECT count(*) FROM Lessons WHERE lesson_status_code = \"Cancelled\";"}
{"question": "List lesson id of all lessons taught by staff with first name as Janessa, last name as Sawayn and nickname containing letter 's'.", "query": "SELECT T1.lesson_id FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = \"Janessa\" AND T2.last_name = \"Sawayn\" AND nickname LIKE \"%s%\";"}
{"question": "What are the the lesson ids of all staff taught by Janessa Sawayn whose nickname has the letter s?", "query": "SELECT T1.lesson_id FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = \"Janessa\" AND T2.last_name = \"Sawayn\" AND nickname LIKE \"%s%\";"}
{"question": "How many lessons taught by staff whose first name has letter 'a' in it?", "query": "SELECT count(*) FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name LIKE \"%a%\""}
{"question": "How many lessons were taught by a staff member whose first name has the letter 'a' in it?", "query": "SELECT count(*) FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name LIKE \"%a%\""}
{"question": "How long is the total lesson time taught by staff with first name as Janessa and last name as Sawayn?", "query": "SELECT sum(lesson_time) FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = \"Janessa\" AND T2.last_name = \"Sawayn\";"}
{"question": "What is the total time for all lessons taught by Janessa Sawayn?", "query": "SELECT sum(lesson_time) FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = \"Janessa\" AND T2.last_name = \"Sawayn\";"}
{"question": "What is average lesson price taught by staff with first name as Janessa and last name as Sawayn?", "query": "SELECT avg(price) FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = \"Janessa\" AND T2.last_name = \"Sawayn\";"}
{"question": "What is the average price for a lesson taught by Janessa Sawayn?", "query": "SELECT avg(price) FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = \"Janessa\" AND T2.last_name = \"Sawayn\";"}
{"question": "How many lesson does customer with first name Ray took?", "query": "SELECT count(*) FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id  = T2.customer_id WHERE T2.first_name = \"Ray\""}
{"question": "How many lessons did the customer with the first name Ray take?", "query": "SELECT count(*) FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id  = T2.customer_id WHERE T2.first_name = \"Ray\""}
{"question": "Which last names are both used by customers and by staff?", "query": "SELECT last_name FROM Customers INTERSECT SELECT last_name FROM Staff"}
{"question": "What are the last names that are used by customers and staff?", "query": "SELECT last_name FROM Customers INTERSECT SELECT last_name FROM Staff"}
{"question": "What is the first name of the staff who did not give any lesson?", "query": "SELECT first_name FROM Staff EXCEPT SELECT T2.first_name FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id  =  T2.staff_id"}
{"question": "What is the first name of all employees who do not give any lessons?", "query": "SELECT first_name FROM Staff EXCEPT SELECT T2.first_name FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id  =  T2.staff_id"}
{"question": "What is the id and detail of the vehicle used in lessons for most of the times?", "query": "SELECT T1.vehicle_id ,  T1.vehicle_details FROM Vehicles AS T1 JOIN Lessons AS T2 ON T1.vehicle_id  =  T2.vehicle_id GROUP BY T1.vehicle_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "How many faculty do we have?", "query": "SELECT count(*) FROM Faculty"}
{"question": "What is the total number of faculty members?", "query": "SELECT count(*) FROM Faculty"}
{"question": "What ranks do we have for faculty?", "query": "SELECT DISTINCT rank FROM Faculty"}
{"question": "Find the list of distinct ranks for faculty.", "query": "SELECT DISTINCT rank FROM Faculty"}
{"question": "Show all the distinct buildings that have faculty rooms.", "query": "SELECT DISTINCT building FROM Faculty"}
{"question": "What buildings have faculty offices?", "query": "SELECT DISTINCT building FROM Faculty"}
{"question": "Show the rank, first name, and last name for all the faculty.", "query": "SELECT rank ,  Fname ,  Lname FROM Faculty"}
{"question": "What are the rank, first name, and last name of the faculty members?", "query": "SELECT rank ,  Fname ,  Lname FROM Faculty"}
{"question": "Show the first name, last name, and phone number for all female faculty members.", "query": "SELECT Fname ,  Lname ,  phone FROM Faculty WHERE Sex  =  'F'"}
{"question": "What are the first name, last name, and phone number of all the female faculty members?", "query": "SELECT Fname ,  Lname ,  phone FROM Faculty WHERE Sex  =  'F'"}
{"question": "Show ids for all the male faculty.", "query": "SELECT FacID FROM Faculty WHERE Sex  =  'M'"}
{"question": "What are the faculty ids of all the male faculty members?", "query": "SELECT FacID FROM Faculty WHERE Sex  =  'M'"}
{"question": "How many female Professors do we have?", "query": "SELECT count(*) FROM Faculty WHERE Sex  =  'F' AND Rank  =  \"Professor\""}
{"question": "Count the number of female Professors we have.", "query": "SELECT count(*) FROM Faculty WHERE Sex  =  'F' AND Rank  =  \"Professor\""}
{"question": "Show the phone, room, and building for the faculty named Jerry Prince.", "query": "SELECT phone ,  room ,  building FROM Faculty WHERE Fname  =  \"Jerry\" AND Lname  =  \"Prince\""}
{"question": "What are the phone, room, and building of the faculty member called Jerry Prince?", "query": "SELECT phone ,  room ,  building FROM Faculty WHERE Fname  =  \"Jerry\" AND Lname  =  \"Prince\""}
{"question": "How many Professors are in building NEB?", "query": "SELECT count(*) FROM Faculty WHERE Rank  =  \"Professor\" AND building  =  \"NEB\""}
{"question": "Count the number of Professors who have office in building NEB.", "query": "SELECT count(*) FROM Faculty WHERE Rank  =  \"Professor\" AND building  =  \"NEB\""}
{"question": "Show the first name and last name for all the instructors.", "query": "SELECT fname ,  lname FROM Faculty WHERE Rank  =  \"Instructor\""}
{"question": "What are the first name and last name of all the instructors?", "query": "SELECT fname ,  lname FROM Faculty WHERE Rank  =  \"Instructor\""}
{"question": "Show all the buildings along with the number of faculty members the buildings have.", "query": "SELECT building ,  count(*) FROM Faculty GROUP BY building"}
{"question": "How many faculty members does each building have? List the result with the name of the building.", "query": "SELECT building ,  count(*) FROM Faculty GROUP BY building"}
{"question": "Which building has most faculty members?", "query": "SELECT building FROM Faculty GROUP BY building ORDER BY count(*) DESC LIMIT 1"}
{"question": "Find the building that has the largest number of faculty members.", "query": "SELECT building FROM Faculty GROUP BY building ORDER BY count(*) DESC LIMIT 1"}
{"question": "Show all the buildings that have at least 10 professors.", "query": "SELECT building FROM Faculty WHERE rank  =  \"Professor\" GROUP BY building HAVING count(*)  >=  10"}
{"question": "In which buildings are there at least ten professors?", "query": "SELECT building FROM Faculty WHERE rank  =  \"Professor\" GROUP BY building HAVING count(*)  >=  10"}
{"question": "For each faculty rank, show the number of faculty members who have it.", "query": "SELECT rank ,  count(*) FROM Faculty GROUP BY rank"}
{"question": "How many faculty members do we have for each faculty rank?", "query": "SELECT rank ,  count(*) FROM Faculty GROUP BY rank"}
{"question": "Show all the ranks and the number of male and female faculty for each rank.", "query": "SELECT rank ,  sex ,  count(*) FROM Faculty GROUP BY rank ,  sex"}
{"question": "How many faculty members do we have for each rank and gender?", "query": "SELECT rank ,  sex ,  count(*) FROM Faculty GROUP BY rank ,  sex"}
{"question": "Which rank has the smallest number of faculty members?", "query": "SELECT rank FROM Faculty GROUP BY rank ORDER BY count(*) ASC LIMIT 1"}
{"question": "Find the faculty rank that has the least members.", "query": "SELECT rank FROM Faculty GROUP BY rank ORDER BY count(*) ASC LIMIT 1"}
{"question": "Show the number of male and female assistant professors.", "query": "SELECT sex ,  count(*) FROM Faculty WHERE rank  =  \"AsstProf\" GROUP BY sex"}
{"question": "How many male and female assistant professors do we have?", "query": "SELECT sex ,  count(*) FROM Faculty WHERE rank  =  \"AsstProf\" GROUP BY sex"}
{"question": "What are the first name and last name of Linda Smith's advisor?", "query": "SELECT T1.fname ,  T1.lname FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor WHERE T2.fname  =  \"Linda\" AND T2.lname  =  \"Smith\""}
{"question": "Who is the advisor of Linda Smith? Give me the first name and last name.", "query": "SELECT T1.fname ,  T1.lname FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor WHERE T2.fname  =  \"Linda\" AND T2.lname  =  \"Smith\""}
{"question": "Show the ids of students whose advisors are professors.", "query": "SELECT T2.StuID FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor WHERE T1.rank  =  \"Professor\""}
{"question": "Which students have professors as their advisors? Find their student ids.", "query": "SELECT T2.StuID FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor WHERE T1.rank  =  \"Professor\""}
{"question": "Show first name and last name for all the students advised by Michael Goodrich.", "query": "SELECT T2.fname ,  T2.lname FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor WHERE T1.fname  =  \"Michael\" AND T1.lname  =  \"Goodrich\""}
{"question": "Which students are advised by Michael Goodrich? Give me their first and last names.", "query": "SELECT T2.fname ,  T2.lname FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor WHERE T1.fname  =  \"Michael\" AND T1.lname  =  \"Goodrich\""}
{"question": "Show the faculty id of each faculty member, along with the number of students he or she advises.", "query": "SELECT T1.FacID ,  count(*) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor GROUP BY T1.FacID"}
{"question": "What are the faculty id and the number of students each faculty has?", "query": "SELECT T1.FacID ,  count(*) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor GROUP BY T1.FacID"}
{"question": "Show all the faculty ranks and the number of students advised by each rank.", "query": "SELECT T1.rank ,  count(*) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor GROUP BY T1.rank"}
{"question": "How many students are advised by each rank of faculty? List the rank and the number of students.", "query": "SELECT T1.rank ,  count(*) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor GROUP BY T1.rank"}
{"question": "What are the first and last name of the faculty who has the most students?", "query": "SELECT T1.fname ,  T1.lname FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor GROUP BY T1.FacID ORDER BY count(*) DESC LIMIT 1"}
{"question": "Give me the the first and last name of the faculty who advises the most students.", "query": "SELECT T1.fname ,  T1.lname FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor GROUP BY T1.FacID ORDER BY count(*) DESC LIMIT 1"}
{"question": "Show the ids for all the faculty members who have at least 2 students.", "query": "SELECT T1.FacID FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor GROUP BY T1.FacID HAVING count(*)  >=  2"}
{"question": "Which faculty members advise two ore more students? Give me their faculty ids.", "query": "SELECT T1.FacID FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor GROUP BY T1.FacID HAVING count(*)  >=  2"}
{"question": "Show ids for the faculty members who don't advise any student.", "query": "SELECT FacID FROM Faculty EXCEPT SELECT advisor FROM Student"}
{"question": "What are the ids of the faculty members who do not advise any student.", "query": "SELECT FacID FROM Faculty EXCEPT SELECT advisor FROM Student"}
{"question": "What activities do we have?", "query": "SELECT activity_name FROM Activity"}
{"question": "List all the activities we have.", "query": "SELECT activity_name FROM Activity"}
{"question": "How many activities do we have?", "query": "SELECT count(*) FROM Activity"}
{"question": "Find the number of activities available.", "query": "SELECT count(*) FROM Activity"}
{"question": "How many faculty members participate in an activity?", "query": "SELECT count(DISTINCT FacID) FROM Faculty_participates_in"}
{"question": "Give me the number of faculty members who participate in an activity", "query": "SELECT count(DISTINCT FacID) FROM Faculty_participates_in"}
{"question": "Show the ids of the faculty who don't participate in any activity.", "query": "SELECT FacID FROM Faculty EXCEPT SELECT FacID FROM Faculty_participates_in"}
{"question": "Which faculty do not participate in any activity? Find their faculty ids.", "query": "SELECT FacID FROM Faculty EXCEPT SELECT FacID FROM Faculty_participates_in"}
{"question": "Show the ids of all the faculty members who participate in an activity and advise a student.", "query": "SELECT FacID FROM Faculty_participates_in INTERSECT SELECT advisor FROM Student"}
{"question": "What are ids of the faculty members who not only participate in an activity but also advise a student.", "query": "SELECT FacID FROM Faculty_participates_in INTERSECT SELECT advisor FROM Student"}
{"question": "How many activities does Mark Giuliano participate in?", "query": "SELECT count(*) FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID WHERE T1.fname  =  \"Mark\" AND T1.lname  =  \"Giuliano\""}
{"question": "Find the number of activities Mark Giuliano is involved in.", "query": "SELECT count(*) FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID WHERE T1.fname  =  \"Mark\" AND T1.lname  =  \"Giuliano\""}
{"question": "Show the names of all the activities Mark Giuliano participates in.", "query": "SELECT T3.activity_name FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN Activity AS T3 ON T3.actid  =  T2.actid WHERE T1.fname  =  \"Mark\" AND T1.lname  =  \"Giuliano\""}
{"question": "What are the names of the activities Mark Giuliano is involved in", "query": "SELECT T3.activity_name FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN Activity AS T3 ON T3.actid  =  T2.actid WHERE T1.fname  =  \"Mark\" AND T1.lname  =  \"Giuliano\""}
{"question": "Show the first and last name of all the faculty members who participated in some activity, together with the number of activities they participated in.", "query": "SELECT  T1.fname ,  T1.lname ,  count(*) ,  T1.FacID FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID GROUP BY T1.FacID"}
{"question": "What is the first and last name of the faculty members who participated in at least one activity? For each of them, also show the number of activities they participated in.", "query": "SELECT  T1.fname ,  T1.lname ,  count(*) ,  T1.FacID FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID GROUP BY T1.FacID"}
{"question": "Show all the activity names and the number of faculty involved in each activity.", "query": "SELECT T1.activity_name ,  count(*) FROM Activity AS T1 JOIN Faculty_participates_in AS T2 ON T1.actID  =  T2.actID GROUP BY T1.actID"}
{"question": "How many faculty members participate in each activity? Return the activity names and the number of faculty members.", "query": "SELECT T1.activity_name ,  count(*) FROM Activity AS T1 JOIN Faculty_participates_in AS T2 ON T1.actID  =  T2.actID GROUP BY T1.actID"}
{"question": "What is the first and last name of the faculty participating in the most activities?", "query": "SELECT  T1.fname ,  T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID GROUP BY T1.FacID ORDER BY count(*) DESC LIMIT 1"}
{"question": "Find the first and last name of the faculty who is involved in the largest number of activities.", "query": "SELECT  T1.fname ,  T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID GROUP BY T1.FacID ORDER BY count(*) DESC LIMIT 1"}
{"question": "What is the name of the activity that has the most faculty members involved in?", "query": "SELECT T1.activity_name FROM Activity AS T1 JOIN Faculty_participates_in AS T2 ON T1.actID  =  T2.actID GROUP BY T1.actID ORDER BY count(*) DESC LIMIT 1"}
{"question": "Which activity has the most faculty members participating in? Find the activity name.", "query": "SELECT T1.activity_name FROM Activity AS T1 JOIN Faculty_participates_in AS T2 ON T1.actID  =  T2.actID GROUP BY T1.actID ORDER BY count(*) DESC LIMIT 1"}
{"question": "Show the ids of the students who don't participate in any activity.", "query": "SELECT StuID FROM Student EXCEPT SELECT StuID FROM Participates_in"}
{"question": "What are the ids of the students who are not involved in any activity", "query": "SELECT StuID FROM Student EXCEPT SELECT StuID FROM Participates_in"}
{"question": "Show the ids for all the students who participate in an activity and are under 20.", "query": "SELECT StuID FROM Participates_in INTERSECT SELECT StuID FROM Student WHERE age  <  20"}
{"question": "What are the ids of the students who are under 20 years old and are involved in at least one activity.", "query": "SELECT StuID FROM Participates_in INTERSECT SELECT StuID FROM Student WHERE age  <  20"}
{"question": "What is the first and last name of the student participating in the most activities?", "query": "SELECT T1.fname ,  T1.lname FROM Student AS T1 JOIN Participates_in AS T2 ON T1.StuID  =  T2.StuID GROUP BY T1.StuID ORDER BY count(*) DESC LIMIT 1"}
{"question": "Tell me the first and last name of the student who has the most activities.", "query": "SELECT T1.fname ,  T1.lname FROM Student AS T1 JOIN Participates_in AS T2 ON T1.StuID  =  T2.StuID GROUP BY T1.StuID ORDER BY count(*) DESC LIMIT 1"}
{"question": "What is the name of the activity with the most students?", "query": "SELECT T1.activity_name FROM Activity AS T1 JOIN Participates_in AS T2 ON T1.actID  =  T2.actID GROUP BY T1.actID ORDER BY count(*) DESC LIMIT 1"}
{"question": "Find the name of the activity that has the largest number of student participants.", "query": "SELECT T1.activity_name FROM Activity AS T1 JOIN Participates_in AS T2 ON T1.actID  =  T2.actID GROUP BY T1.actID ORDER BY count(*) DESC LIMIT 1"}
{"question": "Find the first names of the faculty members who are playing Canoeing or Kayaking.", "query": "SELECT DISTINCT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN activity AS T3 ON T2.actid  =  T2.actid WHERE T3.activity_name  =  'Canoeing' OR T3.activity_name  =  'Kayaking'"}
{"question": "Which faculty members are playing either Canoeing or Kayaking? Tell me their first names.", "query": "SELECT DISTINCT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN activity AS T3 ON T2.actid  =  T2.actid WHERE T3.activity_name  =  'Canoeing' OR T3.activity_name  =  'Kayaking'"}
{"question": "Find the first names of professors who are not playing Canoeing or Kayaking.", "query": "SELECT lname FROM faculty WHERE rank  =  'Professor' EXCEPT SELECT DISTINCT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN activity AS T3 ON T2.actid  =  T2.actid WHERE T3.activity_name  =  'Canoeing' OR T3.activity_name  =  'Kayaking'"}
{"question": "What are the first names of the professors who do not play Canoeing or Kayaking as activities?", "query": "SELECT lname FROM faculty WHERE rank  =  'Professor' EXCEPT SELECT DISTINCT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN activity AS T3 ON T2.actid  =  T2.actid WHERE T3.activity_name  =  'Canoeing' OR T3.activity_name  =  'Kayaking'"}
{"question": "Find the first names of the faculty members who participate in Canoeing and Kayaking.", "query": "SELECT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN activity AS T3 ON T2.actid  =  T2.actid WHERE T3.activity_name  =  'Canoeing' INTERSECT SELECT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN activity AS T3 ON T2.actid  =  T2.actid WHERE T3.activity_name  =  'Kayaking'"}
{"question": "What are the first names of the faculty members playing both Canoeing and Kayaking?", "query": "SELECT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN activity AS T3 ON T2.actid  =  T2.actid WHERE T3.activity_name  =  'Canoeing' INTERSECT SELECT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN activity AS T3 ON T2.actid  =  T2.actid WHERE T3.activity_name  =  'Kayaking'"}
{"question": "Find the ids of the students who participate in Canoeing and Kayaking.", "query": "SELECT T1.stuid FROM participates_in AS T1 JOIN activity AS T2 ON T2.actid  =  T2.actid WHERE T2.activity_name  =  'Canoeing' INTERSECT SELECT T1.stuid FROM participates_in AS T1 JOIN activity AS T2 ON T2.actid  =  T2.actid WHERE T2.activity_name  =  'Kayaking'"}
{"question": "Which students participate in both Canoeing and Kayaking as their activities? Tell me their student ids.", "query": "SELECT T1.stuid FROM participates_in AS T1 JOIN activity AS T2 ON T2.actid  =  T2.actid WHERE T2.activity_name  =  'Canoeing' INTERSECT SELECT T1.stuid FROM participates_in AS T1 JOIN activity AS T2 ON T2.actid  =  T2.actid WHERE T2.activity_name  =  'Kayaking'"}
{"question": "Find the name of the airport in the city of Goroka.", "query": "SELECT name FROM airports WHERE city  =  'Goroka'"}
{"question": "What are the names of the airports in the city of Goroka?", "query": "SELECT name FROM airports WHERE city  =  'Goroka'"}
{"question": "Find the name, city, country, and altitude (or elevation) of the airports in the city of New York.", "query": "SELECT name ,  city ,  country ,  elevation FROM airports WHERE city  =  'New York'"}
{"question": "What is the name, city, country, and elevation for every airport in the city of New York?", "query": "SELECT name ,  city ,  country ,  elevation FROM airports WHERE city  =  'New York'"}
{"question": "How many airlines are there?", "query": "SELECT count(*) FROM airlines"}
{"question": "What is the total number of airlines?", "query": "SELECT count(*) FROM airlines"}
{"question": "How many airlines does Russia has?", "query": "SELECT count(*) FROM airlines WHERE country  =  'Russia'"}
{"question": "What is the number of airlines based in Russia?", "query": "SELECT count(*) FROM airlines WHERE country  =  'Russia'"}
{"question": "What is the maximum elevation of all airports in the country of Iceland?", "query": "SELECT max(elevation) FROM airports WHERE country  =  'Iceland'"}
{"question": "What is the highest elevation of an airport in the country of Iceland?", "query": "SELECT max(elevation) FROM airports WHERE country  =  'Iceland'"}
{"question": "Find the name of the airports located in Cuba or Argentina.", "query": "SELECT name FROM airports WHERE country  =  'Cuba' OR country  =  'Argentina'"}
{"question": "What are the names of all airports in Cuba or Argentina?", "query": "SELECT name FROM airports WHERE country  =  'Cuba' OR country  =  'Argentina'"}
{"question": "Find the country of the airlines whose name starts with 'Orbit'.", "query": "SELECT country FROM airlines WHERE name LIKE 'Orbit%'"}
{"question": "What are the countries of all airlines whose names start with Orbit?", "query": "SELECT country FROM airlines WHERE name LIKE 'Orbit%'"}
{"question": "Find the name of airports whose altitude is between -50 and 50.", "query": "SELECT name FROM airports WHERE elevation BETWEEN -50 AND 50"}
{"question": "What are the names of all airports whose elevation is between -50 and 50?", "query": "SELECT name FROM airports WHERE elevation BETWEEN -50 AND 50"}
{"question": "Which country is the airport that has the highest altitude located in?", "query": "SELECT country FROM airports ORDER BY elevation DESC LIMIT 1"}
{"question": "What is the country of the airport with the highest elevation?", "query": "SELECT country FROM airports ORDER BY elevation DESC LIMIT 1"}
{"question": "Find the number of airports whose name contain the word 'International'.", "query": "SELECT count(*) FROM airports WHERE name LIKE '%International%'"}
{"question": "How many airports' names have the word Interanation in them?", "query": "SELECT count(*) FROM airports WHERE name LIKE '%International%'"}
{"question": "How many different cities do have some airport in the country of Greenland?", "query": "SELECT count(DISTINCT city) FROM airports WHERE country  =  'Greenland'"}
{"question": "In how many cities are there airports in the country of Greenland?", "query": "SELECT count(DISTINCT city) FROM airports WHERE country  =  'Greenland'"}
{"question": "Find the number of routes operated by American Airlines.", "query": "SELECT count(*) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid WHERE T1.name  =  'American Airlines'"}
{"question": "How many routes does American Airlines operate?", "query": "SELECT count(*) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid WHERE T1.name  =  'American Airlines'"}
{"question": "Find the number of routes whose destination airports are in Canada.", "query": "SELECT count(*) FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid WHERE country  =  'Canada'"}
{"question": "How many routes end in a Canadian airport?", "query": "SELECT count(*) FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid WHERE country  =  'Canada'"}
{"question": "Find the name, city, and country of the airport that has the lowest altitude.", "query": "SELECT name ,  city ,  country FROM airports ORDER BY elevation LIMIT 1"}
{"question": "What is the name, city, and country of the airport with the lowest altitude?", "query": "SELECT name ,  city ,  country FROM airports ORDER BY elevation LIMIT 1"}
{"question": "Find the name, city, and country of the airport that has the highest latitude.", "query": "SELECT name ,  city ,  country FROM airports ORDER BY elevation DESC LIMIT 1"}
{"question": "What is the name, city, and country of the airport with the highest elevation?", "query": "SELECT name ,  city ,  country FROM airports ORDER BY elevation DESC LIMIT 1"}
{"question": "Find the name and city of the airport which is the destination of the most number of routes.", "query": "SELECT T1.name ,  T1.city ,  T2.dst_apid FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid GROUP BY T2.dst_apid ORDER BY count(*) DESC LIMIT 1"}
{"question": "What is the name and city of the airport that the most routes end at?", "query": "SELECT T1.name ,  T1.city ,  T2.dst_apid FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid GROUP BY T2.dst_apid ORDER BY count(*) DESC LIMIT 1"}
{"question": "Find the names of the top 10 airlines that operate the most number of routes.", "query": "SELECT T1.name ,  T2.alid FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid GROUP BY T2.alid ORDER BY count(*) DESC LIMIT 10"}
{"question": "For the airline ids with the top 10 most routes operated, what are their names?", "query": "SELECT T1.name ,  T2.alid FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid GROUP BY T2.alid ORDER BY count(*) DESC LIMIT 10"}
{"question": "Find the name and city of the airport which is the source for the most number of flight routes.", "query": "SELECT T1.name ,  T1.city ,  T2.src_apid FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid GROUP BY T2.src_apid ORDER BY count(*) DESC LIMIT 1"}
{"question": "What is the name and city of the airport from most of the routes start?", "query": "SELECT T1.name ,  T1.city ,  T2.src_apid FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid GROUP BY T2.src_apid ORDER BY count(*) DESC LIMIT 1"}
{"question": "Find the number of different airports which are the destinations of the American Airlines.", "query": "SELECT count(DISTINCT dst_apid) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid WHERE T1.name  =  'American Airlines'"}
{"question": "What is the number of different different airports that are destinations for American Airlines?", "query": "SELECT count(DISTINCT dst_apid) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid WHERE T1.name  =  'American Airlines'"}
{"question": "Which countries has the most number of airlines?", "query": "SELECT country FROM airlines GROUP BY country ORDER BY count(*) DESC LIMIT 1"}
{"question": "What is the name of the country with the most number of home airlines?", "query": "SELECT country FROM airlines GROUP BY country ORDER BY count(*) DESC LIMIT 1"}
{"question": "Which countries has the most number of airlines whose active status is 'Y'?", "query": "SELECT country FROM airlines WHERE active  =  'Y' GROUP BY country ORDER BY count(*) DESC LIMIT 1"}
{"question": "What are the countries with the most airlines whose active status is Y?", "query": "SELECT country FROM airlines WHERE active  =  'Y' GROUP BY country ORDER BY count(*) DESC LIMIT 1"}
{"question": "List all countries and their number of airlines in the descending order of number of airlines.", "query": "SELECT country ,  count(*) FROM airlines GROUP BY country ORDER BY count(*) DESC"}
{"question": "How many airlines operate out of each country in descending order?", "query": "SELECT country ,  count(*) FROM airlines GROUP BY country ORDER BY count(*) DESC"}
{"question": "How many airports are there per country? Order the countries by decreasing number of airports.", "query": "SELECT count(*) ,  country FROM airports GROUP BY country ORDER BY count(*) DESC"}
{"question": "What is the number of airports per country, ordered from most to least?", "query": "SELECT count(*) ,  country FROM airports GROUP BY country ORDER BY count(*) DESC"}
{"question": "How many airports are there per city in the United States? Order the cities by decreasing number of airports.", "query": "SELECT count(*) ,  city FROM airports WHERE country  =  'United States' GROUP BY city ORDER BY count(*) DESC"}
{"question": "How many airports are there per city in the US ordered from most to least?", "query": "SELECT count(*) ,  city FROM airports WHERE country  =  'United States' GROUP BY city ORDER BY count(*) DESC"}
{"question": "Return the cities with more than 3 airports in the United States.", "query": "SELECT city FROM airports WHERE country  =  'United States' GROUP BY city HAVING count(*)  >  3"}
{"question": "What is the number of cities in the United States with more than 3 airports?", "query": "SELECT city FROM airports WHERE country  =  'United States' GROUP BY city HAVING count(*)  >  3"}
{"question": "How many cities are there that have more than 3 airports?", "query": "SELECT count(*) FROM (SELECT city FROM airports GROUP BY city HAVING count(*)  >  3)"}
{"question": "What is the count of cities with more than 3 airports?", "query": "SELECT count(*) FROM (SELECT city FROM airports GROUP BY city HAVING count(*)  >  3)"}
{"question": "List the cities which have more than one airport and number of airports.", "query": "SELECT city ,  count(*) FROM airports GROUP BY city HAVING count(*)  >  1"}
{"question": "What are the names of all cities with more than one airport and how many airports do they have?", "query": "SELECT city ,  count(*) FROM airports GROUP BY city HAVING count(*)  >  1"}
{"question": "List the cities which have more than 2 airports sorted by the number of airports.", "query": "SELECT city FROM airports GROUP BY city HAVING count(*)  >  2 ORDER BY count(*)"}
{"question": "What are the cities that have more than 2 airports sorted by number of airports?", "query": "SELECT city FROM airports GROUP BY city HAVING count(*)  >  2 ORDER BY count(*)"}
{"question": "Find the number of routes for each source airport and the airport name.", "query": "SELECT count(*) ,  T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid GROUP BY T1.name"}
{"question": "For each airport name, how many routes start at that airport?", "query": "SELECT count(*) ,  T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid GROUP BY T1.name"}
{"question": "Find the number of routes and airport name for each source airport, order the results by decreasing number of routes.", "query": "SELECT count(*) ,  T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid GROUP BY T1.name ORDER BY count(*) DESC"}
{"question": "For each  airport name, how many routes start at that airport, ordered from most to least?", "query": "SELECT count(*) ,  T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid GROUP BY T1.name ORDER BY count(*) DESC"}
{"question": "Find the average elevation of all airports for each country.", "query": "SELECT avg(elevation) ,  country FROM airports GROUP BY country"}
{"question": "For each country, what is the average elevation of that country's airports?", "query": "SELECT avg(elevation) ,  country FROM airports GROUP BY country"}
{"question": "Find the cities which have exactly two airports.", "query": "SELECT city FROM airports GROUP BY city HAVING count(*)  =  2"}
{"question": "What are the cities with exactly two airports?", "query": "SELECT city FROM airports GROUP BY city HAVING count(*)  =  2"}
{"question": "For each country and airline name, how many routes are there?", "query": "SELECT T1.country ,  T1.name ,  count(*) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid GROUP BY T1.country ,  T1.name"}
{"question": "What is the total number of routes for each country and airline in that country?", "query": "SELECT T1.country ,  T1.name ,  count(*) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid GROUP BY T1.country ,  T1.name"}
{"question": "Find the number of routes with destination airports in Italy.", "query": "SELECT count(*) FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid  =  T2.apid WHERE T2.country  =  'Italy'"}
{"question": "What is the number of routes whose destinations are Italian airports?", "query": "SELECT count(*) FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid  =  T2.apid WHERE T2.country  =  'Italy'"}
{"question": "Return the number of routes with destination airport in Italy operated by the airline with name 'American Airlines'.", "query": "SELECT count(*) FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid  =  T2.apid JOIN airlines AS T3 ON T1.alid  =  T3.alid WHERE T2.country  =  'Italy' AND T3.name  =  'American Airlines'"}
{"question": "What is the number of routes operated by the airline American Airlines whose destinations are in Italy?", "query": "SELECT count(*) FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid  =  T2.apid JOIN airlines AS T3 ON T1.alid  =  T3.alid WHERE T2.country  =  'Italy' AND T3.name  =  'American Airlines'"}
{"question": "Find the number of routes that have destination John F Kennedy International Airport.", "query": "SELECT count(*) FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid WHERE T1.name  =  'John F Kennedy International Airport'"}
{"question": "What is the number of routes that end at John F Kennedy International Airport?", "query": "SELECT count(*) FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid WHERE T1.name  =  'John F Kennedy International Airport'"}
{"question": "Find the number of routes from the United States to Canada.", "query": "SELECT count(*) FROM routes WHERE dst_apid IN (SELECT apid FROM airports WHERE country  =  'Canada') AND src_apid IN (SELECT apid FROM airports WHERE country  =  'United States')"}
{"question": "How many routes go from the United States to Canada?", "query": "SELECT count(*) FROM routes WHERE dst_apid IN (SELECT apid FROM airports WHERE country  =  'Canada') AND src_apid IN (SELECT apid FROM airports WHERE country  =  'United States')"}
{"question": "Find the id of routes whose source and destination airports are in the United States.", "query": "SELECT rid FROM routes WHERE dst_apid IN (SELECT apid FROM airports WHERE country  =  'United States') AND src_apid IN (SELECT apid FROM airports WHERE country  =  'United States')"}
{"question": "What is the id of the routes whose source and destination airports are in the United States?", "query": "SELECT rid FROM routes WHERE dst_apid IN (SELECT apid FROM airports WHERE country  =  'United States') AND src_apid IN (SELECT apid FROM airports WHERE country  =  'United States')"}
{"question": "Find the name of airline which runs the most number of routes.", "query": "SELECT T1.name FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid GROUP BY T1.name ORDER BY count(*) DESC LIMIT 1"}
{"question": "What is the name of the airline with the most routes?", "query": "SELECT T1.name FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid GROUP BY T1.name ORDER BY count(*) DESC LIMIT 1"}
{"question": "Find the busiest source airport that runs most number of routes in China.", "query": "SELECT T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid WHERE T1.country  =  'China' GROUP BY T1.name ORDER BY count(*) DESC LIMIT 1"}
{"question": "What is the name of the airport with the most number of routes that start in China?", "query": "SELECT T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid WHERE T1.country  =  'China' GROUP BY T1.name ORDER BY count(*) DESC LIMIT 1"}
{"question": "Find the busiest destination airport that runs most number of routes in China.", "query": "SELECT T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid WHERE T1.country  =  'China' GROUP BY T1.name ORDER BY count(*) DESC LIMIT 1"}
{"question": "What is the name of the airport that is the destination of the most number of routes that start in China?", "query": "SELECT T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid WHERE T1.country  =  'China' GROUP BY T1.name ORDER BY count(*) DESC LIMIT 1"}
{"question": "What is the id of the most recent order?", "query": "SELECT order_id FROM orders ORDER BY date_order_placed DESC LIMIT 1"}
{"question": "Find the id of the order made most recently.", "query": "SELECT order_id FROM orders ORDER BY date_order_placed DESC LIMIT 1"}
{"question": "what are the order id and customer id of the oldest order?", "query": "SELECT order_id ,  customer_id FROM orders ORDER BY date_order_placed LIMIT 1"}
{"question": "Find the order id and customer id associated with the oldest order.", "query": "SELECT order_id ,  customer_id FROM orders ORDER BY date_order_placed LIMIT 1"}
{"question": "Find the id of the order whose shipment tracking number is \"3452\".", "query": "SELECT order_id FROM shipments WHERE shipment_tracking_number = \"3452\""}
{"question": "Which order's shipment tracking number is \"3452\"? Give me the id of the order.", "query": "SELECT order_id FROM shipments WHERE shipment_tracking_number = \"3452\""}
{"question": "Find the ids of all the order items whose product id is 11.", "query": "SELECT order_item_id FROM order_items WHERE product_id = 11"}
{"question": "Find all the order items whose product id is 11. What are the order item ids?", "query": "SELECT order_item_id FROM order_items WHERE product_id = 11"}
{"question": "List the name of all the distinct customers who have orders with status \"Packing\".", "query": "SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = \"Packing\""}
{"question": "Which customers have orders with status \"Packing\"? Give me the customer names.", "query": "SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = \"Packing\""}
{"question": "Find the details of all the distinct customers who have orders with status \"On Road\".", "query": "SELECT DISTINCT T1.customer_details FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = \"On Road\""}
{"question": "What are the distinct customers who have orders with status \"On Road\"? Give me the customer details?", "query": "SELECT DISTINCT T1.customer_details FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = \"On Road\""}
{"question": "What is the name of the customer who has the most orders?", "query": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "Which customer made the most orders? Find the customer name.", "query": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "What is the customer id of the customer who has the most orders?", "query": "SELECT T1.customer_id FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "Find the id of the customer who made the most orders.", "query": "SELECT T1.customer_id FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "Give me a list of id and status of orders which belong to the customer named \"Jeramie\".", "query": "SELECT T2.order_id ,  T2.order_status FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = \"Jeramie\""}
{"question": "Which orders are made by the customer named \"Jeramie\"? Give me the order ids and status.", "query": "SELECT T2.order_id ,  T2.order_status FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = \"Jeramie\""}
{"question": "Find the dates of orders which belong to the customer named \"Jeramie\".", "query": "SELECT T2.date_order_placed FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = \"Jeramie\""}
{"question": "What are the dates of the orders made by the customer named \"Jeramie\"?", "query": "SELECT T2.date_order_placed FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = \"Jeramie\""}
{"question": "Give me the names of customers who have placed orders between 2009-01-01 and 2010-01-01.", "query": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.date_order_placed >= \"2009-01-01\" AND T2.date_order_placed <= \"2010-01-01\""}
{"question": "Which customers made orders between 2009-01-01 and 2010-01-01? Find their names.", "query": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.date_order_placed >= \"2009-01-01\" AND T2.date_order_placed <= \"2010-01-01\""}
{"question": "Give me a list of distinct product ids from orders placed between 1975-01-01 and 1976-01-01?", "query": "SELECT DISTINCT T2.product_id FROM orders AS T1 JOIN order_items AS T2 ON T1.order_id = T2.order_id WHERE T1.date_order_placed >= \"1975-01-01\" AND T1.date_order_placed <= \"1976-01-01\""}
{"question": "What are the distinct ids of products ordered between 1975-01-01 and 1976-01-01??", "query": "SELECT DISTINCT T2.product_id FROM orders AS T1 JOIN order_items AS T2 ON T1.order_id = T2.order_id WHERE T1.date_order_placed >= \"1975-01-01\" AND T1.date_order_placed <= \"1976-01-01\""}
{"question": "Find the names of the customers who have order status both \"On Road\" and \"Shipped\".", "query": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = \"On Road\" INTERSECT SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = \"Shipped\""}
{"question": "Which customers have both \"On Road\" and \"Shipped\" as order status? List the customer names.", "query": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = \"On Road\" INTERSECT SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = \"Shipped\""}
{"question": "Find the id of the customers who have order status both \"On Road\" and \"Shipped\".", "query": "SELECT T1.customer_id FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = \"On Road\" INTERSECT SELECT T1.customer_id FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = \"Shipped\""}
{"question": "Which customers have both \"On Road\" and \"Shipped\" as order status? List the customer ids.", "query": "SELECT T1.customer_id FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = \"On Road\" INTERSECT SELECT T1.customer_id FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = \"Shipped\""}
{"question": "When was the order placed whose shipment tracking number is 3452? Give me the date.", "query": "SELECT T1.date_order_placed FROM orders AS T1 JOIN shipments AS T2 ON T1.order_id = T2.order_id WHERE T2.shipment_tracking_number = 3452"}
{"question": "On which day was the order placed whose shipment tracking number is 3452?", "query": "SELECT T1.date_order_placed FROM orders AS T1 JOIN shipments AS T2 ON T1.order_id = T2.order_id WHERE T2.shipment_tracking_number = 3452"}
{"question": "What is the placement date of the order whose invoice number is 10?", "query": "SELECT T1.date_order_placed FROM orders AS T1 JOIN shipments AS T2 ON T1.order_id = T2.order_id WHERE T2.invoice_number = 10"}
{"question": "On what day was the order with invoice number 10 placed?", "query": "SELECT T1.date_order_placed FROM orders AS T1 JOIN shipments AS T2 ON T1.order_id = T2.order_id WHERE T2.invoice_number = 10"}
{"question": "List the count and id of each product in all the orders.", "query": "SELECT count(*) ,  T3.product_id FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY T3.product_id"}
{"question": "For each product, return its id and the number of times it was ordered.", "query": "SELECT count(*) ,  T3.product_id FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY T3.product_id"}
{"question": "List the name and count of each product in all orders.", "query": "SELECT T3.product_name ,  count(*) FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY T3.product_id"}
{"question": "For each product, show its name and the number of times it was ordered.", "query": "SELECT T3.product_name ,  count(*) FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY T3.product_id"}
{"question": "Find the ids of orders which are shipped after 2000-01-01.", "query": "SELECT order_id FROM shipments WHERE shipment_date > \"2000-01-01\""}
{"question": "Which orders have shipment after 2000-01-01? Give me the order ids.", "query": "SELECT order_id FROM shipments WHERE shipment_date > \"2000-01-01\""}
{"question": "Find the id of the order which is shipped most recently.", "query": "SELECT order_id FROM shipments WHERE shipment_date  =  (SELECT max(shipment_date) FROM shipments)"}
{"question": "Which order has the most recent shipment? Give me the order id.", "query": "SELECT order_id FROM shipments WHERE shipment_date  =  (SELECT max(shipment_date) FROM shipments)"}
{"question": "List the names of all distinct products in alphabetical order.", "query": "SELECT DISTINCT product_name FROM products ORDER BY product_name"}
{"question": "Sort all the distinct products in alphabetical order.", "query": "SELECT DISTINCT product_name FROM products ORDER BY product_name"}
{"question": "List the ids of all distinct orders ordered by placed date.", "query": "SELECT DISTINCT order_id FROM orders ORDER BY date_order_placed"}
{"question": "What are ids of the all distinct orders, sorted by placement date?", "query": "SELECT DISTINCT order_id FROM orders ORDER BY date_order_placed"}
{"question": "What is the id of the order which has the most items?", "query": "SELECT T1.order_id FROM orders AS T1 JOIN order_items AS T2 ON T1.order_id = T2.order_id GROUP BY T1.order_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "Which order deals with the most items? Return the order id.", "query": "SELECT T1.order_id FROM orders AS T1 JOIN order_items AS T2 ON T1.order_id = T2.order_id GROUP BY T1.order_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "What is the name of the customer who has the largest number of orders?", "query": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "Find the name of the customer who made the most orders.", "query": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1"}
{"question": "Find the invoice numbers which are created before 1989-09-03 or after 2007-12-25.", "query": "SELECT invoice_number FROM invoices WHERE invoice_date < \"1989-09-03\" OR invoice_date > \"2007-12-25\""}
{"question": "What are the invoice numbers created before 1989-09-03 or after 2007-12-25?", "query": "SELECT invoice_number FROM invoices WHERE invoice_date < \"1989-09-03\" OR invoice_date > \"2007-12-25\""}
{"question": "Find the distinct details of invoices which are created before 1989-09-03 or after 2007-12-25.", "query": "SELECT DISTINCT invoice_details FROM invoices WHERE invoice_date < \"1989-09-03\" OR invoice_date > \"2007-12-25\""}
{"question": "What are the distinct details of invoices created before 1989-09-03 or after 2007-12-25?", "query": "SELECT DISTINCT invoice_details FROM invoices WHERE invoice_date < \"1989-09-03\" OR invoice_date > \"2007-12-25\""}
{"question": "For each customer who has at least two orders, find the customer name and number of orders made.", "query": "SELECT T2.customer_name ,  count(*) FROM orders AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_id HAVING count(*)  >=  2"}
{"question": "Which customers have made at least two orders? Give me each customer name and number of orders made.", "query": "SELECT T2.customer_name ,  count(*) FROM orders AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_id HAVING count(*)  >=  2"}
{"question": "Find the name of the customers who have at most two orders.", "query": "SELECT T2.customer_name FROM orders AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_id HAVING count(*)  <=  2"}
{"question": "What are the names of the customers who have made two or less orders?", "query": "SELECT T2.customer_name FROM orders AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_id HAVING count(*)  <=  2"}
{"question": "List the names of the customers who have once bought product \"food\".", "query": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 JOIN order_items AS T3 JOIN products AS T4 ON T1.customer_id = T2.customer_id AND T2.order_id = T3.order_id AND T3.product_id = T4.product_id WHERE T4.product_name = \"food\" GROUP BY T1.customer_id HAVING count(*)  >=  1"}
{"question": "What are the names of the customers who bought product \"food\" at least once?", "query": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 JOIN order_items AS T3 JOIN products AS T4 ON T1.customer_id = T2.customer_id AND T2.order_id = T3.order_id AND T3.product_id = T4.product_id WHERE T4.product_name = \"food\" GROUP BY T1.customer_id HAVING count(*)  >=  1"}
{"question": "List the names of customers who have once canceled the purchase of the product \"food\" (the item status is \"Cancel\").", "query": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 JOIN order_items AS T3 JOIN products AS T4 ON T1.customer_id = T2.customer_id AND T2.order_id = T3.order_id AND T3.product_id = T4.product_id WHERE T3.order_item_status = \"Cancel\" AND T4.product_name = \"food\" GROUP BY T1.customer_id HAVING count(*)  >=  1"}
{"question": "Which customers have ever canceled the purchase of the product \"food\" (the item status is \"Cancel\")?", "query": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 JOIN order_items AS T3 JOIN products AS T4 ON T1.customer_id = T2.customer_id AND T2.order_id = T3.order_id AND T3.product_id = T4.product_id WHERE T3.order_item_status = \"Cancel\" AND T4.product_name = \"food\" GROUP BY T1.customer_id HAVING count(*)  >=  1"}
{"question": "How many architects are female?", "query": "SELECT count(*) FROM architect WHERE gender  =  'female'"}
{"question": "List the name, nationality and id of all male architects ordered by their names lexicographically.", "query": "SELECT name ,  nationality ,  id FROM architect WHERE gender  =  'male' ORDER BY name"}
{"question": "What is the maximum length in meters for the bridges and what are the architects' names?", "query": "SELECT max(T1.length_meters) ,  T2.name FROM bridge AS T1 JOIN architect AS T2 ON T1.architect_id  =  T2.id"}
{"question": "What is the average length in feet of the bridges?", "query": "SELECT avg(length_feet) FROM bridge"}
{"question": "What are the names and year of construction for the mills of 'Grondzeiler' type?", "query": "SELECT name ,  built_year FROM mill WHERE TYPE  =  'Grondzeiler'"}
{"question": "What are the distinct names and nationalities of the architects who have ever built a mill?", "query": "SELECT DISTINCT T1.name ,  T1.nationality FROM architect AS T1 JOIN mill AS t2 ON T1.id  =  T2.architect_id"}
{"question": "What are the names of the mills which are not located in 'Donceel'?", "query": "SELECT name FROM mill WHERE LOCATION != 'Donceel'"}
{"question": "What are the distinct types of mills that are built by American or Canadian architects?", "query": "SELECT DISTINCT T1.type FROM mill AS T1 JOIN architect AS t2 ON T1.architect_id  =  T2.id WHERE T2.nationality  =  'American' OR T2.nationality  =  'Canadian'"}
{"question": "What are the ids and names of the architects who built at least 3 bridges ?", "query": "SELECT T1.id ,  T1.name FROM architect AS T1 JOIN bridge AS T2 ON T1.id  =  T2.architect_id GROUP BY T1.id HAVING count(*)  >=  3"}
{"question": "What is the id, name and nationality of the architect who built most mills?", "query": "SELECT T1.id ,  T1.name ,  T1.nationality FROM architect AS T1 JOIN mill AS T2 ON T1.id  =  T2.architect_id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1"}
{"question": "What are the ids, names and genders of the architects who built two bridges or one mill?", "query": "SELECT T1.id ,  T1.name ,  T1.gender FROM architect AS T1 JOIN bridge AS T2 ON T1.id  =  T2.architect_id GROUP BY T1.id HAVING count(*)  =  2 UNION SELECT T1.id ,  T1.name ,  T1.gender FROM architect AS T1 JOIN mill AS T2 ON T1.id  =  T2.architect_id GROUP BY T1.id HAVING count(*)  =  1"}
{"question": "What is the location of the bridge named 'Kolob Arch' or 'Rainbow Bridge'?", "query": "SELECT LOCATION FROM bridge WHERE name  =  'Kolob Arch' OR name  =  'Rainbow Bridge'"}
{"question": "Which of the mill names contains the french word 'Moulin'?", "query": "SELECT name FROM mill WHERE name LIKE '%Moulin%'"}
{"question": "What are the distinct name of the mills built by the architects who have also built a bridge longer than 80 meters?", "query": "SELECT DISTINCT T1.name FROM mill AS T1 JOIN architect AS t2 ON T1.architect_id  =  T2.id JOIN bridge AS T3 ON T3.architect_id  =  T2.id WHERE T3.length_meters  >  80"}
{"question": "What is the most common mill type, and how many are there?", "query": "SELECT TYPE ,  count(*) FROM mill GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1"}
{"question": "How many architects haven't built a mill before year 1850?", "query": "SELECT count(*) FROM architect WHERE id NOT IN ( SELECT architect_id FROM mill WHERE built_year  <  1850 );"}
{"question": "show the name of all bridges that was designed by american archtect, and sort the result by the bridge feet length.", "query": "SELECT t1.name FROM bridge AS t1 JOIN architect AS t2 ON t1.architect_id  =  t2.id WHERE t2.nationality  =  'American' ORDER BY t1.length_feet"}
{"question": "How many book clubs are there?", "query": "SELECT count(*) FROM book_club"}
{"question": "Count the number of book clubs.", "query": "SELECT count(*) FROM book_club"}
{"question": "show the titles, and authors or editors for all books made after the year 1989.", "query": "SELECT book_title ,  author_or_editor FROM book_club WHERE YEAR  >  1989"}
{"question": "What are the titles and authors or editors that correspond to books made after 1989?", "query": "SELECT book_title ,  author_or_editor FROM book_club WHERE YEAR  >  1989"}
{"question": "Show all distinct publishers for books.", "query": "SELECT DISTINCT publisher FROM book_club"}
{"question": "What are all the different book publishers?", "query": "SELECT DISTINCT publisher FROM book_club"}
{"question": "Show the years, book titles, and publishers for all books, in descending order by year.", "query": "SELECT YEAR ,  book_title ,  publisher FROM book_club ORDER BY YEAR DESC"}
{"question": "What are the years, titles, and publishers for all books, ordered by year descending?", "query": "SELECT YEAR ,  book_title ,  publisher FROM book_club ORDER BY YEAR DESC"}
{"question": "Show all publishers and the number of books for each publisher.", "query": "SELECT publisher ,  count(*) FROM book_club GROUP BY publisher"}
{"question": "How many books are there for each publisher?", "query": "SELECT publisher ,  count(*) FROM book_club GROUP BY publisher"}
{"question": "What is the publisher with most number of books?", "query": "SELECT publisher FROM book_club GROUP BY publisher ORDER BY count(*) DESC LIMIT 1"}
{"question": "Return the publisher that has published the most books.", "query": "SELECT publisher FROM book_club GROUP BY publisher ORDER BY count(*) DESC LIMIT 1"}
{"question": "Show all book categories and the number of books in each category.", "query": "SELECT category ,  count(*) FROM book_club GROUP BY category"}
{"question": "How many books fall into each category?", "query": "SELECT category ,  count(*) FROM book_club GROUP BY category"}
{"question": "List categories that have at least two books after year 1989.", "query": "SELECT category FROM book_club WHERE YEAR  >  1989 GROUP BY category HAVING count(*)  >=  2"}
{"question": "What categories have two or more corresponding books that were made after 1989?", "query": "SELECT category FROM book_club WHERE YEAR  >  1989 GROUP BY category HAVING count(*)  >=  2"}
{"question": "Show publishers with a book published in 1989 and a book in 1990.", "query": "SELECT publisher FROM book_club WHERE YEAR  =  1989 INTERSECT SELECT publisher FROM book_club WHERE YEAR  =  1990"}
{"question": "What are the publishers who have published a book in both 1989 and 1990?", "query": "SELECT publisher FROM book_club WHERE YEAR  =  1989 INTERSECT SELECT publisher FROM book_club WHERE YEAR  =  1990"}
{"question": "Show all publishers which do not have a book in 1989.", "query": "SELECT publisher FROM book_club EXCEPT SELECT publisher FROM book_club WHERE YEAR  =  1989"}
{"question": "Which publishers did not publish a book in 1989?", "query": "SELECT publisher FROM book_club EXCEPT SELECT publisher FROM book_club WHERE YEAR  =  1989"}
{"question": "Show all movie titles, years, and directors, ordered by budget.", "query": "SELECT title ,  YEAR ,  director FROM movie ORDER BY budget_million"}
{"question": "What are the titles, years, and directors of all movies, ordered by budget in millions?", "query": "SELECT title ,  YEAR ,  director FROM movie ORDER BY budget_million"}
{"question": "How many movie directors are there?", "query": "SELECT COUNT (DISTINCT director) FROM movie"}
{"question": "Count the number of different directors.", "query": "SELECT COUNT (DISTINCT director) FROM movie"}
{"question": "What is the title and director for the movie with highest worldwide gross in the year 2000 or before?", "query": "SELECT title ,  director FROM movie WHERE YEAR  <=  2000 ORDER BY gross_worldwide DESC LIMIT 1"}
{"question": "Return the title and director of the movie released in the year 2000 or earlier that had the highest worldwide gross.", "query": "SELECT title ,  director FROM movie WHERE YEAR  <=  2000 ORDER BY gross_worldwide DESC LIMIT 1"}
{"question": "Show all director names who have a movie in both year 1999 and 2000.", "query": "SELECT director FROM movie WHERE YEAR  =  2000 INTERSECT SELECT director FROM movie WHERE YEAR  =  1999"}
{"question": "Which directors had a movie both in the year 1999 and 2000?", "query": "SELECT director FROM movie WHERE YEAR  =  2000 INTERSECT SELECT director FROM movie WHERE YEAR  =  1999"}
{"question": "Show all director names who have a movie in the year 1999 or 2000.", "query": "SELECT director FROM movie WHERE YEAR  =  1999 OR YEAR  =  2000"}
{"question": "Which directors had a movie in either 1999 or 2000?", "query": "SELECT director FROM movie WHERE YEAR  =  1999 OR YEAR  =  2000"}
{"question": "What is the average, maximum, and minimum budget for all movies before 2000.", "query": "SELECT avg(budget_million) ,  max(budget_million) ,  min(budget_million) FROM movie WHERE YEAR  <  2000"}
{"question": "Return the average, maximum, and minimum budgets in millions for movies made before the year 2000.", "query": "SELECT avg(budget_million) ,  max(budget_million) ,  min(budget_million) FROM movie WHERE YEAR  <  2000"}
{"question": "List all company names with a book published by Alyson.", "query": "SELECT T1.company_name FROM culture_company AS T1 JOIN book_club AS T2 ON T1.book_club_id  =  T2.book_club_id WHERE T2.publisher  =  'Alyson'"}
{"question": "What are all the company names that have a book published by Alyson?", "query": "SELECT T1.company_name FROM culture_company AS T1 JOIN book_club AS T2 ON T1.book_club_id  =  T2.book_club_id WHERE T2.publisher  =  'Alyson'"}
{"question": "Show the movie titles and book titles for all companies in China.", "query": "SELECT T1.title ,  T3.book_title FROM movie AS T1 JOIN culture_company AS T2 ON T1.movie_id  =  T2.movie_id JOIN book_club AS T3 ON T3.book_club_id  =  T2.book_club_id WHERE T2.incorporated_in  =  'China'"}
{"question": "What are the titles of movies and books corresponding to companies incorporated in China?", "query": "SELECT T1.title ,  T3.book_title FROM movie AS T1 JOIN culture_company AS T2 ON T1.movie_id  =  T2.movie_id JOIN book_club AS T3 ON T3.book_club_id  =  T2.book_club_id WHERE T2.incorporated_in  =  'China'"}
{"question": "Show all company names with a movie directed in year 1999.", "query": "SELECT T2.company_name FROM movie AS T1 JOIN culture_company AS T2 ON T1.movie_id  =  T2.movie_id WHERE T1.year  =  1999"}
{"question": "What are all company names that have a corresponding movie directed in the year 1999?", "query": "SELECT T2.company_name FROM movie AS T1 JOIN culture_company AS T2 ON T1.movie_id  =  T2.movie_id WHERE T1.year  =  1999"}
{"question": "What are the names, birth dates and phone numbers of the students who have not had any classes this semester?", "query": "SELECT T1.name,  T1.birth_date,  T1.phone_number FROM students AS T1 WHERE T1.class_id  =  0"}
{"question": "List the name, born state and average age of the heads of departments ordered in by average age", "query": "SELECT T1.head_name,  T1.head_state,  T1.head_age FROM department AS T1 JOIN head_of_department AS T2 ON T1.head_id  =  T2.head_id GROUP BY T1.head_id ORDER BY T1.head_age;"}
{"question": "What are the names, names and genders of the students who took the exam on the first day?", "query": "SELECT T1.name,  T1.name,  T1.gender  FROM student AS T1 WHERE T1.exam_date  =  \"2014-01-01\""}
{"question": "What are the names and ids of the people who have access to the building whose id is 13?", "query": "SELECT T1.name,  T1.id FROM people AS T1 JOIN building AS T2 ON T1.person_id  =  T2.person_id WHERE T2.id  =  13"}
{"question": "What is the name and id of all the students in the department of computer science?", "query": "SELECT T1.name,  T1.id FROM student AS T1 JOIN department AS T3 ON T1.dept_id  =  T3.id WHERE T3.dept_name  = 'Computer Science'"}
{"question": "(a novel question, about a table) What are the names of the heads, sorted by age?", "query": "SELECT T1.head_name,  T2.age FROM head_record AS T1 JOIN head AS T2 ON T1.head_id  =  T2.head_id ORDER BY T2.age,  T1.head_name"}
{"question": "What is the name, phone number, type of card, and id of the customer with the least amount of revenue?", "query": "SELECT customer_id,  name,  phone_number,  card_type,  revenue FROM customer WHERE revenue  =  (SELECT min(revenue) FROM customer)"}
{"question": "Show the locations of all the customers who have at most four kinds of cars", "query": "SELECT T1.location FROM customer_addresses AS T1 JOIN customer_cars AS T2 ON T1.address_id  =  T2.address_id WHERE T2.car_type_id  =  (SELECT T3.car_type_id FROM car_types AS T3 WHERE T3.id  =  (SELECT T4.id FROM car_types AS T4 WHERE T4.id  =  (SELECT max(T5.id) FROM car_types AS T5 WHERE T5.id  =  (SELECT min(T6.id) FROM"}
{"question": "What are the names, job titles and ages of all the professors?", "query": "SELECT T1.firstname,  T1.lastname,  T1.title,  T1.age FROM professor AS T1 WHERE T1.title  =  \"Professor\""}
{"question": "(a novel question, about a similar table), after \"", "query": "A:"}
{"question": "What are the names, types, and id's of the different products?", "query": "SELECT name,  type,  id FROM product"}
{"question": "What are the names (only first name) of the clients whose average price is between 20 and 30", "query": "SELECT T1.client_name FROM customers AS T1 WHERE T1.price  >  20 AND T1.price  <  30"}
{"question": "What is the name, gender, and id of each employee with at least one child?", "query": "SELECT T1.first_name,  T1.last_name,  T1.id FROM employee AS T1 JOIN employee_child AS T2 ON T1.emp_id  =  T2.emp_id WHERE T2.child_id  =  1"}
{"question": "(a question about a sql table) List the cities where both the secretary of 'Treasurer' department and the secretary of 'Commerce' were born", "query": "SELECT city FROM cities WHERE city  =  \"New York\" AND (T1.name  =  \"Secretary of 'Commerce'\" OR T1.name  =  \"secretary of 'Treasurer'\" )"}
{"question": "Which table has the most number of employees?", "query": "SELECT T1.table_name,  T2.column_name FROM information_schema.columns AS T1 JOIN information_schema.tables AS T2 ON T1.table_name  =  T2.table_name WHERE T1.table_name  LIKE  \"%employees%\""}
{"question": "What are the names and ids of employees in the account management department?", "query": "SELECT T1.id,  T2.name FROM employees AS T1 JOIN employees AS T2 ON T1.manager_id  =  T2.id"}
{"question": "What is the amount of the salary of each employee? (including salary and bonus)", "query": "SELECT T1.salary,  T1.bonus FROM employee AS T1 GROUP BY T1.salary, T1.bonus"}
{"question": "(a question about a sql table) Let's see if you can answer this question", "query": "SELECT T1.id,  T1.name,  T1.address_type_code,  T1.address_line_1,  T1.city,  T1.state,  T1.zip_code,  T1.country_code,  T1.phone_number,  T1.fax_number,  T1.email_address,  T1.home_phone,  T1.cell_phone,  T1.home_email,  T1.work_phone,  T1.work_email,  T1."}
{"question": "What are the first four letters of the names of all the customers in ascending order?", "query": "SELECT T1.first_name FROM customer AS T1 ORDER BY T1.first_name ASC"}
{"question": "What are the prices of the first and last records in the table?", "query": "SELECT price_in_dollars FROM product WHERE id  =  (SELECT min(id) FROM product)"}
{"question": "What are the names, id, and names of all employees who work in the company named \"Nokia\"?", "query": "SELECT T1.name,  T1.id,  T2.name FROM employees AS T1 JOIN employees AS T2 ON T1.manager_id  =  T2.id WHERE T1.company_name  =  \"Nokia\""}
{"question": "What are the titles and durations of all of the songs in the database?", "query": "SELECT T1.title,  T1.duration FROM song AS T1 WHERE T1.title  =  'Song 1'"}
{"question": "What are the titles of the movies that are either made in the year of 1990 or in the year of 1990?", "query": "SELECT T1.title FROM Movie AS T1 JOIN Year_of_release AS T2 ON T1.movie_id  =  T2.movie_id WHERE T2.year  =  1990"}
{"question": "List the names and ids of all products whose weight is greater than 1000", "query": "SELECT product_name,  product_id FROM products WHERE product_weight  >  1000"}
{"question": "What are the names, id, and first names of all employees who are the president of the company?", "query": "SELECT T1.name,  T1.id,  T1.first_name FROM employee AS T1 WHERE T1.emp_id  =  (SELECT id FROM employee WHERE emp_id  =  (SELECT max(id) FROM employee))"}
{"question": "List the names of all products that have a weight of at least 5 kg", "query": "SELECT T1.Product_Name FROM Products AS T1 WHERE T1.Weight  >  5"}
{"question": "What are the names, city, and number of employees in each department?", "query": "SELECT department_name,  city,  count(*) FROM employees GROUP BY department_name"}
{"question": "How many students are in the same room?", "query": "SELECT T1.room_id FROM Room_Students AS T1 JOIN Room_Students AS T2 ON T1.student_id  =  T2.student_id WHERE T2.room_id  =  T1.room_id"}
{"question": "What are the names in the database which are not in the database \"names\", ordered by first name?", "query": "SELECT T1.firstname,  T1.lastname FROM names AS T1 JOIN people AS T2 ON T1.name  =  T2.name WHERE T2.name  NOT IN (SELECT T3.name FROM names AS T3)"}
{"question": "What is the average amount of debt for students with the last name Smith living in the state of Nebraska?", "query": "SELECT AVG(amount_of_debt) FROM student WHERE last_name  =  'Smith' AND state  =  'Nebraska'"}
{"question": "What are the names and descriptions for the courses that have a rating of 3", "query": "SELECT name,  description FROM course WHERE rating  =  3"}
{"question": "In which year were most departments established?, after \"", "query": "SELECT DISTINCT year_of_establishment FROM department"}
{"question": "How many students have a degree in Pharmaceutical Sciences?", "query": "SELECT T1.name,  T1.* FROM student AS T1 JOIN degree AS T2 ON T1.stu_id  =  T2.stu_id WHERE T2.degree_code  =  \"Pharmaceutical Sciences\""}
{"question": "(How many) What are the names of all the employees who are taller than 5 feet?", "query": "SELECT T1.name FROM employees AS T1 WHERE T1.height  >  5"}
{"question": "", "query": "Examples of some or all task item:"}
{"question": "What are the number of employees who attend a meeting every day?", "query": "SELECT COUNT(*) FROM Attendance WHERE date_from  =  '2015-01-01' AND date_to  =  '2015-01 -01'"}
{"question": "List the names of all the employees who have worked in the last 10 years and are still working", "query": "SELECT T1.employeeid,  T1.name FROM employees AS T1 JOIN employee_history AS T2 ON T1.emp_id  =  T2._id WHERE T2.start_date  >  \"2017-01-01\" AND T2.end_date  <  \"2018-01-01\""}
{"question": "How many people have died during the same hour?", "query": "SELECT T1.date_time,  T1.death_count FROM deaths AS T1 WHERE T1.date_time  =  (SELECT date_time FROM deaths AS T2 WHERE T2.date_time  =  T1.date_time )"}
{"question": "Who are the CEOs of the following companies?", "query": "SELECT T1.CEO_name FROM company AS T1 JOIN CEO AS T2 ON T1.id  =  T2.id WHERE T2.company_name  =  \"Microsoft\""}
{"question": "What is the average age of the people in the table?", "query": "SELECT AVG(age) FROM people"}
{"question": "What are all the products for which the quantity sold has the following properties:", "query": "SELECT name FROM products WHERE quantity_sold  >  0 AND quantity_sold  <  100"}
{"question": "Find the total number of employees of all the restaurants in descending order of revenue", "query": "SELECT T1.employee_id,  T1.name_first,  count(*) FROM employees AS T1 JOIN restaurant AS T2 ON T1.employee_id  =  T2.\"employee_id\" GROUP BY T1.employee_id ORDER BY T1.revenue DESC"}
{"question": "What is the city with the largest number of employees who are engineers?", "query": "SELECT T1.city,  T1.name, T1.employees FROM city AS T1 JOIN employee AS T2 ON T1.city_id  =  T2.city_id WHERE T2.job_title  =  \"Engineer\""}
{"question": "What are the first, last and middle names of all the people in the table \"people\"?", "query": "SELECT first_name,  last_name,  middle_name FROM people"}
{"question": "Show the names of countries that have at least two players", "query": "SELECT T1.country_name FROM country AS T1 JOIN player AS T2 ON T1.country_id  =  T2.country_id WHERE T2.player_id  =  1"}
{"question": "What are the names, ages and genders of the architects who were responsible for designing the bridges and mills?", "query": "SELECT T1.first_name,  T1.last_name,  T1.age,  T1.gender FROM architects AS T1 WHERE T1.name IN (SELECT T2.name FROM architects AS T2 WHERE T2.name IN (SELECT T3.name FROM architects AS T3 WHERE T3.name IN (SELECT T4.name FROM architects AS T4 WHERE T4.name IN (SELECT T5.name FROM architects AS T5 WHERE T5.name IN (SELECT T6.name FROM architects AS T6 WHERE T6.name IN (SELECT T7."}
{"question": "(a question about a sql table), after \"", "query": "(the sql query to answer the questions), after \""}
{"question": "What is the maximum number of students for a course in the semester of 2006?", "query": "SELECT T1.max_student_number FROM Course_Enrollments AS T1 JOIN Course_Seats AS T2 ON T1.course_id  =  T2.course_id WHERE T2.semester_id  =  \"2006\""}
{"question": "Return the names of the students who have a GPA less than 3", "query": "SELECT T1.Fname,  T1.Lname FROM STUDENT AS T1 WHERE T1.GPA  <  3"}
{"question": "What are the minimum and maximum number of cows across all farms?", "query": "SELECT MIN(cow_count),  MAX(cow_count) FROM farm"}
{"question": "Which one of the companies that makes the most sales also has the greatest sales per employee?", "query": "SELECT T1.company_name,  T1.company_id,  T1.sales_total,  T1.sales_per_employee FROM company AS T1 JOIN sales AS T2 ON T1.company_id  =  T2.company_id WHERE T1.sales_total  >  T2.sales_total AND T1.sales_per_employee  >  T2.sales;"}
{"question": "Show the names of the top 10 cities with the most residents", "query": "SELECT city_code,  count(*) FROM city GROUP BY city_code ORDER BY count(*) DESC;"}
{"question": "What are the names for the following types of people?", "query": "SELECT T1.name FROM people AS T1 JOIN people_types AS T2 ON T1.type_id  =  T2.type_id WHERE T2.name  =  \"student\""}
{"question": "Find the names of all employees in the company and their total commission", "query": "SELECT T1.name,  T2.total_commission FROM employees AS T1 JOIN commission AS T2 ON T1.employee_id  =  T2.employee_id"}
{"question": "What are the names, ages and last names of the students taught by M", "query": "SELECT T1.name,  T1.age,  T1.last_Name FROM students AS T1 JOIN teacher AS T2 ON T1.teacher_id  =  T2.[id]"}
{"question": "What is the first name of the man whose father is a doctor?", "query": "SELECT T1.first_name FROM Person AS T1 JOIN Father AS T2 ON T1.id  = T2.id WHERE T2.father_id  =  '1'"}
{"question": "Find the names of all staff members who have taught in the Computer Science department", "query": "SELECT T1.name FROM staff AS T1 JOIN courses AS T2 ON T1.course_id  =  T2.course_id WHERE T2.name  =  \"Computer Science\""}
{"question": "How many different types of products are there?", "query": "SELECT T1.type_name FROM product AS T1 WHERE T1.type_id  =  1"}
{"question": "A:\n\nNot a complete answer, but it is too long for a comment", "query": "SELECT * FROM students WHERE id  =  '1'"}
{"question": "What is the average age of the employees working in the different departments?", "query": "SELECT AVG(T1.age) FROM employees AS T1 JOIN department AS T2 ON T1.department_id  =  T2.department_id"}
{"question": "What are the names, born states and ages of the heads of departments ordered by birth date?", "query": "SELECT T1.head_name,  T1.head_state,  T1.head_age FROM department AS T1 JOIN head_of_department AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.head_name, T1.head_state, T1.head_age ORDER BY T1.head_date_of_birth ASC"}
{"question": "What are the year, name and cost of all the classes that a student has taken?", "query": "SELECT T1.year,  T1.name, T1.cost FROM class AS T1 JOIN class_student_info AS T2 ON T1.class_id  =  T2.class_id WHERE T2.student_id  =  \"1\""}
{"question": "What are the cities that have at least three colleges?", "query": "SELECT T1.city FROM cities AS T1 JOIN colleges AS T2 ON T1.city  =  T2.city GROUP BY T1.city HAVING count(*)  =  3"}
{"question": "What is the name, location, and id of the school in which the most students are enrolled?", "query": "SELECT T1.name,  T1.location,  T1.id FROM school AS T1 WHERE T1.student_count  =  (SELECT max(T2.student_count) FROM school AS T2)"}
{"question": "What are the names, birth dates, and ages of the nine most famous mathematicians?", "query": "SELECT T1.first_name,  T1.last_name,  T1.age FROM Person AS T1 JOIN Person_Biography AS T2 ON T1.id  = T2.person_id WHERE T2.biography  =  'Famous mathematicians' ORDER BY T1.first_name, T1.last_name, T1.age"}
{"question": "How many people have a first name ending with \"y\"?", "query": "SELECT count(*)  FROM person WHERE first_name LIKE \"y%\";"}
{"question": "What is the average age of all female students?", "query": "SELECT AVG(age) FROM Student WHERE gender = \"Female\""}
{"question": "What are the names, addresses, and phone numbers of the last three customers who bought a car worth more than 20,000?", "query": "SELECT T1.customer_name,  T1.address_1,  T1.address_2,  T1.phone_number FROM customer AS T1 WHERE T1.cust_id IN (SELECT T2.cust_id FROM customer AS T2 WHERE T2.cust_id  >  3 AND T2.cust_price > 20)"}
{"question": "List the names and IDs of students who are not registered in any courses", "query": "SELECT T1.id,  T1.student_id FROM student AS T1 WHERE NOT EXISTS (SELECT T2.id FROM course AS T2 WHERE T2.student_id = T1.id)"}
{"question": "What is the number in the table when \"", "query": "SELECT count(*) AS count FROM employees"}
{"question": "How many times did the player with last name \"Zamani\" have been injured?", "query": "SELECT T1.player_id,  T1.name_first,  'injuries' AS T2.type_of_injury FROM player AS T1 JOIN player AS T2 ON T1.name_last  =  T2.name_last WHERE T1.name_last  LIKE 'Zamani' AND T1.player_id !=  T2.player_id AND T1.player_id IN (SELECT player_id FROM player_injuries WHERE player_id  =  T2.\"player_id\")"}
{"question": "What is the average age of each basketball team?", "query": "SELECT AVG(age) FROM basketball_team"}
{"question": "What is the name, id, and description of the item in the inventory which has the highest price?", "query": "SELECT T1.title,  T1.id,  T1.description FROM item AS T1 JOIN inventory AS T2 ON T1.id  =  T2.item_id WHERE T2.price  =  (SELECT max(T3.price) FROM item AS T3 WHERE T3.id  =  T1.item_id)"}
{"question": "Find the oldest student in the class", "query": "SELECT min(Student_ID) FROM Student_Class"}
{"question": "What is the name", "query": "SELECT name FROM Person"}
{"question": "What is the average age of the students in the class \"A\"?", "query": "SELECT T1.age FROM students AS T1 JOIN class AS T2 ON T1.class_id  =  T2.class_id WHERE T2.name  =  \"A\""}
{"question": "List the first name and last name of the students that major in computer science", "query": "SELECT T1.Fname,  T1.Lname FROM student AS T1 JOIN major AS T2 ON T1.major  =  T2.major WHERE T2.name  = \"Computer Science\""}
{"question": "What are the names on the front doors of the homes in the neighborhood?", "query": "SELECT T1.name FROM front_door AS T1 WHERE T1.house_id  =  (SELECT T2.house_id FROM house AS T2 WHERE T2.city  =  \"New York\")"}
{"question": "What was the sales for the first half of this year?", "query": "SELECT SUM(T1.sales) FROM sales AS T1 WHERE T1.date >= '2011-01-01' AND T1.date <= '2011-06-30'"}
{"question": "List the ids of the students who have at least two friends", "query": "SELECT T1.student_id FROM student AS T1 JOIN friend AS T2 ON T1.student_id  =  T2.\"friend_id\" GROUP BY T1.student_id HAVING count(T2.\"friend_id\")  >=  2"}
{"question": "What are the names, ids and ratings of the reviewers with the most review points?", "query": "SELECT T1.name,  T1.[id],  T1.rating FROM reviewer AS T1 JOIN review_history AS T2 ON T1.reviewer_id  =  T2.[id] GROUP BY T1.[id] ORDER BY T1.rating DESC"}
{"question": "(a question about a sql table) Return the themes of farm competitions, ordered by year ascending", "query": "SELECT T1.theme,  T2.year FROM competitions AS T1 JOIN competitions AS T2 ON T1.competition_id  =  T2._id GROUP BY T1.theme,  T1.year ORDER BY T1.year ASC"}
{"question": "What is the average number of employees of companies with more than 10000 employees?", "query": "SELECT AVG(count(*)),  AVG(count(*)),  COUNT(*) FROM (SELECT COUNT(*) FROM company WHERE company.employees > 10000) AS T1"}
{"question": "Find all the names of the players who have at least two different positions", "query": "SELECT T1.player_name FROM player AS T1 JOIN position AS T2 ON T1.player_id  =  T2._player_id WHERE T2.position_id  =  '1' OR T2.position_id  >  '1'"}
{"question": "What are the average number of students per class in each school in New York City?", "query": "SELECT avg(students_per_class) FROM school_class_info"}
{"question": "Show the number of employees", "query": "SELECT COUNT(*) FROM employees"}
{"question": "Which is the name of the store in the city that has the largest number of stores?", "query": "SELECT T1.store_name FROM store AS T1 WHERE T1.city  =  \"New York\" AND T1.store_count  >  1"}
{"question": "What is the total revenue of firms that have annual revenue below 100", "query": "SELECT SUM(revenue) FROM firms WHERE annual_revenue  <  100"}
{"question": "List the names and addresses of all the users who have a credit card with credit limit greater than 10,000", "query": "SELECT name,  address FROM users WHERE credit_limit  >  10000"}
{"question": "(a novel question, about a", "query": "Examples of some or all task item:"}
{"question": "(a question about a sql table) Show the name of the student who has the most grades in the class", "query": "SELECT T1.student_name FROM student AS T1 JOIN grades AS T2 ON T1.student_id  =  T2.[student_id] WHERE T2.grade  =  max(T2.grade)"}
{"question": "What is the name, gender, and age of the most recent student?", "query": "SELECT T1.name,  T1.gender,  T1.age FROM students AS T1 WHERE T1.last_name  =  \"Smith\""}
{"question": "Show the names, contact information and the corresponding ids of all customers who have a spouse relationship with one of the employees", "query": "SELECT T1.name,  T1.email,  T1.phone,  T1.address,  T1.city,  T1.state,  T1.zip,  T1.country,  T1.phone_type,  T1.phone_number,  T1.email_type,  T1.email_address,  T1.email_id,  T1.email_status,  T1.email_sent,  T1.email_read,  T1.email_forwarded,  T1.email_de"}
{"question": "(Find the names of students who have not yet registered for a course yet", "query": "SELECT T1.student_id,  T2.name FROM student_record AS T1 JOIN student AS T2 ON T1.id  = T2.id WHERE T1.student_id  NOT IN (SELECT T3.student_id FROM student_course_enrolment AS T3 WHERE T3.student_id  =  'T1.student_id')"}
{"question": "Find the customer id with the most orders", "query": "SELECT customer_id FROM Order_items WHERE order_id  =  (SELECT max(order_id) FROM Order_items)"}
{"question": "What are the full names of the students who have the highest scores on each of the three tests?", "query": "SELECT T1.student_first_name,  T1.student_last_name,  T1.student_id,  T1.test_score FROM students AS T1 JOIN tests AS T2 ON T1.student_id  =  T2.student_id  WHERE T2.test_name  =  \"English\"  OR T2.test_name  ==  \"Math\"  OR T2.test  ==  \"Science\""}
{"question": "Find the total number for the number of employees in each company", "query": "SELECT T1.employee_id,  T1.name,  T1.salary FROM employee AS T1 JOIN company AS T3 ON T1.company_id = T3.company_id GROUP BY T1.employee_id ORDER BY T1.employee_id"}
{"question": "(a novel question, about a new table) What are the statuses of the cities that have hosted the most competitions?", "query": "SELECT T1.city_id,  T1.city_name,  T1.city_state,  T1.city_country,  T1.city_population,  T1.city_latitude,  T1.city_longitude,  T1.city.city_status FROM city AS T1 WHERE T1.city_id  IN (SELECT T2.city_id FROM city AS T2 WHERE T2.city_status  =  'active') GROUP BY T1.city_id ORDER BY T1.city_population DESC LIMIT 1"}
{"question": "(a question about a sql table) Which of these companies are not known to be in the healthcare industry?", "query": "SELECT name FROM company WHERE company_type_code  =  \"Other\""}
{"question": "What are the names, ordered by credits?", "query": "SELECT CName FROM Course ORDER BY Credits"}
{"question": "What are the names, salaries and ids of employees of the company that opened the most offices?", "query": "SELECT T1.name,  T1.\"salary\",  T1.id FROM employees AS T1 JOIN offices AS T2 ON T1.employee_id  =  T2.\"employee_id\" WHERE T2.company_id  =  \"1\""}
{"question": "What are the names and ids of the students who have been accepted by the University of Arizona?", "query": "SELECT T1.student_id,  T1.first_name,  T1.last_name,  T1.gender,  T1.address_id,  T1.city,  T1.state,  T1.zip_code,  T1.country,  T1.email,  T1.phone_number,  T1.major,  T1.year_of_graduation,  T1.graduation_date,  T1.graduation  FROM students AS T1 WHERE T1.state  =  'Arizona'"}
{"question": "What is the name and id of two employees who have the same email address and joined the company at the same time?", "query": "SELECT T1.name,  T1.id FROM employee AS T1 JOIN employee AS T2 ON T1.email  =  T2.email WHERE T1.id  =  T2.employee_id"}
{"question": "Show all products that are not manufactured by any of the companies listed in the first table", "query": "SELECT T1.code,  T2.name FROM products AS T1 LEFT JOIN manufacturers AS T2 ON T2.code  =  T1.code WHERE T2.name IS NULL"}
{"question": "What is the average grade of students in the class with code 10019?", "query": "SELECT avg(grade) FROM students WHERE class_id  =  10019"}
{"question": "What is the name and number of the student who made the first reservation?", "query": "SELECT T1.student_id,  T1.reservation_id FROM students AS T1 JOIN reservations AS T2 ON T1.student_id  =  T2.student_id WHERE T2.reservation_id  =  (SELECT reservation_id FROM reservations WHERE student_id  =  T1.student_id )"}
{"question": "What are the names, and first names, of the students who are registered for the \"Cultivate\" session?", "query": "SELECT T1.firstname,  T1.lastname FROM students AS T1 JOIN session AS T2 ON T1.student_id  =  T2.[session_id] WHERE T2.name  = \"Cultivate\""}
{"question": "What is the name and age of all soccer players?", "query": "SELECT T1.name,  T1.age FROM player AS T1 WHERE T1.sport  =  \"soccer\""}
{"question": "What is the maximum number of employees who are located in each city?", "query": "SELECT city_name,  count(*) AS \"Number of employees\" FROM employees GROUP BY city_name HAVING \"Number of employees\"  >  \"max\""}
{"question": "What are the names who have at least one friend with first name \"Jennifer\"?", "query": "SELECT name_first,  name_last FROM player AS T1 JOIN player AS T2 ON T1.friend_id  =  T2.friend_id WHERE T2.name_first  =  \"Jennifer\""}
{"question": "What are the names and ids of movies with 'DVD' in title?", "query": "SELECT T1.title,  T1.id FROM movies AS T1 WHERE T1.title  =  'DVD'"}
{"question": "What is the id of student who studies the most on average?", "query": "SELECT T1.student_id,  T2.avg_studying FROM student AS T1 JOIN (SELECT T1.student_id, T2.avg_studying FROM (SELECT T1.student_name, T2.avg_study_time FROM student AS T1 JOIN ( SELECT T1.student_name,  T2.avg_study_time FROM student AS T1, student AS T2 WHERE T1.student_id  =  T2.student_id ) AS T3 ) AS T4 ON T1.student_id  ==  T4."}
{"question": "Find students whose name begins with \"C\"", "query": "SELECT T1.first_name,  T1.last_name FROM Students AS T1 WHERE T1.first_name  LIKE 'C%'"}
{"question": "What is the name and gender of all employees who works at both offices?", "query": "SELECT T1.employeeid,  T1.name,  T1.gender FROM employees AS T1 JOIN employees AS T2 ON T1.office_id  =  T2.office_id WHERE T1.office_id  <>  T2.office_id"}
{"question": "What are the details of each store (i", "query": "SELECT T1.store_name,  T1.store_address,  T1.store_city,  T1.store_state,  T1.store_zip,  T1.store_phone,  T1.store_fax,  T1.store_email,  T1.store_website,  T1.store_hours,  T1.store_manager,  T1.store_latitude,  T1.store_longitude,  T1.store__latitude,  T1. store__longitude,  T1."}
{"question": "What is the id, name of an employee who has the same name as the employee who has the highest salary among the employees who have the same name as the", "query": "SELECT T1.id,  T1.name,  T1.salary FROM employee AS T1 JOIN employee AS T2 ON T1.name  =  T2.name WHERE T1.salary  >  T2.salary"}
{"question": "Find the numbers of the id in the list that are equal to the total number of courses that they register and the total number of courses that they don't register", "query": "SELECT T1.id,  T1.total_courses,  T1.total_non_courses FROM student AS T1 JOIN courses AS T2 ON T1.id  =  T2.id"}
{"question": "find the name of the artist who made a movie called \"Pink Panther\"", "query": "SELECT name FROM artist WHERE name  =  \"Pink Panther\""}
{"question": "What are the names, ages and photos of all the students?", "query": "SELECT T1.student_id,  T1.name,  T1._age,  T1.photo FROM student AS T1 GROUP BY T1.student_id ORDER BY T1.name ASC"}
{"question": "What is the name, id and city of the employee of the company who is in the \"sales\" department and has a bachelor degree?", "query": "SELECT T1.name,  T1.\"id\",  T1.city FROM employee AS T1 JOIN department AS T1.department_id JOIN location AS T1.location_id WHERE T1.department_name  =  \"sales\" AND T1.degree  =  \"Bachelor\""}
{"question": "What is the name and department of the employee who is in charge of the department of the company that has the largest number of employees?", "query": "SELECT T1.name,  T1.department FROM employee AS T1 JOIN department AS T3 ON T1.department  =  T3.department WHERE T3.department  =  (SELECT department FROM department WHERE count(*)  =  (SELECT count(*) FROM employee))"}
{"question": "List the id of the customer who made the first rent", "query": "SELECT T1.customer_id FROM customer AS T1 JOIN customer_history AS T2 ON T1.id  = T2.customer_id WHERE  T2.date_from  =  '2016-01-01'"}
{"question": "Return the details of all customers who have at least 2 mailouts with outcome code 'Order'", "query": "SELECT T1.Customer_id,  T1.Customer_name,  T1.Customer_address,  T1.Customer_city,  T1.Customer_state,  T1.Customer_zip,  T1.Customer_phone,  T1.Customer_email,  T1.Customer_credit_score,  T1.Customer_account_type,  T1.Customer_gender,  T1.Customer_dob,  T1.Customer_marriage,  T1.Customer_children,  T1.Customer_education,  T"}
{"question": "What are the numbers of students in the three most popular majors?", "query": "SELECT T1.major_code,  T1.count(*) FROM students AS T1 GROUP BY T1.major_code ORDER BY T1.count(*) DESC LIMIT 3;"}
{"question": "What are the full names of students with at least two different names?", "query": "SELECT T1.first_name,  T1.last_name FROM student AS T1 JOIN student AS T2 ON T1.id  =  T2.id WHERE T2.first_id !=  T1.id AND T2.last_id !=  T1.id"}
{"question": "Find the names of actors, actresses, and TV shows that worked in the show \"The Big Bang Theory", "query": "SELECT T1.actor_id,  T1.actor_name,  T1.actor_last_name,  T1.actress_id,  T1.actress _name,  T1.actess_last_name,  T2.tv_show_id,  T2.tv_series_name,  T2.actor_id,  T2.actor_name,  T2.actress_id,  TV_Show_Name.actor_id,  TV_Show.actor_name,  TV_Show.actor _last"}
{"question": "(a novel question, about a table), after \"", "query": "(the sql query to answer the query), after \""}
{"question": "What are the names, email addresses, and phone numbers of students in the first three rows?", "query": "SELECT name,  email,  phone FROM students WHERE student_id  IN (1, 2, 3)"}
{"question": "How many students have the following characteristics: (1) they are female and (2) they have a major in accounting?", "query": "SELECT T1.student_id,  T1.gender,  T1.major FROM student AS T1 WHERE T1.gender  =  'F' AND T1.major  =  'Accounting'"}
{"question": "What are the names, dates, and types of the first 10 orders that were placed in the past month?", "query": "SELECT T1.name,  T1.[date],  T1.type FROM order AS T1 WHERE T1.date >=  '01/01/2015' AND T1.date  <  '01/31/2015'"}
{"question": "What is the maximum number of students in the class?", "query": "SELECT MAX(T2.student_id) FROM students AS T1 JOIN class_room AS T2 ON T1.id  =  T2.classroom_id"}
{"question": "What is the average number of years of experience for all employees?", "query": "SELECT AVG(T2.years_of_experience) FROM employee AS T1 JOIN employee AS T2 ON T1.id  =  T2.employee_id"}
{"question": "(a novel question, about a same table), after \"", "query": "A:"}
{"question": "What are the names, ages, and incomes for all of the customers in the customer table?", "query": "SELECT customer_id,  customer_name,  customer_age,  customer_income FROM customer"}
{"question": "What is the total number of students in the class named \"Mathematics\"?", "query": "SELECT T1.student_id FROM students AS T1 WHERE T1.class_name  =  \"Mathematics\""}
{"question": "Find the name and number of the products whose total order quantity is the largest in the database", "query": "SELECT T1.product_name,  T1.quantity FROM product AS T1 WHERE T1.quantity  =  (SELECT MAX(T2.quantity) FROM product AS T2)"}
{"question": "Who is the manager of the store named \"FJA\" and what is the id and name of the employee who is in charge of the store's marketing?", "query": "SELECT T1.manager_id,  T1.name FROM store_manager AS T1 JOIN store_manager_employee AS T2 ON T1.manager_id  =  T2.manager_id WHERE T1.store_name  =  \"FJA\" AND T2.employee_id  =  \"1\""}
{"question": "What is the total cost of the products of all the stores?", "query": "SELECT T1.product_id,  T1.product_name,  T1.product_price,  T1.product_quantity,  T1.product_total_price,  T1.total_price FROM products AS T1"}
{"question": "Find the number of people aged 25 or older who have a credit card", "query": "SELECT COUNT(*) FROM people WHERE age >= 25 AND has_credit_card;"}
{"question": "What are the ids and names of the architects who built two bridges (or one mill)", "query": "SELECT T1.ID,  T1.NAME,  T1.GENDER FROM architect AS T1 JOIN bridge_or_mill AS T2 ON T1.ID  =  T2.arch_id GROUP BY T1.ID HAVING count(*)  >  1 UNION SELECT T1.ID,  NULL,  T1.GENDERS FROM architect AS T1 JOIN mill_or_bridge AS T2 ON T1.NAME  =  \"Mill\" OR T1.NAME  =  'Bridge' GROUP BY T1.ID H AVING count("}
{"question": "Find the total number of books", "query": "SELECT count(*)  FROM books"}
{"question": "What are all the names of the employees who have the same city name as Ilya?", "query": "SELECT T1.name FROM employee AS T1 JOIN city AS T2 ON T1.city_id  =  T2.\"city_id\" WHERE T2.name  =  \"Ilya\""}
{"question": "Show the names of the artists with the most number of performances", "query": "SELECT T1.artist_name FROM artist_record AS T1 JOIN performance AS T2 ON T1.artist_id  =  T2.artist_id GROUP BY T1.artist_id ORDER BY COUNT(*) DESC"}
{"question": "Find the name of employees who have a degree in computer science at least 10 years ago", "query": "SELECT name FROM Employee WHERE degree_in_computer_science  >=  10 AND degree_in_computer_science <  20"}
{"question": "How many are the students who have taken course 501?", "query": "SELECT T1.student_id FROM students AS T1 JOIN courses AS T2 ON T1.course_id  =  T2.id WHERE T2.course_code  =  \"501\""}
{"question": "What are the names and the first names of all the students who got an A on the test?", "query": "SELECT T1.Fname,  T1.Lname FROM Student AS T1 WHERE T1.A = 1"}
{"question": "What is the name and age of the student in the course with topic \"Introduction to Logic\"?", "query": "SELECT T1.name,  T1.age FROM student AS T1 JOIN course AS T2 ON T1.id  =  T2.id WHERE T2.topic  =  \"Introduction to Logic\""}
{"question": "What are the names, ages, and heights of all the students who studied abroad in the last year", "query": "SELECT T1.name,  T1.age,  T1.height FROM students AS T1 WHERE T1.year  =  \"last year\""}
{"question": "What are the names, occupations and locations of all the people that have worked with the author named \"M", "query": "SELECT T1.name,  T1._id,  T1.occupation,  T1.location FROM person_profiles AS T1 WHERE T1.name  =  \"M\""}
{"question": "(a novel question, about a same table)", "query": "SELECT * FROM students WHERE id  =  '1'"}
{"question": "What are the titles of all the movies in the theater?", "query": "SELECT title FROM Movie"}
{"question": "Show the names of the students who have not taken a course", "query": "SELECT T1.student_name FROM students AS T1 WHERE NOT EXISTS (SELECT T2.student_id FROM courses AS T2 WHERE T2.id  =  T1.course_id)"}
{"question": "What are the names and salaries of all the courses in the department?", "query": "SELECT course_name,  course_salary FROM courses"}
{"question": "What is the id of the employee who has bought the most number of products?", "query": "SELECT T1.employee_id FROM employees AS T1 JOIN products AS T2 ON T1.employee_id  =  T2.[employee_id] WHERE T2.product_id  =  (SELECT T3.product_id FROM products AS T3 WHERE T3.product_id  =  T2.product_id ORDER BY T3.product_id DESC LIMIT 1)"}
{"question": "What are the names and the first names of all the students with the highest GPA?", "query": "SELECT T1.Fname,  T1.Lname FROM student AS T1 JOIN student AS T2 ON T1.Fname  =  T2.Fname WHERE T1.GPA  >  T2.GPA ORDER BY T1.GPA DESC LIMIT 1"}
{"question": "What is the name and id of the first grade in which the students have a GPA higher than 90%", "query": "SELECT T1.name,  T1.id FROM student AS T1 WHERE T1.GPA  >  0.9"}
{"question": "What are the ids of the students for the course \"Data Management\"?", "query": "SELECT T1.student_id FROM student AS T1 JOIN course AS T2 ON T1.student_id  =  T2.student_id WHERE T2.course_code  =  \"Data Management\""}
{"question": "What is the first name of students in course RSD-100?", "query": "SELECT name_first FROM student WHERE course_id  =  'RSD-100'"}
{"question": "What are the names, first names, and last names of all the players whose training hours is between 500,000 and 1", "query": "SELECT T1.name FROM Player AS T1 WHERE T1.HS  BETWEEN 500,000 AND 1"}
{"question": "What is the name of the first movie for which the director is the same as the actor in the cast?", "query": "SELECT T1.movie_name,  T1.director,  T1.actor FROM movies AS T1 WHERE T1.director  =  \"Terry Gilliam\" AND T1.actor  =  \"David Gilliam\""}
{"question": "What are the first three things that you do at home when you get home?", "query": "SELECT T1.item_id,  T1.item_name,  T1.item_description,  T1.item_price,  T1.item_quantity,  T1.item_unit,  T1.item_category,  T1.item_status,  T1.item_date_added,  T1.item_last_modified,  T1.item_created_by,  T1.item_modified_by,  T1.customer_id,  T1.product_id,  T1.quantity,  T"}
{"question": "What is the name, number and id of the books in the library?", "query": "SELECT T1.book_name,  T2.book_number,  T3.book_id FROM books AS T1 JOIN books_in_library AS T2 ON T1.book_id  =  T2._id JOIN books_in_library AS t3 ON T2.book_id  =  t3.book_id"}
{"question": "What are the ids of the students whose names are not \"Ana\", \"Albert\", and \"Ardelle\"?", "query": "SELECT id,  name FROM students WHERE name NOT IN (\"Ana\", \"Albert\", \"Ardelle\")"}
{"question": "List the id of students who attended statistics courses in the order of attendance date (after \"", "query": "SELECT T1.id FROM students AS T1 JOIN courses AS T2 ON T1.course_id  =  T2.course_id WHERE T2.name  =  \"Statistics\" ORDER BY T2.start_date DESC"}
{"question": "What is the product id for the product with the largest price?", "query": "SELECT T1.product_id FROM product AS T1 WHERE T1.price  >  (SELECT T2.product_id FROM product AS t2 WHERE t2.price  >  T1.price)"}
{"question": "How many students are there in a class?", "query": "SELECT COUNT(*) AS count FROM students"}
{"question": "What are the names, addresses and telephone numbers of the schools with the highest enrollment?", "query": "SELECT T1.name,  T1.address,  T1.phone FROM schools AS T1 JOIN student AS T2 ON T1.school_id  =  T2.school_id WHERE T2.enrollment  >  1000"}
{"question": "(a new question)", "query": "(the sql query to answer the new question)"}
{"question": "Find the names of students who have never been in a dance club", "query": "SELECT T1.name FROM student AS T1 WHERE NOT EXISTS (SELECT T2.name FROM student AS T2 WHERE T2.id  =  T1.id AND T2.club_id  =  1)"}
{"question": "What is the name, id and age of all students who are both females and have a last name?", "query": "SELECT T1.name,  T1.id,  T1.age FROM students AS T1 WHERE T1.gender  =  \"female\" AND T1.last_name  =  \"Smith\""}
{"question": "(a novel question, about a table, about a different table), after \"(", "query": "Examples of some or all task item:"}
{"question": "\"What are the names of all the engineers who have a family member who is a pilot?\"", "query": "SELECT T1.first_name,  T1.last_name FROM Employees AS T1 JOIN Employees AS T2 ON T1.employee_id  =  T2.\"employee_id\" WHERE T2.employee_id  =  \"employee_id\" AND T2.employee_id !=  \"employee_id\" AND (T2.first_name  LIKE \"%Engineer%\" OR T2.last_name  LIKE \"%Engineers%\")"}
{"question": "What is the name the longest-running television series that is not a documentary?", "query": "SELECT T1.Name FROM series AS T1 JOIN series_episodes AS T2 ON T1.Series_ID  =  T2.Series_ID WHERE T2.Episode_ID  =  (SELECT MAX(T3.Episode_ID) FROM series_episodes AS T3)"}
{"question": "What is the average salary of all male professors with 5 years experience?", "query": "SELECT T1.avg(T2.salary) FROM professors AS T1 JOIN employees AS T2 ON T1.employee_id  =  T2.id WHERE T1.sex  =  'M' AND T1.years_experience  =  5"}
{"question": "What are the names and salaries of the customer service employees with the highest average trust score?", "query": "SELECT T1.firstname,  T1.lastname,  T1.salary,  T1.trust_score FROM employee AS T1 WHERE T1.trust_score  >  (SELECT AVG(T2.trust_score) FROM employee AS T2 WHERE T2.firstname  =  T1.firstname AND T2.lastname  =  T1.lastname)"}
{"question": "List the first names of all students that have a height between 150 and 180", "query": "SELECT name FROM student WHERE height BETWEEN 150 AND 180"}
{"question": "What are the names, locations and products of the enzymes which has a 'inhibitor' interaction?", "query": "SELECT T1.enzyme_name,  T1.location_name,  T1.product_name FROM enzyme AS T1 JOIN enzyme_interaction AS T2 ON  T1.enzyme_id  =  \"T2.enzyme_id\" WHERE T2.interaction_name  =  \"inhibitor\""}
{"question": "How many employees are working in a company on Monday?", "query": "SELECT T1.name FROM employees AS T1 JOIN employees AS T2 ON T1.manager_id  =  T2.id WHERE T1.date_of_birth  =  '01/01/2000' AND T2.date_of_birth  <  '01/01/2000';"}
{"question": "How many different roles is there in the project staff?", "query": "SELECT T1.role_id,  T1.role_name FROM roles AS T1 WHERE T1.role_name  =  \"Project Manager\""}
{"question": "What is the average number of students that took the course: \"English 101\" or \"English 102\" in the class \"Computer Science\"?", "query": "SELECT AVG(count) FROM (SELECT count(*) FROM student WHERE course_id  =  \"English 101\" OR course_id  =  \" English 102\") AS T1"}
{"question": "Show the details of the trip record where number of bikes is equal to the number of cyclists", "query": "SELECT T1.trip_id,  T2.name,  T2.start_time,  T2.end_time,  T2.start_latitude,  T2.start_longitude,  T2.end_latitude,  T2.end_longitude,  T2.start_address,  T2.end_address,  T2.start_city,  T2.end_city,  T2.start_state,  T2.end_state,  T2.start_zip,  T2.end_"}
{"question": "What is the first name of the customer who has the most number of cards?", "query": "SELECT T1.customer_first_name FROM customers AS T1 WHERE T1.card_count  =  (SELECT MAX(T2.card_count) FROM customers AS T2)"}
{"question": "What is the name of the first album of the band that is a sequel to the band's first album?", "query": "SELECT DISTINCT album_name FROM album WHERE album_name  =  \"The First Album\""}
{"question": "How many cities does Albuquerque have?", "query": "SELECT COUNT(*),  city FROM city"}
{"question": "what is the most common name of the products that have no colors?", "query": "SELECT name FROM products WHERE color  =  \"null\""}
{"question": "Find the first name and last name of students with a grade of above 3", "query": "SELECT T1.student_id,  T1.firstname,  T2.lastname FROM student AS T1 JOIN student_grades AS T2 ON T1.student_id  =  T2.\"student_id\" WHERE T2.grade  =  3"}
{"question": "What are the names, first names, and genders of all students attending the University of Texas at El Paso?", "query": "SELECT T1.name,  T1.* FROM student AS T1 WHERE T1.university_id  =  \"UTEP\""}
{"question": "List the names of people in a family tree", "query": "SELECT T1.name FROM family_tree AS T1 JOIN family_tree_child AS T2 ON T1.parent_id  =  T2._id WHERE T2.name  = \"John\""}
{"question": "What is the average number of trips of each user?", "query": "SELECT T1.user_id,  T2.trip_count FROM user AS T1 JOIN trip AS T2 ON T1.user_id  =  T2.user_id GROUP BY T1.user_id ORDER BY T2.trip_count DESC"}
{"question": "(a novel question, about a table)", "query": "SELECT T1.column_name,  T2.column_name,  T3.column_name FROM table_name AS T1 JOIN table_name AS T2 ON T1.column_id  =  T2.column_id JOIN table_name AS T3 ON T2.column_id  ="}
{"question": "What is the average rent of the apartments in which the first bedroom is smaller than the second bedroom?", "query": "SELECT avg(Rent) FROM Apartment WHERE First_Bedroom_Size  <  Second_Bedroom_Size"}
{"question": "Find the number of employees who have a salary above $50", "query": "SELECT count(*) AS count FROM employees WHERE salary  >  50"}
{"question": "What is the average number of days that had an average humidity above 50 and an average visibility above 5?", "query": "SELECT AVG(T1.humidity),  AVG(T1.visibility) FROM (SELECT T1.humidity,  T1.visibility FROM weather AS T1) AS T2"}
{"question": "How many students are in which colleges?", "query": "SELECT T1.cName,  T1.enr,  T1.student_id FROM college AS T1 JOIN student AS T2 ON T1.enr  =  T2.enr WHERE T2.student_id  =  '1'"}
{"question": "List the names of the products that are not in the same department as the ones with the same name", "query": "SELECT name FROM products WHERE name NOT IN (SELECT name FROM products WHERE department_id = 1)"}
{"question": "What are the id, name, and city of the person with the most number of degrees?", "query": "SELECT T1.id,  T1.name,  T1._city FROM person AS T1 JOIN degrees AS T2 ON T1.id  =  T2.person_id WHERE T2.degree_type  =  'Bachelor' AND T2.degree_type !=  'Master' AND T2.degree_id  =  (SELECT MAX(degree_id) FROM degrees)"}
{"question": "What are the id, employee id, and employee number of each employee who works at the firm with id 1234?", "query": "SELECT T1.employee_id,  T1.employee_number,  T1.employee_name FROM employee AS T1 JOIN firm AS T2 ON T1.firm_id  =  T2"}
{"question": "How many types of cars are there?", "query": "SELECT T1.type FROM cars AS T1 GROUP BY T1.type"}
{"question": "What are the names and ids of the cities in each country?", "query": "SELECT city_name,  city_id FROM city WHERE country_id  =  \"US\""}
{"question": "What is the name and phone number of the store that sells the most expensive sunglasses?", "query": "SELECT T1.store_name,  T2.phone_number FROM stores AS T1 JOIN products AS T2 ON T1.store_id  =  T2._id WHERE T2.price  =  (SELECT MAX(price) FROM products)"}
{"question": "How many people live in the city of San Francisco?", "query": "SELECT count(*)  FROM city"}
{"question": "What are the names and number of cities that were founded before and after 1790?", "query": "SELECT T1.name,  T1.number FROM cities AS T1 WHERE T1.founded_before_1790  =  1 AND T1.founded_after_1790  =  1"}
{"question": "What is the number of different items in the database?", "query": "SELECT DISTINCT item FROM item"}
{"question": "What are the names, description and unit of measure of products in the 'Herbs' column?", "query": "SELECT T1.name,  T1.description,  T1.unit_of_measure FROM product AS T1 WHERE T1.product_id  IN (SELECT T2.product_id FROM product AS T2 WHERE T2.product_id  IN ( SELECT T3.product_id FROM product AS t3 WHERE t3.product_id  IN ("}
{"question": "How many people are taking the course \"Arts and Crafts\"?", "query": "SELECT count(*)  FROM students WHERE course_id  =  \"Arts and Crafts\""}
{"question": "What is the name and role of the student who has the lowest GPAs?", "query": "SELECT T1.student_id,  T1.name_first,  'GPA' AS T1.GPA,  T1.name_second,  T1.name_third,  T1.name_fourth,  T1.name_fifth,  T1.name_sixth,  T1.name _seventh,  T1.name_eighth,  T1.name_nineth,  T1.name_tenth,  T1.name_eleventh,  T1.name _twelveth,"}
{"question": "What is the oldest sport with the most athletes?", "query": "SELECT T1.sport_name,  T1.sport_id,  T1.sportID,  T1.sportName,  T1.sportDesc,  T1.sportType,  T1.sportLevel,  T1.sportYear,  T1.sportTeam,  T1.sportCoach,  T1.sportLocation,  T1.sportFee,  T1.sportTime,  T1.sportHours,  T1.sportCost,  T1"}
{"question": "What is the id, title and score of the movie with lowest rating among all movies directed by the same person?", "query": "SELECT T1.id,  T1.title,  T1.score FROM movies AS T1 WHERE T1.director_id  =  (SELECT T2.director_id FROM directors AS T2 WHERE T2.name  = \"Albert Brooks\") AND T1.rating  =  (SELECT min(rating) FROM movies AS T3 WHERE T3.director_id  =  T1.director_id)"}
{"question": "What are the ids and names of the students who are under 20 and are involved in at least one university activity", "query": "SELECT T1.student_id,  T1.name FROM student AS T1 WHERE T1.age  <  20 AND T1.id  IN (SELECT T2.student_id FROM student AS T2 WHERE T2.id  IN (SELECT T3.student_id FROM student AS t3 WHERE t3.id  IN (SELECT T4.student_id FROM student AS  t4 WHERE t4.id  IN (SELECT T5.student_id FROM student AS   t5 WHERE t5.id  IN (SELECT T6.student_id FROM student AS"}
{"question": "What are the names, positions, and salaries of all the teachers in the science department", "query": "SELECT T1.Name,  T1.Position,  T1.Salary FROM teacher AS T1"}
{"question": "Return the names and ages of all the employees", "query": "SELECT T1.employee_first_name,  T1.employee_last_name,  T1.employee_age FROM employees AS T1"}
{"question": "\"Find the number of classes offered for all classes that held at least 2 classes\"", "query": "SELECT T1.class_code,  T1.class_name,  T1.class_number,  T1.class_start_date,  T1.class_end_date,  T1.start_time,  T1.end_time,  T1.class_type,  T1.class_room,  T1.class_capacity,  T1.class_price,  T1.class_fee,  T1.class_location,  T1.class_teacher,  T1.class_faculty,  T"}
{"question": "How many albums do the customers listen to every month?", "query": "SELECT COUNT(*) AS count FROM customer_listens WHERE customer_id  =  \"1\""}
{"question": "What are the last names of the directors of all the universities in San Francisco?", "query": "SELECT T2.Last_Name FROM director AS T1 JOIN university AS T2 ON T1.University_ID  =  T2.University_ID WHERE T2.San_Francisco_ID  =  \"San Francisco\""}
{"question": "List all the types of documents which has type 'A1' and has name \"A1", "query": "SELECT DISTINCT type FROM Document WHERE type  =  'A1' AND name  =  'A1'"}
{"question": "show (a novel question, about a", "query": "Examples of some or all task elements:"}
{"question": "Find the id of the student who has the most friends", "query": "SELECT T1.stu_id FROM student AS T1 JOIN friends AS T2 ON T1.stu_id  =  T2.stu_id WHERE T2.stu_id  = (SELECT max(stu_id) FROM friends)"}
{"question": "List the names of all tables in the database", "query": "SELECT table_name FROM information_schema.tables"}
{"question": "List the details of all products with the word \"Latte\" and the word \"Americano\" in their detail", "query": "SELECT T1.product_id,  T1.product_name,  T1.price,  T1.quantity,  T1.description,  T1.category_id,  T1.category_name,  T1.image_id,  T1.image_name,  T1.available_quantity,  T1.available_price,  T1.available_date,  T1.available_time,  T1.available_location,  T1.available_status,  T1.available_type,  T1.available_"}
{"question": "Find the name of the company that has the most employees", "query": "SELECT T1.company_name FROM company AS T1 WHERE T1.employee_count  =  (SELECT max(T2.employee_count) FROM company AS T2)"}
{"question": "How many trips did not end in Miami?", "query": "SELECT DISTINCT start_station_id,  end_station_id FROM trip WHERE end_station_id !=  start_station_id"}
{"question": "What is the name of the product whose description reads 'A redhead's delight'?", "query": "SELECT T1.description FROM product AS T1 WHERE T1.color  =  'Red' AND T1.description  =  'A redhead's delight'"}
{"question": "List the names of all the states and cities in descending order of the number of students", "query": "SELECT T1.state,  T2.city FROM student AS T1 JOIN state AS T2 ON T1.state_id  =  T2.state_id ORDER BY T1.student_count DESC"}
{"question": "Find the names of all the users who are not friends with the user with id 1", "query": "SELECT name FROM users AS T1 JOIN friends AS T2 ON T1.userid  =  T2.userid WHERE T1.userid  = 1"}
{"question": "What are the names:", "query": "SELECT T1.column_name FROM table_name AS T1 WHERE T1.column_name  =  'value'"}
{"question": "How many students are there in the school with the highest average GPA?", "query": "SELECT T1.student_id,  T1.name FROM student AS T1 JOIN student_grades AS T2 ON T1.student_id  =  T2.student_id WHERE T2.avg_grade  =  ( SELECT avg(T3.grade) FROM student_grades AS T3 WHERE T3.student_id  =  \"T1.student_id\" )"}
{"question": "What are the names, addresses and ages of the students who are studying in the university?", "query": "SELECT student_name,  student_address,  student_age FROM students WHERE student_id  IN (SELECT student_id FROM university_students)"}
{"question": "What are the names and genders of all the employees in the following table?", "query": "SELECT T1.name,  T1.gender FROM employees AS T1 WHERE T1.id  =  (SELECT id FROM employees WHERE name  =  \"John Smith\")"}
{"question": "What are the id, name and age of the president of your company?", "query": "SELECT T1.id,  T1.name,  T1.age FROM President AS T1"}
{"question": "What does the word \"gross\" mean?", "query": "SELECT gross FROM products"}
{"question": "What are the ids and names of the employees who have never been to the office?", "query": "SELECT T1.employee_id,  T1.first_name,  \"T1.last_name\" FROM employees AS T1 WHERE T1.office_visits  =  0"}
{"question": "How many times did the word \"in\" appear in the English dictionary?", "query": "SELECT COUNT(*) FROM dictionary WHERE word = \"in\""}
{"question": "What are the names, years and ids of the players who were not selected for the team?", "query": "SELECT T1.name,  T1.year,  T1.id FROM player AS T1 WHERE T1.id NOT IN (SELECT T2.id FROM team AS T2)"}
{"question": "What are the names, genders and surnames of the students in the class called \"Math 301\" that has fewer than 5 students?", "query": "SELECT name FROM student AS T1 JOIN class AS T2 ON T1.class_id  =  T2.class_id WHERE T2.class_name  =  \"Math 301\" AND T1.student_id  =  (SELECT MIN(student_id) FROM student AS T3 WHERE T3.class_id  =  \"Math 301\")"}
{"question": "Do you go to the movies very often?", "query": "SELECT * FROM movie WHERE rating >= 4"}
{"question": "Give me a list of all the actors in the movie \"Fantastic Four\" with their ids", "query": "SELECT T1.actor_id,  T1.actor_name FROM actor AS T1 JOIN movie AS T2 ON T1.actor_id  =  T2._id WHERE T2.title  =  'Fantastic Four'"}
{"question": "Find the names of the captains who have not been assigned to a ship", "query": "SELECT T1.name FROM captains AS T1 WHERE T1.ship_id  =  0;"}
{"question": "What is the first name of the person who has the most records in the database?", "query": "SELECT T1.name FROM customer AS T1 JOIN customer_address AS T2 ON T1.id  =  T2.customer_id WHERE T2.city  =  'San Francisco' AND T2.state  =  'CA' AND T2.zip  =  '94102' ORDER BY T1.id DESC LIMIT 1"}
{"question": "What is the name, number and address of the customer with the largest order?", "query": "SELECT T1.customer_name,  T2.order_amount,  T2.order_date FROM orders AS T1 JOIN customer AS T2 ON T1.order_id  =  T2.order_id WHERE T2.orderdate  =  (SELECT MAX(orderdate) FROM orders)"}
{"question": "List the number of students who have taken the course \"International Business\" with the following requirements:", "query": "SELECT count(*)  FROM students WHERE course_id  =  \"International Business\" AND grade  =  \"A\" AND major  =  \"Business\""}
{"question": "What is the name, id and birth date of the customer who has the highest balance?", "query": "SELECT T1.customer_first_name, T1.customer_last_name, T1.customer.id, T1.customer.birth_date FROM customers AS T1 JOIN customers_cards AS T2 ON T1.card_id  =  T2.customer_id WHERE T1.balance  >  T2.balance ORDER BY T1.balance DESC LIMIT 1"}
{"question": "What is the average temperature in January in all the cities?", "query": "SELECT AVG(T1.temp) FROM Weather_data AS T1 JOIN City_data AS T2 ON T1.city_id  =  T2.city_id WHERE T2.city_name  =  \"Beijing\""}
{"question": "How many students have the same birthday?", "query": "SELECT COUNT(*),  student_id FROM students WHERE birthday  =  (SELECT MIN(birthday) FROM students)"}
{"question": "Find the first name and last name of the student who joined the most courses", "query": "SELECT T1.student_name,  T1.student_last_name FROM student AS T1 JOIN enrollment AS T2 ON T1.student_id  =  T2.student_id JOIN course AS T3 ON T2.course_id  =  T3.course_id JOIN course_attends AS T4 ON T3.course_id  ="}
{"question": "What is the list of all names and details of the students who are from a province of China?", "query": "SELECT T1.student_name,  T1.student_id,  T1.student_city,  T1.student_province,  T1.student_country,  T1.student_major,  T1.student_year,  T1.student_gender,  T1.student_birthday,  T1.student_email,  T1.student_phone,  T1.student_address,  T1.student_class,  T1.student_grade,  T1.student_school,  T1.student_"}
{"question": "What is the total numbers of records in this table that were added before 2000, and between 2000 and 2005?", "query": "SELECT T1.num_records FROM table_name AS T1 WHERE T1.year  <  2000 OR T1.year  >  2005"}
{"question": "What are the names, phone numbers and ages of all employees of the company?", "query": "SELECT employee_id,  first_name,  last_name,  phone_number,  age FROM employees"}
{"question": "What is the average weight of apples", "query": "SELECT avg(weight) FROM Apple"}
{"question": "What is the name and age of the person who is a CEO of Microsoft?", "query": "SELECT T1.Name,  T1.age FROM Person AS T1 WHERE T1.age  =  (SELECT max(T2.age) FROM Person AS T2) AND T1.age  >  30"}
{"question": "How do we find the id of a user with the username \"nelson\"?", "query": "SELECT T1.id FROM users AS T1 WHERE T1.username  =  \"nelson\""}
{"question": "Find the name of students who took the class called \"Intro to Physics\"", "query": "SELECT T1.fname,  T1.lname,  T1.course_code,  T1.course_name,  T1.course,  T1.section_code,  T1.section_name,  T1.teacher_id,  T1.teacher,  T1.teacher2_id,  T1.course_id,  T1.section_id,  T1.grade,  T1.grade_id,  T1.year,  T1.year_id,  T1.semester"}
{"question": "What are the names, and the number of months, of those products that sell well in the fall, but not in the spring?", "query": "SELECT T1.name,  COUNT(*) FROM product AS T1 JOIN sales_by_month AS T2 ON T1.id  =  T2.id AND T2.month  =  '10' GROUP BY T1.name"}
{"question": "What is the name, number and age of the customer with the closest birthday to yours?", "query": "SELECT T1.name,  T1.number,  T1.age FROM customer AS T1 WHERE T1.birthday  =  (SELECT MIN(T2.birthday) FROM customer AS T2 WHERE T2.number  =  T1.number AND T2.age  =  T1.age);"}
{"question": "(a novel question, about a tables) What is the average temperature and average rainfall for all cities that are not in the state of Arkansas?", "query": "SELECT AVG(Temperature),  AVG(Rainfall) FROM city WHERE state!= 'Arkansas'"}
{"question": "What is the average height of people in the US?", "query": "SELECT AVG(height) FROM people"}
{"question": "show me all the users with a username starting with \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"", "query": "SELECT * FROM users WHERE username LIKE \"C%\""}
{"question": "What is the average price of wines that are sold in the wine shop?", "query": "SELECT AVG(price) FROM wine WHERE shop_id  =  \"1\""}
{"question": "What are the official names of cities with more than two world fairs?", "query": "SELECT T1.city_name FROM city AS T1 JOIN world_fairs AS T2 ON T1.city_id  =  T2.\"city_id\" WHERE T2.world_fairs_id  =  (SELECT max(world_fairs_id) FROM world_fairs)"}
{"question": "Show the details of all cities that have hosted the same number of competitions", "query": "SELECT city_name,  competition_name,  competition_year,  competition_country,  competition_city,  competition_country_code,  competition_city_name,  competition_city_country_code,  competitor_count,  competition_year_count,  competition_country_count,  competition_city_count,  competition_count_country_count,  competitor_count_country_count, competition_year_count_country_count, country_name,  city_name,  country"}
{"question": "What is the average number of sales for the company with the lowest sales?", "query": "SELECT T1.sales FROM company AS T1 JOIN sales AS T2 ON T1.company_id  =  T2.company_id WHERE T2.sales  <  (SELECT AVG(T3.sales) FROM sales AS T3 WHERE T3.company_id  =  \"T1.company_id\")"}
{"question": "Find the titles of the products with no reviews and price less than $10", "query": "SELECT T1.title FROM product AS T1 WHERE T1.price  <  10 AND T1.reviews  =  0"}
{"question": "What is the name, location, and number of the airports with the most passengers?", "query": "SELECT T1.airport_name,  T1.location,  T1.passengers FROM airport AS T1 GROUP BY T1.airport_name ORDER BY T1.passengers DESC"}
{"question": "What are the ids, names and genders of the architects", "query": "SELECT T1.id,  T1.name,  T1.gender FROM architects AS T1 WHERE T1.id  IN (SELECT T2.id FROM architect_employees AS T2 WHERE T2.architect_id  =  T1.id)"}
{"question": "What are the city names of the top 10 cities ranked by population?", "query": "SELECT city_name FROM city WHERE population  >  10"}
{"question": "What are the minimum, maximum, average and total number of employees, by company", "query": "SELECT MIN(employee_id) AS min_id,  MAX(employee_id) AS max_id,  AVG(employee_id) AS avg_id,  COUNT(*) AS total_count FROM employee;"}
{"question": "find the name of all the books at the library", "query": "SELECT book_name FROM books"}
{"question": "What is the average age of the candidates who won the last election?", "query": "SELECT AVG(age) FROM Candidates WHERE id  =  (SELECT id FROM Candidates_Voted_For)"}
{"question": "What are the names, locations and ages of all the employees working in the store on December 1st?", "query": "SELECT T1.first_name,  T1.last_name,  T1.address_id,  T1.city,  T1.state_province_id,  T1.zip,  T1.age,  T1.gender,  T1.phone,  T1.email,  T1.dob,  T1.marital_status,  T1.education_level,  T1.hiring_date,  T1.salary,  T1.start_date,  T1.end_date,"}
{"question": "What is the name of the company that makes the car that's just been delivered to Dave?", "query": "SELECT name FROM car WHERE manufacturer = \"Ford\""}
{"question": "(a novel question, about a single table) What are the names of the rivers of the United States of America?", "query": "SELECT T1.name FROM rivers AS T1 WHERE T1.country_code  =  \"USA\""}
{"question": "List the names of cities with more than 10 universities", "query": "SELECT T1.city_name,  T1.university_name FROM city AS T1 JOIN university AS T2 ON T1.city_id  =  T2._id WHERE T2.university_name  >  '10'"}
{"question": "What are the names (first and last) of all the students in the class in the order of their birth date?", "query": "SELECT T1.first_name,  T1.last_name FROM student AS T1 JOIN class AS T2 ON T1.class_id  =  T2.class_id ORDER BY T1.birth_date"}
{"question": "\"What are the names and locations of all the airlines that have at least one person named Amy?\"", "query": "SELECT name,  location FROM airline WHERE name  =  'Amy'"}
{"question": "What are the names and id of students who are from the same department as the student called \"Alice\"?", "query": "SELECT T1.student_id,  T1.name_first,  'T1.name_last' FROM student AS T1 JOIN student_department AS T2 ON T1.student_id  =  T2.student_id WHERE T2.department_id  =  'T1.department_id'"}
{"question": "Find the customer ids and first name of all customers from the \"Travis\" family", "query": "SELECT T1.customer_id,  T1.first_name FROM customer AS T1 JOIN family AS T2 ON T1.customer_id  =  T2.\"Travis\""}
{"question": "What are the names in alphabetical order of the countries of the world?", "query": "SELECT name FROM country ORDER BY name"}
{"question": "how many students live in dorm", "query": "SELECT T1.name,  T1.id FROM dorm AS T1 JOIN student AS T1.id  ON T1.id  =  T1.student_id WHERE T1.name  =  \"Dorm A\""}
{"question": "What is the name and location of the branch that has the highest number of customers?", "query": "SELECT T1.branch_name,  T2.branch_location FROM branch AS T1 JOIN branch_customer AS T2 ON T1.branch_id  =  T2.branch_id WHERE T2.customer_count  =  'highest'"}
{"question": "How many students are there in all the universities? - what are the names of the universities and their student populations?", "query": "SELECT count(*) AS total_students FROM students"}
{"question": "What are the ids and names of the actors and actresses who played in the movie, and what is the year of each movie?", "query": "SELECT T1.actor_id,  T1.actor_name,  T1.actor_age,  T1.actor_birth_date,  T1.actor_last_name,  T1.movie_id,  T1.movie_year FROM actors AS T1 JOIN movies AS T2 ON T1.actor_id  =  T2.actor_id WHERE T2.movie_id  =  (SELECT movie_id FROM movies WHERE movie_name  =  \"The Godfather\")"}
{"question": "what are the names of the students in the class?", "query": "SELECT T1.fname,  T1.lname FROM student AS T1 WHERE T1.class_id  =  \"1\""}
{"question": "Give the id's of the students who have the first name \"David\"", "query": "SELECT T1.id,  T1.first_name FROM students AS T1 WHERE T1.first_name  =  \"David\""}
{"question": "How many times has the customer named \"Randy\" ordered a product?", "query": "SELECT count(*) AS \"count\" FROM orders AS T1 JOIN orderlines AS T2 ON T1.order_id  =  T2.order_id WHERE T1.customer_name  =  'Randy'"}
{"question": "How many students have ever attended at least once the course \"Statistics\"?", "query": "SELECT DISTINCT student_id FROM student_course_enrollment WHERE course_id  =  \"Statistics\""}
{"question": "Show the number of students who are from the department 'Physics'", "query": "SELECT count(*)  FROM student AS T1 JOIN department AS  T2 ON T1.deptid  =  T2.deparment_id WHERE T2.name  =  \"Physics\""}
{"question": "Find the names of the students who live in the city with the name \"Shenzhen\"", "query": "SELECT T1.name FROM students AS T1 JOIN city AS T2 ON T1.city_id  =  T2.city_id WHERE T2.name  = \"Shenzhen\""}
{"question": "What is the first name of the instructor who teaches the most number about a topic?", "query": "SELECT T1.name FROM instructor AS T1 JOIN class AS T2 ON T1.id  =  T2.instructor_id WHERE T2.course_code  =  'CSCI-101' AND T2.title  =  'Introduction to Database Systems'"}
{"question": "(a question about a sql table) What is the name of the product whose average price is lowest for each manufacturer?", "query": "SELECT T1.product_name,  T2.price FROM products AS T1 JOIN products_by_price AS T2 ON T1.product_id  =  T2.product_id WHERE T2.manufacturer  =  'Sony'"}
{"question": "List the name of all the countries", "query": "SELECT name FROM Country"}
{"question": "(a novel question, about a new table), after \"", "query": "SELECT T1.id,  T1.title,  T1.author,  T1.price,  T1.publisher,  T1.year,  T1.isbn,  T1.isbn13,  T1.isbn10,  T1.isbn9,  T1.isbn8,  T1.isbn7,  T1.isbn6,  T1.isbn5,  T1.isbn4,  T1.isbn3,  T1.isbn2,  T1."}
{"question": "list the count and id of each testegrated product in all the orders", "query": "SELECT T1.id,  T1.name FROM testegrated_product AS T1 JOIN order_item AS T2 ON T1.id  =  T2.testegrated_product_id WHERE T2.order_id  =  '1'"}
{"question": "Find the names of those who are in the league of legends", "query": "SELECT T1.name FROM players AS T1 WHERE T1.league_id  =  '5'"}
{"question": "What is the name, date of birth, and age of the driver with id 55?", "query": "SELECT name,  date_of_birth,  age FROM driver WHERE id  =  55"}
{"question": "List the names of the patients who made only one appointment?", "query": "SELECT T1.patient_name FROM patient AS T1 JOIN patient_appointment AS T2 ON T1.patient_id  =  T2.patient_id WHERE T2.appointment_type  =  '1'"}
{"question": "What is the id for the student who sat in seat 1A?", "query": "SELECT T1.student_id FROM student AS T1 WHERE T1.seat_id  =  1"}
{"question": "Find the name of the teacher who is in charge of the computer room and the number of computers that are used in the computer room", "query": "SELECT T1.name,  T1.position FROM teacher AS T1 JOIN Teacher_Room_Assignments AS T2 ON T1.teacher_id  =  T2_id WHERE T2.room_id  =  \"computer room\" AND T2.room_type  =  \"computer room\""}
{"question": "What is the average age of the members of the group?", "query": "SELECT AVG(age) FROM members"}
{"question": "What is the name, level, and description of the catalog with the latest release date?", "query": "SELECT T1.code,  T2.name,  T2.level,  T2.description FROM catalog AS T1 JOIN catalog_release AS T2 ON T1.code  =  T2.code ORDER BY T2.release_date DESC LIMIT 1"}
{"question": "What are all the names of the staff in the company?", "query": "SELECT T1.first_name,  T1.last_name FROM staff AS T1"}
{"question": "How many students are in the course with ID 5?", "query": "SELECT T1.id FROM students AS T1 JOIN courses AS T2 ON T1.course_id  =  T2.id WHERE T2.id  =  5"}
{"question": "What is the average price of the following products?", "query": "SELECT AVG(price) FROM products"}
{"question": "What are the order date of orders with price higher than 1000?", "query": "SELECT T1.order_date,  T1.price FROM order AS T1 WHERE T1.price  >  1000"}
{"question": "What is the name?", "query": "SELECT name FROM track"}
{"question": "What are the last names of students in the class of 2010 whose major is not mathematics?", "query": "SELECT T1.lastname FROM student AS T1 WHERE T1.major !=  \"mathematics\""}
{"question": "What are the ids and names of all cities that have an airport", "query": "SELECT T1.city_id,  T1.city_name,  T1.airport_id FROM city AS T1 JOIN airport AS T2 ON T1.city_id  =  T2._id WHERE T2.name  =  \"San Francisco\""}
{"question": "What is the average age of the customers who live in the state of Oregon?", "query": "SELECT AVG(age) FROM customers WHERE state_code = 'OR'"}
{"question": "What does \"the name\" mean in \"the name of the person who is the youngest\"?", "query": "SELECT T1.name FROM person AS T1 WHERE T1.age  =  (SELECT min(T2.age) FROM person AS T2 WHERE T2.name  =  \"the name\")"}
{"question": "What are the names and id numbers for all the products that have the largest volume?", "query": "SELECT T1.id,  T1.name FROM products AS T2 WHERE T2.volume  =  (SELECT MAX(T3.volume) FROM products AS T3)"}
{"question": "What are the ids of the customers with first names starting with \"P\"?", "query": "SELECT customer_id FROM customer WHERE first_name LIKE \"P%\";"}
{"question": "What is the type of the car with license plate number \"ABC123\"", "query": "SELECT T1.type FROM cars AS T1 WHERE T1.license_plate  =  \"ABC123\""}
{"question": "What are the ids of the students in at least two courses?", "query": "SELECT T1.studentid FROM course AS T1 JOIN student AS T2 ON T1.studentid  =  T2.studentid WHERE T2.course  =  'CS101' OR T2.course  =  \"CS102\" OR T2.course  = \"CS103\""}
{"question": "What are the names, ages and descriptions of all the students?", "query": "SELECT T1.name,  T1.age,  T1.description FROM student AS T1"}
{"question": "What are the name and age of the users that got the most 'likes' in 'tweens' in April 2016?", "query": "SELECT name,  age FROM users WHERE (SELECT COUNT(*) FROM likes WHERE user_id = users.user_id AND month(created_at) = 4)  >  (SELECT COUNT(*) FROM likes WHERE month(created_at) = 1)"}
{"question": "Find the name, title, and type of the most recent employees", "query": "SELECT T1.employee_id,  T1.name,  T1.[title],  T1.type FROM employee AS T1 WHERE T1.type  =  'employee' ORDER BY T1.employee_id DESC LIMIT 1"}
{"question": "What is the name and country of the city that has the highest number of employees?", "query": "SELECT T1.name,  T1.\"country\" FROM city AS T1 WHERE T1.num_employees  =  (SELECT max(T2.num_employees) FROM city AS T2)"}
{"question": "What are the names and salaries of each teacher at \"Berklee College of Music\"?", "query": "SELECT teacher_name,  salary FROM teachers WHERE school_name  =  \"Berklee College of Music\""}
{"question": "What are the first 3 letters of all the colors in the rainbow?", "query": "SELECT color FROM Color WHERE color  =  \"R\" OR color  =  \"Y\" OR color  =  \"B\" OR color  =  \"G\" OR color  =  \"O\" OR color  =  \"P\" OR color  =  \"W\" OR color  =  \"V\" OR color  =  \"U\" OR color  =  \"I\" OR color  =  \"Q\" OR color  =  \"H\" OR color  =  \"T\" OR color  =  \"S\" OR color  =  \"F\" OR color  ="}
{"question": "What is the first names and last names of all customers and suppliers?", "query": "SELECT T1.first_name,  T1.last_name FROM customers AS T1 INNER JOIN suppliers AS T2 ON T1.supplier_id  =  T2.supplier_id"}
{"question": "What is the name if the city with the most citizens?", "query": "SELECT city_name FROM city WHERE population  >  (SELECT max(population) FROM city)"}
{"question": "What is the title and credit value for courses with more than one prerequisite;", "query": "SELECT T1.title,  T1.credit_value FROM courses AS T1 JOIN prerequisites AS T2 ON T1.prerequisite_id  =  T2.prerequisite_id WHERE T2.prerequisite_id  IN  (SELECT T3.prerequisite_id FROM prerequisites AS T3 WHERE T3.prerequisite_type  =  \"Course\" AND T3.prerequisite_number  >  1)"}
{"question": "What are the ids of the products that are not manufactured in China?", "query": "SELECT T1.product_id FROM product AS T1 WHERE T1.manufacture_country  =  'China'"}
{"question": "What are the ids and names of the students who are in classes that have less than 10 students?", "query": "SELECT T1.id,  T1.name FROM student AS T1 JOIN classes AS T2 ON T1.id  =  T2.id WHERE T2.student_count  <  10"}
{"question": "What are the id, name and age of all students with the last name \"Wagner\"?", "query": "SELECT T1.student_id,  T1.student_name,  T2.student_age FROM students AS T1 JOIN student_info AS T2 ON T1.student_id  =  T2.student_id WHERE T2.last_name  =  \"Wagner\""}
{"question": "What are the names and ages of the people who are in the same city as the person named \"Sam\" but not in the same city as \"Sam\"?", "query": "SELECT T1.Name_First,  T1.Name_Last,  T1.Age FROM Person AS T1 JOIN Person_City AS T2 ON T1.Person_ID  =  T2.Person_ID WHERE T2.City_ID  =  \"1\" AND T2.City_Name  =  \"New York\" AND T1.City_Name  =  NULL AND T1.Age  =  NULL"}
{"question": "What are the name and id of the students who attended courses in the year 2005?", "query": "SELECT T1.name,  T1._id FROM student AS T1 WHERE T1.year  =  2005"}
{"question": "When were the employees hired?", "query": "SELECT T1.hire_date FROM employees AS T1 WHERE T1.name  =  \"John Doe\""}
{"question": "Find the table of the first name and last name of all students", "query": "SELECT T1.student_id,  T1.first_name,  'first_name' AS field_name,  T1.first_last_name AS field_name_2 FROM student AS T1"}
{"question": "What is the name and id of the student who last attended the Statistics course", "query": "SELECT T1.student_id,  T2.name FROM student_course_enrolment AS T1 JOIN student AS T2 ON T1.course_id  =  T2._id WHERE T1.student_id  IN (SELECT student_id FROM student_course_enrolments WHERE student_id  =  '1')"}
{"question": "What are the names and ages of the staff who were hired on the same day as me?", "query": "SELECT T1.Name,  T1.age FROM staff AS T1 JOIN employee AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.hire_date  =  \"2016-01-01\""}
{"question": "What are the names (with first names and last initials) of the students who are not members of the student council?", "query": "SELECT T1.last_name,  T1.first_name FROM students AS T1 WHERE T1.student_id  =  (SELECT student_id FROM student_memberships AS T2 WHERE T2.student_id  =  T1.id) AND T1.id  NOT IN (SELECT student_id FROM student_council AS T3)"}
{"question": "List the maximum temperature, minimum temperature, and average temperature for all days in January", "query": "SELECT T1.day,  T1.temp_max,  T1.temp_min,  T1.temp_avg FROM days AS T1 JOIN temperature AS T2 ON T1.day  =  T2.day WHERE T2.month  =  'January'"}
{"question": "What are the names, order ids and status of the orders with the term \"pizza\" in the description?", "query": "SELECT T1.order_id,  T1.name,  T1.order_status FROM order AS T1 WHERE T1.description LIKE '%pizza%'"}
{"question": "What are 3 words which include all vowels?", "query": "SELECT name FROM table WHERE name IN ('a','e','i','o','u')"}
{"question": "What is the name and age of the customer who bought the most items?", "query": "SELECT customer_id,  name,  age FROM customer WHERE customer_id  =  (SELECT customer_id FROM customer WHERE customer_id  IN (SELECT customer_id FROM customer WHERE count(*)  =  (SELECT count(*) FROM customer WHERE customer_id  NOT IN (SELECT customer_id FROM customer AS T1 WHERE T1.customer_id  =  T2.\"customer_id\"))) AND count(*)  =  (1))"}
{"question": "(a novel question, about a table called 'person')", "query": "SELECT T1.first_name,  T1.[last_name] FROM person AS T1"}
{"question": "Which project is it associated with?", "query": "SELECT project_id FROM project WHERE project_name  =  \"Project X\""}
{"question": "What are the names, ages, and heights of all students?", "query": "SELECT T1.first_name,  T1.last_name,  T1.age,  T1.height FROM student AS T1"}
{"question": "What are the names, and birthdays, of all the employees?", "query": "SELECT T1.first_name,  T1.last_name,  T1.birthday FROM employees AS T1 WHERE T1.first_name  LIKE \"A%\" AND T1.last_name  LIKE \"B%\" AND T1.birthday  LIKE \"C%\""}
{"question": "What is the number, id, and name of the student that has the least number of courses?", "query": "SELECT T1.id,  T1.name,  T1.number FROM students AS T1 WHERE T1.number  =  (SELECT T2.number FROM students AS T2 WHERE T2.number  =  T1.number AND T2.id  <>  T1.id )"}
{"question": "Find the name of all students who took courses or attended courses?", "query": "SELECT T1.fname,  T1.lname,  T1.course_id,  T1.course_name,  T1.course  FROM student AS T1 JOIN course AS T2 ON T1.course_id  =  T2.course_id WHERE T2.course_name  =  \"Courses\" OR T2.course_name  IN  (\"Courses\", \"Attendance\")"}
{"question": "What is the number of people living in the city of Aliso Viejo, California?", "query": "SELECT COUNT(*) AS count FROM city WHERE city_name  =  \"Aliso Viejo\""}
{"question": "How many books were written by a doctor who graduated in the year 2008, published in the year 2011, and with one or more reviews?", "query": "SELECT COUNT(*) FROM books WHERE author_id  =  \"1\" AND year_of_publication  =  \"2011\" AND has_reviews  =  \"1\""}
{"question": "What are the names and ids of employees who have a manager?", "query": "SELECT T1.name,  T1._id FROM employee AS T1 JOIN employee_to_manager AS T2 ON T1.employee_id  =  T2._id WHERE T2.manager_id  =  \"1\""}
{"question": "What is the name, age, and gender of the person who is the oldest in the video?", "query": "SELECT T1.name,  T1.age,  T1.gender FROM video AS T1 WHERE T1.age  =  (SELECT max(age) FROM video WHERE video_id  =  T2)"}
{"question": "What are the ids and names of all customers who have purchased more than two products?", "query": "SELECT T1.custid,  T1.custname FROM customer AS T1 WHERE T1.custid  IN (SELECT T2.custid FROM customer AS T2 WHERE T2.custid  IN ( SELECT T3.custid FROM customer AS t3 WHERE T3.custid  IN (... ) ) )"}
{"question": "What is the maximum number of seats in a train?", "query": "SELECT MAX(Seats) FROM TRAIN"}
{"question": "What is the name and description of the document types which are used in the database?", "query": "SELECT name,  description FROM document_types"}
{"question": "What is the name of the movie with a title that starts with 'F' and ends with 'T'?", "query": "SELECT DISTINCT title FROM movie WHERE title  LIKE  \"F%T\""}
{"question": "List the names of the customers who bought products \"food\" at least once", "query": "SELECT T1.customer_id,  T1.product_name,  T1.quantity,  T1.price,  T1.date_purchased FROM customer AS T1 WHERE T1.product_name  =  \"food\""}
{"question": "What is the name for the movie with the highest box office revenue in the world?", "query": "SELECT name FROM movie WHERE movie_id  =  (SELECT MAX(movie_id) FROM movie)"}
{"question": "For the customer with id 1, find the number of times he or she has been charged for a purchase", "query": "SELECT COUNT(*) FROM customer WHERE id = 1"}
{"question": "What is the average salary of each employee, sorted by id, in descending order?", "query": "SELECT AVG(salary) FROM employees;"}
{"question": "What is the number of employees in the accounting department?", "query": "SELECT T1.employee_id FROM employees AS T1 WHERE T1.department_id  =  \"accounting\""}
{"question": "Find the id of the bike that traveled in 94002", "query": "SELECT id FROM Bike WHERE city_code  =  '94002'"}
{"question": "What is the number of days that have an average humity above 50 and a particular visibility above 8?", "query": "SELECT count(*) AS cnt,  avg(humidity) AS avg_humidity,  min(visibility) AS min_visibility,  max(visibility) AS max_visibility FROM weather WHERE humidity  >  50 AND visibility  >  8 GROUP BY 1,2,3"}
{"question": "What is the total number of employees in the company?", "query": "SELECT COUNT(*) FROM employees"}
{"question": "Show the age of each player who played in the first game of the series", "query": "SELECT T1.age FROM player AS T1 JOIN game AS T2 ON T1.player_id  =  T2.player_id WHERE T2.game_id  =  1"}
{"question": "What are the names in order of their average sales?", "query": "SELECT T1.name,  T2.avg_sales FROM product AS T1 JOIN sales_by_product AS T2 ON T1.id  =  T2.id ORDER BY T1.avg_sales ASC"}
{"question": "What are the names, addresses, and telephone numbers of all students who have made a booking with at least one accommodation?", "query": "SELECT T1.name,  T1.address,  T1.phone FROM students AS T1 JOIN accommodation AS T2 ON T1.studentid  =  T2.studentid WHERE T2.booking  =  \"yes\""}
{"question": "What are the names and ids of the employees who have a salary greater than $200?", "query": "SELECT T1.employee_id,  T1.name_first,  (SELECT name_last FROM employee AS T2 WHERE T2.employee_id  =  T1.employee_id) FROM employee AS T1 WHERE T1.salary > 200"}
{"question": "What is the name and age of the student who started the first class?", "query": "SELECT T1.name,  T1.age FROM students AS T1 WHERE T1.id  =  (SELECT T2.id FROM students AS T2 WHERE T2.name  = \"John Doe\" AND T2.age  =  \"25\")"}
{"question": "What is the difference between 'SQLException' and 'SQLFeatureNotSupportedException'?", "query": "SELECT T1.message,  T2.message FROM SQLException AS T1 JOIN SQLFeatureNotSupportedException AS T2 ON T1.message  =  T2.message"}
{"question": "List the details of the project with the highest number of employees", "query": "SELECT T1.project_id,  T2.name,  T3.name,  T4.name,  T5.name,  T6.name,  T7.name,  T8.name,  T9.name,  T10.name,  T11.name,  T12.name,  T13.name,  T14.name,  T15.name,  T16.name,  T17.name,  T18.name,  T19.name,  T20.name,  T21.name,"}
{"question": "What are the names and ids of the two restaurants with the highest number of diners?", "query": "SELECT name,  id FROM restaurants WHERE num_diners  =  (SELECT max(num_diners) FROM restaurants)"}
{"question": "What is the average number of seconds to complete an order?", "query": "SELECT AVG(time_to_complete) FROM orders"}
{"question": "What is the average bike availability for stations not in Palo Alto, and what is the name of the column in the table, and what is the value of", "query": "SELECT AVG(bike_avail) FROM station_bike WHERE station_id NOT IN (SELECT station_id FROM station WHERE city = 'Palo Alto')"}
{"question": "What are the names that have the same number of commas?", "query": "SELECT T1.name,  COUNT(*) FROM students AS T1 JOIN student_info AS T2 ON T1.id  =  T2.id WHERE T2.name  =  \"John Smith\" GROUP BY T1.name HAVING COUNT(*) =  2"}
{"question": "What is the mean longitude for all the stations that have never had more than 5 bikes available?", "query": "SELECT T1.longitude FROM stations AS T1 JOIN bike_availability AS T2 ON T1.station_id  =  T2.station_id WHERE T2.bike_available  =  \"0\" AND T2.bike_available_count  <  5"}
{"question": "What are the names and ids of all the customers who have only one account?", "query": "SELECT T1.id,  T1.name FROM customer AS T1 WHERE T1.account_id  =  0"}
{"question": "What is the name of the movie with the highest grossing and how many years it is?", "query": "SELECT T1.name FROM movie AS T1 JOIN movies_by_year AS T2 ON T1.name  =  T2.name WHERE T2.year  =  \"2012\" AND T2.gross  >  \"$1\""}
{"question": "I'm looking for the first 2 letters of the title of the movie \"The Terminator\"", "query": "SELECT title FROM movies WHERE title LIKE \"%The%\""}
{"question": "Find the names and countries of the cities with the most people who are born in the same day", "query": "SELECT T1.city_name,  T1.country_id FROM city AS T1 JOIN city_population AS T2 ON T1.city_id  =  T2._id WHERE T2.day  =  \"{day}\""}
{"question": "What is the employee id of the customer with the highest sales?", "query": "SELECT T1.eid FROM customer AS T1 JOIN sales AS T2 ON T1.cid  =  T2.cid WHERE T2.sales  =  MAX(T2.sales)"}
{"question": "What is the name of the restaurant that has the highest number of customers?", "query": "SELECT name FROM Restaurant WHERE num_customers  =  (SELECT max(num_customers) FROM Restaurant)"}
{"question": "What is the name and class of the plane that flew from Washington, DC, to Houston, TX?", "query": "SELECT T1.name,  T1.class FROM aircraft AS T1 WHERE T1.city  =  \"Washington, DC\" AND T1.state  =  \"DC\" AND T1.country  =  \"USA\" AND T1.airport_code  =  \"IAD\" AND T1.flight_number  =  \"1\""}
{"question": "What is the first character of the name of the teacher who teaches the class called \"English\"?", "query": "SELECT T1.first_name FROM teacher AS T1 JOIN class AS T2 ON T1.teacher_id  =  T2.[teacher_id] WHERE T2.name  = 'English'"}
{"question": "Give the names of the countries with the largest number of students, ordered by the number of students", "query": "SELECT T1.country,  T1.population,  T1.student_count FROM country AS T1 GROUP BY T1.country ORDER BY T1.student_count DESC"}
{"question": "What is the number of drivers who have a larger number of accidents than average for the year?", "query": "SELECT count(*)  FROM accidents WHERE driver_id  >  (SELECT AVG(driver_id) FROM drivers)"}
{"question": "What is the name and id of the most popular doctor in the city?", "query": "SELECT T1.id,  T1.name FROM doctor AS T1 WHERE T1.city_id  =  \"1\""}
{"question": "List the names of all movies that are not directed by David Fincher", "query": "SELECT T1.name FROM movie AS T1 JOIN director AS T2 ON T1.movie_id  =  T2.movie_id WHERE T2.name  <>  \"David Fincher\""}
{"question": "Find all the customers that use the credit card \"Visa\"", "query": "SELECT customer_id,  customer_first_name,  customer_last_name,  T1.credit_card_type,  T1.credit_amount,  T1.credit_expiration_date,  T1.credit_limit,  T1.credit_status,  T1.credit_type,  T1.email,  T1.first_name,  T1:last_name,  T1:address_street,  T1:address_city,  T1:address_state,  T1:address_zip,  T"}
{"question": "What is the total volume of wine produced in the past 3 years?", "query": "SELECT SUM(Volume) FROM wine WHERE Year  =  \"2001\" OR Year  =  \"2002\" OR Year  =  \"2003\""}
{"question": "What are the names, ages, and positions of the employees with the most hours worked this week?", "query": "SELECT T1.employee_name,  T2.age,  T3.position FROM employee AS T1 JOIN employee_hours AS T2 ON T1.employee_id  =  T2.employee_id JOIN employee_position AS T3 ON T1.employee_id = T3.employee_id WHERE T2.week_worked  =  'this_week' ORDER BY T2.hours DESC"}
{"question": "What are the names and birth dates of the students who have been assigned to the same room at the same time?", "query": "SELECT T1.student_name,  T1.student_birth_date FROM students AS T1 JOIN room_assignments AS T2 ON T1.student_id  =  T2.[student_id] WHERE T2.room_id  =  \"room_id\" AND T2.room_date  =  \"room_date\""}
{"question": "What is the first name of the user with id \"24\" and last name \"Buchanan\"?", "query": "SELECT T1.name FROM users AS T1 WHERE T1.id  =  \"24\" AND T1.last_name  =  \"Buchanan\""}
{"question": "What are the names, and types of the products in the store", "query": "SELECT T1.product_name,  T1.product_type FROM product AS T1 JOIN product_category AS T2 ON T1.product_id  =  T2._id WHERE T2.category_id  =  \"1\""}
{"question": "What are the names, ranked by salary, of all the doctors who have not taken a job as a physician?", "query": "SELECT T1.name,  T2.salary FROM doctor AS T1 JOIN salary AS T2 ON T1.id  =  T2.id WHERE T2.job_id  =  0"}
{"question": "What is the name for the movie with the same title as a movie with an id of 813?", "query": "SELECT name FROM movie AS T1 WHERE T1.title  =  \"The Shawshank Redemption\" AND T1.id  =  \"813\""}
{"question": "What are the different colors of the walls in the office?", "query": "SELECT Color FROM wall_color"}
{"question": "How many times did the \"Nissan\" employee take a taxi?", "query": "SELECT T1.driver_id,  T1.trip_id,  T1.pickup_datetime,  T1.dropoff_datetime,  T1.pickup,  T1.dropoff,  T1.passenger_count,  T1.payment,  T1.tip,  T1.tip_amount,  T1.tip_given,  T1.tip_per_km,  T1.tip_total,  T1.tip_type,  T1.tip_note,  T1.tip_driver_id"}
{"question": "What are the names, birthdays and ages of the oldest students?", "query": "SELECT T1.name,  T1.birthday,  T1.age FROM students AS T1 WHERE T1.age  =  (SELECT min(age)  FROM students AS T2 WHERE T2.age  >  T1.age)"}
{"question": "What are the names and ids of the two people that are related by marriage?", "query": "SELECT T1.name,  T1.id FROM people AS T1 JOIN spouse AS T2 ON T1.spouse_id  =  T2"}
{"question": "What are the names, address and city of all the customers who have purchased a computer, an internet connection and a modem?", "query": "SELECT T1.customer_name,  T2.address_city,  T2.address_state,  T2.address_zip,  T2.address_country,  T2.address_street,  T2.address_house_number,  T2.address_pobox,  T2.address_neighborhood,  T2.address_postal_code,  T2.address_phone,  T2.address_fax,  T2.address_email,  T2.address_web,  T2.address_address_id"}
{"question": "What is the name and salary of the employee whose last name is \"Rosen\" and whose first name is \"Andrew\"?", "query": "SELECT T1.first_name,  T1.last_name,  T1.salary FROM employee AS T1 WHERE T1.last_name  =  \"Rosen\" AND T1.first_name  =  \"Andrew\""}
{"question": "What is the first name and last name of the students who have the most number of assessments?", "query": "SELECT T1.student_first_name,  T1.student_last_name FROM student AS T1 JOIN assessments AS T2 ON T1.student_id  =  T2.student_id WHERE T2.assessment_id  =  (SELECT T3.assessment_id FROM assessments AS T3 WHERE T3.student_id  =  (SELECT student_id FROM student AS T4 WHERE T4.first_name  =  'John' AND T4.last_name  =  'Smith' ) )"}
{"question": "What is the list of all the products with prices less than 1000?", "query": "SELECT T1.product_name,  T1.price FROM product AS T1 WHERE T1.price  <  1000"}
{"question": "Find the id of the student who has the highest average monthly rental", "query": "SELECT T1.id,  T1.name FROM student AS T1 JOIN rent AS T2 ON T1.id  =  T2.id WHERE T2.rental_amount  >  (SELECT avg (rental_amount) FROM student)"}
{"question": "What are the names, genders, and nationalities of the actors in the movie \"The Fighter\"?", "query": "SELECT T1.name,  T1.gender,  T1.nationality FROM actor AS T1 WHERE T1.name IN ( \"Christian Bale\", \"Mark Wahlberg\", \"Melissa Leo\", \"Seth Rogen\", \"Miles Teller\", \"Paddy Considine\", \"Maeve Dermody\", \"Jackie Earle Haley\", \"Mark Wahlberg\",  \"Mark Wahlberg\", \"Mark Wahlberg\", )"}
{"question": "What is the name and id of the student who's first name starts with 'C' and end with 'H'?", "query": "SELECT T1.student_id,  T1.name_first,  \""}
{"question": "What:\nFind the name of the store for which the customer is a loyal customer", "query": "SELECT T1.store_id FROM customer AS T1 JOIN customer_stores AS T2 ON T1.customer_id  =  T2._id WHERE T2.store_id  =  \"1\""}
{"question": "Find the number of employees who are older than 40 and are older than 50", "query": "SELECT count(*) AS count FROM employees WHERE age > 40 AND age > 50"}
{"question": "Find the name of all the students who have not passed the course", "query": "SELECT T1.name FROM student AS T1 JOIN class AS T2 ON T1.id  =  T2.student_id WHERE T2.crs_code  = 'ACCT-211' AND T2.crs_name  =  'ACCT-201'"}
{"question": "Which is the most popular number of the largest city?", "query": "SELECT T1.population FROM city AS T1 WHERE T1.population  =  (SELECT MAX(T2.population) FROM city AS T2)"}
{"question": "Give the names of all the students who have taken the course \"Arts and Literature\"", "query": "SELECT T1.student_id,  T1.name FROM students AS T1 JOIN class_attendance AS T2 ON T1.student_id  =  T2._id WHERE T2.course_id  =  \"Arts and Literature\""}
{"question": "List all the customers and the amount of their total account balance", "query": "SELECT T1.customer_id,  T1.total_account_balance FROM customers AS T1"}
{"question": "Find the names and numbers of all users who are not in the department with id=1?", "query": "SELECT T1.name,  T2.id FROM user AS T1 JOIN department AS T2 ON T1.department_id  =  T2"}
{"question": "What is the average score of the fastest player in the world?", "query": "SELECT AVG(score) FROM player WHERE player_id = (SELECT player_id FROM player WHERE player_id = 1)"}
{"question": "How many different advisors?", "query": "SELECT DISTINCT advisor_name FROM advisor"}
{"question": "Find the names of the employees who had the highest number of transactions", "query": "SELECT T1.name FROM employee AS T1 JOIN transactions AS T2 ON T1.emp_id  =  T2.[employee_id] GROUP BY T1.name HAVING count(*)  >  1"}
{"question": "Find the names of authors who have written books with titles \"An Introduction to the Theory of Groups\" or \"An Introduction to the Theory of Functions of a Real", "query": "SELECT author_name FROM books WHERE book_title  =  \"An Introduction to the Theory of Groups\";"}
{"question": "After \"", "query": "SELECT DISTINCT title FROM Movie EXEPT SELECT T2.title FROM Rating as T1 JOIN Movie as T2 ON T1.mId  =  T2.mId JOIN Reviewer as T3 ON T1.rId  =  T3.rId WHERE T3.name  = 'Chris Jackson'"}
{"question": "What are the names and prices of all products?", "query": "SELECT T1.product_name,  T2.price FROM products AS T1 JOIN products AS T2 ON T1.product_id  =  T2.product_id"}
{"question": "How many students in the university have the name of \"James Jackson\"?", "query": "SELECT count(*) AS count FROM students WHERE name  =  \"James Jackson\""}
{"question": "What is the average speed of the fastest plane?", "query": "SELECT avg(speed) FROM planes WHERE speed  >  100"}
{"question": "Find the details of the order which has the highest total number of transactions", "query": "SELECT T1.order_id,  T1.order_date,  T1.order_total,  T1.order_status,  T1.order_type,  T1.order_number,  T1.order_item_id,  T1.item_id,  T1._id,  T1.customer_id,  T1.address_id,  T1.city,  T1.state,  T1.zip,  T1.country,  T1._id, T1.order_status_id,"}
{"question": "How many different kinds of cars are there in the city \"Birmingham\"?", "query": "SELECT DISTINCTION T1.car_type_id,  T1.car_type_name FROM car_type AS T1 WHERE T1.city  =  \"Birmingham\""}
{"question": "What is the average rating of all films?", "query": "SELECT avg(rating) FROM movie"}
{"question": "What are the names and ids of the customers who have purchased both a car and a house?", "query": "SELECT T1.id,  T1.name_first,  c1.id AS car_id,  c1.name AS car_name,  c2.id AS car_id, T1.name_last,  c3.id AS house_id,  c3.name AS house_name,  c4.id AS house_id, T1.name AS customer_name FROM customer AS T1 JOIN customer_car AS c1 ON T1.id  =  c1.customer_id AND c1.id  =  1 AND c1."}
{"question": "How many movie tickets did the \"Walt Disney Company\" sell for $10?", "query": "SELECT T1.movie_id,  T1.price,  T1.quantity FROM movie_tickets AS T1 WHERE T1.movie_id  =  \"Walt Disney Company\" AND T1.price  =  \"10\""}
{"question": "What are the names and ids of the students who are not enrolled in any course yet?", "query": "SELECT T1.student_id FROM students AS T1 WHERE NOT EXISTS (SELECT T2.student_id FROM student_course_enrolment AS T2 WHERE T2.student_id  =  'T1.student_id')"}
{"question": "What are the names and ages of the technicians and how many machines are they assigned to", "query": "SELECT T1.name,  T1.age FROM technician AS T1 JOIN machine AS T2 ON T1.id  =  T2.technician_id ORDER BY T1.name ASC"}
{"question": "What is the name, age and sex of the customer with the highest support rate?", "query": "SELECT T1.customer_name,  T2.age,  T2.sex FROM customers AS T1 JOIN orders_history AS T2 ON T1.id  = T2.customer_id WHERE (T2.order_status = \"Support\" AND T2.order_date  =  (SELECT MAX(order_date) FROM orders_history))"}
{"question": "Find all employees who are in the sales department and have worked for the company for more than 5 years", "query": "SELECT T1.Name,  T1.Department,  T1.Hire_date,  T1.Salary,  T1.Years_at_company FROM employee AS T1 WHERE T1.Department  =  \"Sales\" AND T1.Hire_date  >  \"2015-01-01\" AND T1.HireDate  >  \"2015-01\" AND T1.Salary  >  \"5000\""}
{"question": "What is the name, location and number of platforms for all stations in the city of Newark, NJ?", "query": "SELECT T1.name,  T1.location,  T1.number_of_platforms FROM stations AS T1 WHERE T1.city_id  =  \"Newark\""}
{"question": "How many heads of the departments are younger than 24?", "query": "SELECT T1.dept_name,  T1.age FROM department AS T1 WHERE T1.age  <  24"}
{"question": "What are the names, birth state and age of people with the same name", "query": "SELECT T1.name,  T1.state,  T1.[age] FROM people AS T1 WHERE T1.name  =  'John'"}
{"question": "List the first names of all employees in the company", "query": "SELECT T1.name FROM employees AS T1 JOIN employee_addresses AS T2 ON T1.emp_id  =  T2.emp_id JOIN employee_phone_numbers AS T3 ON T1.emp_id = T3.emp_id JOIN employee_emails AS T4 ON T1.emp_id   =  T4.emp_id WHERE T2.address_id  =  \"1\" AND T3.phone_number  =  \"1\" AND (T4.email_address  =  \"1\" OR T4.email_address"}
{"question": "What are the names and the numbers of each of the departments that appear in the data file?", "query": "SELECT T1.department_name,  T1.department_id FROM department AS T1 JOIN department_teacher AS T2 ON T1.department_id  =  T2._department_id WHERE T2.teacher_id  =  \"T1\""}
{"question": "What is the second smallest number in the table (id, weight, height) in the database?", "query": "SELECT T1.weight,  T1.height,  T1.id FROM student AS T1 WHERE T1.id  =  ( SELECT T2.id FROM student AS T2 WHERE T2.height  =  T1.height AND T2.weight  =  T1.weight )"}
{"question": "(about a different table): What are the names of departments that have the largest number of employees with a Ph", "query": "SELECT T1.name,  T2.department_id FROM departments AS T1 JOIN employees AS T2 ON T1.department_id  =  T2"}
{"question": "Find the first name and last name of the staff in the office with ID 100", "query": "SELECT FirstName, LastName FROM Staff WHERE id  =  100"}
{"question": "What are the last names of the customers who are not in any of the lists?", "query": "SELECT T1.last_name FROM customer AS T1 LEFT JOIN customer_list AS T2 ON T1.id  = T2.customer_id WHERE NOT EXISTS (SELECT T3.id FROM customer_list AS T3 WHERE T3.customer_id = T1.id)"}
{"question": "- What are the names of the authors who wrote a paper with title containing the word 'The'?", "query": "SELECT T1.author_name FROM paper_authors AS T1 WHERE T1.paper_title  LIKE '%The%'"}
{"question": "Show the name and number of employees who are in the departments which have the head whose temporary acting value is 'Yes'", "query": "SELECT T1.name,  T1.id FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.[id] WHERE T2.head_id  =  \"1\" AND T2.temp_acting_value  =  \"Yes\""}
{"question": "What are the names, locations and IDs of the countries with more than two cities?", "query": "SELECT T1.country_id,  T1.country_name,  T1.city_id,  T1.city_name,  T1.country_code FROM country AS T1 WHERE T1.country_id  >  2"}
{"question": "How many different advisors is there?", "query": "SELECT DISTINCT advisor_name FROM advisor"}
{"question": "What is the name and id of the employee with the id 3768?", "query": "SELECT T1.employee_id,  T1.name,  T1.\"id\" FROM employee AS T1 WHERE T1.employee_id  =  3768"}
{"question": "What is the average number of movies per day watched by the 10 most popular users?", "query": "SELECT AVG(movies_watched) FROM ( SELECT TOP 10 T1.user_id,  T1.movie_id FROM user_movies AS T1 WHERE T1.user_id  =  T2.[user_id] ORDER BY T1.movie_id DESC ) AS T2"}
{"question": "What is the name and id of the person that has the maximum id?", "query": "SELECT T1.name,  T1.id FROM person AS T1 WHERE T1.id  =  (SELECT max(id) FROM person)"}
{"question": "How many residents are there in the city?", "query": "SELECT count(*) AS count FROM city WHERE city_name  =  \"San Francisco\""}
{"question": "Add a column to the table containing the names of the customers", "query": "SELECT T1.customer_name FROM customer AS T1"}
{"question": "What are the names, birth dates, and addresses of all the students who are currently in school?", "query": "SELECT T1.student_name,  T1.student_age,  T1.student_address FROM student AS T1 WHERE T1.student_status  =  \"In school\""}
{"question": "What are the names, addresses, and phone numbers of all the people who are a part of the group called \"The Committee\"", "query": "SELECT T1.firstname,  T1.lastname,  T1.address,  T1.phone FROM member AS T1 JOIN group AS T2 ON T1.member_id  =  T2._id WHERE T2.name  = \"The Committee\""}
{"question": "Find the name of all drivers who have at least one accident", "query": "SELECT T1.driver_id,  T1.name FROM driver AS T1 JOIN accidents AS T2 ON T1.driver_id  =  T2.[driver_id] WHERE T2.accident_id  =  '1'"}
{"question": "What are the authors of books with the following descriptions: all fiction, adult, and Y?", "query": "SELECT T1.author_name,  T1.book_title,  T1.book_isbn,  T1.book_description,  T1.book_year FROM book AS T1 JOIN author AS T2 ON T1.author_id  =  T2.author_id WHERE T1.book_isbn  =  \"978-1-4-14-98500-0\" AND T1.book_description  =  \"all fiction\" AND T1.book_year  =  \"Y\" OR T1.book_description  =="}
{"question": "(a question about a sql table)", "query": "SELECT * FROM table"}
{"question": "What is the average number of working dogs of farms with more than 5000 total population of dogs?", "query": "SELECT AVG(Dogs) FROM (SELECT T1.population_total FROM farms AS T1 WHERE T1.population_total > 5000) AS T2"}
{"question": "What are the names, birthdays, and ages of the students from the College of William and Mary?", "query": "SELECT name,  birthday,  age FROM College_of_William_and_Mary.Students"}
{"question": "How many songs are there in the album \"Sgt", "query": "SELECT T1.song_id FROM Album_Songs AS T1 JOIN Album_Tracks AS T2 ON T1.album_id  =  T2_id WHERE T2.title  =  \"Sgt. Pepper's Lonely Hearts Club Band\""}
{"question": "What are the average scores of all students in Mathematics?", "query": "SELECT AVG(score) FROM student"}
{"question": "What are the names?", "query": "SELECT T1.name FROM students AS T1 WHERE T1.id  =  '1'"}
{"question": "What is the first name of the child of the customer called \"John\", whose father is called \"George?", "query": "SELECT T1.first_name FROM customer AS T1 JOIN customer_children AS T2 ON T1.Customer_ID  =  T2.Customer_ID WHERE T2.Customer_ID  =  \"John\" AND T2.Child_ID  =  \"George\""}
{"question": "How many accounts opened by each customer?", "query": "SELECT Customer_ID,  COUNT(*) FROM Accounts AS T1 JOIN customers AS T2 ON T1.Customer_ID  =  T2.Customer_ID GROUP BY T1.Customer_ID"}
{"question": "What are the names, location and number of buildings in the university of alberta?", "query": "SELECT T1.name,  T1.location,  T1.number_of_buildings FROM buildings AS T1 WHERE T1.university_id  =  \"Alberta\""}
{"question": "List the names of all products that have at least one product in the \"A\" category", "query": "SELECT name FROM products WHERE category_id  =  \"A\""}
{"question": "What is the name and id of the employee with the most vacation days?", "query": "SELECT T1.employee_id,  T1.name,  T1.\"Vacation Days\" FROM employee AS T1 JOIN vacation AS T2 ON T1.employee_id  =  T2.\"Employee ID\" GROUP BY T1.employee_id, T1.name, T1.\"Vacation Days\" ORDER BY T1.employee_id  ASC,  T1.name  ASC,  T1.\"Vacatino Days\" ASC"}
{"question": "What are the names and pictures of all students", "query": "SELECT T1.name,  T1.\"picture\" FROM student AS T1;"}
{"question": "Show the average salary of each job title", "query": "SELECT T1.job_title,  AVG(T1.salary) FROM employees AS T1 GROUP BY T1.job_title"}
{"question": "What are the names and locations of the colleges located in all other states except California?", "query": "SELECT T1.name,  T1.location FROM college AS T1 JOIN state AS T2 ON T1.state_id  =  T2.id WHERE T2.state_name  =  'all other states except California'"}
{"question": "Find the names of people who did not attend the candidates' debate", "query": "SELECT T1.first_name,  T1.last_name FROM Candidates AS T1 WHERE T1.first_name  NOT IN (SELECT T2.first_name FROM Attendees AS T2)"}
{"question": "What is the name and address of the customer who has the most number of transactions?", "query": "SELECT customer_name,  customer_address FROM customer WHERE customer_transactions  =  (SELECT max(customer_transactions) FROM customer)"}
{"question": "What is the name and price of the product ordered most often?", "query": "SELECT T1.product_name,  T1.price FROM products AS T1 WHERE T1.id  =  (SELECT product_id FROM products WHERE product_name  =  \"Product A\" AND price  =  \"$price\")"}
{"question": "What is the average temperature in Boston in June?", "query": "SELECT AVG(temp) FROM weather WHERE city  =  'Boston' AND month  =  'June'"}
{"question": "What are the id, name, and address of the home of the player with the most wins?", "query": "SELECT T1.id,  T1.name,  T1.address FROM player AS T1 WHERE T1.win_count  =  (SELECT max(T2.win_count) FROM player AS T2)"}
{"question": "(a novel question, about a table) Given: [A table with three columns, the first with first name, last name, and id, the second", "query": "SELECT T1.first_name,  T1.last_name,  T2.id FROM people AS T1 JOIN people_friends AS T2 ON T1.id  =  T2.id WHERE T2.first_name  =  \"John\" AND T2.last_name  =  \"Smith\""}
{"question": "What are the names and ids of all people in the city of Columbus, MO?", "query": "SELECT T1.id,  T1.name_first,  'Columbus' AS city FROM player AS T1 WHERE T1.city = 'Columbus'"}
{"question": "Show all the names of the universities with less than 1000 students", "query": "SELECT T1.name FROM university AS T1 WHERE T1.student_count  <  1000"}
{"question": "Find the number of employees who have ever been arrested and have the word \"police\" in their names", "query": "SELECT count(*) AS count FROM employee AS T1 JOIN arrest AS T2 ON T1.id  =  T2.employee_id WHERE T2.name  =  \"police\""}
{"question": "What is the average price of all products with \"Medicinal\" as manufacturer code?", "query": "SELECT AVG(price) FROM products WHERE manufacturer  =  \"Medicinal\""}
{"question": "Find the last name and first name of the professor with the most number of students during the last year", "query": "SELECT T1.last_name,  T1.first_name FROM professor AS T1 JOIN students AS T2 ON T1.professor_id  =  T2.professor_id WHERE T2.student_id  =  (SELECT max(student_id) FROM student)"}
{"question": "Find the names of the people who were born in 1993", "query": "SELECT T1.last_name,  T1.first_name FROM people AS T1 JOIN birth_dates AS T2 ON T1.birth_date  =  T2.birth_date WHERE T2.year  =  1993"}
{"question": "(a question about a sql table) Find a list of schools that are not connected to the university of Arizona", "query": "SELECT DISTINCT school_code FROM school_connection WHERE school_code NOT IN (SELECT DISTINCT school_code FROM university_connection)"}
{"question": "What are the names, birth dates, and addresses of all students in class 204?", "query": "SELECT T1.name,  T2.birth_date,  T3.address FROM student AS T1 JOIN class_204 AS T2 ON T1.class_id  =  T2.class_id JOIN student_address AS T3 ON T1.student_id = T3.student_id WHERE T2.class_id  =  204"}
{"question": "What are the names, genders and ages of all musicians?", "query": "SELECT T1.name,  T1.gender,  T1.age FROM musicians AS T1"}
{"question": "What is the average salaries of all managers?", "query": "SELECT AVG(salary) FROM manager"}
{"question": "Find the names of all managers in the year 2012", "query": "SELECT T1.name FROM Employee AS T1 JOIN Employee_Department_History AS T2 ON T1.emp_id  =  T2.emp_id WHERE T2.year  =  2012"}
{"question": "What is the name and surname of the student with the most number of votes?", "query": "SELECT student_name,  student_surname FROM students WHERE student_id  =  (SELECT max(student_id) FROM votes);"}
{"question": "Find the total number of students in each course", "query": "SELECT T1.crs_code,  T1.crs_name,  T1.crsid,  T1.crsname,  T1.crtime,  T1.crsdesc,  T1.crsintro,  T1.crsinstructors,  T1.crsroom,  T1.crsgrade,  T1.crsmax,  T1.crsmin,  T1.crstotal FROM course AS T1 WHERE T1.crs_id  IN (SELECT T2.c"}
{"question": "What is the total number of registered students?", "query": "SELECT COUNT(*) FROM student"}
{"question": "What is the name and id of the student who has the most number of courses?", "query": "SELECT T1.student_id,  T1.name FROM student AS T1 JOIN courses AS T2 ON T1.student_id  =  T2.student_id WHERE T2.course_id  =  (SELECT max(T3.course_id) FROM course AS T3)"}
{"question": "What are the names, id and email addresses of all the students in the class of the year?", "query": "SELECT T1.student_first_name,  T1.student_last_name,  T1.student_id,  T1.student_email FROM student AS T1 JOIN class_of_the_year AS T2 ON T1.student_id  =  T2.student_id WHERE T2.class_name  =  \"Class of the Year\""}
{"question": "What are the first name and last name(s) of all the students with the names of \"X\", \"Y\" and \"Z\"?", "query": "SELECT T1.Fname,  T1.Lname FROM Students AS T1 WHERE T1.name IN (\"X\", \"Y\", \"Z\")"}
{"question": "What are the names, ages and hometowns of all the students?", "query": "SELECT T1.first_name,  T1.last_name,  T1.age,  T1.hometown FROM student AS T1"}
{"question": "List the names of all the courses in descending order", "query": "SELECT name FROM course ORDER BY name DESC"}
{"question": "What is the number and type of students, instructors, and courses in the University?", "query": "SELECT T1.student_id,  T1.student_name,  T1.instructor_id,  T1.course_id,  T1.class_code,  T1.class_name,  T1.section_code,  T1.section_name,  T1.semester_code,  T1.semester,  T1.year,  T1.grade,  T1.grade_code,  T1.grade_name,  T1.grade_percentage,  T1.grade_description,  T"}
{"question": "What are the names and birthdays of the employees who were born on the same day?", "query": "SELECT T1.first_name,  T1.last_name,  T1.birthday FROM employee AS T1 WHERE T1.birthday  =  ( SELECT MIN(T2.birthday) FROM employee AS T2 WHERE T2.first_name  =  T1.first_name AND T2.last_name  =  T1.last_name )"}
{"question": "What are the names, cities and countries of the largest cities in the United States?", "query": "SELECT T1.city,  T1.country,  T1.population FROM cities AS T1 WHERE T1.population  >  (SELECT max(population) FROM cities)"}
{"question": "What is the average grade point of students in 'physics'?", "query": "SELECT AVG(grade) FROM student WHERE course_code  =  \"physics\""}
{"question": "What is the average age of male students who are taking courses in the Computer Science department?", "query": "SELECT AVG(age) FROM students WHERE department_code  =  \"Computer Science\" AND gender  =  \"Male\""}
{"question": "(a novel question, about a tec", "query": "SELECT count(*)  FROM customer WHERE credit_score  < 100"}
{"question": "find the first name of the employees who have been working at the company for the longest period of time", "query": "SELECT T1.first_name FROM employee AS T1 JOIN employee_history AS T2 ON T1.id  =  T2.employee_id WHERE T2.start_date  >  '2016-01-01'"}
{"question": "What are the id and names of the instructors who have both a degree in physics and a degree in chemistry?", "query": "SELECT T1.id,  T1.name FROM instructor AS T1 JOIN instructor_department AS T2 ON T1.id  =  T2.id WHERE T2.department_id  =  1 AND T2.department_name  =  'Physics' AND T2.department_id_name  =  'Physic' AND T2.department  =  'Physics'"}
{"question": "What are the times when the student with id 143 has an appointment?", "query": "SELECT T1.appointment_time FROM appointment AS T1 JOIN student AS T2 ON T1.student_id  =  T2.student_id WHERE T2.student_id  =  143"}
{"question": "Find the id of the student whose name is 'Ted'", "query": "SELECT T1.id FROM student AS T1 WHERE T1.name = 'Ted'"}
{"question": "What is the name of the player with the highest average speed in the year 2008?", "query": "SELECT T1.player_name FROM player AS T1 WHERE T1.year  =  2008 AND T1.average_speed  =  ( SELECT max(average_speed) FROM player )"}
{"question": "Find the name of customer who has the highest transaction volume but without a credit card", "query": "SELECT customer_name FROM customers WHERE customer_transaction_volume  >  (SELECT customer_transaction_volume FROM customers WHERE customer_credit_card_id  =  0)"}
{"question": "Show the names and dates of all applicants who are from the college of engineering", "query": "SELECT T1.name,  T1.date FROM applicant AS T1 WHERE T1.college  =  \"College of Engineering\""}
{"question": "What are the names, start dates, and end dates for all apartment bookings?", "query": "SELECT T1.start_date,  T1.end_date,  T1.name FROM apartment_booking AS T1 WHERE T1.start_date  <  '2015-01-01' AND T1.end_date  >  '2015-01-01';"}
{"question": "(a novel question, about a specific person), after \"", "query": "Examples of some or all task item:"}
{"question": "What are the names, id, and email of all the customers who bought a product with the most complaints?", "query": "SELECT T1.Name,  T1.id,  T1.email FROM customer AS T1 JOIN order_history AS T2 ON T1.id  =  T2.customer_id WHERE T2.complaint_count  >  1;"}
{"question": "What are the courses with the most registered students? List the course name and the number of their students", "query": "SELECT T1.course_name,  T2.student_count FROM course AS T1 JOIN students AS T2 ON T1.id  =  T2.id WHERE T1.course_id  IN (SELECT T3.course_id FROM course AS T3 JOIN courses AS T4 ON T3.id  =  T4.id WHERE T4.course_name  =  \"CSCI 101\")"}
{"question": "Show the names of all employees and what they do", "query": "SELECT T1.employee_name,  T1.job_title FROM employees AS T1 JOIN job_titles AS T2 ON T1.job_id  =  T2"}
{"question": "List all directors along the number of films directed by each directors", "query": "SELECT T1.director_name,  T1.director_id FROM director AS T1 JOIN film_director AS T2 ON T1.director_id  =  T2.director_id GROUP BY T1.director_id ORDER BY count(*)"}
{"question": "What are the ids, names and ages of all students in the high school?", "query": "SELECT T1.student_id,  T1.student_name,  T1.student_age FROM student AS T1 JOIN highschool AS T2 ON T1.student_id  =  T2._id WHERE T2.school_id  =  \"1\""}
{"question": "Find all information related to the customers who have returned products", "query": "SELECT customer_id,  customer_first_name,  customer_last_name,  customer_address,  customer_city,  customer_state,  customer_zip,  customer_phone,  customer_email,  customer_fax,  customer_country,  customer_type,  customer_type_id,  customer_type_name,  customer_type_description,  customer_type_code,  customer_type_description_id,  customer_type  FROM customers WHERE customer_id  =  \"1\""}
{"question": "What is the average age of all students at the school?", "query": "SELECT T1.age FROM student AS T1 WHERE T1.school_id  =  \"1\""}
{"question": "How many employees have the same first name?", "query": "SELECT T1.first_name FROM employees AS T1 GROUP BY T1.first_name HAVING COUNT(*) > 1"}
{"question": "What are the names (comma separated) of the students who registered for course 300?", "query": "SELECT student_name FROM student WHERE course_id  =  300"}
{"question": "How many students are there who have taken courses that are part of the course \"Electrical Engineering\"?", "query": "SELECT T1.student_id FROM Student AS T1 JOIN course AS T3 ON T1.course_id  =  T3.course_id WHERE T3.course_name  =  \"Electrical Engineering\""}
{"question": "What are the names, addresses, and phone numbers of all the customers whose names begin with \"H\"", "query": "SELECT T1.firstname,  T1.lastname,  T1.address,  T1.phone,  T1.city,  T1.state,  T1.zipcode,  T1.country,  T1.[email],  T1.phone_type,  T1.phone_number,  T1.phone_extension,  T1.phone_fax,  T1.phone_mobile,  T1.phone_other,  T1.phone_pager,  T1.phone_home,  T1.phone"}
{"question": "What are the courses that have the highest number of students?", "query": "SELECT T1.course_id,  T1.number_of_students FROM course AS T1 JOIN students AS T2 ON T1.id  =  T2.id GROUP BY T1.course_id ORDER BY T1.number_of_studies DESC"}
{"question": "What are the first names and the last names of students who have a grade of C in the course \"MATH 101\"", "query": "SELECT T1.student_fname,  T1.student_lname,  T2.crs_name FROM student AS T1 JOIN course AS T2 ON T1.student_id  =  T2.student_id WHERE T2.course_code  =  \"MATH 101\" AND T2.crs_name  =  \"C\""}
{"question": "List the cities, the number of students, and the number of students who are also in the same city", "query": "SELECT city,  count(*) FROM student GROUP BY city"}
{"question": "What are the ids, names and prices of all products from the year 2002", "query": "SELECT T1.product_id,  T1.product_name,  T1.price FROM product AS T1 WHERE T1.year  =  2002"}
{"question": "find the names of students who used an e-Banking service", "query": "SELECT T1.student_id,  T2.name FROM students AS T1 JOIN e_banking_service AS T2 ON T1.user_id  =  T2.user_id"}
{"question": "What is the average test score of a student with the last name Smith?", "query": "SELECT AVG(test_score) FROM student WHERE last_name  =  'Smith'"}
{"question": "What are the names (and pictures) of the 5 most famous scientists of all time?", "query": "SELECT T1.first_name,  T1.last_name,  T1.picture FROM scientists AS T1 WHERE T1.first_name  LIKE \"%\"  OR T1.last_name  LIKE \"%\" ORDER BY T1.first_name  ASC LIMIT 5"}
{"question": "What is the name and id of the customers in alphabetical order with the highest balance?", "query": "SELECT name,  id FROM customers ORDER BY balance DESC LIMIT 1"}
{"question": "What are the titles and names of all the countries in Europe?", "query": "SELECT T1.country_name FROM countries AS T1 WHERE T1.country_code  =  \"DE\""}
{"question": "What is the value of an unknown variable?", "query": "SELECT T1.value FROM variable AS T1 WHERE T1.name  =  \"unknown\""}
{"question": "Find the ids of the students whose name contains 'A' in the first name or surname", "query": "SELECT T1.id FROM students AS T1 WHERE T1.name LIKE '%A%'"}
{"question": "What are the names, positions of the players with the total score above 100 in the basketball game?", "query": "SELECT name,  position FROM player WHERE total_score  >  100"}
{"question": "What are all the names of the customers who have purchased the product?", "query": "SELECT T1.product_name FROM customers AS T1 WHERE T1.customer_id  IN (SELECT T2.customer_id FROM orders AS T2 WHERE T2.product_id = T1.product_id)"}
{"question": "What are the names, ages, and student id of all students who took at least one course?", "query": "SELECT T1.name,  T1.[age],  T1.student_id FROM student AS T1 WHERE T1.course_id  =  ( SELECT T2.course_id FROM course AS T2 WHERE T2.course_name  =  \"Calculus\" )"}
{"question": "What are the names in the same order as the list of products in the database?", "query": "SELECT T1.name FROM products AS T1 JOIN products_description AS T2 ON T1.product_id  =  T2.product_id WHERE T2.description  =  \"The first product\""}
{"question": "What is the average age of all students who live in New York and are younger than 35?", "query": "SELECT AVG(age) FROM Student WHERE city_code  ='NY' AND age < 35"}
{"question": "What is the difference between the average and maximum temperature of the day's first half and the average and maximum temperature of the second half of the day?", "query": "SELECT AVG(temperature),  MAX(temperature) FROM temperature WHERE time_of_day  = 'morning' AND time_of_day  = 'afternoon'"}
{"question": "What are the ids for each customer with id less than 2000?", "query": "SELECT customer_id FROM customer WHERE customer_id  <  2000"}
{"question": "(a question about a sql table) Answer: What is the average temperature of all the students at the University of Chicago?", "query": "SELECT AVG(temperature) FROM students"}
{"question": "What is the name and the description of the song 'The Sound of Silence'?", "query": "SELECT T1.song_name,  T1.song_description FROM song AS T1 WHERE T1.song_id  =  'The Sound of Silence'"}
{"question": "What are the names or titles of all the engineers at the company?", "query": "SELECT T1.name,  T2.title FROM engineer AS T1 JOIN employees AS T2 ON T1.employee_id  =  T2._id GROUP BY T1.name, T2.title"}
{"question": "What are the names, salaries, and genders of the employees who have a salary greater than 50,000?", "query": "SELECT T1.employee_id,  T1.name_first,  'T1.name_last',  T1.salary,  T1.gender FROM employee AS T1 WHERE T1.salary  >  50 GROUP BY T1.employee_id, T1.name_first, T1.name_last, T1.salary, T1.gender ORDER BY T1.salary DESC LIMIT 1"}
{"question": "What are the names, ids and telephone numbers of all the customers who made orders during the last year?", "query": "SELECT T1.name,  T1._id,  T1.phone_number FROM customer AS T1 WHERE T1.order_date  >  (SELECT max(order_date) FROM customer)"}
{"question": "What is the name and id of the customer who ordered the most number of products?", "query": "SELECT customer_id,  customer_name,  count(*) AS total_order FROM customers WHERE customer_name  =  \"David\" GROUP BY customer_id HAVING count(customer_name)  =  (SELECT count(*) FROM customers WHERE customer_name  =\"David\")"}
{"question": "Show the names of people who are friends with Bob", "query": "SELECT T1.name FROM friend AS T1 JOIN friend AS T2 ON T1.friend_id  =  T2.friend_id WHERE T1.name  =  'Bob'"}
{"question": "What is the name for the student with the first name 'Kyle' and last name 'Gat'?", "query": "SELECT T1.first_name,  T1.last_name FROM students AS T1 WHERE T1.first_name  =  \"Kyle\" AND T1.last_name  =  \"Gat\""}
{"question": "What are the customers who have purchased an item from the store where the average price of the item is lower than 100?", "query": "SELECT T1.item_id,  T1.item_name,  T1.item_price,  T1.item_quantity,  T1.item_total FROM item AS T1 WHERE T1.item_price  <  100"}
{"question": "What's the average salary of employees in the marketing department of a company named \"Alfreds Futterkiste\"?", "query": "SELECT AVG(salary) FROM employees WHERE department_id  =  \"Marketing\""}
{"question": "Show the names and ids of all the employees in order of salary", "query": "SELECT T1.firstname,  T1.lastname,  T1.salary FROM employee AS T1 JOIN salary AS T2 ON T1.id  =  T2.employeeid ORDER BY T2.salary ASC"}
{"question": "\"a novel question, about a different\"", "query": "SELECT * FROM novels WHERE author_id = \"a novel question, about a\""}
{"question": "What are the names, titles and numbers of the countries where there are no more than three players?", "query": "SELECT T1.Country_name,  T1.Country_code,  T1.Country_population FROM Country AS T1 WHERE T1.Country_population  >  3;"}
{"question": "Which films have 'Deleted Scenes' in the title?", "query": "SELECT name FROM film_info WHERE film_info.film_id IN (SELECT film_info.film_id FROM film_info JOIN deleted_scenes AS T1 ON film_info.film_id  =  T1.film_id)"}
{"question": "What are the types of aircrafts?", "query": "SELECT T1.type FROM aircraft AS T1 JOIN aircraft_type AS T2 ON T1.type_id  =  T2.type_id"}
{"question": "What is the id for the customer that has email \"luig@gmail", "query": "SELECT T1.customer_id FROM customer AS T1 WHERE T1.email  =  \"luig@gmail\""}
{"question": "Find the average number of students under each professor", "query": "SELECT AVG(T2.student_count) FROM professors AS T1 JOIN students AS T2 ON T1.professor_id  =  T2.professor_id"}
{"question": "What is the average price of the products with the highest price?", "query": "SELECT AVG(price) FROM products WHERE price  >  (SELECT MAX(price) FROM products)"}
{"question": "What is the number of customers who live in the city of New York?", "query": "SELECT COUNT(*) FROM customer WHERE city  =  'New York'"}
{"question": "Find the names of customers who took the least number of rides", "query": "SELECT T1.Name FROM Customer AS T1 JOIN Rides AS T2 ON T1.customerid  =  T2.Customer_id WHERE T2.Ride_ID  =  (SELECT min(Ride_ID) FROM Rides)"}
{"question": "What is the name and description of the all courses under the \"Mathematics\" subject?", "query": "SELECT T1.name,  T1.description FROM courses AS T1 JOIN subjects AS T2 ON T1.subject_id  =  T2.subject_id WHERE T2.name  =  \"Mathematics\""}
{"question": "How many people are there in the city of San Francisco?", "query": "SELECT COUNT(*) FROM city"}
{"question": "Find a student named David who has no classes", "query": "SELECT T1.first_name,  T1.last_name,  T1.student_id,  'David' AS student_name FROM students AS T1 WHERE T1.student_id  NOT IN (SELECT T2.student_id FROM classes AS T2)"}
{"question": "What are the names for the employees who were responsible for the last 3 incidents?", "query": "SELECT name FROM employees WHERE employee_id  =  \"1\" OR employee_id  =  \"2\" OR employee_id  = \"3\""}
{"question": "What are the names and ages of all the students who have a parent named \"George\"?", "query": "SELECT T1.first_name,  T1.last_name,  T1.age FROM student AS T1 JOIN parents AS T2 ON T1.parent_id  =  T2.[id] WHERE T2.first_name  =  \"George\""}
{"question": "What is the price of the first and last item in a cart?", "query": "SELECT price FROM cart WHERE item_id  =  1 AND quantity  =  1;"}
{"question": "What is the best way to use the function?", "query": "SELECT T1.title,  T1.description FROM film_actor AS t1 JOIN film AS t2 ON t1.film_id  = t2.film_id WHERE T1.title  =  \"The Shawshank Redemption\""}
{"question": "What are the names (first and last names) and the salary of all employees who do not have a manager?", "query": "SELECT T1.first_name,  T1.last_name,  T2.salary FROM employees AS T1 JOIN employees AS T2 ON T1.employee_id  =  T2.\"employee_id\" WHERE T1.manager_id IS NULL"}
{"question": "What are the names and salaries of the teachers at the University of Michigan?", "query": "SELECT T1.Name,  T1.salary FROM teacher AS T1 JOIN faculty AS T2 ON T1.teacher_id  =  T2._id WHERE T1.teacher_id IN (SELECT T3.teacher_id FROM teacher AS T3 JOIN faculty AS T4 ON T3.teacher_id  = T4._id WHERE T4.name  =  \"University of Michigan\")"}
{"question": "How many students are in the class?", "query": "SELECT count(*) from students"}
{"question": "Find the average and total number of times each employee has been to the gym in the last two months", "query": "SELECT T1.employeeid,  T1.gym_visit_date,  T1.gymn_time,  T1.gymm_time,  T1.total_time,  T1.avg_time FROM gym_visits AS T1 WHERE T1.gym_visit_id  >  0"}
{"question": "What are the names, last names, and ids of the different companies?", "query": "SELECT T1.name,  T1.last_name,  T1.id FROM company AS T1 WHERE T1.name  =  'ABC' OR T1.name  =  'def' OR T1.name  like  '%abc%' OR T1.name  LIKE  '%def%'"}
{"question": "What is the id, name and age of the student who has a score higher than 1233?", "query": "SELECT T1.id,  T1.name,  T1.age FROM student AS T1 WHERE T1.score  >  1233"}
{"question": "What are the names and ids of the customers who have no orders?", "query": "SELECT T1.id,  T1.name_first,  count(*) FROM customer AS T1 WHERE T1.id  =  0 GROUP BY T1.id ORDER BY count(*) DESCA"}
{"question": "What are the names and ids of all the stations that have more than 14 bikes (in total) available on average or had bikes installed (in total)", "query": "SELECT T1.name,  T1.\"id\" FROM station AS T1 WHERE T1.bikes_available  >  14 OR T1.bikes_installed  >  14"}
{"question": "List the names of all the professors in the Computer Science department in decreasing order of their salaries", "query": "SELECT T1.name FROM professors AS T1 JOIN professor_salary AS T2 ON T1.professor_id  =  T2.[professor_id] ORDER BY T2.salary DESC"}
{"question": "(a novel question, about a database), after \"", "query": "A:"}
{"question": "What is the name, and the corresponding country, for the film that has the most number of awards?", "query": "SELECT T1.title,  T2.country FROM film AS T1 JOIN awards AS T2 ON T1.id  = T2.film_id WHERE T1.id  =  (SELECT T3.id FROM film AS T3 WHERE T3.title  =  \"The Shawshank Redemption\")"}
{"question": "What is the first and last name of the customer who has a balance of 15000?", "query": "SELECT T1.first_name,  T1.last_name FROM customer AS T1 WHERE T1.balance  =  15000"}
{"question": "What are the names, id, and average number of hours worked of the people who work in an office called \"Warehouse 2\"?", "query": "SELECT T1.name,  T1.id,  T1.hours_worked FROM employees AS T1 WHERE T1.name  =  \"Warehouse 2\""}
{"question": "What is the name of the employee who has been with the company the longest?", "query": "SELECT T1.firstname,  T1.lastname,  T1.hire_date FROM employee AS T1 JOIN employee_history AS T2 ON T1.id  =  T2.employee_id WHERE T2.id  =  '1'"}
{"question": "List the names of the students who have a student id", "query": "SELECT T1.name FROM student AS T1 WHERE T1.student_id  IN (SELECT T2.student_id FROM student AS T2)"}
{"question": "What are the names, ages, and races of the students who have not participated in an athletic event?", "query": "SELECT T1.name,  T1.age,  T2.race FROM student AS T1 JOIN student_race AS T2 ON T1.student_id  =  T2.student_id WHERE T2.race  =  \"null\""}
{"question": "What are the names and ids of the employees who work in the same building?", "query": "SELECT T1.employee_id,  T1.name,  T1.* FROM employee AS T1 JOIN employee AS T2 ON T1.employee_id  =  T2.* WHERE T1.building_id  =  T2*.building_id"}
{"question": "Given a set of employees and their id, name, age, office, and title, what is the count of employees who work in the same office as the", "query": "SELECT COUNT(*) FROM employees AS T1 JOIN employees AS T2 ON T1.employee_id  =  T2.\"employee_id\" AND T1.office_id  =  T2.'office_id' AND T1.name  =  T2.name AND T1.age  =  T2.age AND T1.title  =  T2.title"}
{"question": "What are the names and phone numbers of all the employees of the company?", "query": "SELECT T1.name,  T1.phone_number FROM employee AS T1"}
{"question": "Find the names of the departments that have the most employees", "query": "SELECT T1.department_name FROM Departments AS T1 JOIN Employees AS T2 ON T1.department_id  =  T2._department_id WHERE T2.employee_id  =  (SELECT T3.employee_id FROM Employees AS T3 WHERE T3.department_id  = (SELECT T4.department_id FROM Departments AS T4 WHERE T4.department_id  = T1.department_id))"}
{"question": "(a question about a sql table) For each zip code, return how much wind speed reached 25?", "query": "SELECT T1.zip,  T1.wind_speed FROM zip_codes AS T1 WHERE T1.wind_speed  =  25"}
{"question": "Show the names of all students with an IQ over 140 and a B average", "query": "SELECT T1.name FROM students AS T1 JOIN student_grades AS T2 ON T1.student_id  =  T2._id WHERE T2.grade_id  =  \"A\" AND T2.grade_id  >  \"B\" AND T2.grade_type_id  =  \"IQ\" AND T2.grade_value  >  140"}
{"question": "(a question about a sql table), after \"question\"", "query": "(the sql query to answer the questions), after \""}
{"question": "What is the oldest book in the library?", "query": "SELECT T1.book_id,  T1.title,  T1.author_id,  T1.year,  T1.price,  T1.publisher_id,  T1.isbn,  T1.isbn13,  T1.isbn10,  T1.isbn9,  T1.isbn8,  T1.isbn7,  T1.isbn6,  T1.isbn5,  T1.isbn4,  T1.isbn3,  T1.isbn"}
{"question": "What are the names (including aliases) of the colleges that have at least two players?", "query": "SELECT T1.name FROM college AS T1 JOIN player AS T2 ON T1.college_id  =  T2.college_id WHERE T2.name  =  \"Player\""}
{"question": "What is the number of years and amount of money that the largest bank in the world has spent on training their employees?", "query": "SELECT T1.year,  T1.amount FROM bank_training AS T1 WHERE T1.year  >  0 AND T1.year  <  100"}
{"question": "What are the students with the most number of courses taken?", "query": "SELECT T1.student_id,  T1.name_first,  count(*) FROM student AS T1 JOIN course AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*)  DESC LIMIT 1;"}
{"question": "Find the numbers of people who have each color, in ascending order of numbers", "query": "SELECT T1.color,  count(*) FROM people AS T1 GROUP BY T1.color ORDER BY T1.color"}
{"question": "List the names of all products with the average price less than 1000", "query": "SELECT product_name,  AVG(price) FROM products WHERE price  <  1000"}
{"question": "What are the ages of all students?", "query": "SELECT T1.age FROM student AS T1 WHERE T1.id  =  (SELECT T2.id FROM student AS T2 WHERE T2.id  =  T1.student_id)"}
{"question": "What are the names, first names, and ages of all customers who have had a credit card issued by \"First National Bank\"?", "query": "SELECT T1.first_name,  T1.name,  T1.age FROM customer AS T1 WHERE T1.credit_card_id  =  \"First National Bank\""}
{"question": "In which year did a new law passed?", "query": "SELECT year(date) FROM law_change WHERE law_id  =  \"1\""}
{"question": "What are the names, years and ids of the movies with the word 'comedy' in the title?", "query": "SELECT T1.title,  T1.year,  T1.id FROM movies AS T1 WHERE T1.title  LIKE  '%comedy%'"}
{"question": "What are the names that start with the letter 'A' and have the maximum score?", "query": "SELECT T1.Name FROM Student AS T1 WHERE T1.Score  =  (SELECT MAX(T2.Score) FROM Student AS T2 WHERE T2.Name  =  T1.Name)"}
{"question": "What are the names for the two groups of players in the top 10, sorted by total points scored", "query": "SELECT T1.player_id,  T1.name FROM player AS T1 JOIN team AS T3 ON T1.player_id  =  T3.player_id WHERE T3.team_id  =  1 AND T3.team_id  >  0 ORDER BY T1.points_scored DESC LIMIT 10"}
{"question": "(a novel question, about a table): What is the weight of the red ball?", "query": "SELECT weight FROM ball WHERE ball_id = 1"}
{"question": "Find the number of users who are in the age group 45-50", "query": "SELECT COUNT(*) FROM users WHERE age_group  =  45 AND age  >=  50"}
{"question": "What are the details, id, and name of all vehicles on the road at 1:30pm on Monday?", "query": "SELECT T1.vehicle_details FROM Vehicles AS T1 WHERE T1.time  =  \"1:30pm\" AND T1.day  =  \"Monday\""}
{"question": "Show the names of the people who have the most number of friends, including their own name", "query": "SELECT T1.name,  T1.friend FROM friends AS T1 JOIN friends AS T2 ON T1.friend  =  T2.friend GROUP BY T1.name HAVING count(*)  =  2"}
{"question": "What are the names, and ages, of all the employees who are under 30?", "query": "SELECT T1.name,  T1.age FROM employee AS T1 WHERE T1.age  <  30"}
{"question": "(what is the name of the book that has been translated into at least 3 languages?), after \"", "query": "SELECT T1.title FROM books AS T1 WHERE T1.language  =  'English' AND T1.language  =  \"French\" AND T1.language  = \"German\""}
{"question": "What are the names, first names, and last name of the customers who have at least 2 transactions with type code \"SALE\"?", "query": "SELECT T1.first_name,  T1.last_name,  T1.account_id FROM customer AS T1 JOIN transaction AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.type_code  =  \"SALE\" AND T1.transactions  >  2"}
{"question": "What is the name and location of the first student who took a course that is offered by the department of Mathematics?", "query": "SELECT T1.student_id,  T1.first_name,  'Mathematics' AS course_name FROM students AS T1 JOIN courses AS T2 ON T1.course_id  =  T2.id WHERE T2.department_id  =  (SELECT id FROM department WHERE name  =  \"Mathematics\")"}
{"question": "What is the average price of all products with the brand code 5 or 6?", "query": "SELECT AVG(price) FROM products WHERE brand_code  =  '5' OR brand_code  =  '6'"}
{"question": "- find all users with at least one message", "query": "SELECT T1.user_id,  T1.message_id,  T1.user_id AS user_id_2,  T1.message_date AS message_date_2,  T1.user_name AS user_name_2,  T1.email_address AS email_address_2,  T1.first_name AS first_name_2,  T2.message_id AS message_id_3,  T2.message_date AS message_time_3,  T2.user_id AS user_name_3,"}
{"question": "What are the names, cities and birth dates of all the people involved in the accident", "query": "SELECT T1.name,  T1.city,  T1.birth_date FROM people AS T1 WHERE T1.name  = \"John Smith\""}
{"question": "Find the names of all the players who were born in April", "query": "SELECT T1.player_name FROM player AS T1 WHERE T1.birth_date  =  '4/1'"}
{"question": "How many students are in a class?", "query": "SELECT count(*) AS T1 FROM student AS T1"}
{"question": "What are the names and the locations that the rivers can make an effect", "query": "SELECT river_name,  river_location FROM rivers"}
{"question": "How many people do you think are now in space?", "query": "SELECT count(*) AS count FROM Space"}
{"question": "What are the names and ages of students who have same name?", "query": "SELECT T1.first_name,  T1.last_name,  T1.age FROM Students AS T1 JOIN StudentTutor AS T2 ON T1.id  = T2.student_id WHERE T2.student_id  =  '1'"}
{"question": "What are the ids and names of the students who went to the same party as me?", "query": "SELECT T1.student_id,  T1.student_name FROM students AS T1 JOIN attended_events AS T2 ON T1.student_id  =  T2.student_id WHERE T2.event_id  =  \"Y\""}
{"question": "What is the average price for all products ordered by the students whose family name is \"Mathew\"", "query": "SELECT T1.price FROM products AS T1 JOIN orders AS T2 ON T1.product_id  =  T2.product_id WHERE T2.student_id  =  \"Mathew\""}
{"question": "List the names and id of all documents that have been added to the system since the beginning of the week", "query": "SELECT T1.document_name,  T1.document_id FROM document AS T1 WHERE T1.date_added >=  '2017-01-01' AND T1.date_added  <  '2017-01-08'"}
{"question": "task:\nWhat are the names of the instructors who have taught some course and have at least one course in both morning and night time", "query": "SELECT T1.name FROM instructor AS T1 JOIN course AS T2 ON T1.id  =  T2.id WHERE T1.course_id  IN (SELECT T3.course_id FROM course AS T3 JOIN course_time AS T4 ON T3.id  =  T4.id WHERE T4.time_id  = 'morning') AND T1.course_id  in (SELECT T3.course_ID FROM course AS T3 JOIN course _time AS T4 ON T3._id  =  T4.ID WHERE T4.time_"}
{"question": "What are the ids for the first and last names of the students", "query": "SELECT T1.first_name,  T1.last_name FROM students AS T1"}
{"question": "How many players are in the room of the largest number of players?", "query": "SELECT COUNT(*) FROM player WHERE room_id  =  (SELECT room_id FROM room WHERE number_of_players  =  max(number_of_players))"}
{"question": "What are the names and dates for all the weddings that occurred in the month of January?", "query": "SELECT T1.wedding_date,  T1.name FROM wedding AS T1 WHERE T1.month  =  \"January\""}
{"question": "What are the names (not id) of the employees in the company who have an office in the city with the code CPA?", "query": "SELECT employee_name,  city_name,  office_name,  city_code FROM employees WHERE city_code  =  \"CPA\""}
{"question": "Give a name for that is different from \"", "query": "SELECT T1.title,  T1.film_id,  T1.description FROM film_actor AS t1 JOIN film AS t2 ON t1.film_id  = t2.film_id WHERE t1.actor_id  =  '1'"}
{"question": "What are the names, addresses, and phone numbers of all the customers in the US and Canada?", "query": "SELECT T1.first_name,  T1.last_name,  T1.address_1,  T1.address_2,  T1.phone_number FROM customers AS T1 WHERE T1.country  = 'US' OR T1.country  = 'Canada'"}
{"question": "What are the name and age of the students that have the highest GPA?", "query": "SELECT T1.student_id,  T1.name,  T1.age FROM student AS T1 WHERE T1.GPA  =  (SELECT max(T2.GPA) FROM student AS T2)"}
{"question": "How many students are there who are not in the school's baseball team?", "query": "SELECT T1.student_id FROM students AS T1 JOIN students AS T2 ON T1.student_id  =  T2.student_id WHERE T2.school_id  =  \"1\" AND T2.school_id !=  \"1\" AND T2.school_id !=  \"2\" AND T2.school_code  =  \"A\" AND T2.school_name  =  \"A\" AND (T2.school_name  = \"A\" OR T2.school_name !=  \"A\") AND T2."}
{"question": "What are the names, type codes, and prices of all products sold in the store, where each product has a unique product number?", "query": "SELECT T1.product_name,  T1.product_type_code,  T1.price FROM product AS T1 WHERE T1.product_id  IN (SELECT T2.product_id FROM product AS T2 WHERE T2.product_id  IN ( SELECT T3.product_id FROM product AS  T3 WHERE T3.product_id  IN (... ) ) )"}
{"question": "What are the names, ranks, and salaries of all professors in the computer science department?", "query": "SELECT T1.name,  T1.rank,  T1.salary FROM professor AS T1 JOIN department AS T2 ON T1.department_id  =  T2.department_id"}
{"question": "What are the names for the students registered in the \"accounting\" course in sequence?", "query": "SELECT T1.student_id,  T1.name_first,  name_last FROM student AS T1 JOIN course AS T2 ON T1.student_id  =  T2.student_id WHERE T2.course_id  =  \"accounting\""}
{"question": "What is the average number of books read by the students in the \"Favorite novels\" club?", "query": "SELECT AVG(T1.books_read) FROM Student AS T1 JOIN Favorite_Novels AS T2 ON T1.student_id  =  T2.student_id"}
{"question": "what are the names of all the women who have a child with a certain father?", "query": "SELECT T1.name FROM children AS T1 JOIN parent AS T2 ON T1.child_id  =  T2.child_id WHERE T2.father_id  =  '1'"}
{"question": "What is the name, age and occupation of all the people in the following table?", "query": "SELECT T1.name,  T1.age,  T1.occupation FROM people AS T1;"}
{"question": "Find the name of the employee who supports the most number of customers", "query": "SELECT T1.employee_name FROM Employee AS T1 JOIN Customer AS T2 ON T1.employee_id  =  T2.employee_id WHERE T2.customer_id  =  '1'"}
{"question": "Find the average grade of all the students in a particular course", "query": "SELECT AVG(grade) FROM students WHERE course_id  =  \"1\""}
{"question": "What is the average price of all the products in the store?", "query": "SELECT AVG(price) FROM product"}
{"question": "what are the names of the students who took the course \"History of Western Philosophy\" and \"Philosophy of Physics\"", "query": "SELECT T1.name FROM students AS T1 JOIN courses AS T2 ON T1.id  =  T2.id WHERE T2.name  =  \"History of Western Philosophy\" AND T2.name  =  'Philosophy of Physics'"}
{"question": "How many cities do we have?", "query": "SELECT COUNT(*) FROM cities"}
{"question": "How many people are there?", "query": "SELECT count(*) AS \"count\" FROM people"}
{"question": "Find the id of the customer who has an order with \"Shipping Method FedEx\"", "query": "SELECT T1.customer_id FROM customer AS T1 JOIN order AS T2 ON T1.customer_id  =  T2.\"customer_id\" WHERE T2.shipping_method  =  \"FedEx\""}
{"question": "What are the prices of products, grouped by product name?", "query": "SELECT product_name,  price FROM products GROUP BY product_name"}
{"question": "What are the names and average age of all students who have a first name starting with J?", "query": "SELECT T1.name,  T1.age FROM students AS T1 WHERE T1.first_name  LIKE  \"J%\""}
{"question": "Find the id and number of the professor who has a Ph", "query": "SELECT T1.id,  T2.number FROM professor AS T1 JOIN professor_student AS T2 ON T1.id  = T2.professor_id WHERE T2.student_id  =  '1'"}
{"question": "What are the first 10 movies that were published in the year 2002?", "query": "SELECT title FROM movie WHERE year  =  2002"}
{"question": "What is the average salary of engineers in the field of software development?", "query": "SELECT avg(salary) FROM employees WHERE job_title  =  \"Engineer\" AND department_id  =  (SELECT department_id FROM departments WHERE name  =  \"Software Development\")"}
{"question": "What are the names, emails and addresses of the employees who work in a place which is called \"Gulbene\"?", "query": "SELECT T1.firstname,  T1.lastname,  T1.email,  T1.address FROM employee AS T1 WHERE T1.workplace  =  \"Gulbene\""}
{"question": "What are the names, salaries, positions and photos of all the members of the team?", "query": "SELECT T1.name,  T1.salary,  T1.position,  T1.photo FROM team AS T1"}
{"question": "What are the names/titles of the people that work in the area in which the red rectangle is", "query": "SELECT name FROM employees WHERE department_id  =  \"1\" AND area_id  =  \"1\";"}
{"question": "Find all the people who have a first name beginning with S and a last name that is not Smith", "query": "SELECT T1.first_name,  T1.last_name FROM people AS T1 WHERE T1.first_name  LIKE  \"S%\" AND T1.last_name  NOT  LIKE  \"Smith\""}
{"question": "\"What is the average number of items in a customer's cart?", "query": "SELECT AVG(count(*)),  T1.customer_id,  T1.item_id FROM carts AS T1 GROUP BY T1.customer_ID,  T1.item_ID"}
{"question": "Find the names of the students who are not students in any of the following courses: History, Philosophy and Political Science", "query": "SELECT T1.name FROM student AS T1 JOIN course AS T2 ON T1.course_id  =  T2.id WHERE T2.course_name  =  'History, Philosophy and Political Science'"}
{"question": "Find the number of hotels in Paris", "query": "SELECT count(*)  FROM hotel"}
{"question": "What is the name and age of the person who has the record for the most amount of money donated to charity?", "query": "SELECT name,  age FROM Person WHERE amount_donated  =  (SELECT max(amount_donated) FROM person)"}
{"question": "What is the name of the company that has the greatest number of employees?", "query": "SELECT T1.name FROM company AS T1 JOIN employees AS T2 ON T1.company_id  =  T2.company_id WHERE T2.name  =  \"The Company\""}
{"question": "What is the total cost of all purchases?", "query": "SELECT T1.item_id,  T1.item_name,  T1.item_price,  T1.item_quantity,  T1.item_total FROM item AS T1 WHERE T1.item_id  IN ( SELECT T2.item_id FROM item AS T2 WHERE T2.item_name  =  \"T-Shirt\" )"}
{"question": "Find the titles of the books of the most numbers of authors", "query": "SELECT T1.author_id,  T1.title FROM book AS T1 JOIN authors AS T2 ON T1.author_id  =  T2.[id]"}
{"question": "What are the names, ids and descriptions of the colleges with at least 2 students not born in the United States?", "query": "SELECT T1.name,  T1.id,  T1.description FROM college AS T1 WHERE T1.students  NOT IN (SELECT T2.name,  T2.id,  T2.description FROM college AS T2 WHERE T2.name  =  \"University of California, Berkeley\" OR T2.name  =  'Harvard University' OR T2.name  = 'Yale University' OR T2.name = 'University of Pennsylvania')"}
{"question": "(a novel question, about a DDL table): What is the name of the column of the table with id 1?", "query": "SELECT name FROM table WHERE id = 1"}
{"question": "Find the names of cities with more than 10 airports and more than 10,000 aircraft", "query": "SELECT city_name,  airport_name,  aircraft_count FROM airport_city_aircraft WHERE airport_name  =  \"AIRPORT\" AND aircraft_count  >  10000 AND airport_name  =  \"CITY\""}
{"question": "What are the names, id, and salary of all employees?", "query": "SELECT T1.name,  T1._id,  T1.salary FROM employee AS T1;"}
{"question": "find the names of the top five players in terms", "query": "SELECT T1.name FROM players AS T1 WHERE T1.rank  =  (SELECT max(T2.rank) FROM players AS T2)"}
{"question": "Find the number of new customers in a given month", "query": "SELECT count(*) AS c FROM customer AS T1 WHERE T1.date_of_birth  =  '01-01-2000' AND T1.status  =  'C'"}
{"question": "What are the names, ordered by number of occurrences, of all the states of the United States of America?", "query": "SELECT T1.state_name FROM state AS T1 WHERE T1.state_id  IN (SELECT T2.state_id FROM state AS T2 WHERE T2.state_id  IN ( SELECT T3.state_id FROM state AS  T3 WHERE T3.state_id  IN (... ) ) )"}
{"question": "What is the name of the first author of a novel of the Harry Potter series?", "query": "SELECT author_name FROM novel WHERE author_name  =  \"Rowling\""}
{"question": "What are the names and salaries of the managers in the company?", "query": "SELECT T1.full_name,  T1.salary FROM employees AS T1 JOIN managers AS T2 ON T1.manager_id  =  T2.id WHERE T2.full_name  =  \"John Smith\""}
{"question": "List the names and id of all students who are in the top 5 in their class", "query": "SELECT T1.fname,  T1.lname,  T1.id FROM student AS T1 WHERE T1.gpa  >  (SELECT T2.gpa FROM student AS T2 WHERE T2.gpa  >  T1.gpa) ORDER BY T1.gpa  DESC LIMIT 5"}
{"question": "What are the names, city, and country of the best-selling books in the year 2001?", "query": "SELECT T1.name,  T2.city,  T3.country FROM best_selling_books AS T1 JOIN books AS T2 ON T1.book_id  =  T2.book_id JOIN country AS T3 ON T2.country_id  =  T3.country_id WHERE T1.year  =  2001"}
{"question": "What are the names in ascending order of height?", "query": "SELECT Name FROM People WHERE Height  ORDER BY Height ASC"}
{"question": "Find the name of all directors who have won an Oscar", "query": "SELECT T1.director_name FROM director AS T1 JOIN director_awards AS T2 ON T1.director_id  =  T2.director_id WHERE T2.award_type  =  'Oscar'"}
{"question": "What is the name of the movie with the highest budget?", "query": "SELECT T2.title FROM Movie AS T1 JOIN Budget AS T2 ON T1.movie_id  =  T2"}
{"question": "What are the average age of all customers?", "query": "SELECT AVG(age) FROM customer"}
{"question": "What are the names and ages of the people who live in a building with the code \"3032\"?", "query": "SELECT T1.name,  T1.age FROM people AS T1 JOIN building AS T2 ON T1.building_id  =  T2.id WHERE T2.code  =  \"3032\""}
{"question": "What is the name and last name of the student who has no last name?", "query": "SELECT T1.student_name,  T2.student_last_name FROM student AS T1 JOIN student_info AS T2 ON T1.id  = T2.id WHERE T2.last_name  =  'NULL'"}
{"question": "What are the names and ages of all the students at the college with the same major as \"Katherine\"?", "query": "SELECT T1.first_name,  T1.last_name,  T1.age FROM students AS T1 WHERE T1.major  =  \"Katherine\""}
{"question": "List the names of all customers", "query": "SELECT T1.customer_first_name, T1.customer_last_name, T1.customer.customer_id FROM customers AS T1 JOIN customers_addresses AS T2 ON T1.Customer_ID  =  T2.Customer_ID WHERE T2.Address_Type_Code  =  \"Home\""}
{"question": "What are the names and ids of all professors who are teaching the course ACCT-210", "query": "SELECT T1.fname,  T1.lname,  T1.id FROM professor AS T1 JOIN course AS T2 ON T1.id  =  T2.professor_id WHERE T2.course_code  =  \"ACCT-210\""}
{"question": "What are the names and birthdays of all students in the class with the id 2?", "query": "SELECT T1.name,  T2.birthday FROM student AS T1 JOIN class AS T2 ON T1.class_id  =  T2._id WHERE T2._id  =  2"}
{"question": "What are the names that comprise the top 10% of the data?", "query": "SELECT name FROM track_data WHERE track_id IN (SELECT T1.track_id FROM track AS T1 JOIN track_data AS T2 ON T1.track_id  =  T2._id WHERE T2.percentile  >  0.1)"}
{"question": "What is the average number of hours spent by all the employees to complete their tasks?", "query": "SELECT AVG(Hours) FROM (SELECT T1.employee_id,  T1.task_id,  T1.hours FROM employee AS T1 JOIN task AS T2 ON T1.employee_id  =  T2.employee_id GROUP BY T1.employee_id, T1.task_id, T1.hours) AS T3;"}
{"question": "Find the name and id of the employee who works in sales", "query": "SELECT T1.name,  T1.\"id\" FROM employee AS T1 JOIN employee_details AS T2 ON T1.employee_id  =  T2.\"id\" WHERE T2.department_id  = \"sales\""}
{"question": "what are the names of the employees with the last name \"Hofmann\"?", "query": "SELECT T1.name FROM employees AS T1 WHERE T1.last_name  =  \"Hofmann\""}
{"question": "What is the name and the number of the company that has the most employees?", "query": "SELECT T1.name,  T1.count FROM company AS T1 WHERE T1.count  =  (SELECT max(T2.count) FROM company AS T2)"}
{"question": "(a novel question, about a table with a different name): What is the average age of the students?", "query": "SELECT AVG(age) FROM student"}
{"question": "What is the number and id of all customers that were in more than one order?", "query": "SELECT count(*) AS cnt,  T1.customer_name,  T1.customer_number,  T1.customer_address,  T1.customer_city,  T1.customer_state,  T1.customer_zip,  T1.customer_phone,  T1.customer_email,  T1.customer_credit_limit,  T1.customer_balance,  T1.customer_type,  T1.customer_status,  T1.customer_date_added,  T1.customer_last_login,  T"}
{"question": "How many students are enrolled in the course with subject \"Chemical Engineering\"?", "query": "SELECT T1.student_id FROM Student AS T1 JOIN Courses AS T2 ON T1.student_id  =  T2.student_id WHERE T2.subject  =  \"Chemical Engineering\""}
{"question": "List all the products that have been sold", "query": "SELECT T1.product_name,  T1.quantity,  T1.price FROM product AS T1 JOIN sales AS T2 ON T1.product_id  =  T2.product_id"}
{"question": "What are the names, for each row, of the players who have won more than two games in the past 12 months?", "query": "SELECT T1.player_id,  T1.name FROM player AS T1 JOIN wins AS T2 ON T1.player_id  =  T2.player_id WHERE T2.wins  >  2"}
{"question": "What is the name on the back of the shirt worn by the golfer with id 9?", "query": "SELECT name FROM shirt WHERE shirt_id  =  9"}
{"question": "What are the first 5 students in order of most to least favorite course?", "query": "SELECT T1.student_id,  T1.name_first,  'Favorite' AS Favorite FROM student AS T1 JOIN student_favorite AS T2 ON T1.student_id  =  T2.student_id ORDER BY T1.Favorite DESC LIMIT 5"}
{"question": "Find the average age of the students in the class", "query": "SELECT AVG(age) FROM student"}
{"question": "What is the most common gender in the students of the university?", "query": "SELECT gender FROM students"}
{"question": "What are the names, weights and weights of all the people who are friends with John Smith?", "query": "SELECT T1.name,  T1.weight,  T1.weight FROM people AS T1 JOIN friends AS T2 ON T1.id  =  T2.person_id WHERE T1.id  =  'John Smith'"}
{"question": "What are the titles of all the articles published in the New York Times in the last month?", "query": "SELECT T1.title FROM articles AS T1 JOIN articles_tags AS T2 ON T1.id  = T2.article_id JOIN articles_tags_categories AS T3 ON T2.id  =  T3._id WHERE T1.date_published  =  DATE_SUB(CURDATE(), INTERVAL 1 MONTH)"}
{"question": "What is the first letter of the first name of the customer with the highest balance in the bank?", "query": "SELECT T1.first_name FROM customer AS T1 WHERE T1.balance  >  (SELECT max(T2.balance) FROM customer AS T2)"}
{"question": "How many students have a first name that contains the letters'mohr'?", "query": "SELECT T1.student_id FROM students AS T1 WHERE T1.first_name  LIKE '%mohr%'"}
{"question": "Find all the products that are not available in the online store", "query": "SELECT T1.product_name,  T1.price,  T1.available FROM product AS T1 WHERE T1.available  =  'N'"}
{"question": "What are the cities where the students from different colleges live?", "query": "SELECT T1.city,  T2.college_id FROM city AS T1 JOIN students AS T2 ON T1.city  =  T2.city"}
{"question": "What are the ids of the customers who are not male (sex is \"M\")?", "query": "SELECT T1.customer_id FROM customer AS T1 WHERE T1.customer_id NOT IN (SELECT T2.customer_id FROM customer AS  T2 WHERE T2.customer_id  =  \"M\")"}
{"question": "(a novel question, about a thesaurus): Find the words which the are not an entry in the thesaurus", "query": "SELECT word FROM thesaurus WHERE word NOT IN (SELECT word FROM thesaurus_entry)"}
{"question": "Find the average number, as well as the total number, of transactions that are completed by each customer", "query": "SELECT T1.customer_id,  T1.total_transactions,  T1.average_transactions FROM customer AS T1 JOIN ( SELECT T2.customer_id,  T2.total_transactions,  (T2.total_transactions / T2.total_transactions) AS average_transactions FROM ( SELECT T3.customer_id,  T3.total_transactions FROM customer AS T3 WHERE T3.total_transactions  >  0 ) AS T2 ) AS T4 WHERE T1.total_transactions  > 0"}
{"question": "Find the names of directors for the movies with the two highest grossing movies of the year 2000 or before", "query": "SELECT T1.director_name FROM movies AS T1 JOIN movies_directors AS T2 ON T1.movie_id  =  T2.movie_id WHERE T2.year  =  2000 OR T2.year  =  1999"}
{"question": "How many distinct nationalities are there among players whose positions are defenders?", "query": "SELECT DISTINCT nationality FROM Player WHERE position  =  'Defender'"}
{"question": "Find the number of followers for each employee", "query": "SELECT T1.id,  T1.first_name,  (SELECT count(*) FROM followers AS T2 WHERE T1.id  =  t2.follower_id) AS followers FROM employees AS T1"}
{"question": "How many customers have purchased products with the price above 1000 in the past three months?", "query": "SELECT T1.product_id,  T1.price,  T1.quantity,  T1.date_added,  T1.date_modified,  T1.date_purchased FROM product AS T1 WHERE T1.price  >  1000 AND T1.date_added  >  '2016-01-01' AND T1.date_added <  '2016-03-01'"}
{"question": "List the number of books in the bookshelf", "query": "SELECT COUNT(*) AS total FROM books"}
{"question": "What are all the names of restaurants that have at least three different types of food, ordered by the average price of all types of food?", "query": "SELECT T1.name FROM restaurant AS T1 JOIN food AS T2 ON T1.restaurant_id  =  T2.restaurant_id JOIN food AS T3 ON T1.restaurant_ID  =  T3.restaurant_id JOIN food_type AS T4 ON T3.food_type_id  =  T4.food_type_id JOIN restaurant AS T5 ON T4.restaurant_id  = T5.restaurant_id WHERE T2.price  >  (SELECT AVG(price) FROM food) AND T3.price"}
{"question": "Return the text of the first 10 questions about a movie", "query": "SELECT * FROM movie_questions WHERE movie_id = 1 LIMIT 10"}
{"question": "Find the second last names of all students who are also in the club \"Tennis Club\"", "query": "SELECT T1.last_name FROM student AS T1 JOIN club AS T2 ON T1.stu_id  =  T2.stu_id JOIN members AS T3 ON T2.club_id  =  T3.club_id WHERE T3.name  = \"Tennis Club\" AND T1.last_name  =  \"Smith\""}
{"question": "What is the maximum distance from the center of a circle to the edge of the circle?", "query": "SELECT MAX(distance) FROM circle"}
{"question": "Find the name and email for the students who have more than one follower", "query": "SELECT T1.name,  T1.email FROM student AS T1 JOIN follower AS T2 ON T1.id  =  T2.follower_id WHERE T1.id  =  (SELECT MAX(id) FROM follower)"}
{"question": "Find the names of all customers who have more than one account", "query": "SELECT T1.customer_id,  T2.customer_name FROM customer AS T1 JOIN account AS T2 ON T1.id  = T2.id WHERE T1.customer_id  >  1"}
{"question": "find the total number of pages for each chapter", "query": "SELECT count(*)  FROM chapter"}
{"question": "Find the name and address of the person who has been on every flight", "query": "SELECT T1.name,  T1.address FROM people AS T1 JOIN flights AS T2 ON T1.person_id  =  T2._id WHERE T2.flight_id  =  (SELECT T3.flight_id FROM flights AS T3 WHERE T3.departure_airport_id  =  (SELECT departure_airport_id FROM airports WHERE name  =  \"JFK\" ) AND T3.arrival_airport_id  =   (SELECT arrival_airport_id FROM airports  WHERE name  =  \"JFK\") AND"}
{"question": "How many of the products have the name of the company \"Boeing\"", "query": "SELECT T1.product_name FROM product AS T1 JOIN company AS T3 ON T1.company_id = T3.company_id WHERE T3.company_name = \"Boeing\""}
{"question": "A:\n\nPython, 688 characters", "query": "SELECT * FROM students WHERE (age  >  (SELECT avg (age) FROM students) OR (age  =  (SELECT avg (age)) FROM students)) AND (gender  =  (SELECT avg(gender) FROM students)) AND (city  =  (SELECT avg  (city) FROM students)) AND (state  =  (SELECT avg   (state) FROM students)) AND (zip  =  (SELECT avg    (zip) FROM students)) AND (country  =  (SELECT avg     (country) FROM students)) AND (high_school  ="}
{"question": "What are the names that are written in roman letters and are written in English letters?", "query": "SELECT name FROM track_name WHERE name  =  \"roman letters\" AND name  =  \"English letters\""}
{"question": "What is the list of names of all the employees of the company?", "query": "SELECT name_first,  name_last FROM employees"}
{"question": "What are the names, first name, and last name of each of the customers of the company?", "query": "SELECT T1.name,  T1.\"first name\",  T1.\"last name\" FROM customer AS T1"}
{"question": "Find the name of each user and the number of tweets tweeted by each of the user", "query": "SELECT T1.name,  T1.tweet_count FROM users AS T1 JOIN tweets AS T2 ON T1.user_id  =  T2.user_id"}
{"question": "What is the name for the most popular game in the United States?", "query": "SELECT T1.name FROM game AS T1 WHERE T1.popularity  =  (SELECT MAX(popularity) FROM game)"}
{"question": "Find the average price of products of each manufacturer, and list their names", "query": "SELECT T1.Manufacturer,  T2.price FROM products AS T1 JOIN manufacturers as T2 ON T1.Manual  =  T2.code"}
{"question": "Find the number of customers of the hotel with the name \"Waldorf Astoria\"", "query": "SELECT count(*) AS \"count\" FROM customer WHERE customer_name  =  \"Waldorf Astoria\""}
{"question": "What are the names all the employees who are employed in the company that have the last name of \"Williams\"?", "query": "SELECT T1.last_name FROM employee AS T1 JOIN employees AS T2 ON T1.employee_id  =  T2_id WHERE T2.last_name  =  \"Williams\""}
{"question": "Find the names of all students who are younger than 18", "query": "SELECT T1.Fname,  T1.Lname FROM student AS T1 WHERE T1.age  <  18"}
{"question": "What is the name of the most recent player?", "query": "SELECT T1.name FROM player AS T1 WHERE T1.last_name  =  \"Bartlett\""}
{"question": "What are the average grades of the students in the class of 2004?", "query": "SELECT AVERAGE(grade) FROM student_grades WHERE student_id = '2004'"}
{"question": "Find the names of people who are not employees", "query": "SELECT T1.person_id,  T1.name_first,  'not employee' AS type FROM employee AS T1 WHERE T1.employee_id  =  0 GROUP BY T1.person_id ORDER BY count(*)"}
{"question": "what are all the questions that have the word \"dogs\" in them?", "query": "SELECT T1.question FROM questions AS T1 WHERE T1.question LIKE '%dogs%'"}
{"question": "Write a program to find the average age of the faculty members", "query": "SELECT T1.age FROM faculty AS T1 WHERE T1.dept_id  =  '1'"}
{"question": "Find the position (row and column) of the name of the customer with first name \"Mary\"", "query": "SELECT T1.position FROM customer AS T1 WHERE T1.first_name  =  \"Mary\""}
{"question": "What is the name and the number of the city with the largest population?", "query": "SELECT city_name,  population FROM city WHERE population  =  (SELECT max(population) FROM city)"}
{"question": "How many students are not in any club?", "query": "SELECT count(*) AS total FROM student WHERE NOT EXISTS (SELECT * FROM club WHERE student.id = club.student_id)"}
{"question": "What are the names and ages of all the students enrolled at UCLA?", "query": "SELECT T1.name,  T1.age FROM students AS T1 JOIN courses AS T2 ON T1.student_id  =  T2.student_id WHERE T2.name  =  \"UCLA\""}
{"question": "There are four types of people", "query": "SELECT COUNT(*),  COUNT(DISTINCT T1.name) FROM people AS T1 WHERE T1.type  =  \"A\" OR T1.type  =  'B' OR T1.type  = 'C' OR T1.type  ='D'"}
{"question": "Find the names of documents that has a 'D' in the name with any expense budget", "query": "SELECT T1.name FROM document AS T1 JOIN expense_budget AS T2 ON T1.document_id  =  T2.document_id WHERE T2.name LIKE '%D%'"}
{"question": "What are the names, phone numbers, and email addresses of all customers who have ordered from us in the past?", "query": "SELECT name,  phone,  email FROM customers WHERE customer_id  IN (SELECT customer_id FROM order_history)"}
{"question": "What is the name and date of the first meeting of the New York City Transit Authority?", "query": "SELECT * FROM meeting_info WHERE meeting_date = '2009-01-01'"}
{"question": "What are the names, id, and category of all the articles?", "query": "SELECT T1.name,  T1.\"id\",  T1.category FROM article AS T1"}
{"question": "What are the ids for all the students who did not get in the business school?", "query": "SELECT T1.student_id FROM students AS T1 WHERE T1.status  =  'not_in_business_school'"}
{"question": "Find the number and name of all athletes who have won an Olympic medal", "query": "SELECT T1.name,  T1.id FROM athlete AS T1 JOIN medal AS T2 ON T1.id  =  T2.athlete_id WHERE T2.name  =  'Olympic'"}
{"question": "What are the id, location, and age of the employee with the latest hire date?", "query": "SELECT T1.id,  T2.location,  T3.age FROM Employee AS T1 JOIN Employee_History AS T2 ON T1.id  = T2.id JOIN Employee_History AS T3 ON T2.id  =  T3._id WHERE T3.hire_date  =  (SELECT MAX(hire_date) FROM Employee_History)"}
{"question": "(Find the name of the city with the highest population), after \"", "query": "SELECT city_name,  population FROM city ORDER BY population DESC LIMIT 1"}
{"question": "What is the price of the product with code \"3\" and name \"Tower of Babel\" in an e-commerce site?", "query": "SELECT T1.price FROM products AS T1 WHERE T1.code  =  \"3\" AND T1.name  =  \"Tower of Babel\""}
{"question": "Return the names associated with the product \"chocolate\"", "query": "SELECT T1.product_name FROM product AS T1 WHERE T1.name  =  \"chocolate\""}
{"question": "What are the names, ages and genders of the students who attended the concert with \"The Chainsmokers\"?", "query": "SELECT T1.name,  T1.age,  T1.gender FROM students AS T1 JOIN concert AS T2 ON T1.student_id  =  T2.student_id WHERE T2.name  =  \"The Chainsmokers\""}
{"question": "What is the average rate of the vehicles?", "query": "SELECT AVG(Rate) FROM vehicle"}
{"question": "What are the names and ids of all employees who have a title of \"Professor\"?", "query": "SELECT T1.name,  T1._id FROM employee AS T1 WHERE T1.title  =  \"Professor\""}
{"question": "(a question about a sql table) Find the name of the product that costs the most", "query": "SELECT product_name,  SUM(price) FROM products WHERE price  >  (SELECT MAX(price) FROM products)"}
{"question": "Is there a way to make the questions more meaningful?", "query": "SELECT T1.question,  T2.answer FROM question AS T1 JOIN answer AS T2 ON T1.id  =  T2.question_id"}
{"question": "What are the names, department, and salaries of all the people who work in the Human Resources department?", "query": "SELECT T1.first_name,  T1.last_name,  T1.salary FROM employees AS T1 WHERE T1.department  =  'Human Resources'"}
{"question": "Show the first name and last name of the students with the highest GPA", "query": "SELECT T1.first_name,  T1.last_name FROM students AS T1 JOIN grades AS T2 ON T1.student_id  =  T2._id WHERE T2.grade  =  \"A\" ORDER BY T1.GPA DESC"}
{"question": "List the number of students who are enrolled in colleges that have student acceptance status of \"accepted\"", "query": "SELECT COUNT(*) FROM students AS T1 JOIN college AS T2 ON T1.college_id  =  T2.\"college_id\" WHERE T2.acceptance_status  =  \"accepted\""}
{"question": "Find the names of all products with the word \"fountain\" as their name", "query": "SELECT T1.Name FROM Product AS T1 WHERE T1.Name LIKE '%fountain%'"}
{"question": "What are the ids of all players in the table \"Players\"?", "query": "SELECT T1.player_id FROM players AS T1"}
{"question": "How many books are in the library?", "query": "SELECT COUNT(*) FROM book"}
{"question": "Find the first and last names of the students in the college of engineering", "query": "SELECT first_name ,  last_name FROM student WHERE college_id  =  \"College of Engineering\""}
{"question": "How many different products do you have?", "query": "SELECT DISTINCT product_id FROM products"}
{"question": "What is the name, last name, and id of the person who was the oldest?", "query": "SELECT T1.name,  T1.lastname,  T1.id FROM person AS T1 WHERE T1.age  =  (SELECT MAX(age) FROM person)"}
{"question": "How many hospitals are in Austin?", "query": "SELECT count(*)  FROM hospital"}
{"question": "(a novel question, about a table), after \"question\"", "query": "SELECT name FROM Person"}
{"question": "How many students have their first names starting with s?", "query": "SELECT T1.student_id FROM Student AS T1 WHERE T1.first_name  LIKE's%'"}
{"question": "What is the name, id, and age of the person who has the same number of gpa as me?", "query": "SELECT T1.id,  T1.name,  T1.age FROM person AS T1 JOIN person_grades AS T2 ON T1.id  =  T2.person_id WHERE T2.grade  =  T1.gpa"}
{"question": "What is the name and id of the student with the highest GPA?", "query": "SELECT T1.name,  T1.id FROM student AS T1 JOIN grades AS T2 ON T1.id  =  T2.id WHERE T2.grade_id  =  (SELECT max(T3.grade_id) FROM grades AS T3)"}
{"question": "What are the first few letters of the names of the first 10 students to graduate with degrees in Computer Science?", "query": "SELECT T1.name FROM students AS T1 WHERE T1.graduation_year  =  \"2000\" AND T1.name  LIKE \"A%\""}
{"question": "What's the name of your favorite actor?", "query": "SELECT name FROM actor WHERE name  =  \"your_favorite_actor\""}
{"question": "How many countries have at least one airport rated as an international airport?", "query": "SELECT T1.country_name,  T1.country_code,  T1.country_flag,  T1.country_population,  T1.country_area,  T1.country_currency,  T1.country_is_member_of_the_UN,  T1.country_has_an_ambassador_to_the_UN,  T2.country_is_an_international_airport FROM country AS T1 JOIN country_airports AS T2 ON T1.country_id  =  T2.country_id WHERE T"}
{"question": "What are the salaries of employees who have more than 20 percent of their performance evaluated as good or very good?", "query": "SELECT T1.salary FROM employees AS T1 WHERE T1.performance_evaluation  =  'good' OR T1.performance_evaluation ='very good' AND T1.percentage_evaluation  >  20"}
{"question": "What is the description of the service type that has the \"service_type_id\" of 1?", "query": "SELECT description FROM ServiceType WHERE service_type_id  =  1"}
{"question": "What are the names, last names, and ages of the children of each parent?", "query": "SELECT T1.parent_name,  T2.child_name,  T2.age FROM parent AS T1 JOIN child AS T2 ON T1.parent_id  =  T2.parent_id"}
{"question": "What are the names and genders of all the customers who have a 'C' grade?", "query": "SELECT T1.Name,  T1.gender FROM Customer AS T1 WHERE T1.grade  =  \"C\""}
{"question": "What are the names, locations and types of vehicles that are used to deliver pizza?", "query": "SELECT T1.name,  T1.location,  T1.type FROM vehicles AS T1 WHERE T1.type  =  \"Pizza Delivery\""}
{"question": "List the names of the players that have been eliminated in the last 4 matches", "query": "SELECT T1.name FROM player AS T1 JOIN match AS T2 ON T1.id  =  T2.id WHERE T2.match_id  =  (SELECT T3.match_id FROM match AS T3 WHERE T3.match_id  =  T2) AND T2.match_id  >  (SELECT T4.match_id FROM match AS t4 WHERE t4.match_id  =  t2) AND T2.match  =  (SELECT T5.match_id FROM match AS  T5 WHERE T5.match_id"}
{"question": "What is the average total time of the users who have a score of less than 200 and are not a newbie?", "query": "SELECT AVG(T1.total_time) FROM users AS T1 WHERE T1.score  >  200 AND T1.is_newbie  =  \"false\""}
{"question": "What is the name and id of a company that has the most number of employees?", "query": "SELECT T1.company_name,  T1.company_id FROM company AS T1 WHERE T1.company_id  =  (SELECT MAX(T2.company_id) FROM company AS T2)"}
{"question": "What are the names, id, and grade of all students in the course", "query": "SELECT T1.name,  T1.\"id\",  T1.grade FROM student AS T1 JOIN course AS T2 ON T1.course_id  =  T2.\"id\""}
{"question": "Show the names of the three countries with the same name as the country that is the largest", "query": "SELECT country_name FROM countries WHERE country_name  =  \"United States\""}
{"question": "What are the ids of the schools with the highest number of students?", "query": "SELECT T1.school_id,  T1.students FROM school AS T1 WHERE T1.students  =  (SELECT max(T2.students) FROM school AS T2)"}
{"question": "Find the names of all the schools that have a gym facility", "query": "SELECT T1.school_name FROM schools AS T1 JOIN school_gym_facility AS T2 ON T1.school_id  =  T2.school_id"}
{"question": "(a novel question, about a specific student (id=1), after \"", "query": "A:"}
{"question": "Find the names of products with the characteristic number 11", "query": "SELECT T1.product_name FROM products AS T1 WHERE T1.characteristic_number  =  11"}
{"question": "What are the dates of the first and last day of the year for which the average temperature is below freezing?", "query": "SELECT T1.date,  T1.temp FROM Weather AS T1 WHERE T1.date  >  '01/01/2000' AND T1.date  <  '01/01/2001' AND T1.temp  <  '0'"}
{"question": "Find the name of the city that has more than 3 universities", "query": "SELECT T1.city,  T2.name FROM city AS T1 JOIN university AS T2 ON T1.city_id  =  T2.city_id WHERE T2.name  >  'University of California, Los Angeles'"}
{"question": "What is the last name of the students who took the class \"Economics 101\"?", "query": "SELECT name FROM students WHERE student_id  =  \"1\" AND class_code  =  \"Economics 101\""}
{"question": "Give me the names of all the people who are not professors", "query": "SELECT DISTINCT name_first,  name_last FROM player WHERE player_id  NOT IN (SELECT player_id FROM professor)"}
{"question": "What is the average salary of all employees?", "query": "SELECT AVG(T1.salary) FROM employees AS T1;"}
{"question": "what is the age of the youngest student", "query": "SELECT MIN(age) FROM student"}
{"question": "What are the names and titles of all the employees?", "query": "SELECT T1.first_name,  T1.last_name,  T1.title FROM employees AS T1"}
{"question": "What is the number and name of the employee with the lowest salary?", "query": "SELECT T1.employeeid,  T1.name FROM employee AS T1 WHERE T1.salary  <  (SELECT min(T2.salary) FROM employee AS T2)"}
{"question": "Find the names of cities that have the largest number of students", "query": "SELECT city_name FROM cities WHERE city_population  >  (SELECT city_population FROM cities WHERE city_name  =  \"New York\")"}
{"question": "What are the names, type codes and descriptions of all budget types?", "query": "SELECT T1.description,  T1.type_code,  T1.name FROM budget AS T1;"}
{"question": "Find the id and name of the student whose average grade is above the average grade of the entire class", "query": "SELECT T1.id,  T1.name FROM student AS T1 JOIN grade AS T2 ON T1.id  =  T2.id WHERE T2.grade_average  >  (SELECT T3.grade_average FROM grade AS T3)"}
{"question": "What is the sum of the hours per week of the employees who are also students?", "query": "SELECT T1.hours_per_week FROM employees AS T1 JOIN employee_status AS T2 ON T1.emp_id  =  T2.emp_id JOIN employee_status_history AS T3 ON T1.emp_id = T3.emp_id WHERE T2.status_code  =  \"student\""}
{"question": "What is the name, age and number of children of the employee with the smallest salary?", "query": "SELECT T1.employee_id,  T1.age,  T1.salary,  T1.children FROM employee AS T1 WHERE T1.salary  =  (SELECT MIN(T2.salary) FROM employee AS T2)"}
{"question": "How many employees do the top 5 employees have?", "query": "SELECT T1.employee_id,  T1.first_name,  T1.last_name,  T1.title,  T1.salary,  T1.department_id,  T1.manager_id,  T1.phone_number,  T1.email_address,  T1.city,  T1.state,  T1.country,  T1.zip_code,  T1.home_phone,  T1.home_address,  T1.cell_phone,  T1.cell_address,"}
{"question": "How many students have been enrolled in the university for at least one semester?", "query": "SELECT T1.student_id,  T1.first_name,  T1.last_name,  T1.gender,  T1.age,  T1.address,  T1.city,  T1.state,  T1.zip,  T1.phone,  T1.email,  T1.major,  T1.year,  T1.dept_id,  T1.class_id,  T1.grad_year,  T1.grad_term,  T1.grad_sem,  T1"}
{"question": "(a question about a sql table) What is the name of the 2 employees who get paid the least? (", "query": "SELECT T1.name,  T2.name FROM employees AS T1 JOIN employees AS T2 ON T1.id  =  T2.employee_id WHERE T1.salary  <  T2.salary"}
{"question": "Show all the names of the employees whose average salary is more than 120", "query": "SELECT T1.employee_name FROM employees AS T1 JOIN salary_history AS T2 ON T1.employee_id  =  T2.employee_id WHERE T2.salary  >  120"}
{"question": "What are the names, and the number of years they were in the film industry, of all the actors in all the films in all the years?", "query": "SELECT T1.actor_name,  T1.year,  T2.count(*) FROM actor AS T1 JOIN film AS T2 ON T1.actor_id  =  T2._id GROUP BY T1.actor_name, T1.year ORDER BY T1.actor_name"}
{"question": "What are the home addresses of the students who are on staff in the courses \"Philosophy\" and \"Psychology\"?", "query": "SELECT T1.address_type_code,  T1.address_line_1,  T1.address_city,  T1.address_state,  T1.address_zip,  T1.address_country,  T1.address_phone,  T1.address_fax,  T1.address_email,  T1.address_home_phone,  T1.email_home_phone,  T2.student_id FROM students AS T1 JOIN students_addresses AS T2 ON T1.student_id  =  T2"}
{"question": "How many authors did each book have?", "query": "SELECT T1.author_id,  T1.book_id,  T1.author_name,  T1.author_last_name,  T1.book_title,  T1.book_year,  T1.book_publisher,  T1.book_isbn,  T1.book_author_id,  T1._id,  T1.bookstore_id,  T1.isbn,  T1.title,  T1.price,  T1.author_id,  (SELECT count(*) FROM book"}
{"question": "What are 10 cities with the most schools?", "query": "SELECT T1.city,  T2.school_count FROM city AS T1 JOIN schools AS T2 ON T1.city  =  T2.city ORDER BY T2.school_count DESC LIMIT 10"}
{"question": "What are the names, genders, and ages of the people in the photo?", "query": "SELECT T1.name,  T1.gender,  T1.age FROM people AS T1 WHERE T1.photo_id  =  \"1\""}
{"question": "...", "query": "SELECT T1.question_id,  T1.question,  T1.answer FROM question AS T1 JOIN answer AS T2 ON T1.question_id  =  T2.question_id GROUP BY T1.question_id ORDER BY count(*)  DESC LIMIT 1"}
{"question": "What is the name, phone number, and email of the person who bought the least expensive wine?", "query": "SELECT T1.name,  T1. phone_number,  T1.email FROM customer AS T1 WHERE T1.price  =  ( SELECT min(T2.price) FROM customer AS T2 WHERE T2.name  =  \"John\" AND T2.phone_number  =  \"555-555-5555\" AND T2.email  =  \"johndoe@example.com\" )"}
{"question": "(a novel question, about a question about a sql table), after \"generate:\"", "query": "SELECT T1.name,  T1.age,  T1.gender,  T1.height,  T1.weight,  T1.hair_color,  T1.eye_color,  T1.nationality,  T1.address,  T1.phone,  T1.email,  T1.fax,  T1.cellphone,  T1.email_address,  T1.address_line1,  T1.address_city,  T1.address_state,  T1.address_zip,  T1"}
{"question": "What are the names, number of days, and cities of all the countries in Africa?", "query": "SELECT T1.name,  T1.days,  T1.city FROM country AS T1 WHERE T1.name  =  \"Africa\""}
{"question": "What are the names and first names of the customers with the most online orders?", "query": "SELECT T1.customer_name,  T2.first_name FROM customer_record AS T1 JOIN customer_order_history AS T2 ON T1.id  = T2.customer_id WHERE (T2.order_count  >  0) AND (T2.order_date  >  '2015-01-01')"}
{"question": "What are the last names of customers who purchased a laptop?", "query": "SELECT T2.last_name FROM customer AS T1 JOIN laptop_purchase AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.customer_id  >  1"}
{"question": "What is the number and gender of students in the engineering department?", "query": "SELECT T1.student_id,  T1.gender FROM students AS T1 WHERE T1.department_code  =  \"Engineering\""}
{"question": "What are the names that start with 'L'?", "query": "SELECT T1.Name FROM table AS T1 WHERE T1.Name LIKE 'L%'"}
{"question": "What is the number and names of the customers who bought product 'food' at least once?", "query": "SELECT COUNT(*),  name FROM customer WHERE product_id  =  'food'"}
{"question": "Show the most and least common names of the countries in the world", "query": "SELECT T1.name FROM country AS T1 WHERE T1.name  = (SELECT T2.name FROM country AS T2 WHERE T2.name  =  \"United States\" AND T2.name  =  (SELECT T3.name FROM country AS T3 WHERE T3.name  = (SELECT T4.name FROM country AS T4 WHERE T4.name  =  \"United Kingdom\" AND T4.name  =  (SELECT name FROM country AS T5 WHERE T5.name  =  \"Canada\")))"}
{"question": "(a question about a sql table) Which country has the most airports?", "query": "SELECT Country,  count(*) FROM airport GROUP BY Country ORDER BY count(*) DESC;"}
{"question": "What is the first letter of the first name of the customer who has the maximum savings in the bank?", "query": "SELECT T1.first_name FROM customer AS T1 WHERE T1.savings  =  MAX(T2.savings)"}
{"question": "What is the name and country of the city with the highest temperature?", "query": "SELECT city,  temperature FROM weather WHERE city  =  'London' ORDER BY temperature DESC LIMIT 1"}
{"question": "What is the name and last name of the person who has received most customer service calls?", "query": "SELECT T1.name,  T1.lastname FROM customer AS T1 JOIN customer_service AS T2 ON T1.customer_id  =  t2.customer_id WHERE T2.service_id  =  'Customer Service' ORDER BY T1.customer_id DESC"}
{"question": "Show the name of the customer who has the maximum total amount of payment", "query": "SELECT T1.customer_name FROM customer AS T1 WHERE T1.total_payment  =  (SELECT MAX(T2.total_payment) FROM customer AS T2)"}
{"question": "What are the customers with names of the form \"John Smith\" and \"J", "query": "SELECT T1.Name FROM Customer AS T1 WHERE T1.Name LIKE \"John Smith\" OR T1.Name LIKE \"J Smith\""}
{"question": "List the names of artists whose debut was in the year before 2000", "query": "SELECT T1.artist_name FROM artists AS T1 JOIN albums AS T2 ON T1.artist_id  =  T2.artist_id WHERE T2.debut_date  <  2000"}
{"question": "How many people are on the plane?", "query": "SELECT count(*) from passengers"}
{"question": "What is the average speed for these flights?", "query": "SELECT avg(speed) FROM flight"}
{"question": "(How many main stream browsers whose market share are at least 5 exist?", "query": "SELECT DISTINCT browser_name FROM browser WHERE market_share  >=  5"}
{"question": "What is the total number of employees with the last name \"Shapiro\"?", "query": "SELECT T1.last_name,  COUNT(*) FROM employee AS T1 GROUP BY T1.last_name"}
{"question": "What are the names, ids and titles of all the songs that have \"Faster\" in their names", "query": "SELECT T1.name,  T1.id,  T1.title FROM songs AS T1 WHERE T1.name  LIKE \"%Faster%\""}
{"question": "What are the names, locations and number of employees of the company?", "query": "SELECT T1.name,  T1.location,  T1.employees FROM company AS T1"}
{"question": "What are the names, id and the number of products of each company?", "query": "SELECT T1.id,  T2.name,  T2.number_of_products FROM company AS T1 JOIN products AS T2 ON T1.id  = T2.id"}
{"question": "What are the names, ages, and cities of the students?", "query": "SELECT T1.student_name,  T1.student_age,  T1.city FROM student AS T1"}
{"question": "What are the first name and last name of students who only took one course?", "query": "SELECT T1.student_first_name,  T1.\"student_last_name\" FROM students AS T1 JOIN courses AS T2 ON T1.course_id  =  T2.\"course_id\" WHERE T2.course_name  =  \"One Course\""}
{"question": "What would happen if there were no weights in the world?", "query": "SELECT T1.weight FROM weight AS T1 WHERE T1.weight  =  0"}
{"question": "What is the name of the restaurant with the id of 7?", "query": "SELECT name FROM restaurants WHERE id  =  7"}
{"question": "What is the date of the last message from Zach?", "query": "SELECT date_time FROM messages WHERE message_id = \"Zach\""}
{"question": "What are the first 15 customers of Starbucks?", "query": "SELECT * FROM customer WHERE customer_id  IN (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)"}
{"question": "What are the ages of the two girls who are both 5 feet tall?", "query": "SELECT T1.age,  T1.height FROM person AS T1 JOIN person_height AS T2 ON T1.person_id  =  T2.person_id WHERE T2.height  =  \"5\" AND T1.height  =  \"5\";"}
{"question": "Show the names of people who live in the city of Palo Alto", "query": "SELECT T1.name FROM people AS T1 WHERE T1.city  =  \"Palo Alto\""}
{"question": "What is the first three digits of each number that is not 5 or 6?", "query": "SELECT T1.number,  T2.number FROM numbers AS T1 JOIN numbers AS T2 ON T1.number  =  T2.number WHERE T1.number NOT IN (5, 6)"}
{"question": "Show the names of the employees who have the most skill points", "query": "SELECT T1.employee_id,  T2.name FROM employee_skill_point AS T1 JOIN employee AS T2 ON T1.employee_id  =  T2.employee_id WHERE T1.skill_id  =  '1' ORDER BY T1.employee_id  DESC"}
{"question": "Show the names of all the countries in descending order of area", "query": "SELECT T1.country_name FROM country AS T1 ORDER BY T1.area DESC"}
{"question": "How many students are there at New England Tech?", "query": "SELECT COUNT(*) FROM Students"}
{"question": "List the names and id of each product in all contracts", "query": "SELECT T1.product_name,  T1.id FROM contract AS T1 JOIN product AS T2 ON T1.contract_id  =  T2.contract_id"}
{"question": "What are the names, years and ids of the course with two or more classes on the same date", "query": "SELECT T1.course_id,  T1.year,  T1.id FROM course AS T1 JOIN courses AS T2 ON T1.id  =  T2.id WHERE T2.year  =  \"2008\" AND T2.year  =  T1.year"}
{"question": "What are the ages of the customers who have the most products?", "query": "SELECT T1.customer_id,  T1.customer_name,  T2.age FROM customers AS T1 JOIN products AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.product_count  =  (SELECT MAX(T3.product_count) FROM products AS T3);"}
{"question": "What are the details about the employee who was fired without notice?", "query": "SELECT T1.employee_id,  T1.firstname,  T2.lastname,  T3.salary,  T4.city,  T5.state,  T6.country,  T7.city_code,  T8.state_code,  T9.country_code,  T10.city_name,  T11.state_name,  T12.country_name,  T13.city_population,  T14.state_population,  T15.country_population,  T16.city_code,"}
{"question": "How many employees do the employees with the first name \"Agnes\" have?", "query": "SELECT T1.employee_id,  T1.first_name,  T1.last_name,  T1.title,  T1.department_id,  T1.salary,  T1.hire_date,  T1.hire_by,  T1.hire_for,  T1.hire_from,  T1.hire_to,  T1.hire_until,  T1.hire_reason,  T1.hire_status,  T1.hire_type,  T1.hire_year,  T"}
{"question": "What are the name of all artists who have worked with the label \"DreamWorks\"?", "query": "SELECT DISTINCT artist_name FROM artist_work WHERE label_name = \"DreamWorks\""}
{"question": "What are the names and ages of all employees who have a certificate of competence?", "query": "SELECT T1.name,  T1.age FROM employees AS T1 WHERE T1.cert_id  =  1"}
{"question": "Find all the names of the customers who have a credit card with a limit of 50", "query": "SELECT T1.customer_id,  T2.name FROM customers AS T1 JOIN credit_cards AS T2 ON T1.id  = T2.customer_id WHERE (T2.limit  =  50)"}
{"question": "What are the names, birthdays and the last names of all students who have a GPA lower than 2", "query": "SELECT T1.student_name,  T1.student_birthday,  T1.student_last_name FROM student AS T1 WHERE GPA  <  2"}
{"question": "Find the number of records in the table with name \"employees\"", "query": "SELECT count(*) AS count FROM employees"}
{"question": "(a novel question, about a table that was not used in the training)", "query": "(the sql query to answer the query)"}
{"question": "What are the names, city and gender of students of your school who are studying Business Administration", "query": "SELECT T1.name,  T2.city,  T3.gender FROM student AS T1 JOIN student_details AS T2 ON T1.id  =  T2.id JOIN student_details AS T3 ON T2.student_id  =  t3.student_id WHERE T1.school_id  =  \"1\""}
{"question": "What is the name for an order with status \"On Hold\" and date \"20\" in the year 2010?", "query": "SELECT name FROM orders WHERE order_date  =  \"2010-01-20\" AND order_status  =  \"On Hold\""}
{"question": "Which colleges have the highest number of students in 2012 or later? Show the name and the number of students of each college", "query": "SELECT College FROM match.student_info WHERE YEAR(Date_of_Birth) >= 2012 GROUP BY College HAVING count (*) > 0"}
{"question": "What are the names and id of all the employees in the organization?", "query": "SELECT T1.name,  T1.* FROM employee AS T1 WHERE T1.id  =  ( SELECT T2.id FROM employee AS T2 WHERE T2.name  =  \"John\" )"}
{"question": "what is the title and author or editor that correspond to books made after 1989", "query": "SELECT title,  author,  editor,  year FROM books WHERE year  >  1989"}
{"question": "What is the average annual salary of the employees that are in charge of the best performance of the company in the last two years?", "query": "SELECT AVG(salary) FROM (SELECT T1.salary FROM employee AS T1 WHERE T1.job_id  =  \"best_performance\" AND T1.salary  >  0) AS T2"}
{"question": "What are the names and salaries for all employees of the company who has been with the company for at least 10 years?", "query": "SELECT T1.first_name,  T1.last_name,  T1.salary FROM employees AS T1 WHERE T1.joined_date  >=  '2000-01-01' AND T1.joined_date <  '2010-01-01'"}
{"question": "What are the number of students who took courses in the summer of 2016?", "query": "SELECT count(*)  FROM student_course_enrollment WHERE Enrollment_Date  =  '2016-06-01'"}
{"question": "What is the name or title of the course?", "query": "SELECT T1.course_name FROM course AS T1 JOIN course_description AS T2 ON T1.course_id  =  T2.course_id WHERE T2.course_name  =  \"What is the name or title of the\""}
{"question": "How many people are in the room?", "query": "SELECT count(*) from room"}
{"question": "What are the average prices of products from the manufacturer \"Orion\"?", "query": "SELECT AVG(price) FROM Catalog_Contents WHERE manufacturer_id  =  'Orion'"}
{"question": "Find the total number of departments", "query": "SELECT count(*) AS total FROM departments"}
{"question": "What is the average temperature for all cities except those with temperatures below 0 degrees?", "query": "SELECT AVG(T.temperature) FROM Weather AS T WHERE T.city_id  =  0 AND T.temperature  >  0"}
{"question": "What are the names and titles of all the customers who have purchased the same item?", "query": "SELECT T1.name,  T1.\"title\" FROM customer AS T1 WHERE T1.item_id  =  ( SELECT T2.item_id FROM item AS T2 WHERE T2.name  =  \"Shoe\" )"}
{"question": "Show a new question similar to the previous one", "query": "SELECT T2.question_id,  T1.question_text,  T1.question_type,  T1.question_order,  T1.question_id,  T2.question_id,  count(*) FROM questions AS T1 JOIN questions AS T2 ON T1.question_id  =  T2.question_id WHERE T1.question_type  =  \"text\" AND T1.question_order  =  T2.question_order AND T1.question_text  =  T2.question"}
{"question": "What is the average grade point of the students in the dorm?", "query": "SELECT AVG(grade) FROM student_grades WHERE dorm_id  =  \"Dorm-1\""}
{"question": "What are all the schools in the United States that have a class with more than 100 students?", "query": "SELECT T1.school_name,  T1.school_id FROM schools AS T1 JOIN class AS T2 ON T1.school_id  =  T2.school_id WHERE T2.class_size  >  100"}
{"question": "What is the average size of the students with a foreign language proficiency of level A2?", "query": "SELECT T1.average_size FROM students AS T1 JOIN student_language_level AS T2 ON T1.student_id  =  T2.student_id WHERE T2.level_id  =  \"A2\""}
{"question": "What is the name of the company that makes the product \"Rice Crispy\"?", "query": "SELECT T1.company_name FROM company AS T1 JOIN product AS T2 ON T1.id  =  T2.id WHERE T2.name  = \"Rice Crispy\""}
{"question": "How many different colors are there in the picture?", "query": "SELECT count(*) AS \"count\" FROM colors"}
{"question": "What are the names and types of all aircrafts?", "query": "SELECT T1.aircraft_name,  T1.aircraft_type FROM aircraft AS T1;"}
{"question": "What is the id and gender of the customer who purchased the least number of products?", "query": "SELECT T1.customer_id,  T1.gender FROM customer AS T1 JOIN order AS T2 ON T1.customer_id  =  T2.[customer_id] WHERE T2.num_products  =  \"1\""}
{"question": "Find the number of employees who have worked in the company for more than 5 years", "query": "SELECT count(*)  FROM employees WHERE employee_id  =  '1' AND employee_age  >  5"}
{"question": "What is the average number of passengers per flight?", "query": "SELECT AVG(passengers) FROM flight"}
{"question": "What is the name and title of the student who has the maximum number of publications in the department of Physics?", "query": "SELECT T1.student_id,  T2.name,  T2.title FROM students AS T1 JOIN publications AS T2 ON T1.id  = T2.student_id WHERE T2.department_id  =  'Physics' AND T2.number_of_publications  =  (SELECT max(number_of_publications) FROM students)"}
{"question": "What are the names (first name/last name) of all the students who are in the computer science department?", "query": "SELECT T1.student_name FROM student AS T1 JOIN department AS T2 ON T1.student_id  =  T2._id WHERE T2.name  =  \"computer science\""}
{"question": "What are the names, numbers, and weights of the animals in the zoo?", "query": "SELECT T1.animal_name,  T1.animal_number,  T1.animal_weight FROM Animals AS T1"}
{"question": "What is the average score of the players of the team \"Red Sox\"?", "query": "SELECT AVG(score) FROM game_results WHERE team_name  =  \"Red Sox\""}
{"question": "How are the names of the products in \"product\" database ordered alphabetically by name? (You may use MySQL's ORDER BY/ASC/DESC function", "query": "SELECT T1.name FROM product AS T1 ORDER BY T1.name ASC"}
{"question": "All the employees with gpa < 3", "query": "SELECT T1.name FROM employees AS T1 WHERE T1.gpa < 3"}
{"question": "What is the number and date of the contract between the company and the contractor?", "query": "SELECT T1.contract_id,  T1.contract_date FROM contract AS T1 JOIN contract_details AS T2 ON T1.contract_id  =  T2.[contract_id]"}
{"question": "What is the average temperature for all cities included in the query?", "query": "SELECT AVG(temperature) FROM weather_data;"}
{"question": "How many times did this question appear in the corpus?", "query": "SELECT count(*) AS cnt FROM questions WHERE question_id  =  \"$question_id\""}
{"question": "what are the names of the products?", "query": "SELECT T1.product_name FROM product AS T1"}
{"question": "Find the names of all products whose price is between 20000 and 20000", "query": "SELECT T1.Product_Name,  T2.Price FROM Products AS T1 JOIN Products_Prices AS T2 ON T1.Product_ID  =  T2.Product_ID WHERE T2.Price  >  20000 AND T2.Price  <  20000"}
{"question": "What is the first and last name of the students who are in the class with number 101?", "query": "SELECT first_name,  last_name FROM students WHERE class_id  =  101"}
{"question": "Show the names of all students", "query": "SELECT name FROM student"}
{"question": "What are the names, last names, and ages of all the students who are members of P", "query": "SELECT name FROM student WHERE student_id IN (SELECT student_id FROM member_of WHERE member_of.student_id  =  \"P\")"}
{"question": "(Find the names of the products with length less than 3 or height greater than 5), after \"", "query": "SELECT T1.name FROM product AS T1 WHERE T1.length  <  3 OR T1.height  >  5"}
{"question": "What are the names, ranks and ranks of all the senators who run for the next election in the fall of 2005?", "query": "SELECT T1.name,  T1.rank,  T2.rank FROM senators AS T1 JOIN senators_ranks AS T2 ON T1.senator_id  =  T2.senator_id WHERE T2.next_election_year  =  2005"}
{"question": "Who is the top-rated player?", "query": "SELECT * FROM player ORDER BY rating DESC LIMIT 1"}
{"question": "What are the ids, first name, and last name of all the employees?", "query": "SELECT T1.employee_id,  T1.first_name,  T1.last_name FROM employee AS T1 JOIN employee_details AS T2 ON T1.employee_id  =  T2.[employee_id]"}
{"question": "List the customer ids who have a credit score under 800", "query": "SELECT customer_id FROM customers WHERE credit_score  <  800"}
{"question": "\"How many students are over 20 years old?\"", "query": "SELECT count(*)  FROM student WHERE age > 20"}
{"question": "Find the name of customers", "query": "SELECT T1.customer_name FROM Customers AS T1 WHERE T1.customer_id  =  '1'"}
{"question": "Give the names of all the movies made by the company that produced \"The Lion, The Witch and the Wardrobe\"", "query": "SELECT T1.title FROM movie_producer AS T1 JOIN movie AS T2 ON T1.movie_id  =  T2"}
{"question": "What is the name, first name and last name, id, and phone number of the customer who ordered the most items in 2010?", "query": "SELECT T1.customer_first_name, T1.customer_last_name, T1.customer.id, T1.customer.phone FROM customers AS T1 JOIN orders AS T2 ON T1.order_id  =  T2.order_id WHERE T2.total_items  >  (SELECT T3.total_items FROM orders AS T3 WHERE T3.order_id  =  (SELECT T4.order_id FROM orders AS T4 WHERE T4.customer_id  =  (SELECT customer_id FROM customers AS T5 WHERE T5."}
{"question": "What are the names in ascending order of number of times a product is sold?", "query": "SELECT T1.product_name,  T1.quantity FROM product AS T1 ORDER BY quantity DESC"}
{"question": "List the names of the cities and their populations", "query": "SELECT T1.name FROM city AS T1 JOIN population AS T2 ON T1.city_id  =  T2.city_id"}
{"question": "What is the average score of the students whose name starts with 'E' and ends with 'A'?", "query": "SELECT AVG(Score) FROM student WHERE name_first  LIKE 'E%' AND name_last  LIKE 'A%'"}
{"question": "What is the average grade point for students in all majors?", "query": "SELECT avg(grade) FROM student AS T1 JOIN grade AS T2 ON T1.stu_id  =  T2"}
{"question": "What is the name and the state of the city with the highest population?", "query": "SELECT city,  state FROM cities WHERE population  =  (SELECT max(population) FROM cities)"}
{"question": "List all accounts where the balance is less than $10", "query": "SELECT account_id FROM Accounts WHERE balance < 10"}
{"question": "What are the names, department, city, and state of all employees of the company?", "query": "SELECT T1.first_name,  T1.last_name,  T1.department,  T1.city,  T1.state FROM employee AS T1 WHERE T1.company_id  =  '1'"}
{"question": "How many countries have a population of < 10 million?", "query": "SELECT count(*)  FROM country WHERE population  <  1000000"}
{"question": "Find the names and email addresses of all employees who have no manager", "query": "SELECT T1.firstname,  T1.lastname,  T1.email FROM employee AS T1 WHERE T1.manager_id  =  NULL"}
{"question": "What are the names for each of these different types of companies?", "query": "SELECT T1.name FROM company AS T1 WHERE T1.type  =  \"A\""}
{"question": "What is the number of countries with a population of less than 2000?", "query": "SELECT count(*)  FROM country WHERE population  <  2000"}
{"question": "How many players are present in the game field?", "query": "SELECT COUNT(*) FROM player"}
{"question": "How many students are there in the class of 2002, ordered by age?", "query": "SELECT T1.name,  T1.* FROM student AS T1 WHERE T1.year  =  2002"}
{"question": "What are the names, ages, and genders of all students who have attended a lecture, and who have not taken a test?", "query": "SELECT T1.name,  T1.age,  T1.gender FROM students AS T1 JOIN lecture AS T2 ON T1.id  =  T2.lecturer_id GROUP BY T1.name, T1.age, T1.gender"}
{"question": "What is the average age of male and female students?", "query": "SELECT AVG(age) FROM Student"}
{"question": "What is the age of the second biggest city?", "query": "SELECT T1.age FROM city AS T1 WHERE T1.population  =  (SELECT T2.population FROM city AS T2 WHERE T2.population  >  T1.population)"}
{"question": "What are the names and the ids of students who have a GPA of 2", "query": "SELECT T1.student_id,  T1.name FROM students AS T1 WHERE T1.GPA  =  2"}
{"question": "Find the total number of people who have a credit card", "query": "SELECT COUNT(*) FROM customers_cards WHERE card_number  =  \"1234567890\""}
{"question": "How many students does each staff have?", "query": "SELECT T1.stu_fname,  T1.stu_lname,  T1.[stu_id] FROM student AS T1 JOIN staff AS T2 ON T1.stu_id  =  T2.[stu_id]"}
{"question": "What are the names, addresses, and home phone numbers of the people who live in the same apartment building as you?", "query": "SELECT T1.name,  T1.address,  T1.home_phone_number FROM apartment_house AS T1 JOIN apartment_house_occupants AS T2 ON T1.apartment_id  =  T2.apartment_id WHERE T2.apartment_id  = 1"}
{"question": "(a question about a sql table) Find the faculty with the most students", "query": "SELECT T1.name FROM faculty AS T1 JOIN faculty_students AS T2 ON T1.fid  =  T2.fid WHERE T2.count  >  1"}
{"question": "What is the name and gender of the customer who bought the most products?", "query": "SELECT T1.CustomerID,  T1.CustomerName,  T1.CustomerGender FROM Customer AS T1 WHERE T1.CustomerID  =  (SELECT MAX(CustomerID) FROM Customer)"}
{"question": "How many faculty members are there in the psychology department?", "query": "SELECT T1.name FROM faculty AS T1 JOIN departments AS T3 ON T1.department_code  =  T3.id GROUP BY T1.name HAVING count(*)  >  0"}
{"question": "What is the name from the highest to the lowest number of occurrences in this table?", "query": "SELECT name FROM table ORDER BY count(*) DESC"}
{"question": "Find the names of the students who have more than one allergy", "query": "SELECT T1.name FROM student AS T1 JOIN allergy AS T2 ON T1.id  =  T2.student_id WHERE T2.name  =  'allergy'"}
{"question": "What is the name, id, and birthdate of the product with the highest score?", "query": "SELECT T1.id,  T1.name,  T1.birthdate FROM products AS T1 WHERE T1.score  =  (SELECT MAX(score) FROM products)"}
{"question": "What are the first and last names of all the students in room 303?", "query": "SELECT first_name,  last_name FROM students WHERE room_id  =  \"303\""}
{"question": "What are the task descriptions?", "query": "SELECT T1.description FROM tasks AS T1 WHERE T1.description  =  \"What are the task descriptions?\""}
{"question": "List the name and description of all the products", "query": "SELECT T1.product_name,  T1.description FROM product AS T1 WHERE T1.id  =  (SELECT T2.id FROM product AS T2 WHERE T2.description  =  T1.description)"}
{"question": "Which universities have the most students?", "query": "SELECT T1.name,  T2.enr FROM university AS T1 JOIN student_enrollment AS T2 ON T1.university_id  =  T2._university_id WHERE T2.enrollment  >  0"}
{"question": "What are the names, photos and email addresses of all students who registered for the \"Physics for Students\" class?", "query": "SELECT T1.name,  T1.photo,  T2.email FROM students AS T1 JOIN registration AS T2 ON T1.studentid  =  T2.studentid"}
{"question": "What are the full name of the students who are a part of department 520?, after \"", "query": "SELECT T1.full_name FROM student AS T1 WHERE T1.department_id  =  520"}
{"question": "What are the names and ids of all employees who have at least one activity?", "query": "SELECT T1.name,  T1.\"id\" FROM employee AS T1 JOIN activities AS T2 ON T1.employee_id  =  T2.\"employee_id\" WHERE T2.activity_id  =  1;"}
{"question": "(a novel question, about a table) Find the names of the students who live near to you", "query": "SELECT DISTINCT student_name FROM students WHERE STUDENT_ADDRESS LIKE \"%\" + @ADDRESS + \"%\""}
{"question": "How many students have each different allergy where the age is less than 18?", "query": "SELECT count(*) AS count FROM allergy_table WHERE age  <  18 AND allergy  =  \"allergies\""}
{"question": "What is the name and type of the file that has the highest number of bytes?", "query": "SELECT T1.file_name,  T1.file_size FROM files AS T1 WHERE T1.file_size  =  (SELECT MAX(T2.file_size) FROM files AS T2)"}
{"question": "Give the names, titles, and phone numbers of the employees who are responsible for sales to retail accounts", "query": "SELECT T1.first_name,  T1.last_name,  T1.phone_number FROM employee AS T1 WHERE T1.title  =  \"Sales Representative\""}
{"question": "What are the cities that are not on the eastern side of the country?", "query": "SELECT T1.city FROM cities AS T1 WHERE T1.country_id  =  \"1\" AND T1.city  NOT IN (SELECT T2.city FROM cities AS T2 WHERE T2.country_id  =  T1.country_id AND T2.city  IN (SELECT T3.city FROM cities AS T3 WHERE T3.country_id  =  '1' AND T3.city  NOT IN (SELECT city FROM cities AS T4 WHERE T4.country_id  =  1 AND T4.city  IN (SELECT city FROM cities"}
{"question": "What are all the names of the restaurants in Los Angeles? Show the names and the price of a meal", "query": "SELECT T1.Name,  T1.Price FROM restaurant AS T1 JOIN meal AS T2 ON T1.restaurant_id  =  T2.restaurant_id WHERE T2.meal_type  =  \"Dinner\""}
{"question": "What are the names, id and type of all employees?", "query": "SELECT T1.name,  T2.id,  T3.type FROM employee AS T1 JOIN employee_type AS T2 ON T1.id  =  T2.id_employee JOIN employee_type AS T3 ON T2.type  =  T3.type_id"}
{"question": "Find the name and id of the document that has been accessed the most times, and the time it was accessed", "query": "SELECT DISTINCT Document_id,  name,  id FROM Document_Access_Log AS T1 JOIN Document_Access_Log AS T2 ON T1.id  =  T2.id WHERE T1.time_accessed  >  T2.time_accessed GROUP BY T1.id ORDER BY T1.time_accessed DESC LIMIT 1"}
{"question": "What are the names, ages and home states of all students who have a sibling living in the state of Arkansas?", "query": "SELECT T1.name,  T1.* FROM student AS T1 JOIN student AS T2 ON T1.sibling_id  =  T2.id WHERE T2.state  =  'Arkansas'"}
{"question": "What are the ages of the students with allergies to food and animals on average?", "query": "SELECT T1.age,  T2.allergy FROM student AS T1 JOIN allergy AS T2 ON T1.id  =  T2.student_id WHERE T2.allergy  =  'food' OR T2.allergy  = 'animal'"}
{"question": "(a question about a sql table), after \"Given:\"", "query": "SELECT T1.question_id,  T1.question,  T1.answer FROM questions AS T1 JOIN answers AS T2 ON T1.question_id  =  T2"}
{"question": "What is the name (with first name and last name) of each student who is not allergic", "query": "SELECT T1.name FROM students AS T1 WHERE T1.allergy_id  =  0"}
{"question": "What is the number and name of the customer who made the most orders? Find the user name", "query": "SELECT T1.customer_name,  T1.customer_id,  T1.customer_type_code,  T1.customer_address_id,  T1.address_id,  T1.* FROM customer AS T1 JOIN order_item AS T2 ON T1.customer_id  =  T2._id WHERE T2.order_id  =  '1'"}
{"question": "How many students are from China?", "query": "SELECT count(*) AS cnt FROM students WHERE country = \"China\""}
{"question": "What are the names, orders and prices of products that have the same name, order, and price?", "query": "SELECT T1.name,  T1.order,  T1.price FROM product AS T1 WHERE T1.name  =  \"T-Shirt\" AND T1.order  =  \"1\" AND T1.price  =  \"10\""}
{"question": "What are the distinct first names and countries of the students who have an allergy to cat?", "query": "SELECT DISTINCT name FROM student WHERE allergy_to_cat  =  \"true\""}
{"question": "Show the average age of students who are under 18 years old", "query": "SELECT AVG(Age) FROM student WHERE Age  <  18"}
{"question": "What are the ids and descriptions of all the movies with more than 100 credits?", "query": "SELECT T1.movie_id,  T1.movie_name,  T1.movie_description FROM movie AS T1 WHERE T1.credits  >  100;"}
{"question": "What is the average amount of time it takes to get a taxi in downtown Toronto?", "query": "SELECT AVG(T1.time) FROM taxi_trips AS T1 WHERE T1.pickup_location  =  \"Toronto\" AND T1.dropoff_location  =  \"Toront\""}
{"question": "Find the number of project that each student is working on and name", "query": "SELECT T1.student_id,  T2.project_id FROM student AS T1 JOIN project AS T2 ON T1.id  =  T2.student_id WHERE T2.name  =  \"name\""}
{"question": "List the names of countries with a total number of invoices higher than 1000", "query": "SELECT T1.country_name,  T2.total_invoices FROM country AS T1 JOIN invoice AS T2 ON T1.country_id  =  T2.country_id WHERE T2.total_invoices  >  1000"}
{"question": "How many countries have been in contact with each other?", "query": "SELECT count(*)  FROM country_history"}
{"question": "What are the titles and names of all the students?", "query": "SELECT T1.student_name,  T1.student_title FROM students AS T1 JOIN students_titles AS T2 ON T1.student_id  =  T2.student_id WHERE T2.student_id  =  (SELECT student_id FROM students WHERE student_name  =  \"John Smith\")"}
{"question": "What are the dates of birth of all the employees in the company?", "query": "SELECT T1.date_of_birth FROM employee AS T1 JOIN employee_history AS T2 ON T1.id  =  T2.employee_id WHERE T2.date_of_history  =  '2000-01-01'"}
{"question": "What is the course title and number of credits for QM - 261?", "query": "SELECT course_title,  credit_hours FROM COURSE WHERE course_id  =  'QM - 261'"}
{"question": "What are the first names and last names of the people in the image?", "query": "SELECT name FROM people WHERE id IN (SELECT person_id FROM image)"}
{"question": "\"A study of the relationship between the incidence of diabetes and the time of day when it was diagnosed is conducted", "query": "SELECT DISTINCT t1.name_first,  t1.name_last,  t1.player_id FROM player_award AS t1 JOIN player AS t2 ON t1.player_id  = t2.player_id WHERE t2.player_id IN (SELECT player_id FROM player_award WHERE award_type = 'Player Award') AND t1.award_type = 'Player Award' AND t1.award_year = '2009' AND t1.awarded_date = '2009-01-01' AND t1.a"}
{"question": "What are the first name and last name of all students?", "query": "SELECT T1.first_name,  T1.last_name FROM student AS T1"}
{"question": "Find out which course is taught by the most number of instructors", "query": "SELECT course_name,  count(*) AS num_instructors FROM course GROUP BY course_name ORDER BY num_instructors DESC LIMIT 1"}
{"question": "What are the cities with the most number of students?", "query": "SELECT city_name,  count(*) FROM city_student GROUP BY city_name ORDER BY count(*) DESC"}
{"question": "What are the names, first names and last names of the employees with the most number of promotions?", "query": "SELECT T1.first_name,  T1.last_name,  T2.name FROM Employee AS T1 INNER JOIN Promotion AS T2 ON T1.id  = T2.employee_id GROUP BY T1.first_name, T1.last_name ORDER BY count(*) DESCRIBE"}
{"question": "What are the names, hometown, and scores of the students who are majoring in Mathematics and Statistics?", "query": "SELECT name,  hometown,  score FROM student WHERE major  =  \"Mathematics\" AND score  >  80"}
{"question": "What are the first and last names of the employee with the ID 242518965?", "query": "SELECT T1.last_name,  T1.first_name FROM employees AS T1 WHERE T1.id  =  242518965"}
{"question": "Find the last name and phone number of the person who buys the most products in the store", "query": "SELECT T1.last_name,  T1.phone_number FROM customer AS T1 JOIN purchase AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.amount  >  1000"}
{"question": "Find the name of colleges that have at the least two players", "query": "SELECT T1.college_id,  T1.name FROM college AS T1 JOIN player AS T2 ON T1.id  =  T2.college_id WHERE T2.player_id  =  '1'"}
{"question": "What are the contents of the file with id \"1\" in the \"Files\" directory?", "query": "SELECT name FROM Files WHERE id  =  \"1\""}
{"question": "What is the name and number of products?", "query": "SELECT name,  count(*) FROM products"}
{"question": "What is the highest average score in a race?", "query": "SELECT AVG(score) FROM race;"}
{"question": "How many students have different disabilities?", "query": "SELECT T1.student_id,  T2.disability FROM students AS T1 JOIN disabilities AS T2 ON T1.id  =  T2.id"}
{"question": "What are the customers first and last name of 12 most expensive invoices", "query": "SELECT T1.first_name,  T1.last_name FROM customers AS T1 WHERE T1.amount  =  (SELECT T2.amount FROM invoices AS T2 WHERE T2.customer_id  =  T1.customer_id ORDER BY T2.amount DESC LIMIT 12)"}
{"question": "What are the names and total number of students in the course with the highest enrollment?", "query": "SELECT T1.student_name,  T1.total_students FROM students AS T1 WHERE T1.course_id  =  (SELECT max(course_id) FROM course)"}
{"question": "How many students have\" is the question's original text", "query": "SELECT T1.student_id FROM Student AS T1 JOIN Student_Enrollment AS T2 ON T1.student_id  =  T2.student_id WHERE T2.enrollment_status  =  'Enrolled' AND T2.is_active  =  'Yes'"}
{"question": "What is the total amount of money in the contracts that were created between the months of December, 2002 and December, 2003?", "query": "SELECT SUM(amount) FROM contracts WHERE month(contract_date) BETWEEN '2002-12-01' AND '2003-12-01'"}
{"question": "How many invoices were billed from Paris, France?", "query": "SELECT count(*)  FROM invoices WHERE country_code  =  \"FR\""}
{"question": "What are the numbers of students in each city?", "query": "SELECT T1.city_id,  T1.name_first,  count(*) FROM student AS T1 JOIN city AS T2 ON T1.city_id  =  T2.city_id GROUP BY T1.city_id ORDER BY count(*)  DESC LIMIT 1"}
{"question": "How many people in the world have attended the events", "query": "SELECT count(*) AS total FROM attendee_events WHERE event_id  =  \"1\""}
{"question": "Find the names of all the employees whose last name is \"Mulholland\"", "query": "SELECT name FROM employees WHERE last_name  =  \"Mulholland\""}
{"question": "What is the product type and name for the product with price higher than 1000 or lower and 1 or 2?", "query": "SELECT T1.product_type,  T1.product_name FROM products AS T1 WHERE T1.price  >  1000 OR T1.price  <  1 OR T1.price  =  2"}
{"question": "What are the names and locations of the cities that have the highest number of different kinds of vehicles?", "query": "SELECT T1.city_name,  T2.vehicle_type FROM city_vehicle_type AS T1 JOIN city_vehicle_type AS T2 ON T1.city_id  =  T2.city_id WHERE T1.city_id  IN (SELECT city_id FROM city_vehicle_type WHERE city_id IN (SELECT city_id FROM city WHERE name  =  \"New York\"))"}
{"question": "(a novel question, about a table) How many accounts are there in the table \"Customers\"?", "query": "SELECT count(*) AS \"count\" FROM customers"}
{"question": "(a novel question, about a question about a table), after \"Given:\"", "query": "SELECT T1.question_id,  T1.question,  T1.answer FROM questions AS T1 JOIN answers AS T2 ON T1.question_id  =  T2.question_id WHERE T2.question_id  =  (SELECT question_id FROM questions WHERE question  =  'What is the name of the employee who has the highest salary?' )"}
{"question": "The problem with this is that it does not cover this scenario:", "query": "SELECT T1.Name,  T1.Description,  T1.Price,  T1.Quantity,  T1.Total FROM products AS T1 JOIN product_description AS T2 ON T1.Product_ID  =  T2.Product_ID JOIN product_price AS T3 ON T1.Product_ID = T3.Product_ID JOIN product_quantity AS T4 ON T1.Product_ID   =  T4.Product_ID WHERE T2.Description  =  \"Guitar\" AND T3.Price  =  \"100\" AND T4."}
{"question": "(a different question, about a different table), \"", "query": "(the sql query to answer the query), after \""}
{"question": "What are the details about the car with id 1?", "query": "SELECT * FROM car WHERE id = 1"}
{"question": "What is the minimum, maximum, average, and median number of friends of Alice?", "query": "SELECT MIN(Friends),  MAX(Friends),  AVG(Friends),  MEDIAN(Friends) FROM friend_table WHERE name_first  =  'Alice'"}
{"question": "\"What is the company where Eduardo Marti is a customer?\"", "query": "SELECT T1.name FROM customer AS T1 WHERE T1.first_name  =  \"Eduardo\" AND T1.last_name  =  \"Marti\""}
{"question": "What are the names and addresses of employees who are in the accounting department?", "query": "SELECT T1.name,  T1.address FROM employees AS T1 WHERE T1.department_id  =  'accounting'"}
{"question": "What is the number of programs of study in the university of Texas?", "query": "SELECT count(*) AS total_count FROM program_of_study"}
{"question": "What is the product name with the greatest average price per unit?", "query": "SELECT T1.product_name,  T2.price FROM products AS T1 JOIN products_by_price AS T2 ON T1.product_id  =  T2.product_id WHERE T2.price  >  0.00"}
{"question": "How many people live in the city of Tokyo?", "query": "SELECT count(*) AS \"number of people\" FROM city WHERE name = \"Tokyo\""}
{"question": "How many students are in the high school in the city of \"Saskatoon\", Canada?", "query": "SELECT COUNT(*) FROM students WHERE city  =  \"Saskatoon\""}
{"question": "What is the name and age of the student whose favorite music is classical?", "query": "SELECT T1.fname,  T1.lname,  T1.age FROM student AS T1 WHERE T1.favorite_music  =  \"classical\""}
{"question": "What are the names, and the ages of the students in the year 2011?", "query": "SELECT T1.name,  T2.age FROM student AS T1 JOIN year AS T2 ON T1.year  =  T2.year"}
{"question": "Who was the second mayor of the city?", "query": "SELECT T1.name FROM employees AS T1 JOIN manager AS T2 ON T1.manager_id  =  T2.employeeid WHERE T2.name  =  \"John Doe\""}
{"question": "List all albums where the title of the album is 'Love Is A Stranger' and the artist is 'Led'", "query": "SELECT T1.album_id,  T1.title,  T1.artist_id FROM album AS T1 JOIN artist AS T2 ON T1.artist_id  =  T2.artist_id WHERE T2.name  =  \"Led\" AND T1.title  =  \"Love Is A Stranger\""}
{"question": "I'm looking for the film with the highest number of scenes in which characters from a show called \"The Wire\" appear, ordered by length of each movie", "query": "SELECT T1.name,  T1.* FROM film AS T1 JOIN scene AS T2 ON T1.film_id  =  T2._id WHERE T2.name  =  \"The Wire\" ORDER BY T2.length DESC"}
{"question": "What is the average age of employees in the company?", "query": "SELECT AVG(age) FROM employees"}
{"question": "What is the name and age of the person whose first name is \"Danny\" and who belongs to the country of \"Iran\"?", "query": "SELECT T1.name,  T1.age FROM person AS T1 WHERE T1.first_name  =  \"Danny\" AND T1.country  =  \"Iran\""}
{"question": "Find the names of cities, states, and countries that are in the United States of America", "query": "SELECT T1.city,  T2.state,  T3.country FROM cities AS T1 JOIN states AS T2 ON T1.state_id  =  T2._id JOIN countries AS T3 ON T2.country_id  =  T3._id WHERE T1.name  = \"New York\""}
{"question": "What is the name and age of the employee who is the youngest employee for the department named \"Finance\" and has the most number of hours worked?", "query": "SELECT T1.employeeid,  T1.name,  T1.age FROM employee AS T1 JOIN employee_hours AS T2 ON T1.emp_id  =  T2._id WHERE T2.dept_id  =  \"Finance\" AND T2.hours  =  (SELECT max(hours) FROM employee_hours)"}
{"question": "(a novel question, about a column of a table) for all rows of table \"employees\"", "query": "SELECT T1.employee_id,  T1.first_name,  \"T1.last_name\" FROM employees AS T1 WHERE T1.first_name  =  \"T1.last_nme\""}
{"question": "What is the phone number of the building with the most floors?", "query": "SELECT T1.phone FROM building AS T1 JOIN floor AS T2 ON T1.building_id  =  T2._id WHERE T2.number  >  1"}
{"question": "What is the name of the course with the least credits?", "query": "SELECT T1.course_id,  T1.course_name,  T1.course_code,  T1.course_description,  T1.course_credit_hours,  T1.course_price,  T1.course_start_date,  T1.course_end_date,  T1.grade_id,  T1.grade_name,  T1.grade_code,  T1.grade_description,  T1.grade_credit_hours,  T2.grade_id,  T2.grade_name,"}
{"question": "What is the total miles of the best selling cars in the US?", "query": "SELECT SUM(T1.miles) FROM car_sales AS T1 JOIN car_model AS T2 ON T1.car_id  =  T2.car_id WHERE T2.name  =  \"Ferrari\""}
{"question": "How many students have taken the course \"Advanced Algebra\"?", "query": "SELECT T1.student_id,  T1.course_id FROM student AS T1 JOIN course AS T2 ON T1.student_id  =  T2.student_id WHERE T2.course_code  =  \"Advanced Algebra\""}
{"question": "(find the number of students that have had a meal at least once), after \"", "query": "SELECT T1.student_id,  T1.meal_id,  T1.date_of_meal FROM student AS T1 JOIN meal AS T2 ON T1.student_id  =  T2.student_id WHERE T2.date_of_meal  >  \""}
{"question": "(a question about a sql table) Given the names of wrestlers and their the details of the movies they have been in", "query": "SELECT T1.name,  T1.movie_id,  T1.role,  T1.role_id,  T1.character_id,  T1.film_id,  T1.actor_id,  T1.director_id,  T1.producer_id,  T1.year,  T1.genre,  T1.rating,  T1.votes,  T1.votes_count,  T1.votes2,  T1.votes3,  T1.votes4,"}
{"question": "How many students are there without any loans?", "query": "SELECT count(*) AS c FROM student AS T1 JOIN loan AS T2 ON T1.id  =  T2.student_id WHERE T2.id  =  0"}
{"question": "What are the ids and names of all the students in the faculty of arts?", "query": "SELECT T1.id,  T1.name FROM students AS T1 WHERE T1.faculty_id  =  'FACULTY OF ARTS'"}
{"question": "How many teams are there in the table players", "query": "SELECT count(*)  FROM players"}
{"question": "What is the total duration of the event 'Tennis' by year?", "query": "SELECT T1.year,  T1.total_duration FROM events AS T1 JOIN event_type AS T2 ON T1.event_type_id  =  T2.id WHERE T1.name  =  \"Tennis\""}
{"question": "Find the city with most number of hospitals", "query": "SELECT T1.city FROM hospital AS T1 WHERE T1.city  =  \"New York\""}
{"question": "(one of the following) Which department has the fewest number of employees?", "query": "SELECT department_name FROM departments WHERE count(*)  =  \"the fewest number of employees\""}
{"question": "Find the number of employees whose title has the word \"IT\"", "query": "SELECT T1.employee_id,  T1.title,  T1.salary,  T1.department,  T1.city,  T1.state,  T1.country,  T1.phone,  T1.email,  T1.title_id,  T1.salary_id,  T1.department_id,  T1.state_id,  T1.country_id,  T1.phone_id,  T1.email_id,  T1.first_name,  T1."}
{"question": "For the customer whose account has the most credits, what is the highest balance?", "query": "SELECT T1.balance FROM customer AS T1 WHERE T1.account_id  =  ( SELECT account_id FROM customer WHERE account_balance  =  MAX(account_balance) )"}
{"question": "Show the names of all musicians who have recorded an album", "query": "SELECT T1.name FROM musicians AS T1 WHERE T1.album_id  =  (SELECT T2.album_id FROM albums AS T2 WHERE T2.artist_id  =  T1.id)"}
{"question": "What is the average ratings of the wines that were produced from Napa County?", "query": "SELECT AVG(rating) FROM wine WHERE city_code  =  'Napa'"}
{"question": "What is the average salary of the employees of the firm that has the largest number of employees?", "query": "SELECT AVG(T1.salary) FROM employees AS T1 WHERE T1.company_id  =  (SELECT MAX(T2.company_id) FROM employees AS T2)"}
{"question": "What are the names, ids, and gender of all students in the database?", "query": "SELECT T1.Name,  T1.id,  T1.gender FROM student AS T1"}
{"question": "What is the name of the customer who had the best score in the test?", "query": "SELECT T1.customer_id,  T1.score FROM test AS T1 WHERE T1.score  =  (SELECT MAX(T2.score) FROM test AS T2 WHERE T2.customer_id = T1.customer_id)"}
{"question": "\"The name of the students who have at least one parent in an occupation", "query": "SELECT T1.name FROM student AS T1 JOIN parents AS T2 ON T1.id  =  T2.id WHERE T2.occupation  = 'student'"}
{"question": "What are the names with at least one letter of the cities in which they are located?", "query": "SELECT name FROM city WHERE name  LIKE '%[a-zA-Z]%'"}
{"question": "What is the average cost of the documents that have been issued?", "query": "SELECT AVG(price) FROM documents WHERE type = 'letter'"}
{"question": "What is the name, id, and description of the student who is the most popular?", "query": "SELECT T1.name,  T1.* FROM student AS T1 WHERE T1.popularity  =  ( SELECT max(popularity) FROM student AS T2 )"}
{"question": "What is the name \"Jerry Prince\" of the faculty member called \"Jerry Prince\" of \"UBC\" and \"UBC\" of \"U", "query": "SELECT T1.name,  T2.name FROM faculty AS T1 JOIN faculty AS T2 ON T1.department_id  =  T2._id WHERE T1.name  =  \"Jerry Prince\" AND T2.name  =  \"UBC\" AND T1.name  =  'U'"}
{"question": "What are the names, locations, and years of all the parks?", "query": "SELECT T1.name,  T1.location,  T1.year FROM parks AS T1"}
{"question": "How many times did John Cougar Mellon have a baby?", "query": "SELECT count(*) AS \"How many times did John Cougar Melon have a baby?\" FROM customers WHERE customer_id = \"John Cougar Mellon\""}
{"question": "What are the names for the members of the team that performed the best in the last 3 matches?", "query": "SELECT T1.name FROM team AS T1 JOIN match AS T2 ON T1.team_id  =  T2.[team_id] WHERE T2.score  >  3"}
{"question": "What is the name and country of the customer who made the maximum number of purchases?", "query": "SELECT T1.customer_first_name, T1.customer_last_name, T1.address_country FROM customers AS T1 WHERE T1.customer_id  IN (SELECT customer_id FROM customers_orders AS T2 WHERE T2.order_number  =  (SELECT MAX(order_number) FROM customers_orders AS T3 WHERE T3.customer_id  =  (SELECT customer_id FROM customers AS T4 WHERE T4.customer_id  =  'T5')));"}
{"question": "What is the difference between \"hobby\" and \"passion\" in the English language?", "query": "SELECT DISTINCT T1.word FROM word_definition AS T1 JOIN word_meaning AS T2 ON T1.word_id  =  T2.[word_id] WHERE T2.word_id  =  'hobby' OR T2.word_id  ==  'passion'"}
{"question": "What are the names, dates, and contents of the two documents that were written in the morning?", "query": "SELECT T1.name,  T2.date,  T3.contents FROM documents AS T1 JOIN documents_contents AS T2 ON T1.id  =  T2.id AND T1.date  =  T2.date AND T1.name  =  T2.name AND T1.date  = '2008-01-01' AND T1.name  = 'The first document' AND T1.date  = (SELECT MIN(date) FROM documents WHERE name  =  'The first document') AND T1.date  = ('2008-01-"}
{"question": "Give me the complete name of the person with id 816", "query": "SELECT name FROM people WHERE id  =  816"}
{"question": "What is the title of the song that was played in the most recent match?", "query": "SELECT T1.song_title FROM song_playlist AS T1 JOIN song_playlist_track AS T2 ON T1.song_id  =  T2.song_id WHERE T2.track_id  =  \"1\" AND T2.position  =  \"1\""}
{"question": "What is the average, maximum, and minimum age of all students?", "query": "SELECT AVG(age),  MAX(age),  MIN(age) FROM student;"}
{"question": "What are the prices of the different kinds of products?", "query": "SELECT price FROM products"}
{"question": "What is the number of students in the class?", "query": "SELECT count(*)  FROM student"}
{"question": "List the customer ids with the highest total amount spent per transaction", "query": "SELECT T1.customer_id,  T2.total_amount FROM transactions AS T1 JOIN transactions_history AS T2 ON T1.transaction_id  =  T2.transaction_id WHERE T2.transaction_date  =  '2016-01-01' GROUP BY T1.customer_id ORDER BY T2.total_amount DESC"}
{"question": "What is the name of the person who has the greatest average score for all trips?", "query": "SELECT T1.individual_first_name,  T1.individual_middle_name,  T1.Individual_last_name,  T1.trip_id,  T1.trip_name,  T1.start_station_id,  T1.start_time,  T1.end_time,  T1.trip_duration,  T1.trip_distance,  T1.trip_type,  T1.trip_status,  T1.trip_price,  T1.trip_notes,  T1.trip_date,"}
{"question": "What are the average age of the most influential people of the United States?", "query": "SELECT AVG(age) FROM people WHERE influence_level  =  \"Most influential\""}
{"question": "What are all the countries in Europe with the same population as France?", "query": "SELECT T1.Country,  T1.Population FROM Country AS T1 WHERE T1.Population  =  \"France\""}
{"question": "List the names of students who have taken at least two computer science classes", "query": "SELECT T1.name FROM student AS T1 JOIN courses AS T2 ON T1.id  =  T2.id WHERE T2.course_id  =  'CS101' OR T2.course_id  IN (SELECT T3.course_id FROM courses AS T3 JOIN courses AS T4 ON T3.course_id  =  \"CS101\" AND T4.course_id  =  (SELECT T5.course_id FROM courses AS  T5 WHERE T5.course_id  =  'test' AND T5.course_id  <>"}
{"question": "What are the titles of books with the word \"award\" in their title, arranged in ascending order of price?", "query": "SELECT title FROM books WHERE title LIKE '%award%' ORDER BY price ASC"}
{"question": "What are the names, and the type of data, in each column of the table?", "query": "SELECT column_name,  data_type FROM information_schema.columns WHERE table_name =  'player'"}
{"question": "Which students are in all the courses (list the names of these students)?", "query": "SELECT T1.student_id,  T1.name FROM student AS T1 JOIN course AS T2 ON T1.course_id  =  T2.course_id WHERE T2.course_id  =  ( SELECT T3.course_id FROM course AS T3 WHERE T3.course_name  =  \"Algebra\" )"}
{"question": "Show the names of cities in England", "query": "SELECT city FROM cities WHERE country  =  'England'"}
{"question": "what is the maximum number of regions?", "query": "SELECT max(region_id) FROM region"}
{"question": "(a novel question, about a table with the same name, e", "query": "SELECT T1.id,  T2.name,  T3.name,  T4.name,  T5.name,  T6.name,  T7.name,  T8.name,  T9.name,  T10.name,  T11.name,  T12.name,  T13.name,  T14.name,  T15.name,  T16.name,  T17.name,  T18.name,  T19.name,  T20.name,  T21.name,  T"}
{"question": "What are the descriptions of the different types of customers?", "query": "SELECT T1.description FROM customer AS T1 JOIN type_of_customer AS T2 ON T1.customer_id  =  T2._id WHERE T2.type  =  \"Business\""}
{"question": "The data file used in the following task is here", "query": "SELECT * FROM hotel_rating WHERE hotel_id  =  \"1\""}
{"question": "What are the first name and date of birth of professors teaching courses ACCT-221 and ACCT-222?", "query": "SELECT T1.first_name,  T1.date_of_birth FROM professors AS T1 JOIN courses AS T2 ON T1.professor_id  =  T2.professor_id WHERE T2.course_id  =  \"ACCT-221\" AND T2.course_id  >  \"ACCT-222\""}
{"question": "What is the difference between the two tables?", "query": "SELECT T1.column_name,  T2.column_name FROM table1 AS T1 JOIN table2 AS T2 ON T1.column_name  =  T2.column_name"}
{"question": "What are the names, ids, and genders of the architects who opened two or more buildings after 2000?", "query": "SELECT name,  id,  gender FROM architects WHERE year(date_of_birth)  >  2000 AND id  IN (SELECT id FROM buildings WHERE year(date_of_opening)  >  2000)"}
{"question": "Find the names of the companies that have been founded in the USA in the last 5 years and the number of employees", "query": "SELECT T1.company_name,  T1.founded_year,  T1.employees FROM company AS T1 WHERE T1.founded_year  IN (  '2009',  '2010',  '2011',  '2012',  '2013',  '2014',  '2015',  '2016',  '2017',  '2018',  '2019',  '2020',  '2021',  '2022',  '2023',  '2024',  '2025',  '2026',  '2027',  '2028',  '20"}
{"question": "What are the names, birth dates and last names of all employees in the same department as Sarah?", "query": "SELECT T1.first_name,  T1.last_name,  T1.birth_date,  T1.department_id FROM employees AS T1 JOIN departments_employees AS T2 ON T1.employee_id  =  T2._id WHERE T2.department_id  =   \"1\""}
{"question": "Find the different cities with the average age of residents, where the average is taken over the years between 2000 and 2005", "query": "SELECT city,  avg(age) FROM city_info WHERE city  =  'New York' AND year BETWEEN 2000 AND 2005 GROUP BY city"}
{"question": "What are the names and ages of all the students who successfully tried out for the positions of striker?", "query": "SELECT T1.name,  T1.age FROM students AS T1 JOIN tryouts AS T2 ON T1.id  =  T2.student_id WHERE T2.position  =  \"striker\""}
{"question": "List the first names of students in the class", "query": "SELECT T1.first_name FROM Students AS T1 WHERE T1.id  =  '1'"}
{"question": "How many employees are there who do not have a university degree?", "query": "SELECT count(*)  FROM employee WHERE education_level  =  \"No degree\""}
{"question": "What are the names and age of all employees?", "query": "SELECT T1.name,  T1.age FROM employees AS T1 WHERE T1.id  =  (SELECT employeeid FROM employees WHERE first_name = 'John')"}
{"question": "What is the name and age of the two people who have the same first name?", "query": "SELECT T1.firstname,  T1.age FROM person AS T1 WHERE T1.firstname  =  \"John\" AND T1.age  =  \"25\""}
{"question": "What are the names, locations and ids of students who have not taken any courses in the past four years?", "query": "SELECT T1.name,  T1.location,  T1.id FROM students AS T1 WHERE T1.id NOT IN (SELECT T2.id FROM student AS T2 WHERE T2.id NOT IN (SELECT T3.id FROM course AS T3 WHERE T3.id NOT IN (SELECT T4.id FROM course AS T4 WHERE T4.id NOT IN (SELECT T5.id FROM course AS T5 WHERE T5.id NOT IN (SELECT T6.id FROM course AS T6 WHERE T6.id NOT IN (SELECT T7.id FROM course AS"}
{"question": "What are the names, id and salaries of all students?", "query": "SELECT T1.name,  T1.id,  T1.salary FROM students AS T1 WHERE T1.id  IN (SELECT T2.id FROM students AS T2 WHERE T2.id  =  T1.id)"}
{"question": "Find the names of students who have taken at least one course on database", "query": "SELECT T1.student_id,  T1.name_first,  (SELECT name_last FROM course AS T2 WHERE T2.course_id  =  T1.course_id) FROM student AS T1 WHERE T1.student_id  IN (SELECT student_id FROM course AS T2 WHERE T1.course_id  =  (SELECT course_id FROM course AS T3 WHERE T3.course_id  =  \"DB\") AND T2.course_id  <>  \"DB\")"}
{"question": "What is the first and last name of the customer that had email \"luisg@embroer", "query": "SELECT T1.first_name,  T1.last_name FROM customer AS T1 WHERE T1.email  =  \"luisg@embroer\""}
{"question": "(a novel question, about a specific table), after \"", "query": "A:"}
{"question": "What is the most common age of editors?", "query": "SELECT count(*) AS count FROM editor WHERE age  >  18"}
{"question": "What do you need to know to complete the task?", "query": "SELECT T1.column_name FROM table_name AS T1 WHERE T1.column_name  =  \"value\""}
{"question": "What is the id of the student who is in the student body with id 1119, and has a first name that is not a number, and a last", "query": "SELECT T1.id FROM Student AS T1 JOIN Student_body AS T2 ON T1.student_id  =  T2.student_id WHERE T2.id  =  1119 AND T2.first_name  NOT LIKE '%[0-9]%' AND T2.last_name  NOT LIKE '%[a-z]%'"}
{"question": "(which is the question you will get, and then you will write my question in", "query": "Examples of some or all task item:"}
{"question": "List all products and their names", "query": "SELECT T1.name FROM Catalog_Contents AS T1 JOIN Catalog_Contents AS T2 ON T1.catalog_id  =  T2.\"catalog_id\" WHERE T1.catalog_id  <>  T2.catalog_id"}
{"question": "Find the name and number of the professors who are involved with both the \"Bio\" and \"Chemistry\" departments", "query": "SELECT name,  count(*) FROM faculty WHERE department_id  =  \"Bio\" AND department_id  =  \"Chemistry\""}
{"question": "What is the average salary of the students who are not enrolled in any course?", "query": "SELECT AVG(T1.salary) FROM student AS T1 WHERE T1.enrollment_status  =  'Not enrolled'"}
{"question": "What are the minimum, maximum, and average age of students?", "query": "SELECT MIN(age) AS min_age, MAX(age) AS max_age, AVG(age) AS avg_age FROM student;"}
{"question": "What is the name and age of all senators who were elected in the year 1990?", "query": "SELECT T1.name,  T1.age FROM senators AS T1 WHERE T1.election_year  =  1990"}
{"question": "What is the average support rate for the candidates who are supporting one candidate?", "query": "SELECT AVG(support_rate) FROM (SELECT support_rate FROM candidate_support WHERE candidate_id  =  1) AS T1"}
{"question": "Find the average number of pages in each book", "query": "SELECT AVG(pages) FROM books"}
{"question": "What is the name and address of all the students in the class?", "query": "SELECT T1.student_id,  T1.first_name,  T1.last_name,  T1.address_line1,  T1.address_zip,  T1.address_city,  T1.address_state,  T1.address_country,  T1.phone_number,  T1.email,  T1.gender,  T1.age,  T1.birthday,  T1.major,  T1.graduation_year,  T1.gradepoint,  T1.major_area"}
{"question": "Find all customers that are the youngest", "query": "SELECT T1.customer_id,  T1.first_name,  'Youngest' AS age_group FROM customers AS T1 WHERE T1.age  =  (SELECT MIN(T2.age) FROM customers AS T2)"}
{"question": "Find the names of all documents that are not business cards", "query": "SELECT T1.document_name FROM document AS T1 WHERE T1.document_type  =  'Business Card' AND T1.document_name  NOT IN (SELECT T2.document_name FROM document AS t2 WHERE t2.document_type  =  \"Business Card\")"}
{"question": "What is the total number of hours of sleep for our players?", "query": "SELECT SUM(hours_sleep) FROM player"}
{"question": "What is the id and name of the company with the id of 16?", "query": "SELECT name FROM company WHERE id  =  16"}
{"question": "What is the name and first name of the person who signed the agreement in the beginning of the year?", "query": "SELECT T1.person_id,  T1.name_first,  first_name FROM person AS T1 JOIN agreement AS T2 ON T1.person_id  =  T2.person_id WHERE T2.date_signed  =  '01/01/2009'"}
{"question": "List out all the customers who are between 18 and 20 years old", "query": "SELECT T1.customer_id,  T1.customer_first_name,  T1.customer_last_name,  T1.gender,  T1.age,  T1.address_id,  T1.city,  T1.state,  T1.zip_code,  T1.country,  T1.phone,  T1.email,  T1.credit_limit,  T1.credit_card_id,  T1.credit_status,  T1.credit_last_transaction_date,  T1."}
{"question": "What are the names and phone numbers of all customers in the state of California?", "query": "SELECT customer_name, customer_phone_number FROM customers WHERE state_code = 'CA'"}
{"question": "Find the id of the customer who is the youngest", "query": "SELECT id FROM customer WHERE age  =  (SELECT min(age) FROM customer)"}
{"question": "What are the total number of students, and what are the names of each student, their home state, and major?", "query": "SELECT T1.student_id,  T2.name,  T3.state_province_cities,  T4.major_code FROM students AS T1 JOIN student_info AS T2 ON T1.id  = T2.student_id JOIN student_address_history AS T3 ON T1.student_id = T3.student_id JOIN student_city_history AS T4 ON T1.student_id   = T4.student_id"}
{"question": "What is the first and last name of the employee named \"Kathleen\"?", "query": "SELECT T1.first_name,  T1.last_name FROM employee AS T1 WHERE T1.first_name  =  \"Kathleen\""}
{"question": "How many students have the same first names, ordered by last names", "query": "SELECT T1.last_name,  T1.first_name FROM students AS T1 JOIN students AS T2 ON T1.last_name  =  T2.first_name WHERE T1.first_name  =  'John' AND T2.first_name  =  \"John\""}
{"question": "Find the city of residence of the employees whose manager is Chris Jackson", "query": "SELECT T1.city FROM employee AS T1 JOIN manager AS T2 ON T1.manager_id  =  T2.employee_id WHERE T2.manager_name  =  \"Chris Jackson\""}
{"question": "What is the customer first, last names and id with average age of customers?", "query": "SELECT T1.first_name,  T1.last_name,  T1.id,  AVG(age) FROM customer AS T1 GROUP BY T1.first_name, T1.last_name, T1.id"}
{"question": "Find the name of the city where the first game was played, and the number of games played there", "query": "SELECT city_name,  count(*)  FROM games WHERE city_name  =  \"New York\""}
{"question": "List all the students who are not enrolled in the computer science course", "query": "SELECT T1.student_id FROM student AS T1 WHERE T1.course_id  =  'CS' AND T1.student_id  =  '0'"}
{"question": "Find all the students who are not from San Francisco University", "query": "SELECT T1.stu_id,  T1.stu_name,  T1.stu-department_id,  T1.year,  T1.major,  T1.gender,  T1.race,  T1.country,  T1.state,  T1.city,  T1.email,  T1.phone,  T1.major_code,  T1.major_name,  T1.major_description,  T1.major_id,  T1.major_type,  T1."}
{"question": "Find the number of students who reside in Texas", "query": "SELECT count(*)  FROM students WHERE state  =  'Texas'"}
{"question": "Give me a list that counts the number of students in each course", "query": "SELECT T1.course_code,  COUNT(*) FROM course AS T1 GROUP BY T1.course_code"}
{"question": "What are the id and market share of the first smartphone?", "query": "SELECT id,  market_share FROM smartphone WHERE market_share  >  0.1"}
{"question": "Who are the customers in the database?", "query": "SELECT T1.Customer_id FROM Customers AS T1 WHERE T1.Customer_id  IN (SELECT T2.Customer_id FROM Customers AS  T2 WHERE T2.Customer_id  IN ( SELECT T3.Customer_id FROM Customers AS   T3 WHERE T3.Customer_id  IN (... ) ) )"}
{"question": "How many customers have an account? (same as above)", "query": "SELECT count(*) AS total FROM customers"}
{"question": "(a novel question, about a question about a different table), after \"Generate:\"", "query": "(the sql query to answer the query), after \""}
{"question": "What are the names, emails, and phone numbers of all customers?", "query": "SELECT T1.id,  T1.name_first,  (T1.name_last  + '' + T1.email_address) AS name,  T1.phone_number FROM customer AS T1 GROUP BY T1.id ORDER BY T1.name_first ASC"}
{"question": "What is the total number of movies which have \"Bollywood\" in their titles?", "query": "SELECT COUNT(*) FROM Movies WHERE TITLE  LIKE  \"Bollywood\";"}
{"question": "What is the full name of the student who has the highest GPA?", "query": "SELECT T1.name FROM students AS T1 JOIN grades AS T2 ON T1.id  =  T2.id WHERE T2.grade  =  \"A\" ORDER BY T1.name"}
{"question": "What is the number one appelation with the number of grapes?", "query": "SELECT T1.appelation,  T1.number_of_grapes FROM grapes AS T1 WHERE T1.appelation  =  \"1\""}
{"question": "What are the start dates and end dates of the apartment bookings made by females (gender code \"Female\")? (novel question)", "query": "SELECT T1.start_date,  T1.end_date FROM Bookings AS T1 WHERE T1.gender  =  \"Female\""}
{"question": "What is the average number of customers per branch?", "query": "SELECT count(*) AS count FROM customer_branches WHERE branch_name  =  \"A\""}
{"question": "How many students are there in the \"Luxembourg\" country?", "query": "SELECT T1.id,  T1.first_name,  t1.last_name,  T1.gender,  T1.birth_date,  T1.nationality,  T1.address_type_code,  T1.address_line_1,  T1.address_city,  T1.address_state,  T1.address_zip,  T1.address_country,  T1.email,  T1.phone,  T1.fax,  T1.mobile,  T1.fax_number,"}
{"question": "How many patients are taking the drug \"Procrastin-X\"?", "query": "SELECT T1.patient FROM Prescriptions AS T1 JOIN Medication AS t2 ON T1.Medication = t2.Code WHERE T2.Name = \"Procrastin-X\""}
{"question": "What are the names, in order, of the countries that have no capital cities?", "query": "SELECT T1.country_name,  T2.country_id FROM country AS T1 JOIN country_info AS T2 ON T1.country_id  =  T2.country_id WHERE T2.country_name  IS NULL"}
{"question": "What is the name for the city with id 940?", "query": "SELECT name FROM city WHERE city_id  =  940"}
{"question": "What is the first name and last name of the person with the name 'Mario'?", "query": "SELECT T1.person_id,  T1.name_first,  (T1.name_last ||'' || T1.first_name) AS name FROM person AS T1 WHERE T1.name  =  'Mario'"}
{"question": "Find the first and third names of all customers who have the name \"David\"", "query": "SELECT T1.name FROM Customer AS T1 WHERE T1.name  =  \"David\""}
{"question": "What are the average, maximum, and minimum order quantity of all invoices?", "query": "SELECT AVG(order_quantity), MAX(order_quantity), MIN(order_quantity) FROM invoices"}
{"question": "How many of the following are true?", "query": "SELECT count(*) AS \"count\" FROM table WHERE column1 = \"value1\" AND column2 = \"value2\" AND column3 = \"value3\""}
{"question": "Find the number of employees with gender code \"female\"", "query": "SELECT count(*)  FROM employees WHERE gender  =  'female'"}
{"question": "Give the names of a number of employees who have a degree in Computer Science", "query": "SELECT count(*) AS count FROM employees WHERE degree  =  \"Computer Science\""}
{"question": "What are the names in your phone book?", "query": "SELECT T1.full_name FROM people AS T1 JOIN phone_book AS T2 ON T1.person_id  =  T2.person_id WHERE T2.name  =  \"John Smith\""}
{"question": "What is the first name of the employee who has the most credit cards?", "query": "SELECT T1.firstname FROM employee AS T1 JOIN credit_card AS T2 ON T1.id  =  T2.employee_id WHERE T2.num_cards  =  \"1\""}
{"question": "What are the names in a directory sorted by age?", "query": "SELECT T1.name FROM directory AS T1 ORDER BY T1.age"}
{"question": "What is the title of the book with the author's last name \"Abraham\" and the title \"The Adventures of Huckleberry Finn\"?", "query": "SELECT name FROM book WHERE author_last_name  =  \"Abraham\" AND title  =  \"The Adventures of Huckleberry Finn\""}
{"question": "What is the name and id of the student who has a major in biotechnology?", "query": "SELECT T1.student_id,  T1.name_first,  'biotechnology' AS major FROM student AS T1 WHERE T1.major  =  'biotechnology'"}
{"question": "Find the name of products with the highest number of items", "query": "SELECT T1.name FROM product AS T1 JOIN product_item_count AS T2 ON T1.product_id  =  T2.product_id WHERE T2.item_count  =  max(T1.item_count)"}
{"question": "What is the name, title, and salary of each teacher in the Physics department?", "query": "SELECT T1.name,  T1.title,  T1.salary FROM teachers AS T1"}
{"question": "(a novel question, about a single table), after \"", "query": "Examples of some or all task item:"}
{"question": "How many people have ordered a coffee with a shot of espresso?", "query": "SELECT count(*)  FROM order_item WHERE order_item_type  =  \"Coffee\" AND order_item_name  =  \"Coffee with a shot of espresso\""}
{"question": "Show the number of students with high school student IDs and not enrolled in college", "query": "SELECT T1.student_id,  T1.student_name,  T1.student_gender,  T1.student_age,  T1.student_high_school_id,  T1.is_enrolled_in_college  FROM students AS T1 WHERE T1.student_id  IN (SELECT student_id FROM students WHERE student_high_school_id  =  \"null\" OR student_high_school_id IS NULL)"}
{"question": "List the names of the 5 employees who have the highest total amount of commissions", "query": "SELECT T1.firstname,  T1.lastname,  T1.commission_total FROM employee AS T1 JOIN commission AS T2 ON T1.id  =  T2.employee_id GROUP BY T1.firstname,  'T1.commission_total' DESC LIMIT 5"}
{"question": "What was the name of the restaurant with the most number of customers in May 2012?", "query": "SELECT T1.name FROM restaurant AS T1 JOIN customers AS T2 ON T1.restaurant_id  =  T2.\"restaurant_id\" WHERE T2.date  =  '2012-05-01' AND T2.amount  >  0"}
{"question": "What are the names, genders and ages of all cats?", "query": "SELECT T1.name,  T1.gender,  T1.age FROM cat AS T1"}
{"question": "What is the id of the movie that has been reviewed most?", "query": "SELECT T1.id FROM movie AS T1 WHERE T1.review_count  =  (SELECT MAX(T2.review_count) FROM movie AS T2);"}
{"question": "What are the names and ids of the customers who have a credit score of 700 or more?", "query": "SELECT T1.name,  T1.\"id\" FROM customer AS T1 WHERE T1.credit_score  >=  700"}
{"question": "Show the names of all the employees who have a spouse with the same surname as them", "query": "SELECT T1.name,  T1.surname FROM employees AS T1 JOIN spouses AS T2 ON T1.emp_id  =  T2.\"emp_id\" WHERE T1.surname  =  T2.surname"}
{"question": "What is the average number of hours per day for each employee who has the job title \"Accountant\"?", "query": "SELECT T1.hours_per_day FROM employee AS T1 JOIN job AS T2 ON T1.job_id  =  T2.job_id WHERE T2.job_title  =  \"Accountant\""}
{"question": "What is the age of the customer with the oldest name?", "query": "SELECT T1.age FROM Customer AS T1 WHERE T1.name  =   \"John Williams\""}
{"question": "What are the customer ids and names that have not made purchases in the last 15 months?", "query": "SELECT customer_id,  customer_name FROM customers WHERE last_purchase_date  <  \"2017-01-01\""}
{"question": "What are the names, start and end dates of all the concerts that took place in the United States?", "query": "SELECT T1.name,  T1.start_date,  T1.\"end_date\" FROM concerts AS T1 JOIN concerts_dates AS T2 ON T1.concert_id  =  T2.\"concert_id\" WHERE T2.country_code  =  \"USA\""}
{"question": "What is the maximum number of employees in the department with the highest total?", "query": "SELECT T1.dept_name,  T1.total_emp FROM department AS T1 JOIN employee AS T2 ON T1.dept_id  =  T2.dept_id WHERE T1.total_emp  >  T2.total_emp"}
{"question": "Find the birth date and birth place of all people with first name John", "query": "SELECT T1.birth_date,  T1.birth_place FROM person AS T1 WHERE T1.first_name  =  'John'"}
{"question": "What are the names (as well as ids) of all professors?", "query": "SELECT T1.name FROM faculty AS T1 JOIN faculty_has_student AS T2 ON T1.fid  =  T2.fid JOIN student AS T3 ON T2.stu_id  =  T3.\"student_id\""}
{"question": "List all the people who have the same name as me, and their first names", "query": "SELECT T1.person_id,  T1.name_first,  count(*) FROM person AS T1 JOIN person_name_first AS T2 ON T1.person_id  =  T2.person_id GROUP BY T1.person_id ORDER BY count(*) desc"}
{"question": "What are all the states in the US?", "query": "SELECT T1.state_name FROM state AS T1;"}
{"question": "What are the ages, in years, of all students?", "query": "SELECT T1.age FROM students AS T1"}
{"question": "What is the name and phone number of all customers whose average transaction amount is more than 5000?", "query": "SELECT T1.customer_name,  T2.customer_phone FROM customers AS T1 JOIN transactions AS T2 ON T1.id  = T2.customer_id WHERE (T2.amount  >  5000)"}
{"question": "(a novel question, about a specific table): (i) for each row, print the id, name, age, address, city, state, zip", "query": "SELECT T1.id,  T1.name,  T1.age,  T1.address,  T1.city,  T1.state,  T1.zip FROM customer AS T1"}
{"question": "What is the number and type of products with a price greater than 1100 (in USD)?", "query": "SELECT T1.product_id,  T1.product_name,  T1.product_price,  T1.product_type,  T1.product_quantity,  T1.product_unit_price,  T1.price,  T1.productid,  T1.producttype,  T1.producttype_id,  T1.price_type,  T1.price_unit_price,  T2.product_id,  T2.product_name,  T2.product_price,  T2.type,"}
{"question": "What are the customers' last names?", "query": "SELECT T1.last_name FROM customers AS T1"}
{"question": "What are the average, maximum, and minimum age for all students under 20?", "query": "SELECT T1.Age FROM student AS T1 JOIN student_info AS T2 ON T1.Student_ID  =  T2._id WHERE T2.Age  >  0 AND T2.Age  <  20;"}
{"question": "(a novel question, about a Different table)", "query": "(the sql query to answer the query)"}
{"question": "What is the average price of all the wines from the vineyard \"Beringer\" in the year 2000?", "query": "SELECT AVG(price) FROM wine WHERE vineyard = \"Beringer\" AND year = 2000"}
{"question": "(a novel question, about a table) and \"", "query": "(the sql query to answer the previous question)"}
{"question": "What is the numberof transactions for each account?", "query": "SELECT T1.account_id,  T2.count(*) FROM Accounts AS A1 JOIN Transactions AS T2 ON A1.account_id  =  T2.\"account_id\" GROUP BY T1.account_id"}
{"question": "What is the name and number of all the people with the last name \"Wright\"?", "query": "SELECT T1.last_name,  T1.id FROM people AS T1 WHERE T1.last_name  =  \"Wright\""}
{"question": "What are the names and the total hours of all projects, in the order of how many people they involve?", "query": "SELECT T1.project_name,  T2.hours FROM project AS T1 JOIN project_staff AS T2 ON T1.project_id  =  T2.project_id ORDER BY T1.project_name, T2.hours"}
{"question": "\"Find the names of the top 10 airlines", "query": "SELECT name FROM airline ORDER BY count(*) DESC"}
{"question": "Find the name of the customer who has most products", "query": "SELECT T1.customer_first_name, T1.customer_last_name, T1.customer.id FROM customers AS T1 JOIN products AS T2 ON T1.cust_id  =  T2.cust_id WHERE T2.product_id  =  (SELECT T3.product_id FROM products AS T3 WHERE T3.name  =  \"Coffee\")"}
{"question": "Find the name of all employees whose age is greater than 40", "query": "SELECT T1.firstname,  T1.lastname,  T1.age FROM employee AS T1 WHERE T1.age  >  40"}
{"question": "Show me a list of all the people who have more than one bank balance", "query": "SELECT T1.bank_balance FROM bank_account AS T1 WHERE T1.id  =  (SELECT T2.id FROM bank_account AS T2 WHERE T2.id  =  (SELECT MIN(T3.id) FROM bank_account AS T3))"}
{"question": "What are the names, locations and genders of all musicians who live in Austin?", "query": "SELECT T1.first_name,  T1.last_name,  T1.gender,  T1.location FROM musicians AS T1 WHERE T1.location  =  'Austin'"}
{"question": "What are the names, id, and location of the people who are not in the table with a name starting with \"A\"?", "query": "SELECT name,  id,  location FROM person WHERE name NOT LIKE \"A\""}
{"question": "Find the name and address of the employee with the most name", "query": "SELECT T1.name,  T1.address FROM employees AS T1 JOIN customers_addresses AS T2 ON T1.employee_id  =  T2.[address_id] WHERE T2.address_type_code  =  \"Home\""}
{"question": "What are the names, locations, and ages of all the people who were born in July?", "query": "SELECT T1.Name,  T1.Location,  T1.Age FROM Person AS T1 WHERE T1.Birthday  =  '07/01/2000'"}
{"question": "Find the name, city, state and age of the most recent basketball player who is from Texas?", "query": "SELECT T1.name,  T1.city,  T1.state,  T1.\"age\" FROM player AS T1 WHERE T1.city  =  \"Houston\" AND T1.state  =  \"Texas\" AND T1.\"age\"  =  \"25\""}
{"question": "find the name and location for all the buildings that have an average of at least 3000 hours of usage per day", "query": "SELECT T1.name,  T1.location FROM building AS T1 JOIN usage_history AS T2 ON T1.building_id  =  T2.building_id WHERE T2.usage_count  >  3000"}
{"question": "How many students are there in each location?", "query": "SELECT T1.location_name,  T1.student_count  FROM students AS T1 JOIN location AS T2 ON T1.location_id  =  T2"}
{"question": "What are the first 3 names of authors of the first paper with the word \"Functional\" in it?", "query": "SELECT T1.name FROM authors AS T1 JOIN papers AS T2 ON T1.author_id  =  T2.author_id WHERE T2.title  =  \"Functional Programming\" ORDER BY T1.name ASC LIMIT 3"}
{"question": "List the names of the customers for whom the average age is less than 35", "query": "SELECT customer_name FROM customers WHERE age  <  35"}
{"question": "What are the names, job titles, and salary of employees with at least two weeks of vacation per year?", "query": "SELECT T1.name,  \"T1.job_title\",  T1.salary FROM employee AS T1 WHERE T1.vacation_days  >  0;"}
{"question": "What are the names, ranks and ranks of the employees who work in the office of the sales manager?", "query": "SELECT T1.name,  T1.rank,  T1.rank_name FROM employees AS T1 JOIN employee_ranks AS T2 ON T1.rank  =  T2.rank_id JOIN employee_ranks AS T3 ON T1.rank_id  =  T3.rank_id WHERE T1.name  =   \"John Wen\""}
{"question": "What is the average age of all the parents?", "query": "SELECT AVG(age) FROM parent"}
{"question": "Return the number of questions that have been asked", "query": "SELECT count(*) AS \"count\" FROM question AS T1 WHERE T1.question_type  =  \"question\";"}
{"question": "Find the names of all cities with population between 20 000 and 50 000", "query": "SELECT city FROM cities WHERE population  >  20 AND population  <  50"}
{"question": "What is the name, age, and address of each student who has a father/mother with the same name as him?", "query": "SELECT T1.name,  T1.age,  T1.address FROM student AS T1 JOIN student AS T3 ON T1.parent_id  =  T3.id WHERE T3.name  = 'T1.name'"}
{"question": "What are the name and surname of all employees having a nationality of Italy?", "query": "SELECT T1.first_name,  T1.last_name FROM Employees AS T1 JOIN Nationality AS T2 ON T1.employee_id  =  T2.\"id\" WHERE T2.nationality  =  'Italy'"}
{"question": "What are the names and the ages of the students of which college, and in which class do they reside?", "query": "SELECT T1.student_name,  T1.student_age FROM student AS T1 WHERE T1.college_name  =  \"College\" AND T1.class_name  =  \"Class\""}
{"question": "What is the number and type of the students who got the highest score on the first test?", "query": "SELECT T1.id,  T1.score FROM students AS T1 JOIN tests AS T2 ON T1.student_id  =  T2.student_id WHERE T2.test_id  =  1 AND T2.score  =  (SELECT MAX(T3.score) FROM tests AS T3 WHERE T3.test_id  =  T2  AND T3.student_id  =  1)"}
{"question": "What is the name of the first city built in the United States of America?", "query": "SELECT T1.city FROM city AS T1 WHERE T1.name  =  \"New York\""}
{"question": "Find the names of students who have an \"a\" as last name", "query": "SELECT T1.first_name,  T1.last_name FROM students AS T1 WHERE T1.last_name  =  'a'"}
{"question": "What are the first and last names of students who are enrolled in the class with id 656, and whose name is K?", "query": "SELECT T1.name FROM student AS T1 JOIN class AS T2 ON T1.class_id  =  T2._id WHERE T2.id  =  656 AND T1.name  =  'K'"}
{"question": "What are the names for tracks without at least one race in class 'GT'", "query": "SELECT DISTINCT track_name FROM race WHERE race_class  =  'GT' AND track_type  =  'Track'"}
{"question": "Find all the names of students who have not been in a class with more than 10 students", "query": "SELECT T1.name FROM student AS T1 JOIN class_student_relations AS T2 ON T1.student_id  =  T2.[student_id] WHERE T2.class_id  =  ( SELECT class_id FROM class_student_relations WHERE class_id  =  ( SELECT MAX(class_id) FROM class_student_relations GROUP BY class_id ) ) AND T2.num_students  >  10"}
{"question": "What are the names and phone numbers of all customers who have not placed orders in the past three months?", "query": "SELECT customer_id,  customer_first_name,  customer_last_name,  T1.phone_number FROM customers AS T1 JOIN orders AS T2 ON T1.id  =  T2.cust_id WHERE T2.date_placed  <  '2016-01-01' AND T2.date_placed  >  '2015-12-31'"}
{"question": "Find the number of races", "query": "SELECT count(*) from races"}
{"question": "What are the total number of books in the library?", "query": "SELECT COUNT(*) FROM books"}
{"question": "Show the names of products with the highest revenue", "query": "SELECT T2.Product_Name,  T2.Revenue FROM (SELECT T1.Product_Name,  T1.Revenue FROM (SELECT T2.Product_Name, T2.Revenue FROM (SELECT  T3.Product_Name,  T3.Revenue FROM (SELECT T4.Product_Name, T4.Revenue FROM (SELECT T5.Product_Name, T5.Revenue FROM (SELECT T6.Product_Name, T6.Revenue FROM (SELECT T7.Product_Name, T7.Revenue FROM (SELECT T8."}
{"question": "What are the names, ids, and prices of all products with a cost of at least 0", "query": "SELECT T1.name,  T1.id,  T1.price FROM products AS T1 WHERE T1.price  >  0"}
{"question": "What is the average weight of people over 50?", "query": "SELECT AVG(weight) FROM people WHERE age  >  50"}
{"question": "(a question about a sql table) Find the name of the track with the most number of races", "query": "SELECT T1.name FROM race_track AS T1 JOIN race_track_race AS T2 ON T1.race_track_id  =  T2.race_track_id WHERE T2.race_id  =  (SELECT T3.race_id FROM race_track_race AS T3 WHERE T3.race_id  =  T2)"}
{"question": "How many times has the band \"Bluegrass Superstars\" played in the city of Paris?", "query": "SELECT COUNT(*) FROM concerts WHERE city_name = \"Paris\" AND band_name = \"Bluegrass Superstars\""}
{"question": "What are the names with the highest average ratings of the movies?", "query": "SELECT T1.movie_id,  T1.name,  T1.[rating] FROM movie AS T1 GROUP BY T1.movie_id ORDER BY AVG(T1.rating) DESC LIMIT 1"}
{"question": "List the names and addresses of all students in the class who have a sibling in the class", "query": "SELECT T1.student_name,  T1.student_address FROM student AS T1 JOIN student_sibling AS T2 ON T1.student_id  =  T2.student_id WHERE T2.student_id  =  NULL;"}
{"question": "Show the total number of students who are in both a course and the department of Biology", "query": "SELECT COUNT(*) FROM students WHERE student_id IN (SELECT student_id FROM course_enrolment WHERE course_id  =  'BIOL') AND student_id IN (SELECT studentid FROM department WHERE dept_id  =  'BIOLOGY')"}
{"question": "What is the name, birth year, and last name of a person who lived in a house with a population of 6?", "query": "SELECT T1.name,  T1.birth_year,  T1.last_Name FROM person AS T1 JOIN house AS T2 ON T1.house_id  =  T2.id WHERE T2.population  =  6"}
{"question": "(a novel question, about a maptable), after \"", "query": "Examples of some or all task item:"}
{"question": "What are the names, age, and grades of the students from the two schools?", "query": "SELECT T1.student_name,  T1.age,  T1.grade FROM students AS T1 JOIN school AS T2 ON T1.student_id  =  T2._id WHERE T2.school_name  =  \"School A\" OR T2.school_name  ==  \"School B\""}
{"question": "How many students are there in the school?", "query": "SELECT COUNT(*) FROM students"}
{"question": "What are the names, titles, and salaries of all employees who are in the \"Sales\" industry?", "query": "SELECT T1.firstname,  T1.lastname,  T1.title,  T1.salary FROM employee AS T1 JOIN industry AS T2 ON T1.job_id  =  T2.job_id WHERE T2.industry  =  \"Sales\""}
{"question": "What are the names, average grade, and average test scores of the students in the classes of Math 1B and Math 2B?", "query": "SELECT T1.name,  T1.average_grade,  T1.average_test_score FROM student AS T1 WHERE T1.class_id  =  'Math 1B' OR T1.class_id  ='Math 2B'"}
{"question": "Find the names of all students who are in the position of strikers and got a yes tryout decision, with the following additional information:", "query": "SELECT T1.name FROM student AS T1 JOIN tryout AS T2 ON T1.student_id  =  T2.student_id WHERE T2.position_code  =  \"striker\" AND T2.decision_code  =  \"yes\""}
{"question": "What are the average values of all students who have an age between 30 and 40?", "query": "SELECT AVG(age) FROM student WHERE age  >=  30 AND age  <=  40"}
{"question": "What is the number of students who live in the city", "query": "SELECT COUNT(*) FROM students WHERE city = 'New York'"}
{"question": "(a novel question, about a table) What is the name and open year of the branch with most number of customers registered in 2016?", "query": "SELECT branch_name,  COUNT(*) FROM branch WHERE year(date_of_birth) = 2016 GROUP BY branch_name ORDER BY count(*) DESC"}
{"question": "Find the names of individuals who have the most number of publications", "query": "SELECT T1.name FROM authors AS T1 JOIN publications AS T2 ON T1.id  =  T2.author_id ORDER BY T2.count(*) DESC"}
{"question": "\"What are the register ids of electoral registr?", "query": "SELECT T1.register_id FROM register AS T1 WHERE T1.name  = \"Election\""}
{"question": "Show the names of the customers who do not have any products purchased in the past 3 months", "query": "SELECT T1.customer_first_name, T1.customer_last_name, T1.customerid, T1.product_id, T1.quantity, T1.price, T1.date_purchased, T1.date_shipped, T1.date_received, T1.date_returned, T1.status, T1.status_message, T1.date_created, T1.date_modified, T1.date_created_by, T1.date_modified_by, T1.datecreated_by_id,"}
{"question": "What are the locations of all schools whose latitude is greater than the average latitude?", "query": "SELECT T1.latitude,  T1.longitude FROM school_location AS T1 JOIN school_school AS T2 ON T1.school_id  =  T2.school_id WHERE T1.latitude  >  (SELECT AVG(T3.latitude) FROM school_location AS T3);"}
{"question": "Show the names of the countries that have at least two players", "query": "SELECT T1.country_name,  T2.player_name FROM player AS T1 JOIN country AS T2 ON T1.country_id  =  T2.country_id WHERE T1.player_id  =  T2 .player_id"}
{"question": "What are the number of students in each course?", "query": "SELECT count(*) AS \"count\" FROM student AS T1 JOIN course AS T2 ON T1.student_id  =  T2.\"student_id\""}
{"question": "What is the age of the youngest student?", "query": "SELECT T1.age FROM student AS T1 WHERE T1.age  =  \"The youngest student is\""}
{"question": "find the names of the people who have the same last name as me", "query": "SELECT T1.first_name,  T1.last_name,  T1.id,  T1.\"id\" FROM student AS T1 JOIN student_friends AS T2 ON T1.student_id  =  T2.\"student_id\" WHERE T2.friend_id  =  \"me\""}
{"question": "What is the average age of the employees who have the last name \"Smith\"?", "query": "SELECT AVG(age) FROM employees WHERE last_name  =  'Smith'"}
{"question": "What are the names and addresses of the students who have the highest scores in both English and Mathematics?", "query": "SELECT T1.name,  T1.address FROM students AS T1 JOIN scores AS T2 ON T1.id  =  T2.student_id WHERE T2.subject  =  \"English\" AND T2.subject  =  'Mathematics' ORDER BY T2.score DESC"}
{"question": "How many students are there in the department of economics?", "query": "SELECT count(*)  FROM student_record"}
{"question": "What is the second and third name of the customer who has the most purchases?", "query": "SELECT customer_name,  customer_id,  customer_address,  customer_city,  customer_state,  customer_zip,  customer_phone,  customer_email,  customer_credit_card,  customer_credit_card_type,  customer_credit_card2_type,  customer_creditcard_balance,  customer_credit_card3_type,  customer_creditcards,  customer_creditcard3_balance,  customer_creditcard3,  customer_creditcard3_type,  customercreditcard3_balance,  product_name,"}
{"question": "Find the name of all albums released in 2004", "query": "SELECT T1.album_name FROM albums AS T1 JOIN artists_albums AS T2 ON T1.album_id  =  T2.album_id WHERE T2.artist_id  =  \"1\" AND T2.year  =  2004"}
{"question": "What are the names, roles and salaries of the employees?", "query": "SELECT T1.name,  T1.role,  T1.salary FROM employee AS T1"}
{"question": "What are the ages of students who live in the city of \"NYC\" and have a secretary vote in the spring election cycle?", "query": "SELECT T1.age,  T2.city_name FROM student AS T1 JOIN city AS T2 ON T1.city_id  =  T2._id WHERE T1.city_name  =  \"NYC\" AND T1.year  =  \"2008\" AND T1.voter_id  =  \"1\""}
{"question": "How much are the costs for the course with id 16?", "query": "SELECT cost FROM course WHERE course_id = 16"}
{"question": "(a novel question, about a specific topic), after \"", "query": "(the sql query to answer the query), after \""}
{"question": "What is the name of the director of the movie with the highest grossing, as well as the name of the film with the lowest grossing?", "query": "SELECT T1.director_name,  T1.movie_name,  T1.gross_amount,  T1.grossing_year,  T1.grossed_amount,  T1.earned_amount,  T1.released_year,  T1.released_amount,  T1.budget_amount,  T1.box_office_amount,  T1.critics_rating,  T1.audience_rating,  T1.rating_imdb,  T1.rating_metacritic,  T"}
{"question": "What are the names in the list of students in the database?", "query": "SELECT T1.name FROM students AS T1"}
{"question": "Find the number of hospitals that each city has", "query": "SELECT city_code,  COUNT(*) FROM hospitals GROUP BY city_code"}
{"question": "What are the average number of minutes of sleep for students with a score of 9?", "query": "SELECT AVG(T1.minutes_of_sleep) FROM Student_Score AS T1 WHERE T1.score  =  9"}
{"question": "What are the names, hometowns, and birthdays of all the students with the name \"John\" who are younger than 25", "query": "SELECT name,  hometown,  birthday FROM students WHERE name  =  \"John\" AND age  <  25"}
{"question": "Find the names of all students with the first name of \"James\"", "query": "SELECT T1.name FROM students AS T1 WHERE T1.first_name  =  \"James\""}
{"question": "Find the id of the artist \"Kristina Kincaid\" who has recorded \"A Moment of Clarity\"", "query": "SELECT T1.artist_id FROM artist AS T1 JOIN album AS T2 ON T1.artist_id  =  T2.[artist_id] WHERE T2.name  = 'A Moment of Clarity'"}
{"question": "How many students were there in the class of 1997?", "query": "SELECT count(*) AS \"count\" FROM student AS T1 WHERE T1.year  =  1997"}
{"question": "Find the number of employees who are not in the marketing department", "query": "SELECT count(*)  FROM employees WHERE department_id  =  \"null\""}
{"question": "List the number of students who are enrolled in courses", "query": "SELECT COUNT(*) FROM student"}
{"question": "What is the name of the album that contains the song \"Busted\"", "query": "SELECT T1.name FROM album AS T1 JOIN song AS T2 ON T1.album_id  =  T2._id WHERE T2.name  =  \"Busted\""}
{"question": "What is the sum of sales for all products in the store named \"Zara\"", "query": "SELECT SUM(SALES) FROM STORE_PRODUCTS WHERE STORE_NAME = \"Zara\""}
{"question": "What is the first name of the customer named \"Smith\"?", "query": "SELECT FirstName FROM CUSTOMER WHERE CustomerID  =  \"Smith\""}
{"question": "What are the names and types of all the products in the warehouse?", "query": "SELECT T1.product_name,  T2.product_type FROM product_description AS T1 JOIN product_type AS T2 ON T1.product_type_id  =  T2._id"}
{"question": "Find the first time a woman has been President of the United States", "query": "SELECT name,  first_name,  last_name,  age,  birth_date,  birth_place,  birth_country,  birth_year,  birth_month,  birth_day,  birth_year_of_birth,  birth_month_of_birth,  birthday_of_birth,  birthplace_of_birth,  birthcountry_of_birth,  birthyear_of_birth,  birthtime_of_birth,  birthmonth_of_birth,  birhtday_of_birth,  birthyear"}
{"question": "What is the average unit price of horses on all farms?", "query": "SELECT AVG(price) FROM products WHERE Farm_ID  =  (SELECT Farm_ID FROM farms WHERE Farm_Name  =  \"Farm 1\")"}
{"question": "what are the product descriptions for the products of the type \"Laptop\"?", "query": "SELECT T1.product_name,  T1.product_description FROM product AS T1 WHERE T1.type  =  \"Laptop\""}
{"question": "(a novel question, about a table of a different type)", "query": "SELECT name FROM track"}
{"question": "What is the name, age, and gender of the actors in the movie \"The Shawshank Redemption\"?", "query": "SELECT T1.actor_name,  T1.actor_age,  T1.actor_gender FROM actor AS T1 WHERE T1.actor_name  =  \"Tim Robbins\" AND T1.actor_age  =  \"50\" AND T1.actor_gender  =  \"male\""}
{"question": "What is the average weight of all the albums?", "query": "SELECT AVG(weight) FROM album;"}
{"question": "What are the first ten names of students who were in the class of 2010 and lived in Boston, NY or Chicago?", "query": "SELECT T1.name FROM student AS T1 JOIN class AS T2 ON T1.student_id  =  T2.id WHERE T2.city  =  \"Boston\" OR T2.city  =  'NY' OR T2.city  = 'Chicago' ORDER BY T1.name  ASC LIMIT 10"}
{"question": "(Find the names of all instructors in computer", "query": "SELECT T2.fname,  T2.lname FROM Faculty AS T1 JOIN faculty_info AS T2 ON T1.Faculty_ID  =  T2._id WHERE T1.Rank  =  \"Instructor\" ORDER BY T2.fname ASC"}
{"question": "What is the name for the first name of the customer that has the most orders?", "query": "SELECT T1.customer_first_name FROM customers AS T1 WHERE T1.orders  =  (SELECT T2.customer_first_number FROM orders AS T2 WHERE T2.customer_id  =  \"T1.customer_id\")"}
{"question": "What are the dates and times of the concerts with the largest number of spectators?", "query": "SELECT T1.date,  T1.time FROM Concerts AS T1 JOIN Attendance AS T2 ON T1.concert_id  =  T2.concert_id WHERE T2.count  >  1000"}
{"question": "What does the record look like?", "query": "SELECT * FROM table"}
{"question": "Show all students in the class", "query": "SELECT T1.student_name,  T1.student_id FROM student AS T1 JOIN class AS T2 ON T1.student_id  =  T2.student_id"}
{"question": "How many students does each college have?", "query": "SELECT T1.student_id,  T1.college_id FROM student AS T1 JOIN college AS T2 ON T1.college_id  =  T2.college_id GROUP BY T1.student_id, T1.college_id"}
{"question": "How many distinct customers who visited in the last year are there?", "query": "SELECT DISTINCT customer_id FROM customer_visits WHERE customer_id  IN ( SELECT customer_id FROM customer_visited )"}
{"question": "What are the names that have \"Luis Miguel\" or \"Luis Enrique\" as first name or last name?", "query": "SELECT name FROM people WHERE first_name  LIKE \"%Luis%\" OR last_name  LIKE \"%Miguel%\""}
{"question": "What is the average age of people who had a dog in the past 3 years?", "query": "SELECT AVG(age) FROM pet_history WHERE pet_id IN (SELECT pet_id FROM pet_history WHERE pet_name  =  \"dog\")"}
{"question": "What is the name and the number of the product that has the maximum number of items?", "query": "SELECT T1.Product_name,  T2.Count FROM Products AS T1 JOIN Products_Count AS T2 ON T1.Product_id  =  T2.Product_id WHERE T2.Count  =  (SELECT MAX(T3.Count) FROM Products_Count AS T3)"}
{"question": "What is the name and status of the new project?", "query": "SELECT name,  status FROM project"}
{"question": "How many students are there at the university?", "query": "SELECT COUNT(*) FROM Student"}
{"question": "What are the names, and names of countries, of the states that border Canada?", "query": "SELECT T1.state_name,  T1.country_name FROM state AS T1 JOIN country AS T2 ON T1.state_id  =  T2.state_id WHERE T2.country_name  =  \"Canada\""}
{"question": "What city does the employee who helps customers with postal code 70174 live in", "query": "SELECT T1.city FROM employee AS T1 JOIN postal_code AS T2 ON T1.emp_id  =  T2"}
{"question": "How many books are there in the store?", "query": "SELECT count(*)  FROM books"}
{"question": "Given \"", "query": "SELECT T1.question_id,  T1.question,  T1.answer FROM question AS T1 JOIN answers AS T2 ON T1.question_id  =  T2.question_id GROUP BY T1.question_id ORDER BY count(*)"}
{"question": "(an example of a question): What is the name of the president of the company that sells the most number of products?", "query": "SELECT T1.name FROM company AS T1 WHERE T1.num_products  =  (SELECT max(num_products) FROM company);"}
{"question": "(a question about a sql table) Find all invoice dates corresponding to students with first name Astrid and last names of Blum or Gruber", "query": "SELECT invoice_date FROM invoices WHERE first_name  =  \"Astrid\" AND last_name  =  \"Blum\" OR last_name  =  \"Gruber\""}
{"question": "Find the names of all the customers who are not from the United States of America", "query": "SELECT T1.customer_name FROM customer AS T1 WHERE T1.country  = 'United States'"}
{"question": "What are the names, ages and addresses of the customers who have a phone number ending in 099?", "query": "SELECT name,  age,  address FROM customer WHERE phone_number  =  \"099\""}
{"question": "Find the names of all employees who have a car", "query": "SELECT T1.full_name FROM employees AS T1 WHERE T1.car_id  =  (SELECT T2.id FROM employees AS T2 WHERE T2.first_name  =  \"John\" AND T2.last_name  =  \"Doe\" AND T2.car_id  =  T1.id)"}
{"question": "What are the names for all the students who have a phone number of 415-555-5555", "query": "SELECT T1.firstname,  T1.lastname,  T1.phone FROM students AS T1 JOIN phone AS T2 ON T1.id  =  T2.id WHERE T2.number  =  '415-555-5555'"}
{"question": "Find the name, id and city of the customer with the greatest amount of orders", "query": "SELECT T1.customer_id,  T1.name,  T1.city FROM customer AS T1 WHERE T1.orders  >  (SELECT T2.orders FROM customer AS T2 WHERE T2.city  =  T1.city)"}
{"question": "What are the names, locations and phone numbers of all students who were enrolled in the fall 2003 semester?", "query": "SELECT T1.student_name,  T1.student_address,  T1.student_phone FROM student AS T1 JOIN enrollment AS T2 ON T1.student_id  =  T2.student_id WHERE T2.semester_code  =  '2003'"}
{"question": "What are the names and ages of the students who did not take chemistry?", "query": "SELECT T1.student_id,  T1.name,  T1.\"age\" FROM student AS T1 WHERE NOT EXISTS (SELECT T2.student_id FROM student AS T2 WHERE T2.name  =  T1.name AND T2.age  =  T1.\"age\")"}
{"question": "What are the names for the people who are not in charge of any events?", "query": "SELECT T1.name FROM people AS T1 WHERE NOT EXISTS (SELECT T2.name FROM events AS T2 WHERE T2.person_id  =  T1.id)"}
{"question": "In what country did the US take the most refugees?", "query": "SELECT T2.country_name FROM refugees AS T1 JOIN country_info AS T2 ON T1.country_id  =  T2.country_id WHERE T2.country_name  =  \"United States\""}
{"question": "What is the average grade of students in the school \"Haverford High\"?", "query": "SELECT AVG(grade) FROM student WHERE school_id  =  \"Haverford High\""}
{"question": "what is the name of the first product in the company", "query": "SELECT T1.Product_Name FROM Products AS T1 WHERE T1.Product_ID  =  (SELECT T2.Product_ID FROM Products AS T2 WHERE T2.Name  =  \"first product\")"}
{"question": "(List the names of the customers who have a loan of more that 3000 in amount)", "query": "SELECT T1.Customer_id,  T1.Customer_name,  T1.Amount,  T1.Credit_Limit,  T1.Credit_Status,  T1.Credit_Type,  T1.Credit_Used,  T1.Credit_Balance,  T1.Credit_Due,  T1.Credit_Last_Payment,  T1.Credit_Next_Payment,  T1.Customer_Address,  T1.Customer_City,  T1.Customer_State,  T1.Customer_Zip,  T1.Customer"}
{"question": "Show the average amount for each type of transaction", "query": "SELECT T1.transaction_type,  T1.transaction_amount FROM transactions AS T1 GROUP BY T1.transaction_type"}
{"question": "What are the names, descriptions, and IDs of the products with smallest page size?", "query": "SELECT T1.product_name,  T1.description,  T1.product_id FROM product AS T1 WHERE T1.page_size  =  'Smallest'"}
{"question": "What are the names, ordered by total votes, of the videos that have been viewed more than 100 million times?", "query": "SELECT T1.video_id,  T1.video_name,  T1.video_description,  T1.video_rating,  T1.video_views,  T1.video_date,  T1.video_author,  T1.video_category,  T1.video_duration,  T1.video_length,  T1.video_file_size,  T1.video_bit_rate,  T1.video_resolution,  T1.video_format,  T1.video_codec,  T1."}
{"question": "(a question about a sql table) What are the last names of employees whose average age is under 30?", "query": "SELECT T1.last_name FROM employees AS T1 JOIN employee_age AS T2 ON T1.emp_id  =  T2._id WHERE T2.avg_age  <  30"}
{"question": "what is the name of all the bands that play rock music?", "query": "SELECT DISTINCT Bands.band_name FROM Band_Members AS Bands JOIN Band_Members AS Bands2 ON Bands.band_id  =  Bands2.band_id WHERE Bands.band_name  =  \"The Beatles\""}
{"question": "What are the names and id of all students who have scored at least one event?", "query": "SELECT T1.name,  T1._id FROM student AS T1 WHERE T1.score  >  0"}
{"question": "Find the names of employees who have not been promoted during the month of January 2007", "query": "SELECT employee_name FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM promotions WHERE month_of_promotion  =  '1')"}
{"question": "What are the names and ages of all employees from the city of Chicago?", "query": "SELECT T1.name,  T1.age FROM employee AS T1 WHERE city_id  =  \"Chicago\""}
{"question": "Find the employee names of the company who sells the most products", "query": "SELECT T1.employee_name FROM company AS T1 JOIN sales AS T2 ON T1.company_id  =  T2.company_id WHERE T2.sales  =  (SELECT MAX(sales) FROM sales)"}
{"question": "Find the country with the largest number of users", "query": "SELECT country_name,  count(*) AS \"users\" FROM users GROUP BY country_name ORDER BY users DESC LIMIT 1"}
{"question": "What is the average unit price of oil wells?", "query": "SELECT AVG(price) FROM oil_wells"}
{"question": "What is the name of the product that has the highest number of units sold over the average unit price of all products?", "query": "SELECT T1.product_name,  T1.units_sold,  T1.average_price FROM product AS T1 WHERE T1.units_sold  >  (SELECT AVG(T2.units_sold) FROM product AS T2)"}
{"question": "What are the names, colors and prices of all items in stock?", "query": "SELECT name,  color,  price FROM items"}
{"question": "List the names of cities in the United States that have the highest rate of crime in the United States", "query": "SELECT T1.city,  T1.crime FROM city AS T1 JOIN crime_rate AS T2 ON T1.city_id  =  T2._id WHERE T2.crime  >  ( SELECT max(crime) FROM crime_rate )"}
{"question": "What are the names, weights and heights of the students in the class of 2008?", "query": "SELECT name,  weight,  height FROM students WHERE year  =  2008"}
{"question": "What are the type of the track used by the biker with first name \"Ted\"?", "query": "SELECT T1.track_type FROM track AS T1 JOIN biker AS T2 ON T1.biker_id  =  T2.biker_id WHERE T2.first_name  =  \"Ted\""}
{"question": "Find the average age of students who live in \"London\"", "query": "SELECT T1.age FROM student AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id WHERE T2.city  =  \"London\""}
{"question": "which has the highest market share, and what is the lowest?", "query": "SELECT T1.name,  T2.price_range FROM product AS T1 JOIN product_category AS T2 ON T1.category_id  =  T2.category_id WHERE T1.price_range  =  T2.price_range"}
{"question": "Find the number of cities with at least five hospitals", "query": "SELECT COUNT(*) FROM city_hospital WHERE city_id  =  (SELECT city_id FROM city WHERE city_area  >  avg(city_area) )"}
{"question": "What are the total prices of all items", "query": "SELECT SUM(Amount_Paid) FROM Sales"}
{"question": "List the first names of all students who graduated in 2012", "query": "SELECT T1.first_name FROM students AS T1 JOIN graduation AS T2 ON T1.student_id  =  T2.\"student_id\" WHERE T2.graduation_year  =  2012"}
{"question": "What are the locations of the schools with the most students?", "query": "SELECT T1.city_name,  T1.state_name,  T2.school_name FROM school AS T1 JOIN school_location AS T2 ON T1.school_id  =  T2.school_id WHERE T2.student_count  >  (SELECT MAX(T3.student_count) FROM school_location AS T3)"}
{"question": "What is the name, id, and price of the product whose average price is higher than those of any other product?", "query": "SELECT T1.product_name,  T1.product_id,  T1.price FROM product AS T1 WHERE T1.price  >  (SELECT AVG(T2.price) FROM product AS T2 WHERE T2.product_id  =  T1.product_id);"}
{"question": "What are the names (first and last names) of all students with the id of \"23\"?", "query": "SELECT T1.first_name,  T1.last_name FROM student AS T1 WHERE T1.id  =  \"23\""}
{"question": "What is the maximum temperature in January of all months in the year 2009?", "query": "SELECT MAX(temperature) FROM weather WHERE month  =  'January' AND year  =  '2009'"}
{"question": "Which customer has a health policy that has been renewed this year?", "query": "SELECT T1.custid,  T1.custname,  T1.custaddress,  T1.custcity,  T1.custstate,  T1.custzip,  T1.custphone,  T1.custemail,  T1.custbirthday,  T1.custgender,  T1.custdob,  T1.custmaritalstatus,  T1.custeducation,  T1.custhobby,  T1.custreligion,  T"}
{"question": "What are the customers' names who have a policy with the policy type \"Home Insurance\"?", "query": "SELECT T1.customer_name FROM customer_policy AS T1 JOIN policy_type AS T2 ON T1.policy_type_id  =  T2.policy_type_id WHERE T2.policy_type_id  IN (1, 2) AND T1.policy_type_code  =  \"Home Insurance\""}
{"question": "How many distinct types of policies does the customer with id 9 have?", "query": "SELECT count(*) AS \"count\" FROM Customer_Policies WHERE customer_id = 9"}
{"question": "What is the name and id of the employee who has the most number of transactions?", "query": "SELECT T1.name,  T1.id FROM employees AS T1 JOIN transactions AS T2 ON T1.name  =  T2.employee_name ORDER BY T2.amount DESC LIMIT 1"}
{"question": "Find all the locations where tracks are located", "query": "SELECT T1.location_name,  T1.location_id FROM location AS T1 JOIN track_location AS T2 ON T1.location_id  =  T2.location_id WHERE T2.track_id  =  '1'"}
{"question": "What are the names, locations and products of the enzymes which has", "query": "SELECT T1.enzyme_name,  T1.location,  T1.product_name FROM enzyme AS T1 WHERE T1.enzyme_name  =  \"Alkaline Phosphatase\""}
{"question": "Give the average age of male faculty members who teach at least one course", "query": "SELECT AVG(T1.age) FROM faculty AS T1 JOIN faculty_teaching_courses AS T2 ON T1.id  =  T2.facid WHERE T2.course_id  =  \"1\""}
{"question": "What are the names, ids, and ages of the students who have a birthday this year?", "query": "SELECT T1.student_id,  T1.name,  T1.[age] FROM student AS T1 WHERE T1.birthday  =  CURDATE()"}
{"question": "Find the name of the customer who makes the first rental", "query": "SELECT T1.name FROM customer AS T1 JOIN rental AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.date  =  \"01/01/2000\""}
{"question": "(a novel question, about a table named \"questions\")", "query": "SELECT question_id,  question_text,  question_type,  question_type_code,  question_type_name,  question_type_description,  question_type_order,  question_type_is_mandatory,  question_type_isnot_mandatory,  question_id_parent,  question_id_parent_type,  question_id_parent2,  question_id_parent3,  question_id_parent4,  question_id_parent5,  question_id_parent6,  question_id_parent7,"}
{"question": "Find the average age of users who have the first name \"Tina\"", "query": "SELECT count(*) AS total,  avg(age) AS average FROM users WHERE first_name  =  \"Tina\""}
{"question": "What are the names, departments and countries of all the students?", "query": "SELECT T1.student_first_name,  T1.student_last_name,  T1.student_country,  T1.student_department FROM students AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id WHERE T2.country_code  =  \"USA\""}
{"question": "What is the name of the artist who made \"Balls to the Wall\"?", "query": "SELECT T1.artist_name FROM artist AS T1 WHERE T1.artist_name  =  \"Balls to the Wall\""}
{"question": "What are the names, addresses, and phone numbers for the customers who bought product \"food\"", "query": "SELECT T1.customer_id,  T1.first_name,  T1.last_name,  T1.address,  T1.phone_number FROM customer AS T1 WHERE T1.product_id  =  \"food\""}
{"question": "What is the name, gender and age of the student who has the highest number of friends?", "query": "SELECT name,  gender,  age FROM student WHERE count(*)  =  \"max\""}
{"question": "What are the names, ages, and genders of all the customers who have a birthday in the month of January?", "query": "SELECT T1.FirstName,  T1.LastName,  T1.Gender,  T1.Age,  T1.Birthday FROM customer AS T1 JOIN customer_birthday AS T2 ON T1.CustomerID  =  T2.CustomerID WHERE T2.Birthday  =  \"01/01/2000\""}
{"question": "List all the products made by the same company", "query": "SELECT T1.product_name,  T1.product_id,  T1.product_price,  T1.product_category_id,  T1.quantity,  T1.product_image,  T1.product_description,  T1.product_type,  T1.product_url,  T1.product_link,  T1.product_rating,  T1.product_reviews,  T1.product_date_added,  T1.product_status,  T1.product_stock_quantity,  T1"}
{"question": "List the names of products with the longest descriptions", "query": "SELECT T1.product_name,  T2.description FROM products AS T1 JOIN product_description AS T2 ON T1.product_id  =  T2.product_id WHERE T2.description  >  (SELECT T3.description FROM product_description AS T3 WHERE T3.product_id  =  'T1.product_id')"}
{"question": "Find the number of schools with more than one student from a certain country", "query": "SELECT count(*) AS c FROM school AS T1 JOIN student AS T3 ON T1.id  =  T3.school_id WHERE T3.country_id  =  \"US\""}
{"question": "What is the salesman's name?", "query": "SELECT T1.first_name,  T1.last_name FROM salesman AS T1 WHERE T1.name  = 'John Smith'"}
{"question": "What are the full name and age of all female employees in the company?", "query": "SELECT Fname,  Lname,  Age FROM employee WHERE Gender = \"Female\""}
{"question": "Find the id, name, and age of the customer named \"Graham Greene\"", "query": "SELECT T1.id,  T1.name,  T1.age FROM Customer_Name AS T1 WHERE T1.name  =  \"Graham Greene\""}
{"question": "What are the names, locations and phone numbers of all the fast-food restaurants that serve pizza?", "query": "SELECT T1.restaurant_name,  T1.city,  T1.state,  T1.phone_number FROM restaurant AS T1 JOIN fast_food AS T2 ON T1.restaurant_id  =  T2.restaurant_id WHERE T2.food_type  =  'pizza'"}
{"question": "(Find the name and account balance of the students who have loans with a total amount greater than 5000)", "query": "SELECT T1.name,  T2.account_balance FROM student AS T1 JOIN loan AS T2 ON T1.id  =  T2.id WHERE T2.amount  >  5000"}
{"question": "Which department has sold the most items?", "query": "SELECT department_id FROM sales WHERE department_id  =  \"null\""}
{"question": "What are the ids and names of the tables in the document \"Database schema\"?", "query": "SELECT T1.table_name,  T1.table_id FROM information_schema.tables AS T1 WHERE T1.table_type  =  'BASE TABLE'"}
{"question": "Which customers have used both the service \"Close a policy\" and the product \"Close a policy\"? What is the name of the product?", "query": "SELECT T1.customer_id,  T1.name FROM customer AS T1 JOIN product_prices AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.product_id  =  \"Close a policy\" AND T2.price  =  \"0.00\""}
{"question": "What is the name and gender of the person who has the id of 918?", "query": "SELECT name,  gender FROM people WHERE id  =  918"}
{"question": "What are the names, ages, and hometowns of all the students?", "query": "SELECT T1.name,  T1.age,  T1.hometown FROM student AS T1"}
{"question": "What are the ids of all the orders which have a transaction code \"PUR\"?", "query": "SELECT T1.id FROM orders AS T1 JOIN transactions AS T2 ON T1.id  = T2.order_id WHERE T2.code  =  'PUR'"}
{"question": "Show the names of all customers", "query": "SELECT T1.first_name,  T1.last_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_id  =  '1'"}
{"question": "Find the number of records for which the value of field 'id' is 1", "query": "SELECT COUNT(*) FROM table WHERE id = 1"}
{"question": "What is the name and id of the product with the highest number of sales?", "query": "SELECT T1.product_name,  T1.product_id FROM product AS T1 JOIN sales AS T2 ON T1.product_id  =  T2.product_id WHERE T2.sales  =  (SELECT max(T3.sales) FROM sales AS T3);"}
{"question": "Show the name of all customers who had at least one policy from \"Agriculture\"", "query": "SELECT T1.customer_id,  T1.policy_id,  T1.name FROM customer AS T1 JOIN policy AS T2 ON T1.customer_id  = T2.customer_id WHERE T2.policy_id  IN (SELECT T3.policy_id FROM policy AS T3 WHERE T3.name  =  'Agriculture')"}
{"question": "What is the average temperature of all cities in the state of New York?", "query": "SELECT avg(temperature) FROM city WHERE state_code = \"NY\""}
{"question": "How many kinds of bacteria are there?", "query": "SELECT DISTINCT name FROM bacteria"}
{"question": "What are the ids for the names of students who are in the department of Physics", "query": "SELECT T1.name FROM student AS T1 JOIN department_students AS T2 ON T1.stu_id  =  T2._id WHERE T2.department_code  =  \"Physics\""}
{"question": "List the first names of all the customers", "query": "SELECT T1.first_name FROM customers AS T1"}
{"question": "(a question about a sql table) What are the names of enzymes in ascending order?", "query": "SELECT T1.enzyme_name FROM Enzymes AS T1 ORDER BY T1.enzyme_name"}
{"question": "List the names and locations of all the customers that are in the city of Tokyo", "query": "SELECT T1.customer_name,  T2.location FROM customers AS T1 JOIN locations AS T2 ON T1.location_id  =  T2.location_id WHERE T1.city  =  'Tokyo'"}
{"question": "What is the name and last name of the person who has sold the most cars?", "query": "SELECT T1.name,  T1.last_name FROM customer_orders AS T1 JOIN customer_profiles AS T2 ON T1.Customer_ID  =  T2._id WHERE T2.name  =  \"John Smith\" AND T2.last_name  =  \"Smith\" AND T2.last_update  >  \"2012-01-01\""}
{"question": "What are the names, salaries, and ratings of the employees who are in the top 5 of each department?", "query": "SELECT T1.Name,  T1.Salary,  T1.Rating FROM Employee AS T1 JOIN Employee_Salary AS T2 ON T1.id  =  T2.employee_id WHERE T2.department_id  =  \"1\" AND T2.salary  >  (SELECT max(salary) FROM Employee_Salary WHERE employee_id  =  T1.id) ORDER BY T1.salary ASC;"}
{"question": "What are the names, prices and release dates of all the DVDs that are not available in the store?", "query": "SELECT T1.title,  T1.price,  T1.release_date FROM products AS T1 WHERE T1.status  =  \"Not Available\""}
{"question": "What are the names, and genders of the engineers who built the bridge?", "query": "SELECT name,  gender FROM engineers WHERE building_id  =  \"1\""}
{"question": "What is the name and position of the new head of the department with the lowest number of employees?", "query": "SELECT T1.position,  T1.name FROM employee AS T1 JOIN department AS T2 ON T1.department_id  =  T2.department_id WHERE T2.number_of_employees  =  (SELECT MIN(T3.number_of_employees) FROM department AS T3)"}
{"question": "What are the names and ids of the customers who have been living in Cambridge for at least 10 years?", "query": "SELECT T1.name,  T1._id FROM customer AS T1 WHERE T1.city  =  \"Cambridge\" AND T1.age  >  10"}
{"question": "What are the names, birth years, and names of siblings for each student?", "query": "SELECT student_id,  T1.name,  T1.birth_year,  T2.name FROM students AS T1 JOIN students AS T2 ON T1.sibling_id  =  T2"}
{"question": "(a novel question, about a hartman, after \"", "query": "SELECT T1.title,  T1.author,  T1.year,  T1.pages,  T1.publisher,  T1.price,  T1.isbn,  T1.isbn13,  T1.isbn10,  T1.isbn9,  T1.isbn8,  T1.isbn7,  T1.isbn6,  T1.isbn5,  T1.isbn4,  T1.isbn3,  T1.isbn2,  T1"}
{"question": "What are the names and locations of the courses with the highest average number of students?", "query": "SELECT T1.course_name,  T2.city_name,  T2.state_province_c_code,  T2.state_abbreviation,  T2.state_name,  T2.country_code,  T2.country_name,  T2.latitude,  T2.longitude,  T2.population,  T2.gdp_md_est,  T2.gdp,  T2.gdppc,  T2.gdppercapita,  T2.gdpgrowth,"}
{"question": "Find the first name, last name and average age of the employees of all companies with the largest number of employees", "query": "SELECT T1.first_name,  T1.last_name,  T1.age FROM employees AS T1 WHERE T1.company_id  =  (SELECT company_id FROM employees WHERE count(*)  =  (SELECT count(*) FROM employees WHERE company_id  =  (SELECT MAX(company_id) FROM employees))"}
{"question": "What are the names, ages and countries of the students with the highest GPAs?", "query": "SELECT T1.name,  T1.age,  T1.country FROM students AS T1 WHERE T1.GPA  >  (SELECT max(T2.GPA) FROM students AS T2)"}
{"question": "List the names of the books that belong to the class", "query": "SELECT T1.title FROM book AS T1 JOIN class_section AS T2 ON T1.book_id  =  T2._id WHERE T2.class_id  =  \"1\""}
{"question": "What are the names, id and country of all the persons in the database who have been to the city named \"Seoul\" or \"Pyongyang\"?", "query": "SELECT T1.name,  T1.id,  T1.country FROM person AS T1 WHERE T1.city  =  \"Seoul\" OR T1.city  =  'Pyongyang'"}
{"question": "(a question about a sql table) What are the ids, names, gender, and names of all employees who are in a particular department?", "query": "SELECT T1.employeeid,  T1.name,  T1.gender,  T1.name FROM employees AS T1 WHERE T1.department_id  =  \"1\""}
{"question": "What is the number (in thousands) of movies produced in the United States?", "query": "SELECT COUNT(*) FROM movies"}
{"question": "What is the name of the first album that uses the word \"Lonely\" in the title?", "query": "SELECT T1.title FROM album AS T1 WHERE T1.title  =  \"Lonely\""}
{"question": "What is the average salary of all employees who work at least 14 hours a month?", "query": "SELECT AVG(salary) FROM employees WHERE hours_worked >= 14"}
{"question": "Find all the people who have ever been married", "query": "SELECT T1.name,  T2.id FROM person AS T1 JOIN marriage AS T2 ON T1.id  =  T2.person_id WHERE T1.name  =  'John Smith'"}
{"question": "Find the name of all students who do not have a student id", "query": "SELECT T1.student_id FROM students AS T1 WHERE T1.student_id  NOT IN (SELECT T1.student_id FROM student_id_history AS T2)"}
{"question": "what is the average price of products from the appelation in the Costa Maresa, which was produced before 2005? (1)", "query": "SELECT avg(price) FROM products WHERE appelation = \"Costa Maresa\" AND year  <  2005"}
{"question": "How many students have names that contain the word \"son\" in them?", "query": "SELECT T1.student_id FROM Student AS T1 WHERE T1.first_name  LIKE  \"%son%\""}
{"question": "List the names and email addresses of all the customers who bought one of the products with the id 1", "query": "SELECT T1.customer_id,  T1.name,  T1.email FROM customer AS T1 JOIN product AS T2 ON T1.customer_id  =  T2.[id] WHERE T2.id  =  1"}
{"question": "What are the cities that are the most in number?", "query": "SELECT T1.city,  T2.name FROM city AS T1 JOIN city_name AS T2 ON T1.city_id  =  T2, name AS T3 WHERE T2.name  =  \"name\""}
{"question": "What are the first names of all the people who are younger than the average age?", "query": "SELECT T1.name FROM people AS T1 WHERE T1.age  <  (SELECT AVG(T2.age) FROM people AS T2)"}
{"question": "(a question about a sql table) What is the id of user with email \"test@gmail", "query": "SELECT T1.id FROM user AS T1 JOIN user_email AS T2 ON T1.user_id  =  T2.user_id WHERE T2.email  =  \"test@gmail\""}
{"question": "What are the names, ages, and addresses of students who have never taken any math courses?", "query": "SELECT T1.name,  T1.\"age\",  T1.address FROM student AS T1 WHERE T1.id  =  0"}
{"question": "What is the average salary for a professor with the last name Smith?", "query": "SELECT AVG(salary) FROM professor WHERE last_name  =  'Smith'"}
{"question": "What are the names, addresses and phone numbers of customers with no debt?", "query": "SELECT T1.name,  T1.address,  T1.phone_number FROM customer AS T1 WHERE T1.debt_amount  =  0"}
{"question": "Give the names of actors and their roles in movies", "query": "SELECT T1.actor_name,  T2.role_name FROM actor_role AS T1 JOIN movie_role AS T2 ON T1.actor_id  =  T2.actor_id"}
{"question": "What is the most popular season among the students of San Jose State University?", "query": "SELECT count(*) AS count FROM student WHERE semester = \"Spring\""}
{"question": "Find the names of all the games with at least 6 players", "query": "SELECT T1.name FROM games AS T1 JOIN players AS T2 ON T1.game_id  =  T2.[game_id] WHERE T2.player_id  >  6"}
{"question": "what are the names of the products whose name contains the substring \"Scanner\"? - is a list of questions that you would like to ask the user", "query": "SELECT T1.product_name FROM product AS T1 WHERE T1.name LIKE '%Scanner%'"}
{"question": "What are the names, locations and description of the products that have been sold for the first time in September?", "query": "SELECT T1.name,  T1.location,  T1.description FROM product AS T1 WHERE T1.date_sold  =  '2009-09-01'"}
{"question": "What are the names, genders, ages and salaries for the employees of the company?", "query": "SELECT T1.name,  T1.gender,  T1.age,  T1.salary FROM employees AS T1 JOIN department AS T2 ON T1.department_id  =  T2.department_id WHERE T2.name  =  \"Company\""}
{"question": "What are the names, ids and locations of all students who are alumni of each university?", "query": "SELECT T1.student_id,  T1.name,  T1.location FROM student AS T1 JOIN alumni AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY T1.name ASC"}
{"question": "(a novel question, about a third table), after \"", "query": "(the sql query to answer the query), after \""}
{"question": "show the names of all employees who joined in march", "query": "SELECT T1.name FROM employees AS T1 WHERE T1.joined_date  =  '03/03/2015'"}
{"question": "What are the names, nationalities and ages of all students?", "query": "SELECT T1.name,  T1.nationality,  T1.age FROM student AS T1"}
{"question": "What is the name and the age of the oldest customer?", "query": "SELECT T1.customer_name,  T1.age FROM customers AS T1 WHERE T1.age  =  (SELECT MAX(age) FROM customers)"}
{"question": "What are the first three letters of the name of the band members of the band \"Stray Cats\"?", "query": "SELECT first_name,  last_name FROM band_members WHERE band_name  =  \"Stray Cats\" ORDER BY last_name ASC LIMIT 3"}
{"question": "What is the number or percentage of different types of products?", "query": "SELECT count(*) AS total_count FROM products WHERE product_type_code  =  \"A\" OR product_type_code  = \"B\" OR product_type_code = \"C\" OR product_type_code= \"D\" OR product_type_code=\"E\" OR product_type_code='F' OR product_type_code='G' OR product_type_code= 'H' OR product_type_code = 'I' OR product_type_code  ='J' OR product_type_code=\"K\" OR product_type_code   = \""}
{"question": "What are the names, phone numbers, and addresses of the members of the club?", "query": "SELECT T1.firstname,  T1.lastname,  T1.phone,  T1.address FROM members AS T1 JOIN club AS T2 ON T1.member_id  =  T2._id WHERE T2.name  = 'The Club'"}
{"question": "What are the names, birth dates, and number of children of the founders of the church of Santa Clara?", "query": "SELECT T1.name,  T1.birth_date,  T1.number_of_children FROM founder AS T1 WHERE T1.name  =  \"John\""}
{"question": "What is the name, id and year of the course taught by the first principal of the school with id 28?", "query": "SELECT name, id, year FROM course WHERE id = 28"}
{"question": "List all the songs that have been played the most times", "query": "SELECT song_id,  count(*) FROM songs GROUP BY song_id ORDER BY count(*)"}
{"question": "What are the names, first names, and ids of students in class, ordered by their average test score?", "query": "SELECT T1.first_name,  T1.last_name,  T1.id FROM student AS T1 JOIN test_scores AS T2 ON T1.student_id  =  T2.\"student_id\" ORDER BY T2.score DESC"}
{"question": "How many students attended the classes in the past four years?", "query": "SELECT T1.student_id,  T2.year_id,  T2.class_id,  T2.attendance_count FROM class_attendance AS T1 JOIN class_year_attendance AS T2  ON T1.class_id  =  T2.class_id AND T1.year_id  =  T2 .year_id GROUP BY T1.student_id, T2.year_id, T2.class_id, T2.attendance_count"}
{"question": "What is the average age of the players of the team that has the highest average age?", "query": "SELECT AVG(age) FROM player WHERE team_id  =  (SELECT team_id FROM team WHERE avg_age  =  (SELECT AVG(age) FROM team WHERE team_id  =  \"1\"))"}
{"question": "What is the average price of all the products with a price of 100?", "query": "SELECT AVG(price) FROM products WHERE price  =  100"}
{"question": "What is the name for the last place we lived?", "query": "SELECT name FROM Person ORDER BY age DESC LIMIT 1"}
{"question": "What is the average salary of all the employees?", "query": "SELECT avg(salary) FROM employees"}
{"question": "What are the names, and the number of times they appear, of all the products that are sold by the company with the highest sales volume?", "query": "SELECT T1.name,  COUNT(*) FROM product AS T1 JOIN sales AS T2 ON T1.id  =  T2.productid GROUP BY T1.name ORDER BY T1.sales_volume DESC"}
{"question": "What is the average age of all students?", "query": "SELECT avg(age) FROM student"}
{"question": "(a novel question, about a question), after \"", "query": "(the sql query to answer the query), after \""}
{"question": "What are the title and id of the movie with the greatest number on IMDB?", "query": "SELECT T1.title,  T1.id FROM movie AS T1 JOIN IMDB_MOVIE_TITLES AS T2 ON T1.movie_id  =  T2.[movie_id] WHERE T2.title  =  'The Godfather'"}
{"question": "What is the total time taken by each of the runners?", "query": "SELECT T1.time_taken,  T2.runner_id FROM Runs AS T1 JOIN Runners AS T2 ON T1.runner_id  =  T2._id GROUP BY T1.time_taken"}
{"question": "What is the average length of time it takes for the customer to be refunded when the order is canceled?", "query": "SELECT AVG(CUSTOMER_CANCELED_TIME) FROM CUSTOMER_CUSTOMER_PAYMENTS"}
{"question": "what are the names of all movies with the word \"the\" in the title and a production budget of under $100,000?", "query": "SELECT T1.title,  T2.budget FROM movies AS T1 JOIN movies_production_budget AS T2 ON T1.id  = T2.id WHERE T1.title  LIKE '%the%' AND T1.id  =  '1' AND T2.budget  <  '100'"}
{"question": "What is the average height of the employees with the highest salary?", "query": "SELECT avg(height) FROM employee WHERE salary  >  100000"}
{"question": "What is the date of the next meeting of the committee?", "query": "SELECT T1.next_meeting_date FROM Meeting_Schedule AS T1 JOIN meetings AS T2 ON T1.meeting_id  =  T2.meeting_id WHERE T2.meeting_id  = (SELECT meeting_id FROM meetings WHERE meeting_name  =  \"next meeting\" )"}
{"question": "What are the names, ids and grades of all students who play basketball?", "query": "SELECT name,  id,  grade FROM student AS T1 JOIN basketball AS T2 ON T1.student_id  =  T2.student_id"}
{"question": "What is the name, gender and age of the customer who have all the following features?", "query": "SELECT T1.Name,  T1.Gender,  T1.Age FROM customer AS T1 WHERE T1.Name  =  \"John\" AND T1.Gender  =  \"male\" AND T1.Age  =  \"25\""}
{"question": "What are the number of people who are from New York?", "query": "SELECT COUNT(*) FROM STUDENT WHERE city  =  'New York'"}
{"question": "How many customers are there in the store with the highest revenue?", "query": "SELECT count(*) AS c FROM customer AS T1 JOIN sales AS T2 ON T1.customer_id  =  (SELECT customer_id FROM customer AS T3 WHERE T3.revenue  >  T2.revenue)"}
{"question": "What is the average ticket price for movies with the highest gross?", "query": "SELECT AVG(ticket_price) FROM movie_stats WHERE movie_id  =  (SELECT TOP 1 movie_id FROM movie_stats WHERE movie_name  =  \"The Dark Knight\") AND movie_name  =  \"Batman\""}
{"question": "Show the names of all students in the class that has the most students and the most students with disabilities", "query": "SELECT T1.student_name,  T1.student_id,  T2.student_id,  T3.student_id FROM students AS T1 JOIN students_with_disabilities AS T2 ON T1.student_id  =  T2.student_id JOIN students_with_disabilities_and_students_with_disabilities AS T3 ON T1.student_id = T3.student_id WHERE T1.student_id  >  T2.student_id AND T1.student_id  <  T3.student_id"}
{"question": "What are the names, and where they are, of the three most common types of apples?", "query": "SELECT T1.Name,  T1.Location FROM apple AS T1 GROUP BY T1.Name,  T2.Location HAVING count(*)  =  3;"}
{"question": "What are the different kinds of documents that are available in the database?", "query": "SELECT DISTINCT T1.document_type_code FROM Documents AS T1 JOIN Document_types AS T2 ON T1.document_type_id  =  T2.document_type_id"}
{"question": "What is the first and last names and ids of the students in the class whose average grade is above 80?", "query": "SELECT T1.first_name,  T1.last_name,  T1.id FROM student AS T1 JOIN class_grades AS T2 ON T1.student_id  =  T2.[student_id] WHERE T2.grade_average  >  80"}
{"question": "What is the name and city of the president of the university?", "query": "SELECT T1.name,  T1.city FROM president AS T1"}
{"question": "How many teachers does The University of California, Los Angeles, have?", "query": "SELECT count(*) AS count FROM teacher"}
{"question": "Find the average and the largest number of employees with the same job title", "query": "SELECT AVG(salary),  MAX(salary) FROM employees"}
{"question": "What are the names and addresses of all employees of the company in which the president lives?", "query": "SELECT employee_name,  employee_address FROM employees WHERE employee_address  =  \"1600 Pennsylvania Avenue\""}
{"question": "What are the names, id, and titles of the employees in the sales department?", "query": "SELECT T1.employee_first_name,  T1.\"employee_last_name\",  T1.employee_title FROM employees AS T1 WHERE T1.department_id  =  \"Sales\""}
{"question": "What is the average age of all the customers?", "query": "SELECT AVG(age) FROM customers"}
{"question": "List the name of the three authors of the paper 'Achievements of the British in the war in the Far East', ordered by id", "query": "SELECT T1.name FROM authors AS T1 JOIN papers AS T2 ON T1.author_id  =  T2.[id] ORDER BY T1.name"}
{"question": "What is the name which has most votes from the students in the class of 2012?", "query": "SELECT name FROM students WHERE student_id  =  \"2012\""}
{"question": "What are the first 10 students in alphabetical order with their age and major", "query": "SELECT T1.student_id,  T1.name_first,  'age',  T1.name_second,  T1.name_third,  T1.name_fourth,  T1.name_fifth,  T1.name_sixth,  T1.name6_seventh,  T1.name_eighth,  T1.name_ninth,  T1.name_tenth FROM student AS T1 ORDER BY T1.name_first ASC LIMIT 10"}
{"question": "(a question about a sql table) Find the average of the salaries in the table of the company, ordered by the salary descending", "query": "SELECT AVG(salary) FROM employees"}
{"question": "What is the name and number of the first student who ever enrolled in the class Physics-2?", "query": "SELECT T1.name,  T1.student_id FROM students AS T1 WHERE T1.student_id  IN (SELECT T2.student_id FROM students AS  T2 WHERE T2.class_code  =  \"Physics-2\")"}
{"question": "How many cars are there in total for the country of \"United Kingdom\"?", "query": "SELECT count(*) AS total FROM car_countries WHERE country_name  =  \"United Kingdom\""}
{"question": "What is the minimum and maximum length of the movie names in the following table:", "query": "SELECT min(movie_name),  max(movie_name) FROM movies"}
{"question": "Find the names of all the cities in the table that have at least a population of 10,000", "query": "SELECT T1.city_name FROM city AS T1 WHERE T1.population  >  10000"}
{"question": "find the last name of all students who graduated last year", "query": "SELECT T1.last_name FROM students AS T1 JOIN students AS T2 ON T1.student_id  =  T2.student_id WHERE T1.graduation_date  =  \"2016-12-31\" AND T2.graduation_date  = \"2016-12-31\""}
{"question": "What is the name of the user who followed the least amount of people?", "query": "SELECT T1.user_id,  T1.user_name,  T1.user_follows FROM user AS T1 JOIN ( SELECT T2.user_id,  T2.user_name,  T2.user_follows FROM user  AS T2 WHERE T2.user_follows  <  T1.user_followers ) AS T3 ON T3.user_id  =  T1.user_id"}
{"question": "What are the names, IDs and locations of all the cities in the world?", "query": "SELECT T1.city_name,  T1.city_id,  T1.city_location FROM city AS T1"}
{"question": "What are the names, addresses and email addresses of all staff members?", "query": "SELECT T1.name,  T1.address,  T1.email FROM staff AS T1"}
{"question": "What are the kinds of fish?", "query": "SELECT Fish_Kind FROM fish"}
{"question": "List the ids and names of the faculty members who are in the math department", "query": "SELECT T1.faculty_id,  T1.name FROM faculty AS T1 JOIN faculty_department AS T2 ON T1.faculty_id  =  T2.faculty_id WHERE T2.department_code  =  \"math\""}
{"question": "What is the name and id of the movie that has the most number of votes for best picture?", "query": "SELECT T1.name,  T1.id FROM movies AS T1 WHERE T1.votes  =  (SELECT max(T2.votes) FROM movies AS T2)"}
{"question": "Find the name of the person who was born in December, 1966", "query": "SELECT T1.name FROM person AS T1 WHERE T1.birth_date  =  '12/31/1966'"}
{"question": "What are the names and number of students who live in the city of San Jose?", "query": "SELECT T1.student_name,  T2.city_name,  T2.population FROM student AS T1 JOIN city AS T2 ON T1.city_id  =  T2.city_id WHERE T1.city_id  IN (SELECT city_id FROM city WHERE city_name  =  \"San Jose\")"}
{"question": "What are the names for students who have not taken a single exam?", "query": "SELECT T1.student_name FROM students AS T1 WHERE NOT EXISTS (SELECT * FROM exam_results AS T2 WHERE T2.student_id  =  T1)"}
{"question": "What is the name and capacity of each item?", "query": "SELECT T1.item_name,  T1.item_capacity FROM items AS T1 WHERE T1.item_name  =  \"name\""}
{"question": "What are the names for the two colors of the blue car?", "query": "SELECT T1.color FROM car AS T1 WHERE T1.color  =  \"blue\""}
{"question": "What are the names, location and products of the enzymes that have any 'inhibitor' interaction? What are the id and name of the enzymes?", "query": "SELECT T1.enzyme_id,  T1.name,  T1.location,  T1.product_id,  T1.enzyme_id_interaction,  T1.enzyme_name_interaction,  T1.\"enzyme_name_interaction_description\" FROM enzyme AS T1 WHERE T1.enzyme_id  IN (SELECT T2.enzyme_id FROM enzyme_interaction AS T2 WHERE T2.enzyme_id_interaction  =  T1.enzyme_id) AND T1.product_id  IN (SELECT T3.product"}
{"question": "What are the names and ids of all customers?", "query": "SELECT T1.id,  T1.name_first,  t1.name_last FROM customer AS T1 GROUP BY T1.id ORDER BY T1.id"}
{"question": "What is the average number of students enrolled in Florida universities?", "query": "SELECT AVG(T1.stu_count) FROM Student AS T1 JOIN university AS T2 ON T1.university_id  =  T2"}
{"question": "How many employees are there in the computer maintenance department?", "query": "SELECT employee_id FROM employees WHERE department_id = \"computer maintenance\""}
{"question": "Who is the author of \"River of Darkness: A Novel\"?", "query": "SELECT author FROM book WHERE author  =  \"River of Darkness: A novel\""}
{"question": "Find the names of the products with the maximum price", "query": "SELECT T1.product_name,  T2.price FROM products AS T1 JOIN products AS T2 ON T1.product_id  =  T2.product_id WHERE T1.price  =  (SELECT MAX(price) FROM products)"}
{"question": "Find the names of students who have not yet entered the university", "query": "SELECT T1.student_id,  T1.name FROM student AS T1 WHERE T1.enrollment_date  =  '2016-01-01' AND T1.student_id  NOT IN (SELECT T2.student_id FROM student AS T2 WHERE T2.enrollment_date  >  '2016-01-01')"}
{"question": "How many students are attending a school with a student/teacher ratio of at least 60: 40?", "query": "SELECT T1.school_name,  T1.student_count,  T1.teacher_count FROM schools AS T1 WHERE T1.student_to_teacher_ratio  >  60:40"}
{"question": "list the count and id of each product(s) in all the orders(s)", "query": "SELECT COUNT(*) AS count, T1.product_id AS id FROM order AS T1 JOIN product AS T2 ON T1.product_id  =  T2.product_id WHERE T1.order_id  =  T2 .order_id"}
{"question": "How many different types of sports are there? List the number of events for each type", "query": "SELECT COUNT(*) AS T1,  type_name AS T2 FROM event_type"}
{"question": "Which city is the largest?", "query": "SELECT name FROM city WHERE population  >  100000"}
{"question": "What are the names and ids of the students who have attended the class \"History\"?", "query": "SELECT T1.student_id,  T1.name_first,  count(*) FROM student AS T1 JOIN class AS T2 ON T1.student_id  =  T2.student_id WHERE T2.class_code  =  'History' GROUP BY T1.student_id ORDER BY count(*)  DESC LIMIT 1"}
{"question": "Show the names of any customer who has the least number of transactions", "query": "SELECT T1.name FROM customer AS T1 WHERE T1.transactions  =  ( SELECT MIN(T2.transactions) FROM customer AS T2 )"}
{"question": "What is the name and address of all students enrolled in the University of Florida?", "query": "SELECT student_name,  address FROM students"}
{"question": "Find the number of books that have pages longer than 100", "query": "SELECT count(*) AS count FROM book WHERE page_length  >  100"}
{"question": "What are the names with the same last name as the last minister, and what is the last name of the last minister?", "query": "SELECT T1.last_name,  T2.name FROM ministers AS T1 JOIN ministers AS T2 ON T1.last_name  =  T2.last_name"}
{"question": "What are the names, titles and salaries of the employees whose names start with a certain letter?", "query": "SELECT name,  title,  salary FROM employees WHERE name  LIKE \"A%\";"}
{"question": "Which parts have more then 2 faults? Show the part name, and id", "query": "SELECT T1.part_name,  T1.part_id FROM parts AS T1 JOIN parts_faults AS T2 ON T1.part_id  =  T2.part_id WHERE T2.fault_id  >  2"}
{"question": "How many students are there who haven't gone to classes?", "query": "SELECT count(*) AS num_students FROM students WHERE NOT EXISTS (SELECT * FROM classes WHERE student_id = students.student_id)"}
{"question": "Find the name and id of the employee who has the highest salary in the company", "query": "SELECT T1.name,  T1.id FROM employees AS T1 JOIN salary AS T2 ON T1.id  =  T2.emp_id ORDER BY T2.salary DESC LIMIT 1"}
{"question": "What are the names and ids of players who have been in each club?", "query": "SELECT T1.player_id,  T1.name_first,  'club' AS club FROM player AS T1 JOIN club AS T2 ON T1.club_id  =  T2.club_id GROUP BY T1.club_id,  T1.player_name ORDER BY T1.player_id ASC"}
{"question": "What is the average hours spent in the day for all students?", "query": "SELECT T1.hours_spent FROM student AS T1 WHERE T1.id  =  ( SELECT T2.id FROM student AS T2 WHERE T2.id  =  ( SELECT MAX(T3.id) FROM student AS T3 ) )"}
{"question": "Find the names of students", "query": "SELECT T1.name FROM students AS T1 WHERE T1.name  =  \"John\""}
{"question": "What is the count of the number of different colors of cards in a deck of cards?", "query": "SELECT count(*) AS c FROM card_color WHERE card_id  =  (SELECT card_id FROM card_color WHERE color  =  \"Red\")"}
{"question": "Find out how many times the words \"the\" \"of\" and \"a\" are used in this text", "query": "SELECT T1.word,  T2.count FROM words AS T1 JOIN word_counts AS T2 ON T1.word  =  T2.word WHERE T2.count  >  0"}
{"question": "Find the names of airports in California", "query": "SELECT name FROM airport WHERE state  =  \"California\""}
{"question": "show (a novel question, about a table), when \"", "query": "SELECT T1.title FROM novel AS T1 JOIN book AS T2 ON T1.book_id  =  T2.book_id WHERE T2.title  =  \"The Hobbit\""}
{"question": "Show all team names", "query": "SELECT T1.team_name FROM team AS T1"}
{"question": "What are the names, ordered by number of customers, of the customers who purchased product \"food\"?", "query": "SELECT T1.customer_id,  T1.name FROM customer AS T1 JOIN product AS T2 ON T1.customer_id  = T2.customer_id WHERE T2.product_name  =  \"food\""}
{"question": "Find the name of the city with the highest population in the city with city code \"CZ\" and zipcode \"10101\"", "query": "SELECT name FROM city WHERE city_code  =  \"CZ\" AND zipcode  =  \"10101\""}
{"question": "List the names of all customers who have accounts with a minimum balance of 10000", "query": "SELECT T1.CustomerID,  T1.CustomerName,  T1.AccountBalance FROM Customer AS T1 WHERE T1.AccountBalance  >=  10000"}
{"question": "What are the names in an order of decreasing length of the names of all the teams?", "query": "SELECT name FROM team ORDER BY length(name) DESC"}
{"question": "Find the name of the person who is not from the US or UK", "query": "SELECT T1.name FROM person AS T1 WHERE T1.country_code  =  'US' OR T1.country_code  ='UK'"}
{"question": "(a novel question, about a table), \"", "query": "Examples of some or all task item:"}
{"question": "What is the average age across all gymnasts?", "query": "SELECT avg(age) FROM gymnast"}
{"question": "How many distinct levels are there on the game \"Tetris\"?", "query": "SELECT DISTINCT level FROM game WHERE name = \"Tetris\""}
{"question": "How many different names of cars are there?", "query": "SELECT DISTINCE T1.name FROM car AS T1 JOIN car_model AS T2 ON T1.car_id  =  T2.car_id WHERE T2.name  =  \"Ford\""}
{"question": "What is the number of customers who have used the service named \"Close A Policy\" or \"Upgrade A Policy\"?", "query": "SELECT count(*)  FROM customers WHERE (name  =  \"Close A Policy\" OR name  =  \"Upgrade A Policy\")"}
{"question": "What are the most common names of the students?", "query": "SELECT T1.first_name,  T1.last_name,  count(*) FROM student AS T1 GROUP BY T1.first_name, T1.last_name HAVING count(*)  >  1"}
{"question": "list the name,job title of all people ordered by their name", "query": "SELECT T1.name,  T2.job_title FROM employee AS T1 JOIN employee_position AS T2 ON T1.id  =  T2.employee_id ORDER BY T1.name"}
{"question": "What are the names and phone numbers of students who are still in school?", "query": "SELECT T1.student_id,  T1.student_name,  T1.student_phone FROM student_attendance AS T1 WHERE T1.student_id  =  (SELECT T2.student_id FROM student_attendance AS t2 WHERE t2.student_id  =  T1.student_id AND t2.status  =  \"present\" AND t2.attendance_date  =  \"2011-09-01\" AND t2.attend_time  =  \"09:00:00\" AND t2.att"}
{"question": "(a question about a sql table) Find the number of projects which each student is working on (and their names)", "query": "SELECT student_id,  name FROM project_assignment AS t1 JOIN project_students AS t2 ON t1.student_id  =  t2.student_id WHERE t1.project_id  =  \"1\""}
{"question": "(a novel question, about adifferent table): Show the names of all the employees of Columbus Crew", "query": "SELECT T1.name FROM employees AS T1 JOIN company AS T2 ON T1.company_id  =  T2.id WHERE T2.name  =  \"Columbus Crew\""}
{"question": "What are the names, birth places, and degrees of the students who studied in the United Kingdom, and what is their total number of students?", "query": "SELECT T1.First_name,  T1.Last_name,  T1.Birth_place,  T1.Degree,  T1.Total FROM students AS T1 WHERE T1.Country  =  \"United Kingdom\""}
{"question": "What are the names, cities, and countries of the cities that have the largest number of residents", "query": "SELECT DISTINCT city FROM city_population WHERE city  =  'New York'"}
{"question": "What are the names, genders and birth places of all students?", "query": "SELECT T1.student_name,  T1.gender,  T1.birth_place FROM student AS T1 JOIN class AS T2 ON T1.student_id  =  T2._id WHERE T2.class_code  \"Biology\""}
{"question": "What are the names and ids of the players of the game \"Monopoly\" with the most number of wins?", "query": "SELECT T1.player_id,  T1.name_first,  count(*) FROM player AS T1 JOIN player AS T2 ON T1.id  =  T2.id WHERE T1.wins  =  T2.wins GROUP BY T1.player_name ORDER BY count(*) DESC;"}
{"question": "Find all the distinct names", "query": "SELECT DISTINCT name FROM table"}
{"question": "What are the names and ages of all students?", "query": "SELECT T1.name,  T1.age FROM students AS T1"}
{"question": "What is the average length of all routes?", "query": "SELECT AVG(distance) FROM routes"}
{"question": "What are the names, job functions and salaries of the employees who are not active?", "query": "SELECT T1.first_name,  T1.last_name,  T1.job_function,  T1.salary FROM employees AS T1 WHERE T1.status  =  'Not active'"}
{"question": "Find the customer name with the most purchase transactions", "query": "SELECT name FROM Customer WHERE total_purchases  =  (SELECT max(total_purchases) FROM customer)"}
{"question": "How many people are in the group of people who have an Id that is in the range of \"1-10\" and have a name that ends with \"", "query": "SELECT T1.id,  T1.name FROM people AS T1 WHERE T1.id  IN (1,2,3,4,5,6,7,8,9,10) AND T1.name  LIKE \"%$%\""}
{"question": "What is the average weight of the grapes?", "query": "SELECT AVG(weight) FROM grapes"}
{"question": "What are the names listed by year in the table below?", "query": "SELECT T1.year,  T2.name FROM table_name AS T1 JOIN table_name AS T2 ON T1.year  =  T2.year"}
{"question": "Find the names of customers who are registered in the past year", "query": "SELECT name FROM customer WHERE date_of_birth  >  \"2011-01-01\""}
{"question": "what are the names of the directors whose films have won more awards", "query": "SELECT T1.director_name FROM director AS T1 JOIN film_award AS T2 ON (T1.director_id  =  T2.[director_id]) GROUP BY T1.director_id HAVING count(DISTINCT T2.award_id)  >  1"}
{"question": "What is the average cost of products in the store?", "query": "SELECT AVG(T1.price) FROM product AS T1 JOIN product_details AS T2 ON T1.product_id  =  T2.product_id WHERE T2.type  =  \"product\""}
{"question": "Are there any students who have a first name of \"Mariam\" and a last name of \"Khalid\"?", "query": "SELECT T1.first_name,  T1.last_name FROM students AS T1 WHERE T1.first_name  =  \"Mariam\" AND T1.last_name  =  \"Khalid\""}
{"question": "What is the average number of hours spent training for each athlete who trains for less than 1500 hours, by sport?", "query": "SELECT T1.Sport,  T2.Hours FROM athlete AS T1 JOIN training AS T2 ON T1.id  =  T2.athlete_id WHERE T1.Training  <  1500 GROUP BY T1.Sport ORDER BY T2.Hours DESC"}
{"question": "List the names of products that are available in the cheapest quantity", "query": "SELECT T1.product_name,  T2.quantity FROM product_table AS T1 JOIN product_quantity AS T2 ON T1.product_id  =  T2.product_id WHERE T2.quantity  =  '1'"}
{"question": "\"What are the names of all customers who made an order before April 29, 2014?\"", "query": "SELECT T1.Customer_id,  T1.Customer_name,  T1.Customer_address,  T1.Customer_city,  T1.Customer_state,  T1.Customer_zip,  T1.Customer_phone,  T1.Customer_email,  T1.Customer_credit_limit,  T1.Customer_balance,  T1.Customer_status,  T1.Customer_type,  T1.Customer_country,  T1.Customer_gender,  T1.Customer_birthday,  T1.Customer"}
{"question": "Are there any employees named \"Sally Jorgensen\" in the human resources department?", "query": "SELECT T1.employee_id FROM employees AS T1 WHERE T1.first_name  =  \"Sally Jorgensen\""}
{"question": "What are the names in descending order of the number of documents?", "query": "SELECT T1.Name FROM Documents AS T1 ORDER BY count(*) DESC"}
{"question": "(a question about a sql table) How many hospitals are in San Diego?", "query": "SELECT COUNT(*),  city_name FROM hospital"}
{"question": "What are the id, names and genders of the engineers who built two bridges or one mill", "query": "SELECT T1.name,  T2.gender,  T3.id FROM engineers AS T1 JOIN engineers_works_on_projects AS T2 ON T1.engineer_id  =  T2.engineer_id JOIN projects AS T3 ON T2.project_id  =  T3.project_id WHERE T2.project_id IN (SELECT project_id FROM projects WHERE name  =  'Bridge 1') OR T2.project_id IN  (SELECT project_id FROM projects WHERE  name  =  'Bridge 2')"}
{"question": "What is the average age of all customers?", "query": "SELECT AVG(Age) FROM customer"}
{"question": "(a question about a sql table), after \"generate:\"", "query": "(the sql query to answer the questions), after \""}
{"question": "What are the names, and the number of times they have appeared in, of the last five runners-up in the Women's Single Sculls at the Hen", "query": "SELECT name,  count(*) FROM runners_up WHERE name  IN (SELECT name FROM runners_up WHERE name  =  'Amanda') AND year  =  '2012' AND gender  =  'female' ORDER BY count(*) DESC"}
{"question": "How many scientists are working on three projects together?", "query": "SELECT T1.name,  T1.project_id,  T1.project_name,  T1.project1_id,  T1.projects_id,  T1.id,  T1.project2_id,  T1.projetcs_id,  T1.r_id,  T1.c_id,  T1.s_id,  T1.e_id,  T1.p_id,  T1.d_id,  T1.t_id,  T1.f_id,"}
{"question": "Find the names and number of students who are taking at least one course in the subject of Business Studies", "query": "SELECT T1.student_name,  T2.number FROM student_course_enrolment AS T1 JOIN student AS T2 ON T1.id  = T2.id WHERE T1.subject_id  IN (SELECT T3.subject_id FROM subject AS T3) AND T1.course_id  IN (SELECT T4.course_id FROM course AS T4)"}
{"question": "(a question about a sql table) How many distinct country's climbers are there?", "query": "SELECT DISTINCT Country FROM climbers"}
{"question": "Find the names and positions of the employees who work in the building number 2", "query": "SELECT T1.employee_id,  T1.first_name,  'Employee' AS T1.position FROM employees AS T1 JOIN building AS T2 ON T1.employee_id  =  T2.\"employee_id\" WHERE T2.building_number  =  \"2\""}
{"question": "What is the first name of the employee with the highest number of awards?", "query": "SELECT T1.firstname,  T1.lastname,  T1.salary,  T1.title,  T1.dept_name,  T1.deptid,  T1.deptcode,  T1.deptnum,  T1.deptphone,  T1.deptemail,  T1.deptaddress,  T1.deptcity,  T1.deptstate,  T1.deptzip,  T1.deptcountry,  T1.deptpostalcode,  T"}
{"question": "What is the name of the city where the first Olympic games were held?", "query": "SELECT T1.city_name,  T2.city_id FROM city AS T1 JOIN country AS T2 ON T1.city_id  =  T2._id WHERE T1.name  =  \"Olympia\""}
{"question": "List the name of schools with the smallest enrollment", "query": "SELECT name FROM school WHERE enrollment  =  \"null\""}
{"question": "How many players have played in the finals?", "query": "SELECT player_id FROM player WHERE player_id  IN (SELECT player_id FROM player WHERE player.player_id  IN (SELECT player.player_id FROM player WHERE player.team_id  =  '1' AND player.player_id  IN ('1','2','3','4','5','6','7','8','9','10','11','12','13','14','15','16','17','18','19','20','21','22','23','24','25','26','27','28','29','30','31','32','33','34','35','36"}
{"question": "What is the maximum altitude reached in a day by any aircraft in the world?", "query": "SELECT MAX(altitude) FROM flights WHERE date  =  '2014-01-01'"}
{"question": "What is the average age of the students enrolled in the class \"Intro to Art History\"?", "query": "SELECT AVG(age) FROM students WHERE class_name = \"Intro to Art History\""}
{"question": "What is the name, age and nationality of all students in the class?", "query": "SELECT T1.name,  T1.age,  T1.nationality FROM student AS T1 WHERE T1.id  =  (SELECT T2.id FROM student AS T2 WHERE T2.class_id  =  'ACCT-201')"}
{"question": "What are the names and locations of the cities with the highest population?", "query": "SELECT T1.city_name,  T2.city_id FROM city_info AS T1 JOIN city_info AS T2 ON T1.city_id  =  T2.city_id GROUP BY T1.city_name, T2.city_id"}
{"question": "Find the number of students", "query": "SELECT count(*)  FROM students"}
{"question": "What are the names, age, and hobbies of the students who have a favorite game?", "query": "SELECT T1.student_first_name,  T1.\"student_last_name\",  T1.age,  T1.hobby FROM students AS T1 JOIN favorite_games AS T2 ON T1.student_id  =  T2.\"student_id\""}
{"question": "Return the name of the actress who acted in the movie \"The Lord of the Rings?\"", "query": "SELECT T1.name FROM actor AS T1 JOIN movie AS T2 ON T1.actor_id  =  T2._id WHERE T2.title  =  \"The Lord of the Rings\""}
{"question": "What are the ages of the senators who voted for the bill with id 17?", "query": "SELECT T1.age FROM senators AS T1 JOIN bill AS T2 ON T1.senator_id  =  T2.senator_id WHERE T2.id  =  17"}
{"question": "List the names of the employees who have both a college degree and a PhD", "query": "SELECT T1.employee_id,  T1.name_first,  'PhD' AS degree,  T1.name_second,  T1.name_third,  T1.name_fourth,  T1.name_fifth,  T1.name_sixth,  T1.name 'PhD' AS name_sixth,  T1.'PhD' AS name_sixths FROM employee AS T1 WHERE T1.employee_id  =  (SELECT T2.employee_id FROM employee AS T2 WHERE T2.employee_id"}
{"question": "(a novel question, about a litt", "query": "SELECT T1.name,  T1.* FROM movie AS T1 JOIN movie_rating AS T2 ON T1.movie_id  =  T2.movie_id WHERE T2.rating  =  \"PG\""}
{"question": "What are the names, and what is the name of the company of the inventors of the airplane?", "query": "SELECT T1.name,  T2.name FROM inventors AS T1 JOIN inventors AS T2 ON T1.inventor_id  =  T2._id WHERE T1.company_name  =  \"Airplane\""}
{"question": "Find the number of vehicles that each person has", "query": "SELECT T1.person_id,  T2.vehicle_id FROM person AS T1 JOIN vehicle AS T2 ON T1.person_id  =  T2.person_id"}
{"question": "You can learn more about the task itself in this [link](https://github", "query": ""}
{"question": "Find the first name and the last name of all the kids that have birthdays in February", "query": "SELECT T1.first_name,  T1.last_name FROM kids AS T1 WHERE birthday  =  \"February\""}
{"question": "What are the ages of all employees?", "query": "SELECT T1.age FROM employees AS T1"}
{"question": "A:\n\nAs you can see, this is a much easier task", "query": "Examples of some or all task item:"}
{"question": "Find the names of all products that have the word \"milk\" in their names", "query": "SELECT T1.name FROM product AS T1 JOIN product_description AS T2 ON T1.name  =  T2.name WHERE T2.description  LIKE '%milk%'"}
{"question": "What are the names, ids and genders of the architects who have built the same building more than once?", "query": "SELECT name,  id,  gender FROM architect WHERE id IN (SELECT id FROM architect WHERE name IN (SELECT name FROM architect WHERE name IN (SELECT T1.name FROM architect AS T1 JOIN architect_buildings AS T2 ON T1.id  =  T2.id WHERE T2.name  =  \"The White House\")))"}
{"question": "What are the number of students and faculty members of the university?", "query": "SELECT count(*)  FROM student"}
{"question": "Find the names of all students who have an average mark of over 90%", "query": "SELECT T1.name FROM student AS T1 JOIN student_grades AS T2 ON T1.stu_id  =  T2.stu_id WHERE T2.avg_mark  >  90"}
{"question": "Show the names of all the students of the class 'Computer Science' at the University of Cambridge", "query": "SELECT T1.name FROM students AS T1 JOIN class AS T2 ON T1.crs_id  =  T2._id WHERE T2.class_name  =  'Computer Science'"}
{"question": "Find the average number of pages per minute of color", "query": "SELECT AVG(pages_per_minute) FROM color_pages"}
{"question": "What are the names, ages and sex of all students who are registered in the department of Computer Science?", "query": "SELECT T1.first_name,  T1.last_name,  T1.age,  T1.sex FROM Students AS T1 WHERE T1.department_id  =  'Computer Science'"}
{"question": "\"Find the total account balance of each customer in Utah or Utah", "query": "SELECT T1.account_balance,  T1.customer_name FROM customer_accounts AS T1 WHERE T1.state  =  \"Utah\""}
{"question": "What are the names, id, and birth date of all students who live in a single room?", "query": "SELECT T1.student_first_name,  T1.student_last_name,  T1.student_id,  T1.student_birth_date FROM students AS T1 JOIN student_rooms AS T2 ON T1.student_id  =  T2.student_id WHERE T2.room_type  =  \"Single Room\""}
{"question": "What are the first 3 names and addresses of the five people who live in house with no bedrooms?", "query": "SELECT T1.first_name,  T1.last_name,  T1.address_1,  T1.address_2,  T1.city,  T1.state_code,  T1.zip_code,  T1.country,  T1.[country_code],  T1.phone,  T1.fax,  T1.email,  T1.email_type,  T1.email_address,  T1.email_is_primary,  T1.email_status,  T1.email_last"}
{"question": "What is the name, last name, and id of the employee who has the lowest salary?", "query": "SELECT name,  last_name,  id FROM employees WHERE salary  =  \"null\" ORDER BY salary DESC LIMIT 1"}
{"question": "What is the name and id of the university's dean?", "query": "SELECT T1.id,  T1.name FROM university AS T1 WHERE T1.dean_id  =  '1'"}
{"question": "What is the first three letters of each country's name?", "query": "SELECT T1.name FROM country AS T1 WHERE T1.name  LIKE \"A%\";"}
{"question": "What is the name and id of the person with an income of $200,000?", "query": "SELECT T1.name,  T1.id FROM Person AS T1 WHERE T1.income  =  \"$200,000\""}
{"question": "What is the average rating for the books written by authors from the university of California?", "query": "SELECT AVG(rating) FROM books WHERE author_id  =  \"UC\""}
{"question": "What are the names, IDs, and numbers of all the products of the company \"Tesla\"?", "query": "SELECT T1.id,  T1.name,  T1.price FROM products AS T1 WHERE T1.name  = 'Tesla'"}
{"question": "What is the average of all the scores", "query": "SELECT avg(score) FROM student"}
{"question": "How many students are there in the class named \"Elementary School\"?", "query": "SELECT count(*) AS \"count\" FROM students AS T1 WHERE T1.name  =  \"Elementary School\""}
{"question": "What is the name and age of the customer who has the highest id?", "query": "SELECT T1.id,  T1.first_name,  T1.last_name,  T1.age FROM customer AS T1 WHERE T1.id  =  (SELECT max(id) FROM customer);"}
{"question": "What is the average score of the top-5 students with highest GPA?", "query": "SELECT AVG(score) FROM (SELECT TOP 5 T1.student_id, T1.GPA FROM student AS T1 GROUP BY T1.student_ID) AS T2"}
{"question": "How much do you like to make yourself stand out from other people by wearing a hat?", "query": "SELECT name FROM hat WHERE hat_type  =  \"fashion\" AND hat_style  =  \"stylish\""}
{"question": "What are the names, ids, and the number of employees, of all the different employees?", "query": "SELECT T1.employee_id,  T1.name,  T1.\"number of employees\" FROM employee AS T1"}
{"question": "What is the total number of students who are under 20 and enrolled in at least one activity?", "query": "SELECT T1.student_id,  T1.name FROM student AS T1 JOIN activity AS T2 ON T1.student_id  =  T2.student_id WHERE T2.activity_id  =  \"1\" AND T1.age  <  20"}
{"question": "Show the names of all vehicles in all cities", "query": "SELECT vehicle_name FROM vehicles WHERE city  =  \"New York\""}
{"question": "What is the average grade of students with the last name Smith? Asks for the number of customers whose age is less than 15", "query": "SELECT T1.avg_grade FROM student AS T1 JOIN customer AS T2 ON T1.student_id  =  T2.id WHERE T2.age  =  15"}
{"question": "How many documents were uploaded by my-company", "query": "SELECT COUNT(*) FROM documents WHERE company_id ='my-company'"}
{"question": "Show the names and ages of all students in alphabetical order of the last name but not the first name", "query": "SELECT T1.last_name,  T1.age FROM student AS T1 ORDER BY T1.last_name"}
{"question": "\"What is the full name of the 3 instructors who teach the 4th course\"", "query": "SELECT T1.full_name FROM instructors AS T1 JOIN courses AS T2 ON T1.course_id  =  T2.id WHERE T2.name  =  \"4th course\""}
{"question": "Find the names of all employees who are not from the UK and who are from the US", "query": "SELECT DISTINCT T1.name FROM employee AS T1 JOIN country AS T2 ON T1.country_id  =  T2.country_id WHERE T2.country_code  =  \"US\" AND T2.country_name  =  \"United States\""}
{"question": "Show the names of colleges that have at least two students", "query": "SELECT T1.college_name,  T2.student_name FROM college AS T1 JOIN student AS T2 ON T1.college_id  =  T2_college_id WHERE T2.student_id  IN (SELECT T3.student_id FROM student AS T3 WHERE T3.student_id  IN ( SELECT T4.student_id FROM student AS t4 WHERE t4.student_id  IN (... ) ) )"}
{"question": "What are the ages of all the students who didn't participate in the last three events?", "query": "SELECT T1.student_id,  T1.name,  T2.age FROM students AS T1 JOIN events AS T2 ON T1.student_id  =  T2.[student_id] WHERE T2.year  =  \"2010\" AND T2.event_id  =  \"1\" AND T2.event_name  =  \"Last Event\" AND T2.event_type_code  =  \"1\" AND (T2.event_type_code = \"1\" OR T2.event_type_name = \"Last Event\")"}
{"question": "What is the name and address of the person with the most number of books?", "query": "SELECT name,  address FROM person WHERE count(*)  =  \"the most number of books\""}
{"question": "Find the names of all teachers and the number of students they teach", "query": "SELECT T1.name,  T2.count FROM teacher AS T1 JOIN students AS T2 ON T1.id  =  T2.teacher_id ORDER BY T1.id"}
{"question": "What are the wages of the workers in the lowest wage bracket?", "query": "SELECT T1.wage FROM workers AS T1 WHERE T1.wage  <  (SELECT min(wage) FROM workers)"}
{"question": "What is the name and id of the employee who owns the most amount of shares?", "query": "SELECT T1.name,  T1.id FROM employees AS T1 JOIN shares AS T2 ON T1.employee_id  =  T2.employee_id WHERE T2.amount  =  (SELECT max(T3.amount) FROM shares AS T3)"}
{"question": "What are the names, birth dates, and birth places of the customers with the largest purchase quantity?", "query": "SELECT T1.Name,  T1.Birth_Date,  T1.Birthplace FROM customer AS T1 WHERE T1.Purchase_Quantity  >  (SELECT max(T2.Purchase_Quantity) FROM customer AS T2)"}
{"question": "What is the count and count per thousand of the number of people who are not wearing a seat belt", "query": "SELECT count(*) AS count,  count(*) / 1000 AS count_per_thousand FROM passengers WHERE seat_belt_status  =  'no'"}
{"question": "What are the names for the different types of engines?", "query": "SELECT T1.engine_name FROM engines AS T1 WHERE T1.engine_type  =  'A'"}
{"question": "What are the names with more than 100 votes in election?", "query": "SELECT name FROM election WHERE vote_count > 100"}
{"question": "What are the names, first names and birthdays of all people in the world?", "query": "SELECT name_first,  name_last,  birthday FROM people"}
{"question": "What is the average number of hours of work by the employees where the average salary is more than 50000?", "query": "SELECT AVG(hours_worked) FROM employee WHERE salary  >  50000"}
{"question": "How many students did not get a degree?", "query": "SELECT T1.student_id,  T2.name FROM students AS T1 JOIN students_degrees AS T2 ON T1.id  =  T2.id WHERE T2.name  = 'No Degree'"}
{"question": "Find the numbers of votes for candidates associated with the Republican Party in the 2016 United States elections", "query": "SELECT count(*) AS c FROM votes WHERE candidate_id  =  \"R\" AND party_id  =  \"R\";"}
{"question": "What is the name and location of the company where \"Vincent\" works?", "query": "SELECT T1.company_name,  T2.city_name FROM company AS T1 JOIN employee AS T2 ON T1.company_id  =  T2.company_id WHERE T1.name  =   \"Vincent\""}
{"question": "What are the names and birth dates of all students who have studied in the university for more than 4 years?", "query": "SELECT T1.student_name,  T1.student_birth_date FROM students AS T1 WHERE T1.studied_in_years  >  4"}
{"question": "How many players are there on the team that has the highest number of wins?", "query": "SELECT T1.player_id,  T1.team_id,  T1.number_of_wins FROM Team_Players AS T1 JOIN teams AS T2 ON T1.team_id  =  T2.team_id WHERE T2.name  =  \"Team A\""}
{"question": "Find all the customers whose name contains 'he', 'his', or 'her'", "query": "SELECT T1.customer_name FROM customer AS T1 WHERE T1.customer_name LIKE '%he%' OR T1.customer_name LIKE 'his%' OR T1.customername LIKE 'her%'"}
{"question": "Find the names of products that have more than 10 components", "query": "SELECT T1.name FROM product AS T1 JOIN component AS T2 ON T1.id  =  T2.product"}
{"question": "Show the employees who work in the university with last name \"Kirschner\"", "query": "SELECT T1.employeeid,  T1.name,  T2.department_name FROM employees AS T1 JOIN department AS T2 ON T1.department_id  =  T2.department_id WHERE T1.name  = \"Kirschner\""}
{"question": "List the names of the students who attend the lecture with the highest attendance", "query": "SELECT T1.student_id,  T1.name_first,  'Lecture' AS type_of_attendance FROM student AS T1 JOIN attendance AS T2 ON T1.student_id  =  T2.student_id WHERE T2.type_of_attendance  =  'Lecture'"}
{"question": "What is the average temperature in April, for each state, in degrees Celsius?", "query": "SELECT AVG(T.temperature) FROM weather AS T WHERE T.month  =  \"April\" AND T.state  =  \"Alaska\""}
{"question": "List the names of customers who have orders with status \"Cancelled\"", "query": "SELECT customer_id,  customer_name,  customer_address,  customer_city,  customer_state,  customer_zip,  customer_country,  customer_phone,  customer_fax,  customer_email,  customer_status,  customer_order_id,  customer_order_date,  customer_order_status,  customer_order,  customer_order_item_id,  customer_order,  T1.order_id,  T1.order_date,  T1.order_status,  T1.order_item_id"}
{"question": "How many students are there in the university of alabama?", "query": "SELECT count(*)  FROM student"}
{"question": "Find the average number of accounts for each customer whose birthday is in the month of March", "query": "SELECT T1.account_id,  T1.customer_name,  T1.customer_last_name,  T1.account_balance,  T1.account_type,  T1.account_status,  T1.account_number,  T1.account_date,  T1.account_amount,  T1.account_interest,  T1.account_due_date,  T1.customer_gender,  T1.customer_age,  T1.customer_zip_code,  T1.customer_city,  T"}
{"question": "What is the name and gender of all customers who have accounts with $10 or more in them", "query": "SELECT T1.customer_first_name, T1.customer_last_name, T1.customer.gender FROM customers AS T1 JOIN customer_accounts AS T2 ON T1.Customer_ID  =  T2.Customer_ID WHERE T2.amount  >  10"}
{"question": "List the name and id of the employees who are both teachers and professors", "query": "SELECT T1.firstname,  T1.lastname,  T1.id FROM employee AS T1 JOIN professor_teacher AS T2 ON T1.id  =  T2.employeeid WHERE T2.firstname  =  \"John\" AND T2.lastname  =  \"Smith\""}
{"question": "How many students have the minimum test scores?", "query": "SELECT T1.id,  T1.student_id,  SUM(T1.score) FROM student AS T1 WHERE T1.score  >  (SELECT min(T2.score) FROM student AS T2 WHERE T2.student_id  =  'T1.student_id')"}
{"question": "Who is the most qualified candidate for the job of \"Director of Sales\"?", "query": "SELECT name FROM employee WHERE salary  >  \"$salary\" AND salary  <  \"$salary\" AND department_id = \"1\""}
{"question": "What is the name and id of the employee who is on the board of directors of company \"Brenden\"?", "query": "SELECT T1.employee_id,  T1.employee_name FROM employee AS T1 JOIN board_of_directors AS T2 ON T1.employee_id  =  T2.employee_id WHERE T2.company_name = \"Brenden\""}
{"question": "What are the names and the first names of all students in the class of 2001?", "query": "SELECT T1.name,  T1.\"first_name\" FROM student AS T1 WHERE T1.class_id  =  2001"}
{"question": "What are the id's of all the courses that appear in \"Courses\" table?", "query": "SELECT course_id FROM courses WHERE course_name IN (\"Courses\")"}
{"question": "What is the total cost of a product in euros?", "query": "SELECT SUM(price * quantity) FROM product"}
{"question": "What is the average number of hours of sleep per day for the faculty members?", "query": "SELECT AVG(Hours_Sleep) FROM Faculty"}
{"question": "What is the sum of the amounts of each customer?", "query": "SELECT sum(amount) FROM customer"}
{"question": "Find the date of the last major operation of the companies with a headquarters in Boston, MA", "query": "SELECT T1.date_of_last_major_operation FROM companies AS T1 JOIN cities AS T2 ON T1.company_id  =  T2.company_id WHERE T2.city_name  =  \"Boston\""}
{"question": "What are the courses taught by OTHA MOYERS?", "query": "SELECT T1.course_id,  T1.name FROM course AS T1 WHERE T1.teacher_id  =  'OTHAMOYERS'"}
{"question": "What are the names for the members of the group that is formed by adding the average value and the median value?", "query": "SELECT name FROM group_members WHERE group_id  =  \"1\" AND avg(value)  +  median(value)  =  \"2\""}
{"question": "What are the names and average age of all singers?", "query": "SELECT T1.name,  T1.age FROM singers AS T1"}
{"question": "Find the number of artists whose surname is \"McNally\"", "query": "SELECT count(*) AS count FROM artist AS T1 JOIN artist_surname AS T2 ON T1.id  =  T2.artist_id WHERE T2.surname  =  \"McNally\""}
{"question": "Find the number of employees who are not in a department", "query": "SELECT count(*) AS \"count\" FROM employee WHERE department_id  =  0"}
{"question": "What are the id and forenames of drivers and the country where they are from, if the number of participants in the race is more than three", "query": "SELECT T1.id,  T1.forenames,  T1.country FROM drivers AS T1 WHERE T1.number_of_participants > 3"}
{"question": "What are the names and ids of employees whose highest salary is less than 10000?", "query": "SELECT T1.name,  T1.id FROM employees AS T1 WHERE T1.salary  >  10000"}
{"question": "The average age of all employees is 25", "query": "SELECT AVG(age) FROM employee"}
{"question": "What are the first names and surnames of the students from last four years?", "query": "SELECT T1.first_name,  T1.surname FROM student AS T1 WHERE T1.year  =  2008 OR T1.year  =  2007 OR T1.year  = 2006 OR T1.year  = 2005"}
{"question": "Return the names of the customers who have not made any purchases in the last three months", "query": "SELECT T1.Customer_ID,  T1.Customer_Name,  T1.Customer_City,  T1.Customer_State,  T1.Customer_Zip,  T1.Customer_Phone,  T1.Customer_Email,  T1.Customer_Gender,  T1.Customer_Birthday,  T1.Customer_Hobby,  T1.Customer_Married,  T1.Customer_Children,  T1.Customer_Education,  T1.Customer_Income,  T1.Customer_Credit,  T1"}
{"question": "What is the name, type, and cost of the least expensive camera?", "query": "SELECT T1.name,  T1.\"type\",  T1.cost FROM camera AS T1 WHERE T1.cost  <  (SELECT min(T2.cost) FROM camera AS T2)"}
{"question": "What are the names and ages of students who are in the same dorm as you?", "query": "SELECT T1.student_id,  T1.name,  T1.age FROM dorm_students AS T1 WHERE T1.dorm_id  =  \"1\""}
{"question": "What are the names in alphabetical order of the books that have been written by all the authors?", "query": "SELECT T1.title,  T2.author FROM books AS T1 JOIN authors AS T2 ON T1.id  =  T2.book_id ORDER BY T1.title ASC"}
{"question": "What are the names and the ids of the companies that have more than 100 employees?", "query": "SELECT T1.company_name,  T2.id FROM company AS T1 JOIN employees AS T2 ON T1.id  = T2.company_id WHERE T1.employees  >  100"}
{"question": "\"Show the names and the descriptions of the videos from the site with the name \"movies\"", "query": "SELECT T1.video_name,  T1.video_description FROM video_info AS T1 WHERE T1.video_name  =  \"movies\""}
{"question": "What are the names on the list of people who have a certain number of books on their bookshelves?", "query": "SELECT T1.name FROM bookshelf AS T1 JOIN books AS T2 ON T1.book_id  =  T2.book_id WHERE T2.book_count  =  \"5\""}
{"question": "Show the name of the product with the highest price", "query": "SELECT T1.product_name,  T1.price FROM product AS T1 WHERE T1.price  >  (SELECT T2.price FROM product AS T2 WHERE T2.product_name  =  T1.product_name)"}
{"question": "What are the names, locations and prices of the products that have been sold at least once?", "query": "SELECT T1.name,  T1.location,  T1.price_in_dollars FROM product AS T1 WHERE T1.id  IN (SELECT T2.id FROM product AS T2 WHERE T2.price_in_dollars  > T1.price_in_dollas)"}
{"question": "List the names of all the employees with last name \"Doe\" and first name \"John\"", "query": "SELECT name FROM employees WHERE last_name  =  \"Doe\" AND first_name  =  \"John\""}
{"question": "What is the name and position of the man who has the most employees?", "query": "SELECT T1.employee_id,  T1.name,  T1.\"position\" FROM employee AS T1 WHERE T1.employee_id  =  (SELECT MAX(T2.employee_id) FROM employee AS T2)"}
{"question": "Find the average rate of the customers who do not live in this city", "query": "SELECT AVG(T1.rate) FROM customer AS T1 WHERE T1.city  =  'New York'"}
{"question": "What are the names and ids of the people who are friends with Sam?", "query": "SELECT T1.name,  T1.id FROM friends AS T1 JOIN friends AS T2 ON T1.friend_id  =  T2.friend_id WHERE T1.name  =  \"Sam\""}
{"question": "What are the names and addresses of all customers of bank \"SunTrust\" with account number 4567?", "query": "SELECT T1.customer_name,  T2.address_id FROM customer_account AS T1 JOIN customer_account_history AS T2 ON T1.account_id  =  T2.account_id WHERE T1.account_number  =  '4567'"}
{"question": "What are the names and addresses of all students with a high school diploma?", "query": "SELECT T1.first_name,  T1.last_name,  T1.address FROM student AS T1 WHERE T1.gradepoint  >  0 AND T1.gradepoint  <  5"}
{"question": "What are the ids and names of departments with names that contain the letters t, o, c and e?", "query": "SELECT T1.id,  T1.name FROM department AS T1 JOIN department_names AS T2 ON T1.name  =  T2.name WHERE T2.name LIKE  \"%t%\";"}
{"question": "What do the authors of the three books named \"The Art of War\" write?", "query": "SELECT T1.title FROM book AS T1 JOIN author AS T2 ON T1.book_id  =  T2.book_id WHERE T2.firstname  =  \"Sun-Tzu\" AND T2.lastname  =  \"Zhuge\""}
{"question": "What are all the countries which have the name 'Russia'?", "query": "SELECT T1.name FROM country AS T1 WHERE T1.name  = \"Russia\""}
{"question": "What is the average temperature for all dates that start with \"8\"?", "query": "SELECT date,  AVG(temperature) FROM weather WHERE date  BETWEEN '2008-01-01' AND '2008-12-31' AND date  LIKE '2008-0%' GROUP BY date"}
{"question": "Show the names of the movies for which the first three minutes are missing", "query": "SELECT T1.title FROM Movie AS T1 WHERE T1.first_three_minutes  =  \"\""}
{"question": "Return the names of all products that have the word \"Mars\" in the product title", "query": "SELECT product_name FROM products WHERE product_name LIKE \"%Mars%\""}
{"question": "Show the names of the students and the scores of the students in the first class", "query": "SELECT T1.student_id,  T1.score FROM student AS T1 JOIN class AS T2 ON T1.student_id  =  T2.[student_id] WHERE T1.student_id  IN (SELECT T3.student_id FROM student AS T3 WHERE T3.id  =  1)"}
{"question": "Find the average salary of all employees with a manager who has a degree in finance", "query": "SELECT AVG(salary) FROM employee WHERE manager_id  =  (SELECT id FROM employee WHERE degree_id  =  \"1\")"}
{"question": "What is the average number of days between the first date and the last date?", "query": "SELECT avg(DATEDIFF(day, T1.date_start, T1.date_end)) FROM table_name AS T1"}
{"question": "How much was the total value of all assets acquired by the company from the year 2002-03 to the year 2005-06?", "query": "SELECT T1.total_value FROM assets AS T1 JOIN asset_values AS T2 ON T1.asset_id  =  T2.asset_id WHERE T2.year  =  \"2002-03\" AND T2.year  =  T1.year"}
{"question": "(a novel question, about a data store table), before \"", "query": "Examples of some or all task item:"}
{"question": "(a novel question, about a particular table), after \"", "query": "A:"}
{"question": "What are the names, dates of birth, and genders of the people who are in the same room as the student named \"Alice\" in the dorm", "query": "SELECT T1.name,  T1.date_of_birth,  T1.gender FROM people AS T1 WHERE T1.name  = \"Alice\" AND T1.room_number  =  \"room\""}
{"question": "What is the name and location of the school with the largest number of students?", "query": "SELECT T1.school_name,  T1.location FROM school AS T1 JOIN school_students AS T2 ON T1.school_id  =  T2.school_id GROUP BY T1.school_id ORDER BY count(*)  DESC LIMIT 1"}
{"question": "What is the number of customers who bought a product from the restaurant called \"Le Petit Prince\"", "query": "SELECT COUNT(*) FROM customers WHERE customer_name  =  \"Le Petit Prince\""}
{"question": "Find the names of all students whose names contain the letters \"D\" and \"T\"", "query": "SELECT T1.name FROM students AS T1 WHERE T1.name LIKE \"%D%T%\""}
{"question": "What is the average number of rooms per apartment type?", "query": "SELECT avg(rooms) FROM Apartment_Facilities"}
{"question": "What is the highest and lowest salary of the employees who have been working for the company for 5 years?", "query": "SELECT max(salary),  min(salary) FROM employees WHERE years_of_service  =  5"}
{"question": "Find the total account", "query": "SELECT sum(account_balance) FROM account"}
{"question": "What is the average number of movies released per year for the last ten years?", "query": "SELECT AVG(T1.release_year) FROM movies AS T1"}
{"question": "How many clients called the company 'Ziggy' in the last month?", "query": "SELECT T1.client_name FROM client AS T1 WHERE T1.client_name  =  \"Ziggy\""}
{"question": "What are the first names of the captain of each ship?", "query": "SELECT T1.first_name FROM ship AS T1 WHERE T1.captain_id = (SELECT T2.first_name FROM captain AS T2 WHERE T2.id = T1.id)"}
{"question": "What is the id and age of the student who has the first name \"Anatol\"?", "query": "SELECT T1.student_id,  T1.age FROM student AS T1 WHERE T1.name  = \"Anatol\""}
{"question": "What is the count and average age of employees who work in the office located in the building with short name \"Colchester\"?", "query": "SELECT COUNT(*),  AVG(age) FROM employee WHERE building_id  =  'Colchester'"}
{"question": "Find all the students who are male", "query": "SELECT T1.name,  T1.* FROM student AS T1 WHERE T1.gender  =  'M'"}
{"question": "Find the name, age, and the number of occurrences of the student with the id=1", "query": "SELECT name,  age,  count(*) FROM student WHERE id  =  1"}
{"question": "What is the age range that has a minimum age of 16 and a maximum age of 19?", "query": "SELECT MIN(age),  MAX(age) FROM Customer"}
{"question": "What are the names, addresses, and phone numbers of customers who are active in the system during the next 3 days?", "query": "SELECT T1.customer_name,  T2.address_id,  T2.phone_number FROM customers AS T1 JOIN customer_address_history AS T2 ON T1.id  = T2.customer_id WHERE (T2.date_from <= '2014-12-01' AND T2.date_to >= '2014-12-01')"}
{"question": "Give the names of the athletes who received the most number of points", "query": "SELECT name FROM athlete WHERE points  =  (SELECT max(points) FROM athlete)"}
{"question": "Show the id of the account that has the most records in the account details table", "query": "SELECT T1.id FROM Account_Details AS T1 JOIN Accounts AS T2 ON T1.account_id  =  T2.account_id WHERE T2.id  =  (SELECT T3.id FROM Accounts AS T3 WHERE T3.name  =  \"Accounts\" )"}
{"question": "Find all the students from the second grade who are in the same classroom as John Wen", "query": "SELECT T1.student_id,  T1.student_name,  T1.student_grade,  T1.student_classroom,  T1.student_room,  T1.student.grade_id,  T1.grade.grade_name,  T1.grade.description,  T1.grade.min_grade,  T1.grade.max_grade,  T1.classroom.classroom_name,  T1.classroom_room,  T1.classroom,  T1.room.room_name,"}
{"question": "What are the first names and id numbers of the customers who bought products with the following prices: $150", "query": "SELECT T1.first_name,  T1.id FROM customer AS T1 WHERE T1.price_in_dollars  =  150"}
{"question": "Find all the students whose first name is \"Sam\"", "query": "SELECT name FROM student WHERE name  =  \"Sam\""}
{"question": "What are the names, ids and last names of all students in the university of Maryland? Return them in alphabetical order", "query": "SELECT T1.lastname,  T1.name_first,  \"T1.name_last\" FROM student AS T1 JOIN student_info AS T2 ON T1.student_id  =  T2._id GROUP BY T1.lastname,  \"T1.name\" ORDER BY T1.lastname, T1.name_first ;"}
{"question": "Find the names of all customers who purchased a car in the last three years", "query": "SELECT T1.name FROM customer AS T1 JOIN purchase AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.date_purchased  >  DATE_SUB(NOW(), INTERVAL 3 YEAR)"}
{"question": "Find the time that Tom and Joe were born", "query": "SELECT T1.name,  T1.date_of_birth FROM people AS T1 WHERE T1.name  =  \"Tom\" AND T1.date_of_birth  =  \"01/01/1990\" AND T1.name  =  'Joe' AND T1.date_of birth  =  \"01/01 /1990\""}
{"question": "What are the names, birth years, and hometowns of all the students in the class?", "query": "SELECT T1.name,  T1.birth_year,  T1.hometown FROM student AS T1"}
{"question": "How many flights are there?", "query": "SELECT count(*)  FROM flights"}
{"question": "(a novel question, about a new table)", "query": "SELECT name FROM Person"}
{"question": "How many students have a first name that is a palindrome?", "query": "SELECT T1.student_id,  T1.first_name,  (T1.first_name + T1.last_name) AS full_name FROM students AS T1 WHERE T1.first_name  =  (T1.first_number + T1.last_number)"}
{"question": "What is the name and position of the doctors who prescribe the medication whose brand is X?", "query": "SELECT DISTINCT T1.name,  T1.position FROM doctor AS T1 JOIN medication AS T2 ON T1.doctor_id  =  T2.doctor_id WHERE T2.brand  =  'X'"}
{"question": "How many students have a valid e-mail address?", "query": "SELECT COUNT(*) AS c FROM student WHERE email_address IS NOT NULL"}
{"question": "List the ids of the books purchased by the customer whose name is \"John Smith\"", "query": "SELECT T1.book_id FROM customer AS T1 JOIN purchases AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.name_first  =  \"John\" AND T2.name_last  =  \"Smith\""}
{"question": "List the number of employees in the company, ordered by age, with the oldest first", "query": "SELECT T1.age,  T1.name FROM employee AS T1 WHERE T1.age  >  ( SELECT min(age) FROM employee )"}
{"question": "(a novel question, about a table), after \"generate:\"", "query": "(the sql query to answer the query), after \""}
{"question": "Find the names of people who were at the same place on the same day and time", "query": "SELECT T1.name FROM person AS T1 JOIN event AS T2 ON T1.event_id  =  T2.id WHERE T2.place  =  \"San Francisco\" AND T2.time  =  \"10:00\" AND T2.day  =  \"Monday\""}
{"question": "What is the name and id of the student who has the highest score in basketball?", "query": "SELECT T1.student_id,  T1.score FROM student_score AS T1 WHERE T1.student_id  IN (SELECT T2.student_id FROM student_score AS T2 WHERE T2.score  >  T1.score)"}
{"question": "Find all the information for all employees without regard of department", "query": "SELECT T1.first_name,  T1.last_name,  T1.age,  T1.gender,  T1.hire_date,  T1.salary,  T1.department,  T1.manager,  T1.phone,  T1.email,  T1.address,  T1.city,  T1.state,  T1.zip,  T1.country,  T1.title,  T1.salary_type,  T1.department_name,  T1.manager_"}
{"question": "What is the name and id of each author?", "query": "SELECT T1.name,  T1.id FROM authors AS T1 WHERE T1.name  =  \"John Smith\""}
{"question": "What are the names in alphabetical order of the students who are enrolled in the \"Education\" course?", "query": "SELECT T1.firstname,  T1.lastname FROM students AS T1 WHERE T1.course  =  \"Education\" ORDER BY T1.firstname ASC"}
{"question": "What are the names, ages, and numbers of the students in the class of 2002?", "query": "SELECT T1.name,  T1.age,  T1.number FROM student AS T1 WHERE T1.year = 2002"}
{"question": "what is the total amount of all payments?, find the name of the employee whose account was credited with a check for $400", "query": "SELECT T1.name FROM employee AS T1 JOIN account AS T2 ON T1.emp_id  =  T2.emp_id JOIN account_item AS T3 ON T2.account_id  =  T3.account_id JOIN account_item_description AS T4 ON T3.item_id  =  T4.item_id WHERE T1.name  = \"John Doe\" AND T4.description  =  \"Check for $400\""}
{"question": "List all names of people", "query": "SELECT name FROM people"}
{"question": "What is the average length of the city of residence for the student whose first name is \"Kristin\"", "query": "SELECT AVG(LENGTH(city)) FROM student WHERE first_name  =  \"Kristin\""}
{"question": "What are the names and id of all employees below the age of 40?", "query": "SELECT T1.name,  T1.id FROM employees AS T1 WHERE T1.age  <  40"}
{"question": "What are the names and id numbers of all students taking a class that starts at 6:00 PM?", "query": "SELECT T1.name,  T1.id FROM student AS T1 JOIN class AS T2 ON T1.student_id  =  T2.student_id WHERE T2.start_time  =  '6:00 PM'"}
{"question": "List the names and salaries of employees who work in the same department in the same company", "query": "SELECT T1.first_name,  T1.last_name,  T1.salary FROM employees AS T1 JOIN employees AS T2 ON T1.department_id  =  T2.department_id WHERE T1.company_id  =  T2 .company_id"}
{"question": "What are the names and age of students who are graduating in a month?", "query": "SELECT T1.student_name,  T1.student_age FROM students AS T1 WHERE T1.graduation_date  =  \"2016-01-01\""}
{"question": "List the names of all the people who live in the city with name \"Sunny Hill\"", "query": "SELECT T1.name FROM people AS T1 WHERE T1.city  =  \"Sunny Hill\""}
{"question": "Find the names of all cities that are in the state of California", "query": "SELECT T1.city FROM city AS T1 JOIN state AS T2 ON T1.state_id  =  T2"}
{"question": "What are the details of the best-selling products of the year 2010?", "query": "SELECT T1.Product_ID,  T1.Product_Name,  T1.Product_Description,  T1.Product_Price,  T1.Product_Category_ID,  T1.Category_Name,  T1.Category_Description,  T1.Category_Price,  T1.Category_Image,  T1.Product_Image,  T1.Sale_Price,  T1.SaleStartDate,  T1.SaleEndDate,  T1.Sold_Quantity,  T1.SoldQuantity,  T"}
{"question": "What is the name for the first-grade teacher whose name begins with \"K\"?", "query": "SELECT name FROM teacher WHERE name  LIKE 'K%'"}
{"question": "Find the names of all the movies in which a member of the band was a main character", "query": "SELECT T1.movie_name FROM movie AS T1 JOIN band AS T2 ON T1.band_id  =  T2.band_id WHERE T2.member_id  =  T1.member_id"}
{"question": "Find the names of customers who have both saving and examining account types", "query": "SELECT T1.name FROM customers AS T1 JOIN account_types AS T2 ON T1.account_type  =  T2.account_type WHERE T1.name  =  \"John Doe\" AND T2.name  =  \"Saving\" AND T2.name !=  \"Examining\""}
{"question": "List the names and birthdays of all the players who have a birthday this month", "query": "SELECT T1.name,  T1.birthday FROM player AS T1 WHERE MONTH(T1.birthday)  =  MONTH(CURRENT_DATE)"}
{"question": "What is the average age of the students who has at least one allergies?", "query": "SELECT AVG(Age) FROM Student_Info WHERE Student_Info.student_id  IN (SELECT Student_Info.student_id FROM Student_Info WHERE Student_info.student_id  IN ( SELECT Student_Info.student_id, Student_Info.student_id AS student_id FROM Student_Info WHERE student_info.student_id  =  '1') AND Student_Info.student_id NOT IN (SELECT Student_Info.studentid FROM Student_Info WHERE StudentInfo.student_id  =  \"1\") )"}
{"question": "Find the names of cities whose city name contains the word \"Lorraine\"", "query": "SELECT city_name FROM city WHERE city_name LIKE \"%Lorraine%\""}
{"question": "What is the maximum number of students in a class?", "query": "SELECT T1.max_students FROM Class_Size AS T1 JOIN Class_Size_T2 AS T2 ON T1.class_id  =  T2.class_id WHERE T2.class_id  =  (SELECT class_id FROM Class_Size_T3 WHERE class_id  =  T1.class_id)"}
{"question": "Show the names of the city's employees who have no interest in martial arts", "query": "SELECT T1.firstname,  T1.lastname FROM employee AS T1 JOIN interest AS T2 ON T1.id  =  T2.employee_id WHERE T2.interest_id  =  0"}
{"question": "What are the ids in the table where the city is the default city?", "query": "SELECT T1.id FROM city AS T1 WHERE T1.city_id = 1"}
{"question": "What is the age of the highest number of students?", "query": "SELECT T1.age FROM students AS T1 WHERE T1.age  =  (SELECT MAX(T2.age) FROM students AS T2)"}
{"question": "Find the names and ids of female students who play the flute", "query": "SELECT T1.id,  T1.name_first,  'F' AS sex FROM student AS T1 WHERE T1.name_last  =  'S' AND T1.name_first  =  'F'"}
{"question": "What is the average height of all the students in the class?", "query": "SELECT AVG(height) FROM student;"}
{"question": "What is the maximum speed of the roller coaster?", "query": "SELECT MAX(speed) FROM roller_coaster"}
{"question": "What are the names and birth dates of all the students who have more than 2 scores?", "query": "SELECT T1.name,  T1.birth_date FROM student AS T1 JOIN scores AS T2 ON T1.id  =  T2.student_id WHERE T2.score  >  2"}
{"question": "What are the names or the first name of the employees who have the highest salary?", "query": "SELECT T1.first_name FROM employees AS T1 WHERE T1.salary  =  (SELECT max(T2.salary) FROM employees AS T2)"}
{"question": "(a question about a field in the table)", "query": "(the sql query to answer the query)"}
{"question": "(a question about a sql table) Show the names of students who have a major in Economics", "query": "SELECT T1.student_id FROM student AS T1 JOIN student_majors AS T2 ON T1.student_id  =  T2.student_id WHERE T2.major_code  =  \"Economics\""}
{"question": "What is the average score of the most recent tests?", "query": "SELECT AVG(score) FROM test_results"}
{"question": "Show the name of the institution that has the highest number of students on the football team", "query": "SELECT T1.name FROM student AS T1 JOIN team AS T3 ON T1.student_id = T3.student_id WHERE T3.team_id = (SELECT T2.team_id FROM team AS T2 WHERE T2.name = \"Football\")"}
{"question": "List the names of the customers with the most orders", "query": "SELECT name FROM customer WHERE order_count  =  \"max\""}
{"question": "What are the names and positions of the five employees who are in the finance department?", "query": "SELECT T1.employee_id,  T1.name_first,  'position' AS position,  T1.name_second,  T1.name_third,  T1.name_fourth,  T1.name_fifth FROM employee AS T1 GROUP BY T1.employee_id ORDER BY count(*)"}
{"question": "Find the number of songs whose title starts with \"Rocky\"", "query": "SELECT T1.song_id,  T1.song_title,  T1.song_artist,  T1.song_album,  T1.song_genre,  T1.song_length,  T1.song_year,  T1.song_rating,  T1.song_duration,  T1.song_bitrate,  T1.song_samplerate,  T1.song_channels,  T1.song_playtime,  T1.song_date,  T1.song_comment,  T"}
{"question": "What are all the students who are in ACCT 211?", "query": "SELECT T1.student_id FROM students AS T1 WHERE T1.course_code  =  \"ACCT 211\""}
{"question": "What is the average age of employees who are working in the city of San Francisco?", "query": "SELECT AVG(age) FROM employee WHERE city_code  =  'San Francisco'"}
{"question": "What are the names, ages, and salaries of all customers who have bought a car?", "query": "SELECT T1.customer_name,  T2.age,  T3.salary FROM customer_history AS T1 JOIN customer_history AS T2 ON T1.id  = T2.id JOIN customer_history AS T3 ON T2.id  = T3.id WHERE T1.id  =  '1'"}
{"question": "Find the average student's grades", "query": "SELECT avg(grade) FROM student"}
{"question": "In \"Nissan\" what is the name of the person that has the id of 6?", "query": "SELECT T1.name FROM employees AS T1 JOIN employees AS T2 ON T1.manager_id  =  T2.\"id\" WHERE T1.name  =  \"Nissan\" AND T2.name  =  \"Yasuhiro Nakajima\""}
{"question": "What is the name of the country where the company 'J", "query": "SELECT T1.Country_Name FROM Country_List AS T1 WHERE T1.Country_Name = \"J\""}
{"question": "What are the names, prices, and ids of the products that cost more than $10 but less than $20?", "query": "SELECT T1.name,  T1.price,  T1.id FROM product AS T1 WHERE T1.price  >  10 AND T1.price  <  20"}
{"question": "What are the names (first and last) of all students with gpa between 70 and 80? Give the student's id and name", "query": "SELECT name FROM student WHERE GPA  >  70 AND GPA  <  80"}
{"question": "What are the names and ids of the customers who bought the same products as others?", "query": "SELECT T1.id,  T1.name_first,  count(*) FROM customer AS T1 JOIN product AS T2 ON T1.customer_id  =  T2.customer_id AND T2.product_id  =  T1.product_id GROUP BY T1.id ORDER BY count(*) DESCRIBE;"}
{"question": "What is the average temperature at the end of the year?", "query": "SELECT AVG(temperature) FROM weather_data"}
{"question": "List the last names of students who are in the engineering department", "query": "SELECT T1.last_name FROM students AS T1 JOIN department AS T2 ON T1.department_id  =  T2._id WHERE T2.name  = \"Engineering\""}
{"question": "What is the name that has the highest number of students?", "query": "SELECT T1.name FROM student AS T1 WHERE T1.id  =  (SELECT T2.id FROM student AS T2 WHERE T2.name  =  \"John Smith\" AND T2.id  =  T1.name)"}
{"question": "What is the name, id, and city of all students who are enrolled in schools in the United States?", "query": "SELECT T1.id,  T1.name,  T1.city FROM Student AS T1 WHERE T1.school_id  IN (SELECT T2.id FROM School AS T2)"}
{"question": "(a novel question, about a question about a table)", "query": "SELECT T1.question_id FROM questions AS T1 JOIN questions AS T2 ON T1.question_id  =  T2.question_id WHERE T2.question_id  =  \"1\""}
{"question": "Find the id of the department where the highest percentage of employees are from the US", "query": "SELECT T1.dept_id FROM department AS T1 JOIN employee AS T2 ON T1.dept_id  =  T2.dept_id WHERE T2.country  =  'USA'"}
{"question": "What is the price of the product 'T-Shirt' and 'Sweater' and 'Pants' respectively?", "query": "SELECT price_in_dollars FROM product WHERE product_name  =  'T-Shirt'"}
{"question": "How many students are there in the Chemistry department?", "query": "SELECT COUNT(*) FROM students WHERE department_id = \"Chemistry\""}
{"question": "What is the name, first name and last name of the student whose major is \"Biology\"?", "query": "SELECT name,  first_name,  last_name FROM student AS T1 JOIN major AS T2 ON T1.student_id  =  T2.student_id WHERE T2.name  =  \"Biology\""}
{"question": "What is the number and gender of the students who are in the department of computer science?", "query": "SELECT T1.student_id,  T1.gender,  T1.department_id FROM student AS T1 WHERE T1.department_id  =  \"CS\""}
{"question": "What are the ids, names, and positions of the professors of the courses that have more than one prerequisities?", "query": "SELECT T1.course_id,  T1.course_name,  T1.course_position,  T1.prerequisites_id,  T1.prerequisite_name,  T1.prerequisit_position FROM course AS T1 JOIN prerequisites AS T2 ON T1.prerequisites_id  =  T2,"}
{"question": "What is the maximum distance from the city center that can be reached by trains with departure time between 5:30 and 8:00?", "query": "SELECT DISTINCT T1.city_name,  T1.city_latitude,  T1.city_longitude,  T1.distance_from_center,  T1.departure_time,  T1.departures,  T1.distance_to_center,  T1.id FROM trains AS T1 WHERE T1.departure_time  BETWEEN '05:30' AND '08:00' AND T1.distance_from_center  >  '0' AND T1.distance_to_center  <"}
{"question": "What is the name, address and phone number of each department of the company?", "query": "SELECT T1.name,  T1.address,  T1.phone_number FROM department AS T1 WHERE T1.name  =  \"Accounting\""}
{"question": "What is the name and address of every customer who visited the store \"GAP\" in the last week?", "query": "SELECT T1.customer_name,  T2.address FROM customers AS T1 JOIN visits AS T2 ON T1.id  = T2.customer_id WHERE date_from  =  '2016-01-01' AND date_to  =  '2016-01-' + (SELECT date_to FROM visits WHERE customer_id = T1.id)"}
{"question": "Find the first names of the students with the highest GPA?", "query": "SELECT T1.first_name FROM student AS T1 JOIN grades AS T2 ON T1.student_id  =  T2.student_id WHERE T2.grade  =  \"A\" ORDER BY T1.first_name"}
{"question": "What is the answer to the riddle \"The sun is yellow, like a lemon, the moon is made of blue cheese, and the earth's made of", "query": "SELECT T1.question_id,  T1.question_text,  T1.question_type,  T1.question_status,  T1.question_date,  T1.question_id,  (SELECT T2.question_id FROM questions AS T2 WHERE T2.question_id  =  T1.question_id ) AS parent_question_id,  T1.[question_text] AS question_text,  T1.answer_text,  T1.correct_answer,  T1.question_number,  T1.question"}
{"question": "How many employees are working in the building with \"id=43\"?", "query": "SELECT T1.employeeid,  T1.name,  T1.office_id,  T1.office_name,  T1.officeid,  T1.officename,  T1.officeaddress,  T1.officeaddress2,  T1.officeaddress3,  T1.officecity,  T1.officestate,  T1.officezip,  T1.officecountry,  T1.officephone,  T1.officefax,  T1.officeemail,  T1.officephone2,  T1.office"}
{"question": "What are the names, ordered by credits, of the players who scored more than 100 points?", "query": "SELECT T1.name,  T2.credits FROM player AS T1 JOIN scorecard AS T2 ON T1.player_id  =  T2._id WHERE T2.points  >  100"}
{"question": "What are the scores of students in the class with id 1227", "query": "SELECT T1.score FROM students AS T1 JOIN class AS T2 ON T1.class_id  =  T2.class_id WHERE T2.id  =  1227"}
{"question": "List the names and addresses of all customers whose address contains \"Brisbane\" and/or \"Gold Coast\"", "query": "SELECT T1.address_id,  T2.city FROM Customers AS T1 JOIN Address AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.address_id  IN ( SELECT T3.address_id FROM Address AS T3 WHERE T3.city LIKE '%Brisbane%' OR T3.city LIKE '%Gold%' )"}
{"question": "What is the first and last names of the customer who has sent an email to 'luisg@embraer'", "query": "SELECT T1.first_name,  T1.last_name FROM customers AS T1 WHERE T1.email  =  \"luisg@embraer\""}
{"question": "What is the age of the person who has the first name \"Christopher\"?", "query": "SELECT T1.age FROM Person AS T1 WHERE T1.first_name  =  \"Christopher\""}
{"question": "Find the name of the person with the last name of the last name of the last name that is the last name, and the last name of the last name", "query": "SELECT T1.last_name,  T2.first_name FROM Person AS T1 JOIN LastName AS T2 ON T1.last_name  =  T2.last_name"}
{"question": "List the ids of the projects that have been started since 2009", "query": "SELECT T1.project_id FROM project AS T1 WHERE T1.start_date  >  '2009-01-01'"}
{"question": "Find the names of customers who have a budget of more than 3000", "query": "SELECT T1.customer_first_name, T1.customer_last_name, T1.customer.budget FROM customer AS T1 JOIN customer_budget AS T2 ON T1.ID  =  T2.customer.id WHERE T2.budget  >  3000"}
{"question": "What is the number on the credit score of customer \"Smith\"?", "query": "SELECT T1.credit_score FROM customer AS T1 WHERE T1.cust_id = \"Smith\""}
{"question": "What is the name of the user who has the highest balance in her account?", "query": "SELECT T1.user_id,  T1.balance FROM user AS T1 JOIN account AS T2 ON T1.user_id  =  T2.[user_id] WHERE T2.account_id  =  (SELECT T3.account_id FROM account AS T3 WHERE T3.user_id  =  \"T1\")"}
{"question": "What are the names, salaries, and departments of the top ten university employees?", "query": "SELECT T1.name,  T1.salary,  T1.department FROM employee AS T1 WHERE T1.salary  >  (SELECT AVG(T2.salary) FROM employee AS T2) ORDER BY T1.salary DESC LIMIT 10"}
{"question": "What is the average age of all students who have taken at least one Statistics course?", "query": "SELECT T1.student_id,  T1.age FROM student AS T1 JOIN course AS T2 ON T1.student_id  =  T2.student_id JOIN statistics AS T3 ON T2.course_id  =  T3.course_id WHERE T3.name  = \"Statistics\""}
{"question": "Which films were made by the same director?", "query": "SELECT T1.film_id,  T1.film_name,  T1.director_id FROM film AS T1 JOIN film_director AS T2 ON T1.film_id  =  T2.film_id WHERE T2.director_id  =  \"TOMASZ\""}
{"question": "Q: What were the top 50 questions on Stack Overflow?", "query": "SELECT T1.question_id,  T1.title,  T1.creation_date,  T1.score,  T1.accepted_answer,  T1.view_count,  T1.answer_count,  T1.last_activity_date,  T1.last_active_ip,  T1.last_edit_date,  T1.owner_id,  T1.owner_display_name,  T1.owner_reputation,  T1.owner_email,  T1.owner_website,  T"}
{"question": "What is \"C\" in this column of a table?", "query": "SELECT T1.column_name FROM table_name AS T1 WHERE T1.column_name  =  \"C\""}
{"question": "Find the number of countries in which there are more than 10 people", "query": "SELECT count(*) AS c FROM country WHERE population  >  10"}
{"question": "What are the names, genders and cities of all faculty members?", "query": "SELECT T1.first_name,  T1.last_name,  T1.city FROM faculty AS T1 WHERE T1.is_staff  =  1"}
{"question": "Find the name of students who took a class in the years of 2009 and 2015", "query": "SELECT T1.student_id,  T1.name FROM students AS T1 JOIN class_attendance AS T2 ON T1.student_id  =  T2.student_id WHERE T2.year  =  2009 OR T2.year  =  2015"}
{"question": "What are the names for all the users, ordered by their age?", "query": "SELECT T1.name FROM users AS T1 JOIN users_age AS T2 ON T1.user_id  =  T2_user_id WHERE T2.age  =  \"<age>\""}
{"question": "Find the names of all courses that have a course description containing \"Computer Science\"", "query": "SELECT T1.course_name FROM course_description AS T1 JOIN course_name AS T2 ON T1.course_id  =  T2.course_id WHERE T2.course_name  =  \"Computer Science\""}
{"question": "Give the names of the colleges that have at least two players, using the first name of the players", "query": "SELECT T1.name FROM college AS T1 JOIN player AS T2 ON T1.college_id  =  T2.\"college_id\" WHERE T2.first_name  IN (SELECT T3.first_name FROM player AS T3)"}
{"question": "What are the books that are written by authors from \"Amerikastudios\" or \"Trolls\"?", "query": "SELECT name FROM book WHERE author IN (\"Amerikastudios\", \"Trolls\")"}
{"question": "What are the first few letters on the first page of the book?", "query": "SELECT TOP 3 name_first,  name_last FROM book WHERE page_number  =  1"}
{"question": "Find the names of all courses in the \"Art\" department", "query": "SELECT T1.name FROM course AS T1 JOIN department AS T1 ON T1.dept_id  =  T1.dept_id WHERE T1.dept_name  =  \"Art\""}
{"question": "Examples of some or all task item:", "query": "SELECT T1.question_id,  T1.question,  T1.answer,  T1.correct_answer,  T1.correct,  T1.id,  T1.question_type,  T1.question_id,  question_id,  question_type,  question_id,  T1._id,  T1.questionable_id,  T1.answerable_id,  T1._score,  T1.question_text,  T1.question_format,  T1.question_language,  T1"}
{"question": "What is the average income of students in the class of '101'?", "query": "SELECT AVG(transaction_amount) FROM Financial"}
{"question": "What is the age of the artist who sang the song \"Cry Me a River\" with the greatest average length of time as the vocalist?", "query": "SELECT T1.artist_name,  T1.artist_id,  T2.age FROM artist_singers AS T1 JOIN singer_artist_relationships AS T2 ON T1.artist_id  =  T2._artist_id WHERE T2.song_id  =  \"Cry Me a River\" AND T2.age  =  (SELECT avg(T3.age) FROM singer_artist_relationships T3 WHERE T3.artist_id  = T2.artist_id)"}
{"question": "Find the total account balances of customers who have a specific account number", "query": "SELECT T1.account_number,  T1.account_balance FROM Accounts AS T1 WHERE T1.account_number  =  \"12345678\""}
{"question": "What are the names on the list of employees who work at the store with the latest open year?", "query": "SELECT T1.first_name,  T1.last_name,  T1.store_id,  T1.store_name,  T1.empno,  T1.job_id,  T1.job_title,  T1.hire_date,  T1.hire_rate,  T1.hire_start_date,  T1.hiredate,  T1.salary,  T1.comm_id,  T1.comm_rate,  T1.comm_start_date,  T2.hire_"}
{"question": "What is the total cost of the products in the store?", "query": "SELECT SUM(price_in_dollars) FROM Catalog_Contents"}
{"question": "What are the names, and locations of the cities in Australia?", "query": "SELECT T1.name,  T1.location FROM city AS T1 JOIN country AS T2 ON T1.country_id  =  T2.\"id\" WHERE T2.name  =  \"Australia\""}
{"question": "What is the name, address, and phone number of the restaurant with the most deliveries?", "query": "SELECT name,  address,  phone_number FROM restaurant WHERE delivery_count  =  \"max\""}
{"question": "What are the first three letters of the names of the students who have won the student of the year award?", "query": "SELECT T1.student_id,  T1.name_first,  (SELECT name_last FROM student AS T2 WHERE T2.student_id  =  T1) FROM student AS T1 GROUP BY T1.student_id HAVING count(DISTINCT T2.name_last)  >=  3"}
{"question": "(a question about a sql table) Find the name of the students and the average of their grades in ascending order", "query": "SELECT T1.name,  avg(T2.grade) FROM student AS T1 JOIN grade AS T2 ON T1.stu_id  =  T2.stu_id GROUP BY T1.name ORDER BY avg(T2.grade) ASC"}
{"question": "Who is the largest investor in the company?", "query": "SELECT T1.investor_id,  T2.first_name,  T2.last_name,  T2.email,  T2.phone,  T2.address,  T2.city,  T2.state,  T2.zip,  T2.country,  T2.country_code,  T2.country_name,  T2.phone_number,  T2.email_address,  T2.gender,  T2.age,  T2.height,  T2.weight,  T2.d"}
{"question": "Show all of the questions about the database that have been answered in the last 24 hours", "query": "SELECT T1.question,  T2.answer FROM questions AS T1 JOIN answers AS T2 ON T1.id  = T2.id WHERE T1.time_stamp  >  '2016-01-01 00:00:00' AND T1.time_stamp <  '2016-01-01 23:59:59'"}
{"question": "Find the total account value for each customer from Texas or Florida", "query": "SELECT T1.account_value FROM customer AS T1 WHERE T1.state  =  \"Texas\" OR T1.state  =  'Florida'"}
{"question": "How many customers have the same first name?", "query": "SELECT T1.customer_first_name FROM customers AS T1 GROUP BY T1.customer_first_number HAVING count(*)  =  1"}
{"question": "What is the number of students that have more than one advisor?", "query": "SELECT T1.student_id,  T1.advisor_id FROM student AS T1 JOIN advisor AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*) > 1"}
{"question": "What are the names, location and products of the enzymes with any 'inhibitor' interaction? (inhibit means that the enzyme does not have the enzyme)", "query": "SELECT T1.enzyme_id,  T1.name,  T1.location,  T1.product_id FROM enzyme AS T1 WHERE T1.product_id IN (SELECT T2.product_id FROM product AS T2 WHERE T2.product_id  IN (SELECT T3.product_id FROM product AS t3 WHERE t3.product_id  IN ( SELECT T4.product_id FROM product AS  t4 WHERE t4.product_id IN ( SELECT T5.product_id FROM product AS   t5 WHERE t5.product_id IN"}
{"question": "What are the ids and names of the architects who built two bridges, or one mill?", "query": "SELECT T1.id,  T1.name FROM architects AS T1 JOIN building AS T2 ON T1.architect_id  =  T2.[id] WHERE T2.name  =  \"two bridges\" OR T2.name  =  'one mill'"}
{"question": "What are the names for the 3 types of students with the highest average score?", "query": "SELECT T1.student_id,  T1.name_first,  \"T1.name_last\" FROM student AS T1 JOIN student_grades AS T2 ON T1.student_id  =  T2.\"student_id\" GROUP BY T1.student_id ORDER BY AVG(T1.grade) DESC LIMIT 3;"}
{"question": "Find the names of all employees who have at least one child", "query": "SELECT T1.name FROM employee AS T1 JOIN employee_children AS T2 ON T1.employee_id  =  T2.employee_id WHERE T2.child_id  =  1"}
{"question": "\"What is the greatest and average capacity for rooms, in rooms?", "query": "SELECT room_capacity,  AVG(room_capacity) FROM rooms"}
{"question": "What are the names, addresses and telephone numbers of all banks in the United States?", "query": "SELECT T1.first_name,  T1.last_name,  T1.address_id,  T1.phone_number FROM bank AS T1 WHERE T1.country_code  =  'US'"}
{"question": "Find the total credits of courses provided at the same department", "query": "SELECT count(*)  FROM course_department"}
{"question": "What are the names, ids and the number of visits of four famous hotels?", "query": "SELECT T1.name,  T1.id,  T1.visit_count FROM hotels AS T1 WHERE T1.name  =  \"Four Seasons\" OR T1.name  =  'Four Seasons' OR T1.name  = 'Four Seasons' OR T1  =  'Four Seasons';"}
{"question": "How many customers have given multiple complaints?", "query": "SELECT T1.complaint_id,  T1.cust_id,  T1.complaint_date,  T1.complaint_type,  T1.complaint_status,  T1.complaint_reason,  T1.complaint_detail,  T1.complaint_location,  T1.complaint_city,  T1.complaint_state,  T1.complaint_country,  T1.complaint_phone,  T1.complaint_email,  T1.complaint_fax,  T1.complaint_web,  T1.complaint_name"}
{"question": "Find all the records in the database that have a negative balance and whose balance exceeds the maximum allowed balance", "query": "SELECT T1.id,  T1.name,  T1.balance,  T1.balance_max,  T1.balance_min,  T1.balance_range,  T1.balance_type,  T1.balance_status,  T1.balance_date,  T1.balance_amount,  T1.balance_currency,  T1.balance_paid_amount,  T1.status_date,  T1.status_code,  T1.status_text,  T1.status_id,  T1."}
{"question": "What are the names, birth dates, and genders of all the students in the class of 'Spring 2010' at the 'University of California, Berkeley'?", "query": "SELECT T1.name,  T1.birth_date,  T1.gender FROM students AS T1 WHERE class_code  =  'Spring 2010'"}
{"question": "What are the names in which the characters are from the movie \"The Shawshank Redemption\"", "query": "SELECT T1.name FROM characters AS T1 WHERE T1.name  =  \"Tim Robbins\""}
{"question": "A company with the id of \"C8\" has a contract with a company with the id of \"H5\"", "query": "SELECT T1.id,  T2.name FROM company AS T1 JOIN company_contract AS T2 ON T1.id  = T2.company_id WHERE T1.id  =  \"C8\" AND T2.id  =  \"H5\""}
{"question": "What is the sum of the population of all the states", "query": "SELECT sum(population) FROM state"}
{"question": "Find the number of cities that have more than one river", "query": "SELECT T1.city_name,  T1.city_id,  T1.river_id FROM cities AS T1 JOIN rivers AS T2 ON T1.city_id  =  T2.city_id WHERE T2.river_id  =  (SELECT river_id FROM rivers WHERE river_name  =  \"River\")"}
{"question": "What is the number of employees who are not part of any department?", "query": "SELECT T1.employeeid,  T1.name,  T1.dept_id,  T1.salary,  T1.gender,  T1.hire_date,  T1.hire_type,  T1.hire_status,  T1.hire_start_date,  T1.deptno,  T1.job_id,  T1.manager_id,  T1.phone,  T1.cell_phone,  T1.fax,  T1.email,  T1.address_id,"}
{"question": "What are the names and ids of the employees who have the highest number of employees?", "query": "SELECT T1.name,  T2.id FROM employees AS T1 JOIN employees AS T2 ON T1.employee_id  =  T2.employee_id GROUP BY T1.name ORDER BY T1.name"}
{"question": "What is the name and number of the person that has the most number of accounts?", "query": "SELECT T1.name,  T1.number FROM customer_accounts AS T1 WHERE T1.number  =  (SELECT max(number) FROM customer_accounts)"}
{"question": "Find the names of all schools with a population between 50 and 75K", "query": "SELECT name FROM school WHERE population  >  50 AND population  <  75000"}
{"question": "What are the names, and first names of the students with a score of 10 or more for the course X-23?", "query": "SELECT T1.name,  T1.first_name FROM students AS T1 JOIN course_attendance AS T2 ON T1.student_id  =  T2.student_id WHERE T2.course_id  =  \"X-23\" AND T2.score  >  10"}
{"question": "What is the id and name of the customer who has the most accounts?", "query": "SELECT T1.customer_id,  T1.customer_name FROM customers AS T1 WHERE T1.customer_id  =  (SELECT MAX(T2.customer_id) FROM customers AS T2)"}
{"question": "What are the names and departments of all the faculty members who participated only in the conference?", "query": "SELECT T1.lastname,  T1.firstname,  T2.department FROM faculty AS T1 JOIN conference AS T2 ON T1.id  =  T2.faculty_id WHERE T2.conference_id  =  '1'"}
{"question": "Find the titles of movies with ratings from 4 to 5 stars", "query": "SELECT T1.title FROM Rating AS T1 WHERE T1.rating  =  4 AND T1.rating  =  5"}
{"question": "What is the average age in the USA?", "query": "SELECT AVG(age) FROM person"}
{"question": "What is the average cost of the car for all models of the car \"Acura\"?", "query": "SELECT AVG(cost) FROM car_model WHERE car_model.car_id  =  \"Acura\""}
{"question": "What is the name and salary of the instructor who advises students in the History?", "query": "SELECT T1.Name,  T1.salary FROM instructor AS T1 WHERE T1.name  =  \"John Smith\" AND T1.salary  =  \"$100,000\""}
{"question": "Show the average age of students living in the dorm", "query": "SELECT avg(age) FROM STUDENT WHERE dorm_id  =  \"1\""}
{"question": "What are the names, addresses, and IDs of the customers who ordered the least number of products?", "query": "SELECT name FROM customer WHERE order_count  =  (SELECT min(order_count) FROM customer)"}
{"question": "(a question about a sql table) The number of employees with the ID of 50", "query": "SELECT T1.name,  COUNT(*) FROM employee AS T1 WHERE T1.id  =  50"}
{"question": "What are the names, birthdays and last names of all the students in the university?", "query": "SELECT T1.firstname,  T1.lastname,  T1.birthday FROM students AS T1 WHERE T1.id  =  (SELECT T2.id FROM students AS T2 WHERE T2.id  =  T1.id)"}
{"question": "What is the first year in the history of the class \"Computer Science\"?", "query": "SELECT year FROM class WHERE name  =  \"Computer Science\""}
{"question": "What are the average, minimum, maximum, maximum transaction amount, and total transaction amount of all customers?", "query": "SELECT AVG(Amount),  AVG(Min_Amount),  AVG(Max_Amount),  AVG (Max_Amount) - AVG(Min_Amount), count(*) FROM customer GROUP BY customer_id;"}
{"question": "What are the last names of authors who have made a book that is in English?", "query": "SELECT T1.last_name FROM author AS T1 WHERE T1.language  =  'English'"}
{"question": "Given:\nquestion = a list of questions about a sql table", "query": "SELECT T1.question_id,  T1.question,  T1.answer,  T1.correct_answer,  T1.correct,  T1.question_type,  T1.question_id,  COUNT(*) AS total_correct FROM questions AS T1 GROUP BY T1.question_id ORDER BY T1.question_id"}
{"question": "What is the population of each state?", "query": "SELECT state_id,  population FROM states"}
{"question": "What are the states and their populations in the US?", "query": "SELECT state_id,  population FROM states"}
{"question": "What is the name and address of the company that makes the machine that makes the most money in the world", "query": "SELECT name,  address FROM company WHERE revenue  =  (SELECT max(revenue) FROM machine)"}
{"question": "List the names and addresses of all the shops that are located in the same city as the one named 'Apple'", "query": "SELECT T1.store_name,  T1.address_line1,  T1.address_city,  T1.address_state,  T1.address_zip,  T1.address_country FROM store AS T1 JOIN address AS T2 ON T1.store_id  =  T2.store_id WHERE T2.name  = 'Apple'"}
{"question": "What are the names, ordered by salary, of the five employees in the office of the company that sells the product \"Toyota\"?", "query": "SELECT T1.first_name,  T1.last_name,  T1.salary FROM employees AS T1 WHERE T1.company_id  =  \"Toyota\" ORDER BY T1.salary"}
{"question": "What is the name, salary, and email of the employee with the id of 12?", "query": "SELECT name,  salary,  email FROM employees WHERE employeeid  =  12"}
{"question": "What are the names, hometowns, and salaries of instructors whose class are in the same building as the Computer Science department?", "query": "SELECT T1.instructor_name,  T1.hometown,  T1.salary FROM instructor AS T1 JOIN instructor_class AS T2 ON T1.instructor_id  =  T2.instructor_id WHERE T2.class_id  =  'CS'"}
{"question": "What is the first letter of the name of the student who has an email of \"lisa@email", "query": "SELECT T1.first_name,  T1.last_name,  T1.email FROM student AS T1 WHERE T1.email  =  \"lisa@email\""}
{"question": "What are the names, ids, and email addresses of all customers who have not completed an order?", "query": "SELECT customer_id,  customer_first_name,  customer_last_name,  email_address FROM customers WHERE customer_id  = ? AND customer_status  =  'unconfirmed'"}
{"question": "What are the first names of the students who have a grade point average of 3", "query": "SELECT T1.name FROM student AS T1 JOIN grade AS T2 ON T1.id  =  T2.student_id WHERE T2.grade  =  3"}
{"question": "What is the name and first name of the customer who has the record of purchase in the month of July (2010)?", "query": "SELECT T1.customer_name,  T2.first_name FROM customer AS T1 JOIN order_history AS T2 ON T1.id  = T2.customer_id AND T2.month  =  \"July\""}
{"question": "How many students are in the class taught by professor \"David J", "query": "SELECT count(*) AS count FROM student WHERE professor_name = \"David J\""}
{"question": "What is the number that is a multiple of 8?", "query": "SELECT T1.number FROM numbers AS T1 WHERE T1.number % 8 = 0"}
{"question": "Give the city and address for the store that sold the most computers", "query": "SELECT T1.city,  T1.address FROM store AS T1 JOIN sales AS T2 ON T1.store_id  =  T2.[store_id] WHERE T2.quantity  =  '1'"}
{"question": "What are the names, prices, and shipping costs of all the products", "query": "SELECT T1.name,  T1.price,  T1.shipping_cost FROM product AS T1 WHERE T1.id  =  (SELECT T2.id FROM product AS T2 WHERE T2.name  =  T1.name)"}
{"question": "What are the names, locations and ids of all of the students?", "query": "SELECT T1.student_name,  T1.student_location,  T1.student_id FROM student AS T1 JOIN class AS T2 ON T1.student_id  =  T2.student_id JOIN school AS T3 ON T2.school_id  =  T3.school_id JOIN school_district AS T4 ON T3.school_id  =  \"T4.school_id\" WHERE T1.student_id  >  0"}
{"question": "How many employees are under 20?", "query": "SELECT T1.employee_id,  T1.employee_name,  T1.employee_age FROM employee AS T1 WHERE T1.employee_age  <  20"}
{"question": "What is the first and last name of all students in course ACCT - 211?", "query": "SELECT T1.first_name,  T1.last_name FROM student AS T1 WHERE T1.course_code  =  \"ACCT - 211\""}
{"question": "What is the name for the customer with id = 6?", "query": "SELECT customer_name FROM customers WHERE customer_id = 6"}
{"question": "Find the names of each of the following:", "query": "SELECT T1.name FROM customer AS T1 JOIN order AS T2 ON T1.id  =  T2.customer_id WHERE T2.order_date  =  '2001-01-01'"}
{"question": "What is the highest grade that the student has ever received?", "query": "SELECT MAX(grade) FROM student_grade"}
{"question": "Find the name of all employees who were hired during or after 2009", "query": "SELECT name FROM employee WHERE hire_date  >=  2009"}
{"question": "(a question about a sql table) How many students have personal names that require the first letter of the first name to be lowercase?", "query": "SELECT T1.student_id FROM Student AS T1 WHERE T1.first_name  LIKE  \"%[a-z]%\""}
{"question": "What is the most popular genre of all songs?", "query": "SELECT T1.genre FROM song AS T1 WHERE T1.num_songs  >  (SELECT count(*) FROM song AS T2 WHERE T2.num_songs  > 0)"}
{"question": "What are the names in each location?", "query": "SELECT T1.location,  T2.name FROM location AS T1 JOIN city AS T2 ON T1.city_id  =  T2.city_id"}
{"question": "What are the ids for the people who have worked at least two jobs?", "query": "SELECT T1.employeeid FROM employees AS T1 JOIN job_history AS T2 ON T1.job_id  =  T2.job_id WHERE T2.job_id  =  (SELECT job_id FROM job_history WHERE job_id  =  (SELECT min(job_id) FROM job_history GROUP BY job_id))"}
{"question": "(a different question) What are the names of all instructors who have ever been a part of the Computer Science department?", "query": "SELECT T1.instructor_name FROM instructor AS T1 JOIN department AS T2 ON T1.department_id  =  T2.department_id WHERE T2.department_name  =  \"Computer Science\""}
{"question": "Find the name of the employee with the most number of products", "query": "SELECT T1.name FROM employee AS T1 JOIN product_details AS T2 ON T1.employee_id  =  T2.employee_id WHERE T2.product_id  =  1;"}
{"question": "List all the courses in which there are only one male student, one female student, and one male instructor", "query": "SELECT course_name,  count(*) AS \"Number of Male Students\" FROM course WHERE gender  = 'male' AND count(*)  =  1"}
{"question": "What are the names, as well as the average gradepoint, of all products that are not made in China?", "query": "SELECT T1.name,  T2.gradepoint FROM product AS T1 JOIN product_category AS T2 ON T1.product_id  =  T2.[product_id] WHERE T2.country  =  'China' AND T1.name  =  'not made in China'"}
{"question": "What is the title of the movie in which Michael Caine played the role of the main character?", "query": "SELECT title FROM movies WHERE title  =  \"The Italian Job\""}
{"question": "What is the name and salary of instructors whose average salary is below the average salary of all instructors", "query": "SELECT T1.Name,  T1.salary FROM instructor AS T1 JOIN (SELECT AVG(salary) AS average FROM instructor) AS T2 ON T1.average  =  T2.average"}
{"question": "What are the names and salaries for the students who earn more than the average salary of students in the Physics department?", "query": "SELECT T1.name,  T1.salary FROM students AS T1 JOIN (SELECT T2.name,  T2.salary FROM students AS T2 GROUP BY T2.name,  T1.name) AS T3 ON T1.name  =  T3.name AND T1.salary  >  T3.salary"}
{"question": "List the names and title of all managers at the company", "query": "SELECT T1.firstname,  T1.lastname,  T1.title FROM employee AS T1 JOIN manager AS T2 ON T1.manager_id  =  T2.\"manager_id\""}
{"question": "What are the names, in descending order of the number of employees, of the companies that are listed in our database?", "query": "SELECT T1.name,  T2.number_of_employees FROM company AS T1 JOIN employees AS T2 ON T1.company_id  =  T2.company_id ORDER BY T1.number_of_employees DESC"}
{"question": "What are the addresses and author IDs of the author who wrote the book \"Gambit\" when the total number of characters is more than 100?", "query": "SELECT author_id,  address,  author_id FROM author WHERE author_id  =  \"Gambit\" AND total_characters  >  100"}
{"question": "What is the name, city and number of the student who is a member of the student leadership council?", "query": "SELECT T1.student_id,  T1.name_first,  'S' AS type,  T1.name_second,  T1.city,  T1.student_number FROM student AS T1 WHERE T1.student_id  =  (SELECT T2.student_id FROM student AS T2 WHERE T2.name_first  =  'S' AND T2.name_second  =  'S' AND (T2.name_first  = 'S' OR T2.name_second  ='S'))"}
{"question": "What are the numbers of students studying computer science?", "query": "SELECT count(*) AS num_students FROM students WHERE major  =  \"computer science\""}
{"question": "List the names of people who have been the most frequently mentioned on the \"Roxanne\" show", "query": "SELECT T1.name FROM show AS T1 JOIN character AS T2 ON T1.character_id  =  T2"}
{"question": "What are the name and id of the company that bought the largest number of shares of Mango?", "query": "SELECT T1.company_name,  T2.id FROM company AS T1 JOIN company_stock_history AS T2 ON T1.company_id  =  T2._id WHERE T2.shares  =  '100'"}
{"question": "What is the name, first_name, and last_name of the person who has the highest mark?", "query": "SELECT name,  first_name,  last_name FROM student WHERE mark  =  (SELECT max(mark) FROM student)"}
{"question": "What is the number and gender of all students?", "query": "SELECT T1.student_id,  T1.student_name,  T1.student_gender,  T1.student_age,  T1.student_address_type_code FROM students AS T1 WHERE T1.student_age  >  0"}
{"question": "what are the names and ages of the children in the family that lives in the house with green lawns and trees?", "query": "SELECT T1.child_name,  T1.child_age FROM family AS T1 WHERE T1.house_id  =  '1' AND T1.house_color  =  'green' AND T1.house_type  =  'house' AND T1.house_num  =  '1' AND ( T1.child_name  =  'John' OR T1.child_name  ==  'John' ) AND ( T1.child_age  =  '10' OR T1.child_age  ==  '10' )"}
{"question": "What are the names (in any order), of all restaurants that have a vegetarian meal?", "query": "SELECT T1.name FROM restaurant AS T1 WHERE T1.meal_type  = 'vegetarian'"}
{"question": "What are the names, id numbers and genders of all the employees at company \"Titanium Software\"?", "query": "SELECT T1.name,  T1.id,  T1.gender FROM employees AS T1 WHERE T1.company_id  =  \"Titanium Software\""}
{"question": "Find the names of students with an age between 20 and 25", "query": "SELECT T1.student_name FROM student AS T1 WHERE T1.age  =  \"20\" AND T1.age  =  25"}
{"question": "What is the first, last, and middle name of the student who has the email address \"luisg@embrae", "query": "SELECT first_name  FROM student WHERE email  =  \"luisg@embrae\";"}
{"question": "Show the names of the people who have attended more than three sessions", "query": "SELECT T1.name FROM people AS T1 JOIN sessions AS T2 ON T1.person_id  =  T2._id GROUP BY T1.name HAVING count(*)  =  3"}
{"question": "(a novel question, about a'sql' table), after \"", "query": "Examples of some or all task item:"}
{"question": "Give the names of all students who took classes in 2011 and 2012", "query": "SELECT name FROM student WHERE year(graduation_date)  =  2011 OR year(graduation_date) = 2012"}
{"question": "What are the students' names and addresses?", "query": "SELECT T1.student_first_name,  T1.student_last_name,  T1.address_type_code,  T1.address_street,  T1.address_city,  T1.address_state,  T1.address_zip,  T1.address_country FROM students AS T1"}
{"question": "Find the students who have the most friends in common with each other", "query": "SELECT T1.student_id,  T1.name,  T1.fname,  T1.lname,  T1.major,  T1.GPA,  T1.email,  T1.phone,  T1.address_id,  T1.city,  T1.state_code,  T1.country,  T1.* FROM students AS T1 JOIN friends AS T2 ON T1.student_id  =  T2.* WHERE T2.student_id  =  '*'"}
{"question": "Which of the following is the location of the school where the best students are selected?", "query": "SELECT T1.city,  T1.state,  T1.* FROM school AS T1 WHERE T1.city  =  \"New York\" AND T1.state  =  \"New York\""}
{"question": "What are the first names of the students who live in the dorm with the most number of students?", "query": "SELECT T1.first_name FROM dorm AS T1 JOIN dorm_students AS T2 ON T1.dorm_id  =  T2.dorm_id WHERE T2.num_students  =  \"most\""}
{"question": "What is the first three letters of the first name of the customer who has email \"luisg@gcu", "query": "SELECT T1.first_name FROM customer AS T1 WHERE T1.email  =  \"luisg@gcu\""}
{"question": "show the number of students who have a car", "query": "SELECT count(*)  FROM students WHERE student_has_car"}
{"question": "How many students enrolled for the course ACCT-211?", "query": "SELECT count(*) AS \"Total\" FROM students AS T1 JOIN enrollment AS T2 ON T1.student_id  =  T2"}
{"question": "How many employees are there in the department of computer science?", "query": "SELECT count(*)  FROM employee WHERE department_id  =  'Computer science'"}
{"question": "Which of the following is not a characteristic of a 'normal' human?", "query": "SELECT count(*) AS total FROM person WHERE age  <  30"}
{"question": "List the number of customers who are not from England", "query": "SELECT T1.customer_id,  T1.country_code,  T1.state_code,  T1.city_code,  T1.first_name,  T1.last_name,  T1.gender,  T1.dob,  T1.dod,  T1.ssn,  T1.dno,  T1.address_id,  T1.phone_number,  T1.email_address,  T1.credit_card_number,  T1.credit_limit,  T1."}
{"question": "What are the names, last names, addresses and phone numbers of all the students of the College of Medicine?", "query": "SELECT T1.name,  T1.last_name,  T1.address,  T1.phone_number FROM student AS T1 WHERE T1.college_id  =  'College of Medicine'"}
{"question": "How many different managers are listed? List the name and id of each manager", "query": "SELECT name,  id FROM managers"}
{"question": "List the names of all students who have studied at different institutions", "query": "SELECT T1.student_name FROM student AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id WHERE T2.school_name  =  \"MIT\" OR T2.school_name  ==  \"Harvard\" OR T2.school_id  =  \"MIT\" OR  T2.school_id  = \"Harvard\""}
{"question": "What are the ids and names of all the customers who made a balance transfer at the beginning of the month?", "query": "SELECT T1.customer_id,  T1.customer_name FROM customer AS T1 WHERE T1.balance_transfer_date  =  \"01/01/2015\""}
{"question": "What is the name and age of the first-born child of the student of a university?", "query": "SELECT T1.name,  T1.age FROM students AS T1 JOIN parents AS T2 ON T1.parent_id  =  T2.[id] WHERE T1.student_id  ==  T2.[id] AND T1.age  ==  (SELECT min(age) AS age FROM students WHERE student_id  ==  T2.id)"}
{"question": "List the names of all customers who are not living in the city of NYC", "query": "SELECT T1.customer_name FROM customer AS T1 WHERE T1.city  =  'NYC'"}
{"question": "How many departments have a student population of less than 100?", "query": "SELECT count(*) AS \"Total\" FROM department WHERE student_population  <  100"}
{"question": "Find the names of vehicles that have been manufactured in the past two years", "query": "SELECT T1.vehicle_name FROM vehicle AS T1 JOIN vehicle_model_history AS T2 ON T1.vehicle_id  =  T2.vehicle_id WHERE T2.year  >  \"2014\" AND T2.year  <  \"2015\""}
{"question": "Find the number of authors and students in each dorm", "query": "SELECT T1.dorm_name,  T1.dorm_capacity,  T1.dormitory_type,  T1.dormant_capacity,  T1.student_count,  T1.student_capacity,  T1.teacher_count,  T1.teacher  FROM dormitory AS T1 JOIN dorm AS T2 ON T1.dorm_id  =  T2.[dorm_id] JOIN dorm_student AS T3 ON T1.dorm_number  =  T3.dorm_number JOIN dorm_"}
{"question": "What is the average age of the group of people whose names begin with the letter 'S'?", "query": "SELECT AVG(age) FROM student WHERE name  LIKE 'S%'"}
{"question": "What are the first names and departments of all employees?", "query": "SELECT T1.FirstName,  T1.Department FROM employees AS T1;"}
{"question": "Find the names and locations of all tracks", "query": "SELECT T1.name,  T1.location FROM track AS T1 WHERE T1.location  =  \"null\""}
{"question": "(A question about a sql table)", "query": "(the sql query to answer the query)"}
{"question": "List the names and ages of all employees and their respective job titles", "query": "SELECT T1.name,  T1.\"job title\" FROM employee AS T1;"}
{"question": "Find the names of the students that are first in their class", "query": "SELECT T1.student_id,  T2.student_first_name,  T3.student_last_name,  T4.student_first_name FROM students AS T1 JOIN students AS T2 ON T1.id  =  T2.id JOIN students AS T3 ON T2.id  =  T3.id GROUP BY T1.student_id, T2.student_first_name, T3.student_last_name, T4.student_first_name"}
{"question": "(a novel question, about a dictionary table), after \"", "query": "SELECT * FROM ("}
{"question": "(a novel question, about a question about a table), after \"", "query": "(the sql query to answer the query), after \""}
{"question": "Find the number of authors named \"Juan\"", "query": "SELECT count(*) AS \"count\" FROM authors WHERE name = \"Juan\""}
{"question": "What is a table of all the products, where the name of the product is a unique key?", "query": "SELECT T1.product_name,  T1.product_price FROM product AS T1 WHERE T1.product_name  =  (SELECT T2.product_name FROM product AS T2 WHERE T2.product_name  =  \"X\")"}
{"question": "What are the names, and when did they graduate, of the students who won the most championships?", "query": "SELECT T1.name,  T2.year FROM student AS T1 JOIN championships AS T2 ON T1.id  =  T2.id WHERE T2.won  =  1"}
{"question": "What are the names, ages and genders of students who take the course 'Intro to Computer Science' in the spring term?", "query": "SELECT name,  age,  gender FROM students WHERE course_id = 'Intro to Computer Science'"}
{"question": "Find the name and id of all the employees who are not from the United States", "query": "SELECT T1.name,  T1.\"id\" FROM employee AS T1 WHERE T1.country  =  \"United States\""}
{"question": "How many employees are in the department of \"Electrical Engineering\" in the year 2007", "query": "SELECT COUNT(*) FROM employees WHERE department_name = \"Electrical Engineering\""}
{"question": "Find the number of flights that have a time of departure less than or equal to 08:00", "query": "SELECT count(*) from flight WHERE departure_time  <=  '08:00'"}
{"question": "What is the mean, minimum and maximum temperature for all months of the year?", "query": "SELECT T1.month,  T2.temperature FROM Weather AS T1 JOIN Weather_Monthly AS T2 ON T1.year  =  T2.year WHERE T1.year  =  '2016'"}
{"question": "What are the names, and birth dates, of all students whose last name starts with the letter B, and whose first letter is V or W?", "query": "SELECT T1.first_name,  T1.last_name,  T1.birth_date FROM students AS T1 WHERE T1.last_name  LIKE \"B%\" AND T1.first_name  LIKE \"V%\" OR T1.first_name  =  \"W%\""}
{"question": "Find the names of all the customers with the name \"George\"", "query": "SELECT T1.customer_first_name, T1.customer_last_name, T1.customer.id FROM customers AS T1 JOIN customers_addresses AS T2 ON T1.ID  =  T2.customer.id WHERE T2.address_type_code  =  \"Home\" AND T2.address_type_name  =  \"Home\" AND  T1.customer_name  =  \"George\""}
{"question": "What is the id and the name of the employee with the most recent salary?", "query": "SELECT T1.id,  T1.name FROM employee AS T1 WHERE T1.salary  =  (SELECT max(T2.salary) FROM employee AS T2)"}
{"question": "What is the name of the customer who has the highest number of movies?", "query": "SELECT T1.name FROM customer AS T1 JOIN movie AS T2 ON T1.customer_id  = T2.customer_id WHERE T2.movie_id  =  (SELECT max(movie_id) FROM movie)"}
{"question": "What are the names, locations and number of students attending the courses XB-101 and YA-103?", "query": "SELECT T1.name,  T1.location,  T1.students FROM course AS T1 JOIN student AS T2 ON T1.course_id  =  T2.course_id WHERE T2.name  =  \"XB-101\" AND T2.name  =  'YA-103';"}
{"question": "What are the names that have been mentioned in the conversation?", "query": "SELECT T1.player_name FROM player AS T1 JOIN conversation AS T2 ON T1.name_first  =  T2.name_first JOIN player_name AS T3 ON T2.player_id  =  'T3.player_id' WHERE T3.name_last  =  'T4.name_last'"}
{"question": "How many students are in the computer science department?", "query": "SELECT count(*)  FROM STUDENT AS T1 JOIN DEPARTMENT AS T2 ON T1.DeptID  =  T2.DeptID WHERE T2.DeptName  =  \"Computer Science\""}
{"question": "What are the names and ids of the products having the most problems?", "query": "SELECT product_name,  product_id FROM products WHERE product_status  =  'problem' ORDER BY count(*) DESC"}
{"question": "How many different colors were in all the cars?", "query": "SELECT DISTINCT color FROM Car"}
{"question": "What is the number of votes that the youngest candidate received?", "query": "SELECT T1.age,  T2.vote_count FROM candidates AS T1 JOIN votes AS T2 ON T1.candidate_id  =  T2.candidate_id WHERE T1.age  =  T2.age ORDER BY T2.vote_count DESC"}
{"question": "What is the name, location, and number of the restaurant that has the most number of reviews?", "query": "SELECT T1.restaurant_name,  T1.location,  T1.reviews FROM restaurant AS T1 WHERE T1.reviews  >  (SELECT max(reviews) FROM restaurant)"}
{"question": "What are the names and the last names of the people who have been hired in the last two months?", "query": "SELECT T1.last_name,  T1.first_name FROM employees AS T1 WHERE T1.joined_date  >  DATE_SUB(NOW(), INTERVAL 2 MONTH)"}
{"question": "What is the id and first name of the doctor who has the most number of patients?", "query": "SELECT T1.id,  T1.firstname FROM patient AS T1 JOIN doctor AS T2 ON T1.doctor_id  =  T2.[id] WHERE T2.firstname  =  \"Dr. Smith\""}
{"question": "What is the name of the artist who owns the most number of songs about cars?", "query": "SELECT T1.artist_id,  T1.name FROM artist AS T1 JOIN songs AS T2 ON T1.artist_id  =  T2.artist_id WHERE T2.song_type  =  'car' GROUP BY T1.artist_id ORDER BY count(*)"}
{"question": "(a novel question, about a h", "query": "(the sql query to answer the query)"}
{"question": "What are the names, ages, and genders of the people in the photo with names in order from left to right?", "query": "SELECT T1.name,  T1.age,  T1.gender FROM people AS T1 WHERE T1.name  IN (SELECT T2.name FROM people AS T2 WHERE T2.name  IN (SELECT T3.name FROM people AS T3 WHERE T3.name  IN (SELECT T4.name FROM people AS T4 WHERE T4.name  IN (SELECT T5.name FROM people AS T5 WHERE T5.name  IN (SELECT T6.name FROM people AS T6 WHERE T6.name  IN (SELECT T7.name FROM people AS"}
{"question": "\"Find the name of the people who have not had any accidents in the last week\", after \"", "query": "SELECT T1.name_first,"}
{"question": "What is the number of employees working on a project with a name like \"Diana\" or \"Elyse\" and a name like \"Diana\"", "query": "SELECT COUNT(*) FROM employees WHERE first_name  =  \"Diana\" OR first_name  =  \"Elyse\" AND last_name  =  \"D\""}
{"question": "What are the names, ages, and genders of all the students in the class?", "query": "SELECT T1.name,  T1.age,  T1.gender FROM students AS T1 WHERE T1.class_id  =  '1'"}
{"question": "What is the average age of the students?", "query": "SELECT AVG(age) FROM Student"}
{"question": "What is the name, address, and phone number of the customer who has the highest value in the products purchased", "query": "SELECT T1.customer_name,  T2.address,  T2.phone_number FROM customers AS T1 JOIN orders as T2 ON T1.customerid = T2.customerid WHERE T2.order_amount  =  (SELECT MAX(T3.order_amount) FROM orders AS T3)"}
{"question": "Show the names of the universities where the author \"William Shakespeare\" studied", "query": "SELECT T1.university_name FROM author AS T1 JOIN university AS T2 ON T1.university_id  =  T2._id WHERE T1.name  =  \"William Shakespeare\""}
{"question": "Find the first and last name of the student that is living in the dorm that has amenity TV Lounge", "query": "SELECT T1.student_first_name,  T1.student_last_name FROM students AS T1 JOIN dorm_rooms AS T2 ON T1.dorm_id  =  T2.dorm_id JOIN dorm_amenities AS T3 ON T2.dorm_id  = T3.dorm_id JOIN dorm_facilities AS T4 ON T3.dorm_id  =T4.dorm_id WHERE T4.amenity_code  =  \"TV Lounge\" AND T1.student_id  =  (SELECT student"}
{"question": "What are the names, roles, and emails of employees of the company,", "query": "SELECT T1.firstname,  T1.lastname,  T1.title,  T1.email,  T1.phone,  T1.department,  T1.position,  T1.salary,  T1.manager_id,  T1.manager_name,  T1.manager_phone,  T1.manager_email,  T1.manager_title,  T1.manager_department,  T1.manager_position,  T1.manager_salary,  T1.department_id,"}
{"question": "What is the name, address and phone numbers of the student whose school has the highest average SAT score?", "query": "SELECT T1.name,  T1.address,  T1.phone_number FROM student AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id WHERE T2.average_sat_score  =  (SELECT max(average_sat_score) FROM school)"}
{"question": "What is the number of female members in every league?", "query": "SELECT count(*)  FROM league AS T1 JOIN league_members AS T2 ON T1.league_id  =  T2.league_id WHERE T2.gender  =  \"female\""}
{"question": "How many different types of restaurants are there in the United States?", "query": "SELECT DISTINCT type FROM Restaurants;"}
{"question": "What are the names and heights of all gymnasts?", "query": "SELECT gymnast_id,  gymnast_name,  gymnast_height FROM gymnasts"}
{"question": "What is the name for the last name of the customer with id 9999?", "query": "SELECT T2.last_name FROM customer AS T1 JOIN customer AS T2 ON T1.id  =  T2.customer_id WHERE T1.id  =  9999"}
{"question": "Find the age of the person who has the highest number of vehicles", "query": "SELECT T1.age FROM Person AS T1 JOIN Person_Vehicles AS T2 ON T1.id  = T2.id WHERE T2.number  =  MAX(T1.number)"}
{"question": "Find the average ages of all employees", "query": "SELECT avg(age) FROM employees"}
{"question": "What are the names and weights of the students in the class?", "query": "SELECT T1.student_first_name,  T1.student_last_name,  T1.student_weight FROM students AS T1 WHERE T1.student_id  =  (SELECT student_id FROM students WHERE student_id  =  (SELECT id FROM students WHERE student_id  IN  (SELECT id FROM students WHERE id  =  (SELECT id FROM classes WHERE class_id  =  (SELECT class_id FROM classes WHERE class_id  IN  (SELECT class_id FROM students WHERE class_id  =  T1.class_id ))))) )"}
{"question": "What does the name \"John Jones\" mean?", "query": "SELECT T1.first_name,  T1.last_name,  T1.address_id,  T1.city,  T1.state_code,  T1.zip_code,  T1.phone_number,  T1.email_address,  T1.gender,  T1.dob,  T1.dob_year,  T1.dobday,  T1.dobmonth,  T1.dobyear,  T1.dod,  T1.dod_year,  T1."}
{"question": "list the id of the first row of the results of the following query:", "query": "SELECT * FROM students WHERE id  =  1"}
{"question": "What are the first names of the employee with the earliest name of birth?", "query": "SELECT T1.first_name FROM employee AS T1 JOIN employee_info AS T2 ON T1.employee_id  =  T2._id WHERE T2.first_name  =  \"first\""}
{"question": "What are the ids of the drivers who had the most accidents?", "query": "SELECT T1.driver_id FROM driver AS T1 JOIN accident AS T2 ON T1.driver_id  =  T2.driver_id WHERE T2.accident_count  >  1"}
{"question": "Find the names of all the athletes who are involved in any sport which is a contact sport", "query": "SELECT T1.player_id,  T1.name_first,  (SELECT name_last FROM player AS T2 WHERE T2.player_id  =  (SELECT player_id FROM player AS T3 WHERE T3.player_id  =  'T1.player_id' AND T3.type  =  'player' AND T3.team_id  =  'T2.team_id'))) AS name_last FROM player AS T1 WHERE T1.type  =  'player';"}
{"question": "Find the names of products that are either made by Apple Computer or made in California", "query": "SELECT T1.name FROM product AS T1 JOIN product_attributes AS T2 ON T1.product_id  =  T2.product_id WHERE T2.attribute_code  =  \"manufacturer\" AND T2.value  =  \"Apple\" OR T2.value  =  'California'"}
{"question": "Show the name of the city that is the capital of China, including the country name", "query": "SELECT city,  country FROM city_and_country"}
{"question": "What are the first 10 digits of the number?", "query": "SELECT T1.number_digits FROM number_digits AS T1 WHERE T1.number_digits  =  \"10\""}
{"question": "Show the name of the customer whose last name starts with \"Smith\"", "query": "SELECT T1.customer_name FROM customer AS T1 WHERE T1.last_name LIKE \"%Smith%\""}
{"question": "What is the name and surname of the customer who paid $30 to the company?", "query": "SELECT name,  surname FROM customer WHERE amount  =  \"$30\""}
{"question": "(a question about a sql table) How many customers do not have an account?", "query": "SELECT T1.customer_id FROM Customer_accounts AS T1 WHERE T1.customer_id  NOT IN (SELECT T2.customer_id FROM Customer_id_numbers AS T2)"}
{"question": "What are the employees who have the highest salaries?", "query": "SELECT T1.firstname,  T1.lastname,  T1.salary FROM employee AS T1 JOIN salary AS T2 ON T1.id  =  T2.employeeid WHERE T2.salary  >  5000"}
{"question": "what are the names of the customers who have ordered wine over the past 5 months?", "query": "SELECT T1.customer_id,  T1.product_name,  T1.quantity,  T1.price_in_dollars FROM customer AS T1 JOIN order_item AS T2 ON T1.customer_id  = T2.customer_id WHERE T2.product_name  =  \"Wine\" AND T2.quantity  >  0 AND T2.date_ordered  >  DATE_SUB(NOW(), INTERVAL 5 MONTH)"}
{"question": "What are the names, genders, and phone numbers of all customers who are not part of the 'customers with accounts' table?", "query": "SELECT name,  gender,  phone FROM customers WHERE customer_id NOT IN (SELECT customer_id FROM customers_with_accounts)"}
{"question": "What is the name and id of the student whose name and id are most common?", "query": "SELECT T1.student_id,  T1.name_first,  name_last FROM student AS T1 WHERE T1.name_first  =  (SELECT name_first FROM student WHERE student_id  =  T1) AND T1.name_last  =  (SELECT name_last FROM student WHERE student_id  ==  T1)"}
{"question": "For each product, show the customer id, product name, and number of times it is used", "query": "SELECT T1.id,  T2.name,  T1.count FROM product AS T1 JOIN product_usage AS T2 ON T1.product_id  =  T2._product_id WHERE T2.user_id  =  \"1\""}
{"question": "What are the first three names of the employees who have the most friends? List the first name and id of those employees", "query": "SELECT first_name,  id FROM employees WHERE count(*)  >=  3"}
{"question": "List the names of all students who were given extra credit", "query": "SELECT T1.name FROM student AS T1 JOIN extra_credit AS T2 ON T1.id  =  T2.student_id WHERE T2.grade  =  'A'"}
{"question": "What is the name, address, and phone number of the customer who made the last purchase?", "query": "SELECT T1.customer_name,  T2.address,  T2.phone_number FROM customers AS T1 JOIN order_detail AS T2 ON T1.cid  =  T2.cid WHERE T2.order_id  =  '1'"}
{"question": "(a novel question, about a related table), after \"", "query": "Examples of some or all task item:"}
{"question": "What are the names in alphabetical order of the largest cities in the world?", "query": "SELECT T1.city FROM cities AS T1 ORDER BY T1.population DESC"}
{"question": "What are the names, ids, and phone numbers of all products?", "query": "SELECT T1.product_name,  T1.product_id,  T1.product_phone FROM product AS T1;"}
{"question": "Show the name of cities that have at least three hotels", "query": "SELECT T1.city_name,  COUNT(*) FROM city AS T1 JOIN hotel AS T2 ON T1.city_id  =  T2._id GROUP BY T1.city_name HAVING COUNT(*) > 2"}
{"question": "What are the names, ages and genders of the customers who have both a credit card and a debit card?", "query": "SELECT name,  age,  gender FROM customer WHERE (credit_card_id  =  \"null\" OR debit_card_id  =  'null') AND (credit_card_id  <>  \"null\" OR debit_cards_id  <>  'null')"}
{"question": "What are the names, ids and grades of all students?", "query": "SELECT T1.student_id,  T1.name,  T1.[grade] FROM student AS T1"}
{"question": "Find the ids of the customers who have the same birthday as Bill", "query": "SELECT T1.customer_id FROM customer AS T1 WHERE T1.birthday  =  \"Bill\""}
{"question": "List all the different types of vehicles and the number of each type", "query": "SELECT T1.type,  count(*) FROM vehicles AS T1 GROUP BY T1.type"}
{"question": "What is the average number of days between an order and the delivery of that order?", "query": "SELECT AVG(DATEDIFF(day, order_date, delivery_date)) FROM orders"}
{"question": "Why are there so many empty seats in the football stadium?", "query": "SELECT T1.seat_number,  T2.seat_name,  T3.seat_capacity FROM Seats AS T1 JOIN Seats_Seats AS T2 ON T1.seat_id  =  T2.seat_id JOIN Seats_Seats_Seats AS T3 ON T2.seat_id  =  t3.seat_id WHERE T1.seat_number  =  '1' AND T2.seat_number  =  \"2\" AND T3.seat_number  =  3"}
{"question": "Find the average salary of faculty members on the basis of type of job", "query": "SELECT T1.avg(T2.salary) FROM Faculty AS T1 JOIN job_type AS T2 ON T1.type_id  =  T2"}
{"question": "How many accounts don't have any transactions?", "query": "SELECT T1.account_id,  T1.account_name,  T1.account_type,  T1.account_balance,  T1.account_status,  T1.account_debit,  T1.account_credit,  T1.account_date,  T1.account_number,  T1.account_open_date,  T1.manager_id,  T1.manager_name,  T1.manager_phone,  T1.manager_fax,  T1.manager_email,  T1.manager"}
{"question": "How many employees do the employees of the company known as \"The New Yorker\" have?", "query": "SELECT COUNT(*) AS count FROM employees WHERE company_name  =  \"The New Yorker\""}
{"question": "A novel question, about a different table", "query": "SELECT * FROM novels WHERE author_id = \"1\""}
{"question": "What are the names, id and addresses of the employees that are under the same roof as the store owner?", "query": "SELECT T1.name,  T1.id,  T1.address FROM employees AS T1 JOIN store_owner AS T2 ON T1.owner_id  =  T2._id WHERE T1.name  = \"John Doe\""}
{"question": "What are the names and ids of the employees who are supervisors?", "query": "SELECT T1.employee_id,  T1.name_first,  'Supervisor' AS T2.type FROM employee AS T1 JOIN employee_type AS T2 ON T1.employee_id  =  T2.employee_id WHERE T2.type  =  'Supervisor'"}
{"question": "What is the name of the movie with highest worldwide gross in year 2000 or before?", "query": "SELECT T1.title FROM Movie AS T1 WHERE T1.year  >  2000"}
{"question": "What are all the types of drugs?", "query": "SELECT T1.drug_type FROM drugs AS T1"}
{"question": "What are the first names and ages of all students?", "query": "SELECT T1.name,  T1.age FROM students AS T1"}
{"question": "What are the first names of all employees who have not been assigned a project in their department?", "query": "SELECT T1.first_name FROM Employees AS T1 WHERE NOT EXISTS (SELECT T2.first_name FROM Project_Assignments AS T2 WHERE T2.employee_id  =  T1.employee_id)"}
{"question": "Find the number of employees in each department", "query": "SELECT T1.department_name,  T1.employee_count FROM department AS T1"}
{"question": "How many students have a special interest in science and mathematics?", "query": "SELECT T1.student_id FROM students AS T1 JOIN student_interests AS T2 ON T1.student_id  =  T2.student_id WHERE T2.interest_code  =  \"Science\" AND T2.interest_code  IN  (\"Mathematics\")"}
{"question": "What are the names, addresses, and phone numbers of the customers who have not used the product \"bottled water\" in the past year?", "query": "SELECT DISTINCT customer_name,  customer_address,  customer_phone FROM customer WHERE customer_name  NOT IN (SELECT customer_name FROM customer_history WHERE customer_name  =  \"bottled water\")"}
{"question": "Find the average price and average quantity of wine produced per year", "query": "SELECT AVG(price),  AVG(quantity) FROM wine_production"}
{"question": "How do you find the id of the account with the highest balance?", "query": "SELECT T1.id FROM account AS T1 JOIN account_balance AS T2 ON T1.id  =  T2.account_id WHERE T2.balance  >  \"{0}\""}
{"question": "(the novel question)", "query": "SELECT T1.id,  T1.name,  T1.* FROM player AS T1 WHERE T1.player_id  IN ( SELECT T2.player_id FROM player AS  T2 WHERE T2.name_last  =  \"Smith\" )"}
{"question": "What are the first 15 items in a list of ids?", "query": "SELECT T1.ID FROM table1 AS T1 WHERE T1.ID  IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15)"}
{"question": "Show all the names of the employees who report to John", "query": "SELECT T1.name FROM employees AS T1 JOIN employees AS T2 ON T1.manager  =  T2.employee_id WHERE T1.name  =  \"John\""}
{"question": "What is the average price of the wine?", "query": "SELECT AVG(price) FROM wine"}
{"question": "List the people with last name beginning with the letter's', and their age", "query": "SELECT T1.Last_Name,  T2.Age FROM Person AS T1 JOIN Person_Info AS T2 ON T1.Person_ID  =  T2.Person_ID WHERE T2.Last_Name  LIKE '%' || T1.Last_Name || '%' AND T2.Age  >  0"}
{"question": "What are the names and age of the students who have the highest GPA?", "query": "SELECT T1.Name,  T1.age FROM student AS T1 WHERE T1.GPA  =  (SELECT max(T2.GPA) FROM student AS T2)"}
{"question": "What are the total number of transactions for each customer?", "query": "SELECT T1.customer_id,  T1.total_transactions FROM transactions AS T1 JOIN customers AS T1 ON T1.customer_id = T1.customer_id"}
{"question": "How many employees have the email address \"dave", "query": "SELECT T1.email FROM employee AS T1 WHERE T1.email  =  \"dave\""}
{"question": "What is the average age of students who have a GPA of at least 95?", "query": "SELECT T1.student_id,  T1.student_name,  T2.GPA,  T3.age FROM student AS T1 JOIN student_grades AS T2 ON T1.student_id  =  T2.student_id JOIN student_age AS T3 ON T2.age  =  T3.age WHERE T1.GPA  >  95"}
{"question": "What are the names and ids of all students in the class \"Mammals\"?", "query": "SELECT T1.student_id,  T1.name_first,  'Mammals' AS class FROM student AS T1 WHERE T1.student_id  =  '1'"}
{"question": "Show the names of the students whose first name starts with the letters B-H", "query": "SELECT T1.first_name FROM student AS T1 WHERE T1.first_name  LIKE 'B%'"}
{"question": "Find the names and id of the good with the lowest average rank", "query": "SELECT T1.name,  T1.id FROM good AS T1 JOIN (SELECT T2.name,  T2.id,  AVG(T3.rank) AS avg_rank FROM good AS T2 JOIN ratings AS T3 ON T2.id  =  T3.good_id GROUP BY T2.id) AS T4 ON T1.id  =  T4.id WHERE T4.avg_rank  =  T1.id"}
{"question": "What is the title and genre of the movie that has the most popular box office gross?", "query": "SELECT T1.title,  T2.genre FROM movies AS T1 JOIN movies_genre AS T2 ON T1.movie_id  =  T2._id WHERE T2.genre  =  'Action' AND T2.title  =  'The Matrix'"}
{"question": "Find the average and maximum damage for all the storms with max speed higher than 1000?", "query": "SELECT avg(DAMAGE),  MAX(DAMAGE) FROM STORM WHERE MAX(SPEED)  >  1000"}
{"question": "How many students have been enrolled in the university that gave the most number of degrees in 2016?", "query": "SELECT T1.student_id FROM students AS T1 JOIN degrees AS T2 ON T1.student_id  =  T2.[student_id] WHERE T2.year  =  2016"}
{"question": "Find the names of cars that are not in a garage", "query": "SELECT T1.car_name FROM car AS T1 WHERE T1.car_id  NOT IN (SELECT T2.car_id FROM garage AS T2)"}
{"question": "Task:\nGiven:", "query": "SELECT * FROM students WHERE id  =  '1'"}
{"question": "What is the student first name, id and last name with the most number of activities?", "query": "SELECT T1.first_name,  T1.id,  T1.last_name FROM student AS T1 JOIN activity AS T2 ON T1.student_id  =  T2.student_id WHERE T2.activity_id  =  ( SELECT max(activity_id) FROM activity)"}
{"question": "Show the number of distinct employees who have been hired in the last 2 years", "query": "SELECT count(*)  FROM employees WHERE hire_date  >  DATE_SUB(NOW(), INTERVAL 2 YEAR)"}
{"question": "What are the names and numbers of all students with a degree in mathematics?", "query": "SELECT T1.student_id,  T1.name,  T1.\"number\" FROM student AS T1 WHERE T1.degree ='mathematics'"}
{"question": "What are the names, ids and types of the books that have been sold in the last week?", "query": "SELECT T1.name,  T1.id,  T1.type FROM book AS T1 WHERE T1.sold_date  =  \"2016-01-01\""}
{"question": "How many students are enrolled in a certain course?", "query": "SELECT count(*) AS count FROM students WHERE course_id = 1"}
{"question": "What is the name, height and prominence of a mountain that does not belong to the range 'Abramov Peak'", "query": "SELECT T1.name,  T1.height,  T1.prominence FROM mountain AS T1 WHERE T1.name  NOT IN (SELECT T2.name FROM range AS T2 WHERE T2.name  =  \"Abramov Peak\")"}
{"question": "What are the first names of people who have worked as a teacher in a school in the UK?", "query": "SELECT T1.first_name FROM Person AS T1 WHERE T1.job_title  =  \"Teacher\""}
{"question": "What are the last name of students who are in the first and second grade of elementary school?", "query": "SELECT last_name FROM students WHERE grade  =  \"1st\" AND grade  =  \"2nd\""}
{"question": "Show the name and gender of all students who play both Call of Destiny and Works Of Widenius", "query": "SELECT T1.name,  T1.gender FROM students AS T1 JOIN games_played AS T2 ON T1.student_id  =  T2.student_id WHERE T2.name  =  \"Call of Destiny\" AND T2.name  =  'Works of Widenius'"}
{"question": "Find the names of all people with a first name of \"Brenden\"", "query": "SELECT T1.firstname FROM person AS T1 WHERE T1.firstname  =  \"Brenden\""}
{"question": "( a novel question, about a different department) after \"", "query": "A:"}
{"question": "What are the names, prices, and ratings of all the books in the library?", "query": "SELECT name,  price,  rating FROM book"}
{"question": "(a novel question, about a specific set of information), after \"", "query": "(the sql query to answer the query), after \""}
{"question": "(a novel question, about a  different table), after \"", "query": "(the sql query to answer the query), after \""}
{"question": "(a list of all questions)", "query": "SELECT T2.question_id,  T1.question FROM questions AS T1 JOIN questions AS T2 ON T1.question  =  T2.question"}
{"question": "What are the names and prices of the wines with the lowest and highest prices?", "query": "SELECT T1.name,  T1.price FROM wines AS T1 WHERE T1.price  =  (SELECT min(price) FROM wines WHERE T1.name  =  \"Chateau Lafite\")"}
{"question": "What is the average value of all products in the database?", "query": "SELECT AVG(price) FROM products"}
{"question": "What is the average cost of a trip between Los Angeles International airport and Santa Monica airport?", "query": "SELECT avg(cost) FROM trip"}
{"question": "How many children are there in the U", "query": "SELECT count(*) AS total FROM children"}
{"question": "List the names and id of all products with first name starting with 'J' and ending with 'J' or 'C'", "query": "SELECT DISTINCT T1.name FROM product AS T1 WHERE T1.name  LIKE 'J%' OR T1.name  LIKE '%C%'"}
{"question": "What are the names, locations and prices of the products that cost at least 120, sorted by price decreasing and name descending?", "query": "SELECT T1.name,  T1.location,  T1.price_in_dollars  FROM product AS T1 WHERE T1.price_in_dolls  >  120 ORDER BY T1.price_in_dol DESC, T1.name ASC"}
{"question": "What are the ids and names of the two companies?", "query": "SELECT T1.company_id,  T1.company_name FROM company AS T1 WHERE T1.company_id  =  \"1\" AND T1.company_id  >  \"2\""}
{"question": "Show the names of the students who have entered the university after 2000", "query": "SELECT T1.student_id,  T1.name_first,  '2000' AS year FROM student AS T1 WHERE T1.year  =  '2000'"}
{"question": "What is the maximum age of the student who is involved in an event?", "query": "SELECT MAX(age) FROM Events WHERE student_id  =  \"1\""}
{"question": "Find the name of all students who are not in any course", "query": "SELECT T1.student_id FROM students AS T1 JOIN student_course AS T2 ON T1.id  =  T2.id WHERE T2.course_id  =  0"}
{"question": "What are the names (first name, last name) of the customers who have purchased each product?", "query": "SELECT T1.name FROM customers AS T1 JOIN orders AS T2 ON T1.id  =  T2.customer_id WHERE T2.product_id  =  \"P1\""}
{"question": "What is the full name of the student who has the highest test score?", "query": "SELECT T1.student_name FROM student AS T1 JOIN student_test AS T2 ON T1.id  = T2.student_id WHERE T2.score  =  (SELECT MAX(score) FROM student_test)"}
{"question": "Find the names of all the songs that have the word \"love\" in the title", "query": "SELECT name FROM Song WHERE title LIKE \"%love%\""}
{"question": "Show the first and last name of all students with birth year between 1950 and 1970", "query": "SELECT T1.student_first_name,  T1.student_last_name FROM students AS T1 WHERE T1.birth_year  BETWEEN 1950 AND 1970"}
{"question": "What is the average amount of time taken to complete a sale?", "query": "SELECT AVG(time_taken) FROM sales"}
{"question": "Show the names of people who have a birthday after the year 1999", "query": "SELECT T1.name FROM people AS T1 WHERE T1.birthday  >  1999"}
{"question": "What are the ids of the employees who have a salary greater than 500?", "query": "SELECT T1.employee_id FROM employees AS T1 WHERE T1.salary  >  500"}
{"question": "Show the names of customers who have never used a credit card", "query": "SELECT T1.Customer_Name FROM customers AS T1 JOIN customers_credit_card AS T2 ON T1.Customer_ID  =  T2.Customer_ID WHERE T2.Customer_ID IS NULL"}
{"question": "Show the average salaries for all employees at the company by department", "query": "SELECT AVG(salary) FROM employees AS T1 JOIN departments_by_location AS T2 ON T1.location_id  =  \"T2.location_id\""}
{"question": "What are the names, addresses and phone numbers of the authors with \"K", "query": "SELECT T1.name,  T1.address,  T1.phone_number FROM authors AS T1 WHERE T1.name  =  \"K\""}
{"question": "Find the name and age of the students", "query": "SELECT T1.name,  T1.age FROM students AS T1 WHERE T1.id  =  (SELECT T2.id FROM students AS T2 WHERE T2.name  =  \"John Smith\")"}
{"question": "What is the name and the id of the customer who purchased the most number of products?", "query": "SELECT T1.customer_id,  T2.name FROM customer AS T1 JOIN order_item AS T2 ON T1.id  = T2.customer_id WHERE (T2.order_id  =  (SELECT MAX(order_id) FROM order_item))"}
{"question": "How many books are there in the department named \"Arts and Science\"?", "query": "SELECT count(*)  FROM book"}
{"question": "What are the names, ages, and genders of the students who have read more books", "query": "SELECT T1.name,  T1.age,  T1.gender FROM students AS T1 JOIN books AS T2 ON T1.student_id  =  T2_id WHERE T2.book_id  =  (SELECT T3.book_id FROM books AS T3 WHERE T3.title  =  \"The Hobbit\" )"}
{"question": "Find the names of all the products with more than one color", "query": "SELECT T1.Product_name,  T1.color FROM product AS T1 JOIN color AS T2 ON T1.color  =  T2.color WHERE T2.color  >  1"}
{"question": "What are the courses that have a lot of students, but have been discontinued?", "query": "SELECT T1.course_id,  T1.course_name FROM course AS T1 WHERE T1.course_id  IN (SELECT T2.course_id FROM course AS T2 WHERE T2.course_name LIKE '%discontinued%')"}
{"question": "What are the details, including the name, of the city where a company with the name \"Alphabet\" is headquartered? (hint: it is", "query": "SELECT city FROM company WHERE name  =  \"Alphabet\""}
{"question": "How many students did Alice have in her class?", "query": "SELECT count(*) AS \"count\" FROM student AS T1 WHERE T1.name_last  =  \"ALICE\""}
{"question": "Find the number of customers who are using the latest software", "query": "SELECT COUNT(*) FROM customer WHERE customer_software_version  =  \"latest\""}
{"question": "What are the names and ages of the students with highest credit score?", "query": "SELECT T1.name,  T1.age FROM students AS T1 WHERE T1.credit_score  =  (SELECT MAX(T2.credit_score) FROM students AS T2)"}
{"question": "What are the names and birth years of all the singers?", "query": "SELECT T1.name,  T1.birth_year FROM singer AS T1"}
{"question": "find the number of movies based on the novel \"The Hunger Games\"", "query": "SELECT COUNT(*) FROM movies WHERE movie_title  =  \"The Hunger Games\""}
{"question": "List the names of the companies that have been in business for less than 3 years", "query": "SELECT T1.company_name FROM company AS T1 WHERE T1.company_name  =  \"ABC\""}
{"question": "Find the employees who's salary is equal to or greater than average salary", "query": "SELECT T1.employee_id FROM employees AS T1 JOIN employees AS T2 ON T1.employee_id  =  T2.\"id\" WHERE T2.salary  >  (SELECT AVG(T3.salary) FROM employees AS T3)"}
{"question": "List the names and ages of all people and the number in each age group", "query": "SELECT T1.firstname,  T1.age,  T1.count FROM people AS T1 JOIN ( SELECT age,  count(*) AS count FROM people GROUP BY age ) AS T2 ON T1.age  =  T2.age"}
{"question": "Who is the person who has visited the most number of times?", "query": "SELECT T1.name FROM VISITORS AS T1 JOIN VISITS AS T2 ON T1.id  =  T2.id WHERE T2.visitor_id  =  '1'"}
{"question": "What are the names, last name, and ages of all doctors who are men?", "query": "SELECT T1.name,  T1.last_name,  T1.age FROM doctor AS T1 WHERE T1.gender  =  \"male\""}
{"question": "Find the student's age and gender matching with the student who has just applied for the course", "query": "SELECT T1.student_id,  T1.name_first,  (T1.age - T2.age) AS age_diff,  T1.gender,  T1.gender_id,  T1.gender_name,  T1.gender_code,  T1.gender_type,  T1.gender_description,  T1.gender_is_male,  T1.gender_date_of_birth,  T1.gender_birth_date,  T1.gender_height,  T1.gender_weight,"}
{"question": "Show the names of all products that can be used to prepare a meal", "query": "SELECT T1.name FROM product AS T1 JOIN product_attributes AS T2 ON T1.product_id  =  T2.product_id WHERE T2.usage  =  \"food\""}
{"question": "What is the name and position of the head coach who has the most number of students?", "query": "SELECT T1.head_coach_id,  T2.name,  T2.position FROM coaches AS T1 JOIN coaches AS T2 ON T1.head_coach  =  T2.id WHERE T1.student_count  =  T2.student"}
{"question": "What are the first and last names of the students with the highest GPA?", "query": "SELECT T1.first_name,  T1.last_name FROM students AS T1 WHERE T1.GPA  =  (SELECT max(T2.GPA) FROM students AS T2)"}
{"question": "How many customers are female?", "query": "SELECT T1.gender FROM customer AS T1 WHERE T1.gender  =  'female'"}
{"question": "Novel questions, and the answers to them are not necessarily the same as the answers to the", "query": "SELECT * FROM students WHERE gender  =  'female'"}
{"question": "What are the names, birth date, and death date of those people that have married more than once?", "query": "SELECT T1.name,  T1.birth_date,  T1.death_date FROM people AS T1 WHERE T1.marriage_id  >  0"}
{"question": "What are the first names and ids of all the customers, and which of them have a credit card?", "query": "SELECT T1.id,  T1.firstname,  T2.id FROM customer AS T1 JOIN customer_credit_card AS T2 ON T1.id  =  T2.customer_id GROUP BY T1.id ORDER BY T1.firstname ASC"}
{"question": "Find the names of the authors, and the year of publication of their books that are in the science fiction collection", "query": "SELECT T1.name,  T1.\"Year of Publication\" FROM book AS T1 WHERE T1.genre  =  \"Science Fiction\""}
{"question": "(a question about a sql table) Show the average, minimum, and", "query": "SELECT T1.avg,  T1.min,  T1.max FROM (SELECT AVG(amount) AS avg,  MIN(amount) AS min,  MAX(amount) AS max FROM payments) AS T1;"}
{"question": "What is the name, address, and phone number of the store with most number of people in line?", "query": "SELECT T1.name,  T1.address,  T1.phone_number FROM store AS T1 JOIN customer AS T2 ON T1.id  =  T2.store_id WHERE T2.line_count  =  (SELECT count(*) FROM customer WHERE store_id  =  T1._id)"}
{"question": "What is the last name of the student who is working on the first floor", "query": "SELECT T1.last_name FROM Student AS T1 JOIN Student_Course AS T2 ON T1.id  = T2.student_id WHERE T2.floor  =  '1'"}
{"question": "What is the first name and last name of the student who has the most number of assessment notes in 2009?", "query": "SELECT T1.student_id,  T1.first_name,  'T1.last_name' FROM students AS T1 JOIN assessment_notes AS T2 ON T1.student_id  =  T2_id WHERE T2.year  =  2009"}
{"question": "What is the salary of the first employee who joined the company in the year of 1990?", "query": "SELECT T1.salary FROM employee AS T1 JOIN employee_history AS T2 ON T1.id  =  T2.employee_id WHERE T2.year  =  1990"}
{"question": "What are the different departments for the college named \"UC Hastings\"?", "query": "SELECT T1.department_name,  T2.department_id FROM Departments AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id WHERE T1.name  =  \"UC Hastings\""}
{"question": "What are the names (ids) of all departments of the university of my hometown?", "query": "SELECT T1.department_name FROM department AS T1 JOIN university AS T2 ON T1.department_id  =  T2.department_id"}
{"question": "Find the name of the company that has the highest sales for its products", "query": "SELECT company_name FROM company_sales GROUP BY company_name HAVING count(*)  =  1"}
{"question": "How many films have been released that have been on the top 10 list at least once?", "query": "SELECT T1.title,  T1.year,  T1.rank FROM film AS T1 JOIN film_rankings AS T2 ON T1.film_id  =  T2.film_id WHERE T2.rank  >  0 AND T2.rank  <  10"}
{"question": "What are the names, birthdays, and ranks of all customers, ordered by distance to the nearest city?", "query": "SELECT customer_id,  customer_first_name,  customer_last_name,  city,  distance,  rank,  age,  birthday,  type,  count(*) FROM customers GROUP BY customer_id,  city,  distance,"}
{"question": "Find the number of salespersons in each store", "query": "SELECT T1.store_id,  T1.salesperson_id FROM store AS T1 JOIN salesperson AS T2 ON T1.store_id  =  T2.store_id"}
{"question": "What is the last date of data acquisition for the past six months?", "query": "SELECT MAX(date_acquired) FROM data_acquisition WHERE date_acquired  >  DATE_SUB(NOW(), INTERVAL 6 MONTH)"}
{"question": "What are the names and full names of all the students of the university?", "query": "SELECT T1.first_name,  T1.last_name FROM students AS T1 JOIN full_name AS T2 ON T1.student_id  =  T2._id ORDER BY T1.last_name ASC"}
{"question": "What is the id and first name of the company's CEO who has been with the company for the longest time?", "query": "SELECT T1.id,  T1.first_name FROM employees AS T1 WHERE T1.id  =  (SELECT employee.id FROM employees AS T2 WHERE T2.first_name  =  'John' AND T2.last_name  =  'Doe' )"}
{"question": "Find the average age a female student", "query": "SELECT AVG(age) FROM student WHERE gender = 'female'"}
{"question": "Find the id of the store that has no customers", "query": "SELECT T1.store_id,  T2.name FROM store AS T1 JOIN customer_store_relation AS T2 ON T1.store_id  =  T2._store_id WHERE T2.customer_id  =  0"}
{"question": "List all the distinct product types", "query": "SELECT DISTINCT Product_Type FROM product"}
{"question": "(a question about a sql table, as above), after \"", "query": "(the sql query to answer the query), after \""}
{"question": "How many students have a name beginning with the letter 'e'?", "query": "SELECT T1.name FROM students AS T1 WHERE T1.name  LIKE  \"e%\""}
{"question": "How many employees have the same name as the manager?", "query": "SELECT count(*) AS c FROM employee AS T1 JOIN employee AS T2 ON T1.emp_id  =  T2.emp_id WHERE T1.name  =  'John Smith'"}
{"question": "Find the minimum, maximum, and average age of the people who are not over 55", "query": "SELECT min(Age),  max(Age),  avg(Age) FROM people WHERE age  <  55"}
{"question": "Which cities are located in the east region?", "query": "SELECT DISTINCT city FROM city_info WHERE region = \"East\""}
{"question": "Find the first and the last names of the employees who have a degree", "query": "SELECT T1.last_name,  T1.first_name FROM employees AS T1 WHERE T1.degree  =  \"Bachelor\""}
{"question": "What are the first and last names of the employees whose job titles are \"software engineer\" and \"engineer\" in ascending order?", "query": "SELECT T1.firstname,  T1.lastname FROM employee AS T1 JOIN job_title AS T2 ON T1.job_id  =  T2.[job_id] WHERE T2.job_title  =  \"software engineer\" OR T2.job_title  ==  \"engineer\" ORDER BY T1.firstname,  t1.lastname ASC"}
{"question": "What is the name and id of all the cities?", "query": "SELECT city_name,  city_id FROM city"}
{"question": "Find the number of countries that have more than one city", "query": "SELECT count(*) AS Count FROM country WHERE city_id  >  1"}
{"question": "Find the number of accounts that have a balance of zero", "query": "SELECT count(*)  FROM account WHERE balance  =  0"}
{"question": "Show the total number of transactions", "query": "SELECT count(*) AS total_transactions FROM transactions"}
{"question": "list the names and IDs of the products that are sold by the store which has the highest revenue", "query": "SELECT T1.product_name,  T1.product_id FROM products AS T1 WHERE T1.revenue  >  (SELECT T2.revenue FROM products AS T2 WHERE T2.product_name  =  \"T-shirt\" AND T2.product_id  =  T1.product_id)"}
{"question": "(a question about a sql table) Find the name of the user who has never accessed the course that id is 47", "query": "SELECT T1.name FROM users AS T1 WHERE T1.course_id !=  47"}
{"question": "Find the name of the source user who has the most trust score", "query": "SELECT T1.name FROM users AS T1 JOIN trust_score AS T2 ON T1.user_id  =  T2.user_id WHERE T2.trust_score  =  \"max\""}
{"question": "Find the number of people who are the first name of \"Alberta\"", "query": "SELECT COUNT(*) FROM people WHERE first_name = \"Alberta\""}
{"question": "What is the name and age of the doctor who has the most number of patients?", "query": "SELECT T1.name,  T1.\"age\" FROM doctor AS T1 WHERE T1.\"number_of_patients\"  =  ( SELECT max(T2.\"number_of_patients\") FROM doctor AS T2 )"}
{"question": "What is the name and location of the institute of the inventor of the mobile phone?", "query": "SELECT T1.name,  T1.location FROM inventors AS T1 WHERE T1.inventor_id  =  \"1\""}
{"question": "Find the names of students with the following status:", "query": "SELECT T1.name FROM student AS T1 WHERE T1.status  =  'A'"}
{"question": "What is the average sales price of all products in the database?", "query": "SELECT AVG(price) FROM products"}
{"question": "Return the last name of the members of the club named \"The Club of Friends\" with the highest number of members", "query": "SELECT T2.last_name FROM members AS T1 JOIN club AS T2 ON T1.club_id  =  T2._id WHERE T1.club_name  =  \"The Club of Friends\" ORDER BY count(*) DESC"}
{"question": "What are the names (first, last) of all students who have more than one email address?", "query": "SELECT T1.student_id,  T1.first_name,  'email' AS email_type FROM students AS T1 JOIN email_addresses AS T2 ON T1.student_id  =  T2.student_id WHERE T2.email_type  =  '2'"}
{"question": "List the count and name of products in all the orders", "query": "SELECT T1.product_name,  T1.quantity,  T1.price FROM order AS T1 JOIN product AS T2 ON T1.product_id  =  T2.product_id"}
{"question": "Who are the employees of the company where the most number of employees are working?", "query": "SELECT T1.name FROM employees AS T1 JOIN company AS T2 ON T1.company_id  =  T2.company_id WHERE T2.employees_count  >  (SELECT T3.employees_count FROM company AS T3 WHERE T3.company_id  =  '123')"}
{"question": "What are the names, birthdays, and gpa of all customers?", "query": "SELECT name,  birthday,  gpa FROM customers"}
{"question": "List the names of the players with any of the following statuses: \"Active\", \"on the roster\", \"on the bench\", or \"off the roster", "query": "SELECT T1.player_id,  T1.name_first,  \"status\" FROM player AS T1 JOIN player AS T2 ON T1.team_id  =  T2.team_id WHERE T1.player_id !=  T2.player_id AND T1.player_id  IN ( SELECT T3.player_id FROM player AS  T3 JOIN player_status AS T4 ON T3.player_id  =  \"T4.player_id\" ) AND T2.status  IN ( \"Active\", \"on the roster\","}
{"question": "answer:", "query": "SELECT T1.name,  T2.name FROM students AS T1 JOIN students AS T2 ON T1.id  =  T2.id WHERE T1.name  =  \"Alice\" AND T2.name  =  \"Bob\""}
{"question": "How many movies have been directed by Kevin Bacon?", "query": "SELECT count(*)  FROM film_director WHERE film_id  =  (SELECT film_id FROM film WHERE director_id  =  (SELECT id FROM actor WHERE first_name  =  \"Kevin Bacon\"))"}
{"question": "Find the names of the people in the room where the student with last name Smith lives", "query": "SELECT T1.person_name FROM Student_Room_Membership AS T1 WHERE T1.room_id  =  '1' AND T1.student_id  ='1' AND T1.room_id  ='1' AND (T1.room_id  = '1' AND T1.room  = '1')"}
{"question": "What are the resident ids of all customers who have more than one address?", "query": "SELECT customer_id FROM customers WHERE customer_id  IN (SELECT customer_id FROM addresses)"}
{"question": "Give the names of drivers who are aged between 20 and 28", "query": "SELECT T1.driver_first_name,  T1. driver_last_name,  T1.driver_age FROM drivers AS T1 JOIN people AS T3 ON T1.id  = T3.driver_id WHERE T3.age  =  \"20\" AND T3.age  =  28"}
{"question": "Show the name of a student that has been enrolled for all classes", "query": "SELECT T1.fname,  T1.lname,  T1.class FROM student AS T1 WHERE T1.fname  =  \"John\" AND T1.lname  =  \"Smith\" AND T1.class  =  \"Math\""}
{"question": "What are the last names of the players who made the team?", "query": "SELECT T1.last_name FROM player AS T1 JOIN team AS T3 ON T1.team_id  =  T3.team_id WHERE T3.team_id  =  \"1\""}
{"question": "Find the name of the course that has the largest number of students", "query": "SELECT T1.Course_name FROM course AS T1 JOIN student AS T2 ON T1.course_id  =  T2.course_id WHERE T2.student_id  =  ( SELECT T3.student_id FROM student AS T3 WHERE T3.course_id  =  ( SELECT max(course_id) FROM course AS T4 WHERE T4.student_id  =  T3.student_id ) )"}
{"question": "What are the details?", "query": "SELECT T1.name FROM employees AS T1 JOIN department AS T2 ON T1.department_id  =  T2.department_id JOIN employee_skills AS T3 ON T1.employee_id  =  T3.employee_id JOIN skills AS T4 ON T3.skill_id  =  T4.skill_id WHERE T2.name  =  \"Sales\" AND T4.name  =  \"SQL\""}
{"question": "List all the customers who have purchased books with the word \"Pirates\"", "query": "SELECT T1.Customer_Name,  T1.Product_Name,  T1.Quantity,  T1.Price FROM customer AS T1 JOIN order_item AS T2 ON T1.Customer_Id  =  T2.Customer_Id JOIN product AS T3 ON T2.Product_Id  =  T3.Product_Id WHERE T3.Product_Name  =  \"Pirates\""}
{"question": "What are the names and ids of all books that have the word \"Bible\" in their titles?", "query": "SELECT T1.title,  T1.id FROM book AS T1 WHERE T1.title  LIKE '%Bible%'"}
{"question": "How many times did the president visit the country with the smallest population?", "query": "SELECT T1.country_name,  T1.population FROM COUNTRIES AS T1 WHERE T1.population  =  (SELECT MIN(population) FROM countries)"}
{"question": "Which school has the most students studying law?", "query": "SELECT count(*) AS count FROM student WHERE major_code  =  'Law'"}
{"question": "How many gymnasts does the USA have?", "query": "SELECT COUNT(*) FROM gymnast"}
{"question": "How many movies are there?", "query": "SELECT count(*) AS total FROM movies"}
{"question": "When was the first event of the season?", "query": "SELECT T1.date FROM Events AS T1 WHERE T1.date  =  \"2010-01-01\""}
{"question": "What is the name and age of the person who took the most selfies?", "query": "SELECT T1.fname,  T1.lname,  T1.age FROM person AS T1 WHERE T1.age  =  (SELECT MAX(T2.age) FROM person AS T2)"}
{"question": "How many athletes attended the gymnastics training for the month of December?", "query": "SELECT count(*)  FROM athlete_attendance_records WHERE date_of_training  =  \"12/31/2014\""}
{"question": "What is the list of students in the class with the largest number of students?", "query": "SELECT T1.student_name FROM STUDENT AS T1 WHERE T1.class_id  =  \"1\" AND T1.class_size  =  \"largest\""}
{"question": "Find the name of the city where the student lived at the start of the year", "query": "SELECT city FROM student WHERE student_id  =  '1'"}
{"question": "(a novel question, about a table) What are the names of the customers who bought the most number of products?", "query": "SELECT T1.customer_id,  T1.product_id,  T1.quantity FROM customer AS T1 JOIN order_item AS T2 ON T1.customer_id  =  \"T2.customer_id\" WHERE T1.customer_id  IN (SELECT T3.customer_id FROM customer AS T3 WHERE T3.customer_id  =  'T1.customer_id') AND T1.product_id  =  'T2.product_id' AND T1.quantity  >  0"}
{"question": "What are the names and ages of all customers?", "query": "SELECT T1.customer_name,  T2.age FROM customer AS T1 JOIN customer_history AS T2 ON T1.id  = T2.customer_id WHERE (T2.date_added  >  '2015-01-01' AND T2.date_added  <  '2015-01-01')"}
{"question": "What is the number for the city 'A' that is a capital of the country of \"Turkey\"?", "query": "SELECT city_name,  country_name FROM country WHERE country_name  =  \"Turkey\" AND capital_city  =  \"A\""}
{"question": "Please show the names of countries, and the number of people in each age group, from the highest to the lowest", "query": "SELECT T1.country_name,  T1.age_group_id,  T1.count FROM country AS T1 JOIN age_group AS T2 ON T1.country_id  =  T2.country_id WHERE T2.age_group_id  =  (SELECT T3.age_group_id FROM age_group AS T3 WHERE T3.age_group_name  =  \"youngest\")"}
{"question": "What are the names one more than the other of the customers who share the same zip code?", "query": "SELECT T1.firstname,  T1.lastname FROM customers AS T1 JOIN customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.zip  =  T2.zip AND T1.firstname  >  T2.firstname"}
{"question": "What are the ids and names of the people who were born before the United States of America?", "query": "SELECT T1.id,  T1.name FROM people AS T1 WHERE T1.country_code  =  \"US\""}
{"question": "Which are the top-rated products?", "query": "SELECT product_name,  count(*) AS total_sales FROM product_sales GROUP BY product_name ORDER BY total_sales DESC LIMIT 10"}
{"question": "What is the id and name of the movie that has the most number of actors?", "query": "SELECT T1.movie_id,  T1.actor_name FROM movies AS T1 JOIN actors AS T2 ON T1.actor_id  =  T2.id WHERE T2.name  =  \"Actors\""}
{"question": "What is the name and id of the most expensive wine?", "query": "SELECT T1.Name,  T1.id FROM wine AS T1 WHERE T1.price  =  (SELECT max(T2.price) FROM wine AS T2)"}
{"question": "What are the names, addresses and birthdates of all the citizens of China?", "query": "SELECT T1.name,  T1.address,  T1.birthdate FROM citizen AS T1 WHERE T1.country = \"China\""}
{"question": "What are the names and ages of people who have the highest number of movies?", "query": "SELECT T1.name,  T1.age FROM people AS T1 JOIN movie_actor AS T2 ON T1.person_id  =  T2._id WHERE T2.movie_id  =  ( SELECT max(movie_id) FROM movie_actor)"}
{"question": "What are the names, birth date, and height of all gymnasts with the highest score?", "query": "SELECT T1.Name,  T1.birth_date,  T1.height FROM Gymnast AS T1 WHERE T1.score  =  (SELECT max(score) FROM Gymnast AS T2 WHERE T2.Name  =  T1.Name )"}
{"question": "How many students are in the university of Florida?", "query": "SELECT COUNT(*) FROM student_course_attendances WHERE course_id  =  \"UF\""}
{"question": "What are the names, titles, and salaries of all the employees in the company? Include title and salary", "query": "SELECT name,  title,  salary FROM employees"}
{"question": "Give the name and id of the student who entered in the last class", "query": "SELECT T1.name,  t1.id FROM student AS T1 WHERE T1.id  =  (SELECT max(t2.id) FROM student AS T2)"}
{"question": "What are the names, birth dates and heights of the students who are in the school in the fall?", "query": "SELECT T1.name,  T1.birth_date,  T1.height FROM student AS T1 WHERE T1.school_id  =  \"school\""}
{"question": "Find the name of the school where the students have the most time in the library", "query": "SELECT T1.school_name FROM student AS T1 JOIN student_library_time AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.school_name ORDER BY count(*) DESC;"}
{"question": "What are the names, id, and job titles of the employees of the company \"Alcatel\"?", "query": "SELECT T1.name,  T1._id,  T1.job_title FROM employee AS T1 WHERE T1.company_id  =  \"Alcatel\""}
{"question": "What are the names and types of all the competitions in the country?", "query": "SELECT name,  type FROM competitions"}
{"question": "List the name of the person whose first name is John and middle initial is J", "query": "SELECT T1.name FROM customer AS T1 JOIN customer_address AS T2 ON T1.id  =  T2.customer_id WHERE T1.first_name  =  \"John\" AND T1.last_name  =  \"J\""}
{"question": "What are the names and id of all the employees who work in the IT department?", "query": "SELECT T1.first_name,  T1.last_name,  T1.id FROM employees AS T1 WHERE T1.department_id  =  'IT'"}
{"question": "What are the city names and average price of houses for each state?", "query": "SELECT state_name,  city_name,  avg(house_price) FROM house_prices GROUP BY state_name ORDER BY state_name"}
{"question": "What is the total amount of loans taken out by the customer called \"Yannis\"?", "query": "SELECT T1.loan_amount FROM loans AS T1 JOIN customers AS T3 ON T1.customer_id = T3.id WHERE T3.name = \"Yannis\""}
{"question": "List the names of the first names of the first letters of the first names of all the people who have both a first name and surname in the table", "query": "SELECT T1.firstname,  T1.surname FROM person AS T1 WHERE T1.firstname  =  'First' AND T1.surname  =  'Last'"}
{"question": "\"What is the average score of the player with id 1?", "query": "SELECT T1.score FROM player AS T1 WHERE T1.id  =  1"}
{"question": "Find the names of all students who went to the school that has the greatest number of students", "query": "SELECT T1.name FROM student AS T1 JOIN school AS T2 ON T1.school_id  =  T2.\"id\" WHERE T2.num_students  >  ( SELECT max(num_students) FROM school )"}
{"question": "What are the names, birth dates and nationalities of students who have a birthday on the same day as yours?", "query": "SELECT T1.name,  T1.birth_date,  T1.nationality FROM students AS T1 WHERE T1.birth_date  =  (SELECT MIN(birth_date) FROM students AS T2 WHERE T2.birth_date  =  T1.birth_date)"}
{"question": "List the number of ships that are flying", "query": "SELECT count(*)  FROM Ship"}
{"question": "What is the name and phone number of the customer with a balance of 100?", "query": "SELECT T1.customer_name,  T1.customer_phone FROM customers AS T1 WHERE customer_balance  =  100"}
{"question": "Which students have the most number of books?", "query": "SELECT T1.student_id,  T1.name,  T1.books FROM students AS T1 JOIN library_books AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY T1.books DESC"}
{"question": "How many students are in the freshman class?", "query": "SELECT T1.student_id FROM Student AS T1 WHERE T1.year  =  \"Freshman\""}
{"question": "What are the names, titles and emails of all the customers who have bought a car?", "query": "SELECT T1.firstname,  T1.lastname,  T1.email FROM customer AS T1 WHERE T1.cust_id IN (SELECT T2.cust_id FROM customer AS T2 WHERE T2.cust_type_code  =  'car' )"}
{"question": "(an original question, about a different table), before \"", "query": "A:"}
{"question": "What are the ids of the students who have a GPA of 3", "query": "SELECT T1.student_id FROM student AS T1 JOIN grade_average AS T2 ON T1.student_id  =  T2._id WHERE T2.grade_id  =  3"}
{"question": "What is the average amount of money in checking accounts?", "query": "SELECT AVG(Amount) FROM Accounts;"}
{"question": "What is the average number of employees for each department in the last year?", "query": "SELECT T1.department_name,  avg(T2.stu_count) FROM department AS T1 JOIN employee_data AS T2 ON T1.name  =  T2.dep_code GROUP BY T1.name ORDER BY avg(T2.stu_Count) DESC LIMIT 1"}
{"question": "Find the name of all cities with a population of over a million", "query": "SELECT city FROM cities WHERE population  >  1000000"}
{"question": "What are the names (both first and last) of all the managers?", "query": "SELECT T1.name FROM manager AS T1 JOIN employee AS T2 ON T1.id  =  T2.manager_id"}
{"question": "What are the names, and ranks of the students, with an average GPA of 3", "query": "SELECT T1.first_name,  T1.last_name,  T1.GPA,  T1.rank FROM students AS T1 JOIN (SELECT T2.first_name, T2.last_name, T2.GPA, T2.rank FROM students AS T2 GROUP BY T2.first_name,T2.last_name, T3.GPA, T3.rank) AS T3 ON T1.first_name  =  T3.first_name,  T3.last_name  =  T3.last_name"}
{"question": "what does the table look like?", "query": "SELECT count(*) AS count FROM table"}
{"question": "How many customers have no policies?", "query": "SELECT T1.customer_id FROM customers AS T1 JOIN policies AS T2 ON T1.policy_id  =  T2.policy_id WHERE T2.customer_id  =  \"null\""}
{"question": "How many employees in the group have been married in the last 12 months?", "query": "SELECT T1.firstname,  T1.lastname,  T1.hire_date,  T1.marriage_date,  T1.hire_type,  T1.salary,  T1.gender,  T1.marriage,  T1.marriage1,  T1.marriage2,  T1.marriage3,  T1.marriage4,  T1.marriage5,  T1.marriage6,  T1.marriage7,  T1.marriage8,  T1.mar"}
{"question": "What is the rank of the player with the highest batting average?", "query": "SELECT T1.player_id,  T1.batting_average,  T1.rank FROM player AS T1 WHERE T1.batting_average  >  (SELECT T2.batting_average FROM player AS T2 WHERE T2.player_id  =  T1.player_id)"}
{"question": "What are the names, ages and genders of the students in class?", "query": "SELECT name,  age,  gender FROM student"}
{"question": "What is the name, start date, and end dates of all vacations taken by students who are in the accounting department?", "query": "SELECT T1.Vacation_Start,  T1.Vacation_End,  T1.Vacancy_ID FROM Vacation AS T1 WHERE T1.Vacancy_ID  =  'VAC-1' AND T1.Vacancy_Type  =  'Accounting'"}
{"question": "Find the names of the products that have no color description", "query": "SELECT T1.product_name FROM product AS T1 WHERE T1.color  =  \"\""}
{"question": "What are the names and id numbers of people who are at least 30 years old?", "query": "SELECT name,  id FROM people WHERE age  >=  30"}
{"question": "What are the names in that list?", "query": "SELECT T1.NAME FROM GENRE AS T1 JOIN tracks AS T2 ON T1.genre_id  =  T2.genre_id"}
{"question": "What is the average age of all employees?", "query": "SELECT AVG(age) FROM employee"}
{"question": "What are the names and addresses of students who have completed the class?", "query": "SELECT T1.name,  T1.address FROM students AS T1 JOIN classes AS T2 ON T1.class_id  =  T2.class_id WHERE T2.status  =  \"Completed\""}
{"question": "In the year 2000 what is the campus fee for San Diego State University?", "query": "SELECT SUM(campus_fee) FROM campus WHERE campus_name  =  \"San Diego State University\""}
{"question": "List the numbers and names of products in order of sales revenue", "query": "SELECT T1.id,  T1.name,  T1.price_in_dollars,  T1.price_per_unit,  T1.quantity,  T1.revenue FROM product AS T1 ORDER BY revenue DESC"}
{"question": "What are the questions about the table \"student\" that are not about \"grades\" or \"enrollments\"?", "query": "SELECT T1.question FROM student AS T1 JOIN question AS T2 ON T1.student_id  =  T2._id WHERE T2.type  =  \"other\""}
{"question": "How many students are in the program?", "query": "SELECT count(*)  FROM students"}
{"question": "What are the ids of documents whose title contains \"Tennis\"?", "query": "SELECT document_id FROM documents WHERE document_name LIKE '%Tennis%'"}
{"question": "What are the first, last and middle name of all students in course ACCT 212?", "query": "SELECT first_name, last_name, middle_name FROM student WHERE course_id = 'ACCT 212'"}
{"question": "How many years have there been some sort of a concert?", "query": "SELECT count(*)  FROM Concerts WHERE year  =  \"2000\""}
{"question": "What is the address of the customer with the id \"1\" and the name \"Terry\"?", "query": "SELECT T1.address_id,  T1.name FROM customer AS T1 WHERE T1.id  =  \"1\" AND T1.name  =  'Terry'"}
{"question": "What are the names and ids of customers who have been given more than $1000 in deposits?", "query": "SELECT customer_id,  customer_name FROM customer WHERE amount_deposit  >  1000"}
{"question": "What are the names (first and last) of the teachers who taught the course \"SML-L1\"?", "query": "SELECT T1.name FROM teachers AS T1 JOIN courses AS T2 ON T1.course_id  =  T2.course_id WHERE T2.course_name  =  \"SML-L1\""}
{"question": "Show the names of the products with length larger than 7 and height smaller than 8", "query": "SELECT T1.Name FROM Product AS T1 WHERE T1.length > 7 AND T1.height < 8"}
{"question": "What are the names, locations, and prices of all stores?", "query": "SELECT T1.name,  T1.location,  T1.price_in_dollars FROM store AS T1"}
{"question": "I am new to python and I am stuck on this problem", "query": "SELECT name FROM track AS T1 WHERE NOT EXISTS (SELECT T2.name FROM race AS T2 WHERE T1.track_id  =  T2.track_id)"}
{"question": "List all the customers who have received calls from a certain number", "query": "SELECT T1.cust_id,  T1.cust_name,  T1.custphone FROM customer AS T1 JOIN call_history AS T2 ON T1.cust_id  =  T2.[cust_id] WHERE T2.call_date  =  \"2009-01-01\""}
{"question": "(a question about a sql table) Find the ids of all documents that have a \"section\" field", "query": "SELECT T1.section_id FROM document AS T1 WHERE T1.section_id  =  (SELECT T2.section_id FROM document AS  T2 WHERE T2.document_id  =  T1.document_id)"}
{"question": "What is the name and checking balance for the account which has the lowest savings?", "query": "SELECT T1.name,  T1.checking_balance FROM accounts AS T1 WHERE T1.savings  =  (SELECT MIN(savings) FROM accounts);"}
{"question": "What is a list of all the customers who have not filed an insurance claim in 2016", "query": "SELECT T1.custid,  T1.custname,  T1.city_id,  T1.state_id,  T1.zip_code,  T1.phone_number,  T1.email,  T1.ssn,  T1.dob,  T1.dod,  T1.dow,  T1.doy,  T1.doy_diff,  T1.doy2,  T1.doy3,  T1.doy4,  T1.doy"}
{"question": "What are the titles and salaries of all employees who have a first name of \"Aurora\"?", "query": "SELECT T1.title,  T2.salary FROM employee AS T1 JOIN employee_info AS T2 ON T1.employee_id  =  T2.employee_id WHERE T1.first_name  =  \"Aurora\""}
{"question": "(an easy question about the same table) Find the lowest and highest checking account balance for all accounts with checking balance of less than 1000", "query": "SELECT MIN(acc_bal),  MAX(acc_bal) FROM account WHERE acc_bal  <  1000"}
{"question": "What are the code of the school with highest admission rate?", "query": "SELECT T1.school_code FROM school AS T1 JOIN school_students AS T2 ON T1.school_id  =  T2.school_id WHERE T2.student_count  =  \"highest\""}
{"question": "What is the average age of the students who did not get admitted in the tryouts?", "query": "SELECT AVG(age) FROM student WHERE tryout_status  =  'Not admitted'"}
{"question": "what are the names of the characters that were killed in the TV show Fringe?", "query": "SELECT T1.name FROM characters AS T1 JOIN characters_deaths AS T2 ON T1.character_id  =  T2.character_id WHERE T2.death_type  =  'killed'"}
{"question": "What are the names, ages, and genders of all the students?", "query": "SELECT name,  age,  gender FROM students"}
{"question": "List the products having all of the following attributes: color, color, color, and color", "query": "SELECT T1.product_id,  T1.product_name,  T1.product_price,  T1.product_description,  T1.product_image,  T1.product_category,  T1.product_quantity,  T1.product_weight,  T1.product_size,  T1.product_color,  T1.product_type,  T1.product_status,  T1.product_date_added,  T1.product_added_by,  T1.product_modified_by,  T"}
{"question": "What is the first and last names of the customer in id 4 in the file customers", "query": "SELECT T1.first_name,  T1.last_name FROM customer AS T1 WHERE T1.id  =  4"}
{"question": "What are the names and saving balances of the three accounts with the lowest savings balances?", "query": "SELECT account_name,  account_balance FROM account WHERE account_balance  <  0 ORDER BY account_balance DESC LIMIT 3"}
{"question": "How many countries that have at least two cities with population of over 1 million?", "query": "SELECT T1.country_code,  T1.country_name,  T1.population FROM countries AS T1 WHERE T1.population  >  1000000"}
{"question": "List the names of all employees who are enrolled at least in one of the following courses", "query": "SELECT T1.firstname,  T1.lastname,  T1.department,  T1.course,  T1.semester,  T1.year,  T1.credits,  T1.grade,  T1.GPA,  T1.department_code,  T1.course_code,  T1.semester_code,  T1.year_code,  T1.credits_code,  T1.grade_code,  T1.GPA_code,  T1.department  FROM"}
{"question": "Find the name of a faculty member from China (Beta)", "query": "SELECT T1.name FROM faculty AS T1 WHERE T1.country  =  \"China\""}
{"question": "Find the names of all employees who are in the sales department", "query": "SELECT T1.name FROM employee AS T1 JOIN department AS T2 ON T1.department_id  =  T2.department_id WHERE T2.department_name  =  \"Sales\""}
{"question": "Find the first name, last name and company of the employees that have the longest employment", "query": "SELECT T1.first_name,  T1.last_name,  T1.company_name FROM employees AS T1 WHERE T1.employment_length  =  (SELECT max(T2.employment_length) FROM employees AS T2);"}
{"question": "What is the average salary of a manager of \"X\" department in \"Y\" company?", "query": "SELECT AVG(salary) FROM employees WHERE department_id  =  \"X\" AND company_id  =  \"Y\""}
{"question": "What is the name, and the average gpa of department?", "query": "SELECT name,  avg(GPA) FROM department"}
{"question": "What is the name and number of the document that has been accessed the most number of times?", "query": "SELECT Document_id,  count(*) FROM Document_Accesses GROUP BY Document_id ORDER BY count(*)"}
{"question": "What is the maximum and minimum temperature in the last 30 days?", "query": "SELECT MAX(T1.temperature) AS Max_Temp, MIN(T1.temperature) AS Min_Temp FROM temperature AS T1 WHERE T1.date  >  DATE_SUB(NOW(), INTERVAL 30 DAY)"}
{"question": "What is the average time it takes for people to get to the airport?", "query": "SELECT AVG(distance) FROM trip_to_airport"}
{"question": "how many different kinds of clients are supported, by the web clients accelerators? (a question about a sql table)", "query": "SELECT DISTINCT client_type FROM Client_Type"}
{"question": "What are the names for all cars that were produced in 1998, and which ones have more than 10,000 units sold?", "query": "SELECT name FROM car WHERE year  =  \"1998\" AND units_sold  >  10000"}
{"question": "Find the total amount of money paid by the customer with id \"3\"", "query": "SELECT T1.amount FROM customer AS T1 WHERE T1.id  =  \"3\""}
{"question": "Find the names of authors who wrote books that are related to the books written by R", "query": "SELECT T1.author_name FROM book AS T1 JOIN book AS T2 ON T1.author_id  =  T2.[author_id] WHERE T2.title  =  \"R\""}
{"question": "How many athletes are there in total?", "query": "SELECT count(*) AS total FROM athlete;"}
{"question": "What are the sales and marketing figures for the company with ID \"123456\"?", "query": "SELECT T1.sales,  T1.marketing FROM company AS T1 WHERE T1.id  =  \"123456\""}
{"question": "\"What are the names of all the physicians\"", "query": "SELECT name_first,  name_last FROM doctor"}
{"question": "What is the id, name and gender of the customer with id 10?", "query": "SELECT T1.name,  T1.\"gender\" FROM customer AS T1 WHERE T1.id  =  10"}
{"question": "(a novel question, about a difference table), after \"", "query": "A:"}
{"question": "Find the names of people who have an age of less than 25", "query": "SELECT T1.name FROM person AS T1 WHERE T1.age  <  25"}
{"question": "Which are the names of the students who had the largest number of credits in the classes of 2008?", "query": "SELECT T1.student_name FROM Student_Course_Enrolment  AS T1 JOIN Student AS T2 ON T1.id  = T2.id WHERE T1.class_id  =  '2008' AND T1.student_id  <>  '0'"}
{"question": "What are the number of students who had a particular nationality during a particular year?", "query": "SELECT count(*) AS \"Number of students who had a particular nationality\" FROM students WHERE nationality = \"French\" AND year = \"2016\""}
{"question": "What is the most expensive film in the USA?", "query": "SELECT T1.title FROM film AS T2 JOIN film_market_estimation as T3 ON T2.Film_ID = T3.Film_ID WHERE T3.high_estimate >  \"$1\""}
{"question": "What are the names, in descending order of their birth date, of the actors who have acted in the film \"Fight Club\"?", "query": "SELECT T1.firstname,  T1.lastname,  T1.birthdate FROM actor AS T1 JOIN film_actor AS T2 ON T1.actor_id  =  T2.actor_id WHERE T2.film_id  =  'Fight Club' ORDER BY T1.birthdate DESC"}
{"question": "What is the difference between the first and last names of all the people with last name \"Smith\"?", "query": "SELECT T1.first_name,  T1.last_name FROM people AS T1 WHERE T1.last_name  =  \"Smith\""}
{"question": "What are the names, locations, and emails of the employees?", "query": "SELECT T1.name,  T1.location,  T1.email FROM employees AS T1"}
{"question": "What are the names, affiliations, and employers of students who have studied in the United States?", "query": "SELECT T1.student_id,  T1.name_first,  'University of California' AS affiliation,  T1.name_second,  T1.name_third,  T1.name_fourth,  T1.name_fifth,  T1.name_sixth,  T1.name,  T1.\"name_last\",  T1.name_middle,  T1.name_prefix,  T1.name_suffix,  T1.name_title,  T1.name_initials,  T1.name"}
{"question": "What are the id of all documents that contain \"DVD\"", "query": "SELECT T1.document_id FROM document AS T1 WHERE T1.name  =  \"DVD\""}
{"question": "What are all the names of the singers whose names are not in the database", "query": "SELECT name FROM singers WHERE name NOT IN (SELECT name FROM singers)"}
{"question": "What are the names, cities, and ages of all the students?", "query": "SELECT T1.name,  T1.city,  T1.age FROM students AS T1"}
{"question": "Find the names of the athletes and the scores they get in a football match", "query": "SELECT T1.first_name,  T1.last_name,  T2.score FROM Athlete AS T1 JOIN Score AS T2 ON T1.id  = T2.Athlete_id WHERE T2.team_id  =  '1'"}
{"question": "What are the names, birthdays, and phone numbers of all customers from New York?", "query": "SELECT T1.first_name,  T1.last_name,  T1.phone_number FROM customers AS T1 WHERE T1.state  =  \"New York\""}
{"question": "What is the number and id of the customer that has the lowest net worth?", "query": "SELECT T1.id,  T1.customer_id,  T1.net_worth FROM customer_info AS T1 WHERE T1.net_worth  =  (SELECT MIN(T2.net_worth) FROM customer_info AS T2 WHERE T2.customer_id  =  'T1.customer_id')"}
{"question": "What are the types and the number of employees in each department?", "query": "SELECT T1.dept_name,  T1.dept_type,  T1.count(*) FROM department AS T1 GROUP BY T1.dept_type ORDER BY T1.count(*) DESC LIMIT 10"}
{"question": "What are the first names of the students who have the same last name as 'Tobias' or 'Titus'?", "query": "SELECT T1.first_name FROM students AS T1 JOIN students AS T2 ON T1.last_name  =  T2.last_name WHERE T2.last_name  =  'Tobias' OR T2.last_name  ==  'Titus'"}
{"question": "What are the names, locations and times of the films with the most unique scores?", "query": "SELECT name,  location,  time FROM film_scores WHERE score  =  \"unique\""}
{"question": "(a question about a sql table) What are the names and ages of the students in the class of 2015?", "query": "SELECT T1.student_id,  T1.name,  T1.\"age\" FROM student AS T1;"}
{"question": "Find the ids of all students who are in a relationship with some other student", "query": "SELECT T1.student_id FROM student AS T1 JOIN relationship AS T2 ON T1.student_id  =  T2.student_id WHERE T2.student_id  =  \"some other student\""}
{"question": "How many eliminations did the team with the highest number of eliminations have?", "query": "SELECT T1.team_name,  T2.eliminations FROM teams AS T1 JOIN eliminations AS T2 ON T1.team_id  =  T2._team_id GROUP BY T1.team_id ORDER BY T2.eliminations DESC"}
{"question": "How many countries have a population of fewer than 100,000 and a population of at least 10,000,000", "query": "SELECT T1.Country,  T2.Population FROM Country AS T1 JOIN Population AS T2 ON T1.Country  =  T2.Country WHERE T2.Population  <  100,000 AND T2.Population  >  0"}
{"question": "(a novel question, about a table) which is not a list of numbers", "query": "SELECT T1.column_name FROM table_name AS T1 WHERE T1.column_name  =  \"question\""}
{"question": "Show the names of wrestlers and their dates in birth", "query": "SELECT name,  birth_date FROM wrestler ORDER BY birth_date"}
{"question": "What are the state ids, names and populations of all states?", "query": "SELECT T1.state_id,  T1.state_name,  T1.population FROM states AS T1 JOIN states_provinces AS T2 ON T1.state_id  =  T2.state_id WHERE T2.state_id  =  (SELECT state_id FROM states_provinces WHERE state_name  =  \"Alabama\" )"}
{"question": "What are the types of the questions?", "query": "SELECT T1.question_type FROM question AS T1 JOIN question_type AS T2 ON T1.question_id  =  T2.question_id"}
{"question": "What is the name of the city with the highest temperature?", "query": "SELECT T1.city_name FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id WHERE T2.temperature  >  (SELECT max(temperature) FROM temperature)"}
{"question": "Please show the average rate for all products", "query": "SELECT AVG(T2.rate) FROM products AS T1 JOIN product_prices AS T2 ON T1.product_id  =  \"T2.product_id\""}
{"question": "Which state has the most number of lakes?", "query": "SELECT state_code,  count(*) FROM lake GROUP BY state_code ORDER BY count(*) DESC;"}
{"question": "Find the average age, id, and number of students from the school", "query": "SELECT AVG(age),  id,  count(*) FROM student GROUP BY id"}
{"question": "What are the different names of a company that makes both the Apple and the Samsung products?", "query": "SELECT DISTINCT T1.name FROM company AS T1 JOIN product AS T2 ON T1.company_id  =  T2.\"company_id\" WHERE T2.name  = \"Apple\" AND T2.name  = \"Samsung\""}
{"question": "Find the names of people who have been arrested for a violent crime", "query": "SELECT T1.name FROM person AS T1 JOIN arrest AS T2 ON T1.id  =  T2.person_id WHERE T2.crime_type  =  'Violent'"}
{"question": "What are the names and salaries of people who have never been involved in a scandal?", "query": "SELECT T1.first_name,  T1.last_name,  T1.salary FROM Person AS T1 WHERE NOT EXISTS (SELECT T2.first_name, T2.last_name, T2.salary FROM Person AS T2 WHERE T2.first_name  =  T1.first_name AND T2.last_name  =  T1.last_name AND T2.salary  =  T1.salary)"}
{"question": "Show the names of the cities that have both the \"Duluth\" and \"Duluth\" as well as the \"Duluth\" and the", "query": "SELECT T1.city_name,  T1.city_id FROM city AS T1 WHERE T1.city_name  =  \"Duluth\" AND T1.city_name  ==  \"Duluth\" AND (T1.city_name  == \"Duluth\" OR T1.city_name != \"Duluth\")"}
{"question": "What are the names, last names and the last names of the employees of the company?", "query": "SELECT T1.last_name,  T1.first_name,  'Employee' AS T1.type_code FROM employees AS T1"}
{"question": "What is the average temperature of the whole table?", "query": "SELECT AVG(temperature) FROM weather"}
{"question": "(a novel question, about a previous table), after \"", "query": "A:"}
{"question": "Find the maximum number of students enrolled at a specific college", "query": "SELECT MAX(T1.student_count) FROM college AS T1"}
{"question": "What are the first names of the students who ate sandwiches at the table \"F\" last month?", "query": "SELECT T1.first_name FROM students AS T1 JOIN meals AS T2 ON T1.student_id  =  T2.\"student_id\" WHERE T2.table_name  =  \"F\" AND T2.meal_type  =  \"sandwich\""}
{"question": "What is the name of the person who has the most id in the system?", "query": "SELECT T1.name FROM person AS T1 JOIN person_id_table AS T2 ON T1.id  =  T2.person_id WHERE T2.id  =  (SELECT max(id) FROM person);"}
{"question": "What are the first and last names of all individuals, who are not students?", "query": "SELECT T1.last_name,  T1.first_name FROM people AS T1 WHERE NOT T1.student_id  =  1"}
{"question": "Find the names that start with X and are not part of \"X\"", "query": "SELECT T1.first_name,  T1.last_name FROM Person AS T1 JOIN person_friend AS T2 ON T1.first_name  =  T2.first_name WHERE T2.friend !=  'X'"}
{"question": "What is the full name of the customer who has a credit card with credit card number 4500?", "query": "SELECT customer_name FROM customer WHERE credit_card_number  =  4500"}
{"question": "What are the names and id of all the customers whose id contains \"S\" and whose first name contains \"M\"?", "query": "SELECT T1.customer_first_name, T1.customer_last_name, T1.customerid FROM customers AS T1 WHERE T1.customerid LIKE \"S%\";"}
{"question": "What are the names which are followed by the letter 'l'?", "query": "SELECT T1.Name FROM table AS T1 WHERE T1.Name LIKE '%l%'"}
{"question": "What is the average score of the top three teams?", "query": "SELECT AVG(score) AS average_score FROM (SELECT T1.team_id,  T1.score FROM team AS T1 GROUP BY T1.team_id ORDER BY T1.score DESC LIMIT 3) AS T2"}
{"question": "What are the names, order by birthdays, of the employees of the company?", "query": "SELECT T1.name,  T1.order_by_birthdays,  T1.birthdays FROM employees AS T1 WHERE T1.company_id  =  \"1\""}
{"question": "Show the department name, department code, number of students, and total number of students of each department", "query": "SELECT T1.department_name,  T1.department_code,  T2.number_students,  T2.total_students FROM departments AS T1 JOIN students AS T2 ON T1.department_id  =  T2.department_id"}
{"question": "How many employees are there in the state of Illinois?", "query": "SELECT T1.state_id,  count(*) FROM employees AS T1 JOIN states AS T2 ON T1.state_id  =  T2._id GROUP BY T1.state_id"}
{"question": "Find the name of the product that has the most different colors", "query": "SELECT name FROM product WHERE color_count  =  (SELECT count(*) FROM product WHERE color_count  >  1)"}
{"question": "What are the first name and last name of the employees who have a total salary of at least 100000", "query": "SELECT T1.first_name,  T1.last_name FROM employees AS T1 WHERE T1.salary  >=  100000"}
{"question": "What is the average grade point for students with the last name Smith?, after \"", "query": "SELECT T1.grade_point FROM student AS T1 WHERE T1.last_name  =  \"Smith\""}
{"question": "What are the names (first and last name) and phone numbers of all customers of type \"Cable", "query": "SELECT T1.first_name,  T1.last_name,  T1.phone_number FROM customers AS T1 WHERE T1.type  =  'Cable'"}
{"question": "How many different products are in the supermarket?", "query": "SELECT DISTINCT product_id FROM products"}
{"question": "What is the average age of all players?", "query": "SELECT AVG(age) FROM players"}
{"question": "What are the names, ages, salaries, and salaries per hour for the three drivers whose names start with 'M'?", "query": "SELECT T1.Name,  T1.Age,  T1.Salary,  T1.SalaryPerHour FROM Driver AS T1 WHERE T1.Name  LIKE 'M%'"}
{"question": "Find the name of customers who have purchased the same product more than once", "query": "SELECT T1.customer_id,  T1.product_id,  T1.quantity,  T1.price,  T1.date_purchased,  T1.date_shipped,  T1.date_received,  T1.date_returned,  T1.date_cancelled,  T1.date_refunded,  T1.date  FROM customer_product_history AS T1 WHERE T1.customer_id  = T2.customer_id AND T1.product_id  = T2.product_"}
{"question": "What are the names, last names and id's of all the students in the class of 2009?", "query": "SELECT T1.name,  T1.last_name,  T1.id FROM students AS T1 WHERE T1.year  =  2009"}
{"question": "Show the name of the company and number of employees in each department", "query": "SELECT T1.department_name,  T1.count(*) FROM department AS T1 GROUP BY T1.department_name"}
{"question": "How many customers have the city names \"Sao Paulo\" in the name?", "query": "SELECT COUNT(*) FROM customer WHERE city  =  \"Sao Paulo\""}
{"question": "What is the total budget amount for the second largest school in the world in all years?", "query": "SELECT SUM(Amount_Payment) FROM Pay_Details WHERE School_Name  =  \"University of California, Berkeley\" AND Year  =  \"2012\""}
{"question": "Find the names of the cities with the highest average income in the United States", "query": "SELECT city_name,  avg(income) FROM city_info GROUP BY city_name ORDER BY city_name ASC LIMIT 1"}
{"question": "Find the total days of the students who are enrolled in at least one course", "query": "SELECT T1.student_id,  T2.course_id,  T3.days FROM Student AS T1 JOIN Course AS T2 ON T1.course_id  =  T2.id JOIN Enrollment AS T3 ON T1.student_id = T3.student_id WHERE T3.days  >  0"}
{"question": "What is the name and country code of the country that has the first name \"Maria\"?", "query": "SELECT country_name,  country_code FROM Country WHERE country_name  =  \"Maria\""}
{"question": "Show the names, IHSAA Football Class, Mascot and year of the schools that have more than 4000 of budgeted amount or were founded between 2003", "query": "SELECT T1.name,  T1.IHSAA_Football_Class,  T1.Mascot,  T1.year FROM schools AS T1 WHERE T1.budgeted_amount  >  4000 OR T1.founded BETWEEN 2003 AND 2003"}
{"question": "How many cities are in the state of New York?", "query": "SELECT DISTINCT city FROM state WHERE state_name = \"New York\""}
{"question": "What are the names, times, and dates of all the meetings?", "query": "SELECT T1.meeting_id,  T1.start_time,  T1.end_time,  T1.start_date,  T1.end_date FROM meeting AS T1"}
{"question": "What is the average age of all the students?", "query": "SELECT AVG(T1.Age) FROM student AS T1"}
{"question": "What is the name and date of birth of the student who has the highest number of attendance?", "query": "SELECT T1.student_id,  T1.name_first,  DATE_FORMAT(T1.date_of_birth, '%Y-%m') AS date_of_birth FROM student AS T1 WHERE T1.attendance  =  (SELECT MAX(T2.attendance) FROM student AS T2)"}
{"question": "What are the names, and ids, of all restaurants in the same city where you can find a hot dog?", "query": "SELECT T1.name,  T1.* FROM restaurant AS T1 JOIN hotdog AS T2 ON T1.name  =  T2.restaurant_name WHERE T2.id  =  T1.id"}
{"question": "What are all people who have a height of more than 200?", "query": "SELECT T1.name FROM people AS T1 WHERE T1.height  >  200"}
{"question": "Find the number of movies which have at least one film in the \"Animation\" category", "query": "SELECT count(*) AS count FROM movie AS T1 JOIN category AS T2 ON T1.category_id  =  T2.id WHERE T2.category_name  =  'Animation'"}
{"question": "Find the number of flights", "query": "SELECT count(*) AS count FROM flights"}
{"question": "What are the names and birth years of the first ten presidents?", "query": "SELECT name,  birth_year FROM President ORDER BY birth_year ASC"}
{"question": "How many students are there, by gender, in the university of Alabama?", "query": "SELECT T1.gender, count(*) FROM students AS T1 GROUP BY T1.gender"}
{"question": "Find the number of different restaurants and the name of the restaurant with the largest number of stores", "query": "SELECT DISTINCT T1.name FROM restaurant AS T1 JOIN restaurant_store AS T2 ON T1.restaurant_id  =  T2._id WHERE T2.store_id  >  0"}
{"question": "Find the id, name of each editor, and the number of journal committees they have been on", "query": "SELECT T1.id,  T1.Name ,  COUNT(*) FROM editor AS t1 JOIN journal_committee AS t2 ON t1.editor_id  =  t2.editor_id GROUP BY T1.id"}
{"question": "What are the names, genders and birthdays of the teachers who teach at least one course in the year 2017?", "query": "SELECT T1.Name_First,  T1.Name_Last,  T1.Gender,  T1.Birthday FROM teacher AS T1 JOIN teacher_course AS T2 ON T1.TeacherID  =  T2.TeacherID WHERE T2.CourseID  =  1 AND T2.Year  =  2017"}
{"question": "What is the name and height of all buildings that are more than 1500 feet tall?", "query": "SELECT T1.name,  T1.\"height\" FROM building AS T1 WHERE T1.\"height\"  >  1500"}
{"question": "Show the names and dates of all the events", "query": "SELECT T1.name,  T1.date FROM events AS T1"}
{"question": "What are the name and the id of the customers who have not placed any order?", "query": "SELECT T1.custid,  T1.name FROM customer AS T1 WHERE T1.custid  NOT IN (SELECT T2.custid FROM order AS T2)"}
{"question": "How many proteins are associated with an institute founded after 1880 or an institute with type \"Private\"?", "query": "SELECT T1.Institute_Name,  T2.Institute_Type,  T3.Year_Start,  T4.Year_End FROM Institute AS T1 JOIN Institute_Type AS T2 ON T1.Institute_Type_Id  =  T2.Id JOIN Institute_History AS T3 ON T1.Institute_Id  =  T3.Institute_Id JOIN Institute_History AS T4 ON T1.Institute_id  =  T4.Institute_Id WHERE T3.Year_Start  >  1880 OR T3."}
{"question": "What are the names and salaries of all employees?", "query": "SELECT T1.first_name,  T1.last_name,  T1.salary FROM employees AS T1 WHERE T1.employee_id  =  (SELECT employee_id FROM employee WHERE first_name  =  \"John\" AND last_name  =  \"Smith\")"}
{"question": "What are the names and codes of the documents in the table, and how many of them are open source?", "query": "SELECT T1.document_name,  T1.document_type_code,  T1.document_structure_code FROM documents AS T1 JOIN document_types AS T2 ON T1.document_type_code  =  T2.document_type_code JOIN document_structures AS T3 ON T1.document_structure_code  =  T3.document_structure_code WHERE T1.document_type_name  =  \"Open Source\""}
{"question": "Find the names of those who are not in any of the departments in the department of mathematics", "query": "SELECT DISTINCT T1.name FROM department AS T1 JOIN student AS T2 ON T1.department_id  =  T2._id WHERE T2.department_name  =  \"Mathematics\""}
{"question": "List all the product ids and their names", "query": "SELECT T1.id,  T1.name FROM product AS T1"}
{"question": "What are the details of the games that were played in the year 2004?", "query": "SELECT T1.game_name,  T1.game_date,  T1.game_time,  T1.game_venue,  T1.game_result,  T1.game_winner,  T1.game_type,  T1.game_description,  T1.game_duration,  T1.game_attendance,  T1.game_referee,  T1.game_coach,  T1.game_home_team,  T1.game_away_team,  T1.team_"}
{"question": "What are the names, genders and ages of all students, in order?", "query": "SELECT T1.name,  T1.gender,  T1.age FROM students AS T1 WHERE T1.age  >  0 AND T1.age  <  100"}
{"question": "What are the names and ids of all people with the surname \"Smith\"?", "query": "SELECT T1.id,  T1.name_first,  'Smith' AS surname FROM person AS T1 WHERE T1.surname  =  'Smith'"}
{"question": "Find the names of all directors whose first names are \"J\"", "query": "SELECT T1.name FROM director AS T1 WHERE T1.first_name  =  \"J\""}
{"question": "What is the maximum number of emails that all users can receive?", "query": "SELECT count(*) AS max_emails FROM users"}
{"question": "What is the id of the student who is the oldest in the department?", "query": "SELECT T1.name FROM student AS T1 JOIN class AS T2 ON T1.Class  =  T2.Class WHERE T1.id  =  (SELECT MIN(id) FROM student)"}
{"question": "Find the names of all the employees who have the same name as the person who is in charge of the project", "query": "SELECT T1.first_name,  T1.last_name FROM employees AS T1 JOIN employees AS T2 ON T1.first_name  =  T2.first_name AND T1.last_name  =  T2.last_name WHERE T1.id  =  '1'"}
{"question": "What are all the names of the books that have the word \"Moon\" in the title?", "query": "SELECT T1.book_name FROM book AS T1 WHERE T1.book_title  LIKE '%Moon%'"}
{"question": "Find the average, minimum, and maximum speed for all the cars in the database", "query": "SELECT T1.speed FROM car AS T1 WHERE T1.car_id  =  (SELECT T2.car_id FROM car AS T2 WHERE T2.car_id  =  T1.car_id ORDER BY T2.car_id DESC LIMIT 1)"}
{"question": "Find the number of students who have taken the course CS-101", "query": "SELECT COUNT(*)  FROM students WHERE course_code  =  \"CS-101\""}
{"question": "What is the number of movies whose original language is not English?", "query": "SELECT count(*) AS total FROM movie WHERE language_code NOT IN ('English', 'French', 'German', 'Spanish', 'Italian', 'Japanese', 'Korean', 'Chinese', 'Russian', 'Arabic', 'Portuguese', 'Turkish', 'Indonesian', 'Malaysian', 'Thai', 'Filipino', 'Hindi', 'Bengali', 'Gujarati', 'Punjabi', 'Tamil', 'Telugu', 'Kannada', 'Malayalam', 'Assamese', 'Bengali', 'Marathi', 'Tamil',"}
{"question": "Show the name of the departments of all the instructors", "query": "SELECT T1.department_name FROM instructor AS T1 JOIN department AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*)"}
{"question": "Find the id of the account who has the smallest balance", "query": "SELECT T1.account_id FROM Account AS T1 WHERE T1.balance  =  ( SELECT min(T2.balance) FROM Account AS T2 WHERE T2.account_id  =  T1.account_id )"}
{"question": "Find the id of all employees who are working as \"engineers\" in 2011", "query": "SELECT employee_id FROM employees WHERE job  =  'engineers' AND year(date_of_hire)  =  2011"}
{"question": "What is the name (first and last name) of the student who has been involved in the most number of activities?", "query": "SELECT T1.student_name,  T2.activity_name FROM Student_Activity AS T1 JOIN Activity AS T2 ON T1.activity_id  =  T2.id WHERE T1.student_id  IN (SELECT T3.student_id FROM Student_Activity AS T3 WHERE T3.student_id  IN ( SELECT T4.student_id FROM Student_Student_Activity AS T4 WHERE T4.student_id  =  '1' ) )"}
{"question": "What is the total length of the river?", "query": "SELECT SUM(LENGTH(river)) FROM river"}
{"question": "What are the names, titles, and descriptions of the following tables?", "query": "SELECT T1.name,  T1.title,  T1.description FROM table_name AS T1"}
{"question": "what is the average weight of animals in each species?", "query": "SELECT T1.species,  T1.weight FROM animal AS T1 JOIN species AS T2 ON T1.species_id  =  T2.species_id WHERE T2.species  =  'Dog'"}
{"question": "What are the names, dates of birth and ages of the people who have a job about software engineering?", "query": "SELECT T1.name,  T2.date_of_birth,  T3.age FROM employee AS T1 JOIN job AS T2 ON T1.employee_id  =  T2.employee_id JOIN employee_details AS T3 ON T1.employee_id = T3.employee_id WHERE T2.job_id  =  '1'"}
{"question": "Find the titles of books that are published by Random House", "query": "SELECT name FROM book WHERE publisher_name  =  \"Random House\""}
{"question": "Find the first name and gender for \"Mary\" and \"Jane\", and the first name and gender for \"Tim\" and \"Joe\"", "query": "SELECT T1.First_Name,  T1.Gender,  T1.First_Name_Gender FROM Player_Info AS T1 WHERE T1.First_Name  =  \"Mary\" AND T1.First_Name_Gender  =  \"Female\" AND T1.First_name  =  \"Jane\" AND T1.First_Gender  =  \"Female\";"}
{"question": "What are the names and ids of products in descending order of price?", "query": "SELECT T1.name,  T1.\"id\" FROM product AS T1 ORDER BY T1.price DESC"}
{"question": "(a question about a sql table) Show director with the largest number of ship times in total", "query": "SELECT T1.director_name,  T1.director_id,  T1.total_ship_time FROM directors AS T1 GROUP BY T1.director_name, T1.director_id, T1.total_ship_time"}
{"question": "What is the average age of the students who are not in computer science?", "query": "SELECT AVG(age) FROM Student WHERE major  =  \"Computer Science\" AND age  <>  \"18\""}
{"question": "Find the number of people who have a bank account", "query": "SELECT count(*) from customer_accounts"}
{"question": "What is the last three digits of the license plate number of the white car on the right?", "query": "SELECT license_plate_number FROM car WHERE license_plate_number  =  \"123456789\""}
{"question": "What are the different tables that have the name \"todo\" as a column name?", "query": "SELECT T1.name FROM tables AS T1 WHERE T1.name  =  \"todo\""}
{"question": "List all the activities that Alice likes to do", "query": "SELECT T1.activity FROM activity AS T1 WHERE T1.name  =  \"Alice\""}
{"question": "What are the names, locations, and prices of the products of each of the following companies?", "query": "SELECT T1.name,  T1.location,  T1.price FROM product AS T1 WHERE T1.company_id  =  (SELECT T2.company_id FROM company AS T2 WHERE T2.name  =  \"ABC\")"}
{"question": "What is the average number of students over the last year?", "query": "SELECT AVG(T1.number_of_students) FROM students AS T1"}
{"question": "What are the names (and ids) of all employees of a company with the same first name?", "query": "SELECT T1.employee_id,  T1.first_name,  T1.last_name FROM employee AS T1 JOIN employee_info AS T2 ON T1.employee_id  =  T2.[employee_id] WHERE T2.first_name  =  \"John\""}
{"question": "Find the id of the professor who has the first name \"Mick\"?", "query": "SELECT T1.name FROM professor AS T1 JOIN professor_department AS T2 ON T1.professor_id  =  T2.professor_id WHERE T2.first_name  =  \"Mick\""}
{"question": "Does the file exist?", "query": "SELECT file_name FROM files WHERE file_name  =  \"file.txt\""}
{"question": "How many different countries are there that are a part of the European Union?", "query": "SELECT count(*) from country WHERE country_name  =  \"Germany\" OR country_name  =  \"France\" OR country_name  = \"Spain\" OR country_name  =   \"Italy\" OR country_name  =    \"Greece\" OR country_name  =     \"Belgium\" OR country_name  =      \"Netherlands\" OR country_name  =       \"Austria\" OR country_name  =         \"Switzerland\" OR country_name  =          \"Finland\" OR country_name  =           \"Sweden\" OR country_"}
{"question": "What are the names, phone numbers, and mailing addresses of all faculty in the department of Political Science?", "query": "SELECT T1.first_name,  T1.last_name,  T1.phone_number,  T1.mailing_address FROM faculty AS T1 WHERE T1.department_id  =  'Political Science'"}
{"question": "How many books were sold in the first quarter of this year?", "query": "SELECT count(*)  FROM book WHERE year(date) =  \"2017\""}
{"question": "What are the first three letters of each of the people in the following table? Order by first name", "query": "SELECT T1.name FROM people AS T1 WHERE T1.name  LIKE  \"%a%\" OR T1.name  LIKE \"%b%\" OR T1.name  =  \"%c%\""}
{"question": "What is the average age of customers with the most number of credit card accounts?", "query": "SELECT AVG(age) FROM customer WHERE num_accounts  =  max(num_accounts)"}
{"question": "What are the names, ages, and genders of all the students in the university?", "query": "SELECT T1.name,  T1.age,  T1.gender FROM student AS T1 WHERE T1.university_id = 1"}
{"question": "How many students are there in the university with the id 3?", "query": "SELECT T1.student_id FROM students AS T1 WHERE T1.student_id  =  3"}
{"question": "What are the different types of products that have discount of 10%?", "query": "SELECT T1.product_id,  T1.product_name,  T1.price,  T1.quantity,  T1.discount,  T1.price_with_discount,  T1.quantity_with_discount,  (T1.price * T1.quantity) - T1.price_with_discoun..."}
{"question": "What are all the student names with the first name as John?", "query": "SELECT T1.name FROM student AS T1 WHERE T1.first_name  =  \"John\""}
{"question": "How many books are there in the database?", "query": "SELECT count(*)  FROM books"}
{"question": "What are the countries which are not in the continent of Africa", "query": "SELECT DISTINCT country FROM continent WHERE continent.continent_name  =  \"Africa\""}
{"question": "What are the titles of all the games in the database", "query": "SELECT T1.title FROM games AS T1 WHERE T1.id  =  (SELECT T2.id FROM games AS T2 WHERE T2.title  =  \"The Last of Us\")"}
{"question": "How many courses do we have?", "query": "SELECT count(*) from course"}
{"question": "What are the last names of employees whose salary is at least $40,000?", "query": "SELECT T1.last_name FROM Employees AS T1 WHERE T1.salary  >  40"}
{"question": "What are the names, descriptions and id of all of the employees who are in the sales department", "query": "SELECT T1.name,  T1.description,  T1.id FROM employee AS T1 WHERE T1.department_id  =  1"}
{"question": "What is the name, first name and last name of the employee whose id is 34?", "query": "SELECT name FROM employee WHERE employee_id = 34"}
{"question": "find the age of the oldest student", "query": "SELECT T1.age FROM student AS T1 WHERE T1.student_id  =  (SELECT T2.student_id FROM student AS T2 WHERE T2.student_id  =  T1)"}
{"question": "(a question about a sql table) Show different carriers of phones together with number of phones with each carrier", "query": "SELECT T1.carrier_name,  T1.phone_number FROM carrier AS T1 JOIN phone_number AS T2 ON T1.carrier_id  =  T2._id WHERE T2.phone_type  =  \"cell\""}
{"question": "Find the names of the students who have taken Statistics courses in the order of enrollment date", "query": "SELECT T1.student_name,  T1.course_name FROM student AS T1 JOIN course AS T2 ON T1.student_id  =  T2.student_id WHERE T2.course_id  =  (SELECT T3.course_id FROM course AS T3 WHERE T3.course_name  =  \"Statistics\") ORDER BY T1.enrollment_date"}
{"question": "What are the first 10 things that you would like to buy, if you have $20 dollars?", "query": "SELECT T1.item_name FROM products AS T1 WHERE T1.price  >  0 AND T1.price  <  20"}
{"question": "What are the different types of vehicles and their corresponding prices?", "query": "SELECT T1.type,  T1.price FROM vehicle AS T1 WHERE T1.type  =  \"Car\""}
{"question": "Give the names of the countries that are the biggest consumers of oil", "query": "SELECT T1.country_name,  T2.country_name FROM country AS T1 JOIN country AS T2 ON T1.country_id  =  T2.country_id WHERE T1.population  >  T2.population"}
{"question": "How many students are in the year 2003?", "query": "SELECT T1.Student_ID FROM student AS T1 WHERE T1.year  =  2003"}
{"question": "List the names of the cities with the highest population in the world", "query": "SELECT T1.city_name,  T1.population FROM city AS T1 JOIN country_info AS T2 ON T1.country_id  =  T2._id WHERE T2.name  =  \"World\" ORDER BY T1.population DESC;"}
{"question": "Which of the following movies is not made by Disney?", "query": "SELECT DISTINCT T1.title FROM movies AS T1 JOIN movies_cast_roles AS T2 ON T1.movie_id  =  T2.movie_id JOIN actors AS T3 ON T2.actor_id  =  T3.actor_id WHERE T1.title  =  \"The Incredibles\" AND T3.first_name  =  \"Brad\" AND T3.last_name  =  \"Pitt\""}
{"question": "What is the number of miles from the town of \"Toronto\" to the town of \"Oakville\" in order of their distance in miles?", "query": "SELECT DISTINCT name FROM city WHERE city_name  =  \"Toronto\" AND city_name  =  \"Oakville\" ORDER BY city_name"}
{"question": "What is the salary of the employee who has the highest score in the following table?", "query": "SELECT T1.employee_id,  T1.score FROM employee AS T1 JOIN employee_score AS T2 ON T1.employee_id  =  T2.employee_id GROUP BY T1.employee_id ORDER BY T1.score DESC LIMIT 1"}
{"question": "What is the first date of the month?", "query": "SELECT date(date_column) FROM table_name"}
{"question": "List the names and ids of the people who are living in the city of Paris", "query": "SELECT T1.name,  T1.id FROM people AS T1 WHERE T1.city  =  \"Paris\""}
{"question": "What is the name, location, and number for all employees at the company?", "query": "SELECT T1.name,  T1.location,  T1.id FROM employee AS T1 WHERE T1.company_id  =  \"1\""}
{"question": "Find the name of the employee who has the lowest salary and the lowest commission", "query": "SELECT T1.employee_name,  T2.employee_salary,  T3.employee_commission FROM employee AS T1 JOIN employee_salary AS T2 ON T1.employee_id  =  T2._id JOIN employee_commission AS T3 ON T1.employee_id = T3.employee_id WHERE T2.employee_salary  =  (SELECT min(T4.employee_salary) FROM employee_salary AS T4 WHERE T4.employee_id = T1.employee_id) AND T3.employee_commission"}
{"question": "What are the names and types of the roads in the city of Chicago?", "query": "SELECT name,  type FROM road WHERE city = \"Chicago\""}
{"question": "What is the name and type of the country with the fewest number of countries?", "query": "SELECT T1.name,  T1.type FROM countries AS T1 WHERE T1.number_of_countries  =  \"fewest\""}
{"question": "What is the name, description, and phone number of the restaurant where the author works?", "query": "SELECT T1.Name,  T1.Description,  T1.Phone_Number FROM Restaurant AS T1 WHERE T1.Author_ID  =  1"}
{"question": "What is the number of documents which have a text string in a data field of type 'text'?", "query": "SELECT count(*) AS count FROM documents WHERE data_field LIKE '%text%'"}
{"question": "What are the ages of the customers of the following company?", "query": "SELECT age FROM customers WHERE customer_name  =  \"John Doe\""}
{"question": "Show all the names of the employees who have joined the company within the last year", "query": "SELECT T1.employee_name FROM employee AS T1 JOIN employee_history AS T2 ON T1.employee_id  =  T2.[employee_id] WHERE T2.date_joined  =  '2010-01-01'"}
{"question": "What are the names and ids of all employees?", "query": "SELECT T1.first_name,  T1.last_name,  T1.id FROM employee AS T1"}
{"question": "What is the id, name, and email of the senior manager who has no children?", "query": "SELECT T1.name,  T1.email,  T1.id FROM employees AS T1 WHERE T1.parent_id  =  0"}
{"question": "What is the average age of drivers in New York state?", "query": "SELECT AVG(D.age) FROM Driver AS D"}
{"question": "What is the name and id of the product with the highest average price?", "query": "SELECT T1.Product_Name,  T2.Product_Id FROM Products AS T1 JOIN Products AS T2 ON T1.Product_Id  =  T2.Product_Id WHERE T1.Average_Price  =  (SELECT AVG(Price) FROM Products)"}
{"question": "What are the names and number of employees who are working in the kitchen of a restaurant?", "query": "SELECT T1.first_name,  T1.last_name,  T1.employee_id FROM employees AS T1 JOIN employee_details AS T2 ON T1.id  =  T2.employee_id WHERE T2.department  =  \"Kitchen\""}
{"question": "(a novel question, about a table) Explain the table", "query": "SELECT T1.title FROM book AS T1 JOIN book_author AS T2 ON T1.book_id  =  T2.book_id WHERE T2.author_id  =  \"1\""}
{"question": "For each country, what is the population of its capital?", "query": "SELECT T1.Country,  T1.Capital FROM Country_Info AS T1 JOIN Country_Info_Capital AS T2 ON T1.Country_ID  =  T2.Country_ID"}
{"question": "Shows the names of companies that have at least two companies in the banking and financial industries", "query": "SELECT T1.company_name,  T2.company_name FROM company AS T1 JOIN company AS T2 ON T1.company_id  =  T2._id WHERE T1.industry  =  \"banking\" AND T2.industry  =  \"finance\""}
{"question": "What are the id, name and genders of the architects who made a museum?", "query": "SELECT T1.id,  T1.name,  T1.gender FROM architects AS T1 WHERE T1.name  = \"John Wen\""}
{"question": "Return the first name, last name and email of all students at the university of Chicago", "query": "SELECT T1.student_id,  T1.name_first,  'T1.name_last' AS name_last,  T1.email FROM student AS T1 WHERE T1.university_id  =  'Chicago'"}
{"question": "What are the names and addresses of the stations closest to 'Goroka' in the US?", "query": "SELECT STATION_NAME,  STATION_ADDRESS FROM STATION WHERE STATION_NAME  =  \"Goroka\" AND STATION_CITY  =  \"Goroka\";"}
{"question": "What are the names and ages of all the students in the class?", "query": "SELECT T1.name,  T1.age FROM students AS T1 WHERE T1.class_code  IN (SELECT T2.class_code FROM classes AS T2)"}
{"question": "What are the names and ages of employees hired after November 5th, 1997 and before July 5th, 2009, and working in the city of Palo Alto", "query": "SELECT T1.name,  T1.age FROM employee AS T1 WHERE T1.city_id  =  \"PALO ALTO\" AND T1.hire_date  >  \"1997-11-05\" AND T1.hire_id  >  \"2009-07-05\""}
{"question": "Find the names of employees who are in charge of maintenance of a production line", "query": "SELECT T1.first_name,  T1.last_name FROM Employees AS T1 JOIN Employee_Job_Title AS T2 ON T1.employee_id  =  T2._employee_id WHERE T2.job_title  =  \"Maintenance\""}
{"question": "Find the names of all countries that are in the continent of Africa", "query": "SELECT name FROM Country WHERE continent = \"Africa\""}
{"question": "Show all the departments of the company whose id is in the range of 100 to 110", "query": "SELECT T1.dept_name FROM Department AS T1 WHERE T1.id  IN (100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110)"}
{"question": "What are the names, type codes, and ids of all products in the database?", "query": "SELECT T1.product_name,  T1.product_type_code,  T1.product_id FROM product AS T1 WHERE T1.product_type_code  =  'Product'"}
{"question": "What are the courses that are taught by the department of mathematics?", "query": "SELECT T1.course_id,  T1.title,  T1.instructor_id FROM course AS T1 JOIN teaches_instructor AS T2 ON T1.id  =  T2.id WHERE T2.department_id  =  \"Mathematics\""}
{"question": "What are the names, genders, and ages of all students that have at least one of these names?", "query": "SELECT T1.name,  T1.gender,  T1.age FROM student AS T1 WHERE T1.name IN ( \"John Doe\", \"Jane Doe\", \"Mary Doe\" )"}
{"question": "Who are the names of the people who have a spouse relation with the employees named \"Bruce\"?", "query": "SELECT T1.person_id,  T1.name_first,  (SELECT T2.name_first FROM person_relation AS T2 WHERE T2.person_id  =  T1._id) AS spouse_name_first,  (SELECT count(*) FROM person_relation AS T3 WHERE T3.person_id  =  (SELECT T4.person_id FROM person_relation AS T4 WHERE T4.person_id  =  \"Bruce\" AND T4.type  =  \"spouse\")) AS spouse_count FROM person AS T1 WHERE"}
{"question": "Find the first name and last name of all customers who have a mobile phone", "query": "SELECT T1.first_name,  T1.last_name FROM customer AS T1 JOIN mobile_phone AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.type  =  \"mobile\""}
{"question": "Give the name of the city where the highest concentration of students live", "query": "SELECT city FROM students WHERE city  =  \"New York\""}
{"question": "What is the average grade of students who have a degree of engineering?", "query": "SELECT AVG(grade) FROM student WHERE degree_id  =  \"Engineering\""}
{"question": "What are the name of all the movies in the database?", "query": "SELECT T1.title FROM movie AS T1 WHERE T1.title  LIKE '%The%'"}
{"question": "The number of students in each college", "query": "SELECT count(*) AS total FROM student"}
{"question": "How many students have their names as their user names?", "query": "SELECT T1.student_id FROM Student AS T1 JOIN User_Names AS T2 ON T1.user_id  =  T2_id WHERE T2.name  =  \"John Smith\""}
{"question": "What is the name and type of the document'm' for the department \"accounting\"?", "query": "SELECT T1.Name,  T1.Type FROM document AS T1 JOIN department AS T2 ON T1.department_id  =  T2.department_id WHERE T2.department_name  =  \"accounting\""}
{"question": "What is the name and location of the college with the most number of students?", "query": "SELECT T1.name,  T2.location FROM college AS T1 JOIN students AS T2 ON T1.id  =  T2.id WHERE T2.number_of_students  >  (SELECT T3.number_of_students FROM students AS T3)"}
{"question": "What is the name, count, and birthplace of the students with the highest SAT scores?", "query": "SELECT name,  count(*),  birthplace FROM students WHERE SAT_score  >  \"null\" GROUP BY name ORDER BY count(*) DESC"}
{"question": "What are the first names and ids of all customers, and how many accounts do each have?", "query": "SELECT T1.id,  T1.firstname,  T2.account_id FROM customers AS T1 JOIN accounts AS T2 ON T1.customer_id  =  T2._id GROUP BY T1.id,  T2.account_name HAVING count(*)  =  1"}
{"question": "What are the names and years of all the athletes who won the \"golden ball award\"?", "query": "SELECT T1.name,  T1.\"year\" FROM athlete AS T1 WHERE T1.name  =  \"Aaron\" AND T1.name  =  'Aaron'"}
{"question": "find the full name, address, and phone number of the employees whose names are not in the database", "query": "SELECT T1.full_name,  T1.address,  T1.phone_number FROM employees AS T1 WHERE T1.name  NOT IN (SELECT T2.name FROM employees AS T2)"}
{"question": "What is the population of the town with the most number of restaurants?", "query": "SELECT T1.city_name,  T1.population FROM cities AS T1 JOIN restaurants AS T2 ON T1.city_id  =  T2_id WHERE T2.city_name  =  \"New York\""}
{"question": "What are the average values for all products with name starting with \"M\" and \"D\"?", "query": "SELECT AVG(price) FROM products WHERE name LIKE \"M%\";"}
{"question": "What is the name and age of the teacher who has been the class's teacher for the longest amount of time?", "query": "SELECT T1.name,  T1.age FROM teacher AS T1 JOIN teacher_class AS T2 ON T1.teacher_id  =  T2.teacher_id WHERE T2.teacher_id  = (SELECT teacher_id FROM teacher_class WHERE teacher_id  =  (SELECT teacher_id FROM teacher_teacher_class WHERE teacher_id  IN (SELECT teacher_id FROM teacher WHERE teacher_id  =  T1.teacher_id ) ) ) AND T2.teacher_id = T1.teacher_id AND T2"}
{"question": "Find the name of all customers who received any of the following products:", "query": "SELECT T1.product_name,  T1.product_id FROM product AS T1 WHERE T1.product_id  IN ( SELECT T2.product_id FROM product AS  T2 WHERE T2.product_name  =  \"Soda\" )"}
{"question": "find the name, age and gender of the last speaker", "query": "SELECT T1.name,  T1.age,  T1.gender FROM speaker AS T1 WHERE T1.id  =  (SELECT MAX(id) FROM speaker)"}
{"question": "What are the names, genders, ages, and salaries of the employees in the company?", "query": "SELECT name, gender, age, salary FROM employees"}
{"question": "List the names of all students who took a class with the teacher named \"Jane Smith\" and also took a class with the teacher named 'Smith'", "query": "SELECT T1.student_id,  T1.name_first,  (SELECT name_last FROM teacher WHERE teacher.name = \"Smith\") AS teacher_name,  T1.name_second,  T1.name_middle,  T1.name_family,  T1.name_suffix,  T1.name_title,  T1.name_honorific,  T1.name_nickname,  T1.name2_first,  T1.id_student,  T1.name_id_first,  T1.first"}
{"question": "Find the city with the largest number of employees", "query": "SELECT T1.city,  T1.population FROM employees AS T1 GROUP BY T1.city ORDER BY T1.city;"}
{"question": "List all the students in the school", "query": "SELECT student_id,  student_name,  student_age,  student_gender,  student_address,  student_city,  student_state,  student_zip,  student_phone,  student_email,  student_major,  student_year_of_graduation,  student_year_of study,  student_year_of graduation,  student_year_of enrollment,  student_year_of birth,  student_year_of death,  student_year_of marriage,  student_year_of divorce,  student_year_of first"}
{"question": "Given:", "query": "SELECT count(*) AS count FROM customer"}
{"question": "What is the name and title of the student who bought the most tickets?", "query": "SELECT T1.student_name,  T2.name FROM student_record AS T1 JOIN ticket_record AS T2 ON T1.id  = T2.student_id WHERE T2.number_of_tickets  =  (SELECT max(T3.number_of_tickets) FROM student_record AS T3)"}
{"question": "Show all the names of faculty who have written atleast one paper", "query": "SELECT T1.full_name FROM faculty AS T1 JOIN papers AS T2 ON T1.person_id  =  T2.person_id WHERE T2.paper_id  =  (SELECT id FROM papers WHERE author_id  =  T1.id)"}
{"question": "Which employees are not part of the \"Caterpillar\" corporation?", "query": "SELECT T1.firstname,  T1.lastname FROM employee AS T1 WHERE T1.company_id !=  \"Caterpillar\""}
{"question": "Find the number of flights to the city \"Paris\"", "query": "SELECT COUNT(*) AS count FROM flights WHERE city  =  \"Paris\""}
{"question": "What is the id and name of the user who created the account with id 1015?", "query": "SELECT T1.id,  T1.name FROM user AS T1 WHERE T1.id  =  1015"}
{"question": "What are the names and ids of all students who took at least one course in physics?", "query": "SELECT T1.name,  T1.\"id\" FROM student AS T1 WHERE T1.courses  =  \"Physics\""}
{"question": "What is the date and time of the first day of the first semester, when the total number of students was 5", "query": "SELECT date_of_first_day,  time_of_first_day FROM semester WHERE total_students  =  5"}
{"question": "Show the names and the ages of all students enrolled in a single class", "query": "SELECT T1.name,  T1.age FROM student AS T1 JOIN class AS T2 ON T1.student_id  =  T2_id WHERE T2.class_name  =  \"Math\""}
{"question": "what is your name?", "query": "SELECT name FROM Person WHERE name = \"Bob\""}
{"question": "What is the name and city of the largest airport in the world?", "query": "SELECT name,  city FROM airport WHERE name  =  \"Heathrow\""}
{"question": "What is the average temperature for each state?", "query": "SELECT AVG(temperature) FROM weather_data WHERE state_code  =  \"AL\""}
{"question": "What are the names all companies in which the company 'A' is a direct or indirect owner?", "query": "SELECT T1.company_name FROM company AS T1 JOIN company_ownership AS T2 ON T1.id  =  T2.owner_id WHERE T2.owner_id  =  'A'"}
{"question": "Find the first names, last names and ids of the students in alphabetical order of last name and their grades", "query": "SELECT T1.first_name,  T1.last_name,  T1.id FROM students AS T1 WHERE T1.last_name  LIKE '%' ||? || '%' ORDER BY T1.last_name,  last_name"}
{"question": "show the name of all users with id between 100 and 199?", "query": "SELECT name FROM user WHERE id  IN (100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159"}
{"question": "Give me the names of all employees who have not had any training", "query": "SELECT T1.employee_id,  T1.name_first,  count(*) FROM employee AS T1 WHERE T1.training_id  =  0 GROUP BY T1.employee_id ORDER BY count(*)  DESC LIMIT 10"}
{"question": "What are the names and counts of all the movies in the database?", "query": "SELECT T1.title,  T1.count FROM movie AS T1 WHERE T1.title !  NULL;"}
{"question": "How many distinct products do I have?", "query": "SELECT DISTINCT product_id FROM products"}
{"question": "Are there any students who take both Computer Science and Mathematics?", "query": "SELECT T1.student_id,  T2.course_id FROM Student_Course_Enrolment  AS T1 JOIN courses AS T2 ON T1.course_id  =  T2.course_id WHERE T1.student_id  IN (SELECT T3.student_id FROM Student_Course_Attendance AS T3 WHERE T3.course_id  =  'CS' OR T3.course_id  IN (SELECT T4.course_id FROM Course_Enrollment AS T4 WHERE T4.course_id  =  \"MATH"}
{"question": "What are the names, birth dates, and nicknames of the two men who attended the birthday party at the beginning and ending of the semester?", "query": "SELECT name,  birthdate,  nickname FROM person WHERE person.id  =  (SELECT person.id FROM person WHERE person.id  IN (SELECT person.id FROM person WHERE (person.id  =  (SELECT min(person.id) FROM person WHERE person.id  <  (SELECT max(person.id) FROM person)) AND person.id  <  (select person.id from person where person.id  <  ( SELECT max(person.id) FROM  person)))))"}
{"question": "Find the location of the product with the highest sale price", "query": "SELECT T1.location,  T1.price FROM product AS T1 WHERE T1.price  =  (SELECT MAX(T2.price) FROM product AS T2)"}
{"question": "How many times did the player \"Oliver Thomas\" get a goal in the season of 2017?", "query": "SELECT COUNT(*),  player_id FROM player_goals WHERE player_id  =  \"Oliver Thomas\""}
{"question": "How many times has \"WASHINGTON\" been used in the same question?", "query": "SELECT count(*)  FROM question WHERE question.question LIKE '%WASHINGTON%'"}
{"question": "What is the name and id of the person who has no family member?", "query": "SELECT T1.id,  T1.name FROM person AS T1 JOIN family AS T2 ON T1.id  =  T2.person_id WHERE T2.id  =  0"}
{"question": "What are the first, middle, and last names of the students taught at the University of Wisconsin?", "query": "SELECT T1.first_name,  T1.middle_name,  T1.last_name FROM students AS T1 JOIN classes AS T2 ON T1.student_id  =  T2._id WHERE T2.university_id  =  'UW'"}
{"question": "What are the names and the email addresses of all students in the U", "query": "SELECT T1.name,  T1.email FROM students AS T1 WHERE T1.id  =  (SELECT T2.id FROM students AS T2 WHERE T2.name  = \"U\")"}
{"question": "Show all cities that have more than one player and are not in California", "query": "SELECT city_id,  city_name FROM cities WHERE city_name  =  'Chicago' AND city_name !=  'Chicago' AND city_id  NOT IN (SELECT city_id FROM city_state)"}
{"question": "Find the first name and last name of any student who has both an account number and a credit card", "query": "SELECT T1.first_name,  T1.last_name FROM students AS T1 JOIN student_account_history AS T2 ON T1.id  = T2.student_id JOIN student_credit_card_history AS T3 ON T1.ID  =  T3.student_id WHERE T2.account_number  =  '12345678' AND T3.credit_card  =  '12345678'"}
{"question": "Find the names of all the products that have been produced in the past 5 years", "query": "SELECT T1.product_name,  T1.year FROM product_history AS T1 WHERE T1.product_id  IN (SELECT product_id FROM product_history WHERE product_name  =  \"product_name\") AND T1.year  IN (SELECT year FROM product_history WHERE product_id  =  T1)"}
{"question": "Find the number and names of all movies in which the actor \"Denzel Washington\" appears", "query": "SELECT T1.movie_title,  T1.movie_id,  T1.actor_id,  T1.director_id,  T1.release_year,  T1.rating,  T1.genre_id,  T1.language_id,  T1.country_id,  T1.synopsis,  T1.poster_path,  T1.actor_first_name,  T1.actor_last_name,  T1.actor_gender,  T1.actor_birth_date,  T1"}
{"question": "What is the name and type of the event that is used for most of the parties?", "query": "SELECT DISTINCT event_name,  event_type FROM event"}
{"question": "What is the average cost of all products?", "query": "SELECT AVG(price) FROM product"}
{"question": "Find all products with a price of $0", "query": "SELECT name FROM product WHERE price  =  \"0\""}
{"question": "What is the number and percentage of employees who are of African American descent?", "query": "SELECT count(*) AS \"Number of African American Employees\",  (100 * count(*) / sum(count(*))) AS \"Percentage of African American Employees\" FROM employee WHERE race = 'African American'"}
{"question": "List the number of customers and their names, in ascending order", "query": "SELECT COUNT(*) FROM Customer;"}
{"question": "What is the names of all the students, in order by the number of years they have been attending the university?", "query": "SELECT T1.name,  T1.age FROM students AS T1 GROUP BY T1.age ORDER BY T1.age"}
{"question": "How many students are not in the classes for which they are required to take a course?", "query": "SELECT DISTINCT student_id FROM student_course_enrollment WHERE student_id  =  \"$student_id\" AND course_id  =  \"$course_id\""}
{"question": "Show the names and addresses of customers", "query": "SELECT T1.customer_name,  T2.customer_address FROM customers AS T1 JOIN customer_address_history AS T2 ON T1.id  = T2.customer_id"}
{"question": "What is the id of the city with the most number of employees in the company?", "query": "SELECT city_id FROM employees WHERE company_id  =  \"ABC\""}
{"question": "What are the different nationalities of the CEO of each company? Show each nationality and the number for each company", "query": "SELECT T1.nationality,  T1.company_id FROM company_details AS T1 JOIN company_employees AS T2 ON T1.company_id  =  T2_company_id WHERE T2.employee_id  =  T1.id"}
{"question": "How many students are there in the first term?", "query": "SELECT T1.student_id,  T1.student_name,  T1.student_age,  T1.student_sex,  T1.student_major,  T1.student_year,  T1.student_gpa,  T1.student_phone,  T1.student_email,  T1.student_address,  T1.student_city,  T1.student_state,  T1.student_country,  T1.student_type,  T1.student_status,  T1.student_degree"}
{"question": "What are the salaries of all the employees?", "query": "SELECT T1.employee_name,  T1.salary FROM employees AS T1"}
{"question": "How many students have been enrolled in the statistics course in the past three years?", "query": "SELECT T1.student_id,  T1.year,  T1.class FROM student AS T1 JOIN class_history AS T2 ON T1.student_id  =  T2.[student_id] WHERE T1.class  =  \"statistics\" AND T2.year  =  \"2009\" AND T2.year  <  \"2010\" AND T2.year  >  \"2011\""}
{"question": "Find the first and last names of the customers who have visited the store 3 times since January 1, 2012", "query": "SELECT T1.first_name,  T1.last_name FROM customer AS T1 JOIN visit_history AS T2 ON T1.customer_id  =  T2.[customer_id] WHERE T2.visit_date  >  '2012-01-01' AND T2.visit_date  <  '2012-01-01 00:00:00'"}
{"question": "(a question about a sql table) Show the names of pilots and the names of the cities they have flown", "query": "SELECT T1.name,  T2.city FROM pilots AS T1 JOIN flights AS T2 ON T1.pilot_id  =  T2.\"pilot_id\""}
{"question": "Find the number of labs that are associated with each project", "query": "SELECT count(*) from project_lab WHERE project_id = 1"}
{"question": "List the names of the members who are not in charge of a single activity", "query": "SELECT T1.person_id,  T2.name FROM Person AS T1 LEFT JOIN Person_Activity AS T2 ON T1.person_id  =  T2.\"person_id\" WHERE T2.activity_id  =  '1'"}
{"question": "Example of some or all task items: (", "query": "SELECT count(*)  FROM  (SELECT * FROM students) AS T1"}
{"question": "What is the first value of the transaction?", "query": "SELECT T1.transaction_amount FROM transactions AS T1 WHERE T1.transaction_date  =  \"2014-01-01\""}
{"question": "What are the names in ascending order of a city's population?", "query": "SELECT T1.city,  T1.population FROM city AS T1 ORDER BY T1.population ASC"}
{"question": "What are the names, titles, and ages of the students of the class 'C' in the year 2009?", "query": "SELECT T1.name,  T1.title,  T1.age FROM student AS T1 WHERE T1.class_id  =  'C' AND YEAR  =  2009"}
{"question": "What are the names, age and department of the employees of the city of London?", "query": "SELECT T1.name,  T1.age,  T1.department_id FROM employees AS T1 WHERE T1.city_id  =  \"London\""}
{"question": "What is the id in the table of the largest number of users?", "query": "SELECT MAX(user_id) FROM user"}
{"question": "How many times the word \"B\" appears in a book?", "query": "SELECT T1.word_id,  T1.word,  T1.count(*) FROM word_table AS T1 WHERE T1.word  =  \"B\" GROUP BY T1.word;"}
{"question": "What is the cost of a car?", "query": "SELECT T1.price FROM car AS T1 WHERE T1.model_id  =  \"1\""}
{"question": "{all of the above}", "query": "SELECT T2.name,  T1.Eliminate_Move FROM elimination AS T1  JOIN wrestler AS T2 ON T2.Wrestler_ID  =`T1.Wrestler_ID`"}
{"question": "What country has the highest population?", "query": "SELECT T1.country,  T1.population FROM country AS T1 ORDER BY population DESC"}
{"question": "List all the ids and names of all books that are written in one of the following languages: English, Chinese, French, German, Spanish, and Italian", "query": "SELECT T1.id,  T1.name FROM book AS T1 JOIN language AS T2 ON T1.language_id  =  T2.language_id WHERE T2.language  =  \"English\" OR T2.language  =  'Chinese' OR T2.language  = 'French' OR T2.language  ==  'German' OR T2.language  ='Spanish' OR T2.language  =\"Italian\""}
{"question": "What are the names, salaries, and age of each employee?", "query": "SELECT T1.first_name,  T1.last_name,  T1.salary,  T1.age FROM employees AS T1;"}
{"question": "Find the names of movies that are in the 'Action' or 'Drama' category", "query": "SELECT T1.title FROM movies AS T1 WHERE T1.category  =  \"Action\" OR T1.category  =  'Drama'"}
{"question": "What are the names, ranks, and ages of all the teachers?", "query": "SELECT name,  rank,  age FROM teacher"}
{"question": "?", "query": "SELECT name FROM track"}
{"question": "What are the names os the first name and id of the employees who are older than at least one manager?", "query": "SELECT T1.FirstName,  T1.ID FROM Employee AS T1 JOIN Employee_Manager AS T2 ON T1.ID  =  T2.EmployeeID WHERE T2.ManagerID  =  1"}
{"question": "What is the total sales of the store in New Orleans?", "query": "SELECT sum(transaction_amount) FROM Financial"}
{"question": "What are the names, last names, and cities of the customers who have both a first and a last name?", "query": "SELECT T1.customer_name,  T2.customer_name,  T3.city FROM customers AS T1 JOIN customers AS T2 ON T1.cid  =  T2.cid JOIN customers AS T3 ON T2.cid  =  T3.cid WHERE T1.name  = 'John Smith' AND T2.name  =  \"John Smith\" AND T3.name  =  \"New York\""}
{"question": "What is the receipt date of the documents with id 3?", "query": "SELECT receipt_date FROM documents WHERE id  =  3"}
{"question": "What was the name of the student who is on the trip with Roni?", "query": "SELECT T1.name FROM students AS T1 JOIN trip AS T2 ON T1.student_id  =  T2._id WHERE T2.name  =  \"Roni\""}
{"question": "(a novel question, about a new table) What is the age of the student with id 6?", "query": "SELECT T1.age FROM student AS T1 WHERE T1.id  =  6"}
{"question": "What is the number and the country of the country with the most number of cities?", "query": "SELECT COUNT(*),  country_id FROM country WHERE population  >  0"}
{"question": "What is the name, size, and price of the car with id 33?", "query": "SELECT name, size, price FROM car WHERE id = 33"}
{"question": "What is the name and id of the student who has not enrolled in any class yet?", "query": "SELECT T1.student_id FROM student AS T1 WHERE T1.enrolled_in_class =  0"}
{"question": "What are the first three questions of the test?", "query": "SELECT T1.question_text,  T1.question_id,  T1.question_type,  T1.question_order,  T1.question_text_id,  T1.answer_id,  T1.correct_answer_id,  T1.[question_id],  T1.[question_type],  T1.[question],  T1.[question2],  T1.[question3],  T1.[question4],  T1.[question5],  T1.[question6],  T1"}
{"question": "(a novel question, about a database, the question is about a table), after \"", "query": "(the sql query to answer the query), after \""}
{"question": "How many customers do they have?", "query": "SELECT count(*) from customer"}
{"question": "List the names of all products with their price and manufacturer code", "query": "SELECT T1.product_name,  T2.product_price,  T3.product_manufacturer FROM products AS T1 JOIN product_description AS T2 ON T1.product_id  =  T2.product_id JOIN product_price AS T3 ON T2.product_price_id  =  T3.product_price_id"}
{"question": "What are all the distinct locations in California?", "query": "SELECT DISTINCT location FROM locations"}
{"question": "Find the average score of the students in the first and third term of the course \"CS 101\" and compare it to the score of the students in the seventh", "query": "SELECT T1.avg_score FROM (SELECT T1.score FROM students AS T1 WHERE T1.course_id  =  \"CS 101\" AND T1.term  =  \"First\" ) AS T2 JOIN (SELECT T1.score FROM T1.score AS T1 WHERE T1.term  =  'Third' ) AS T3 ON T2.id  =  T3.id"}
{"question": "How many different locations is the school with code BUS has? List the school id, city code, and name", "query": "SELECT DISTINCT T1.school_id,  T1.city_code,  T1.name FROM school AS T1 JOIN school_city AS T2 ON T1.school_id  =  T2.school_id WHERE T2.city_code  =  \"BUS\""}
{"question": "What is the name and the id of the player who has the highest average age?", "query": "SELECT T1.name,  T2.id FROM player AS T1 JOIN player_stats AS T2 ON T1.id  =  T2.id WHERE T2.average_age  >  (SELECT T3.average_age FROM player AS T3 WHERE T3.id  =  T2)"}
{"question": "Find the names of employees with no spouse relation with any other employee", "query": "SELECT T1.employeeid,  T1.name FROM employees AS T1 JOIN employee_spouse AS T2 ON T1.emp_id  =  T2.emp_id WHERE T2.spouse_id  =  \"null\""}
{"question": "What are the names and ids of students who have the same address in both cities?", "query": "SELECT T1.student_id,  T1.address_id FROM student AS T1 JOIN student_addresses AS T2 ON T1.student_id  =  T2.student_id WHERE T1.address_id  IN (SELECT address_id FROM address WHERE city = 'New York' AND state = 'NY') AND T2.student_id  =  T1.student_id GROUP BY T1.student_id ORDER BY count(*)"}
{"question": "What is the average salary of each department?", "query": "SELECT AVG(T1.salary) FROM departments AS T1;"}
{"question": "What are the names after \"", "query": "SELECT T1.name FROM customer AS T1 JOIN customer_address AS T2 ON T1.id  =  T2.customer_id JOIN address AS T3 ON T2.address_id  =  T3.id WHERE T3.city  =  \"San Francisco\""}
{"question": "Find the number of employees of each kind of staff whose salary is lower than 50000, sorted by the number of employees who are women", "query": "SELECT T1.employee_type,  T2.employee_name,  T3.employee_salary FROM employees AS T1 JOIN staff AS T2 ON T1.employee_id  =  T2._id JOIN salary AS T3 ON T1.employee_id = T3.employee_id WHERE T2.employee_type  =  \"Employee\" AND T3.employee_salary  <  50000"}
{"question": "What is the name and id of the customers who have at least 2 mortgage loans?", "query": "SELECT T1.name,  T1.id FROM customers AS T1 JOIN mortgage_loans AS T2 ON T1.name  =  T2.customer  AND T1.id  =  \"T2.customer\""}
{"question": "What is the name and age of the oldest student?", "query": "SELECT T1.firstname,  T1.lastname,  T1.age FROM student AS T1 WHERE T1.age  =  \"oldest student\""}
{"question": "Find the ids of customers with gender \"male\" and who are older than 60 and under 30", "query": "SELECT T1.customer_id,  T1.gender,  T1.age FROM customer AS T1 WHERE T1.gender  =  \"male\" AND T1.age  >  60 AND T1.age  <  30"}
{"question": "What are the names, and the number of people with the first name of \"David\" and last name of \"Jones\"?", "query": "SELECT T1.name,  T1.count FROM people AS T1 WHERE T1.name  =  \"David\" AND T1.last_name  =  \"Jones\""}
{"question": "What is the id, name and genders of the architects who are building a new house?", "query": "SELECT T1.id,  T1.name,  T2.gender FROM architects AS T1 JOIN building AS T2 ON T1.architect_id  =  T2.architect_id"}
{"question": "List the id, type and name of the customer who has the most transactions", "query": "SELECT T1.id,  T1.type,  T1.name FROM customer AS T1 JOIN customer_transactions AS T2 ON T1.id  =  T2.customer_id GROUP BY T1.id ORDER BY count(*) DESCRIBE;"}
{"question": "Find the name of all places that have a population of more than 1 million", "query": "SELECT name FROM place WHERE population  >  1000000"}
{"question": "What is the nameof the movie produced after 2000 and directed", "query": "SELECT T1.movie_name FROM movies AS T1 WHERE T1.year  >  2000"}
{"question": "What is the price of the least expensive product in the store?", "query": "SELECT MIN(price) FROM products"}
{"question": "Find the names of the product with the least price, and the product with the highest price", "query": "SELECT product_name,  price FROM products WHERE price  <  (SELECT min(price) FROM products) AND price  >  (SELECT max(price) FROM products)"}
{"question": "List the names of the movies you have seen", "query": "SELECT T1.title FROM film AS T2 JOIN film_watched AS T3 ON T2.id  =  T3.film_id WHERE T3.user_id  =  \"1\""}
{"question": "What is the name and id of an event that has a maximum number of participants?", "query": "SELECT T1.event_name,  T1.event_id FROM event AS T1 WHERE T1.max_participants  =  (SELECT max(T2.event_id) FROM event AS T2 WHERE T2.event_id  =  T1.event_id)"}
{"question": "Find the ids of all customers who bought some product with id 15", "query": "SELECT T1.customer_id FROM customer AS T1 JOIN order AS T2 ON T1.customer_id  = T2.customer_id WHERE T2.product_id  =  15"}
{"question": "What are the names (and their ranking) of the most popular movies of all time?", "query": "SELECT T1.name FROM movie AS T1 JOIN movie_rating AS T2 ON T1.movie_id  =  T2.movie_id WHERE T2.rating  >  (SELECT avg (rating) FROM movie_rating)"}
{"question": "How many times did the word dog appear in the book?", "query": "SELECT count(*) AS \"number of times\" FROM book WHERE word_id  =  \"dog\""}
{"question": "What are the names and id of all cars that have never won any match", "query": "SELECT T1.id,  T1.name FROM cars AS T1 WHERE NOT EXISTS (SELECT T2.id,  T2.name FROM match_results AS T2 WHERE T2.car_id  =  T1.id)"}
{"question": "What is the average number of students in each class", "query": "SELECT AVG(T1.stu_count) FROM class AS T1"}
{"question": "What is the name and date of a race in the past?", "query": "SELECT race_name,  race_date FROM races"}
{"question": "What is the name in the record with the most columns?", "query": "SELECT T2.name FROM table_name AS T1 JOIN table_name AS T2 ON T1.id  =  T2.parent_id WHERE T1.id  =  (SELECT max(id) FROM table_name)"}
{"question": "What is the average number of customers per day for each store?", "query": "SELECT AVG(count(*)),  store_name FROM store_sales GROUP BY store_name"}
{"question": "What are the names for the products of all the customers from the state of New York?", "query": "SELECT T2.Product_Name FROM Customer_Purchases AS T1 JOIN Products AS T3 ON T1.Product_ID  =  T3._id WHERE T1.Customer_ID  =  \"NY\""}
{"question": "Find all the information on the airport with a total number of passengers in 2020", "query": "SELECT T1.airport_name,  T1.airport_id,  T1.airport,  T1.city,  T1.country,  T1.country_code,  T1.country_name,  T1.latitude,  T1.longitude,  T1.population,  T1.population_density,  T1.population_growth,  T1.population_year,  T1.state,  T1.state_abbr,  T1.state_name,  T1.state_population,"}
{"question": "What are the names, locations and products of the enzymes which has an 'inhibitor' interaction?", "query": "SELECT T1.enzyme_name,  T1.enzyme_location,  T1.enzyme_product,  T1.inhibitor_name,  T1.inhibitor1_location,  T1.inhibitor2_location,  T1.substrate_name,  T1.substrate1_name,  T1.subtrate2_name,  T1.product_name,  T1.protein_name,  T1.aminoacid_name,  T1.nucleotide_name,  T1.molecule_name,  T"}
{"question": "How many votes does the candidate with id 1 get in the election?", "query": "SELECT COUNT(*),  candidate_id FROM election_votes WHERE candidate_id  =  1"}
{"question": "What is the name, date of birth and state of birth of the person who was born in the year 2040?", "query": "SELECT name,  date_of_birth,  state_of_birth FROM person WHERE date_of_birth  =  \"2040-01-01\""}
{"question": "How many years old are the persons with the first name of \"Jake\" and the last name of \"Doe\"?", "query": "SELECT T1.age FROM person AS T1 WHERE T1.name_first  =  'Jake' AND T1.name_last  =  'Doe'"}
{"question": "What are the names, locations, and numbers of the different types of buses on the campus?", "query": "SELECT T1.name,  T1.\"location\",  T1.number FROM bus_types AS T1 JOIN bus_routes AS T2 ON T1.bus_type_id  =  T2.\"bus_type_id\""}
{"question": "What are the ages, last names and salaries of all the engineers?", "query": "SELECT T1.age,  T1.last_name,  T1.salary FROM employees AS T1 WHERE T1.job  =  'engineer'"}
{"question": "What is the sum of all the ages of students?", "query": "SELECT sum(age) FROM Student"}
{"question": "What is the name of the artist who sang the song with the title \"I Wanna Be Your Dog\"?", "query": "SELECT T1.song_title,  T2.artist_name FROM Song AS T1 JOIN Song_Artist AS T2 ON T1.song_id  =  T2._id WHERE T1.song_title  =  \"I Wanna Be Your Dog\""}
{"question": "What is the number and names of cities in the state of Arizona?", "query": "SELECT City_Name,  City_State FROM City_Info WHERE State  =  \"Arizona\""}
{"question": "How many types of vehicles are there in total?", "query": "SELECT COUNT(*) FROM vehicle_type"}
{"question": "What are the names, ages, and genders of the students who took the course QM-213?", "query": "SELECT T1.name,  T1.age,  T1.gender FROM student AS T1 JOIN course AS T2 ON T1.id  =  T2.id WHERE T2.course_name  =  \"QM-213\""}
{"question": "What is the name in the table of the movie whose title is \"The Last Station\"?", "query": "SELECT name FROM movie WHERE title  =  \"The Last Station\""}
{"question": "Is there a female engineer in the company?", "query": "SELECT T1.gender FROM employee AS T1 WHERE T1.job_title  =  'Engineer'"}
{"question": "What are the names, ids, and salaries of all the professors in 2012", "query": "SELECT T1.name,  T1.* FROM professor AS T1 WHERE T1.year  =  2012"}
{"question": "What is the average age of all athletes with the last name 'Johanson'?", "query": "SELECT AVG(age) FROM athletes WHERE last_name  =  'Johanson'"}
{"question": "What are the names and ages of students who have the last name Smith?", "query": "SELECT T1.name,  T1.age FROM student AS T1 WHERE T1.last_name  =  \"Smith\""}
{"question": "Find the names and id of the customers who have not ordered anything", "query": "SELECT T1.customer_id,  T2.name FROM customers AS T1 JOIN order_details AS T2 ON T1.id  = T2.customer_id WHERE NOT EXISTS (SELECT T3.id FROM orders AS T3 WHERE T3.customer_id = T1.id)"}
{"question": "What is the name (or the id) of the film with the most number of cuts?", "query": "SELECT count(*) AS total_cuts FROM film WHERE cut_type  =  \"Cuts\""}
{"question": "What are the names, and the number of times, that the player named \"Kenny Anderson\" scored points in the 2004 season?", "query": "SELECT T1.player_name,  T1.number_of_times FROM player_stats AS T1 WHERE T1.player_name  =  \"Kenny Anderson\""}
{"question": "What are the names, ordered by number of votes, of the students who voted for the most popular candidate in the fall election?", "query": "SELECT T1.name,  T2.votes FROM student AS T1 JOIN election AS T2 ON T1.id  =  T2.id WHERE T2.candidate_id  =  (SELECT T3.candidate_id FROM candidate AS T3 WHERE T3.candidate_name  =  'John Smith') ORDER BY T1.votes DESC"}
{"question": "What are the names, last names and genders of all professors at the University of Washington?", "query": "SELECT name FROM professor WHERE name  =  \"John Doe\" OR name  =  \"Jane Doe\""}
{"question": "Find the name of all the employees in the office of the secretary", "query": "SELECT T1.employee_id,  T1.name_first,  'S' AS type FROM employee AS T1 WHERE T1.office_id  =  'S'"}
{"question": "How many different types of cars are in the database?", "query": "SELECT T1.type FROM car AS T1 JOIN car_type AS T2 ON T1.car_id  =  T2.car_id WHERE T2.type  =  \"M\""}
{"question": "What are the names, prices, and dates of the products that customers have ordered?", "query": "SELECT product_name,  price,  date FROM orders WHERE customer_id  =  '1'"}
{"question": "Which countries have more than one person who is in the military?", "query": "SELECT DISTINCT country_code FROM Country WHERE (SELECT count(*) FROM Country_Military) > 1"}
{"question": "What is the minimum total price of all purchases?", "query": "SELECT min(total_price) FROM purchases"}
{"question": "Given the name of a city, find the name of a department in a university", "query": "SELECT T1.department_name FROM university_department AS T1 WHERE T1.city_name  =  \"New York\""}
{"question": "How many students are there in each dorm?", "query": "SELECT T1.dorm_id,  T1.student_count FROM dorms AS T1 JOIN students AS T2 ON T1.dorm_id  =  T2.dorm_id"}
{"question": "What are the first and last names of the managers in ascending order of salary?", "query": "SELECT T1.firstname,  T1.lastname FROM manager AS T1 ORDER BY T1.salary ASC"}
{"question": "What are the names, positions and salaries of all employees?", "query": "SELECT T1.name,  T2.position,  T3.salary FROM employee AS T1 JOIN employee_details AS T2 ON T1.id  =  T2.id  AND T2.id  =  (SELECT T3.id FROM employee_details AS T3 WHERE T3.id  =  T1.id)  AND T1.id  =  (SELECT id FROM employee_details AS T4 WHERE T4.id  =  T2.id)  AND T1.name  =  \"John\"  AND T1.position"}
{"question": "What is the average age of all users who have joined at least one group?", "query": "SELECT AVG(T1.age) FROM users AS T1 JOIN group AS T2 ON T1.user_id  =  T2.user_id WHERE T2.group_id  =  \"null\""}
{"question": "What are the names and ids of all the students who did not write a paper with the text \"My name is Sally\" in it?", "query": "SELECT T1.student_id FROM student AS T1 WHERE NOT EXISTS (SELECT 1 FROM paper AS T2 WHERE T2.text  =  \"My name is Sally\" AND T2.student_id  =  T1.student_id);"}
{"question": "Find the names of all the countries in which English is not the native language", "query": "SELECT T1.name FROM country AS T1 WHERE T1.language_code!= 'en'"}
{"question": "Show all the products from table \"products\" with a status \"on backorder\" and a price lower than $150", "query": "SELECT product_id,  product_name,  product_price,  product_description,  product_status,  product_quantity,  product_quantity_backorder,  product_quantity_on_backorder,  product_price_backorder,  product_date_added,  product_date_available,  product_date_available_backorder,  product_weight,  product_weight_backorder,  product_height,  product_height_backorder,  product_width,  product_width_backorder,  product_length,  product_length"}
{"question": "What are the numbers of passengers on each train?", "query": "SELECT T1.train_id,  T1.passenger_count FROM trains AS T1 WHERE T1.train_id  =  \"1\""}
{"question": "What is the number and names of the students who have been married for the longest time?", "query": "SELECT T1.student_id,  T2.name FROM students AS T1 JOIN students AS T2 ON T1.id  = T2.student_id WHERE T2.married_date  =  (SELECT MAX(T3.married_date) FROM students AS T3)"}
{"question": "Find the names of all drivers in the race with the id 840", "query": "SELECT name FROM Driver WHERE id  =  840"}
{"question": "What is the name and description of the software product?", "query": "SELECT T1.name,  T1.description FROM product AS T1"}
{"question": "What are all the drivers' first, last names?", "query": "SELECT DISTINCT T1.firstname,  T1.lastname FROM Driver AS T1 JOIN Driver_info AS T2 ON T1.id  =  T2.driver_id WHERE T2.firstname  =  \"first\" AND T2.lastname  =  \"last\""}
{"question": "What are the names, city, and ages of the parents of the student named \"Suzanne Collins\"?", "query": "SELECT T1.first_name,  T1.last_name,  T1.city,  T1.age FROM student AS T1 WHERE T1.student_id  IN (SELECT T2.student_id FROM student AS T2 WHERE T2.first_name  =  \"Suzanne Collins\")"}
{"question": "How many different students have at least one course with 'A' as the first letter in the first name?", "query": "SELECT DISTINCT name FROM student AS T1 JOIN course AS T2 ON T1.student_id  =  T2._id WHERE T2.course_name  =  'A'"}
{"question": "What are the songs that were recorded in 2012?", "query": "SELECT DISTINCT song_name FROM song WHERE year  =  2012"}
{"question": "What is the title of the movie with the greatest number for the number of actors?", "query": "SELECT T1.title FROM Movie AS T1 JOIN Actors AS T2 ON T1.movie_id  =  T2._id WHERE T2.number  =  \"number of actors\""}
{"question": "What are the names, nicknames, and genders of all the players who have played at least one tournament?", "query": "SELECT player_name,  nickname,  gender FROM player WHERE player_id  IN (SELECT player_id FROM tournament_player_history WHERE tournament_id = 1)"}
{"question": "What are the names the students of the same college in different years?", "query": "SELECT T1.name,  T2.name FROM student AS T1 JOIN student AS T3 ON T1.id  =  T3.id WHERE T1.college  =  \"College of Science\" AND T3.id  =  T1.next_id AND T1.year  =  \"2010\" AND T1.next_id  =  \"2011\""}
{"question": "What are the names, ages and salaries of all employees who have been with the company for at least 3 years?", "query": "SELECT T1.first_name,  T1.last_name,  T1.age,  T1.salary FROM Employees AS T1 WHERE T1.age  >  3"}
{"question": "What are the names, genders, and numbers of the customers who made a transaction in February 2016?", "query": "SELECT name,  gender,  number FROM customer WHERE date(date_of_birth)  =  date(NOW()) AND date(date_of_transaction)  =  date(NOW())- INTERVAL 2 MONTHS"}
{"question": "What are the names, number of books and authors of all children's books?", "query": "SELECT T1.title,  T1.author,  T1.number_of_books FROM books AS T1 JOIN authors AS T2 ON T1.author_id  =  T2.id WHERE T1.title  =  \"The Cat in the Hat\""}
{"question": "What are the ids and names of all the courses that have more than 100 students?", "query": "SELECT T1.course_id,  T1.course_name FROM course AS T1 WHERE T1.student_count  >  100"}
{"question": "What is the id and last name and address of the driver who participated in the latest race?", "query": "SELECT T1.driver_id,  T1.last_name,  T1.address FROM driver AS T1 WHERE T1.id  =  (SELECT T2.driver_id FROM race AS T2 WHERE T2.race_id  =  (SELECT MAX(T3.race_id) FROM race AS T3))"}
{"question": "What is the name, id, and course of the student who registered for the highest number of courses?", "query": "SELECT T1.name,  T1.id,  T1.course FROM student AS T1 JOIN course AS T2 ON T1.student_id  =  T2.student_id WHERE T1.course  =  \"CIS\""}
{"question": "What are the cities where the store named \"Dollar Tree\" is located?", "query": "SELECT city_name FROM store WHERE store_name = \"Dollar Tree\""}
{"question": "What is the number of people who took the class that has a particular title?", "query": "SELECT COUNT(*) FROM STUDENT AS S1 JOIN CLASS_RECORD AS S2 ON S1.class_id  =  S2.class_id WHERE S2.title  =  \"Math\""}
{"question": "Show the names of directors who have attended at least two conferences", "query": "SELECT T1.director_name FROM directors AS T1 JOIN conference_attendance AS T2 USING (director_id) WHERE T1.director_id  =  T2.\"director_id\" AND T2.conference_id  =  2"}
{"question": "What are the names and id's of the persons, in order by last name?", "query": "SELECT T1.last_name,  T1.id FROM person AS T1 ORDER BY T1.last_name"}
{"question": "What are the id of customers who do not have an income of at least 1000?", "query": "SELECT T1.id FROM customer AS T1 WHERE T1.income  <  1000"}
{"question": "\"Who are the three people that live in the house that has the highest population?\"", "query": "SELECT T1.person_id,  T1.name,  T1.age FROM Person AS T1 JOIN Person_House AS T2 ON T1.person_id  =  T2.person_id JOIN House AS T3 ON T2.house_id  =  T3.house_id WHERE T3.population  >  (SELECT max(T4.population) FROM House AS T4)"}
{"question": "What are the names, first names and last names of students who failed the class in the 2008 spring semester?", "query": "SELECT T1.student_first_name,  T1.student_last_name FROM students AS T1 JOIN students_classes AS T2 ON T1.student_id  =  T2.student_id WHERE T2.class_id  =  \"1\" AND T2.semester_id  =  \"2008\" AND T2.status  =  \"F\""}
{"question": "(a question about a sql table) What is the average fastest lap speed?", "query": "SELECT avg(speed) FROM lap_record WHERE lap_id = 1;"}
{"question": "What is the first name, last name, and id for the top three players who won the most player awards", "query": "SELECT T1.first_name,  T1.last_name,  T1.id FROM player AS T1 JOIN awards AS T2 ON T1.id  =  T2.id WHERE T2.type  =  'player_award' AND T2.value  =  '1' ORDER BY T1.value DESC LIMIT 3"}
{"question": "What is the name, number, and gender of the person who is sitting behind the person with the id of 14 in the row \"Gymnasium\"", "query": "SELECT name,  number,  gender FROM students WHERE id  =  \"14\" AND school_id = \"Gymnasium\""}
{"question": "How many students have signed up for each course in the following table?", "query": "SELECT T1.course_id,  T1.course_name,  T1.course_number,  T1.course_price,  T1.course_credit,  T1.course_hours,  T1.course_days,  T1.course_semester,  T1.course_year,  T1.course_teacher_id,  T1.student_id,  T1.grade_id,  T1.credit_id,  T1.price_id,  T1.date_start,  T1."}
{"question": "What is the name of the employee who has the highest salary?", "query": "SELECT T1.name FROM employee AS T1 WHERE T1.salary  =  ( SELECT MAX(T2.salary) FROM employee AS T2 )"}
{"question": "What are the average monthly salary of all the employees in the company?", "query": "SELECT AVG(salary) FROM employees"}
{"question": "what is the average fastest lap speed for cars in the nascar races, ordered by year, in ascending alphabetical order of year?", "query": "SELECT AVG(T2.speed) FROM race AS T1 JOIN car AS T2 ON T1.car_id  =  T2.[id] WHERE T1.year  =  \"2001\" ORDER BY T2.year ASC"}
{"question": "What are the names, gender and ages of all the students?", "query": "SELECT T1.first_name,  T1.last_name,  T1.age FROM Students AS T1"}
{"question": "\"What are the names of customers who do not have an selling account?", "query": "SELECT customer_id FROM customers WHERE account_type  =  \"Selling\" AND account_status  =  \"Closed\""}
{"question": "Find the names of customers who are not in the customer service department", "query": "SELECT T1.customer_first_name, T1.customer_last_name, T1.customer.customer_phone FROM customers AS T1 JOIN customers_phones AS T2 ON T1.phone_id  =  T2.phone_id WHERE T1.customer_id !=  T2.customer_id"}
{"question": "Find the names of all cars that are not of the type \"Luxury\"", "query": "SELECT T1.car_name FROM car AS T1 WHERE T1.car_type !=  \"Luxury\""}
{"question": "How many airports are there in the US?", "query": "SELECT COUNT(*) AS \"How many airports are there in the US?\" FROM airport"}
{"question": "What are the names (first and last) of all students in the list?", "query": "SELECT T1.name FROM students AS T1 WHERE T1.name IN (SELECT T2.name FROM students AS T2 WHERE T2.name IN (SELECT T3.name FROM students AS T3 WHERE T3.name IN (SELECT T4.name FROM students AS T4 WHERE T4.name IN (SELECT T5.name FROM students AS T5 WHERE T5.name IN (SELECT T6.name FROM students AS T6 WHERE T6.name IN (SELECT T7.name FROM students AS T7 WHERE T7.name IN (SELECT T8.name FROM students AS T"}
{"question": "What are the names and ids of customers who are not from any state in the United States?", "query": "SELECT customer_id,  customer_first_name,  customer_last_name,  customer_address,  customer_city,  customer_state,  customer_zip,  customer_country,  customer_phone,  customer_email,  customer_fax,  customer_mobile,  customer_fax_number,  customer_email_address,  customer_gender,  customer_birth_date,  customer_dob,  customer_dob_year,  customer_dob_month,  customer_dob_day,  customer_dob_hour,"}
{"question": "Find the names of all songs that are sung by more than one person", "query": "SELECT DISTINCT song_name FROM Song_Singer"}
{"question": "What are the starting and ending dates of detentions of teachers who have last name \"Schultz\" in the order of their last names", "query": "SELECT T1.start_date,  T1.end_date FROM Detention AS T1 WHERE T1.last_name  =  \"Schultz\" ORDER BY T1.last_name"}
{"question": "Find the first and last name of the person who has the most activities", "query": "SELECT first_name,  last_name FROM Person WHERE count(*)  =  (SELECT max(count(*) FROM activity) FROM person)"}
{"question": "(a novel question, about a section of a different table)", "query": "SELECT T1.title,  T1.author,  T1.price,  T1.publisher,  T1.year,  T1.isbn,  T1.isbn13,  T1.isbn10,  T1.isbn9,  T1.isbn8,  T1.isbn7,  T1.isbn6,  T1.isbn5,  T1.isbn4,  T1.isbn3,  T1.isbn2,  T1.isbn1,  T"}
{"question": "What are the names, starting and ending years, and the results of the races that started in the month of October?", "query": "SELECT T1.Name,  T1.Start_Year,  T1.End_Year,  T1.Result FROM Race AS T1 WHERE T1.Start_Year  >  '2010' AND T1.End_Year  <  '2011'"}
{"question": "What are the names in the group with the most people?", "query": "SELECT T1.name FROM group AS T1 WHERE T1.num_members  >  (SELECT T2.num_members FROM group AS T2 WHERE T2.name  =  'Group 1')"}
{"question": "What are the first three letters of each word in the phrase \"I will be on a plane in a couple of days?\"", "query": "SELECT T1.word FROM phrase AS T1 JOIN word AS T2 ON T1.word_id  =  T2.\"word_id\" WHERE T2.first_letter  =  \"I\" AND T2.last_letter  =  \"a\" AND T2.first_letter  >  \"I\" AND T2.\"word_id\"  =  (SELECT T3.word_id FROM word AS T3 WHERE T3.first_letter  =  T2.first_letter AND T3.last_letter  =  T2.\"last_letter\")"}
{"question": "What is the name of the actor who has sung the most songs?", "query": "SELECT T1.first_name,  T1.last_name,  T1.song_id,  T1.song_title,  T1.song_artist,  T1.song_duration,  T1.song_year,  T1.song_album,  T1.song_lyrics,  T1.song_genre,  T1.song_instrument,  T1.song_key,  T1.song_comment,  T1.song_date,  T1.song_length,  T1."}
{"question": "What are the names that are both \"Sara\", \"Thomas\" or \"Michael\" and \"male\"?", "query": "SELECT name FROM people WHERE name  =  \"Sara\" AND name  =  \"Thomas\" AND name  =  \"Michael\" AND name  =  \"male\""}
{"question": "What is the average rating score of the students?", "query": "SELECT AVG(rating) FROM student"}
{"question": "What are the names and ages for all of the employees?", "query": "SELECT T1.name,  T1.\"age\" FROM employee AS T1"}
{"question": "(a novel question, about a table) Return the name of the city that is the highest in elevation", "query": "SELECT name FROM cities WHERE elevation  =  (SELECT MAX(elevation) FROM cities)"}
{"question": "What are the first names of the employees who have the title of'manager'?", "query": "SELECT T1.name FROM employee AS T1 JOIN employee_title AS T2 ON T1.id  =  T2.employee_id WHERE T2.title  = 'manager'"}
{"question": "Find the names of all the employees who are younger than 25, and who are in the department \"Computer Science\"", "query": "SELECT T1.employee_id,  T2.name FROM employee AS T1 JOIN employee_department AS T2 ON T1.employee_id  =  T2.employee_id WHERE T2.department  =  \"Computer Science\" AND T1.age  <  25"}
{"question": "Which team has the most total points for the season?", "query": "SELECT sum(points) FROM team"}
{"question": "Find the name and title of the project that has the highest average age", "query": "SELECT T1.project_name,  T1.project_title FROM project AS T1 JOIN project_age_distribution AS T2 ON T1.project_id  =  T2.project_id WHERE T2.avg_age  =  (SELECT avg(age) FROM project_age_distribution WHERE project_id  =  (SELECT project_id FROM project_age_distribution WHERE T2.project_id  =  (SELECT T1.project_id FROM project AS T1 JOIN project AS T2 ON T1.parent_id  =  T2 ."}
{"question": "What is the name of the manager who has the most sales and the highest commission?", "query": "SELECT T1.manager_name,  T1.sales,  T1.commission FROM manager AS T1 JOIN sales AS T2 ON T1.manager_id  =  T2.manager_id JOIN commission AS T3 ON T1.sales  =  T3.sales WHERE T3.commission  >  T2.commission;"}
{"question": "What is the name and position of the person in charge of a city's public safety?", "query": "SELECT T1.name,  T1.position FROM city_manager AS T1 WHERE T1.city_id  = ?"}
{"question": "What are all the names of the countries where the movie 'The Dark Knight' was produced?", "query": "SELECT DISTINCT Country FROM country WHERE Country  =  \"United States\""}
{"question": "List the names of the cities where there are more people with red hair aged 25-30", "query": "SELECT city_code,  name_first,  name_last,  age_min,  age_max,  hair_color,  hair_color_desc,  hair_color_code,  hair_color_code_desc,  hair_color  FROM city_hair_color WHERE age_min  =  25 AND age_max  =  30 AND hair_color  =  'Red'"}
{"question": "Find the age for all students", "query": "SELECT T1.age FROM student AS T1 WHERE T1.id  =  \"1\""}
{"question": "What are the names, addresses and occupations of all the residents of a city?", "query": "SELECT T1.name,  T1.address,  T1.occupation FROM residents AS T1"}
{"question": "How many students are there in the university?", "query": "SELECT count(*) AS \"count\" FROM student"}
{"question": "Find the first name of employees whose first names start with the same letter", "query": "SELECT T1.first_name FROM employees AS T1 JOIN employees AS T2 ON T1.first_name  =  T2.first_name WHERE T1.first_name  LIKE  \"%A%\""}
{"question": "How many times did the band \"Tricky\" release a hit?", "query": "SELECT count(*)  FROM band_releases WHERE band_name  =  \"Tricky\""}
{"question": "(a question about a sql table) How many students have personal names that have \"J\"", "query": "SELECT T1.student_id FROM Student AS T1 WHERE T1.first_name  LIKE  'J%'"}
{"question": "What are the names, email addresses and phone numbers of all the employees for the company \"Wally's Wok Shop\"?", "query": "SELECT T1.firstname,  T1.lastname,  T1.email,  T1.phone,  T1.address_id,  T1.city,  T1.state_code,  T1.zipcode,  T1.country,  T1.[street_address],  T1.phone_type,  T1.phone_number,  T1.fax_number,  T1.address_type,  T1.address_status,  T1.address_street,  T1.address_city,  T"}
{"question": "What are the names, locations, and names of the products of all products of all plants of the company \"Walmart\"?", "query": "SELECT T1.name,  T2.location,  T3.product_name FROM product AS T1 JOIN plant AS T2 ON T1.plant_id  =  T2.plant_id JOIN product_of_plant AS T3 ON T2.product_id  =  T3.product_id WHERE T1.company_id  =  \"Walmart\""}
{"question": "What is the name, address, city, state, and zip code of the store with the most employees?", "query": "SELECT name,  address,  city,  state,  zip_code FROM store_employees WHERE store_id  =  \"1\""}
{"question": "What is the name and gender of the person who is older than the oldest person who is a student?", "query": "SELECT T1.person_id,  T1.name,  T1.[gender] FROM person AS T1 WHERE T1.age > T2.age AND T1.student_id  =  T2.[student_id]"}
{"question": "Find all the distinct ids of the employees", "query": "SELECT T1.employee_id FROM employee AS T1 WHERE T1.department_id = 1;"}
{"question": "List the number of books that are published each year", "query": "SELECT count(*) AS total FROM book WHERE year(publication_date)  =  \"2001\""}
{"question": "Find the number of faculty members of the department of Computer Information Systems", "query": "SELECT count(*) AS count FROM faculty WHERE department_id = 'CIS'"}
{"question": "What are the names and cities of the companies from which employees are receiving vacation time?", "query": "SELECT T1.company_name,  T1.city FROM employee_vacation AS T1 WHERE T1.employee_id  =  (SELECT T2.employee_id FROM employee AS T2 WHERE T2.company_id  =  T1)"}
{"question": "Find the average monthly salary of all employees of the company with the name \"Big Company\"", "query": "SELECT AVG(salary) FROM employee WHERE company_name  =  \"Big Company\""}
{"question": "Show the name of departments that have at least two players", "query": "SELECT T1.department_id,  T1.department_name FROM department AS T1 JOIN player_department AS T2 ON T1.department_id  =  T2._department_id WHERE T2.player_id  =  1"}
{"question": "What are the names, genders, and ages of all customers?", "query": "SELECT T1.name,  T1.gender,  T1.age FROM customer AS T1"}
{"question": "What is the average salary of the employees in the department whose rank is between 10 and 15 in 2004?", "query": "SELECT AVG(salary) FROM employee WHERE rank BETWEEN 10 AND 15 AND department_id =  '1'"}
{"question": "What is the id and first name for all customers with over $100,000 in sales?", "query": "SELECT T1.customer_id,  T1.customer_first_name FROM customer AS T1 WHERE T1.sales  >  100000"}
{"question": "How many customers had the last name \"Doe\" before \"Doe\" was married?", "query": "SELECT customer_id,  customer_first_name,  customer_last_name,  COUNT(*) FROM customers WHERE customer_last_name  =  \"Doe\" AND customer_first_name  =  \"D\" GROUP BY customer_id HAVING count(DISTINCT customer_first_name)  =  2"}
{"question": "I'm going to need a query that will find the number of courses that have a total of at least two sections", "query": "SELECT count(*) from course as c1, course as c2 WHERE c1.course_id = c2.course_id AND c1.course_id!= c2.course_id"}
{"question": "What are the ids, names, and ages of the students who are the oldest and youngest?", "query": "SELECT T1.id,  T1.name,  T1.age FROM Student AS T1 WHERE T1.age  =  (SELECT min(age) FROM Student) AND T1.age  =  ((SELECT max(age) FROM Student))"}
{"question": "Find the customer name and id who has the highest balance", "query": "SELECT customer_id,  customer_name FROM customer ORDER BY customer_balance DESC LIMIT 1"}
{"question": "What is the average age of the students who are registered to this class?", "query": "SELECT T1.age FROM students AS T1 JOIN registration AS T2 ON T1.student_id  =  T2.student_id WHERE T2.class_id  =  \"1\""}
{"question": "(a question about a sql table) Return the name of the next person in the table", "query": "SELECT T1.firstname,  T1.lastname FROM student AS T1 WHERE T1.firstname  =  \"John\" AND T1.lastname  =  \"Doe\""}
{"question": "What are the names, city, and country of the cities that have at least 30 inhabitants?", "query": "SELECT T1.city,  T1.country,  T1.population FROM city AS T1 WHERE T1.population  >  30"}
{"question": "How many songs are in the album \"I Want You\"?", "query": "SELECT count(*)  FROM album AS T1 JOIN track AS T2 ON T1.album_id  =  T2.album_id WHERE T2.name  =  \"I Want You\""}
{"question": "What is the name and id of the player who has the highest rating?", "query": "SELECT T1.player_id,  T1.name_first,  'player' AS T1.type,  T1.name_second,  T1.name_third,  T1.name_fourth,  T1.name_fifth,  T1.name_sixth,  T1.name,  T1._id,  T1.rating,  T1.team_id,  T1.team_name,  T1.team_abbr,  T1.team_city,  T1.team_state,"}
{"question": "What are the names, dates of birth and phone numbers of all students in the class, whose names start with the letter \"A\"?", "query": "SELECT T1.name,  T1.* FROM student AS T1 WHERE T1.name  LIKE 'A%'"}
{"question": "What are the weights of inventors in descending order of money requested? (For example, I did not want to write a question about table, but the question is", "query": "SELECT inventor_id,  SUM(money_requested) FROM inventors GROUP BY inventor_id ORDER BY SUM(money_requested) DESC"}
{"question": "Display the names of all staff members", "query": "SELECT T1.name FROM staff AS T1 JOIN employee AS T2 ON T1.id  =  T2.staff_id"}
{"question": "Find the names of the employees who are not in any department", "query": "SELECT T1.employee_name FROM employee AS T1 WHERE NOT EXISTS (SELECT T2.employee_id FROM department AS T2 WHERE T2.department_id  =  T1.department_id)"}
{"question": "How many customers are there in the database?", "query": "SELECT count(*) AS \"count\" FROM customer"}
{"question": "Show the id, names of students who have the smallest average of exams", "query": "SELECT T1.id,  T1.name FROM students AS T1 JOIN student_exams AS T2 ON T1.student_id  =  T2.[student_id] WHERE T2.average  <  (SELECT AVG(T3.average) FROM student_exams AS T3 WHERE T3.student_id  =  \"T1.id\")"}
{"question": "List the names of the employees who have not filled out a leave request yet", "query": "SELECT T1.employee_id,  T1.first_name,  T1.last_name,  T1.title,  T1.department_id,  T1.office_id,  T1.phone_number,  T1.email,  T1.address_id,  T1.city,  T1.state_code,  T1.zip_code,  T1.country,  T1.[date_of_birth],  T1.gender,  T1.marital_status,  T1.ss"}
{"question": "What are the names, ids and descriptions of the documents that were created in the last month?", "query": "SELECT T1.document_id,  T1.name,  T1.description FROM documents AS T1 WHERE T1.created_date  >  DATE_SUB(NOW(), INTERVAL 1 MONTH)"}
{"question": "What are the names, id and numbers of the employees of the company with id \"DBS\"?", "query": "SELECT name,  id,  number FROM employees WHERE id  =  \"DBS\""}
{"question": "What are the most popular questions?", "query": "SELECT TOP 10 * FROM questions ORDER BY count(*) DESC;"}
{"question": "What is the average price and number of transactions per year of each category of cars?", "query": "SELECT AVG(price),  COUNT(*) FROM car_sales WHERE car_category  =  \"Coupes\""}
{"question": "Show all the city names that have more than 1000 inhabitants", "query": "SELECT T1.city_name FROM cities AS T1 WHERE T1.population  >  1000"}
{"question": "What are the names, and the id of all departments, sorted by the number of employees?", "query": "SELECT T1.name,  T1.id FROM departments AS T1 JOIN employees AS T2 ON T1.id  =  T2.department_id ORDER BY T2.employee_count DESC"}
{"question": "Find the first name and last name of the students who are in the middle of the second year", "query": "SELECT T1.first_name,  T1.last_name FROM Students AS T1 WHERE T1.year  =  \"2\""}
{"question": "What are the questions that have been asked to the customers?", "query": "SELECT question FROM customer"}
{"question": "How many times has a student passed through the doors of this school?", "query": "SELECT T1.student_id,  T1.school_id,  T1.year_id,  T1.semester_id,  T1.day_number,  T1.day_name,  T1.day_type,  T1.day_time,  T1.day_class,  T1.day_room,  T1.day_faculty,  T1.day_course,  T1.day_subject,  T1.day_grade,  T1.day_attendance,  T1."}
{"question": "Find the names and descriptions of the photos that have been taken at the tourist attraction \"film_festival\"", "query": "SELECT T1.photo_name,  T1.photo_description FROM photo AS T1 WHERE T1.attraction_id  =  \"film_festival\""}
{"question": "How many newspapers have \"Atsushi Ohorii\" published?", "query": "SELECT COUNT(*) AS cnt FROM newspaper AS T1 JOIN author AS T2 ON T1.author_id  =  T2._id WHERE T1.name  =  'Atsushi Ohorii'"}
{"question": "What are the most frequent words in the data?", "query": "SELECT DISTINCT word FROM data"}
{"question": "What are the names and levels of catalog structure with level number between 4 and 9, sorted by level number?", "query": "SELECT T1.name,  T1.[level] FROM catalog AS T1 WHERE T1.[level]  >  4 AND T1.[level]  <  9 ORDER BY T1.[level]"}
{"question": "List all airlines that have no scheduled flights on a given date", "query": "SELECT airline_name,  airline_id FROM airlines WHERE airline_id  =  'A' AND date_of_flight  =  '2010-01-01'"}
{"question": "What is the average number of people who live in each city?", "query": "SELECT AVG(population) FROM city"}
{"question": "How many times does the average ticket cost more than $100?", "query": "SELECT AVG(Ticket_Price) FROM Ticket_Prices"}
{"question": "What are the names and numbers of the customers whose names contain the word \"Smith\"?", "query": "SELECT T1.Name,  T1.Number FROM Customer AS T1 WHERE T1.Name LIKE \"Smith\""}
{"question": "(a novel question, about a school) What is the name of the school?", "query": "SELECT T1.name FROM school AS T1 WHERE T1.name  =  \"The School\""}
{"question": "What are the names, number of patients and diagnosis of the patients who have an allergy to red berries?", "query": "SELECT T1.firstname,  T1.lastname,  T1.number_of_patients,  T1.diagnosis FROM patient AS T1 WHERE T1.allergy_to_red_berries  =  1"}
{"question": "What are the course titles, ordered by credits?", "query": "SELECT T1.course_id,  T1.title,  T1.credit_hours FROM course AS T1 ORDER BY T1.credit_hours"}
{"question": "What is the number and name of the player who has the most points?", "query": "SELECT name,  count(*) FROM player WHERE points  >  (SELECT max(points) FROM player)"}
{"question": "What is the name and location of the city with the highest average air temperature?", "query": "SELECT T1.city_name,  T1.city_location,  T1.avg_air_temperature FROM city AS T1 JOIN weather_station AS T2 ON T1.city_id  =  T2.city_id GROUP BY T1.city_name, T1.city_location, T1.avg_air_temperature ORDER BY T1.avg_air_temp DESC LIMIT 1"}
{"question": "Find the names of people who have a friend who is a mathematician", "query": "SELECT T1.name,  T1.* FROM friend AS T1 JOIN friend_relationship AS T2 ON T1.friend_id  =  T2.* WHERE T2.friend_id  =  ( SELECT T3.friend_id FROM friend_relationship AS T3 WHERE T3.friend_id  =  '1' )"}
{"question": "What are the names, number of employees and company codes of all the companies that are not in the database?", "query": "SELECT T1.name,  T1.number_of_employees,  T1.company_code FROM companies AS T1 WHERE NOT EXISTS (SELECT T2.company_code FROM companies AS  T2)"}
{"question": "(a novel question, about a table), followed by \"", "query": "Examples of some or all task item:"}
{"question": "(the novel question, about a different table)", "query": "SELECT T1.question_id,  T2.question_text FROM questions AS T1 JOIN questions_answers AS T2 ON T1.question_id  =  T2._id WHERE T2.question_id  =  '1'"}
{"question": "\"What are the names of customers who have more than 3000 in the account balance?\"", "query": "SELECT name FROM Customer WHERE account_balance  >  3000"}
{"question": "Find the name of the first student in the class that is not a soccer player", "query": "SELECT T1.student_id FROM students AS T1 WHERE T1.sport_code  =  \"None\""}
{"question": "Find the names of all the artists who had a solo career", "query": "SELECT T1.artist_name FROM artist AS T1 JOIN artist_solo AS T2 ON T1.artist_id  =  T2.artist_id"}
{"question": "List the names of the cities that have the largest number of students", "query": "SELECT T1.city_name,  T2.student_count FROM city AS T1 JOIN student AS T2 ON T1.city_id  =  T2"}
{"question": "List the names of the employees who are not from California", "query": "SELECT name FROM employees WHERE location_id  =  \"null\""}
{"question": "What are all the products that are imported by customer with the name \"Ronaldo\"?", "query": "SELECT T1.product_id,  T1.product_name FROM product AS T1 WHERE T1.customer_id  =  \"Ronaldo\""}
{"question": "How many hours of daylight does it take for the sun to be directly overhead at 00:00 (UTC) in March in New York?", "query": "SELECT T1.hour,  T1.latitude,  T1.longitude,  T1.day_length FROM Sun AS T1 WHERE T1.day_length  =  \"hours\" AND T1.latitude  =  \"latitude\" AND T1.longitude  =  \"longitude\" AND T1.hour  =  \"hour\" AND T1.month  =  \"month\" AND T1.year  =  \"year\""}
{"question": "What is the lastname of the employee with id 23?", "query": "SELECT T2.last_name FROM employee AS T1 JOIN employee_details AS T2 ON T1.id  =  T2.employee_id WHERE T2.id  =  23"}
{"question": "Find the names of all the courses in which the \"Gym\" is taught", "query": "SELECT T1.course_name FROM course AS T1 JOIN course_subject AS T2 ON T1.course_id  =  T2.course_id WHERE T2.subject_code  =  \"Gym\""}
{"question": "What is the name and city of the city with the highest population?", "query": "SELECT name,  city FROM city WHERE population  =  (SELECT max(population) FROM city)"}
{"question": "What is the full names and id of the customer who has lowest total amount of payment?", "query": "SELECT T1.customer_first_name, T1.customer_last_name, T1.customer.id FROM customers AS T1 JOIN customers_cards AS T2 ON T1.Customer_ID  =  T2.customer_id WHERE T1.total_amount_purchased  =  (SELECT min(T3.total_amount_purchasd) FROM customers_cards AS T3 WHERE T3.customer_id  =  (SELECT customer_id FROM customers_cards WHERE customer_id  =  T1.customer_id) )"}
{"question": "What are the names and ages of all students who are registered in a college?", "query": "SELECT T1.fname,  T1.lname,  T1.age FROM student AS T1 WHERE T1.school_code  =  \"DNO 100\""}
{"question": "How many employees do you have?", "query": "SELECT COUNT(*) AS \"count\" FROM employees"}
{"question": "How many unique names can be found among the players who are active in the past two years?", "query": "SELECT DISTINCT T1.name FROM player AS T1 JOIN player_stats AS T2 ON T1.player_id  =  T2.player_id WHERE T2.year  =  \"2012\" AND T2.year  =  (SELECT max(year) FROM player_stats)"}
{"question": "What are the first and last name for players with the highest average score?", "query": "SELECT name FROM player WHERE score  >  \"average\""}
{"question": "What is the name, id, and last name of the student who was awarded the highest grade?", "query": "SELECT T1.student_id,  T1.name_first,  \"T1.name_last\" FROM student AS T1 JOIN student_grades AS T2 ON T1.student_id  =  T2.\"T1.student_id\" WHERE T2.grade_id  =  (SELECT MAX(T3.grade_id) FROM student_grades AS T3);"}
{"question": "What are the names and ids of the employees who work in the same office as \"David Ngo\"?", "query": "SELECT T1.name,  T1._id FROM employee AS T1 JOIN employee_office AS T2 ON T1.employee_id  =  T2._id WHERE T2.name  =  \"David Ngo\""}
{"question": "What are the names and ages of all students in the class?", "query": "SELECT T1.name,  T1.age FROM students AS T1"}
{"question": "What is the total number of students in the campus?", "query": "SELECT count(*) AS total_students FROM student"}
{"question": "What are the numbers of the different types of classes at university?", "query": "SELECT T1.Type,  T2.Name FROM Class_Type AS T1 JOIN classes AS T2 ON T1.class_id  =  T2.class_id"}
{"question": "What is the name of country that produces the largest amount of agricultural products?", "query": "SELECT Country_Name,  Country_Population FROM Country WHERE Country_Population  =  \"largest amount of agricultural products\""}
{"question": "What is the code for the card type that is most common?", "query": "SELECT T1.card_type_code FROM cards AS T1 JOIN card_types AS T2 ON T1.card_type_id  =  T2.card_type_id WHERE T2.name  =  \"Visa\""}
{"question": "Which countries have the most universities?", "query": "SELECT DISTINCT country_name FROM country WHERE num_university > 10"}
{"question": "Which football players have played in the Super Bowl?", "query": "SELECT T1.player_id,  T1.name FROM player AS T1 JOIN team AS T3 ON T1.team_id  =  T3.team_id WHERE T3.team_name  =  \"Super Bowl\""}
{"question": "What are the names, birth dates, and birth places of all students?", "query": "SELECT name,  birth_date,  birth_place FROM student"}
{"question": "Find the id and the name of the department that has a student population of at least 2000", "query": "SELECT T1.department_id,  T1.name FROM department AS T1 JOIN student_department AS T2 ON T1.department_id  =  T2.department_id WHERE T2.student_count  >=  2000"}
{"question": "What are the names (first and last) of the students who have a faculty member as supervisor?", "query": "SELECT T1.first_name,  T1.last_name FROM student AS T1 JOIN student_teacher_relationship AS T2 ON T1.student_id  =  T2.student_id WHERE T2.teacher_id  =  1"}
{"question": "What is the name and description of the last track event?", "query": "SELECT T1.name,  T1.description FROM track_events AS T1 WHERE T1.name  =  \"last track event\""}
{"question": "What is the average cost of a house in the state of Michigan?", "query": "SELECT AVG(transaction_amount) FROM Financial"}
{"question": "In what year was the most degrees bestowed?", "query": "SELECT year(date_from),  name FROM degrees WHERE year(date_from)  =  '2016'"}
{"question": "How many documents were sent to the library?", "query": "SELECT count(*)  FROM library_documents"}
{"question": "Show the city of all counties' names", "query": "SELECT T1.city FROM counties AS T1 JOIN counties_names AS T2 ON T1.county_id  =  T2.[county_id]"}
{"question": "What are the names, locations and sizes of all lakes of America?", "query": "SELECT T1.Name,  T1.Location,  T1.Size FROM Lake AS T1"}
{"question": "What are the names, and ages of the players in the following team?", "query": "SELECT T1.name,  T1.age FROM player AS T1 JOIN team AS T3 ON T1.team_id  =  T3.team_id WHERE T3.id  =  (SELECT T2.id FROM team AS T2 WHERE T2.name  =  \"Team A\")"}
{"question": "What are the ids and names of the architects who built two bridges and one mill?", "query": "SELECT T1.architect_id,  T1.name FROM architects AS T1 JOIN building AS T2 ON T1.architect_id  =  T2.architect_id JOIN building AS T3 ON T2.building_id  =  T3.building_id JOIN building AS T4 ON T3.building_id  =  \"1\" AND T3.building_id  <>  T4.building_id JOIN building AS T5 ON T4.building_id  =  1 AND T4.building_id  <>  \"1\" AND T"}
{"question": "How many students are enrolled in the course \"Computing\"", "query": "SELECT T1.student_id FROM student AS T1 JOIN course AS T2 ON T1.student_id  =  T2.student_id WHERE T2.course_code  =  \"Computing\""}
{"question": "(a question about a sql table) What are the average ages of students in each class?", "query": "SELECT AVG(age) FROM student"}
{"question": "\"How many students are studying in the course 'Artificial Intelligence'?\",", "query": "SELECT COUNT(*) FROM students WHERE course_id = \"Artificial Intelligence\";"}
{"question": "What is the name and type of the product that has the largest number of different prices?", "query": "SELECT T1.product_name,  T2.price FROM product_price AS T1 JOIN product_description AS T2 ON T1.product_id  =  T2._id WHERE T2.product_id  =  (SELECT T3.product_id FROM product_price AS T3 WHERE T3.price  =  (SELECT MAX(T4.price) FROM product_price AS T4 WHERE T4.product_id  =  'T1'))"}
{"question": "How many students studied abroad in the year 2014?", "query": "SELECT count(*) AS \"count\" FROM students WHERE year  =  2014"}
{"question": "Find the total number documents that contain the term \"test\" in an English language dictionary", "query": "SELECT COUNT(*) FROM dictionary WHERE word  =  \"test\""}
{"question": "Find the names of companies that are in the industry of computer services", "query": "SELECT T1.company_name FROM company AS T1 JOIN industry AS T2 ON T1.industry_id  =  T2"}
{"question": "What is the average cost per minute of the tours that did not have any cancellations?", "query": "SELECT SUM(cost) FROM (SELECT SUM(cost) FROM (SELECT cost FROM tour_costs WHERE tour_id  =  'T1' AND status  =  'Cancelled' GROUP BY cost) AS T1) AS T2"}
{"question": "What are the average age of employees in each department?", "query": "SELECT AVG(T1.age) FROM employees AS T1 JOIN department AS T2 ON T1.department_id  =  T2.department_id"}
{"question": "Find the names of the cities that have more than 50 zip codes", "query": "SELECT city_name,  COUNT(*) FROM zip_code GROUP BY city_name HAVING count(*)  =  50"}
{"question": "What is the total price for all products?", "query": "SELECT T1.price FROM product AS T1;"}
{"question": "What is the maximum number of hours that students have worked on the project known as \"Titanic II\"?", "query": "SELECT MAX(hours) FROM project WHERE project_name  =  \"Titanic II\""}
{"question": "What are the student’s gender and the average age of students?", "query": "SELECT T1.gender,  T1.avg_age FROM student AS T1"}
{"question": "What are the names, salaries and department of all employees who do not have a department?", "query": "SELECT T1.name,  T1.salary,  T1.department FROM employees AS T1 WHERE T1.department  =  \"null\""}
{"question": "What is the last year in which \"Tailor-Made\" was the most popular fashion?", "query": "SELECT year(date) FROM fashion_sales WHERE name = \"Tailor-Made\""}
{"question": "What is the name and state of the city of the city with the highest number of inhabitants in the state of California?", "query": "SELECT T1.city,  T1.state FROM city AS T1 JOIN state AS T2 ON T1.city_id  =  T2.city_id WHERE T2.state_id  =  \"CA\" AND T1.population  >  (SELECT max(population) FROM city)"}
{"question": "What is the average temperature in \"San Francisco\" in December?", "query": "SELECT AVG(T1.temperature) FROM weather AS T1 WHERE T1.city_name  =  \"San Francisco\" AND T1.month  =  \"December\";"}
{"question": "What are the names, titles and salaries of all members of the board of the school who are in charge of the English department?", "query": "SELECT T1.person_name,  T1.person_title,  T1.salary FROM Person AS T1 JOIN Person_Position AS T2 ON T1.person_id  =  T2.[person_id] WHERE T2.position_id  =  'English'"}
{"question": "What are the first names of all girls that have boyfriends in your class?", "query": "SELECT T1.fname,  T1.lname FROM students AS T1 JOIN relationship AS T2 ON T1.student_id  =  T2.student_id WHERE T2.relationship_type  =  \"boyfriend\""}
{"question": "What are the names and ids of all customers, and how many accounts do they have?", "query": "SELECT T1.id,  T1.name_first,  (SELECT count(*) FROM account AS T2 WHERE T2.customer_id  =  T1.id) AS accounts FROM customer AS T1 GROUP BY T1.id ORDER BY accounts DESC"}
{"question": "How many unique faculty members are there in campus \"Long Beach State University\"?", "query": "SELECT DISTINCT faculty_id FROM faculty WHERE campus_id =  \"Long Beach State University\""}
{"question": "What are the names and sexes of all students in the class of 2010?", "query": "SELECT T1.name,  T1.sex FROM students AS T1 WHERE T1.class_code  IN (SELECT T2.class_code FROM class AS T2)"}
{"question": "What is the name (first and last) and salary of the customer who has most number of coupons?", "query": "SELECT T1.name,  T1.salary FROM customer AS T1 JOIN coupon AS T2 ON T1.customer_id  = ? JOIN coupon_user AS T3 ON T2.coupon_id  =  T3.id WHERE T3.coupon_id  IN (SELECT id FROM coupon WHERE user_id  = ?) ORDER BY T1.coupon_count DESC LIMIT 1"}
{"question": "What is the average price of the car in the year of 1999 in the state of Nebraska?", "query": "SELECT AVG(price) FROM car WHERE year  =  1999 AND state  =  'Nebraska'"}
{"question": "What is the first name of the person who is the youngest?", "query": "SELECT name FROM Person"}
{"question": "What are the names, number of children and total income of the couples?", "query": "SELECT T1.name,  T1.children,  T1.total_income FROM couples AS T1 GROUP BY T1.name, T1.children, T1.total_income"}
{"question": "What are the ids of the products with the highest price?", "query": "SELECT T1.id FROM product AS T1 WHERE T1.price  =  (SELECT MAX(T2.price) FROM product AS T2);"}
{"question": "What are the names, locations and descriptions of the three most beautiful locations in the world?", "query": "SELECT T1.name,  T2.location,  T3.description FROM location AS T1 JOIN tourist_attraction AS T2 ON T1.location_id  =  T2.location_id JOIN tourist_attraction_description AS T3 ON T2.description_id  =  T3.description_id WHERE T1.name  =  \"The Great Wall of China\" OR T1.name  =  'The Taj Mahal' OR T1.name  = 'The Grand Canyon' OR T1.name  >  'The Great Wall of China'"}
{"question": "What is the name, id, and age of the professor who taught two courses and has a specialization in philosophy?", "query": "SELECT name, id, age FROM professor WHERE id IN (SELECT id FROM course WHERE course_name  =  \"Introduction to Philosophy\" AND course_id  =  \"PHIL101\" AND professor_id  =  \"PHL10101\") AND id IN (SELECT id FROM course  WHERE course_name  =  \"Intro to Philosophy\" AND course_id = \"PHIL101\") AND id IN (SELECT id  FROM professor WHERE professor_name  =  \"John Doe\" AND professor_id  = \"PHL10101\")"}
{"question": "Which city is postcode 255 located in?", "query": "SELECT city_code FROM city WHERE city_code  =  '255'"}
{"question": "What are the names, phone numbers, and offices of all employees who worked at least three hours in the afternoon of the day of the week \"Monday\"?", "query": "SELECT T1.name,  T1.* FROM employees AS T1 WHERE T1.hours  >=  3 AND T1.day  =  \"Monday\""}
{"question": "Find the city that has higher average temperature in summer than winter", "query": "SELECT city FROM airports GROUP BY city HAVING SUM(temperature_summer) - SUM(temperature_winter) > 0"}
{"question": "What is the id of the university where the city of Paris is located", "query": "SELECT university_id FROM university WHERE city = \"Paris\""}
{"question": "What is the name, age, location and address of the first woman to fly a jet?", "query": "SELECT T1.name,  T1.age,  T1.location,  T1.address FROM people AS T1 WHERE T1.gender  =  \"F\" AND T1.age  >  20 AND T1.location  =  \"Paris\" AND T1.address  =  \"Paris\""}
{"question": "Find the names of all employees who are not managers or supervisors and are not directors", "query": "SELECT T1.firstname,  T1.lastname FROM employee AS T1 WHERE T1.title  =  \"not manager\" AND T1.title  =  'not supervisor' AND T1.title  = 'not director'"}
{"question": "What are the ids and names of the architects who built two bridges (or one mill?)", "query": "SELECT T1.id,  T1.name FROM architects AS T1 JOIN bridge_or_mill AS T2 ON T1.id  =  T2.architect_id WHERE T2.id  =  \"1\" OR T2.id  =  '2'"}
{"question": "What are the id of the students who have taken a course with a course number of '1'?", "query": "SELECT T1.student_id FROM student AS T1 JOIN course AS T2 ON T1.student_id  =  T2.[student_id] WHERE T2.course_number  =  '1'"}
{"question": "Show the average amount of hours of each year", "query": "SELECT AVG(hoursperyear) FROM Hours_of_Work"}
{"question": "Given:\nquestion (from another table): Return the first names of all students who are in the first class and have a birth date in the past", "query": "SELECT T1.first_name FROM students AS T1 JOIN class AS T2 ON T1.crs_id  =  T2.\"class_id\" WHERE T1.first_name  =  'John' AND T1.birth_date  <  '1990-01-01'"}
{"question": "(a question about a sql table) Which poll resource provided the most number", "query": "SELECT T1.resource_id,  T1.resource_name FROM resource_type AS T1 JOIN resource_type_resource AS T2 ON T1.resource_type_id  =  T2.resource_type_id WHERE T1.resource_name  =  \"poll\""}
{"question": "what are the names of the students who have more than 1000 points?", "query": "SELECT T1.student_id,  T1.points FROM students AS T1 WHERE T1.points  >  1000"}
{"question": "Find the id and name of the employee whose number is in the range of 1000 to 1100", "query": "SELECT T1.id,  T1.name FROM employee AS T1 WHERE T1.number  >  1000 AND T1.number  <  1100"}
{"question": "How many employees work at the company with the city of San Jose as its headquarters?", "query": "SELECT T1.employee_id,  T1.first_name,  T1.last_name,  T1.title,  T1.department_id,  T1.salary,  T1.hire_date,  T1.hire_by,  T1.hire_reason,  T1.hire_duration,  T1.hire_start_date,  T1.job_id,  T1.job_title,  T1.job_description,  T1.job_location,  T1.job_type,"}
{"question": "What is the id for the school that has the largest average salary?", "query": "SELECT T1.id,  T1.name,  T1.salary FROM school AS T1 JOIN student_school_relationship AS T2 ON T1.id  =  T2.school_id WHERE T2.student_id  =  '1' GROUP BY T1.id ORDER BY T1.salary ASC"}
{"question": "What are the names, addresses, and phone numbers of the ten most recent customers?", "query": "SELECT T1.name,  T1.address,  T1.phone FROM customer AS T1 WHERE T1.date_added  >  (SELECT MAX(date_added) FROM customer)"}
{"question": "What are the average numbers of total transactions, and of purchases and sales per day, for each product?", "query": "SELECT T1.product_id,  AVG(T1.total_transactions),  AVG(T1.[purchases]),  AVG(T1.\"[sales]) FROM product AS T1 GROUP BY T1.product_id"}
{"question": "What are the names and ids of all airports that have a runway length of at least 1200 feet?", "query": "SELECT T1.name,  T1.\"id\" FROM airport AS T1 WHERE T1.runway_length  >  1200;"}
{"question": "Generate a question from the word 'question', for example: \"What is the average latitude and longitude of ALL starting stations for the trips?\"", "query": "SELECT latitude,  longitude FROM trips WHERE trip_id  =  '1'"}
{"question": "What is the average rating and resolution of songs", "query": "SELECT AVG(rating),  AVG(resolution) FROM songs"}
{"question": "What are the names, start and end dates of all purchases", "query": "SELECT T1.purchase_date,  T2.purchase_item,  T3.purchase_price FROM purchases AS T1 JOIN purchases AS T2 ON T1.purchase_id  =  T2.purchase_id JOIN purchases AS T3 ON T2.purchase_id  = T3.purchase_id WHERE T1.purchase_date  =  '2015-01-01' AND T2.purchase_date  = '2015-01-01' AND (T3.purchase_date  = T1.purchase_"}
{"question": "All the employees with a salary higher than 500 (salary > 500)", "query": "SELECT T1.employeeid,  T1.name,  T1.salary FROM employees AS T1 WHERE T1.salary  >  500"}
{"question": "What are the names, and how many employees have each?", "query": "SELECT T1.name,  count(*) FROM employees AS T1 GROUP BY T1.name"}
{"question": "What are the codes of the products with weight less than 300?", "query": "SELECT T1.code FROM product AS T1 WHERE T1.weight  <  300"}
{"question": "How many students are there in each class?", "query": "SELECT T1.class_id,  T1.student_count FROM class AS T1 GROUP BY T1.class_id"}
{"question": "(a novel question, about a table) What is the name of the city with the highest average temperature in the world?", "query": "SELECT city_name FROM city WHERE city_avg_temp  =  \"the highest average temperature in the world\""}
{"question": "What are the most common values of the field of \"gender\" in the database of \"students\" table?", "query": "SELECT DISTINCT gender FROM students"}
{"question": "What are the names and occupations of all faculty members whose first name is Jonathan?", "query": "SELECT T1.name,  T1.occupation FROM faculty AS T1 WHERE T1.first_name  =  \"Jonathan\""}
{"question": "List the names of all the books", "query": "SELECT T1.book_name FROM books AS T1 WHERE T1.book_id  =  (SELECT T2.book_id FROM books AS T2 WHERE T2.book_id  =  T1.book_id)"}
{"question": "(a question about a sql table) For each year, what is the name and the number of students in that year?", "query": "SELECT name,  count(*) FROM students WHERE year  =  \"2016\""}
{"question": "which gender got the highest average uncertain", "query": "SELECT T1.gender_code,  T1.average_uncertainty FROM Gender_Codes AS T1 JOIN Gender_Codes_Average_Uncertainty AS T2 ON T1.gender_code  =  T2.[gender_code] WHERE T2.average_uncertainty  >  T1.average_uncerti"}
{"question": "What is the name and address of the customer who has the most number of employees?", "query": "SELECT T1.customer_name,  T1.customer_address FROM customer AS T1 JOIN employee AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.employee_count  =  max(T3.employee_count)"}
{"question": "(a novel question, about a table with different structure) what are the names and IDs of students who did not participate in the candidate elections", "query": "SELECT T1.name,  T2.id FROM students AS T1 JOIN votes AS T2 ON T1.id  =  T2.id WHERE T2.candidate_id  =  0"}
{"question": "List all names of the students who did not participate in the candidate elections", "query": "SELECT T1.name FROM student AS T1 WHERE NOT EXISTS (SELECT T2.name FROM candidate AS T2 WHERE T2.student_id  =  T1.student_id)"}
{"question": "Find the names of students who have attended the same school until they are 17 years old", "query": "SELECT T1.student_name FROM student AS T1 JOIN school AS T2 ON T1.student_id  =  T2.student_id WHERE T2.school_name  =  \"The School\" AND T2.school_id  =  (SELECT school_id FROM school WHERE school_name  =  \"The school\")"}
{"question": "What are the total number of players in these games?", "query": "SELECT count(*) AS total_players FROM game_player_stats"}
{"question": "how many people are there whose weight in kilograms is higher than 85 for each gender, and their first names are in the list?", "query": "SELECT T1.name,  T1.[weight] FROM [Student] AS T1 JOIN [Weight] AS T2 ON T1.weight  =  T2.weight WHERE T1.gender  =  \"M\" AND (T1.weight  >  85 OR T1.weight  =  85) AND T1.first_name  IN  ( \"John\", \"Mary\", \"Sara\", \"Jennifer\", \"Jennifer\", \"Sara\", \"John\", \"Mary\", \"Jennifer\", \"John\", \"Mary\",  \"Sara\", \"J"}
{"question": "Find the name of the customer who has an account with a credit score of less than 85", "query": "SELECT customer_id,  customer_first_name,  customer_last_name,  customer_address,  customer_city,  customer_state,  customer_zip,  customer_phone,  customer_fax,  customer_email,  customer_credit_score,  customer_credit_limit,  customer_credit_status,  customer_credit_status_date,  customer_credit_status  FROM customers WHERE customer_credit_score  <  85"}
{"question": "who has received the most votes in the election?", "query": "SELECT T1.name,  T1.votes FROM voters AS T1 JOIN candidate AS T2 ON T1.voter_id  =  T2.id WHERE T2.name  =  'John Doe'"}
{"question": "Find the name of the song that the artist \"Marsha\" has sung the most", "query": "SELECT T1.song_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_id  =  T2._id WHERE T2.artist_id  = \"Marsha\""}
{"question": "give me the names of all the cities that are in both states", "query": "SELECT city_name FROM city_state WHERE state_id  =  \"NY\" AND state_id  =  \"CA\""}
{"question": "What is the name and id of the customer who have the lowest total amount of payment? List the customer ids", "query": "SELECT T1.customer_id,  T1.total_amount_paid FROM customer_payment_history AS T1 WHERE T1.total_amount_paid  =  (SELECT min(T2.total_amount_paid) FROM customer_payment_history AS  T2)"}
{"question": "show the ids of all the documents that have been assigned to John Doe", "query": "SELECT T1.id FROM document AS T1 WHERE T1.owner_id  =  \"John Doe\""}
{"question": "What are the names in alphabetical order of the students from the university of Maryland?", "query": "SELECT T1.name FROM students AS T1 WHERE T1.state  =  'MD' ORDER BY T1.name"}
{"question": "What are the names, birthdays and genders of students in the School of Architecture?", "query": "SELECT T1.name,  T1.birthday,  T1.gender FROM student AS T1 WHERE T1.school_id  =  \"School of Architecture\""}
{"question": "What are the names and dates of all the customers?", "query": "SELECT T1.Customer_Name,  T1.Date_Of_Birth FROM Customer AS T1;"}
{"question": "What are the first name, last name, and age of all female students?", "query": "SELECT T1.first_name,  T1.last_name,  T1.age FROM student AS T1 WHERE T1.sex  =  \"F\""}
{"question": "What are the names and titles of all students in the class?", "query": "SELECT T1.name,  T1.title FROM students AS T1"}
{"question": "What is the average height of students in the university?", "query": "SELECT AVG(height) FROM Student"}
{"question": "What is the average temperature of the city of Sydney, Australia?", "query": "SELECT AVG(temperature) FROM weather_station WHERE city_name  =  \"Sydney\""}
{"question": "What is the name and city of each customer?", "query": "SELECT customer_name,  customer_city FROM customers"}
{"question": "What are the names, and the number of employees, of all the employees in the company?", "query": "SELECT T1.name,  T1.employee_id FROM employees AS T1 WHERE T1.company_id  =  (SELECT company_id FROM companies WHERE company_name  =  \"Acme\")"}
{"question": "How many students are enrolled in the course \"Compendium\"?", "query": "SELECT T1.course_code,  T1.course_name,  T1.course_number,  T1.course_level,  T1.course_type,  T1.course_credit,  T1.course_hours,  T1.course_fee,  T1.course_room,  T1.course_teacher,  T1.course_instructor,  T1.course_section,  T1.course_year,  T1.course_semester,  T1.course_term,  T1.course"}
{"question": "How much did the average house cost in the country of Oman?", "query": "SELECT SUM(price) FROM house WHERE country = \"Oman\""}
{"question": "What is the average age of the people who like cats?", "query": "SELECT AVG(Age) FROM Person WHERE likes_cat"}
{"question": "What are the ids and names of the employees who are in the Sales and Distribution department?", "query": "SELECT T1.employee_id,  T1.first_name,  T1.last_name,  T1.department_id,  T1.position_id,  T1.salary,  T1.hire_date,  T1.hire_start_date,  T1.job_id,  T1.job_title,  T1.job_description,  T1.job_location,  T1.job_type,  T1.job_status,  T1.job_supervisor,  T1.job"}
{"question": "Which month has the highest average customer satisfaction?", "query": "SELECT AVG(Satisfaction) FROM Customer_Satisfaction_Trend WHERE MONTH(date_of_survey) =  \"January\""}
{"question": "What is the average salary of employees whose last name is 'Smith'?", "query": "SELECT AVG(salary) FROM employee WHERE last_name = 'Smith'"}
{"question": "What are the names and salaries of all employees who have been in the company for more than two years?", "query": "SELECT T1.first_name,  T1.last_name,  T1.salary FROM employees AS T1 WHERE T1.joined_date  >  '2015-01-01'"}
{"question": "Find the names of movies with all the directors not born in the USA", "query": "SELECT T1.movie_name,  T2.director_name FROM movies AS T1 JOIN directors AS T2 ON T1.director_id  =  T2.director_id WHERE T1.director_country  =  \"United States\" AND T2.director_country  =  \"\""}
{"question": "(How many students are enrolled in colleges that had a student accepted during tryouts, and which states are those colleges?), after \"", "query": "SELECT T1.student_id,  T1.college_id,  T1.state_id FROM students AS T1 JOIN colleges AS T2 ON T1.college_id  =  T2.id WHERE T2.name  =  \"University of California, Berkeley\" AND T2.state_id  =  \"CA\""}
{"question": "What is the name of the employee who is making the most sales?", "query": "SELECT T1.name FROM employee AS T1 JOIN sales AS T2 ON T1.emp_id  =  T2.\"emp_id\" WHERE T2.sales_total  >  (SELECT T3.sales_total FROM sales AS T3 WHERE T3.emp_id  =  \"T1.emp_id\")"}
{"question": "(a novel question, about a table) What is the average number of students in each class?", "query": "SELECT AVG(student_count) FROM class;"}
{"question": "What are the names, details, and id's of the countries that have at least two members?", "query": "SELECT name,  country_id FROM country WHERE COUNT(*)  >  2"}
{"question": "What is the average age of students at the school of medicine?", "query": "SELECT AVG(age) FROM student"}
{"question": "What are the names and the weights of the dogs?", "query": "SELECT T1.name,  T1.\"weight\" FROM dog AS T1"}
{"question": "What are the names if the students of the class of 2017?", "query": "SELECT T1.student_name,  T2.student_name FROM students AS T1 JOIN students AS T2 ON T1.id  =  T2.id WHERE T1.year  =  2017"}
{"question": "how many books do the authors of the question have", "query": "SELECT T1.title,  T1.author_id FROM book AS T1 JOIN author AS T2 ON T1.author_id  =  T2._id WHERE T1.title  =  \"The Art of War\""}
{"question": "What is the name or type of the computer network at the company?", "query": "SELECT T1.type,  T2.name FROM network AS T1 JOIN network_type AS T2 ON T1.type  =  T2.type"}
{"question": "Find the state names for the cities with the highest population", "query": "SELECT state_name FROM city WHERE population  =  (SELECT max(population) FROM city)"}
{"question": "What are the names, locations, and ratings of the games that were played in the 2009 season?", "query": "SELECT T1.game_name,  T1.location,  T1.rating FROM games AS T1 WHERE T1.season  =  \"2009\""}
{"question": "Find the names of all employees who are under the age of 25", "query": "SELECT T1.firstname,  T1.lastname,  T1.age FROM employee AS T1 WHERE T1.age  <  25"}
{"question": "What is the name and city of the customer who had the most transactions in the previous year?", "query": "SELECT T1.CustomerID,  T1.CustomerName,  T1.CustomerCity FROM Customer AS T1 WHERE T1.CustomerCity  =  \"New York\" AND T1.CustomerName  =  \"John Smith\""}
{"question": "(a question about a sql table) What is the name of the most popular movie?", "query": "SELECT name FROM movies WHERE popularity  =  '1'"}
{"question": "What is the average rating of movies that were released in 2016?", "query": "SELECT avg(avg_rating) FROM movies WHERE year(release_date)  =  2016"}
{"question": "What is the name and the id of the customer who has the most number of products?", "query": "SELECT T1.name,  T1.id FROM customer AS T1 JOIN product AS T2 ON T1.id  =  T2.customer_id WHERE T1.id  =  (SELECT max(id) FROM customer)"}
{"question": "What is the city of the person who has the highest rating for the most recent movie?", "query": "SELECT T1.city FROM Person AS T1 JOIN Person_Movie_Rating AS T2 ON T1.id  = T2.person_id WHERE T2.movie_id  =  '1' AND T2.rating  =  '5'"}
{"question": "How many students have their names containing the word \"sun\"?", "query": "SELECT count(*)  FROM student WHERE student_name  LIKE \"%sun%\""}
{"question": "How many employees are in the department of sports?", "query": "SELECT T1.name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id WHERE T2.name  =  \"Sports\""}
{"question": "What is the name and phone number of the hospital where the most patients were treated for a brain aneurysm?", "query": "SELECT T1.hospital_name,  T1.phone_number FROM hospital AS T1 JOIN patient AS T2 ON T1.hospital_id  =  T2.[hospital_id] WHERE T2.patient_type  =  'Brain Aneurysm'"}
{"question": "What are the names, names of movies, and rating scores of all movies produced by Pixar?", "query": "SELECT T1.name,  T2.name,  T3.rating_code FROM movie AS T1 JOIN movie_director AS T2 ON T1.movie_id  =  T2.movie_id JOIN movie_rating AS T3 ON T2.rating_id  =  T3.rating_id WHERE T1.name  =  \"Toy Story\""}
{"question": "What is the total production cost of products with product type \"book\"?", "query": "SELECT T1.product_name,  T1.product_type,  T1.product_price,  T1.product_quantity,  T1.product_total_price,  T1.total_price FROM products AS T1 WHERE product_type  =  \"book\""}
{"question": "List the companies that are not a parent company of any of its direct competitors", "query": "SELECT DISTINCT C1.company_name FROM company AS C1, company AS C2, company AS C3 WHERE C1.parent_company_id = C2.company_id AND C2.parent_company_id =  C3.company_id AND C3.company_id = C1.company_id AND C1.company_name <> C2.company_name AND C2.company_name <> C3.company_name"}
{"question": "Find the names of students who are not taught by HECTOR CHACON", "query": "SELECT T1.name FROM student AS T1 JOIN teacher AS T2 ON T1.stu_id  =  T2.stu_id WHERE T2.name  =  \"HECTOR CHACON\""}
{"question": "What is the last day of the current month?", "query": "SELECT date_format(now(), '%Y-%m') FROM dual"}
{"question": "What is the number 1 and 2 of the products that you have in your store?", "query": "SELECT T1.product_id,  T1.product_name FROM product AS T1 WHERE T1.product_id  =  1 OR T1.product_id  ==  2"}
{"question": "What are the names and cities of the cities that the cities with the largest population?", "query": "SELECT T1.city_name,  T2.city_name FROM city AS T1 JOIN city AS T2 ON T1.city_id  =  T2.city_id WHERE T1.population  >  T2.population"}
{"question": "What are the names, salaries, and last name of faculty members who are in the math department?", "query": "SELECT T1.Name,  T1.salary,  T1.last_name FROM faculty AS T1 WHERE T1.department_id  =  \"Math\""}
{"question": "List all the names of albums by the band \"Black and White\"", "query": "SELECT T1.album_name FROM album AS T1 JOIN band AS T2 ON T1.band_id  =  T2._id WHERE T2.name  = 'Black and White'"}
{"question": "What kind of courses does KLAUS KRAEMER teach?", "query": "SELECT T1.course_id,  T1.course_name FROM course AS T1 WHERE T1.course_id  IN (SELECT T2.course_id FROM course AS T2 WHERE T2.course_name  =  'KLAUS KRAEMER')"}
{"question": "What are the id, name and genders of the architects who have built two bridges or one mill? - a question about a sql table", "query": "SELECT T1.id,  T1.name,  T2.gender FROM architects AS T1 JOIN building AS T2 ON T1.architect_id  =  T2.architect_id WHERE T2.type  =  \"bridge\" OR T2.type  = 'mill'"}
{"question": "How many students have the id of 'A_1'?", "query": "SELECT * FROM student WHERE student_id = 'A_1'"}
{"question": "Show the ids of the students who are taking a course with the title \"Database Design\"", "query": "SELECT T1.student_id FROM student AS T1 JOIN class_courses AS T2 ON T1.student_id  =  T2.[student_id] WHERE T2.title  =  'Database Design'"}
{"question": "What is the name and age of the most popular student in the class?", "query": "SELECT T1.name,  T1.age FROM students AS T1 WHERE T1.age  =  (SELECT max(age) FROM students)"}
{"question": "What are the students who are taking the course 'Physics for Non-Scientists'?", "query": "SELECT T1.student_id,  T1.name FROM student AS T1 JOIN student_course AS T2 ON T1.student_id  =  T2.student_id WHERE T1.course_id  =  'Physics for Non-Scientists'"}
{"question": "What are the names, ages, and salary of all employees who work in the same department as me?", "query": "SELECT T1.first_name,  T1.last_name,  T1.age,  T1.salary FROM employees AS T1 WHERE T1.department_id  =  '1'"}
{"question": "Find the average age of drivers with less than 5 years of experience", "query": "SELECT avg(age) FROM Driver WHERE Experience  <  5"}
{"question": "How many trips did end in San Francisco?", "query": "SELECT T1.trip_id FROM Trip AS T1 JOIN Trip_End_Points AS T2 ON T1.trip_id  =  T2.trip_id WHERE T2.city  =  \"San Francisco\""}
{"question": "What are all the names of the artists who made one album and their year of first release?", "query": "SELECT T1.artist_name,  T1.year_of_first_release FROM artist AS T1 JOIN album AS T2 ON T1.artist_id  =  T2.[artist_id]"}
{"question": "What are the names, ordered by id in reverse order?", "query": "SELECT T1.name FROM students AS T1 WHERE T1.id  >  (SELECT T2.id FROM students AS T2 WHERE T2.id  >  T1.id)"}
{"question": "What are the names, genders, and ages of all members of the committee?", "query": "SELECT T1.name,  T1.gender,  T1.age FROM committee AS T1"}
{"question": "What is the total volume of water in the Pacific ocean?", "query": "SELECT SUM(Volume) FROM water"}
{"question": "What is the first and last name of the customer who has email \"luisg@google", "query": "SELECT T1.first_name,  T1.last_name FROM customer AS T1 WHERE T1.email  =  \"luisg@google\""}
{"question": "Show the names and addresses of all customers with ID = 8", "query": "SELECT T1.name,  T1.address FROM customers AS T1 WHERE T1.customer_id  ==  8"}
{"question": "What is the average age of all the employees?", "query": "SELECT avg(age) FROM employees"}
{"question": "(a novel question, about a question about a different table), after \"generate:\"", "query": "(the sql query to answer the query), after \""}
{"question": "What are the names and birthdays of all the employees?", "query": "SELECT T1.firstname,  T1.lastname,  T1.birthday FROM employee AS T1 ORDER BY T1.firstname"}
{"question": "What are the titles and average ratings of all movies that have the highest average rating?", "query": "SELECT T1.Title,  T2.average_rating FROM movie AS T1 JOIN movie_rating AS T2 ON T1.movie_id  =  T2.movie_id WHERE T2.average_rating  >  (SELECT AVG(average_rating) FROM movie_rating)"}
{"question": "What are the names, titles, and birth dates of all students?", "query": "SELECT T1.name,  T1.title,  T1.birth_date FROM students AS T1 WHERE T1.name  =  \"John\""}
{"question": "What are the first 10 names of the students who were hired in 2009?", "query": "SELECT T1.first_name,  T1.last_name FROM Students AS T1 WHERE T1.year  =  2009 ORDER BY T1.id ASC LIMIT 10"}
{"question": "Find the average rating of all of the movies that were released in the past 3 years", "query": "SELECT avg(rating) FROM movie WHERE year(release_date)  >  \"2010\" AND year(release_date)  <  \"2013\""}
{"question": "What are the names and ratings of the movies that the director \"Jerry\" reviewed?", "query": "SELECT T1.movie_name,  T1.movie_rating FROM movie AS T1 WHERE T1.director_id  =  \"Jerry\""}
{"question": "What are the ids and names of all the employees who have a manager?", "query": "SELECT T1.employee_id,  T1.name FROM employee AS T1 JOIN employee_department AS T2 ON T1.employee_id  =  T2.[employee_id] WHERE T2.manager_id  =  T1.employee_id"}
{"question": "Which countries are included in the union, and what is the name of the union?", "query": "SELECT country_name,  country_id FROM countries WHERE country_name  IN (SELECT country_name FROM union)"}
{"question": "Find the names of people who have different last names but same first name and middle name?", "query": "SELECT T1.last_name,  T1.first_name,  MIDDLE_NAME FROM people AS T1 WHERE T1.last_name !=  T1.first_name AND T1.last_name  =  T1.first_name"}
{"question": "What is the average number of hours a day, week, month, year, and lifetime for each student?", "query": "SELECT T1.student_id,  T2.hours_per_day,  T3.hours_per_week,  T4.hours_per_month,  T5.hours_per_year,  T6.hours_per_lifetime FROM student_history AS T1 JOIN (SELECT T1.student_id, SUM(T2.hours_per_week) AS hours_per_week, SUM(T3.hours_per_month) AS hours_per_month, SUM(T4.hours_per_year) AS hours_per_year"}
{"question": "Which is the last name of the student who had the highest number of years in the university?", "query": "SELECT last_name FROM student WHERE years  =  (SELECT max(years) FROM student)"}
{"question": "What are the names, and the names of the authors, of the books that were written in the last 10 years?", "query": "SELECT T1.title,  T1.author_first_name,  T1. author_last_name FROM books AS T1 JOIN authors AS T2 ON T1.author_id  =  T2. id WHERE T2.name  =  \"last 10 years\""}
{"question": "What are the ids of all products with a max price greater than 10?", "query": "SELECT T1.id FROM product AS T1 WHERE T1.price  >  10"}
{"question": "What is the name and location of the store that offers only products costing more than $300?", "query": "SELECT T1.name,  T1.location FROM store AS T1 WHERE T1.products_costing_more_than_300  =  'yes'"}
{"question": "What are the ids of the countries with the highest GDP per capita?", "query": "SELECT T1.country_name,  T1.gdp_per_capita FROM country AS T1 JOIN GDP_Per_Capita AS T2 ON T1.country_id  =  T2.country_id WHERE T2.gdp_per_cap_code  =  \"GDP_Per_Capita\""}
{"question": "What are the id, number and name of the students who have signed up in the online course?", "query": "SELECT T1.student_id,  T1.number,  T1.name FROM student AS T1 JOIN course_student_registration AS T2 ON T1.student_id  =  T2.student_id WHERE T2.course_id  =  \"1\""}
{"question": "What are the numbers (from 0) of games played by all the players in each of the 4 different leagues?", "query": "SELECT league_id,  COUNT(*) AS num_games FROM games GROUP BY league_id"}
{"question": "What are the names and birth date of all the students who are in the dorm with the highest population", "query": "SELECT T1.name,  T1.birth_date FROM dorm AS T1 JOIN student AS T0 ON T1.id  =  T0.dorm_id WHERE T0.population  =  (SELECT max(T2.population) FROM dorm AS T2)"}
{"question": "What are the names and id of all customers with at least 2 accounts?", "query": "SELECT T1.customer_id,  T2.name FROM customer AS T1 JOIN account AS T2 ON T1.id  = T2.id WHERE T1.customer_id  =  T2_customer_id AND T2.id  =  T2_id"}
{"question": "Show the name and last name of the company that has the least number of customers", "query": "SELECT T1.company_name,  T1.customer_count FROM company AS T1 WHERE T1.customer_count  =  (SELECT min(customer_count) FROM company)"}
{"question": "What are the cities in which the most number of students are studying for more than 3 years?", "query": "SELECT T1.city FROM students AS T1 JOIN student_cities AS T2 ON T1.student_id  =  T2.student_id WHERE T2.years  >  3"}
{"question": "generate the questions of a table named \"table_name\"", "query": "Examples of some or all task item:"}
{"question": "What are the names, locations, and ids of the colleges that have at least two players?", "query": "SELECT T1.college_id,  T1.name,  T1.location,  T1.id FROM college AS T1 JOIN player AS T2 ON T1.college_id  =  T2.college_id WHERE T2.player_id  =  (SELECT T3.player_id FROM player AS T3 WHERE T3.team_id  =  T2)"}
{"question": "What are the names, id, and roles of the employees with the same name?", "query": "SELECT T1.name,  T1.id,  T1.role FROM employees AS T1 WHERE T1.name  = \"John\""}
{"question": "What are the ids of all players who have not played at least one game?", "query": "SELECT T1.player_id FROM player_game AS T1 JOIN player_game AS T2 ON T1.game_id  =  T2.game_id WHERE T2.game_id IS NULL"}
{"question": "Find the id of the document which has only one record", "query": "SELECT T1.document_id FROM document AS T1 WHERE T1.id  =  (SELECT MIN(T2.id) FROM document AS T2)"}
{"question": "What are all the movies made in the year 2000 or after?", "query": "SELECT movie_title FROM movies WHERE year  >=  2000"}
{"question": "What is the average temperature in the summer for the state that has the highest number of cities with population over 50,000?", "query": "SELECT AVG(temperature) FROM weather WHERE state_code  =  \"CA\" AND population  >  5000;"}
{"question": "What are the names in descending order of the number of students in the library?", "query": "SELECT name FROM student_library ORDER BY count(*) DESC"}
{"question": "What are the first name and last name of the employees who worked in which city?", "query": "SELECT T1.first_name,  T1.last_name FROM employees AS T1 WHERE T1.city  =  \"New York\""}
{"question": "What are the names (first, middle and last) of the students who have attended the most number of seminars?", "query": "SELECT T1.student_id,  T1.first_name,  'T1.last_name' FROM students AS T1 JOIN courses AS T2 ON T1.student_id  =  T2.student_id WHERE T2.course_id  =  (SELECT course_id FROM courses WHERE course_name  =  \"Seminars\") GROUP BY T1.student_id ORDER BY T1.student_id DESC LIMIT 1"}
{"question": "What is the name and phone number of the customer who has card number 9876543211223?", "query": "SELECT T1.customer_name,  T1.customer_phone_number FROM customer AS T1 WHERE T1.customer_card_number  =  \"9876543211223\""}
{"question": "How many students are taking courses in which no students have ever cancelled the purchase of \"food\"?", "query": "SELECT T1.course_id,  T1.course_name,  T1.course_code,  T1.course_price,  T1.course_start_date,  T1.course_end_date,  T1.price_in_dollars,  T1.course_id_br,  T1.course_type,  T1.course_duration,  T1.course_instructor_id,  T1.instructor_name,  T1.instructor1_id,  T1.student_id,"}
{"question": "What are the numbers 1 through 10?", "query": "SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10"}
{"question": "List the names and ids of the students whose name starts with H", "query": "SELECT T1.student_id,  T1.name_first,  'H' FROM student AS T1 WHERE T1.name_first  =  'H'"}
{"question": "Find the names of all the customers who have bought something from the store with the id of 1537", "query": "SELECT T1.name FROM Customer AS T1 JOIN store AS T2 ON T1.customer_id  =  T2._id WHERE T2.id  =  1537;"}
{"question": "What are the names in ascending order of number of items?", "query": "SELECT T1.name FROM items AS T1 ORDER BY T1.num_items ASC"}
{"question": "What are the names and number of the employees who report to Steve Johnson?", "query": "SELECT T1.first_name,  T1.last_name,  T1.employee_id FROM employees AS T1 JOIN manager AS T2 ON T1.employee_id  =  T2.[employee_id] WHERE T2.manager_id  =  'SJ'"}
{"question": "What is the name of the customer with credit card number 5893453?", "query": "SELECT customer_id,  credit_card_number FROM customer WHERE credit_card_number  =  5893453"}
{"question": "What are the average number of visitors per day at a museum in the US?", "query": "SELECT AVG(visitor_count) FROM museum_visitors"}
{"question": "Find the names of all the customers who have bought the same product", "query": "SELECT T1.customer_id,  T1.product_id,  T1.quantity,  T1.price,  T1.date_purchased,  T1.quantity_purchased,  T2.name FROM customer AS T1 JOIN product AS T2 ON T1.product_id  =  T2.product_id JOIN purchases AS T3 ON T1.customer_id  =  T3.customer_id WHERE T3.quantity  =  T1.quantity AND T3.quantity  >  0 AND T3.quantity  >"}
{"question": "Write a program that calculates the average price of wines by the year of production", "query": "SELECT AVG(price) FROM wine WHERE year  =  \"2008\""}
{"question": "What are the names with the highest number of votes?", "query": "SELECT name FROM votes WHERE vote_count  >  1"}
{"question": "What are the names and ages of all people who are friends with Dan, ordered by age?", "query": "SELECT T1.person_name,  T1.person_age FROM person AS T1 JOIN person_friend AS T2 ON T1.person_id  =  T2.person_id WHERE T2.friend_id  =  \"Dan\" ORDER BY T1.person_age"}
{"question": "What are the names for the three students who have been on sabbatical?", "query": "SELECT T1.name FROM student AS T1 WHERE T1.sabbatical_id  =  1;"}
{"question": "Find the names of products that are in the range of 20-40% of their price", "query": "SELECT product_name,  price FROM products WHERE price  >  (SELECT price FROM products WHERE price  >  20 AND price  <  40)"}
{"question": "Find the average and minimum age of all customers", "query": "SELECT AVG(age),  MIN(age) FROM customer"}
{"question": "What are the names, first names, and last names of each employee?", "query": "SELECT T1.first_name,  T1.last_name FROM Employees AS T1"}
{"question": "Find the first name, last name, sex, and age of the customers who do not have a bank card", "query": "SELECT T1.first_name,  T1.last_name,  T1.sex,  T1.age FROM customers AS T1 WHERE NOT EXISTS (SELECT 1 FROM bank_card AS T2 WHERE T1.customer_id  =  T2)"}
{"question": "What is the name and the age of the customer that has the most number of accounts?", "query": "SELECT T1.customer_first_name, T1.customer_last_name, T1.customer.customer_age FROM customers AS T1 JOIN accounts AS T2 ON T1.account_id  =  T2.account_id WHERE T2.account_type  =  \"checking\" AND T2.account_balance  >  0 AND T2.account_balance_date  >  \"2010-01-01\" AND T2.account_age  >  0"}
{"question": "List the names of the faculty members and the names of the courses they teach", "query": "SELECT T1.fname,  T1.lname,  T1.course_code,  T1.course_name FROM faculty AS T1 JOIN course AS T2 ON T1.course_id  =  T2.course_id WHERE T2.course_code  =  \"CSCI\""}
{"question": "What are the names, average salaries, and ages of all the students in the class?", "query": "SELECT T1.name,  T2.age,  T3.salary FROM student AS T1 JOIN class AS T2 ON T1.class_id  =  T2._id JOIN student_info AS T3 ON T1.student_id = T3.student_id WHERE T2.year  =  2008"}
{"question": "Show the names of all products that have at least two different product codes", "query": "SELECT T1.product_name,  T1.product_code FROM products AS T1 JOIN product_codes AS T2 ON T1.product_id  ="}
{"question": "How many students are attending the school named \"M", "query": "SELECT * FROM student WHERE school_name = \"M\""}
{"question": "Find the name of students whose age is between 25 and 30", "query": "SELECT T1.name FROM student AS T1 WHERE T1.age  =  25 AND T1.age  >  30"}
{"question": "List all the distinct names of products that is not in the table \"inventory\"", "query": "SELECT DISTINCT T1.name FROM products AS T1 WHERE T1.name  NOT IN (SELECT T2.name FROM inventory AS T2)"}
{"question": "What is the average number of students in the department of philosophy?", "query": "SELECT AVG(count(*)),  count(*) FROM student WHERE department_code  =  \"PHILOSOPHY\""}
{"question": "Find the name and phone number of the customer who paid the lowest amount for a product", "query": "SELECT T1.customer_name,  T2.customer_phone FROM customers AS T1 JOIN orders_details AS T2 ON T1.id  = T2.customer_id WHERE (T2.price  =  T3.price AND T2.product_id  =  T3.product_id)"}
{"question": "What are the names, population, and birth rates of all the countries in the world?", "query": "SELECT T1.name,  T1.population,  T1.birth_rate FROM countries AS T1"}
{"question": "What is the name and age of the oldest person in the store?", "query": "SELECT T1.firstname,  T1.lastname,  T1.age FROM customer AS T1 WHERE T1.firstname  =  \"John\" AND T1.lastname  =  \"Smith\" AND T1.age  =  \"80\""}
{"question": "What is the name, location and amount of the document that has the most lines?", "query": "SELECT name,  location,  amount FROM document WHERE count(*)  =  \"1\""}
{"question": "\"What are the names of all directors who have not directed a film with Tom Cruise?\"", "query": "SELECT T1.director_id,  T1.director_name FROM director AS T1 WHERE T1.director_id  =  (SELECT T2.director_id FROM director AS T2 WHERE T2.director_id  =  T1.director_id AND T2.director_name  =  \"Tom Cruise\")"}
{"question": "(a novel question, about a non-sql table), after \"", "query": "(the sql query to answer the query), after \""}
{"question": "What is the name and id of all instructors who have taught at least one class in the last 5 years?", "query": "SELECT T1.name,  T1.id FROM instructors AS T1 JOIN classes AS T2 ON T1.instructor_id  =  T2.[instructor_id] WHERE T2.start_date  >=  '2012-01-01' AND T2.end_date  >=  '2012'"}
{"question": "List the names of the countries with the most residents", "query": "SELECT T1.country_name,  T1.population FROM COUNTRIES AS T1 JOIN COUNTRIES AS T2 ON T1.population  >  T2.population ORDER BY T1.population DESC"}
{"question": "Which country has the largest population in the world?", "query": "SELECT T1.country_name,  T2.population FROM country AS T1 JOIN country_population AS T2 ON T1.country_id  =  T2.country_id WHERE T2.population  =  'largest'"}
{"question": "What is the average age of the oldest employees of the company?", "query": "SELECT avg(age) FROM employee"}
{"question": "What are the names or cities of states where the number of students is less than the average?", "query": "SELECT T1.state_name,  T1.city_name FROM states AS T1 JOIN students AS T2 ON T1.state_id  =  T2.state_id WHERE T2.student_count  <  T1.student_count"}
{"question": "Find the first two names of students who took an online class", "query": "SELECT T1.firstname,  T1.lastname FROM student AS T1 JOIN class AS T2 ON T1.studentid  =  T2.studentid WHERE T2.class_id  =  '1' AND T2.class_name  =  'Online' ORDER BY T1.firstname  ASC LIMIT 2"}
{"question": "What are the names, salaries and first names of the students in the school?", "query": "SELECT T1.first_name,  T1.last_name,  T1.salary FROM student AS T1 WHERE T1.school_id  =  1"}
{"question": "List the ids, names and genders for the architects who built two bridges or a mill?", "query": "SELECT T1.id,  T1.name,  T2.gender FROM architects AS T1 JOIN buildings AS T2 ON T1.architect_id  =  T2.architect_id WHERE T2.type  =  \"bridge\" OR T2.type  = 'mill'"}
{"question": "What are the names and ids of customers who bought more than 1 product but not more than 2 products", "query": "SELECT T1.id,  T1.name,  T1.\"product_id\" FROM customer AS T1 JOIN product AS T2 ON T1.customer_id  =  T2.\"customer_id\" WHERE T2.product_id  =  \"product_id\" AND T2.quantity  >  1 AND T2.quantity  <  2"}
{"question": "What are the names and ids of all the courses taught in the first semester of Fall 2010?", "query": "SELECT T1.course_name,  T1.course_id FROM courses AS T1 WHERE T1.start_date  =  '2010-10-01'"}
{"question": "When is the last time that I saw you?", "query": "SELECT T1.last_seen FROM friends AS T1 WHERE T1.id  =  \"luisg\""}
{"question": "What are the names and addresses of the customers who have received an invitation for the grand opening of the restaurant \"Ristorante\"", "query": "SELECT T1.customer_name,  T2.address_id FROM customers AS T1 JOIN invitations AS T2 ON T1.id  = T2.customer_id WHERE (T2.invitation_type  =  \"Ristorante\")"}
{"question": "How many customers with first name \"Dana\" lived in the houses with \"Cedar\"?", "query": "SELECT count(*)  FROM customer WHERE customer_first_name  =  \"Dana\" AND customer_last_name  =  \"Cedar\""}
{"question": "What are the names, numbers, and ages of the five students at the table in the dorm?", "query": "SELECT T1.student_first_name,  T1.student_last_name,  T1.student_age FROM students AS T1 JOIN dorm AS T2 ON T1.student_id  =  T2.student_id WHERE T2.room_number  =  \"5\""}
{"question": "How many times does Zoe Saldana has made a reservation", "query": "SELECT T1.reservations FROM reservation AS T1 JOIN customer AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.name  = \"Zoe Saldana\""}
{"question": "If you get a call from the president of the company, what is the last thing you say?", "query": "SELECT T1.answer FROM employees AS T1 JOIN questions AS T2 ON T1.id  =  T2.id WHERE T2.question  =  \"If you get a call from the president, what is the last thing you do?\""}
{"question": "What are the details (name, address, phone) of the store that has the most number of items in inventory?", "query": "SELECT name,  address,  phone FROM store WHERE store_id  =  (SELECT store_id FROM inventory GROUP BY store_id HAVING count(*)  =  (SELECT count(*) FROM inventory))"}
{"question": "What is the name, age and gender of all students attending the business courses?", "query": "SELECT T1.student_id,  T1.name,  T1. age,  T1.gender FROM student AS T1 JOIN class_course AS T2 ON T1.student_id  =  T2. student_id WHERE T2.course_code  =  \"Business\""}
{"question": "What are the names and locations of places in which the customer, whose id is 123456, will be going to?", "query": "SELECT T1.name,  T1.\"location\" FROM customer AS T1 WHERE T1.id  =  \"123456\""}
{"question": "What are the locations of the conference and the number of attendees?", "query": "SELECT T1.location,  count(*) FROM conference AS T1 GROUP BY T1.location"}
{"question": "Show the names of all the students that are in the class of 2015", "query": "SELECT T1.name FROM student AS T1 JOIN class AS T2 ON T1.id  =  T2.student_id WHERE T2.class_id  =  '2015'"}
{"question": "What are the prices of the following products?", "query": "SELECT T1.price FROM products AS T1 WHERE T1.product_id IN (SELECT T2.product_id FROM products AS T2 WHERE T2.product_id IN (SELECT product_id FROM products WHERE product_name = \"Bread\" OR product_name = \"Milk\" OR product_name = \"Eggs\" OR product_name = \"Cheese\" OR product_name = \"Butter\" OR product_name = \"Coffee\" OR product_name = \"Tea\" OR product_name = \"Sugar\" OR product_name = \"Flour\""}
{"question": "What is the name and address for each student?", "query": "SELECT T1.student_name,  T1.student_address FROM students AS T1"}
{"question": "Find the id and type of car, ordered by the age of the car", "query": "SELECT T1.id,  T1.type FROM cars AS T1 WHERE T1.age  >  (SELECT T2.age FROM cars AS T2 WHERE T2.id  =  T1.id)"}
{"question": "Find the names, addresses and phone numbers of all the employees who live in the house numbered 23", "query": "SELECT T1.firstname,  T1.lastname,  T1.address,  T1.phone FROM employee AS T1 JOIN house AS T2 ON T1.house_id  =  T2._id WHERE T2.number  =  \"23\""}
{"question": "What are the names (first and last) of students who live in Hampstead but earn an average of more than 3,000 per month?", "query": "SELECT T1.first_name,  T1.last_name FROM student AS T1 JOIN student_address AS T2 ON T1.id  =  T2.id WHERE T2.city  =  'Hampstead' AND T2.state  =  'NY' AND T2.zip  =  '10014' AND T2.income  >  3.00"}
{"question": "List the names and genders of all students whose major is Engineering", "query": "SELECT T1.student_name,  T1.student_gender FROM student AS T1 JOIN major AS T2 ON T1.student_id  =  T2.student_id WHERE T2.major_name  =  \"Engineering\""}
{"question": "What are all the names of the employees who are younger than 50 and have experience more than 1 year?", "query": "SELECT T1.employee_id,  T1.name_first,  name_last,  T1.[age],  T1.[experience] FROM employee AS T1 WHERE T1.age  <  50 AND T1.experience  >  1"}
{"question": "What is the title with most number of letters in the name?", "query": "SELECT T1.title FROM title AS T1 WHERE T1.title  =  \"The\""}
{"question": "What is the average price of all products?", "query": "SELECT AVG(price) FROM products"}
{"question": "What is the average grade point of students in the department of physics?", "query": "SELECT AVG(GPA) FROM student WHERE dept_name  =  \"Physics\""}
{"question": "How many different sales channels do we have?", "query": "SELECT DISTINCTOR T1.channel_id FROM channel_detail AS T1 WHERE T1.channel_id  =  '1'"}
{"question": "What is the total number of people?", "query": "SELECT count(*) AS total_people FROM people"}
{"question": "What are the names, in the same order, of the last five people that got the highest score in the exam?", "query": "SELECT T1.last_name,  T1.first_name FROM students AS T1 JOIN scores AS T2 ON T1.student_id  =  T2.[student_id] WHERE T2.score  >  (SELECT MAX(score) FROM scores)"}
{"question": "(Find all the names of the products with length bigger than 3 and height smaller than 5", "query": "SELECT DISTINCT T1.name FROM product AS T1 WHERE T1.length > 3 AND T1.height < 5"}
{"question": "what is the least common media type in the tracks", "query": "SELECT DISTINCE(T1.media_type) FROM track AS T1"}
{"question": "List the names and age of all the students", "query": "SELECT T1.name,  T1.age FROM students AS T1"}
{"question": "What is the average temperature of a room with the name \"Lincoln\" and the number of windows in the room?", "query": "SELECT AVG(Temperature) FROM room WHERE room_name = \"Lincoln\" AND number_of_windows =  \"2\""}
{"question": "What are the names and ids of the people who have been in the room 222?", "query": "SELECT T1.name,  T1.[id] FROM people AS T1 WHERE T1.room_id  =  \"222\""}
{"question": "What is the name and location of the city where the biggest stadium is?", "query": "SELECT city,  name FROM cities WHERE population  >  (SELECT max(population) FROM cities)"}
{"question": "What is the venue for the competitions \"1994 FIFA World Cup qualification\" in Nanjing ( Jiangsu )?", "query": "SELECT T1.city_name,  T2.city_id FROM city AS T1 JOIN city AS T2 ON T1.city_id  =  T2.city_id WHERE T1.city_name  =  \"Nanjing\" AND T2.city_id  =  \"Jiangsu\""}
{"question": "What are the numbers of different types of schools?", "query": "SELECT DISTINCTION(school_type) FROM school"}
{"question": "(novel question, about a different table)", "query": "SELECT name FROM Person"}
{"question": "What are the names, id and location of the universities that have a student population exceeding 100000?", "query": "SELECT T1.name,  T1.id,  T1.location FROM universities AS T1 JOIN students AS T2 ON T1.student_id  =  T2.[id] WHERE T2.population  >  100000"}
{"question": "Find the first names of students with the highest mark in math", "query": "SELECT T1.firstname FROM student AS T1 JOIN mark AS T2 ON T1.student_id  =  T2.student_id WHERE T2.mark  =  \"100\""}
{"question": "What is the product type of the product with product code \"LCD TV\"?", "query": "SELECT product_type_code FROM product WHERE product_code  =  \"LCD TV\""}
{"question": "What is the score of the first student in the first row?", "query": "SELECT T1.score FROM player AS T1 WHERE T1.player_id  ==  1"}
{"question": "Find the titles of movies and books corresponding with companies incorporated in China", "query": "SELECT T1.title FROM Movie AS T1 JOIN Company AS T2 ON T1.company_id  =  T2._id WHERE T2.country  =  \"China\""}
{"question": "What is the name and the number of days the company has been in business?", "query": "SELECT name,  days FROM company"}
{"question": "What is the name for the branch that registered the most member?", "query": "SELECT T1.branch_name FROM branch AS T1 JOIN member_of_branch AS T2 ON T1.branch_id  =  T2.branch_id WHERE T2.branch_name  =  \"The Branch\""}
{"question": "What are the names and ids of all the departments in the University?", "query": "SELECT T1.Department_name,  T2.id FROM Department AS T1 JOIN Department_Student AS T2 ON T1.id  = T2.Department_id WHERE T1.name  = \"University\""}
{"question": "Find the name of all the persons who left the company within a year after they were hired", "query": "SELECT name FROM Person LEFT JOIN Leaves_from_company AS T1 ON T1.Person_id  =  Person.Person_id WHERE T1.Leaves_from_company_id  =  1 AND T1.Leaves_from  =  'Y'"}
{"question": "(a question about a sql table) How many rooms have king beds?", "query": "SELECT T1.room_type_id FROM Rooms AS T1 JOIN Room_Types AS T2 ON T1.room_type_code  =  T2.room_type_code WHERE T2.room_type_name  =  \"King Bed\""}
{"question": "Find the first name of the person who has the largest number of friends", "query": "SELECT T1.firstname FROM friend AS T1 JOIN person AS T2 ON T1.friend_id  =  T2._id WHERE T2.firstname  =  \"John\""}
{"question": "What are the names for the departments that have a faculty member who is older than the average age?", "query": "SELECT T1.name FROM department AS T1 JOIN faculty AS T2 ON T1.department_id  =  T2.[department_id] WHERE T2.age  >  (SELECT avg (age) FROM faculty)"}
{"question": "What are the ids and names of the architects who built two bridges in the same year?", "query": "SELECT T1.id,  T1.name FROM architects AS T1 JOIN bridge_construction AS T2 ON T1.id  =  T2.id WHERE T1.name  = \"John Doe\" AND T2.name  = \"John Doe\";"}
{"question": "List all the books in alphabetical order", "query": "SELECT T1.book_name FROM books AS T1 ORDER BY T1.book_name ASC"}
{"question": "Find the number of the students who are in the same course with you", "query": "SELECT T1.student_id,  T1.first_name,  T1.last_name,  T1.course_id,  T1.course_name,  T1.grade_id,  T1.grade_name,  T1.section_id,  T1.section_name,  T1.year_id,  T1.year_name,  T1.semester_id,  T1.semester,  T1.section_number,  T1.section_position,  T1.course_number,"}
{"question": "What are the names, starting with the most common, of all the students who are over 75 years old?", "query": "SELECT name FROM Person HAVING age  >  75 ORDER BY count(*) DESC"}
{"question": "Find the first name of people who have attended the University of Minnesota", "query": "SELECT T1.name FROM student AS T1 JOIN registration AS T2 ON T1.id  =  T2.student_id WHERE T2.university_id  =  'University of Minnesota'"}
{"question": "What is the average total price of rooms, for each bed types?", "query": "SELECT AVG(price) FROM room WHERE bed_type = \"double\""}
{"question": "What are the names for the products that are not \"computer chips\"?", "query": "SELECT product_name FROM product WHERE product_name NOT IN (\"computer chips\")"}
{"question": "What is the name, population, and area of the country with the highest GDP per capita?", "query": "SELECT T1.country_name,  T1.population,  T1.area FROM Country_Statistics AS T1 WHERE T1.GDP_per_capita  >  (SELECT T2.GDP_per_capitum FROM Country_Statistics AS T2 WHERE T2.country_name  =  T1.country_name )"}
{"question": "Find the name of products with length smaller than 3 or length greater than 5", "query": "SELECT T1.product_name FROM product AS T1 WHERE T1.length  <  3 OR T1.length  >  5"}
{"question": "What are the names, ordered by their popularity, of the books with the highest grossing author in the year 2009?", "query": "SELECT T1.name,  T2.popularity FROM books AS T1 JOIN books_by_author AS T2 ON T1.book_id  =  T2.book_id WHERE T2.year  =  2009 ORDER BY T2.popularity DESC"}
{"question": "What are the names", "query": "SELECT name FROM track"}
{"question": "What are the names and ids of the departments that have the most employees?", "query": "SELECT T1.department_id,  T1.department_name,  T1.employee_id FROM department AS T1 JOIN employee AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*) ASC LIMIT 3;"}
{"question": "What are the first five customers' names?", "query": "SELECT T1.first_name,  T1.last_name FROM customer AS T1 ORDER BY T1.first_name LIMIT 5"}
{"question": "What are the names on the top of the pages in the database?", "query": "SELECT name FROM pages WHERE page_number  =  1;"}
{"question": "The names and the first names of the employees who work in the office of the company", "query": "SELECT T1.name,  T1.first_name FROM employees AS T1 WHERE T1.office_id  =  \"1\""}
{"question": "What are the names, starting with the letter \"A\", of all the students who are younger than 18?", "query": "SELECT T1.first_name,  T1.last_name FROM students AS T1 WHERE T1.age  <  18"}
{"question": "What is the first and last names of the employees who are not part of any department?", "query": "SELECT T1.first_name,  T1.last_name FROM employees AS T1 WHERE NOT EXISTS (SELECT 1 FROM department AS T2 WHERE T1.department_id  =  T2)"}
{"question": "What kind of question is \"What is the name of the room with the most beds\"?", "query": "SELECT T1.room_name FROM Room_Type AS T1 JOIN Room_Type_description AS T2 ON T1.room_type_id  =  T2._id WHERE T2.name  =  \"The room with the most beds\""}
{"question": "What is the number and name of all the rivers in the world?", "query": "SELECT T1.Name,  T1.Number FROM river AS T1"}
{"question": "What are the ids of the students who have not taken any math courses?", "query": "SELECT T1.student_id FROM student AS T1 JOIN class_attends AS T2 ON T1.student_id  =  T2.student_id WHERE T2.class_code !=  \"MATH\""}
{"question": "How many students are there in the Faculty of Arts?", "query": "SELECT count(*)  FROM student"}
{"question": "How many students are in the gym?", "query": "SELECT count(*) AS TOTAL FROM students;"}
{"question": "what are the names of cities that have a population less than 500k?", "query": "SELECT city FROM cities WHERE population  <  500000"}
{"question": "Which countries have the lowest cost of living?", "query": "SELECT Country,  AVG(Cost_of_Living) FROM Country_Cost_of_Living GROUP BY Country ORDER BY AVG(Cost_of_Living);"}
{"question": "What is the name and age of the person who lives in the house at the address \"10, Viale dei Tigli, Florence, Italy\"?", "query": "SELECT T1.person_name,  T2.person_age FROM Person AS T1 JOIN Person_Address AS T2 ON T1.person_id  =  T2.person_id WHERE T2.address_id  =  \"10, Viale dei Tigli\""}
{"question": "What is the first and last name of every student at the university of Utah?", "query": "SELECT T1.first_name,  T1.last_name FROM student AS T1 WHERE T1.university_id  =  \"Utah\""}
{"question": "What is the name and address of the most-visited tourist attraction in the USA?", "query": "SELECT T1.name,  T1.address FROM tourist_attraction AS T1 JOIN tourist_attraction_visits AS T2 ON T1.attraction_id  =  T2.attraction_id WHERE T2.count  >  (SELECT count(*) FROM tourist_attraction_visits WHERE tourist_attraction_id  =  \"T1.attraction_id\")"}
{"question": "What is the name and phone number of the person who last opened the door?", "query": "SELECT T1.fname,  T1.lname,  T1.phone FROM person AS T1 WHERE T1.last_opened_door  =  \"yes\""}
{"question": "How old is the youngest person who ever won the Olympic Marathon?", "query": "SELECT T1.age,  T2.name FROM runner AS T1 JOIN runner_info AS T2 ON T1.id  =  T2.id WHERE T2.name  =  \"Marathon\" AND T2.age  =  \"29\""}
{"question": "How many different people named 'Hedley' are there (not counting any person named Hedley)", "query": "SELECT count(*) AS c FROM people AS T1 WHERE T1.name  = 'Hedley'"}
{"question": "What is the name, address, and phone number of the customer who just got a new account?", "query": "SELECT T1.Name,  T1.Address,  T1.Phone FROM Customer AS T1 WHERE T1.Account_Number  =  \"1234567890\""}
{"question": "Find the ids of all departments that have a professor with the name \"David\"", "query": "SELECT T1.dept_name FROM department AS T1 WHERE T1.name  =  \"David\""}
{"question": "How many stadiums do each of the following countries have?", "query": "SELECT country_name,  city_name,  country_code,  city_code FROM countries WHERE country_name  =  \"United States\""}
{"question": "What is the average age of the students whose college is in the country 'Australia'?", "query": "SELECT AVG(age) FROM student WHERE college_name  =  \"Australia\""}
{"question": "What are the names and salaries of all the employees who have the same name as the manager?", "query": "SELECT T1.first_name,  T1.last_name,  T1.salary FROM employees AS T1 JOIN manager AS T2 ON T1.employee_id  =  T2._id WHERE T1.name  = T2.name"}
{"question": "What is the average age of male students?", "query": "SELECT avg(age) FROM student"}
{"question": "How many students are taking the course \"AP Statistics\" this semester?", "query": "SELECT T1.student_id FROM Student_Enrollment AS T1 JOIN Courses AS T2 ON T1.course_id  =  T2.course_id WHERE T2.name  =  \"AP Statistics\""}
{"question": "Find the first name and last name of the students who are either tutors or tutors' assistants", "query": "SELECT T1.firstname,  T1.lastname FROM student AS T1 JOIN student_tutor AS T2 ON T1.studentid  =  T2.studentid JOIN student_tutor_assistant AS T3 ON T2.studentid  =  T3.studentid WHERE T3.tutor_id  =  '1'"}
{"question": "Find the distinct unit values for tracks", "query": "SELECT DISTINCTION unit_value FROM track_unit"}
{"question": "What are the names, genders, and average height of the people in the database, in ascending order of height?", "query": "SELECT name,  gender,  height FROM people ORDER BY height ASC"}
{"question": "What are the names, addresses, and phone numbers of all customers?", "query": "SELECT T1.name,  T1.* FROM customer AS T1 WHERE T1.name  =  \"John\""}
{"question": "List the name and age of the people who died from the flu", "query": "SELECT name,  age FROM people WHERE death_date  =  \"1918-01-01\""}
{"question": "(a novel question, about a table), after \"Given:\"", "query": "SELECT T1.title,  T1.author,  T1.publisher,  T1.year,  T1.pages,  T1.price,  T1.isbn,  T1.isbn13,  T1.isbn10,  T1.isbn9,  T1.isbn8,  T1.isbn7,  T1.isbn6,  T1.isbn5,  T1.isbn4,  T1.isbn3,  T1.isbn2,  T1."}
{"question": "How many students are there in Lyle Hall?", "query": "SELECT count(*)  FROM students"}
{"question": "What are the names for the people listed in this record?", "query": "SELECT name FROM Person"}
{"question": "Find the name of students who do not have any party tickets", "query": "SELECT T1.name FROM students AS T1 WHERE NOT EXISTS (SELECT T2.name FROM parties AS T2 WHERE T1.student_id  =  T2.student_id)"}
{"question": "What is the name and address of the department which has the highest number of students?", "query": "SELECT T1.dept_name,  T1.dept_address FROM department AS T1 JOIN student AS T2 ON T1.dept_id  =  T2._id WHERE T2.count  >  (SELECT count(*) FROM student WHERE dept_id  =  T1.id)"}
{"question": "What are the names, and id's, of the students who are registered in the course \"MATH 212\", and the course \"PHYSICS 210?\"", "query": "SELECT T1.name,  T2.id FROM student AS T1 JOIN course AS T2 ON T1.id  =  T2.id WHERE T2.name  =  \"MATH 212\" AND T2.name  =  'PHYSICS 210'"}
{"question": "Show the names of the products in descending order of price", "query": "SELECT name FROM products ORDER BY price DESC"}
{"question": "How do the students feel about this course?", "query": "SELECT T1.student_id,  T1.student_name,  T1.student_course,  T1.student_grade,  T1.student_feeling,  T1.student_comment,  T1.student_class FROM student AS T1 WHERE T1.student_course  =  'QM-201'"}
{"question": "List all schools in each of these states: California, Colorado, Florida", "query": "SELECT school_name,  state_name FROM schools WHERE state_name IN (\"California\", \"Colorado\", \"Florida\")"}
{"question": "Show the average number of transactions of each customer, and the minimum, average, and maximum transactions of each customer, in descending order, respectively", "query": "SELECT T1.cust_id,  T1.trans_count,  T1.min_trans,  T1.avg_trans,  T1.max_trans FROM customer AS T1 ORDER BY T1.avg_trans DESC"}
{"question": "What is the first name of the professor at the department of Computer Information Systems?", "query": "SELECT T1.first_name FROM professor AS T1 WHERE T1.department_id  =  'CIS'"}
{"question": "Find the age of the largest number of students", "query": "SELECT T1.age FROM students AS T1 WHERE T1.age  =  (SELECT max(T2.age) FROM students AS T2)"}
{"question": "Find the capacity and type of the dorm whose name has the substring 'Donor'", "query": "SELECT T1.capacity,  T1.type FROM dormitory AS T1 JOIN dormitory_type AS T2 ON T1.dormitory_type_id  =  T2.dormitory_type_id WHERE T2.name  =  \"Donor\""}
{"question": "Find the number of employees with more than 5 years of service", "query": "SELECT T1.employeeid,  T1.name,  T1.salary,  T1.start_date,  T1.end_date,  T1.status,  T1.department,  T1.position,  T1.salary_type,  T1.salary  FROM employee AS T1 WHERE T1.salary  >  5000 AND T1.start_date  >  '2012-01-01' AND T1.end_date  >  '2012'"}
{"question": "List the names of all the students", "query": "SELECT T1.name FROM students AS T1 WHERE T1.id  =  (SELECT T2.id FROM students AS T2 WHERE T2.name  =  T1.name)"}
{"question": "What are the names, genders and ages of all tennis players?", "query": "SELECT T1.name,  T1.gender,  T1.age FROM tennis_players AS T1 WHERE T1.name  = \"John Doe\""}
{"question": "What is the average rating for the last movie?", "query": "SELECT avg(rating) FROM movies WHERE movie_id  =  (SELECT movie_id FROM movies WHERE movie_name  =  \"The Last Airbender\")"}
{"question": "Show the names of the clubs with at least two members", "query": "SELECT T1.name FROM club AS T1 JOIN members AS T2 ON T1.club_id  =  T2._id WHERE T2.name  =  \"name of the club\""}
{"question": "Find the number of employees who are in one or more departments", "query": "SELECT T1.department_id FROM department AS T1 JOIN employee AS T2 ON T1.department_id = T2.department_id"}
{"question": "What are the names and the number of employees of each department?", "query": "SELECT T1.Name,  COUNT(*) AS \"Number of employees\" FROM department AS T1 JOIN employees AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.Name"}
{"question": "What are the names and the ages of the two sons of the parents of the person with the last name \"Peterson\"?", "query": "SELECT T1.first_name,  T1.last_name,  T1.age FROM Person AS T1 WHERE T1.last_name  =  \"Peterson\""}
{"question": "What are the names for the movies that were not made in the year 2005?", "query": "SELECT T1.movie_name FROM movies AS T1 WHERE T1.year  <  2005"}
{"question": "List the countries, the population numbers, and the number of inhabitants of the countries", "query": "SELECT Country,  population,  population_inhabitant FROM countries"}
{"question": "What is the name, title, and id of the course with the highest number of students?", "query": "SELECT name,  title,  id FROM course WHERE id  =  (SELECT max(id) FROM course)"}
{"question": "What is the name, id, and first name of the students who are not living in the country with code US?", "query": "SELECT T1.student_id,  T1.name,  T1._country_code,  T1.first_name FROM student AS T1 JOIN student_country AS T2 ON T1.student_id  =  T2._student_id WHERE T2._country_code  =  'US'"}
{"question": "What is the average number of people who are of type \"Student\" at each school?", "query": "SELECT AVG(count(*)),  STUDENT_ID FROM STUDENT_GROUPS GROUP BY STUDENT_ID"}
{"question": "What is the name and number of the student who is the third-oldest person in the class?", "query": "SELECT T1.name,  T1.age FROM students AS T1 WHERE T1.age  =  (SELECT T2.age FROM students AS T2 WHERE T2.age  =  (SELECT MAX(age) FROM students))"}
{"question": "Find the number of offices that are closed on a Sunday", "query": "SELECT count(*)  FROM office AS T1 JOIN open_hours AS T2 ON T1.id  =  T2.office_id WHERE T2.day  =  'Sunday'"}
{"question": "What is the name and contact information of the accountant who is in charge of the project?", "query": "SELECT T1.first_name,  T1.last_name,  T1.email,  T1.phone,  T1.address_id,  T1.city,  T1.state_province_code,  T1.country,  T1.zip_code,  T1.company_id,  T1.company_name,  T1.company_phone,  T1.company_email,  T1.company_address,  T1.company_city,  T1.company_state_code,  T1"}
{"question": "Which city is the busiest airport for flights to/from/within the United States?", "query": "SELECT T1.city_name,  T1.city_id FROM airports AS T1 JOIN airport_destinations AS T2 ON T1.city_id  =  T2.city_id WHERE T2.airport_name  =  \"Chicago\""}
{"question": "What is the average number of hours per day which an employee, with id number 1, spends at work?", "query": "SELECT T1.hours_per_day FROM employees AS T1 WHERE T1.id  =  1"}
{"question": "Find the name of all movies that have a score above 80, sorted by descending score", "query": "SELECT T1.title,  T1.score FROM movie AS T1 WHERE T1.score  >  80 ORDER BY T1.score DESC"}
{"question": "What is the average salary of the workers at the company named \"Coca-Cola\"?", "query": "SELECT AVG(salary) FROM employees WHERE company_name = \"Coca-Cola\""}
{"question": "Find the name of the city where the highest number of births takes place", "query": "SELECT name FROM city WHERE population  =  \"highest number of births\""}
{"question": "What is the average and maximum speed of all cars that are in the database, and for which the average speed is at least 60?", "query": "SELECT AVG(Speed),  MAX(Speed) FROM car WHERE Speed >= 60"}
{"question": "Show the average, maximum, and minimum temperature for each year?", "query": "SELECT AVG(temperature) AS avg_temp, MAX(temperature) AS max_temp, MIN(temperature) AS min_temp FROM temperature;"}
{"question": "What is the number?", "query": "SELECT count(*) AS count FROM table"}
{"question": "Find the students who have attended the most parties", "query": "SELECT T1.stu_id,  T1.stu_name,  T1.stu__id,  T1.st_id,  T1.party_id,  T1.date_of_party FROM student AS T1 JOIN party AS T2 ON T1.stu_id  =  T2._id JOIN event AS T3 ON T1.stu_fid  =  T3.stuid WHERE T3.party_id  =  '1' ORDER BY T1.party_id DESC LIMIT 1"}
{"question": "What are the names and prices for the following products:", "query": "SELECT T1.product_name,  T2.price FROM products AS T1 JOIN products_price AS T2 ON T1.product_id  =  T2.product_id"}
{"question": "What are the names and names of the children of each student?", "query": "SELECT T1.student_id,  T1.name,  T1.name FROM students AS T1 JOIN students_children AS T2 ON T1.student_id  =  T2.student_id"}
{"question": "What are the names, birth dates and cities of all users' parents?", "query": "SELECT T1.user_id,  T1.first_name,  '',  T1.last_name,  T1.city,  T1.birth_date,  T1.address_type_code,  T1.address_id,  T1.address_street,  T1.address_city,  T1.address_state,  T1.address_zip,  T1.address_country,  T1.address_phone,  T1.address_fax,  T1.address_email,  T1.address"}
{"question": "List all the products with the name containing \"a\" and \"b\"", "query": "SELECT T1.product_name FROM product AS T1 WHERE T1.product_name LIKE '%a%' OR T1.product_name LIKE 'a%' OR T1.name LIKE '%a%' OR  T1.name LIKE 'a%'"}
{"question": "What are the names, birth places, and birth dates of all guests?", "query": "SELECT T1.name,  T1.birth_place,  T1.birth_date FROM guest AS T1"}
{"question": "What are the names for the cities that have only one airport and have airport code \"DLA\"?", "query": "SELECT name FROM city WHERE city_id NOT IN (SELECT city_id FROM airport) AND airport_code = \"DLA\""}
{"question": "What are the total numbers of students from each state who have been to college?", "query": "SELECT state,  COUNT(*) FROM student GROUP BY state"}
{"question": "What are the ids, names and ratings of all games played by the USA in the World Cup?", "query": "SELECT T1.game_id,  T1.game_name,  T1.game_rating FROM game AS T1 JOIN game_team AS T2 ON T1.game_id  =  T2._game_id WHERE T2.team_id  =  \"USA\""}
{"question": "What is the average price of vehicles, for each model?", "query": "SELECT avg(price) FROM vehicles"}
{"question": "(a novel question, about a specific person and movie)What is the name of the actor playing the character in the movie, \"Mr", "query": "SELECT T2.actor_id,  T2.actor_name FROM actor AS T1 JOIN actor_info AS T2 ON T1.actor_id  =  T2"}
{"question": "Find the id and name of all employees who have at least two different jobs", "query": "SELECT T1.id,  T1.name FROM employee AS T1 JOIN employee AS T2 ON T1.id  = T2.id WHERE T1.id  <>  T2.id"}
{"question": "Find the names of states in which there are more than 1 people that are willing to donate blood in the summer", "query": "SELECT state_name,  COUNT(*) FROM donor_states WHERE SUM(SUM(SUM(SUM(SUM( SUM(SUM(SUM(SUM(( SUM(SUM(SUM(SUM((( SUM(SUM(SUM(SUM (SUM(SUM(SUM(SUM((SUM(SUM(SUM(SUM(((SUM(SUM(SUM(SUM ( SUM(SUM(SUM(SUM (( SUM(SUM(SUM(SUM ((( SUM(SUM(SUM(SUM(\"SUM(SUM(SUM(SUM(\" SUM(SUM(SUM(SUM\""}
{"question": "What are the names for cities that have the lowest temperature in the world?", "query": "SELECT T1.city_name FROM cities AS T1 JOIN weather AS T2 ON T1.city_id  =  T2.city_id WHERE T2.temperature  =  \"lowest\""}
{"question": "Show the average height of all athletes with the sex (sex is 'M') and the number of games played (games is '>100')", "query": "SELECT AVG(height) FROM athlete WHERE sex = 'M' AND games > '100'"}
{"question": "What are the names, cities and ages of the people from the movies and tv shows \"The Simpsons\" ordered by age ascending?", "query": "SELECT T1.name,  T2.city,  T3.age FROM movie_actors AS T1 JOIN actors AS T2 ON T1.actor_id  =  T2.actor_id JOIN actors AS T3 ON T1.actor_id = T3.actor_id WHERE T1.name  =  \"The Simpsons\""}
{"question": "Find the names of all the authors that have written more than one book", "query": "SELECT name FROM authors WHERE author_id  IN (SELECT author_id FROM book)"}
{"question": "What are the names for the cities in the following table?", "query": "SELECT city_name FROM city WHERE city_id  =  (SELECT city_id FROM city_name WHERE city_name  =  \"New York\")"}
{"question": "What is the largest number of people that attended the same event?", "query": "SELECT T1.name,  T1.\"count\" FROM event AS T1 WHERE T1.name  =  \"The Big Game\""}
{"question": "What are the names and addresses of the customers who purchased the most books at the library?", "query": "SELECT customer_id,  customer_name,  customer_address FROM customers WHERE customer_id  IN (SELECT customer_id FROM books WHERE book_id  IN (SELECT book_id FROM books WHERE book_name  =  \"The Hobbit\") AND book_quantity  >  (SELECT max(book_quantity) FROM books WHERE book_name  IN (SELECT book_name FROM books WHERE book_name  LIKE  \"The Hobbit\")))"}
{"question": "What is the average height of male athletes in the national basketball league?", "query": "SELECT AVG(height) FROM athlete WHERE sport_id  =  \"basketball\""}
{"question": "What are the names for all of the employees who have been employed for at least two years?", "query": "SELECT T1.first_name,  T1.last_name FROM employees AS T1 JOIN employee_history AS T2 ON T1.employee_id  =  T2.employee_id WHERE T2.history_id  =  1"}
{"question": "Find the names of universities and their city", "query": "SELECT T1.university_name,  T1.city FROM university AS T1"}
{"question": "What is the average income of residents in zip code 77401?", "query": "SELECT T1.avg_income FROM zip_code AS T1 JOIN people AS T3 ON T1.zip_code_id  =  T3.zip_code_id WHERE T3.city_name  =  \"Houston\""}
{"question": "Find the names of cities where there is a cinema and a theatre", "query": "SELECT T1.city,  T1.theatre,  T1.cinema FROM city_theatre AS T1 JOIN city_cinema AS T2 ON T1.city_id  =  T2.[city_id]"}
{"question": "What are the names, addresses and phone numbers of all the doctors who have at least 5 patients?", "query": "SELECT T1.name,  T1.address,  T1.phone_number FROM doctor AS T1 WHERE T1.patient_count  >  5"}
{"question": "What is the name for the most common currency of the world?", "query": "SELECT name FROM currency WHERE count(*)  >  1"}
{"question": "How many states have more than 2 airports?", "query": "SELECT state_id,  COUNT(*) FROM airport GROUP BY state_id HAVING count(DISTINCT airport_id)  >=  2"}
{"question": "What is the largest integer number that can be expressed as the sum of digits of 2, 3 and 4?", "query": "SELECT MAX(T1.num) FROM ( SELECT SUM(T2.num) AS num FROM ( SELECT SUM(T3.num) AS num FROM (SELECT SUM(T4.num) AS num FROM ("}
{"question": "What are the names, title and average ratings of all the movies?", "query": "SELECT movie_name,  movie_title,  movie_rating FROM movies"}
{"question": "How many students did not get a degree in a field that requires at least 4 years to complete?", "query": "SELECT T1.name,  T2.degree FROM students AS T1 JOIN degree AS T2 ON T1.id  =  T2.student_id WHERE T2.degree  =  \"Not a degree\" AND T2.year  =  \"Not a year\" AND T2.major  =  \"Not a major\""}
{"question": "What were the names of the students who took the course \"Economics\"?", "query": "SELECT T1.student_name FROM students AS T1 JOIN student_course_enrolment AS T2 ON T2.student_id  =  t1.student_id WHERE T2.course_id  =  'Economics'"}
{"question": "Find the average grade in the course \"CS 1001\"", "query": "SELECT avg(grade) FROM students WHERE course = \"CS 1001\""}
{"question": "What are the names, weights and heights of all the students in the school?", "query": "SELECT T1.student_first_name,  T1.student_last_name,  T1.student_age,  T1.student_height,  T1.student_weight FROM students AS T1 WHERE T1.student_id  =  (SELECT student_id FROM students WHERE student_name  =  \"John\")"}
{"question": "Find out the list of students with the most number of course credits", "query": "SELECT T1.stu_id,  T1.stu_fname,  T1.stu-lname,  T1.stuname,  T1.stuemail,  T1.stuphone,  T1.stuaddress,  T1.stumajor,  T1.stuyear,  T1.stugraduation,  T1.stuGPA,  T1.stuclass,  T1.stucourse,  T1.stusemester,  T1.stuterm,"}
{"question": "What are the names, phone numbers, and email addresses of the people in the address book?", "query": "SELECT T1.name,  T1.phone_number,  T1.email_address FROM address_book AS T1 WHERE T1.id  =  1"}
{"question": "List all the names of the guests of the party in alphabetical order of their first name", "query": "SELECT name FROM guest WHERE guest_id  IN (SELECT guest_id FROM party) ORDER BY name ASC"}
{"question": "What are the names, and ids of the users who have sent an email to the address \"johanna@pizza", "query": "SELECT T1.user_id,  T1.name,  T1.* FROM users AS T1 WHERE T1.email  =  \"johanna@pizza\""}
{"question": "Show the names and age of all students", "query": "SELECT T1.name,  T1.\"age\" FROM student AS T1"}
{"question": "What is the name and address of the shop with the most number of employees?", "query": "SELECT name,  address FROM shops WHERE count(*)  =  \"the most number of employees\""}
{"question": "(a novel question, about a table) Show the student's name and id", "query": "SELECT T1.name,  T1.id FROM students AS T1 WHERE T1.id  =  \"1\""}
{"question": "What is the name and id of the student who has the highest number of credit cards?", "query": "SELECT T1.id,  T1.name FROM student_credit_card AS T1 WHERE T1.student_id  >  (SELECT T2.student_id FROM student_credit_card AS  T2 WHERE T2.student_id  =  'John')"}
{"question": "(a question about a sql table) Show the information of an account-related issue", "query": "SELECT account_id,  account_name,  account_type,  account_balance,  account_balance_date,  account_balance_date_formatted,  account_balance_date2,  account_balance_date3,  account_balance_date4,  account_balance_date5,  account_balance_date6,  account_balance_date7,  account_balance_date8,  account_balance_date9,  account_balance_date10,  account_balance_date11,  account_balance_date12,  account_"}
{"question": "How many students are there in the school of engineering where the student population is greater than 4000?", "query": "SELECT T1.student_id FROM Student AS T1 JOIN School_of_Engineering AS T2 ON T1.school_id  =  T2.school_id WHERE T2.student_population  >  4000"}
{"question": "What are the names, salaries, and gpa of all employees?", "query": "SELECT T1.firstname,  T1.lastname,  T1.ssn,  T1.gpa,  T1.hiredate FROM employee AS T2 JOIN employee_info AS T3 ON T2.id  =  T3.employeeid WHERE T3.type  =  'employee'"}
{"question": "List the names of students who have a certain degree but are not in any course", "query": "SELECT T1.name FROM student AS T1 JOIN courses AS T2 ON T1.id  =  T2.id WHERE T2.degree  =  \"Bachelor\" AND T2.course_id  =  0"}
{"question": "Find the names of movies with the word \"space\" in the title that have release dates after 1960", "query": "SELECT name FROM movie WHERE name LIKE '%space%' AND release_date > '1960'"}
{"question": "What is the number and type of the different types of cars in the database?", "query": "SELECT T1.type,  T1.name FROM car AS T1 JOIN car_type AS T2 ON T1.type_id  =  T2.type_id GROUP BY T1.type ORDER BY count(*) DESC;"}
{"question": "(a novel question, about a table in the database), after \"", "query": "(the sql query to answer the query)"}
{"question": "List the average age of the students by gender", "query": "SELECT AVG(age) FROM students"}
{"question": "What are the first and last names of the students who have the same last name as me?", "query": "SELECT T1.last_name,  T1.first_name FROM students AS T1 JOIN student_has_same_last_name AS T2 ON T1.last_name  =  T2.last_name"}
{"question": "What is the name and birthday of the student with the most number of friends?", "query": "SELECT T1.first_name,  T1.last_name,  T2.name,  T2.birthday FROM Students AS T1 JOIN Friendships AS T2 ON T1.id  = T2.friend_id WHERE T2.friend  = 'Bob'"}
{"question": "Find the customers who have both New and New orders", "query": "SELECT customer_id,  name,  city,  state,  country,  email,  phone,  credit_card_type,  credit_card_number,  credit_card_exp_date,  credit_card_name,  credit_card_cvv,  credit_card_monthly_payment,  credit_card_yearly_payment,  credit_limit,  credit_limit_type,  credit_limit_status,  credit_limit_start_date,  credit_limit_end_date,  credit_limit2,  credit_limit"}
{"question": "What are the names in ascending order of the number of employees who have name starting with \"W\"?", "query": "SELECT T1.Name FROM employee AS T1 WHERE T1.Name  LIKE 'W%' ORDER BY T1.Name ASC"}
{"question": "Find the number of employees who are under 60", "query": "SELECT count(*) AS count FROM employees WHERE age  <  60"}
{"question": "What are the names, locations and genders of all students?", "query": "SELECT T1.name,  T1.location,  T1.gender FROM student AS T1"}
{"question": "Give the names of the countries with the highest number of cities", "query": "SELECT Country,  COUNT(*) FROM city GROUP BY Country HAVING count(*)  =  1"}
{"question": "What is the minimum and maximum number of days that a student is absent from his/her classes?", "query": "SELECT MIN(absence_date) AS min_absence_date,  MAX(absence_date) AS max_absence_date FROM absence_record"}
{"question": "What is the full name of the employee who was hired in the middle of 2004?", "query": "SELECT full_name FROM employees WHERE hire_date  =  '2004-01-01'"}
{"question": "Find the number of doctors who each university has", "query": "SELECT T1.custid,  T2.univ_id,  T2.name,  T2.city_id,  T2.state_id,  T2.country_id,  T2.zip_code,  T2.city_name,  T2.state_name,  T2.country_name,  T2.zip_name,  T2.city,  T2.state,  T2.country,  T2.zip,  T2.phone,  T2.fax,  T2.email"}
{"question": "What is the name, id, and description of the organization that has the greatest number of employees?", "query": "SELECT T1.id,  T1.name,  T1.description FROM organization AS T1 WHERE T1.employee_count  =  MAX(T2.employee_count)"}
{"question": "Who are the owners of the companies with the name \"New York\", and what are their first names?", "query": "SELECT T1.owner_name,  T1.owner_first_name FROM company AS T1 WHERE T1.company_name  =  \"New York\""}
{"question": "List the names of the actors who have portrayed the title role in a film", "query": "SELECT T1.actor_first_name,  T1.actor_last_name FROM actors AS T1 JOIN films AS T2 ON T1.actor_id  =  T2.actor_id WHERE T2.title  =  \"The title role\""}
{"question": "What are all of the names of the cities in the country where there is a city", "query": "SELECT T1.city FROM city AS T1 WHERE T1.country  =  'United States'"}
{"question": "What is the name and id of the top player who has the highest number of championships?", "query": "SELECT T1.name,  T1.id FROM player AS T1 JOIN championships AS T2 ON T1.id  =  T2.player_id WHERE T2.champion_id  =  (SELECT T3.id FROM player AS T3 WHERE T3.id  =  T1.id AND T3.champion_id  >  T1.id)"}
{"question": "What are the ids and names of the architects who built two bridges?", "query": "SELECT T1.id,  T1.name FROM architects AS T1 JOIN bridge_construction AS T2 ON T1.id  =  T2.architect_id WHERE T2.id  =  1 AND T2.id  =  2"}
{"question": "What is the headcount of the company with the largest sales, but not including the headquarters?", "query": "SELECT T1.company_id,  T1.company_name,  T1.sales,  T1.headcount FROM company AS T1 WHERE T1.sales  >  (SELECT T2.sales FROM company AS T2 WHERE T2.company_id  =  T1.company_id) AND T1.headcount  =  0"}
{"question": "What is the minimum number of seats for a certain course?", "query": "SELECT MIN(seat_count) FROM courses WHERE course_id = 1;"}
{"question": "Find the youngest and oldest students in the class", "query": "SELECT T1.age,  T1.name FROM students AS T1 WHERE T1.age  >  (SELECT min(T2.age) FROM students AS T2 WHERE T2.name  = 'John') AND T1.age  <  (SELECT max(T3.age) FROM students AS T3 WHERE T3.name  = 'John')"}
{"question": "display the name and the number of customers who visited the store", "query": "SELECT T1.name,  T1.customer_count FROM store AS T1 WHERE T1.city  =  \"New York\""}
{"question": "Show the companies with the least amount of turnover", "query": "SELECT T1.company_name,  T2.company_name FROM company AS T1 JOIN company AS T2 ON T1.company_id  =  T2.company_id WHERE T1.turnover  =  T2.turnover"}
{"question": "What are the names and email addresses of all students?", "query": "SELECT student_id,  student_name,  student_email FROM students"}
{"question": "(a novel question, about a same table):", "query": "SELECT T1.column_name FROM table_name AS T1 WHERE T1.column_name = \"value\""}
{"question": "(a question about a sql table) What is the total number of employees in the largest company?", "query": "SELECT T1.total_emp FROM company AS T1 WHERE T1.company_name  =  \"Microsoft\""}
{"question": "What is the name and id of the student who has the highest average grade in the class?", "query": "SELECT T1.name,  T1.id FROM student AS T1 JOIN class AS T2 ON T1.class_id  =  T2._id WHERE T2.grade_average  =  (SELECT AVG(grade) FROM class WHERE class_id  =  T1.class_id)"}
{"question": "What are the names, cities and the IDs of all the cities in North America?", "query": "SELECT city,  city_id FROM cities WHERE country  =  'North America'"}
{"question": "what is the average salary of all employees who are from NY state?", "query": "SELECT AVG(salary) FROM employees WHERE state_province_county = \"New York\""}
{"question": "Find the number of books written by each writer and the average amount of words per book", "query": "SELECT T1.writer,  T1.book_title,  T1.word_count FROM book AS T1 JOIN writer AS T2 ON T1.writer_id  =  T2.writer_id WHERE T2.writer_id  =  '1'"}
{"question": "What is the average grade point for students with the last name Smith", "query": "SELECT AVG(grade_point) FROM student WHERE last_name  =  'Smith'"}
{"question": "What if the customer table has been changed to have a different name?", "query": "SELECT * FROM customer WHERE customer_name  =  \"John\""}
{"question": "What is the name of the company that has the greatest number of branches?", "query": "SELECT T1.company_name FROM branches AS T1 JOIN companies AS T2 ON T1.company_id  =  T2.company_id WHERE T2.company_name  =  \"The Company\""}
{"question": "(the question that corresponds to this task): What are the names of all the students in the university?", "query": "SELECT name FROM student WHERE id  IN (SELECT id FROM student WHERE major = \"Computer Science\")"}
{"question": "What are the names, genders, and ages of each of the children in the family: (The names are the only fields that are present in both the", "query": "SELECT T1.name,  t1.gender,  t1.age FROM child AS T1 WHERE T1.name  =  \"John\""}
{"question": "How many students are in the department of computer science?", "query": "SELECT count(*)  FROM students"}
{"question": "How many distinct countries are there in the world?", "query": "SELECT DISTINCT country FROM country_info"}
{"question": "Find the names of all actors who are friends with the character of the movie \"The Curious Case of Benjamin Button\", and order the result by the number of", "query": "SELECT T1.name FROM actor AS T1 JOIN friend AS T2 ON T1.actor_id  =  T2.[actor_id] WHERE T2.character_name  =  \"The Curious Case of Benjamin Button\""}
{"question": "What is the average number of employees in the companies that are in the state of Delaware?", "query": "SELECT AVG(employee_count) FROM companies WHERE state = \"Delaware\""}
{"question": "What are the names and cities of the students whose total GPA is greater than 2", "query": "SELECT T1.name,  T1.city FROM student AS T1 JOIN student_grades AS T2 ON T1.id  =  T2.student_id WHERE T2.GPA  >  2"}
{"question": "Given:\nquestion (about a sql table): How many distinct countries have a population of more than 5000000?", "query": "SELECT DISTINCE T1.country FROM countries AS T1 JOIN population AS T2 ON T1.country  =  T2.country WHERE T2.population  >  5000000"}
{"question": "What are the names for the two movies that were both nominated for \"Oscar\"", "query": "SELECT DISTINCT movie_name FROM movie WHERE movie_name IN (\"The Shawshank Redemption\", \"The Godfather\")"}
{"question": "What is the name, description and start date of the event with the most delegates?", "query": "SELECT T1.name,  T1.description,  T1.start_date FROM events AS T1 WHERE T1.delegates  >  (SELECT count(*) FROM events AS T2 WHERE T2.delegates  >  T1.delegates)"}
{"question": "How many employees are there in the building with last name \"Wickham\"?", "query": "SELECT T1.employee_id,  T1.first_name,  T1.last_name,  T1.office_id,  T1.phone_number,  T1.email_address,  T1.manager_id,  T1.manager_name,  T1.department_id,  T1.department,  T1.office_name,  T1.building_id,  T1.floor_id,  T1.room_id,  T1.office_phone,  T1.office_fax,"}
{"question": "Find the names of students who have a score of less than 60 in the course \"QM-232\"", "query": "SELECT T1.name FROM student AS T1 JOIN course AS T2 ON T1.id  =  T2.id WHERE T2.course_id  =  \"QM-232\" AND T1.score  <  60"}
{"question": "What is the median salary of all accountants?", "query": "SELECT median(T1.salary) FROM employee AS T1 JOIN department AS T2 ON T1.department_id  =  T2.department_id WHERE T2.department_name  =  \"Accounting\""}
{"question": "What is the number and name of students in the class?", "query": "SELECT T1.student_id,  T1.name FROM student AS T1 JOIN class AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*)"}
{"question": "What is the name of the first person to use the internet to play games?", "query": "SELECT T1.name FROM players AS T1 WHERE T1.first_name  =  \"John\" AND T1.last_name  =  \"Doe\""}
{"question": "What are the first three letters of the name of the movie 'Hunger Games'?", "query": "SELECT T1.name FROM films AS T1 WHERE T1.title  =  \"Hunger Games\""}
{"question": "What is the average age of all the products?", "query": "SELECT AVG(age) FROM products"}
{"question": "What is the name and number of the latest record in the city of Chicago?", "query": "SELECT T1.city_name,  T2.id FROM city AS T1 JOIN city_history AS T2 ON T1.city_id  =  T2.city_id WHERE T2.city_name  =  'Chicago' ORDER BY T2.id DESC LIMIT 1"}
{"question": "Find the name of a customer who bought the most amount of a specific product in any time period", "query": "SELECT name FROM Customer WHERE product_id  =  (SELECT product_id FROM product WHERE price  =  (SELECT max(price) FROM product WHERE product_id  =  \"$product_id\"))"}
{"question": "Show all the countries in China", "query": "SELECT T1.country_code FROM Country_Codes AS T1 JOIN Country_Codes AS T2 ON T1.country_code  =  T2.country_code WHERE T2.country_code  =  \"China\""}
{"question": "How many movies have a description including at least one of the words \"Action\", \"Adventure\", \"Thriller\"?", "query": "SELECT DISTINCT T1.title FROM movie AS T1 WHERE T1.description  LIKE '%Action%' OR T1.description  LIKE 'Adventure' OR T1.description  =  'Thriller'"}
{"question": "What are the dates, places, and names and the average age of the participants of the event?", "query": "SELECT T1.date,  T1.place,  T1.name,  T1.age FROM event AS T1 WHERE T1.date  >  '2008-01-01' AND T1.date  <  '2008-01-01';"}
{"question": "What are the first few names of each student in the class?", "query": "SELECT T1.name FROM student AS T1 JOIN class AS T2 ON T1.student_id  =  T2.student_id WHERE T2.class_id  =  1"}
{"question": "what is the average of the temperatures in the month of April for a specific city?", "query": "SELECT AVG(Temp) FROM weather WHERE city = 'New York' AND month = 'April'"}
{"question": "What are the names, birth-date, and birth-place of all students who took the course CSCI-121?", "query": "SELECT T1.name,  T1.\"birth-date\",  T1.\"birth-place\" FROM student AS T1 WHERE T1.course_code  =  \"CSCI-121\""}
{"question": "Who is the president of a city with the largest population?", "query": "SELECT T1.name,  T1.population FROM cities AS T1 WHERE T1.population  =  (SELECT max(population) FROM cities)"}
{"question": "What are the names in order of priority of the customers with the most purchases?", "query": "SELECT T1.customer_name FROM customer AS T1 WHERE T1.purchase_count  =  (SELECT max(T2.customer_name) FROM customer AS T2)"}
{"question": "(a novel question, about a table, same as the original question in the task)", "query": "(the sql query to answer the query)"}
{"question": "How many employees have certificates", "query": "SELECT T1.employee_id FROM employees AS T1 JOIN certificates AS T2 ON T1.employee_id  =  T2.[employee_id]"}
{"question": "List all the products", "query": "SELECT T1.product_name,  T1.price,  T1.quantity,  T1.quantity_sold,  T1.quantity_on_hand,  T1.quantity_backorder,  T1.quantity_returned,  T1.quantity_canceled,  T1.quantity_refunded,  T1.quantity returned,  T1.quantity_in_stock,  T1.quantity_out_of_stock,  T1.price_per_unit,  T1.discount,  T1.discount"}
{"question": "How many employees are in the company?", "query": "SELECT count(*) AS count FROM employees"}
{"question": "What is the average rating of the restaurant Subway? What is the average rating of the restaurants in the city of New York?", "query": "SELECT avg(rating) FROM restaurant_ratings"}
{"question": "List the names of the cities where the most number of people play tennis", "query": "SELECT city_code,  count(*) FROM tennis_player GROUP BY city_code ORDER BY count(*) DESC;"}
{"question": "What is the average temperature in the city of Moscow in January?", "query": "SELECT AVG(temperature) FROM weather_data WHERE city = \"Moscow\" AND month = \"January\""}
{"question": "What are the students' names which have their first name and last name in the same order?", "query": "SELECT T1.first_name,  T1.last_name FROM students AS T1 WHERE T1.first_name  =  T1.last_name"}
{"question": "What is the number of apples in the basket?", "query": "SELECT count(*) AS c FROM apples"}
{"question": "What is the name and degree of faculty members, in descending order of seniority?", "query": "SELECT T1.first_name,  T1.last_name,  T1.degree FROM faculty AS T1 ORDER BY T1.seniority DESC"}
{"question": "What does the most common code of the most popular products have?", "query": "SELECT T2.code,  count(*) FROM product AS T1 JOIN product_category AS T2 ON T1.Product_ID  =  T2._id WHERE T1.price  >  0 GROUP BY T2.code ORDER BY count(*) DESC"}
{"question": "How many students are currently enrolled in the English department?", "query": "SELECT T1.student_id FROM Student AS T1 JOIN Enrollment_Status AS T2 ON T1.student_id  =  T2.student_id WHERE T2.status  =  \"Enrolled\""}
{"question": "What is the average cost of a hotel room with a view in Tokyo?", "query": "SELECT AVG(room_price) FROM hotel_room WHERE city  =  'Tokyo' AND view  =  'yes'"}
{"question": "What are the names, positions, and phone numbers of all the advisors?", "query": "SELECT T1.name,  T1.position,  T1.phone_number FROM advisor AS T1"}
{"question": "What are the names, gender and country of the authors of the books of the textbook series?", "query": "SELECT name,  gender,  country FROM textbook_authors"}
{"question": "Which colleges are not a parent of any other colleges?", "query": "SELECT College FROM match AS T1 WHERE NOT EXISTS (SELECT T2.College FROM match AS T2 WHERE T2.parent_id = T1.id)"}
{"question": "What is the age, location, and number of students in the classes \"Math\", \"English\", \"History\", and \"Computer science\" of the University of", "query": "SELECT T1.name,  T1.[age],  T1.location,  T1.number_of_students FROM classes AS T1 JOIN students AS T2 ON T1.class_id  =  T2.[class_id]"}
{"question": "(Find all the names of people who have not posted any messages on this site", "query": "SELECT DISTINCT name FROM users WHERE id  =  (SELECT user_id FROM posts WHERE post_type  =  \"question\")"}
{"question": "How many times does a student fail in a single semester?", "query": "SELECT count(*) AS \"count\" FROM student AS T1 JOIN student AS T3 ON T1.id  =  T3.id WHERE T1.id  =  \"1\" AND T3.id  =  \"2\" AND T1.semester  =  \"Fall\" AND T3.semester  =  \"Spring\""}
{"question": "What is the price of the product \"Tequila\" in the country where it is produced?", "query": "SELECT price FROM products WHERE product_name  =  \"Tequila\" AND country_code  =  \"Mexico\""}
{"question": "Find the names of customers and their payment methods", "query": "SELECT customer_id,  customer_name,  customer_address,  customer_city,  customer_state,  customer_zip,  customer_phone,  customer_email,  customer_credit_card,  customer_credit_card_type,  customer_credit_card2,  customer_credit_card3,  customer_credit_card4,  customer_credit_card5,  customer_credit_card6,  customer_credit_card7,  customer_credit_card8,  customer_credit_card9,  customer_credit_card10,"}
{"question": "What is the total capacity of all dorms?", "query": "SELECT T1.capacity FROM dorms AS T1 JOIN dorms_capacity AS T2 ON T1.capacity_id  =  T2.capacity_id WHERE T2.capacity_type  =  \"Dorm\""}
{"question": "The new name of the store is Panda", "query": "SELECT T1.Name FROM store AS T1 JOIN store_name AS T2 ON T1.store_id  =  T2"}
{"question": "What is all the info about employees with prices above the minimum and under 2500? (the title of the question is called \"", "query": "SELECT T1.name,  T2.price_in_dollars,  T3.city_name,  T4.state_code,  T5.zip_code,  T6.phone_number,  T7.email_address,  T8.address_line_1,  T9.address_line_2,  T10.address_city,  T11.address_state,  T12.address_zip,  T13.address_country,  T14.phone_area_code,  T15.phone_number_extension"}
{"question": "Find the names of students who live in a dorm", "query": "SELECT T1.student_name FROM dorm AS T1 JOIN student AS T2 ON T1.dorm_id  =  T2"}
{"question": "(a novel question, about a specific table) Find the names and locations where the maximum number of people work", "query": "SELECT name_first,  name_last,  location_id FROM employee AS T1 JOIN employee_location AS T2 ON T1.employee_id  =  T2.employee_id WHERE T2.location_id  =  (SELECT MAX(location_id) FROM employee_location)"}
{"question": "Find the names of employees who have been promoted in the last year", "query": "SELECT T1.name FROM employees AS T1 JOIN employee_profiles AS T2 ON T1.employee_id  =  T2._id WHERE T2.last_name  =  \"Smith\" AND T2.first_name  =  \"John\" AND T2.last_name  >  \"Smith\""}
{"question": "What are the names, ages, and the types of the patients in the hospital?", "query": "SELECT T1.patient_name,  T1.age,  T1.type FROM patients AS T1"}
{"question": "(Find the number of projects which each scientist (or employee) is working on and scientist's name)", "query": "SELECT T1.name,  T2.project_id FROM scientist AS T1 JOIN project AS T2 ON T1.project_id  =  T2.id WHERE T1.name  =  \"John Smith\""}
{"question": "Find the names of all customers with a minimum of 5,000 total purchases, and a minimum of five purchases in a single year", "query": "SELECT T1.customer_name FROM customer AS T1 JOIN (SELECT T2.customer_id FROM customer AS T2 WHERE T2.total_purchases  >=  5000 AND T2.total_purchas  >  0) AS T3 ON T1.customer_id  =  T3.customer_id"}
{"question": "What is the first letter of the first name of the customers who are not from Ohio?", "query": "SELECT first_name FROM customers WHERE state !=  \"Ohio\""}
{"question": "How many students are there with last name starting with \"A\"?", "query": "SELECT T1.last_name FROM students AS T1 WHERE T1.last_name LIKE \"A%\""}
{"question": "Find the name of all students who live in the city of New Haven, Connecticut", "query": "SELECT T1.fname,  T1.lname,  T1.city,  T1.state_code,  T1.state_name,  T1.zipcode,  T1.dob,  T1.gender,  T1.race,  T1.marital_status,  T1.education_level,  T1.income,  T1.ethnicity,  T1.height,  T1.weight,  T1.blood_type,  T1.eye_color,  T1.hair_color"}
{"question": "The largest value of the index of a table", "query": "SELECT T1.index_value FROM table_name AS T1 WHERE T1.column_name = \"question\""}
{"question": "What is the name, and date of birth of the student who is a citizen of both the United States and Ireland?", "query": "SELECT name,  date_of_birth FROM student WHERE country_id  =  \"US\" AND country_id  =  \"IE\""}
{"question": "List the names of all the customers in alphabetical order", "query": "SELECT T1.Customer_Name FROM Customers AS T1 ORDER BY T1.Customer_Name ASC"}
{"question": "Find the number of students who attended the event \"Cologne\"", "query": "SELECT T1.student_id,  T1.first_name,  T1.last_name,  T1.email,  T1.gender,  T1.major,  T1.year,  T1.country,  T1.city,  T1.state,  T1.zip,  T1.phone,  T1.major_code,  T1.major_name,  T1.major_description,  T1.major_image,  T1.major_id,  T1.major_type,  T"}
{"question": "How many cars are there in the city that have a damage value of less than 5%?", "query": "SELECT car_id,  city_id,  damage_value FROM cars WHERE damage_value  <  0.05"}
{"question": "Find the maximum number of miles in the trip with the highest distance", "query": "SELECT T1.distance FROM trip AS T1 JOIN trip_leg AS T2 ON T1.trip_id  =  T2.trip_id JOIN trip_leg AS T3 ON T2.trip_id  =  'T3' WHERE T3.distance  =  (SELECT MAX(T4.distance) FROM trip_leg AS T4 WHERE T4.trip_id  =  't3')"}
{"question": "What is the first name of the man in the photo?", "query": "SELECT T1.first_name FROM Person AS T1 WHERE T1.name  = 'Bob'"}
{"question": "What are the number of students in Tsinghua University?", "query": "SELECT count(*) AS \"Tsinghua University\" FROM student"}
{"question": "(a novel question, about a general problem, like \"What is the name of the largest mountain in Europe?\")", "query": "SELECT T1.name FROM mountain AS T1 WHERE T1.height > (SELECT MAX(T2.height) FROM mountain AS T2)"}
{"question": "What are the names, email addresses and the number of the products?", "query": "SELECT T1.product_name,  T1.product_id,  T1.product_price,  T1.product_quantity,  T1.product_image,  T1.product_description,  T1.product_type,  T1.product_category,  T1.product_status,  T1.product_date,  T1.product_time,  T1.product_location,  T1.product_link,  T1.product_url,  T1.product_phone,  T1.product_fax,"}
{"question": "What are the names (first name, last name) of the players who have a score greater than 743?", "query": "SELECT T1.first_name,  T1.last_name FROM player AS T1 WHERE score  >  743"}
{"question": "What is the last name of the speaker with first name \"Aimee\"?", "query": "SELECT T1.lastname FROM speaker AS T1 JOIN speaker_info AS T2 ON T1.speaker_id  =  T2.[speaker_id] WHERE T2.firstname  LIKE 'Aimee'"}
{"question": "what is the name of the employee with the most number of hours worked?", "query": "SELECT T1.name FROM employees AS T1 JOIN hours_worked AS T2 ON T1.emp_id  =  T2.emp_id WHERE T2.hours  >  ( SELECT max(hours) FROM employees )"}
{"question": "What is the name of an employee who has the most complaints?", "query": "SELECT T1.name FROM employees AS T1 JOIN complaints AS T2 ON T1.employee_id  =  T2.\"employee_id\" GROUP BY T1.name ORDER BY count(*) DESC"}
{"question": "Find the number of airports with the maximum number of flights (a) with the highest number of passengers (b) with the most number of passengers per flight (", "query": "SELECT a.airport_id,  a.airport_name,  a.airport_code,  a.city_id,  a.city_name,  a.country_id,  a.country_name,  a.country,  a.country_code,  a.country_code_alpha,  a.country_code2,  a.country_code3,  a.country_code4,  a.country_code5,  a.country_code6,  a.country_code7,  a.country_code8"}
{"question": "What is the number of students who have at least 5 courses?", "query": "SELECT COUNT(*) FROM student_course_enrolment WHERE student_id  =  '1' AND course_id  =  '1';"}
{"question": "what are the names of professors and the dates of elections they participated?", "query": "SELECT T1.first_name,  T1.last_name,  T1.email,  T1.phone,  T1.birth_date,  T1.gender,  T1.party,  T1.election_date,  T1.election_year,  T1.election_result,  T1.election_votes,  T1.election_percentage,  T1.election_party,  T1.electioneering_date,  T1.office_start_date,  T1.birth_place,  T"}
{"question": "How many papers did \"Atsushi Ohori' have published?", "query": "SELECT T1.title FROM article AS T1 JOIN author AS T2 ON T1.author_id  =  T2.id WHERE T2.name  =  \"Atsushi Ohori\""}
{"question": "What are all the names of the people that have a first name \"Katsuhide\"?", "query": "SELECT T1.firstname FROM people AS T1 WHERE T1.firstname  =  \"Katsuhide\""}
{"question": "The average number of seconds to open a tab in your web browser", "query": "SELECT AVG(time_taken) FROM (SELECT time_taken FROM web_browser_open_time) AS T1"}
{"question": "Give me a name of the institution that is the author of the book \"What the Dog Did\"", "query": "SELECT T1.Name FROM author AS T1 JOIN book AS T2 ON T1.book_id  =  T2._id WHERE T2.title  =  \"What the Dog Did\""}
{"question": "What are the names in the database that have a country id of \"MEX\"?", "query": "SELECT name FROM track"}
{"question": "What is the first and last name of the manager who is also a faculty member?", "query": "SELECT T1.FirstName,  T1.LastName,  T1.Manager FROM Manager AS T1 JOIN Faculty AS T2 ON T1.Manager  =  T2.Manager WHERE T1.FirstName  =  \"JOHN\" AND T1.LastName  =  \"SMITH\""}
{"question": "Find the names of those teams that have no match season record, ordered by the number of championships", "query": "SELECT name FROM team WHERE id  =  0 ORDER BY count(*) DESC"}
{"question": "Find the names of all the students who have taken more than one course", "query": "SELECT T1.student_id,  T1.name FROM students AS T1 JOIN student_course AS T2 ON T1.id  =  T2.id WHERE T2.course_id  =  (SELECT T3.course_id FROM courses AS T3 WHERE T3.name  =  \"Math\") GROUP BY T1.name HAVING count(*)  =  2"}
{"question": "Find the first names and last names of all the authors who have a paper with title containing the word 'Functional'", "query": "SELECT FirstName, LastName FROM Authors WHERE paper_title  LIKE  '%Functional%'"}
{"question": "Find the names of cities with capital \"N'Djamena\", capital \"Addis Ababa\", capital \"Iquitos\", capital \"Brasilia", "query": "SELECT T1.city_name FROM city AS T1 WHERE T1.capital  =  'N'Djamena' OR T1.capital  =  \"Addis Ababa\" OR T1.capital  = \"Iquitos\" OR T1.capital  ==  \"Brasilia\""}
{"question": "Find the names of all the students who took psychology courses last year", "query": "SELECT name FROM student WHERE course_id  =  \"Psychology\""}
{"question": "What is the maximum number of songs on the album titled \"Cowboy Bop\"?", "query": "SELECT T1.title,  T1.artist_name,  T1.release_date,  T1.genre_name,  T1.price,  T1.duration,  T1.disc_number,  T1.track_number,  T1.year_released,  T1.country_of_origin,  T1.artist,  T1.album_name,  T1.artist2_name,  T1.label_name,  T1.record_company_name,  T1.publisher_"}
{"question": "Find the names and telephone numbers of the employees who have the surnames \"Brown\" and \"Jones\"", "query": "SELECT T1.firstname,  T1.lastname,  T1.phone FROM employee AS T1 WHERE T1.surname  =  \"Brown\" AND T1.surname  = \"Jones\""}
{"question": "What are the names on the right, in ascending order, of all the students with major ID '1115', if no two students have the same first name", "query": "SELECT T1.first_name,  T1.last_name FROM student AS T1 WHERE T1.major_id  =  1115"}
{"question": "What do you want to call a database named \"mydatabase\" and a table named \"mytable\" in it?", "query": "SELECT name FROM database_name WHERE name = \"mydatabase\" AND name = \"mytable\""}
{"question": "Find the different names of the colleges involved", "query": "SELECT College FROM match"}
{"question": "Find all the people who have been a member of the same country as the person named \"Mia\" for at least a year", "query": "SELECT T1.name,  T1.country_id FROM people AS T1 JOIN people_country AS T2 ON T1.person_id  =  T2.[person_id] WHERE T1.name  =  \"Mia\" AND T2.country_id  =  T1.country_id AND T1.country_id  =  (SELECT country_id FROM countries WHERE country_name  =  \"United States\")"}
{"question": "Find the name of the department of the employees who have worked for more than 10 years, and the department name of the employees who have worked for less than 10", "query": "SELECT T2.department_name,  T1.name FROM employee AS T1 JOIN department AS T1 ON T1.id  =  T1.department_id WHERE T1.employee_id  =  T1 AND T1.years  >  10"}
{"question": "What are the names, location, and type of cities in which the company has a branch?", "query": "SELECT T1.city_name,  T2.city_id,  T2.city_type FROM city AS T1 JOIN branch AS T2 ON T1.city_id  =  T2._id WHERE T1.name  = \"San Francisco\""}
{"question": "What is the last names of all the people who belong to the club 'Theory'?", "query": "SELECT T1.last_name FROM members AS T1 JOIN clubs AS T2 ON T1.club_id  =  T2.club_id WHERE T2.name  =  \"Theory\""}
{"question": "What was the average age of the customers who bought the least number of products in 1996?", "query": "SELECT AVG(age) FROM customers WHERE customer_id  =  (SELECT MIN(customer_id) FROM customers)"}
{"question": "Find the name of the customer whose address has the name \"Meagan\"", "query": "SELECT customer_details_name FROM customer WHERE customer_details  =  'Meagan'"}
{"question": "Which city is the largest in the world?", "query": "SELECT T1.name FROM city AS T1 WHERE T1.population  >  (SELECT T2.name FROM city AS T2 WHERE T2.name  =  \"New York\")"}
{"question": "What are the names, genders, and locations of the architects who built the Grand Canyon and the Bay Bridge?", "query": "SELECT name,  gender,  location FROM architect WHERE name  =  \"John Smith\" AND location  =  \"San Francisco\" AND gender  =  \"male\""}
{"question": "What are the names and id of the customers who have purchased both products Latitude and Americano?", "query": "SELECT T1.product_id,  T1.name_first,  \"T1.name_last\" FROM customer AS T1 JOIN product AS T2 ON T1.customer_id  =  T2.\"T1.customer_id\" AND T2.product_id  =  \"T1.product_id\" GROUP BY T1.product_id ORDER BY count(*)"}
{"question": "What are the names, ids, ages and hometowns of the five players who scored over 100 points in each of the following years: 2004, 2005, and", "query": "SELECT T1.name,  T1.[id],  T1.age,  T1.hometown FROM player AS T1 WHERE T1.year  =  2004 OR T1.year  =  2005 OR T1.year  ="}
{"question": "Find the number of students who have neither a GPA higher than 3", "query": "SELECT count(*)  FROM students WHERE GPA  <  3"}
{"question": "Find the last name of the scientists who have published at least one paper in \"Science\"", "query": "SELECT T1.last_name FROM scientist AS T1 JOIN paper AS T2 ON T1.id  =  T2.scientist_id WHERE T2.journal_name  =  'Science'"}
{"question": "What are the names and maximum amount of products on sale in the department store?", "query": "SELECT T1.product_name,  T2.price,  T3.quantity FROM products AS T1 JOIN products_in_store AS T2 ON T1.product_id  =  T2.product_id JOIN sales AS T3 ON T2.product_id  =  t3.product_id WHERE T1.category_id  =  'clothing' AND T2.store_id  =  '1' AND T3.price  >  0"}
{"question": "Find the id of the customer with more than 2000 outstanding balance?", "query": "SELECT customer_id FROM customer WHERE outstanding_balance  >  2000"}
{"question": "What is the average age of the students at this school?", "query": "SELECT AVG(age) FROM students"}
{"question": "What are the names, locations, and phone numbers of all the cities", "query": "SELECT T1.city_name,  T1.city_location,  T1.phone_number FROM city AS T1"}
{"question": "The country that has the most universities, in order of the number of students, is", "query": "SELECT T1.country,  T2.student_count FROM country AS T1 JOIN university AS T2 ON T1.country_id  =  T2.country_id ORDER BY T2.student_count DESC"}
{"question": "What is the name(s) of the organization(s) that have the largest number of employees?", "query": "SELECT name FROM organization WHERE employee_count  =  \"max\""}
{"question": "What is the name and id of the institution that has the highest number of students?", "query": "SELECT T1.student_name,  T1.student_id FROM student AS T1 WHERE T1.student_name  =  \"University of California, Berkeley\""}
{"question": "What is the name in the city of a company that makes computers?", "query": "SELECT name FROM city WHERE city_name  =  \"London\" AND company_name  =  \"Apple\""}
{"question": "What is the average salary of the employees in New York", "query": "SELECT AVG(salary) FROM employees WHERE city  =  \"New York\""}
{"question": "Find the name of customer who has the highest average purchase quantity", "query": "SELECT T1.name FROM customer AS T1 JOIN order AS T2 ON T1.customer_id  =  (SELECT T3.customer_id FROM customer AS T3 WHERE T3.name  = 'John Smith')  AND T2.quantity  =  (SELECT T4.quantity FROM order AS T4 WHERE T4.customer_id  =  'T1')"}
{"question": "(a novel question, about a table): List all customers with a balance of more than 10000", "query": "SELECT T1.customer_id,  T2.customer_name,  T2.customer_address_id,  T2.payment_method,  T2.credit_limit,  T2.credit_score,  T2.credit_status,  T2.credit_balance,  T2.credit_available,  T2.credit_used,  T2.credit_days_left,  T2.credit_last_payment_date,  T2.credit_next_payment_date,  T1.customer_id FROM customer AS T1"}
{"question": "How many students have a first name that contains the word \"son\"", "query": "SELECT count(*) AS \"count\" FROM students WHERE firstname LIKE '%son%'"}
{"question": "What are the first names of all the authors?", "query": "SELECT T1.First_Name FROM Authors AS T1"}
{"question": "(a novel question, about a question about a table) Find the first names of all the students who have taken a course in the Spring of 2003", "query": "SELECT DISTINCT fname FROM student WHERE stu_year  =  2003 AND stu_semester  =  1"}
{"question": "for each university, find its name and the number of students", "query": "SELECT T1.university_name,  T2.num_students FROM university AS T1 JOIN students AS T2 ON T1.university_id  =  T2.university_id"}
{"question": "Answer the question \"What is the total number of employees?\"", "query": "SELECT count(*)  FROM employees"}
{"question": "What is the name and id of employees with surnames that begins with \"G\" in the column \"Employee Name\"?", "query": "SELECT T1.employee_name,  T1.employee_id FROM employee AS T1 WHERE T1.employee_name LIKE 'G%'"}
{"question": "What is the name of the movie with the highest gross?", "query": "SELECT T2.title FROM Movie AS T1 JOIN T2.year  AS T2_year  ON T1.movie_id  =  T2_year.movie_id WHERE T2_year.year  =  \"2016\""}
{"question": "(a question about a sql table) : Find the names of students with an average grade of at least 80%", "query": "SELECT T1.name FROM students AS T1 JOIN grades AS T2 ON T1.id  =  T2.id WHERE T2.grade  >=  80"}
{"question": "Show the name and id of the customer who had a large number of loans", "query": "SELECT T1.name,  T1.id FROM customer AS T1 JOIN loan AS T2 ON T1.id  =  T2.customer_id WHERE T2.amount  >  1000"}
{"question": "What are the names that the authors have in common with the author \"Amal\"? List their first names", "query": "SELECT T1.first_name FROM authors AS T1 JOIN authors AS T2 ON T1.id  = T2.id WHERE T1.name  = \"Amal\""}
{"question": "What are the names and the average price of the food that the most customers are buying?", "query": "SELECT T1.food_name,  T1.food_price FROM food_prices AS T1 JOIN food_sales AS T2 ON T1.food_id  =  T2._food_id WHERE T2.customer_id  =  (SELECT customer_id FROM customers WHERE customer_name  =  \"John Smith\") GROUP BY T1.food_name"}
{"question": "What is the average number of letters per word in your vocabulary?", "query": "SELECT AVG(LENGTH(word)) FROM words"}
{"question": "Find the names of all students who are on scholarship and have major 450", "query": "SELECT T1.fname,  T1.lname,  T1.major,  T1.scholarship_id FROM student AS T1 JOIN scholarship AS T2 ON T1.student_id  =  T2._id WHERE T2.major  =  450"}
{"question": "[a question about a sql table], after \"", "query": "[the sql query to answer the question], after \""}
{"question": "List the names of the companies who are not part of the same group of companies", "query": "SELECT DISTINCT company_name FROM company_group_members WHERE company_id NOT IN (SELECT company_id FROM company_group_members)"}
{"question": "Retrieve the information about the employees and managers of the company", "query": "SELECT T1.employee_id,  T1.firstname,  T2.manager_id,  T2.firstname FROM employees AS T1 JOIN employees AS T2 ON T1.manager_id  =  T2.manager_id"}
{"question": "What are the names that are not associated with any course, of the students in the table'students'", "query": "SELECT T1.name FROM students AS T1 WHERE NOT EXISTS (SELECT T2.name FROM courses AS T2 WHERE T2.course_id = T1.course_id)"}
{"question": "What is the average number of employees for each department?", "query": "SELECT T1.department_id,  T1.employee_count FROM departments AS T1 GROUP BY T1.department_id ORDER BY T1.employee_count DESC"}
{"question": "What is the name and age of the person in the family named \"Smith\"?", "query": "SELECT T1.first_name,  T1.last_name,  T1.age FROM Person AS T1 JOIN PersonFamily AS T2 ON T1.person_id  =  T2.person_id WHERE T2.family_name  =  \"Smith\""}
{"question": "What is the capital of Japan?", "query": "SELECT capital FROM Country WHERE capital  =  \"Tokyo\""}
{"question": "What are the names, job titles, and locations of all people on the team with name \"Rylee Goldner\"?", "query": "SELECT T1.name,  T1.job_title,  T1.location FROM people AS T1 WHERE T1.name  =  \"Rylee Goldner\""}
{"question": "What are the ids aand names of all the departments in the company?", "query": "SELECT T1.dept_id,  T1.dept_name FROM department AS T1"}
{"question": "What is the minimum and maximum population of each city?", "query": "SELECT MIN(population) AS Min_Population,  MAX(population) AS Max_Population FROM city"}
{"question": "What is the name, id and phone number of the store that has the most products?", "query": "SELECT name,  id,  phone_number FROM store WHERE id  =  (SELECT max(id) FROM store)"}
{"question": "Give the name of the student who is the youngest in the class", "query": "SELECT T1.student_id,  T1.age FROM student AS T1 WHERE T1.age  =  (SELECT MIN(age) FROM student)"}
{"question": "(a question about a sql table): List the names and id of the students", "query": "SELECT T1.name,  T1.\"id\" FROM student AS T1"}
{"question": "What is the date when the company started to have profits?", "query": "SELECT T1.date_of_profit FROM company AS T1 WHERE T1.company_name  =  \"Company A\""}
{"question": "(a question about a sql table) Find the number of accounts that has a balance of at least 10,000", "query": "SELECT count(*) from account WHERE balance >= 10000"}
{"question": "What are the names and average age of all the students who are enrolled in the university", "query": "SELECT T1.student_name,  T2.student_age FROM student AS T1 JOIN student_course_enrolment AS T2 ON T2.student_id  =  'T1.student_id'"}
{"question": "What is the name and id of the customer who bought the most number of books?", "query": "SELECT customer_id,  name FROM customer WHERE total_purchases  =  (SELECT max(total_purchases) FROM customer)"}
{"question": "What are the minimum and maximum prices of all products for the store with name \"Chestnut's\"?", "query": "SELECT MIN(price),  MAX(price) FROM product WHERE store_name  =  \"Chestnut's\""}
{"question": "How many months have passed since the last earthquake?", "query": "SELECT COUNT(*) AS \"count\" FROM earthquake_history WHERE MONTH(datetime)  =  \"count\""}
{"question": "What are the names on the list of universities located in Texas?", "query": "SELECT T1.name FROM university AS T1 WHERE T1.state = \"TX\""}
{"question": "What are the names, id, and salaries of employees in the city of London?", "query": "SELECT name, id, salary FROM employees WHERE city_id = \"London\""}
{"question": "What are the names, and the prices, and the countries of the products that are in the grocery shopping cart?", "query": "SELECT name,  name_first,  name_last,  price,  country_id FROM products WHERE product_id  =  (SELECT product_id FROM cart WHERE cart_id =  (SELECT cart_id FROM cart WHERE cart_date =  (SELECT date FROM date_of_purchase)) LIMIT 1);"}
{"question": "\"What is the average price for a product with id=1,2,3,4,5?\"", "query": "SELECT AVG(price) FROM product WHERE id  =  1,2,3,4 OR 5"}
{"question": "What is the name and total number of employees from which the names of the first and last names are taken?", "query": "SELECT T1.name,  T1.total_employees FROM employees AS T1 WHERE T1.name  =  'John' OR T1.name  =  \"John Smith\" OR T1.name  = \"John Doe\" OR T1.name  LIKE \"%John%\" OR T1.name  LIK \"John%\";"}
{"question": "How many members of Bootup Baltimore are younger than 18?", "query": "SELECT count(*)  FROM members AS T1 WHERE age  <  18"}
{"question": "What is the company code for the company that has the highest revenue?", "query": "SELECT T1.company_code FROM company AS T1 WHERE T1.revenue  =  (SELECT T2.revenue FROM company AS T2 WHERE T2.company_id  =  T1.company_id)"}
{"question": "What is the average temperature of each state in the USA?", "query": "SELECT state_name,  AVG(temperature) FROM weather_station GROUP BY state_name"}
{"question": "What are the names (and ratings) of all the films that are rated 3 stars or more?", "query": "SELECT T1.title FROM film AS T2 JOIN film_rating AS T3  ON T2.film_id  =  T3.film_id WHERE T3.rating  >=  3"}
{"question": "Find the average speed of all users", "query": "SELECT AVG(speed) FROM user"}
{"question": "What are the names, id, and positions of all members in the department with id 33?", "query": "SELECT T1.name,  T1.id,  T1.position FROM department AS T1 WHERE T1.id  =  33"}
{"question": "What are the names and ids of all students who live in the most expensive apartment?", "query": "SELECT T1.student_name,  T1.student_id FROM student AS T1 JOIN apartment AS T2 ON T1.student_id  =  T2.student_id WHERE T2.apartment_id  =  (SELECT MAX(apartment_id) FROM apartment);"}
{"question": "Find the names of the employees who are from the same country", "query": "SELECT T1.employee_name FROM employee AS T1 JOIN employee_country AS T2 ON T1.employee_id  =  T2.employee_id WHERE T2.country_code  =  \"USA\""}
{"question": "Find the id and the first name of the student that has been awarded the most number of medals?", "query": "SELECT T1.student_id,  T1.first_name FROM student AS T1 JOIN medals AS T2 ON T1.student_id  =  T2.[student_id] WHERE T2.medal_id  =  ( SELECT max(medal_id) FROM medals )"}
{"question": "What are the names and ages of students in the database?", "query": "SELECT T1.student_id,  T1.student_first_name,  T3.age FROM students AS T1 JOIN students AS T2 ON T1.id  =  T2.id JOIN students AS T3 ON T1.id  = T3.id"}
{"question": "How many students are there in the class of 2004?", "query": "SELECT count(*) AS count FROM student"}
{"question": "What are the first three names and last name of the employees with the largest salary?", "query": "SELECT T1.first_name,  T1.last_name,  T2.salary FROM employees AS T1 JOIN employees AS T2 ON T1.id  = T2.id WHERE T1.salary  >  T2.salary ORDER BY T1.salary DESC LIMIT 3"}
{"question": "What is the id, name, and gender of the student who has the most exams taken?", "query": "SELECT count(*) AS total_exams, student_id, name, gender FROM student_exam_history WHERE exam_date  =  (SELECT max(exam_date) FROM student_exam_history) GROUP BY student_id, name, gender"}
{"question": "What are the first names of all the people in the database?", "query": "SELECT first_name FROM people"}
{"question": "What is the total amount of the sales of all products with an amount less than 600? Compare the results with the results of the last query", "query": "SELECT T1.product_id,  T1.amount FROM product AS T1 WHERE T1.amount  <  600"}
{"question": "Show the first and last name of the person who has the most friends", "query": "SELECT T1.first_name,  T1.last_name FROM friends AS T1 WHERE T1.first_name  =  'Alice' OR T1.last_name  =  'Alison'"}
{"question": "What is the position on the board?", "query": "SELECT T1.position FROM board AS T1 WHERE T1.position  =  \"X\""}
{"question": "Find the cities which are not in New York State", "query": "SELECT city_id FROM city_info WHERE city_id NOT IN (SELECT city_id FROM state_info)"}
{"question": "What is the average temperature of the United States in the year 2050?", "query": "SELECT AVG(T1.temp) FROM Weather AS T1 WHERE T1.year  =  2050"}
{"question": "What are the ages and their names of all customers who have a credit card?", "query": "SELECT T1.age,  T1.name FROM customers AS T1 WHERE T1.credit_card_id  =  (SELECT T2.credit_card_id FROM customers AS T2 WHERE T2.customer_id  =  (SELECT customer_id FROM customers WHERE customer_name  =  \"John Smith\" AND customer_address  =  \"123 Main Street\" AND customer_city  =  \"New York\" AND customer_state  =  \"NY\" AND customer_zip  =  \"12345\" AND customer_country  =  \"USA\" AND customer_phone"}
{"question": "What is the name for the country where the capital is not the capital?", "query": "SELECT name FROM Country WHERE capital !=  \"The Hague\""}
{"question": "How many students have an average age of 18?", "query": "SELECT T1.student_id,  T2.age FROM student_record AS T1 JOIN student AS T2 ON T1.id  = T2.id WHERE T2.age  =  '18'"}
{"question": "What are the best songs of the band \"Muse\"?", "query": "SELECT T1.song_name FROM song_list AS T1 JOIN band_members AS T2 ON T1.band_id  =  T2._id WHERE T2.band_name  =  \"Muse\""}
{"question": "How many employees are there in the department of software engineering?", "query": "SELECT count(*) from employees WHERE department_code  =  \"Software Engineering\""}
{"question": "(a question about a sql table) Find the names of all employees who are in the sales department and not in the HR department", "query": "SELECT T1.firstname,  T1.lastname FROM employee AS T1 JOIN department AS T2 ON T1.department_id  =  T2.department_id WHERE T2.department_name  =  \"Sales\" AND T2.department_id  = T1.department_id"}
{"question": "Find the names of students from the group of students with highest scores", "query": "SELECT T1.name FROM students AS T1 WHERE T1.score  >  (SELECT T2.score FROM students AS T2 WHERE T2.student_id  =  t1.student_id)"}
{"question": "What are all the movies rated as PG-13? List the titles", "query": "SELECT name FROM movie WHERE movie_rating  =  \"PG-13\""}
{"question": "Find the first name, last name, and birth date of each of these people", "query": "SELECT T1.first_name,  T1.last_name,  T1.birth_date FROM people AS T1 WHERE T1.first_name  =  \"John\" AND T1.last_name  =  \"Smith\""}
{"question": "What are the names and addresses of all the cities that have had at least one earthquake in the past year?", "query": "SELECT city FROM earthquakes WHERE year(date)  =  '2017'"}
{"question": "What are the names, locations, and years of birth of each athlete?", "query": "SELECT T1.name,  T1.city,  T1.year_of_birth FROM athlete AS T1 WHERE T1.name  =  \"John Smith\""}
{"question": "Find the names of department stores in Boston that have a sales person with the name 'Linda'", "query": "SELECT T1.store_name,  T2.name FROM store_manager AS T1 JOIN store_manager_employee AS T2 ON T1.manager_id  =  T2.id WHERE T2.name  = 'Linda'"}
{"question": "What is the name of the band that has the most number of albums sold in the UK?", "query": "SELECT name FROM band WHERE count(*)  =  \"the number of albums sold in the UK\""}
{"question": "What are the numbers of students enrolled in schools with at most 2 students per class?", "query": "SELECT T1.student_id FROM Student_Schools AS T1 JOIN Student_Schools AS T2 ON T1.student_id  =  T2.student_id WHERE T2.class_size  =  \"2\""}
{"question": "(Find the names of all directors who have 3 or more movies in the same year)", "query": "SELECT DISTINCT T1.name FROM director AS T1 JOIN movie AS T2 ON T1.director_id  =  T2.director_id JOIN movie AS T3 ON T3.director_id  =  (SELECT T4.director_id FROM movie AS T4 WHERE T4.year  =  T3.year AND T4.movie_id  =  T2)"}
{"question": "Find the number of students in the class", "query": "SELECT count(*) AS \"count\" FROM students WHERE class_id = 1"}
{"question": "What are the names, addresses, and genders of all students who have a master's degree?", "query": "SELECT T1.name,  T1.address,  T1.gender FROM students AS T1 WHERE T1.degree  =  \"Master\""}
{"question": "List all the names of all the employees who belong to a particular team", "query": "SELECT T1.employee_id,  T1.name_first,  (SELECT name_last FROM employee AS T2 WHERE T2.employee_id  =  T1.employee_id) FROM employee AS T1 WHERE T1.team_id  =  'T1'"}
{"question": "What are the names and ids of the passengers in the first flight that left at 8am", "query": "SELECT T1.name,  T1.* FROM passenger AS T1 WHERE T1.flight_id  =  1 AND T1.arrival_time  =  \"8:00\""}
{"question": "Find the names of all the people who have been to the same country more than once", "query": "SELECT name FROM Person HAVING COUNT(*) > 1"}
{"question": "How many salesmen are there in store 1?", "query": "SELECT count(*) AS \"count\" FROM salesman WHERE store_id  =  1"}
{"question": "What is the city of the customer who moved in 2001?", "query": "SELECT city FROM customer WHERE move_date  =  2001"}
{"question": "What is the last name of the student with the highest amount of points?", "query": "SELECT T1.last_name FROM students AS T1 JOIN points AS T2 ON T1.student_id  =  T2.\"student_id\" WHERE T2.points  =  \"max(points)\""}
{"question": "What is the average price of cars with a capacity of 5 or more?", "query": "SELECT AVG(price) FROM car_info WHERE capacity  =  '5'"}
{"question": "what are the names of all of bob's friends", "query": "SELECT T1.name FROM friends AS T1 WHERE T1.id  =  \"bob\""}
{"question": "What are the names, birth year, and sex of the students at the school with id 1234?", "query": "SELECT T1.name,  T1.birth_year,  T1.sex FROM student AS T1 WHERE T1.id  =  1234"}
{"question": "What are the names, degrees and id's of the professors who teach at least one course in 'Web Development'?", "query": "SELECT T1.name,  T1.\"degree\",  T1.id FROM professor AS T1 JOIN course AS T2 ON T1.professor_id  =  T2.\"professor_id\" WHERE T2.name  =  \"Web Development\""}
{"question": "Find the minimum, average, maximum order number of all invoices", "query": "SELECT MIN(invoice_number) FROM invoices"}
{"question": "Which countries have a population of more than 350 million people?", "query": "SELECT T1.country_name,  T1.population FROM country AS T1 WHERE T1.population  >  350"}
{"question": "What are the first and last names of the band members?", "query": "SELECT T1.first_name,  T1.last_name FROM band_members AS T1 WHERE T1.band_id  =  1"}
{"question": "Return the id of the store with highest revenue", "query": "SELECT T1.store_id FROM Store_Sales AS T1 JOIN Store_Customers AS T2 ON T1.store_id  =  T2.store_id WHERE T2.revenue  =  (SELECT max(T3.revenue) FROM Store_Sales AS T3 JOIN Store_Customers AS T4 ON T3.store_id  ="}
{"question": "What are the names, addresses and id numbers of all products with the name of \"Tiffany\"", "query": "SELECT T1.product_name,  T1.address,  T1.id FROM product AS T1 WHERE T1.product_name  =  \"Tiffany\""}
{"question": "How many states does the student named \"Eric Tai\", whose first name is \"Eric\", have?", "query": "SELECT T1.state FROM student AS T1 WHERE T1.first_name  =  \"Eric\" AND T1.last_name  =  \"Tai\""}
{"question": "The numbers in the table are the maximum scores of the team Boston", "query": "SELECT T1.name FROM team AS T1 JOIN score AS T2 ON T1.team_id  =  T2.team_id WHERE T2.score  =  \"max\""}
{"question": "What name was given to the new product?", "query": "SELECT name FROM product WHERE name = \"new product\""}
{"question": "What are the names and IDs of all customers whose balance is above $500,000?", "query": "SELECT T1.name,  T1.\"id\" FROM customer AS T1 WHERE T1.balance  >  500000;"}
{"question": "Find the maximum, average and minimum age of customers", "query": "SELECT MAX(age),  AVG(age),  MIN(age) FROM customers"}
{"question": "How many times did people eat at the restaurant \"Yoshinoya\"?", "query": "SELECT count(*) AS cnt FROM diner_orders JOIN diner_orders_details ON diner_orders.id  =  diner_orders_details.diner_order_id WHERE diner_orders.restaurant_id  =  \"Yoshinoya\""}
{"question": "How many branches does the bank in the city of New York have?", "query": "SELECT count(*) from branches"}
{"question": "What are the names and ages of the students who failed the most math tests?", "query": "SELECT T1.student_id,  T1.student_name,  T1.student_age FROM students AS T1 JOIN student_test_results AS T2 ON T1.student_id  =  T2.[student_id] WHERE T2.test_score  <  50"}
{"question": "What is the name and number of the customer who has the most accounts on the book?", "query": "SELECT T1.customer_id,  T1.account_count FROM customer AS T1 WHERE T1.customer_id  =  (SELECT T2.customer_id FROM customer AS T2 WHERE T2.customer_id  =  T1.customer_id AND T2.account_count  >  T1.account_count)"}
{"question": "What are the average age of students in the university?", "query": "SELECT AVG(age) FROM student"}
{"question": "What is the average number of customers in all hospitals in Alabama?", "query": "SELECT avg(count(*)),  T1.state_name FROM hospitals AS T1 JOIN customers AS T2 ON T1.hospital_id  =  T2.\"hospital_id\" GROUP BY T1.state_name"}
{"question": "What are the names in first-name-last-name format of the customers in the state of Texas?", "query": "SELECT name_first,  name_last FROM customers WHERE state = 'Texas'"}
{"question": "What are the names and ids of the students in the course ACCT-211?", "query": "SELECT T1.name,  T1._id FROM student AS T1 WHERE T1.course_code  =  \"ACCT-211\""}
{"question": "What is the name and address of the best-selling product of the company \"Dell Computers\"?", "query": "SELECT T1.name,  T1.address FROM products AS T1 WHERE T1.name  =  \"Dell Computers\""}
{"question": "What is the name/ID of the employee who made the first call?", "query": "SELECT T1.name,  T1.id FROM employee AS T1 JOIN call AS T2 ON T1.id  =  T2.employee_id WHERE T2.call_date  =  '01/01/2001'"}
{"question": "What was the last name of the customer who made a purchase of a book in the bookstore?", "query": "SELECT customer_name, last_name FROM customer_orders WHERE customer_id = 1"}
{"question": "Find the name of branch that has the least customers and the number of transactions", "query": "SELECT T1.branch_id,  T1.customer_count,  T1.transactions FROM branch AS T1 WHERE T1.customer_count  <  T2.customer_count AND T1.transactions  >  T2.transactions ORDER BY T1.customer_count DESC LIMIT 1"}
{"question": "What are the people with the most number of children?", "query": "SELECT T1.id,  T1.first_name,  'children' AS T1.children FROM people AS T1 JOIN people_children AS T2 ON T1.people_id  =  T2.[people_id] GROUP BY T1.id ORDER by count(*) DESC"}
{"question": "List all the documents with the status \"To be sent to the author\" and the name of the author", "query": "SELECT T1.document_name,  T1.document_status,  T1.document_author FROM document AS T1 WHERE T1.document_status  =  \"To be sent to the author\" AND T1.document_author  =  \"John Doe\""}
{"question": "What are the names in descending order of the number of employees in a company?", "query": "SELECT T1.name FROM employees AS T1 WHERE T1.emp_id  >  (SELECT T2.emp_id FROM employees AS T2 WHERE T2.emp_id  >  T1.emp_id)"}
{"question": "What is the name, address, and phone of the shop with the most expensive items?", "query": "SELECT name,  address,  phone FROM shop WHERE price  >  1000 ORDER BY price DESC LIMIT 1"}
{"question": "Find the average age of the employees who are in the \"IT Department\" and who are not engineers", "query": "SELECT AVG(age) FROM employees WHERE department_code = \"IT\" AND NOT (engineer = 1)"}
{"question": "What are the names, id and addresses of the most populous cities in Australia?", "query": "SELECT city_name,  city_id,  city_address FROM cities ORDER BY city_population DESC LIMIT 1"}
{"question": "Find the numbers of students who are registered for the course: \"CS 101: Introduction to Programming\"", "query": "SELECT count(*) AS \"number of students who are registered for the couse: \"CS 101: Introduction to Programing\"\""}
{"question": "How many airlines fly to the airport named \"NYC\"?", "query": "SELECT count(*) AS count FROM flights WHERE airport_name  =  \"NYC\""}
{"question": "Show the customer details", "query": "SELECT T1.Customer_details,  T1.Customer_id FROM Customers AS T1 WHERE T1.Customer_id  IN (SELECT T2.customer_id FROM Customer_Policies AS T3 WHERE T3.policy_id  =  1)"}
{"question": "What are the names, and what are the addresses of the students who have no ID in all the records, with the exception of the two students in the same", "query": "SELECT T1.student_name,  T1.address_type_code FROM students AS T1 WHERE NOT EXISTS (SELECT T2.student_id FROM students AS T2 WHERE T2.student_id  =  T1.student_id )"}
{"question": "How many distinct types of accounts are in the database?", "query": "SELECT DISTINCT type FROM account"}
{"question": "Find the names of all cities that are in both the state of Utah and the state of Wyoming", "query": "SELECT T1.city_name,  T2.city_name FROM city AS T1 JOIN state AS T2 ON T1.state_id  =  T2._id WHERE T1.state_id  IN (SELECT T3.state_id FROM state AS T3 WHERE T3.state  =  \"Utah\") AND T2.state_id  IN ( SELECT T4.state_id FROM state AS  T4 WHERE T4.state  =  \"Wyoming\")"}
{"question": "What are the names, addresses, and phone numbers of all customers who bought products from \"Walmart\" in the last 30 days?", "query": "SELECT name,  address,  phone FROM customer WHERE customer.store_id  =  \"Walmart\" AND date(time)  >  '2015-01-01'"}
{"question": "What are the names and acount balances of customers with the letter a", "query": "SELECT name_first,  name_last,  account_balance FROM customer WHERE letter_a = 'a'"}
{"question": "What are the names, prices and prices of all wines, in order of cost?", "query": "SELECT T1.name,  T1.\"price\",  T1.\"price\" FROM wine AS T1 ORDER BY T1.\"price\" DESC"}
{"question": "What is the id of the candidate who got a highest oppose rate?", "query": "SELECT T1.candidate_id,  T1.candidate_name,  T1.candidate__oppose_rate FROM candidates AS T1 WHERE T1.candidate_id  =  (SELECT T2.candidate_id FROM candidates AS T2 WHERE T2.candidate_name  =  \"John Doe\" AND T2.candidate_id  = T1.candidate_id)"}
{"question": "Find the names of students with last name \"A\"", "query": "SELECT T1.name FROM student AS T1 WHERE T1.last_name  =  \"A\""}
{"question": "Which are the names of all products whose price is above 1000 and whose price is below 1000?", "query": "SELECT T1.Product_name,  T2.Price FROM Products AS T1 JOIN Products_Price AS T2 ON T1.Product_id  =  T2.\"Product_id\" WHERE T2.Price  >  1000 AND T2.Price  <  1000"}
{"question": "(a novel question, about a second table), after \"", "query": "Examples of some or all task item:"}
{"question": "What is the average capacity of machines?", "query": "SELECT AVG(capacity) FROM machines"}
{"question": "Find the name of all hotels that are not in the city of \"Chicago\"", "query": "SELECT T1.hotel_name FROM hotel AS T1 WHERE T1.city !=  \"Chicago\""}
{"question": "What are the ids and names of the documents that are included in an assignment?", "query": "SELECT T1.id,  T1.name FROM assignment AS T1 JOIN assignment_item AS T2 ON T1.id  =  T2.assignment_id WHERE T1.id  =  '1'"}
{"question": "What are the names (first name and last name) of students who have taken three or more psychology courses?", "query": "SELECT T1.student_name,  T1.student_id FROM student AS T1 JOIN course AS T2 ON T1.student_id  =  T2.student_id JOIN course AS T3 ON T2.course_id  =  T3.course_id JOIN course AS T4 ON T2.course_id = T4.course_id JOIN course AS T5 ON T3.course_id = T5.course_id WHERE T1.student_id  IN (SELECT student_id FROM course WHERE course_id IN (SELECT course_id FROM course"}
{"question": "What are the names and ids of all customers who have bought at least one book?", "query": "SELECT T1.id,  T1.name FROM customer AS T1 WHERE T1.id  IN (SELECT T2.customer_id FROM customer AS T2 WHERE T2.id  =  T1.customer_id AND T2.[status]  =  'active')"}
{"question": "What is the first and last name of customers who have no purchases over 1000 and who are not from the United States?", "query": "SELECT T1.first_name,  T1.last_name FROM Customer AS T1 WHERE T1.purchases  <  1000 AND T1.country !=  'US'"}
{"question": "What are the names and average salary of the employees with the most experience?", "query": "SELECT T1.name,  T1.salary FROM employees AS T1 WHERE T1.experience  =  (SELECT max(T2.experience) FROM employees AS T2)"}
{"question": "(a novel question, about a table): Describe the information that you need in order to find out how many people have had their accounts closed by the bank", "query": "SELECT count(*) AS \"count\" FROM account_close_reason AS T1 WHERE T1.reason_code  =  \"Account Closed\""}
{"question": "What is the average distance between cities with population over 500", "query": "SELECT AVG(Distance) FROM (SELECT T1.city_id,  T2.city_name,  T3.distance FROM cities AS T1 JOIN cities AS T2 ON T1.city_id  =  T2._id JOIN cities AS T3 ON T2.city_id  =  'city_id' WHERE T1.population  >  500) AS T4"}
{"question": "What is the total number of students from the state of Alabama", "query": "SELECT count(*) AS total_students FROM student WHERE state = \"Alabama\""}
{"question": "How many students are there at San Jose State?", "query": "SELECT COUNT(*) FROM Students WHERE campus_code  =  \"SJSU\""}
{"question": "What is the total amount of salary that will be paid to all employees for the week of December 2nd, 2017?", "query": "SELECT T1.salary FROM employee AS T1 JOIN paycheck AS T2 ON T1.id  =  T2.employee_id WHERE T2.date  =  '2017-12-02'"}
{"question": "How many songs have 2 minutes duration?", "query": "SELECT COUNT(*),  duration FROM songs WHERE duration  =  \"2\""}
{"question": "What are the names, roles and salaries of the employees in the company?", "query": "SELECT name,  role,  salary FROM employees"}
{"question": "Find the name of the customer who is in the building that has the most number of customers", "query": "SELECT T1.name FROM customer AS T1 JOIN building AS T2 ON T1.customer_id  =  T2.[customer_id] WHERE T2.building_id  =  (SELECT MAX(building_id) FROM building)"}
{"question": "What is the total number of students who have ever taken a course at the university?", "query": "SELECT COUNT(*) FROM students"}
{"question": "\"How many distinct countries are there in the world?\" \"What is the name of the country with the largest population?\"", "query": "SELECT DISTINCT country_name FROM country"}
{"question": "What are the names and numbers of the employees in the department of the company responsible for making the most number of sales?", "query": "SELECT T1.employee_name,  T2.employee_number FROM employees AS T1 JOIN sales AS T2 ON T1.employee_id  =  T2.employee_id WHERE T2.sales  =  'The most number of sales'"}
{"question": "(1) Find the average number of transactions per month for each customer", "query": "SELECT T1.Customer_id,  T1.transactions_per_month FROM transactions AS T1 JOIN customer_policies AS T2 ON T2.customer_id  =  T1.Customer_id GROUP BY T1.Customer_id"}
{"question": "Which students did not have any policies?", "query": "SELECT T1.student_id FROM Student_Policies AS T1 WHERE T1.student_id  NOT IN (SELECT T2.student_id FROM Student_policies AS T2)"}
{"question": "How many times have the number of customers increased?", "query": "SELECT T1.num_customers FROM ( SELECT T1.num_custom_id,  T1.num_custom_id + 1 AS num_custom_id FROM ( SELECT T1.num  AS num_custom_id FROM customers AS T1 ) AS T2 ) AS T3 WHERE T3.num_custom_id  >  0"}
{"question": "What is the country of all players that were born in the year of 1975?", "query": "SELECT T1.country FROM player AS T1 WHERE T1.year  =  1975"}
{"question": "What are the names, ids and phone numbers of all of the employees in the company?", "query": "SELECT T1.name,  T1.id,  T1.phone FROM employees AS T1"}
{"question": "How many people took out money from their credit card on the first day of the month?", "query": "SELECT COUNT(*) FROM credit_card_transactions WHERE DATE(transaction_date) =  '1/1/2009'"}
{"question": "What are the names, id and gender of the students who are taking English courses in this university?", "query": "SELECT T1.name,  T1.id,  T1.gender FROM students AS T1 WHERE T1.course_name  =  \"English\""}
{"question": "What are the names and the account balances of customers who took a total amount of 5000 in loans?", "query": "SELECT T1.name,  T1.account_balance FROM customer AS T1 WHERE T1.account_balance  >  5000"}
{"question": "Find the names of the countries with the most people", "query": "SELECT T1.country_name,  T2.population FROM country AS T1 JOIN population AS T2 ON T1.country_id  =  T2.country_id"}
{"question": "What is the name, and level of catalog structure, with level between 5 and 10?", "query": "SELECT catalog_structure_name,  level FROM catalog_structure WHERE level BETWEEN 5 AND 10"}
{"question": "show the last names of all employees in the field of \"Accounting\"", "query": "SELECT T1.last_name FROM employee AS T1 JOIN employee_department AS T2 ON T1.employee_id  =  T2.employee_id WHERE T2.department_code  =  \"Accounting\""}
{"question": "What is the name and number of the customer who is registered as a student at the university?", "query": "SELECT T1.customer_name,  T1.customer_id FROM customer AS T1 JOIN student AS T2 ON T1.customer_id  =  T2._id WHERE T2.school_code  =  \"UNIVERSITY\""}
{"question": "List the name of the bank branches that provided some loans", "query": "SELECT bank_branch_name FROM bank_branch_loan WHERE bank_branch_name IN (SELECT T1.bank_branch_name FROM bank_branches AS T1 JOIN bank_branch_loan AS T2 ON T1.bank_branch_id  =  T2.\"bank_branch_id\")"}
{"question": "- and then the question id", "query": "SELECT T1.column_name FROM table_name AS T1 WHERE T1.column_name  =  \"value\""}
{"question": "how many students have been in the same section for more than three years?", "query": "SELECT DISTINCT student_id FROM student_section_history WHERE student_id  IN (SELECT student_id FROM student_section WHERE section_id = 1) AND year(date_of_last_attendance) > 3"}
{"question": "(a question about a sql table) Find the name and number of employees of all departments with at least two employees", "query": "SELECT T1.department_id,  T1.employee_id FROM department AS T1 JOIN employee AS T2 ON T1.department_id  =  T2.department_id WHERE T2.employee_id  =  T1.employee_id GROUP BY T1.department_id HAVING count(T1.employee_id)  >=  2"}
{"question": "What are the ids and the names of all cats in the database?", "query": "SELECT T1.cat_id,  T1.cat_name FROM cat AS T1 WHERE T1.cat_id  =  (SELECT max(cat_id) FROM cat)"}
{"question": "What is the average number of employees per department in the United States, ordered by the average number of employees per department (in thousands)?", "query": "SELECT AVG(emp_count) FROM department"}
{"question": "What is the average age of workers for each work type?", "query": "SELECT T1.work_type,  T2.avg_age FROM workers AS T1 JOIN work_type AS T2 ON T1.work_type  =  T2.id ORDER BY T1.work_type"}
{"question": "What are the names, phone numbers and emails of all customers who have purchased products with the same product code?", "query": "SELECT T1.email,  T2.name,  T2.phone FROM customer_history AS T1 JOIN product_history AS T2 ON T1.product_id  =  T2.product_id WHERE T2.product_code  =  \"ABC\""}
{"question": "Find the names of books written by C", "query": "SELECT T1.title FROM book AS T1 WHERE T1.author  =  \"C\""}
{"question": "What are the names (first names only) of students who have not enrolled in any courses?", "query": "SELECT T1.student_first_name FROM students AS T1 WHERE NOT EXISTS (SELECT T2.student_first_name FROM courses AS T2 WHERE T2.student_id  =  T1.id)"}
{"question": "Find the details of the record with id = 2", "query": "SELECT T1.id,  T1.name,  T1.address,  T1.city,  T1.state,  T1.zip,  T1.phone,  T1.fax,  T1.email,  T1.fax_number,  T1.email_address,  T1.email_type,  T1.email_status,  T1.email_date,  T1.email_time,  T1.email_subject,  T1.email_body,  T1.email_from,  T"}
{"question": "What is the total amount of money the New York state government has spent, on what?", "query": "SELECT SUM(amount) FROM state_budget WHERE state_name = \"New York\""}
{"question": "What are the ids and names of the employees who attended the orientation meeting?", "query": "SELECT T1.employeeid,  T1.name FROM employees AS T1 JOIN attendances AS T2 ON T1.empID  =  T2.empID"}
{"question": "Find the name of all the customer who only visited the web site in the year 1997", "query": "SELECT customer_id,  customer_name FROM customer WHERE customer_id  =  '1' AND customer_name  =  'John Smith' AND visit_date  =  '1997'"}
{"question": "(a question about a sql table) Find the id of the customer who has the id of the customer who has greatest credit score among the customers who have not", "query": "SELECT T1.customer_id FROM customer AS T1 WHERE T1.credit_score  >  ( SELECT T2.customer_id FROM customer AS  T2 WHERE T2.customer_id  =  T1.customer_id AND T2.credit_score  =  ( SELECT MAX(T3.credit_score) FROM customer AS T3 WHERE T3.customer_id  =  ( SELECT T4.customer_id FROM customer AS   T4 WHERE T4.customer_id  =  \"customer_id\" ) ) )"}
{"question": "What is the average price of a loaf of bread made by the bakery in the United States?", "query": "SELECT avg(price) FROM bread"}
{"question": "Find the names of all products whose last name contains the letter 'S'", "query": "SELECT T1.product_name FROM products AS T1 WHERE T1.last_name LIKE '%S%'"}
{"question": "Find the names of schools with the largest number of students", "query": "SELECT name FROM school WHERE count(*)  =  (SELECT max(count(*) ) FROM school)"}
{"question": "What are the names (first and last) of the students who have received the most credits?", "query": "SELECT T1.student_first_name,  T1.student_last_name FROM students AS T1 JOIN credits AS T2 ON T1.student_id  =  T2.student_id WHERE T2.credit_id  =  (SELECT T3.credit_id FROM credits AS T3 WHERE T3.student_id  =  (SELECT student_id FROM students WHERE student_id  =  T1.student_id ) )"}
{"question": "What are all the names of the students in the same class as Adam?", "query": "SELECT T1.Fname,  T1.Lname FROM student AS T1 WHERE T1.class_id  =  \"1\" AND T1.Fname  =  \"Adam\""}
{"question": "What are the names, ids, and salaries of all students in the class of 2011?", "query": "SELECT T1.name,  T1.id,  T1.salary FROM student AS T1 WHERE T1.class_id  =  2011"}
{"question": "What is the name, age, and title of the chief executive officer of all companies that have a website?", "query": "SELECT name, age, title FROM CEO_of_Companies_with_a_Website"}
{"question": "\"Find the number of projects", "query": "SELECT COUNT(*) FROM project"}
{"question": "What are the id of products that have the type code \"Miscellaneous\"?", "query": "SELECT T1.product_id FROM product AS T1 WHERE T1.type_code  =  \"Miscellaneous\""}
{"question": "How many different customers were there in each of the past 12 months?", "query": "SELECT T1.Customer_id,  T1.Customer_first_name,  T1.Customer_last_name,  count() FROM Customers AS T1 WHERE T1.date_of_birth  >  DATE_SUB(NOW(), INTERVAL 12 MONTH) GROUP BY T1.Customer_id"}
{"question": "What is the name and the last name of the person who has a highest number of answers?", "query": "SELECT T1.name,  T1.lastname FROM people AS T1 JOIN answers AS T2 ON T1.id  =  T2.person_id WHERE T2.count  =  (SELECT count(*) FROM answers AS T3 WHERE T3.person_id  =  T1)"}
{"question": "What is the name and email of the person who sent the email with subject \"Can I get a discount on my order\"?", "query": "SELECT T1.email,  T1.name FROM Customer AS T1 WHERE T1.email  =  \"can_i_get_a_discount_on_my_order@example.com\""}
{"question": "Find all the employees who work in department \"Management\" with their names", "query": "SELECT T1.employeeid,  T1.firstname,  T1.lastname,  T1.title,  T1.department,  T1.salary,  T1.manager,  T1.manager_id,  T1.manager_name,  T1.manager_phone,  T1.manager_email,  T1.manager_fax,  T1.manager_mobile,  T1.manager_office,  T1.manager_address,  T1.manager_city,  T1.manager_state,"}
{"question": "Find the names of the courses that contain at least one course with the word \"art\"", "query": "SELECT T1.course_name FROM course AS T1 JOIN course_description AS T2 ON T1.course_id  =  T2._id WHERE T2.word  =  \"art\""}
{"question": "Find the average scores of the students who took course 301 and who scored A or B", "query": "SELECT AVG(score) FROM student WHERE course  =  301 AND score  =  'A' OR score  =  'B'"}
{"question": "examples of some or all task items: The date of the next game, the name of the president of the company, the number of the room the meeting", "query": "SELECT T1.date,  T1.name,  T1.room_number FROM meeting AS T1 WHERE T1.date  =  '2010-01-01'"}
{"question": "Find the product categories whose names contain at least two words", "query": "SELECT DISTINCT CName FROM product_category WHERE CName LIKE '%[a-z][a-z]%'"}
{"question": "What is the name and id of the student who was offered the job?", "query": "SELECT T1.student_id,  T2.name FROM Student AS T1 JOIN Student_Job_Offers AS T2 ON T1.id  = T2.student_id WHERE T2.job_id  =  '1'"}
{"question": "What are the names and ids of all the students who have an odd number of grades?", "query": "SELECT T1.name,  T1.id FROM students AS T1 JOIN grades AS T2 ON T1.student_id  =  T2.[student_id] WHERE T2.grade  =  \"O\""}
{"question": "what is the total number of customers who had more than one address?", "query": "SELECT T1.customer_id,  T1.address_id,  T1.customer_type_code,  T1.customer_name,  T1.address_name,  T1.city,  T1.state_code,  T1.zip_code,  T1.country,  T1._id,  T1.phone_number,  T1.fax_number,  T1.email,  T1.credit_card_number,  T1.credit_limit,  T1.credit_status,  T1."}
{"question": "What is the id of the product that has the greatest market share?", "query": "SELECT T1.id,  T1.name FROM product AS T1 JOIN market_share AS T2 ON T1.id  =  T2.id WHERE T2.market_share  >  0.5"}
{"question": "Find the number of unique documents", "query": "SELECT DISTINCT count(*) FROM documents"}
{"question": "What are the names, addresses, and phone numbers of all the children of \"John Smith\"?", "query": "SELECT T1.name,  T1.address,  T1.phone_number FROM people AS T1 JOIN child_of AS T2 ON T1.person_id  =  T2.person_id WHERE T2.child_of_id  =  \"John\""}
{"question": "Find the names of the cities that are not included in the list", "query": "SELECT city FROM city WHERE city NOT IN (SELECT city FROM city_list);"}
{"question": "What is the city code of the city with population over 100,000?", "query": "SELECT city_code FROM city WHERE population  >  100000"}
{"question": "(a question about a sql table) Find the texts of assessment notes for the students with lastname \"Schuster\"", "query": "SELECT T1.note_text FROM notes AS T1 JOIN students AS T2 ON T1.student_id  =  T2.\"student_id\" WHERE T2.lastname  = \"Schuster\""}
{"question": "What is the average number of seats in a car?", "query": "SELECT AVG(seats) FROM Vehicles"}
{"question": "What are the number of students in each class?", "query": "SELECT T1.class_code,  count(*) FROM class AS T1 GROUP BY T1.class_code"}
{"question": "Which team is the best when compared to the other teams?", "query": "SELECT T1.team_id,  T1.team_name,  T1.team_score,  T1.team_id FROM team AS T1 WHERE T1.team_score  >  (SELECT min(T2.team_score) FROM team AS T2 WHERE T2.team_id  =  T1.team_id)"}
{"question": "How many students are there in the university", "query": "SELECT count(*) AS \"count\" FROM student"}
{"question": "How many students are in total?", "query": "SELECT count(*) from students"}
{"question": "What are the names, id, and age of students who are not taking classes in the spring, sorted by age?", "query": "SELECT T1.name,  T1.id,  T1.age FROM students AS T1 WHERE T1.status  =  'S' AND T1.year  =  'Spring' ORDER BY T1.age ASC"}
{"question": "List the number of employees of each city", "query": "SELECT T1.city,  T1.count(*) FROM city_employee AS T1 GROUP BY T1.city ORDER BY T1.count(*) DESC"}
{"question": "What is the name of the player who won the most player awards?", "query": "SELECT T1.name FROM player AS T1 JOIN player_awards AS T2 ON T1.player_id  =  T2._id WHERE T2.award_id  =  (SELECT T3.award_id FROM player_awards AS T3 WHERE T3.player_id  =  (SELECT player_id FROM player AS T4 WHERE T4.name  =  'John Smith') AND T3.award_id  = T2._id)"}
{"question": "What are the names, birth dates and birth places of all people with a birthday between 2000 and 2005?", "query": "SELECT name, birth_date, birth_place FROM people WHERE birth_date BETWEEN '2000-01-01' AND '2005-12-31'"}
{"question": "Find the name and id of all customers who have ordered at least one product and have received refunds", "query": "SELECT T1.Customer_id,  T1.Customer_name,  T1.Customer_address,  T1.Customer_city,  T1.Customer_state,  T1.Customer_zip,  T1.Customer_phone,  T1.Customer_email,  T1.Customer_credit_card,  T1.Customer_refund_status,  T1.Customer_order_id,  T1.Order_id,  T1.Product_id,  T1.Quantity,  T1.Price,  T1.Disc"}
{"question": "Find the first names of all students who have been assigned to courses whose titles have a vowel at the end", "query": "SELECT T1.first_name FROM student AS T1 JOIN course_assignments AS T2 ON (T1.stu_id  =  T2.stu_id) WHERE T2.course_title  =  \"%[a-z]%\";"}
{"question": "What are the names and grades of all students?", "query": "SELECT T1.name,  T1.grade FROM students AS T1"}
{"question": "Which city has the most number of players? List the city id and name", "query": "SELECT city_id,  city_name FROM city"}
{"question": "In the department of Computer Information Systems, how many students are currently enrolled in the course \"Basic Computer Systems\"?", "query": "SELECT T1.student_id,  T2.course_id,  T3.name FROM students AS T1 JOIN courses AS T2 ON T1.id  = T2.id JOIN courses AS T3 ON T2.course_id  =  T3.id WHERE T1.name  = \"Computer Information Systems\" AND T2.code  =  \"BASIC COMPUTER SYSTEMS\""}
{"question": "Show the maximum and minimum values of the field \"number\"", "query": "SELECT max(number),  min(number) FROM table"}
{"question": "Find the name of the department with the most employees", "query": "SELECT T1.dept_name FROM Department AS T1 JOIN employees AS T2 ON T1.department_id  =  T2.department_id WHERE T2.name  =  \"Marketing\""}
{"question": "List all the employees who went to the conference in Sydney in 2005", "query": "SELECT T1.firstname,  T1.lastname,  T1.title,  T1.department,  T1.office,  T1.phone,  T1.email,  T1.address_1,  T1.address_2,  T1.city,  T1.state,  T1.zip,  T1.country,  T1.[email_verified],  T1.hire_date,  T1.hire_start_date,  T1.hiredate,  T1.salary,"}
{"question": "What is the number and percentage of people who are smokers, drinkers and bikers in a town?", "query": "SELECT COUNT(*),  SUM(CASE WHEN drinker_id  =  1 THEN 1 ELSE 0 END),  SUM(CASE WHEN smoker_id  =  1 THEN 0 ELSE 1 END),  SUM(CASE when biker_id  =  1 THEN -1 ELSE 0 END) FROM drinker_smoker_biker_user_type_relation AS T1 JOIN user_type AS T2 ON T1.user_type_id  =  T2.user_type_id WHERE T1.user_type_code  =  'drinker' OR T"}
{"question": "(find the details of all organizations that are about)", "query": "SELECT name FROM organization WHERE name  =  \"about\""}
{"question": "List all the people who have the age of 20 or older and their names", "query": "SELECT T1.person_id,  T1.name_first,  '20 or older' AS age_group FROM person AS T1 WHERE T1.age  >=  20 GROUP BY T1.age_group ORDER BY T1.age_group ASC"}
{"question": "What are the names (first and last) of students who have no major", "query": "SELECT T1.first_name,  T1.last_name FROM student AS T1 WHERE NOT EXISTS (SELECT * FROM student AS T2 WHERE T2.stu_id  =  T1.stu_id AND T2.major  =  \"\")"}
{"question": "How many ways can 3 people be seated in a row?", "query": "SELECT T1.person_id,  T2.person_id,  T3.person_id FROM Person AS T1 JOIN Person AS T2 ON T1.person_id  =  T2.person_id,  Person AS T3 ON T2.person_id  =  'T3' GROUP BY T1.person_id, T2.person_id, T3.person_id HAVING count(DISTINCT T1.person_id)  =  3"}
{"question": "How many people are in the US with the last name Smith?", "query": "SELECT COUNT(*) FROM USERS WHERE last_name = 'Smith'"}
{"question": "What are the names and phone numbers of the two best friends of John Doe?", "query": "SELECT T1.Name,  T1.phone_number FROM friends AS T1 WHERE T1.name  =  \"John Doe\""}
{"question": "What is the name and id of the employee who has the most number of employees?", "query": "SELECT T1.firstname,  T1.lastname,  T1.empno,  T1.emp_id FROM employee AS T1 WHERE T1.emp_id  =  (SELECT MAX(emp_id) FROM employee)"}
{"question": "How many employees are there in each company? List the company, employee id, job title, job description, and the employee gender", "query": "SELECT T1.company_id,  T1.employee_id,  T1.job_title,  T1.job_description,  T1.gender FROM employee AS T1"}
{"question": "What are the names, ids, and prices of the products that have the most reviews?", "query": "SELECT T1.Product_name,  T1.Product_id,  T1.Product_price FROM product AS T1 WHERE T1.Product_reviews  >  (SELECT max(T2.Product_reviews) FROM product AS T2)"}
{"question": "What is the highest mountain in the United States?", "query": "SELECT MAX(height) FROM mountain"}
{"question": "What are the average, minimum, and maximum number of trips taken by all students in the previous year?", "query": "SELECT AVG(T1.trip_count) FROM Student AS T1 JOIN Trip AS T2 ON T1.stu_id  =  T2.stu_id GROUP BY T1.stu_id"}
{"question": "What are the cities with mayor's name \"Koch\"?", "query": "SELECT T1.city FROM cities AS T1 WHERE T1.mayor  =  \"Koch\""}
{"question": "Find the names of the students who have their birthday in any month", "query": "SELECT T1.name FROM student AS T1 JOIN birthday AS T2 ON T1.id  =  T2.student_id WHERE T2.month  =  'January' OR T2.month  =  \"February\" OR T2.month  = \"March\" OR T2.month  <  \"April\" OR T2.month  >  \"May\" OR T2.month  >=  \"June\" OR T2.month  <=  \"July\" OR T2.month  <>  \"August\" OR T2.month  ==  \"September\" OR"}
{"question": "What is the average age of all students who have a mother from the city of Bangalore?", "query": "SELECT AVG(age) FROM student_record WHERE mother_city  =  'Bangalore'"}
{"question": "What is the average age of all the customers with the age of 27?", "query": "SELECT count(*) AS total,  avg(age) AS average FROM customer WHERE age  =  27"}
{"question": "What are the names, types, and flag of the ships that were built in the most recent year? (I think this is easy)", "query": "SELECT T1.name,  T1.type,  T1.flag FROM ships AS T1 WHERE T1.year  =  (SELECT max(year) FROM ships)"}
{"question": "Find all the names of the customers in ascending order of price", "query": "SELECT T1.customer_name FROM customer AS T1 ORDER BY T1.price ASC"}
{"question": "What are the names, locations and dates of tournaments held in 2005?", "query": "SELECT T1.name,  T2.location,  T3.date FROM tournament AS T1 JOIN tournament_location AS T2 ON T1.tournament_id  =  T2.tournament_id JOIN tournament_date AS T3 ON T2.date  =  T3.date WHERE T1.year  =  2005"}
{"question": "What is the name, age, and sex of the student who has most credits?", "query": "SELECT T1.name,  T1.age,  T1.sex FROM student AS T1 WHERE T1.credits  >  (SELECT T2.credits FROM student AS T2 WHERE T2.name  =  \"John Doe\" AND T2.age  =  \"20\" AND T2.sex  =  \"male\")"}
{"question": "(a novel question, about a table) What is the name of the movie that was released in 2001?", "query": "SELECT movie_id,  movie_name FROM movie WHERE movie_release_year  =  2001"}
{"question": "(a novel question, about a new topic)", "query": "(the sql query to answer the query)"}
{"question": "What are the names and id of the professors who serve as department dean?", "query": "SELECT T1.name,  T1.id FROM professors AS T1 JOIN dean AS T2 ON T1.dean_id  =  T2._id GROUP BY T1.id"}
{"question": "Find the age of the person who is the youngest in the company", "query": "SELECT T1.age FROM employee AS T1 JOIN employee AS T2 ON T1.id  =  T2.employee_id WHERE T2.id  =  (SELECT MIN(id) FROM employee WHERE company_id  =  \"T1.company_id\")"}
{"question": "Find the names of the departments with the highest number of students", "query": "SELECT T1.department_name,  T2.count(*) FROM department AS T1 JOIN (SELECT department_id,  count(*) AS count FROM student_department_history GROUP BY department_id) AS T2 ON T1.department_id  =  T2.[department_id] ORDER BY count DESC"}
{"question": "find all the customers in a table who have a relationship with another table", "query": "SELECT T1.Customer_id,  T1.Customer_name,  T1.Customer_address,  T1.Customer_city,  T1.Customer_state,  T1.Customer_zip,  T1.Customer_phone,  T1.Customer_email,  T1.Customer_credit_limit,  T1.Customer_balance,  T1.Customer_type,  T1.Customer_status,  T1.Customer_created_at,  T1.Customer_updated_at,  T1.Trip_id,"}
{"question": "Give all the names of the students who have the same last name as a student with the id \"10\"", "query": "SELECT T1.last_name FROM students AS T1 JOIN students AS T2 ON T1.last_name  =  T2.last_name WHERE T1.id  =  \"10\""}
{"question": "List the count and name of each product in all the orders, \"", "query": "SELECT T1.product_name,  T1.product_quantity,  T1.product_price FROM order AS T1 WHERE T1.product_id  IN ( SELECT T2.product_id FROM product AS T2 WHERE T2.name  = 'product1' )"}
{"question": "Find the name and id of the student who has taken the class with id 101", "query": "SELECT T1.name,  T2.id FROM student AS T1 JOIN class AS T2 ON T1.class_id  =  T2.class_id WHERE T2.id  =  101"}
{"question": "What are the ids of all the students who took the class?", "query": "SELECT T1.student_id FROM student AS T1 JOIN class AS T2 ON T1.student_id  =  T2.student_id"}
{"question": "What are the names, grades, and test scores of all the students in the history department who are not part of the class of 2016?", "query": "SELECT T1.student_id,  T1.name,  T1.[grade],  T1.test_score FROM student AS T1 JOIN class_of_2016 AS T2 ON T1.student_id  =  T2.[student_id] WHERE T2.student_id  =  0"}
{"question": "Find the name of all songs that have \"saxophone\" in lyrics", "query": "SELECT song_name FROM song WHERE song_lyrics  LIKE '%saxophone%';"}
{"question": "Show the average high temperature for each day", "query": "SELECT AVG(high_temp) FROM weather_data"}
{"question": "Give me the average temperature and average precipitation for the city with the name \"Lisbon\"", "query": "SELECT avg(temperature),  avg(precipitation) FROM Weather WHERE city_name  =  \"Lisbon\""}
{"question": "What are the names and locations of all buildings that have an area of more than 50000 square meters?", "query": "SELECT T1.city_name,  T2.name,  T3.area FROM building AS T1 JOIN building_area AS T2 ON T1.id  = T2.building_id JOIN building_area_city AS T3 ON T2.city_id  =  T3.city_id WHERE T1.area  >  50000"}
{"question": "What are all the services offered by all the stations?", "query": "SELECT service_type,  station_name FROM stations JOIN services ON stations.station_id  =  services.station_id"}
{"question": "Find the average age of all the students who are in the same country as the customer \"Dayana Robel\"", "query": "SELECT T1.age FROM students AS T1 JOIN customer_addresses AS T2 ON T1.address_id  =  T2.address_id WHERE T2.customer_id  =  \"Dayana Robel\""}
{"question": "What are the statuses of the account?", "query": "SELECT T1.status FROM account AS T1 WHERE T1.account_id  >  1"}
{"question": "find the names of the provinces that lie on the edge of the country, and the names of the provinces that are located in the west of the country", "query": "SELECT T1.name,  T2.name FROM province AS T1 JOIN province AS T2 ON T1.province_id  =  T2.province_id WHERE T1.name  =  'West' AND T2.name  =  'East'"}
{"question": "Which customers made orders for the product with id 2 in the year 2009? Find their names", "query": "SELECT T1.customer_name,  T1.customer_address,  T1.customer_city,  T1.customer_state,  T1.customer_zip,  T1.customer_phone,  T1.customer_fax,  T1.customer_email,  T1.customer_credit_limit,  T1.customer_balance,  T1.customer_order_id,  T1.customer_product_id,  T1.product_name,  T1.product_price,  T1.product_quantity,  T"}
{"question": "What are the names in the alphabet?", "query": "SELECT name FROM alphabet"}
{"question": "Find the first names and last names of the customers who bought something recently", "query": "SELECT T1.first_name,  T1.last_name FROM customer AS T1 JOIN order_history AS T2 ON T1.customer_id  =  T2.[customer_id] WHERE T2.date  =  \"2011-12-01\""}
{"question": "Which is the largest country in the world?", "query": "SELECT T1.country_name,  T1.population,  T1.area_km2,  T1.population/T1.area_km2 AS population_per_km2,  T1.* FROM country AS T1 ORDER BY T1.population DESC LIMIT 1"}
{"question": "What is the average level of the students of the medical school?", "query": "SELECT AVG(level) FROM student WHERE school_id  =  \"medical\""}
{"question": "What are the names and ages of the students who attended the concert?", "query": "SELECT T1.first_name,  T1.last_name,  T1.age FROM students AS T1 JOIN concert AS T2 ON T1.id  = T2.student_id"}
{"question": "What are the most popular movies in the last ten years?", "query": "SELECT count(*) AS count,  T1.title FROM movies AS T1 JOIN movie_ratings AS T2 ON T1.movie_id  =  T2.movie_id WHERE T2.year  >  2007 GROUP BY T1.title ORDER BY count(*) DESC"}
{"question": "What are the second names of those who are not professors?", "query": "SELECT T1.second_name FROM people AS T1 WHERE T1.first_name  =  \"Billy\" AND T1.last_name  =  \"Cobham\" AND T1.gender_code  =  'M' AND T1.status_code  =  'A' AND T1.age  >  20"}
{"question": "Find the names of all the products with length smaller than 3 and height greater than 5", "query": "SELECT T1.product_name FROM product AS T1 WHERE T1.length  <  3 AND T1.height  >  5"}
{"question": "What are the names, course ids, and credits of the courses that have the same number of enrollments as the courses listed in the second list?", "query": "SELECT T1.course_id,  T1.course_name,  T1.course_credits FROM course AS T1 JOIN enrollments AS T2 ON T1.id  =  T2.id WHERE T2.course_id  IN (SELECT T3.course_id FROM course AS T3 JOIN enrollments AS T4 ON T3.course_id  ="}
{"question": "How many different professors do I know?", "query": "SELECT DISTINCT name FROM faculty"}
{"question": "How many players are in the national team?", "query": "SELECT count(*)  FROM player"}
{"question": "What is the age range of the customers who have the highest average order amount?", "query": "SELECT T1.age FROM Customer AS T1 JOIN order AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.avg_order  >  ( SELECT avg (T3.avg_order) FROM Customer AS T3 WHERE T3.age  >  T1.age )"}
{"question": "Find the name and address of a student whose name starts with \"J-\"", "query": "SELECT T1.name,  T1.address FROM students AS T1 WHERE T1.name  LIKE  \"J-%\";"}
{"question": "What is the average salary of employees in the Finance department?", "query": "SELECT AVG(salary) FROM employee WHERE department_id  =  \"Finance\""}
{"question": "What are the names and addresses of all employees who live in the city?", "query": "SELECT T1.first_name,  T1.last_name,  T1.address FROM Employees AS T1 JOIN Address AS T2 ON T1.employee_id  =  T2.employee_id WHERE T2.address  =  'New York'"}
{"question": "What is the name(s) of the departments of the college?", "query": "SELECT department_name FROM departments"}
{"question": "What is the number for the number of students for whom the first name is Jocelyn?", "query": "SELECT T1.id FROM students AS T1 JOIN students AS T2 ON T1.first_name  =  T2.first_name WHERE T1.first_name  LIKE  'Jocelyn'"}
{"question": "What are the names, heights and weights of the people standing in a line?", "query": "SELECT T1.firstname,  T1.lastname,  T1.height,  T1.weight FROM Person AS T1 WHERE T1.height  >  0 AND T1.weight  >  0 AND T1.\"height\"  >  0 AND T1.\"\"weight\"  >  0"}
{"question": "Show the first and last name of people who play the guitar", "query": "SELECT T1.first_name,  T1.last_name FROM people AS T1 JOIN guitar_playing AS T2 ON T1.person_id  =  T2.person_id"}
{"question": "What is the average number of students for each college?", "query": "SELECT College,  AVG(count(*) ) FROM student GROUP BY College"}
{"question": "What is the first and last name of the customer that is on a trip with id 1?", "query": "SELECT T1.first_name,  T1.last_name FROM customer AS T1 JOIN trip AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.id  =  1"}
{"question": "Find the names of the students who live in the same city as Bob", "query": "SELECT T1.name FROM students AS T1 JOIN student_city AS T2 ON T1.city_id  =  T2"}
{"question": "Which restaurants serve the most coffee beverages?", "query": "SELECT T1.name,  T2.coffee_beverage FROM restaurants AS T1 JOIN coffee_beverage AS T2 ON T1.rest_id  =  T2"}
{"question": "What is the name and department of the employee who is responsible for the database?", "query": "SELECT T1.Name,  T1.Department FROM Employee AS T1 WHERE T1.Job_ID  =  (SELECT T2.Job_ID FROM Job AS T2 WHERE T2.Job_Name  =  \"Database Administrator\")"}
{"question": "What is the name of the company that has produced more than one phone model", "query": "SELECT T1.name FROM product_models AS T1 JOIN product_models AS T2 ON T1.model_id  =  T2.model_id WHERE T1.model_id  <>  T2.model_id"}
{"question": "What is the name and age of the student who has the most number of assessment notes in his/her account?", "query": "SELECT T1.student_name,  T1.student_age FROM student AS T1 JOIN assessment_notes AS T2 ON T1.student_id  =  T2.[student_id] WHERE T2.assessment_id  =  (SELECT MAX(T3.assessment_id) FROM assessment AS T3);"}
{"question": "What are the average and maximum scores of the students in the class?", "query": "SELECT AVG(score),  MAX(score) FROM student_scores"}
{"question": "What are the names, locations and products of the enzymes that have any \"inhibitor\" interaction?", "query": "SELECT T1.Name,  T1.Location,  T1.Product FROM Enzyme AS T1 WHERE T1.Product  =  \"Inhibitor\" AND T1.Product  =  T2.Product;"}
{"question": "How many degrees does the department have?", "query": "SELECT count(*)  FROM department"}
{"question": "What is the total number of students in the city of Santa Clara?", "query": "SELECT COUNT(*) FROM student WHERE city_code  =  'Santa Clara'"}
{"question": "What are the ids and names of the customers who have no account with the largest balance?", "query": "SELECT T1.customer_id,  T1.customer_name,  T1.customer_balance FROM customer AS T1 WHERE T1.customer_balance  >  ( SELECT max(T2.customer_balance) FROM customer AS T2 WHERE T2.customer_id  =  T1.customer_id )"}
{"question": "What are the names and the ages of all the students in the university, ordered by the total number of hours?", "query": "SELECT T1.name,  count(*) FROM students AS T1 GROUP BY T1.name HAVING count(*)  =  (SELECT count(*) FROM students AS T2 WHERE T2.age  >  T1.age)"}
{"question": "What is the name, location and website for the college which is located in the state of Alabama?", "query": "SELECT T1.name,  T1.location,  T1.website FROM campus AS T1 WHERE T1.state  =  \"AL\""}
{"question": "Find the product names with the highest price", "query": "SELECT T1.product_name,  T2.price FROM products AS T1 JOIN products_price AS T2 ON T1.product_id  =  T2.product_id WHERE T2.price  >  '0'"}
{"question": "What is the name, number of employees, and branch of the company that has an employment rate of over 95?", "query": "SELECT count(*) ,  T1.name,  T1.branch_id FROM employees AS T1 JOIN branch AS T1.branch_id WHERE T1.[employment_rate]  >  95"}
{"question": "What is the name, capacity, and location of the product with the lowest price?", "query": "SELECT T1.name,  T1.capacity,  T1.location FROM products AS T1 WHERE T1.price  =  (SELECT min(price) FROM products AS T2 WHERE T2.capacity  =  T1.capacity AND T2.location  =  T1.location)"}
{"question": "Find the id of the employee that is a manager and the name of the building he is in", "query": "SELECT T1.employee_id,  T1.building_name FROM employee AS T1 JOIN building AS T2 ON T1.building_id  =  T2.[building_id] WHERE T1.employee_id  =  \"T1\" AND T2.name  =  \"T2\""}
{"question": "\"What are the names of all instructors who advised students in the math depart sorted by the total credits of the student", "query": "SELECT T1.name,  T2.credits FROM instructor AS T1 JOIN student AS T2 ON T1.instructor_id  =  T2._id ORDER BY T2.credits"}
{"question": "Find the age of the student who has the least number of siblings", "query": "SELECT T1.student_id,  T1.name,  T1.age FROM student AS T1 JOIN student_siblings AS T2 ON T1.student_id  =  T2"}
{"question": "Which movie has the highest number of actors?", "query": "SELECT T1.actor_id,  T1.actor_name FROM actor AS T1 JOIN movie AS T2 ON T1.actor_id  =  T2.actor_id GROUP BY T1.actor_id ORDER BY count(*)  DESC LIMIT 1"}
{"question": "What are the names from the different countries and continents?", "query": "SELECT T1.name FROM country AS T1 JOIN continent AS T2 ON T1.country_id  =  T2.country_id"}
{"question": "Find the number of nurses who work in the US", "query": "SELECT count(*) AS count FROM nurses WHERE country = 'United States'"}
{"question": "Who are the employees who made the most sales?", "query": "SELECT T1.name,  T1.salary FROM employee AS T1 JOIN sales AS T2 ON T1.id  =  T2.employee_id WHERE T2.sales  =  (SELECT max(sales) FROM sales)"}
{"question": "What are the first and last names of the employees who earned the most?", "query": "SELECT T1.first_name,  T1.last_name FROM Employee AS T1 JOIN Employee_Salary AS T2 ON T1.employee_id  =  T2.[employee_id] WHERE T2.salary  =  (SELECT MAX(salary) FROM Employee_Salary)"}
{"question": "Show the number of employees in each department", "query": "SELECT count(*) AS total_employees FROM department"}
{"question": "(a question about a sql table) What are the first name, last, and role of all the employees?", "query": "SELECT T1.employee_first_name,  T1.employee_last_name,  T1.employee_role FROM employees AS T1"}
{"question": "What is the average age of the people who are participating in the game \"Catch the Puppy\"?", "query": "SELECT AVG(age) FROM players WHERE game_id  =  'Catch the Puppy'"}
{"question": "What are the names, locations, and majors of all instructors?", "query": "SELECT T1.name,  T2.location,  T3.major FROM instructor AS T1 JOIN student_instructor AS T2 ON T1.instructor_id  =  T2.instructor_id JOIN student AS T3 ON T2.student_id  =  t3.student_id"}
{"question": "What is the first, last, and average salary for each department?", "query": "SELECT department_id,  T1.salary FROM employees AS T1 JOIN department AS T2 ON T1.department_id  =  T2._id WHERE T2.name  =  \"IT\""}
{"question": "What is the name and the average GPA of the student who has the highest average GPA?", "query": "SELECT T1.student_id,  T1.name,  T1.[GPA] FROM student AS T1 JOIN (SELECT T2.student_id,  T2.GPA FROM student AS T2 JOIN (SELECT T3.student_id,  T3.GPA FROM student AS T3 JOIN (SELECT T4.student_id,  T4.GPA FROM student AS T4 JOIN (SELECT T5.student_id,  T5.GPA FROM student AS T5 JOIN (SELECT T6.student_id,  T6.GPA FROM student"}
{"question": "What's the name of the movie from 2001?", "query": "SELECT title FROM Movie WHERE year  =  2001"}
{"question": "how many restaurants are there in the city of San Francisco?", "query": "SELECT count(*) AS \"count\" FROM restaurants"}
{"question": "What are the names and ids of all the customers of the game \"GTA\"", "query": "SELECT T1.custid,  T1.name,  T1.address,  T1.city,  T1.state,  T1.zip,  T1.phone,  T1.email,  T1.credit_card_id,  T1.credit_limit,  T1.credit_status,  T1.dept_id,  T1.deptname,  T1.deptcode,  T1.deptphone,  T1.deptemail,  T1.deptaddress,  T1"}
{"question": "What are the address of the headquarters of the companies that have the highest number of employees?", "query": "SELECT T1.address_id,  T2.name FROM addresses AS T1 JOIN company_addresses AS T2 ON T1.company_id  =  T2.company_id WHERE T1.company_id  IN (SELECT T3.company_id FROM company_addresses AS T3 WHERE T3.address_id  =  '1') GROUP BY T1.address_id, T2.name ORDER BY T1.address_id  ASC"}
{"question": "What is the first month of the year?", "query": "SELECT month(date) FROM calendar"}
{"question": "What are the ids and names of all the products?", "query": "SELECT T1.id,  T1.name FROM product AS T1"}
{"question": "How many students did each course have?", "query": "SELECT T1.course_id,  T1.student_id FROM course AS T1 JOIN students AS T2 ON T1.id  =  T2.id WHERE T2.course_id  =  '1'"}
{"question": "What are the prices of all products?", "query": "SELECT T1.price FROM products AS T1 WHERE T1.product_id IN (SELECT T2.product_id FROM products AS T2 WHERE T2.product_id NOT IN (SELECT T3.product_id FROM products AS t3 WHERE t3.product_id NOT IN ( SELECT T4.product_id FROM products AS  t4 WHERE t4.product_id NOT IN (... ) ) ) )"}
{"question": "What is the difference between \"hierarchy\" and \"hierarchical keys\"?", "query": "SELECT T1.column_name,  T1.column_id,  T1.column_type,  T1.column_length,  T1.column_key,  T1.column_comment,  T1.column_default,  T1.column_flags,  T1.column_status,  T1.column_owner,  T1.column_data_type,  T1.is_nullable,  T1.is_identity,  T1.is_computed,  T1.is_updatable,  T"}
{"question": "What is the average price of the products in the store?", "query": "SELECT AVG(price) FROM product;"}
{"question": "What is the title and start date of the film that was most frequently rented?", "query": "SELECT title,  start_date FROM films WHERE Rental_Count  =  \"most\""}
{"question": "What is the name, number, and age of the first child of John Smith?", "query": "SELECT T1.name,  T1.id,  T1.age FROM child AS T1 WHERE T1.parent_id  =  \"John Smith\""}
{"question": "Find the average exam score of all students", "query": "SELECT avg(exam_score) FROM student"}
{"question": "What are the names and addresses of the people who buy the product \"Kleenex\"", "query": "SELECT T1.name,  T1.address FROM customers AS T1 JOIN products AS T2 ON T1.product_id  =  T2.id WHERE T2.name  =  \"Kleenex\""}
{"question": "What is the name and id of the customer who checked most of his/her accounts balance this month?", "query": "SELECT T1.Name,  T1.id FROM customer AS T1 JOIN account_balance AS T2 ON T1.customer_id  =  T2.[customer_id] WHERE T2.balance  >  0 AND T2.balance_date  =  (SELECT MAX(T3.balance_date) FROM account_balance AS T3 WHERE T3.customer_id  =  t2.customer_id)"}
{"question": "Find the average number of employees who are currently working", "query": "SELECT AVG(emp_count) FROM employees"}
{"question": "What is the population of the town with id = \"11\"", "query": "SELECT T1.Population FROM town AS T1 WHERE T1.id = \"11\""}
{"question": "What is the name with first name as \"Andrew\" and last name as \"Baker\"?", "query": "SELECT name FROM person WHERE first_name  =  \"Andrew\" AND last_name  =  \"Baker\""}
{"question": "What is the name and id of the student who has taken the most tests?", "query": "SELECT T1.student_id,  T1.name,  T1.\"total_tests\" FROM student AS T1 JOIN test AS T2 ON T1.student_id  =  T2.\"student_id\" GROUP BY T1.student_id ORDER BY T1.total_tests DESC LIMIT 1"}
{"question": "How many students are enrolled in each course?", "query": "SELECT T1.course_code,  T1.number_of_students FROM course AS T1 JOIN student AS T2 ON T1.course_code  =  T2.course_code"}
{"question": "What are the names and ages of the students in class ACCT-211?", "query": "SELECT T1.name,  T1.age FROM students AS T1 WHERE T1.class_code  IN (SELECT class_code FROM classes WHERE class_name  =  \"ACCT-211\")"}
{"question": "What is the first name of the teacher who had a student named \"John\"?", "query": "SELECT T1.name FROM teacher AS T1 JOIN student AS T3 ON T1.id  =  T3.teacher_id WHERE T3.name  = 'John'"}
{"question": "What is the name, gender, and age of the customers who have at least one ticket?", "query": "SELECT T1.customer_name,  T2.customer_age,  T3.customer_gender FROM customers AS T1 JOIN customers_tickets AS T2 ON T1.id  = T2.customer_id JOIN customers_tickets AS T3 ON T2.id  =  T3.\""}
{"question": "Including the question, give a novel question, about a different type of table", "query": "SELECT count(*) AS total FROM table1"}
{"question": "What is the number on the back of the right shoe of the basketball player with the greatest number of points in the history of the NBA?", "query": "SELECT T1.player_id,  T1.points FROM basketball_player AS T1 WHERE T1.points  =  (SELECT max(T2.points) FROM basketball_player AS T2)"}
{"question": "How many students are there in the course named \"Data Analysis for Business?\"", "query": "SELECT T1.course_name,  T1.course_code,  T1.course_level,  T1.course_type,  T1.course_number,  T1.course_year,  T1.course_section,  T1.course_dept,  T1.course_credit,  T1.course_room,  T1.course_hours,  T1.course_fee,  T1.course_instructor,  T1.course_teacher,  T1.course_lecturer,  T1."}
{"question": "What are the names in the table, sorted by the number of children?", "query": "SELECT T1.name,  T2.children FROM students AS T1 JOIN family AS T2 ON T1.parent_id  =  T2._id ORDER BY T1.name"}
{"question": "What are the names, genders and grades of the students who took at least one lecture of 'Biology 101' in the fall semester?", "query": "SELECT T1.name,  T1.gender,  T1.grade FROM student AS T1 JOIN lecture AS T2 ON T1.studentid  =  T2.studentid WHERE T2.lecture_name  =  \"Biology 101\""}
{"question": "What is the first name and last name of the employee who reported to Nancy Edwards?", "query": "SELECT T1.employee_id,  T1.firstname,  T2.lastname FROM employee AS T1 JOIN employee_reports AS T2 ON T1.employee_id  =  T2.employee_id WHERE T1.firstname  =  \"Nancy\" AND T1.lastname  =  \"Edwards\""}
{"question": "How many movies did \"Titanic\" make?", "query": "SELECT T1.title FROM Movie AS T1 JOIN Movie_Details AS T2 ON T1.movie_id  =  T2.movie_id WHERE T2.title  =  'Titanic'"}
{"question": "What are the names and genders of each of the students?", "query": "SELECT T1.name,  T1.gender FROM students AS T1"}
{"question": "What are the names, descriptions and prices of all products in the store?", "query": "SELECT T1.name,  T1.description,  T1.price FROM product AS T1"}
{"question": "List the first name of all doctors who are not married", "query": "SELECT T1.first_name FROM doctor AS T1 JOIN doctor_marriage AS T2 ON T1.doctor_id  =  T2.doctor_id WHERE T2.doctor_id  =  0"}
{"question": "What are the names, ids and the number of entries for each album in the database?", "query": "SELECT album_name,  album_id,  count(*) FROM album GROUP BY album_id"}
{"question": "Find the name of a device with the lowest battery charge", "query": "SELECT T1.name FROM battery_chargers AS T1 JOIN batteries AS T2 ON T1.battery_id  =  T2._id WHERE T2.charge_percent  =  \"lowest\""}
{"question": "What are the names in ascending order by their height?", "query": "SELECT T1.Name FROM Person AS T1 ORDER BY T1.Height ASC"}
{"question": "Find the name of the colleges that have at least two players (a question)", "query": "SELECT T1.name FROM college AS T1 JOIN player AS T2 ON T1.college_id  =  T2.college_id WHERE T2.player_id  =  'yes'"}
{"question": "What are the last name and the id of students who are in the class of 2009 with grade point average above 2", "query": "SELECT T1.student_id,  T1.student_name,  T2.grade_point_average FROM student AS T1 JOIN class_of_2009 AS T2 ON T1.student_id  =  T2.student_id WHERE T2.grade_point_average  >  2"}
{"question": "What is the total number of players who have played the game more than once?", "query": "SELECT COUNT(*) FROM Player WHERE player_id  =  \"1\""}
{"question": "What are the first name and last name of all students who live in New York City?", "query": "SELECT T1.first_name,  T1.last_name FROM students AS T1 WHERE T1.city  =  'New York'"}
{"question": "\"What is the first, last name, GPA of the youngest one among students whose gpa is above 3?\"", "query": "SELECT FirstName, LastName, GPA FROM Student WHERE GPA  >  3"}
{"question": "What are the names, titles, hometowns, and ages of all the authors published in the journal of astronomy and astrophysics?", "query": "SELECT T1.author_name,  T2.title,  T3.hometown,  T4.age FROM authors AS T1 JOIN articles AS T2 ON T1.author_id  =  T2._id JOIN authors AS T3 ON T2.author_id  =  (SELECT author_id FROM authors WHERE author_name  =  \"Ted\") JOIN authors AS T4 ON T3.author_id  =  \"Ted\""}
{"question": "What are the names and id of all students who has a score of at least 90 in the class?", "query": "SELECT name,  id FROM student WHERE score  >=  90"}
{"question": "What is the name and number of customers who have the name \"Smith\"?", "query": "SELECT T1.customer_name,  T1.customer_id FROM customer AS T1 WHERE T1.customer_name  =  \"Smith\""}
{"question": "What are the names (as text) of the customers who have used the product \"Toyota Prius\"?", "query": "SELECT T1.customer_name FROM customer AS T1 WHERE T1.product_name  =  \"Toyota Prius\""}
{"question": "What is the name of the country with the biggest number of people?", "query": "SELECT T1.country_name,  T1.population FROM country AS T1 WHERE T1.population  >  (SELECT max(T2.population) FROM country AS T2)"}
{"question": "Give all the students who have a sibling", "query": "SELECT * FROM students WHERE student_id  =  (SELECT sibling_id FROM student_siblings WHERE student_id  =  student.student_id)"}
{"question": "What is the id in the table", "query": "SELECT id FROM table"}
{"question": "What are the names, age, and first name of students who have a sibling with a name starting with \"S\"?", "query": "SELECT T1.student_id,  T1.name,  T1.[age],  T1.first_name FROM student AS T1 JOIN student_siblings AS T2 ON T1.student_id  =  T2.[student_id] WHERE T2.name_first  LIKE 'S%'"}
{"question": "What is the last date of a student to turn in an assignment?", "query": "SELECT T1.date_of_turn_in FROM assignment AS T1 WHERE T1.student_id  =  \"1\" AND T1.date_of_creation  =  \"2012-12-31\""}
{"question": "What are the last names of all the faculty members of the geology department?", "query": "SELECT T1.last_name FROM faculty AS T1 JOIN faculty_department AS T2 ON T1.faculty_id  =  T2.faculty_id WHERE T2.dept_name  =  \"Geology\""}
{"question": "What are the names and ages of all the salespersons?", "query": "SELECT T1.name,  T1.age FROM sales AS T1 JOIN employee AS T2 ON T1.emp_id  =  T2.id"}
{"question": "What is the name for the book with the highest book numbers sold?", "query": "SELECT T1.book_id,  T2.title,  T2.author,  T2.year,  T2.price,  T2.quantity,  T2.book_number FROM books AS T1 JOIN books_authors AS T2 ON T1.book_id  =  T2.book_id WHERE T2.title  =  \"The Hobbit\""}
{"question": "Who are the students that were not in the same grade as you when you were a student?", "query": "SELECT DISTINCT Student_ID FROM Student WHERE Grade!= \"YOUR_GRADE\""}
{"question": "What is the number for a statement that has the greatest number of corresponding accounts?", "query": "SELECT T1.statement_id,  T1.statement_number FROM statements AS T1 JOIN accounts AS T2 ON T1.account_id  =  T2._id WHERE T2.account_type  =  \"Checking\""}
{"question": "What is the name of the store in which the customer has bought the most number of products?", "query": "SELECT T1.store_name FROM store AS T1 JOIN customer AS T2 ON T1.store_id  =  T2"}
{"question": "Find all the names of the professors in the building \"Mergenthaler\"", "query": "SELECT T1.name FROM professors AS T1 JOIN building AS T2 ON T1.building_id  =  T2.building_id WHERE T2.name  =  \"Mergenthaler\""}
{"question": "What is the last one of the following names?", "query": "SELECT name FROM track_name WHERE name NOT IN (SELECT name FROM track_name WHERE name LIKE 'A%')"}
{"question": "Why did the student left the university?", "query": "SELECT T1.reason_for_leaving FROM student AS T1 WHERE T1.student_id  =  \"1\""}
{"question": "What are the names, gender, and birth date of all employees who have never been to a conference?", "query": "SELECT T1.name,  T1.\"gender\",  T1.birth_date FROM employee AS T1 WHERE NOT EXISTS ( SELECT 1 FROM conference AS T2 WHERE T1.id  =  \"T2.employee_id\" )"}
{"question": "How many people from San Francisco are from California? What is the name of the state that is a continent away from California?", "query": "SELECT T1.name,  T1.state FROM people AS T1 WHERE T1.city  =  'San Francisco' AND T1.state  =  'California'"}
{"question": "What are the names (first name and last name) of the students who enrolled in the course \"Introduction to Web Scraping\" at the University of California", "query": "SELECT T1.last_name,  T1.first_name FROM students AS T1 JOIN enrollment AS T2 ON T1.id  =  T2.student_id WHERE T2.course_id  =  \"Introduction to Web Scraping\""}
{"question": "What are the names (first and last name) of the employees who joined after 2002?", "query": "SELECT T1.first_name,  T1.last_name FROM employees AS T1 WHERE T1.joined_date >  '2002-01-01'"}
{"question": "Show all names of the schools that have at least 3 students with last name \"Bergman\" or \"Soderbergh\"", "query": "SELECT T1.school_name FROM student AS T1 JOIN school AS T2 ON T1.school_id  =  T2._id WHERE T1.last_name  =  \"Bergman\" OR T1.last_name  ==  \"Soderbergh\""}
{"question": "When did the student enroll in college?", "query": "SELECT T1.date_of_birth FROM student AS T1 WHERE T1.name  =  \"John Smith\""}
{"question": "What is the name, type, and flag for the ship that is built in the recent year?", "query": "SELECT ship_name,  ship_type,  ship_flag FROM ships"}
{"question": "Show the name of the professors who have taught 3 courses with code CIS-220", "query": "SELECT name FROM professor WHERE id  =  (SELECT professor_id FROM course_instructor WHERE course_id  =  \"CIS-220\" AND course_code  =  \"CIS-200\")"}
{"question": "Find the first name of student who has taken any courses from the history and biology departments", "query": "SELECT T1.student_id,  T1.firstname,  T2.course_id FROM student AS T1 JOIN course AS T2 ON T1.student_id  =  T2.student_id WHERE T1.firstname  =  \"John\" AND T2.course_name  =  \"History\" AND T2.course_id  =  \"HIST-101\""}
{"question": "What is the description of the first name and last name of a student who is taking accounting class?", "query": "SELECT T1.first_name,  T1.last_name FROM student AS T1 JOIN class_attendance AS T2 ON T1.student_id  =  T2.[student_id] WHERE T2.class_name  =  \"Accounting\""}
{"question": "What are the ids of all the courses with the same name as \"Statistical Theory of Reliability\"?", "query": "SELECT course_id FROM courses WHERE course_name  =  \"Statistical Theory of Reliability\""}
{"question": "what is the average GPA of students from the university of california, san francisco?", "query": "SELECT AVG(GPA) FROM student WHERE university_id  =  \"UC-SF\""}
{"question": "What's the name of the department that has the highest number of employees?", "query": "SELECT T1.Department_Name FROM Department AS T1 WHERE T1.Employee_Count  =  (SELECT max(T2.Employee_Count) FROM Department AS T2)"}
{"question": "(a novel question, about a table \"", "query": "SELECT * FROM table_name"}
{"question": "What are the names (both last and first) of the students with lowest grade point average (GPA) and belongs to the lowest department?", "query": "SELECT T1.last_name,  T1.first_name FROM students AS T1 JOIN grades AS T2 ON T1.student_id  =  T2.student_id WHERE T2.grade_point_average  =  \"3.0\" AND T2.department_id  =  \"1\""}
{"question": "What is the largest city with more than one volcano?", "query": "SELECT T1.city_name,  T1.city_id,  T1.city_state_province_county,  T1.city_country_region_subdivision_district,  T1.city_latitude,  T1.city_longitude FROM city AS T1 WHERE T1.city_id  =  (SELECT max(T2.city_id) FROM city AS T2)"}
{"question": "What is the name and age of the student with the highest gpa?", "query": "SELECT T1.name,  T1.age FROM student AS T1 WHERE T1.gpa  =  (SELECT max(T2.gpa) FROM student AS T2)"}
{"question": "List the names of the cities that have more than 10 million inhabitants", "query": "SELECT name FROM city WHERE population  >  100000000"}
{"question": "What is the total number of days that have been assigned to all employees?", "query": "SELECT SUM(DATEDIFF(day, Start_Date, End_Date)) FROM Employee_Schedule"}
{"question": "What is the first and last name of the customer that have email \"luisg@embrag", "query": "SELECT T1.first_name,  T1.last_name FROM customer AS T1 WHERE T1.email  =  \"luisg@embrag\""}
{"question": "Find the names of customers with the most number of orders", "query": "SELECT T1.name FROM customers AS T1 WHERE T1.orders  >  (SELECT max(T2.name) FROM customers AS T2)"}
{"question": "- \"A, B, and C\"", "query": "SELECT T1.column_name FROM table_name AS T1 WHERE T1.column_name  =  \"A\" OR T1.column_name  IN (\"B\", \"C\")"}
{"question": "What is the average salary of all managers?", "query": "SELECT AVG(SALARY) FROM Managers"}
{"question": "(a novel question, about a table) What are the first names and office addresses of some professors?", "query": "SELECT firstname,  office_address FROM professor WHERE rank  =  \"Professor\""}
{"question": "What is the average salary of all employees who have an age under 25?", "query": "SELECT AVG(salary) FROM employee WHERE age < 25"}
{"question": "What are the names, role and location of all employees of the \"Samsung\" company", "query": "SELECT T1.name,  T2.role,  T3.location FROM employee AS T1 JOIN company AS T2 ON T1.company_id  =  T2._id  JOIN location AS T3 ON T2.location_id  =  T3.location_id"}
{"question": "What are the first names of the students who have a course with the course title \"Data Analysis\"?", "query": "SELECT T1.first_name FROM student AS T1 JOIN course AS T2 ON T1.student_id  =  T2.student_id WHERE T2.course_name  =  \"Data Analysis\";"}
{"question": "(a question about a sql table) What is the first name and age of all students who are taller than 6 feet and weight less than 180 lbs", "query": "SELECT T1.FirstName,  T1.Age FROM student AS T1 WHERE T1.Height > 6 AND T1.Weight < 180"}
{"question": "What are the names, id, and job titles of all the teachers named \"Johnny\"?", "query": "SELECT T1.name,  T1.* FROM teacher AS T1 WHERE T1.name  =  \"Johnny\""}
{"question": "Find the name of all employees who are not in charge of any holiday", "query": "SELECT T1.name FROM employees AS T1 WHERE T1.position  =  'employee' AND T1.type  =  'employee' AND NOT EXISTS (SELECT T2.name FROM employees AS T2 WHERE T2.position  =  'employee')"}
{"question": "What is the name, class, and number of students in a classroom with at least five students?", "query": "SELECT T1.name,  T1.class_id,  T1.num_students FROM class AS T1 WHERE T1.num_students  >=  5"}
{"question": "What are the names and the number of employees of the company (if more than one table, list the top 5)", "query": "SELECT T1.NAME,  T2.NUMBER FROM employees AS T1 JOIN employees AS T2 ON T1.manager_id  =  T2.manager_id"}
{"question": "What are the names, locations, and weights of the five largest cities?", "query": "SELECT name,  location,  weight FROM city ORDER BY weight DESC LIMIT 5"}
{"question": "Find the name of the student who has the most grade A", "query": "SELECT T1.student_id FROM students AS T1 JOIN grades AS T2 ON T1.student_id  =  T2.[student_id] WHERE T2.grade_grade  =  \"A\""}
{"question": "What are the names, and, in order, the ages, of all students taking a course who had an A or C?", "query": "SELECT T1.Fname,  T1.Lname,  T1.age,  T1.grade FROM student AS T1 WHERE T1.grade  =  'A' OR T1.grade  =  \"C\" ORDER BY T1.age  ASC"}
{"question": "Find the first names of all professors who work in New York City", "query": "SELECT T1.first_name FROM professor AS T1 WHERE T1.city  =  \"New York City\""}
{"question": "What are the names, ids, and genders of all students and teachers?", "query": "SELECT T1.name,  T1.id,  T1.gender FROM students AS T1 JOIN teachers AS T2 ON T1.student_id  =  T2.student_id"}
{"question": "Show the names of the students' parents", "query": "SELECT T1.parent_name FROM student AS T1 JOIN student_parent AS T2 ON T1.student_id  =  T2.student_id"}
{"question": "What is the average height of all students?", "query": "SELECT AVG(height) FROM students"}
{"question": "What is the name and age of the student that got a grade A in the class \"10018\" (but not the class \"10018c\")?", "query": "SELECT T1.name,  T1.age FROM students AS T1 WHERE T1.id  =  \"10018\" AND T1.grade  =  \"A\" AND T1.class_code !=  \"10018c\""}
{"question": "What is the name (not including the prefix) of the largest city on the list of cities in the United States?", "query": "SELECT T1.city_name FROM city AS T1 WHERE T1.population  >  (SELECT MAX(T2.population) FROM city AS T2)"}
{"question": "What are the names and cities of the schools with the code FLS?", "query": "SELECT name,  city FROM schools WHERE code  =  \"FLS\""}
{"question": "Find all the buildings that have a common building code", "query": "SELECT T1.building_code FROM Building_Structure AS T1 JOIN Building_Structure AS T2 ON T1.building_code  =  T2.building_code WHERE T1.building_code  <>  T2.building_code"}
{"question": "What is the average total rainfall during a month in the city of \"Sydney\"?", "query": "SELECT AVG(rain_mm) FROM rain_station WHERE city  =  \"Sydney\""}
{"question": "What is the total tax revenue by country in the year 2013?", "query": "SELECT T1.country,  T1.total_revenue FROM country AS T1 WHERE T1.year  =  2013"}
{"question": "What are the names, last names, and id of all drivers who have won at least one Formula A race?", "query": "SELECT T1.name,  T1.last_name,  T1.id FROM drivers AS T1 JOIN race AS T2 ON T1.race_id  =  T2._id WHERE T2.type  =  \"A\" AND T2.won  =  1;"}
{"question": "What are the first names of students who took at least 6 courses?", "query": "SELECT T1.student_fname,  T1.student_lname,  T4.crs_name FROM student AS T1 JOIN enroll_courses AS T2 ON T1.student_id  =  T2.student_id JOIN course_sections AS T3 ON T2.crs_code  = T3.crs_code JOIN course_sections AS T4 ON T3.course_code  = T4.course_code WHERE T4.crs_code  = \"CSCI\" AND T4.crs_name  =  \""}
{"question": "List the name of the student who has no friends", "query": "SELECT name_first,  name_last,  player_id FROM player AS T2 JOIN player_award AS T3 ON T2.player_id  =  (SELECT player_id FROM player AS T1 WHERE T1.name_first  =  T2.name_first AND T1.name_last  =  T2.name _last) GROUP BY T2.player_id ORDER BY count (DISTINCT T2.player_id) DESC"}
{"question": "Find the names of the movies that are from either the US or the Korea", "query": "SELECT T1.name FROM movie AS T1 JOIN country AS T2 ON T1.movie_id  =  T2.movie_id WHERE T2.country_code  =  \"US\" OR T2.country_code  ==  \"Korea\""}
{"question": "What is the name and surname of the employee who is responsible for all purchases of the company?", "query": "SELECT T1.name,  T1.surname FROM employees AS T1 WHERE T1.position  =  \"head\" AND T1.manager  =  \"T2\""}
{"question": "What is the name for the person whose last name starts with the letter P and is taking ACCT-121?", "query": "SELECT T1.name FROM student AS T1 JOIN instructor AS T2 ON T1.id  =  T2.student_id WHERE T2.name  =  'P' AND T2.course  =  'ACCT-121'"}
{"question": "What are the names, ages and locations of each student in the database?", "query": "SELECT T1.student_id,  T2.name,  T2.age,  T2.location FROM student AS T1 JOIN student_info AS T2 ON T1.id  = T2.id"}
{"question": "Find the names of all students who are in the class of 2016", "query": "SELECT name FROM student WHERE class_id  =  \"2016\""}
{"question": "Find the students who have a credit card in a bank where their parents have more than one", "query": "SELECT T1.student_id,  T1.first_name,  'Bank' AS bank_type,  T1.last_initial,  T1.address_type_code,  T1.city,  T1.state,  T1.zip_code,  T1.phone_number,  T1.email,  T1.credit_card_number,  T1.credit_limit,  T1.credit_status,  T1.credit_type,  T1.credit_balance,  T1.credit_date,"}
{"question": "what is the average time students spend in the gym?", "query": "SELECT AVG(T1.time_spent) FROM gym_attendance AS T1 WHERE T1.student_id  =  '1'"}
{"question": "What is the average number of gold medal for teams?", "query": "SELECT AVG(gold_medal) FROM team"}
{"question": "What are the names, ids and genders of the architects who are building a stadium?", "query": "SELECT name,  id,  gender FROM architects WHERE building_id  =  \"1\""}
{"question": "What is the name, address, and telephone number of the person who has a record of four accidents?", "query": "SELECT T1.person_id,  T1.name,  T1.[address],  T1.telephone_number FROM person AS T1 WHERE T1.accidents  =  4"}
{"question": "What is the average number of days of the week on which the first day of school falls, for each grade?", "query": "SELECT AVG(CASE WHEN WEEKDAY(date_of_school_start) = 1 THEN 1 ELSE 0 END) AS \"First Day of School\","}
{"question": "What are the names, birthdates and cities for the first student to register for the course?", "query": "SELECT student_id,  first_name,  last_name,  city,  birth_date FROM students WHERE student_id  =  1"}
{"question": "List the total number of employees who have received at least one raise", "query": "SELECT count(*) AS total FROM Employee WHERE raise_id  =  1"}
{"question": "What are the average hours of sleep of the students?", "query": "SELECT AVG(Hours_Sleep) FROM Student_Info"}
{"question": "What are the names, cities, and ages of all the members of the \"Dream Team\" that won the match?", "query": "SELECT name,  city,  age FROM members WHERE team_id  =  \"Dream Team\""}
{"question": "What is the average salary for all employees?", "query": "SELECT AVG(salary) FROM employees"}
{"question": "What is the total score for the team \"The Aces\"?", "query": "SELECT T1.score FROM team AS T1 JOIN match AS T2 ON T1.team_id  =  T2.\"The Aces\" WHERE T2.score  =  T1.score"}
{"question": "List all cars with a price greater than $120,000", "query": "SELECT T1.car_id,  T1.price_in_dollars FROM car AS T1 WHERE T1.price_in_dolls  >  120000"}
{"question": "What are the names, genders and job titles of all the professors?", "query": "SELECT name,  gender,  job_title FROM professor"}
{"question": "Find the names of all countries of the world", "query": "SELECT * FROM country"}
{"question": "What are the names and locations of all the cities, in ascending order of size?", "query": "SELECT T1.name,  T1.[location] FROM city AS T1 ORDER BY T1.[location] ASC"}
{"question": "What is the age of the three students?", "query": "SELECT T1.student_id,  T2.age FROM students AS T1 JOIN students AS T2 ON T1.id  =  T2.id"}
{"question": "Find the first name, last name and id of the employees that work in the office with id 3", "query": "SELECT T1.LastName,  T1.FirstName,  T2.id FROM employee AS T1 JOIN office AS T2 ON T1.id  =  T2.employee_id WHERE T2.id  =  3"}
{"question": "How many people have a certain attribute?", "query": "SELECT count(*) AS count FROM person WHERE age  =  '30'"}
{"question": "What are the names for the four seasons?", "query": "SELECT name FROM Season WHERE name IN (\"Spring\", \"Summer\", \"Autumn\", \"Winter\")"}
{"question": "What is the average age of all males at the University of Wisconsin?", "query": "SELECT T1.age FROM people AS T1 JOIN people AS T3 ON T1.id  = T3.id WHERE T3.gender_code  =  'M' AND T1.age  >  20"}
{"question": "What is the average temperature in New Mexico in February?", "query": "SELECT AVG(temp) FROM weather_data WHERE month = '02' AND year = '2018'"}
{"question": "List the names of the players with the highest and lowest number of points", "query": "SELECT T1.player_id,  T1.name,  T1.points FROM player AS T1 JOIN player_stats AS T2 ON T1.player_id  =  T2._id WHERE T2.year  =  2008 ORDER BY T2.points DESC, T1.points ASC"}
{"question": "what are the names and genders of the architects", "query": "SELECT name,  gender FROM architect WHERE gender  =  \"male\""}
{"question": "List the total number of students and the average number of courses taken", "query": "SELECT COUNT(*),  AVG(crs_credit) FROM student"}
{"question": "What is the average number of students in the town of the city of the state of the country of the university of the city?", "query": "SELECT AVG(T1.num_students) FROM Student AS T1 JOIN City AS T2 ON T1.city_id  =  T2.city_id JOIN State AS T3 ON T2.state_id  =  T3.state_id JOIN Country AS T4 ON T3.country_id  =  T4.country_id JOIN University AS T5 ON T4.university_id  =  T5.university_id WHERE T5.city_name  =  \"The City\" AND T5.state_name  =  \""}
{"question": "What are all the names of products that have an average rating of more than four stars?", "query": "SELECT T1.name FROM product AS T1 WHERE T1.rating  >  4"}
{"question": "(a question about a sql table) What is the number of students who are enrolled in the colleges with a student population greater than 2500?", "query": "SELECT COUNT(*) FROM student_courses WHERE student_id  IN (SELECT T1.student_id FROM student_courses AS T1 JOIN colleges AS T2 ON T1.college_id  =  T2.college_id WHERE T2.student_population  >  2500)"}
{"question": "What is the average score of the students in the course \"Database Theory\"?", "query": "SELECT avg(score) FROM students WHERE course = \"Database Theory\""}
{"question": "What are the names, types and IDs of the employees working in the sales department?", "query": "SELECT T1.name,  T1.type,  T1.id FROM employees AS T1 WHERE T1.department_id  =  \"Sales\""}
{"question": "Which of these products is a good example of an active ingredient?", "query": "SELECT T1.Product_name,  T1.Active_ingredient FROM product AS T1 WHERE T1.Active_ingredient  =  \"Aspirin\""}
{"question": "Examples of some or all task item(s):", "query": "SELECT COUNT(*),  state FROM customer WHERE credit  >  100"}
{"question": "What are the names, genders and nationalities, and ages of all drivers?", "query": "SELECT T1.name,  T1.gender,  T1.nationality,  T1.age FROM driver AS T1"}
{"question": "What is the first name and last name of the students who have at least one friend who has a dog?", "query": "SELECT T1.student_id,  T1.name_first,  (SELECT name_last FROM friends AS T2 WHERE T2.student_id  =  T1.student_id AND T2.friend_id  =  T1 .student_id) FROM student AS T1 GROUP BY T1.student_id HAVING count(DISTINCT T2.friend_id)  >=  1"}
{"question": "What are the names, title, and ID of all students who are enrolled in the course CSC-200?", "query": "SELECT T1.name,  T1.* FROM student AS T1 JOIN class AS T2 ON T1.stu_id  =  T2.[class_id] WHERE T2.name  =  \"CSC-200\""}
{"question": "What is the average score of the players who have scored at least 10 points?", "query": "SELECT sum(score) FROM player WHERE score  >  10"}
{"question": "what are the ids and details of all transactions", "query": "SELECT T1.id,  T2.name,  T3.amount,  T4.description,  T5.date_added,  T6.status,  T7.type,  T8.user_id,  T9.amount_paid,  T10.amount_refunded,  T11.amount_canceled,  T12.amount_paid_to_date,  T13.amount_refunded_to_date,  T14.amount_canceled_to_date,  T15.amount_paid_"}
{"question": "What are the names and locations of the products produced by the company named \"Makro\"?", "query": "SELECT T1.product_name,  T1.product_id,  T1.location_id FROM products AS T1 JOIN location AS T2 ON T1.location_id  =  T2.location_id WHERE T1.product_name  =  \"Makro\""}
{"question": "What are the names f the customers who buy cars that are not a hybrid or electric?", "query": "SELECT T1.customer_first_name, T1.customer_last_name, T1.customer.address_type_code FROM customers AS T1 JOIN customer_addresses AS T2 ON T1.address_id  =  T2.id WHERE T2.address_type_code  =  \"Residential\" OR T2.address_type_type  =  \"Business\""}
{"question": "How many points did each player get?", "query": "SELECT T1.player_id,  T1.score FROM player AS T1 JOIN score AS T2 ON T1.player_id  =  T2"}
{"question": "What are the names (first and last) of the customers who bought product \"pizza\" at least once?", "query": "SELECT T1.first_name,  T1.last_name FROM customer AS T1 WHERE T1.product_id  =  'pizza'"}
{"question": "What are the names, numbers, and ages of the people who saw the movie?", "query": "SELECT T1.name,  T1.number,  T1.age FROM people AS T1 JOIN movie AS T2 ON T1.person_id  =  T2.person_id"}
{"question": "find the name of the department that has least number of employees:", "query": "SELECT department_name FROM department WHERE count(*)  =  (SELECT min(count(*) FROM department)"}
{"question": "What is the name of the state where the university is located?", "query": "SELECT name FROM state WHERE city  =  \"New York\""}
{"question": "What do you do when you have a problem with the computer?", "query": "SELECT T1.answer FROM questions AS T1 WHERE T1.question  =  \"What do you do when you have a question about the computer?\""}
{"question": "What are the names and titles of all the editors?", "query": "SELECT T1.name,  T1.title FROM editor AS T1"}
{"question": "What is the name, last name and age of students whose names start with the letter A and end with the letter M?", "query": "SELECT T1.first_name,  T1.last_name,  T1.age FROM Students AS T1 WHERE T1.first_name  LIKE 'A%' AND T1.last_name  LIKE 'M%'"}
{"question": "What are the names and salaries of the employees in the following table?", "query": "SELECT employee_name,  employee_salary FROM employees"}
{"question": "Find the names of all the students who have been to the same college as you", "query": "SELECT T1.student_id,  T1.first_name,  'You' AS T2.name FROM students AS T1 JOIN students AS T2 ON T1.student_id  =  T2.student_id WHERE T1.student_id !=  T2.student_id"}
{"question": "What is the list of the top 8 best selling games?", "query": "SELECT T1.Name,  T1.Price,  T1.Sales FROM game AS T1 ORDER BY T1.Price DESC LIMIT 8"}
{"question": "find the name of the cities that are not adjacent to the city with the largest population", "query": "SELECT T1.city_name,  T2.city_id FROM city AS T1 JOIN city AS T2 ON T1.city_id  =  T2.city_id WHERE T1.population  >  T2.population"}
{"question": "Find the names of all the students that have a total of at least 100 points in the subject \"Computer Science\" in the year 2014", "query": "SELECT name FROM students WHERE total_points  >  100 AND subject_code = \"Computer Science\" AND year = 2014"}
{"question": "(a question about a sql table) The customer name is listed as \"Smith\" in the store's address", "query": "SELECT customer_name FROM customer WHERE customer_name = \"Smith\""}
{"question": "What is the first and last name of the customer that had the email \"luisg@embrar", "query": "SELECT T1.first_name,  T1.last_name FROM customer AS T1 WHERE T1.email  =  \"luisg@embrar\""}
{"question": "What are the average scores of students from each course? Return the results in the order of the course number", "query": "SELECT course_id,  AVG(score) FROM course_scores GROUP BY course_id"}
{"question": "Find the name of all professors who have the same name as the person who teaches \"Data Mining\"", "query": "SELECT T1.name FROM professor AS T1 JOIN faculty AS T2 ON T1.id  =  T2.prof_id WHERE T2.name  =  \"John Smith\""}
{"question": "Find the employee id of the employee with the highest yearly sales", "query": "SELECT T1.eid FROM Employee AS T1 JOIN Sales AS T2 ON T1.employee_id  =  T2.eid WHERE T2.sales  =  (SELECT max(sales) FROM Sales)"}
{"question": "What are the names and birthplaces of the members of the \"Taiwanese Association of the Deaf\"?", "query": "SELECT T1.first_name,  T1.last_name,  T1.birthplace FROM members AS T1 WHERE T1.member_id  =  (SELECT member_id FROM members WHERE first_name  =  \"Taiwanese Association of the deaf\")"}
{"question": "Find the names of all the students who have a grade of A in Physics", "query": "SELECT T1.fname,  T1.lname,  T1.gpa,  T1.stu_id FROM student AS T1 JOIN grade AS T2 ON T1.stu_id  =  T2.stu_id WHERE T2.grade  =  'A'"}
{"question": "Find the name of the course with the highest number of students", "query": "SELECT T1.course_id,  T1.student_count FROM course AS T1 JOIN students AS T2 ON T1.id  =  T2.id WHERE T2.course_id  =  (SELECT T3.course_id FROM course AS T3 JOIN students AS T4 ON T3.id  =  T4.id WHERE T4.course_id  =  \"$course_id\")"}
{"question": "(a novel question, about a field) give me the name of the movies whose producer's name is \"R", "query": "SELECT name FROM movie WHERE producer_name  =  \"R\""}
{"question": "What is the most popular product?", "query": "SELECT T1.product_id,  count(*) FROM products AS T1 GROUP BY T1.product_id ORDER BY count(*)  DESC LIMIT 1"}
{"question": "Find the names of all students who have never taken a course in department with number 200", "query": "SELECT T1.name FROM student AS T1 JOIN courses AS T2 ON T1.stu_id  =  T2._id WHERE T2.department_id  = 200"}
{"question": "How many countries have a population of greater than 50 million?", "query": "SELECT T1.country_name,  T1.population FROM countries AS T1 GROUP BY T1.country_name HAVING count(*)  =  1"}
{"question": "What are the names and ids of all employees who are either in the sales department or an advisor of the students?", "query": "SELECT T1.name,  T1.id FROM employee AS T1 JOIN employee_has_student AS T2 ON T1.id  =  T2.employee_id JOIN student AS T3 ON T3.id  =  T2.student_id WHERE T3.dept_id  =  'Sales' OR T3.dept_id = 'Advisor'"}
{"question": "Find the names of customers who have not had any transactions in a year, and who has no negative balance", "query": "SELECT T1.customer_id,  T2.name,  T3.amount,  T4.date_from,  T5.date_to,  T6.status FROM customers AS T1 JOIN transactions AS T2 ON T1.id  = T2.customer_id JOIN customers AS T3 ON T2.customer_id  =  T3.id JOIN transactions AS T4 ON T3.id  =  T4.customer_id JOIN customers AS  T5 ON T4.customer_id  =  'T5' JOIN transactions AS T6 ON"}
{"question": "What is the age of the top 3 players in the last decade?", "query": "SELECT T1.age FROM player AS T1 WHERE T1.year  >  2000 ORDER BY T1.age DESC LIMIT 3"}
{"question": "Find the id of the employee named after a first name", "query": "SELECT T1.id FROM employees AS T1 JOIN people AS T3 ON T1.first_name  =  T3.first_name WHERE T3.last_name  =  \"Smith\""}
{"question": "Find the name of all the countries where the currency is the lira", "query": "SELECT T1.Country_name FROM Country AS T1 WHERE T1.Currency_code = \"Lira\""}
{"question": "How many countries have more than one city of the same name?", "query": "SELECT T1.country_id,  T1.country_name,  T1.city_id,  T1.city_name,  T1.population FROM country AS T1 JOIN city AS T2 ON T1.city_id  =  T2.city_id WHERE T1.country_id  >  0 AND T1.city_name  =  'New York' AND T1.city_name!=  'New York'"}
{"question": "What are the names, ids and grades of the students in the class named \"English IV\" for the fall semester of 2015?", "query": "SELECT T1.student_name,  T1.student_id,  T1.grade FROM students AS T1 JOIN class AS T2 ON T1.student_id  =  T2.\"English IV\""}
{"question": "What is the average score for all students who had a test score of 1000 or more in Physics?", "query": "SELECT AVG(Score) FROM test_scores WHERE Score >= 1000"}
{"question": "What is the first letter and the number of characters of the name of each employee?", "query": "SELECT T1.first_name,  T1.last_name,  T1.position_id,  T1.position_name,  T1.department_id,  T1.department.department_name,  T1.salary,  T1.start_date,  T1.end_date,  T1.city,  T1.state,  T1.country,  T1.zip_code,  T1.phone_home,  T1.phone_cell,  T1.fax_home,  T"}
{"question": "what are all the distinct last names of those students?", "query": "SELECT DISTINCT T2.last_name FROM students AS T1 JOIN student_course AS T2 ON T1.id  =  T2.id WHERE T1.id  =  (SELECT MAX(id) FROM students)"}
{"question": "What is the average amount spent on each product for the suppliers that is not in the top 10 by total revenue?", "query": "SELECT T1.product_id,  T1.total_revenue,  T1.avg_price FROM products AS T1 JOIN (SELECT product_id,  total_revenue,  avg(price) AS avg_price FROM products GROUP BY product_id) AS T2 ON T1.product_id  =  T2.[product_id] WHERE T1.total_revenue  <  T2.avg_price"}
{"question": "list the state where the largest number of employees reside, and the number of distinct employees who live there", "query": "SELECT state_name,  count(*) FROM employee WHERE state_id  =  'CA' GROUP BY state_id"}
{"question": "What is the total amount of all bank transactions in the database?", "query": "SELECT SUM(amount) FROM bank_transactions"}
{"question": "display the full name (first and middle) and hire date for those employees whose first name does contain the letter M and make the result list in ascending order by", "query": "SELECT T1.full_name,  T1.hire_date FROM employees AS T1 WHERE T1.first_name  LIKE  \"M%\" ORDER BY T1.hire_date ASC"}
{"question": "What are the first three letters of each first name?", "query": "SELECT T1.firstname FROM person AS T1 WHERE T1.firstname  LIKE 'A%' OR T1.firstname  LIK'%A' OR T1.firstname LIKE 'B%' OR T1.first_name LIKE 'C%'"}
{"question": "what is my age?", "query": "SELECT T1.age FROM student AS T1 WHERE T1.id  =  '1'"}
{"question": "What are the ids of the artists who have no record of any songs?", "query": "SELECT T1.artist_id FROM artist AS T1 WHERE NOT EXISTS (SELECT T2.artist_id FROM track AS T2 WHERE T2.track_id = T1.track_id)"}
{"question": "return all the statistics for the document named \"David CV\"", "query": "SELECT * FROM document_stats WHERE document_name = \"David CV\""}
{"question": "(a question about a sql table) Find all employees who have an income over 100000", "query": "SELECT T1.name FROM employee AS T1 WHERE T1.salary  >  100000"}
{"question": "What are the names and the number of flights of flight 876?", "query": "SELECT name,  count(*) FROM flights WHERE flight_number = 876"}
{"question": "What are the names, birthdays and heights of all students?", "query": "SELECT T1.name,  T1.birthday,  T1.height FROM student AS T1"}
{"question": "What are the names and salaries of all employees who have no salary?", "query": "SELECT T1.first_name,  T1.last_name,  T1.salary FROM employees AS T1 WHERE salary  =  0"}
{"question": "Give the names of the employees whose salaries are less than $1200", "query": "SELECT T1.employeeid,  T1.name,  T1.salary FROM employee AS T1 WHERE T1.salary  <  1200"}
{"question": "Find the name of the employee who took the most number of sick days in 2010", "query": "SELECT T1.last_name,  T1.first_name FROM employees AS T1 WHERE T1.id  =  (SELECT employeeid FROM employees WHERE last_name  =  \"Smith\" AND first_name  =  \"John\" AND year(leave_start_date)  =  2010)"}
{"question": "What is the average price of a car in the whole USA?", "query": "SELECT AVG(price) FROM car;"}
{"question": "What are the names, places, and amounts of the expenses of each person in the following table?", "query": "SELECT T1.name,  T1.place,  T1.amount FROM expenses AS T1 WHERE T1.person_id  =  \"1\""}
{"question": "What are the names in the department who have the highest average gpa? - How many students are there in the department?", "query": "SELECT name FROM department AS T1 JOIN student AS T2 ON T1.department_id  =  T2.department_id WHERE T2.gpa  >  '0.8'"}
{"question": "List the names, ids and salaries of all employees who work in the \"Computer Graphics\" department", "query": "SELECT T1.employee_id,  T1.name,  T1.[salary] FROM employee AS T1 JOIN department AS T2 ON T1.department_id  =  T2.[department_id] WHERE T2.name  =  \"Computer Graphics\""}
{"question": "find the average, minimum, maximum, sum, and median for all products", "query": "SELECT AVG(price) AS avg, MIN(price) AS min, MAX(price) AS max, SUM(price) AS sum, median(price) AS median FROM products;"}
{"question": "Show the name of all employees who have their home address in the city of San Francisco", "query": "SELECT T1.name FROM employees AS T1 JOIN employee_address AS T2 ON T1.employee_id  =  T2.employee_id WHERE T2.city  =  'San Francisco'"}
{"question": "What is the average age of the employees who work in the accounting department?", "query": "SELECT AVG(age) FROM employee WHERE department_id  =  \"accounting\""}
{"question": "\"the name of the student who has the", "query": "SELECT T1.student_id,  T2.name FROM student AS T1 JOIN student_course_enrolment AS T2 ON T2.student_id  =  t1.student_id WHERE T1.course_id  =  'CSCI101'"}
{"question": "How many students are there in the class with the first name of \"Ella\"?", "query": "SELECT count(*)  FROM students WHERE firstname = \"Ella\""}
{"question": "What are the names, types and number of employees under the \"Management Department\"?", "query": "SELECT T1.name,  T1.type,  T1.number FROM employees AS T1 WHERE T1.department_code  =  \"Management Department\""}
{"question": "What is the average age of employees in different departments?", "query": "SELECT AVG(age) FROM employee WHERE department_id  =  'IT'"}
{"question": "display the job title of jobs which average salary is greater than 10000", "query": "SELECT T1.job_title,  T2.salary FROM job AS T1 JOIN salary AS T2 ON T1.job_id  =  T2.job_id WHERE T2.salary  >  10000"}
{"question": "What are the details (of an object) about a car?", "query": "SELECT name FROM car WHERE car_id  =  \"1\""}
{"question": "find the students who have a degree in math, but none of them are engineers", "query": "SELECT T1.student_id,  T1.name_first,  \"T1.name_last\" FROM student AS T1 JOIN student_has_degree AS T2 ON T1.student_id  =  T2.\"T1.student_id\" WHERE T2.degree_id  =  \"T1.degree_id\" AND T2.degree_name  =  \"math\" AND T2.degree_type  =  \"Bachelor\""}
{"question": "What is the average, maximum, minimum, and total transaction amounts?", "query": "SELECT AVG(amount), MAX(amount), MIN(amount), SUM(amount) FROM transactions;"}
{"question": "show the numbers of customers having a car and having purchased a car", "query": "SELECT count(*) AS cnt FROM customers WHERE customer_has_car  =  1 AND customer_has_car  = 1"}
{"question": "How many of the students are from California?", "query": "SELECT count(*) AS c FROM student AS T1 WHERE T1.city_code  =  \"CA\""}
{"question": "(What is the average number of hours worked by employees who work on Saturdays in a week), after \"? : \"", "query": "SELECT AVG(Hours) FROM employees WHERE Day_of_week  =  \"Saturday\""}
{"question": "What are the names and addresses of all the restaurants in the city of Boston, with the highest number of customers?", "query": "SELECT name,  address FROM restaurant WHERE count(*)  =  (SELECT count(*) FROM restaurant WHERE count(*)  >  (SELECT count(*) FROM customer WHERE customer.city  =  \"Boston\")"}
{"question": "list the ids and names of all the employees who are in the accounting department", "query": "SELECT T1.employee_id,  T1.first_name,  \"T1.last_name\" FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.id WHERE T2.name  =  \"Accounting\""}
{"question": "List the names of the employees who have a commission greater than 1000", "query": "SELECT T1.firstname,  T1.lastname,  T1.empno,  T1.job,  T1.comm,  T1.salary,  T1.deptno,  T1.emp_lname,"}
{"question": "task = a question about a sql table (should be in the format you specified)", "query": "SELECT * FROM table_name"}
{"question": "What is the name, rank, and city of the person with first name \"Aaron\" and last name \"Swartz\"?", "query": "SELECT T1.name,  T1.rank,  T1.city FROM Person AS T1 WHERE T1.first_name  =  \"Aaron\" AND T1.last_name  =  \"Swartz\""}
{"question": "find the names of the people who are taller than a person named \"Sandra\"", "query": "SELECT T1.person_name FROM people AS T1 WHERE T1.height  >  \"Sandra\""}
{"question": "Find the number of employees of the company \"GTECH\"", "query": "SELECT COUNT(*) FROM employees WHERE company_name  =  \"GTECH\""}
{"question": "How many products do we have?", "query": "SELECT count(*)  FROM products"}
{"question": "Find the number of all the countries that have at least one city in the United States", "query": "SELECT count(*) AS count FROM country WHERE country_code  =  'USA'"}
{"question": "What are the names (first and last name) of all the students in room 111?", "query": "SELECT T1.first_name,  T1.last_name FROM students AS T1 WHERE T1.room_id  =  '111'"}
{"question": "What are the names for all products that were released in 2013, and have had the most sales worldwide?", "query": "SELECT T1.product_name,  T1.sales_rank FROM sales AS T1 JOIN products AS T2 ON T1.prod_id  =  T2._id WHERE T1.year  =  2013 GROUP BY T1.product_name ORDER BY T1.sales_rank DESC"}
{"question": "Find the average age, years of education, and number of children of the faculty members, in order of the number of children", "query": "SELECT T1.age,  T1.years_of_education,  T1.number_of_children FROM faculty AS T1 WHERE T1.number_of_children  =  (SELECT MAX(T2.number_of_children) FROM faculty AS T2 WHERE T2.id  =  T1.id)"}
{"question": "What is the id of the product with the highest price?", "query": "SELECT T1.id FROM product AS T1 WHERE T1.price  =  (SELECT MAX(T2.price) FROM product AS T2)"}
{"question": "What is the number of students in the class taught by some professor of the accounting department?", "query": "SELECT COUNT(*),  name FROM professor WHERE department_id  =  \"accounting\""}
{"question": "What are all the names of the countries in which the employee ids (IDs) are located?", "query": "SELECT DISTINCT name FROM country WHERE country_id IN (SELECT employee_id FROM employee)"}
{"question": "\"Find the name and number of customers who have the longest distance between themselves and another customer", "query": "SELECT DISTINCT C1.customer_id,  C1.distance_from_customer AS distance_from_customer_1,  C2.distance_from_customer AS  distance_from_customer_2 FROM customer AS C1 JOIN customer AS C2 ON C1.customer_id  =  C2.customer_id AND C1.customer_id  <>  C2.customer_id GROUP BY C1.customer_id, C2.customer_id HAVING distance_from_customer_1  >  distance_from_customer_1 AND distance_from"}
{"question": "(for another question, just change this part)", "query": "(the sql query to answer the query)"}
{"question": "What is the full address of the president of the company that has the lowest revenue?", "query": "SELECT T1.address FROM company AS T1 WHERE T1.revenue  =  (SELECT min(T2.revenue) FROM company AS T2)"}
{"question": "What is all the job history info of employees earning a salary greater than or even than 12000, and less than or equal to 12600?", "query": "SELECT T1.emp_id,  T1.job_id,  T1.salary,  T1.start_date,  T1.end_date,  T1.start_time,  T1.end_time,  T1.job_title,  T1.job_desc,  T1.job_location,  T1.job_type,  T1.job_status,  T1.job_date,  T1.job_time,  T1.salary_date,  T1.salarydate,"}
{"question": "find the number of employees in the department of human resources", "query": "SELECT count(*)  FROM employee WHERE department  =  'Human Resources'"}
{"question": "What is the average salary of an engineer working in the company with the phone number (212)555-1212?", "query": "SELECT avg(salary) FROM employee WHERE phone_number = \"212-555-1212\""}
{"question": "What is the name for the company that has the most employees and has the highest rate of employee turnover?", "query": "SELECT T1.name FROM companies AS T1 JOIN employees AS T2 ON T1.company_id  =  T2.company_id WHERE T2.name  =  \"ABC Inc.\" AND T2.turnover  =  \"high\""}
{"question": "Count the number of countries that have the letter T as their capital", "query": "SELECT T1.capital FROM country AS T1 WHERE T1.capital  =  'T'"}
{"question": "\"Find all students who are from New York City and have at least one sibling", "query": "SELECT T1.name,  T2.name FROM student AS T1 JOIN student AS T2 ON T1.city  =  T2.city AND T1.stuid  = T2.stuid WHERE T1.stuid  = '1' AND T2.stuid  = '2'"}
{"question": "What are the first three letters of the name of the city with the largest population?", "query": "SELECT name FROM city WHERE population  >  \"Largest\""}
{"question": "What are the names and addresses of all students that have never been assigned to a different course than they started?", "query": "SELECT T1.student_id,  T1.name_first,  'T1.name_last' FROM student AS T1 WHERE T1.course_id  =  'T2.course_id' AND T1.course_id !=  'T3.course_id'"}
{"question": "How many professors are in the department of computer science?", "query": "SELECT T1.name FROM professor AS T1 JOIN department AS T3 ON T1.department_code  =  T3.department_code WHERE T3.department_code  = 'CS'"}
{"question": "How much is the total value of all products?", "query": "SELECT SUM(Amount_Payment) FROM Pay_ments"}
{"question": "What are the names, addresses and ages of students in the city of New York?", "query": "SELECT T1.name,  T1.address,  T1.age FROM students AS T1 WHERE city_id  =  \"New York\""}
{"question": "find the first names of all the authors that have written a paper with title containing \"Functional\"", "query": "SELECT T1.first_name FROM authors AS T1 WHERE T1.title  LIKE '%Functional%'"}
{"question": "What is the first letter of the name of the company of the student with first name \"Michael\"", "query": "SELECT T1.first_name FROM student AS T1 WHERE T1.first_name  =  \"Michael\""}
{"question": "find all the names that contain in their name the word \"Ryley\"", "query": "SELECT T1.name FROM people AS T1 WHERE T1.name LIKE '%Ryley%'"}
{"question": "What are the names, locations and salaries of all the restaurants, listed in descending order by the total number of employees?", "query": "SELECT T1.Name,  T1.Location,  T1.Salary FROM restaurant AS T1 JOIN employee AS T2 ON T1.employe_id  =  T2.employee_id WHERE T2.emp_num  >  0 ORDER BY T1.emp_num DESC"}
{"question": "Generate a question about a different table", "query": "SELECT T1.name FROM students AS T1 JOIN teachers AS T2 ON T1.teacher_id  =  T2.\"id\" WHERE T2.name  =  \"John\""}
{"question": "What are the names, emails and genders of all the employees at a certain company?", "query": "SELECT name,  email,  gender FROM employees WHERE company_id = \"company_id\""}
{"question": "List all departments with the number of employees in them", "query": "SELECT Department,  COUNT(*) FROM employee GROUP BY Department"}
{"question": "How many students have had a first name that is equal to the name of the student?", "query": "SELECT T1.first_name,  T1.last_name,  T1.id FROM student AS T1 WHERE T1.first_name  =  \"John\""}
{"question": "What is the total number of documents in the table with the status \"done\" and the type \"Paper\" which are not yet shipped by the shipping agent named", "query": "SELECT count(*) from documents WHERE status = \"done\" AND type = \"Paper\" AND shipping_agent_id IS NULL"}
{"question": "What are the names and ids of the students who are more than 18 years old?", "query": "SELECT T1.name,  T1.id FROM student AS T1 WHERE T1.age  >  18"}
{"question": "What are the names, full names, and birth years of those employees whose names start with the letters A through H?", "query": "SELECT T1.first_name,  T1.last_name,  T1.birth_year FROM employee AS T1 WHERE T1.first_name  LIKE \"A%\" OR T1.last_name  LIKE \"A%\" OR T1.birth_year  LIKE \"A%\""}
{"question": "Find the average age of all males in the US", "query": "SELECT avg(age) FROM person WHERE gender = \"male\""}
{"question": "Find the names of all products which are sold in the year 2010", "query": "SELECT T1.product_name FROM products AS T1 WHERE T1.date_of_sale  =  '2010'"}
{"question": "What are the last three names of the employees in the IT department of the university?", "query": "SELECT T1.lastname FROM employee AS T1 WHERE T1.department_id  =  'IT' AND T1.emp_num  >  '1' AND T1.emp_lastname  NOT IN ( 'Smith', 'Jones', 'Brown', 'Williams', 'Smith', 'Jones', 'Smith', 'Jones',  'Brown', 'Williams', 'Smith' )"}
{"question": "show the names of colleges that have at least two students", "query": "SELECT T1.college_name,  T2.student_name FROM college AS T1 JOIN student AS T2 ON T1.college_id  =  T2._id WHERE T2.student_id  IN (SELECT T3.student_id FROM student AS T3 WHERE T3.student_id  IN ( SELECT T4.student_id FROM student AS t4 WHERE t4.student_id  IN (... ) ) )"}
{"question": "What are the names, genders, and nationalities of all the members of the football team?", "query": "SELECT name,  gender,  nationality FROM team WHERE team_id  =  \"1\""}
{"question": "What is the most common first name and last name in the US?", "query": "SELECT DISTINCT first_name,  last_name FROM people WHERE first_name  =  'John' AND last_name  =  'Smith'"}
{"question": "Give the names of all guests who stayed in the room 211 in the year 2004", "query": "SELECT T1.name FROM guest AS T1 JOIN room AS T2 ON T1.room_id  =  T2T1.room_id WHERE T2.year  =  2004 AND T2.room_id  =  211"}
{"question": "\"What are the names of customers with account balance less than 1000?\"", "query": "SELECT customer_id,  customer_first_name,  customer_last_name,  customer_address,  customer_city,  customer_state,  customer_zip,  customer_country,  customer_phone,  customer_fax,  customer_email,  customer_email_type,  customer_email_address,  customer_email_primary,  customer_email_type_code,  customer_email_address_type,  customer_email  FROM customers WHERE account_balance  <  1000"}
{"question": "What are the names, last names and salaries of the employees that have the last name Smith?", "query": "SELECT T1.name,  T1.lastname,  T1.salary FROM employees AS T1 WHERE T1.lastname  =  \"Smith\""}
{"question": "Find the names of all students who are in the grade of 11th or lower", "query": "SELECT T1.student_name FROM student AS T1 WHERE T1.grade  <  11"}
{"question": "What are all the names of people with the last name of \"Smith\"?", "query": "SELECT name FROM Person AS T1 WHERE T1.last_name  =  \"Smith\""}
{"question": "show the list of all available courses", "query": "SELECT T1.course_code,  T1.course_name FROM course AS T1 JOIN courses AS T2 ON T1.course_id  =  T2.course_id WHERE T2.course_code  =  \"1\""}
{"question": "(a novel question, about a table called \"Question\"): What are the names of the teams that won the most games in the year 2004?", "query": "SELECT T1.team_name FROM team AS T1 JOIN wins AS T2 ON T1.team_id  =  T2.team_id WHERE T2.year  =  2004"}
{"question": "How many students are there in the University of Minnesota?", "query": "SELECT COUNT(*) AS \"count\" FROM students"}
{"question": "What are the names, ids and salaries of employees in the same department as someone who's first name is \"Clara\" and whose hire date is after the", "query": "SELECT T1.name,  T1.id,  T1.salary FROM employees AS T1 JOIN employee_salary AS T2 ON T1.id  =  T2.employee_id WHERE T2.first_name  =  \"Clara\" AND T2.hire_date  >  \"2014-01-01\""}
{"question": "How many employees work in a department with anyone whose name contains a ’T’?", "query": "SELECT T1.employee_id,  T1.department_id,  T1.name_first,"}
{"question": "what city is the highest income in the city?", "query": "SELECT city,  SUM(income) FROM city_income GROUP BY city ORDER BY city DESC LIMIT 1"}
{"question": "What are the names and salaries of all employees who earn an annual salary of more than 5000 pounds?", "query": "SELECT T1.name,  T1.salary FROM employees AS T1 WHERE T1.salary  >  5000"}
{"question": "what are the names and id number of employees who get a salary of over 200000", "query": "SELECT T1.NAME,  T2.ID FROM employees AS T1 JOIN employees_salary AS T2 ON T1.id  = T2.id WHERE T2.salary  >  200000"}
{"question": "What is the name, address and phone number of the restaurant that has the most customers at the time of the year?", "query": "SELECT T1.Name,  T1.Address,  T1.Phone FROM Restaurant AS T1 WHERE T1.Total_Customers  =  (SELECT MAX(T2.Total_Customers) FROM Restaurant AS T2)"}
{"question": "What are the first few letters of the names of two companies that are not the same, but have the same name", "query": "SELECT T1.name FROM companies AS T1 WHERE T1.name  NOT IN (SELECT T2.name FROM companies AS T2)"}
{"question": "what are the names of the countries that border the three largest countries in each continent?", "query": "SELECT T1.Continent,  T1.Country,  T1.Continent_name FROM Continent AS T1 JOIN Country AS T2 ON T1.Continent_id  =  T2.Continent_id WHERE T2.Continent_id  IN ( SELECT T3.Continent_id FROM Country AS T3 WHERE T3.Continent_name  =  \"Africa\" ) AND T2.Continent_name  IN ( SELECT T4.Continent_name FROM Country AS T4 WHERE T4.Continent_name  = \"Europe\" )"}
{"question": "Find the names of the graduates of the first year of the course QM-261 (in alphabetical order)", "query": "SELECT T1.name FROM student AS T1 JOIN course AS T2 ON T1.id  =  T2.id WHERE T2.course_id  =  'QM-261'"}
{"question": "Which city has the most population?", "query": "SELECT city_name,  count(*)  FROM city_population GROUP BY city_name ORDER BY count(*) DESC"}
{"question": "for each year, return the sum of the hours worked in that year", "query": "SELECT YEAR(Date_Worked),  SUM(Hours_Worked) FROM employee WHERE YEAR(Date_Worked  )  =  \"$year\""}
{"question": "How many users have their phone numbers in the first and last name?", "query": "SELECT T1.first_name,  T1.last_name,  T1.phone_number FROM user_profile AS T1 WHERE T1.phone_number  IN  ( SELECT T2.phone_number FROM user_phone AS T2 WHERE T2.user_id  =  T1.user_id )"}
{"question": "show the first and last name of all employees who live in New York", "query": "SELECT T1.first_name,  T1.last_name FROM employees AS T1 WHERE T1.city  =  'New York'"}
{"question": "What is the average number of degrees for each student?", "query": "SELECT T1.degree_count FROM student AS T1 JOIN degrees AS T3 ON T1.id  =  T3.id"}
{"question": "what are the names and salaries of the assistant managers?", "query": "SELECT T1.first_name,  T1.last_name,  T1.salary FROM Employee AS T1 JOIN Manager AS T2 ON T1.employee_id  =  T2._id WHERE T2.assistant_id  =  '1'"}
{"question": "What are the names, dates, and places of birth for each customer?", "query": "SELECT customer_id,  customer_name,  customer_dob,  customer_place_of_birth FROM customer"}
{"question": "What are the names, country and birth years of each person born in a certain city?", "query": "SELECT T1.firstname,  T1.lastname,  T1.country,  T1.[birth_year] FROM person AS T1 WHERE T1.city  =  \"Paris\""}
{"question": "What are the first two names of the employees who has the same id?", "query": "SELECT T1.first_name,  T1.last_name FROM employee AS T1 WHERE T1.id  =  (SELECT T2.id FROM employee AS T2 WHERE T2.id  =  (SELECT MIN(T3.id) FROM employee AS T3))"}
{"question": "What is this?", "query": "SELECT name FROM table WHERE name = \"this\""}
{"question": "Display the names of employees with the same first name as that of the author of this book", "query": "SELECT T1.employee_id,  T1.name_first,  count(*) FROM employee AS T1 JOIN author AS T2 ON T1.employee_id  =  T2.employee_id GROUP BY T1.employee_id HAVING count(T2.name_first)  =  1"}
{"question": "What are the names, ids and ages of all the employees, and where are they located?", "query": "SELECT T1.name,  T1.* FROM employee AS T1 JOIN location AS T2 ON T1.location_id  =  (SELECT location_id FROM location WHERE name  =  \"New York\")"}
{"question": "What are the number of customers who have an account with a credit score less than 250?", "query": "SELECT COUNT(*) FROM customers WHERE credit_score  <  250"}
{"question": "Find the number of male (sex is M) students who have class senate votes in the fall election cycle? (Use the sample data", "query": "SELECT count(*) AS \"number of students\" FROM student AS T1 JOIN class_senate AS T2 ON T1.student_id  =  T2.student_id WHERE T1.sex  =  'M' AND T2.election_year  =  'Fall'"}
{"question": "Show the full name of employees who have worked for the company for more than 30 years and have more than $10,000 annual salary", "query": "SELECT T1.FirstName,  T1.LastName,  T1.Salary,  T1.Years_at_Company,  T1.Hourly_Rate,  T1.Hour_Worked,  T1.Hour  FROM Employee AS T1 WHERE T1.Hourly_Rate  >  0.00 AND T1.Hourly_rate  >  0.00 AND (T1.Hour_WorkED  >  0 OR T1.Hour_WorkED IS NULL) AND T1.Years_at"}
{"question": "What is the number of unique addresses and the total number of customers?", "query": "SELECT count(*) AS total_count,  count(*) AS unique_count FROM customers"}
{"question": "What is the average age of the members in The Club?", "query": "SELECT AVG(age) FROM members WHERE club_id  =  \"The Club\""}
{"question": "Find all the people who have worked for both Microsoft and Intel", "query": "SELECT T1.name,  T2.name FROM employees AS T1 JOIN employees AS T2 ON T1.company_id  =  T2.company_id"}
{"question": "Who are the customers who bought product \"food\"?", "query": "SELECT T1.name FROM customer AS T1 JOIN product AS T2 ON T1.Customer_ID  =  T2.Customer_ID WHERE T2.name  =  \"food\""}
{"question": "Show the name and age of all employees that have the same birthday as another employee", "query": "SELECT name,  age FROM employees WHERE birthday  =  \"John Doe\""}
{"question": "What are the first names and ages of the students who have failed to get a job?", "query": "SELECT T1.FirstName,  T1.Age FROM student AS T1 WHERE T1.Status  =  'failed'"}
{"question": "Find the names of all songs in English with the title \"We Don't Talk Anymore\"", "query": "SELECT T1.name FROM songs AS T1 JOIN songs_lyrics AS T2 ON T1.name  =  T2.name WHERE T2.lyrics  =  \"We Don't Talk Anymore\";"}
{"question": "How many employees do you see in this picture?", "query": "SELECT T1.name FROM employees AS T1 WHERE T1.picture  LIKE \"%\""}
{"question": "What are the names and home states of all members of the board of trustees of the college?", "query": "SELECT T1.name,  T1.state FROM board_members AS T1 WHERE T1.name  =  \"John Smith\""}
{"question": "What are the names that have the maximum number of words?", "query": "SELECT T1.word_count FROM words AS T1 WHERE T1.word_count  =  (SELECT MAX(T2.word_count) FROM words AS T2)"}
{"question": "What are the names and country of origins for all artists whose song rating is above 9?", "query": "SELECT artist_name,  country_name FROM artist WHERE song_rating  >  9"}
{"question": "Find the name of student who has all the titles of books, and who is not a doctor", "query": "SELECT T1.student_id,  T1.first_name,  first_name,  T1_2.title,  T1_3.title,  T1_4.title,  T1_5.title,  T1_6.title,  T1_7.title,  T1_8.title,  T1_9.title,  T1_10.title,  T1_11.title,  T1_12.title,  T1_13.title,  T1_14.title,  T1"}
{"question": "How many residents do have the average income of 100", "query": "SELECT COUNT(*),  AVG(income) FROM resident"}
{"question": "What are the ids of the authors who wrote the most books?", "query": "SELECT T1.author_id FROM authors AS T1 JOIN books AS T2 ON T1.author_id  =  T2.author_id GROUP BY T1.author_id ORDER BY T1.author_id DESC"}
{"question": "What is the name and age of all males who are married?", "query": "SELECT T1.FirstName,  T1.LastName,  T1.Age FROM Player AS T1 WHERE T1.Married = 'Y' AND T1.Gender = 'M'"}
{"question": "What are the names, and the age of all students, who scored 5 or more on their final exam?", "query": "SELECT T1.name,  T1.* FROM student AS T1 WHERE T1.score  >=  5"}
{"question": "What are the names and phone numbers of customers who do not have address?", "query": "SELECT customer_id,  customer_first_name,  customer_last_name,  customer_address,  customer_phone_number FROM customers WHERE customer_address  =  \"\""}
{"question": "What is the average grade of students in classes with the last name Smith?", "query": "SELECT AVG(grade) FROM Student WHERE last_name  =  \"Smith\""}
{"question": "What is the maximum number of students in the program \"computer science\" in the year 2012?", "query": "SELECT MAX(T1.student_id) FROM student_program AS T1 WHERE T1.program_id  =  'computer science'"}
{"question": "What is the total amount of revenue for the company in the year 2014?", "query": "SELECT sum(total_revenue) FROM company"}
{"question": "What is the average rating of films produced by female artists?", "query": "SELECT AVG(rating) FROM films WHERE director_id  =  (SELECT id FROM artists WHERE gender_code  =  \"Female\")"}
{"question": "How many movies are about computer science?", "query": "SELECT DISTINCT title FROM movie WHERE subject  =  \"computer science\""}
{"question": "What is the name of the student with the most credits?", "query": "SELECT T1.name FROM students AS T1 JOIN credits AS T2 ON T1.id  =  T2.id WHERE T2.student_id  =  'T1.id'"}
{"question": "Find the average rating for left-footed players and right-footed players", "query": "SELECT AVG(rating) FROM player WHERE footed = \"left\""}
{"question": "Find the details of the vehicle with id 2", "query": "SELECT * FROM vehicle WHERE id  =  2"}
{"question": "What is the title of the song that was sung in the stadium that is located at latitude 36", "query": "SELECT T1.title FROM Songs AS T1 JOIN Songs_Lyrics AS T2 ON T1.SongID  =  T2.SongID WHERE T2.Latitude  =  36"}
{"question": "Find the name of the employee who was the last person to receive an email from Nancy Edwards", "query": "SELECT T1.name FROM employees AS T1 JOIN email_history AS T2 ON T1.employee_id  =  T2._employee_id WHERE T2.email_from  =  \"Nancy Edwards\""}
{"question": "Can you please give me the names of the people who have been involved in the creation of the company?", "query": "SELECT T1.name FROM company AS T1 JOIN founder AS T2 ON T1.company_id  =  T2.id WHERE T2.name  =  'John Doe'"}
{"question": "What is the name and city of all the cities in the table that are contained in the same city?", "query": "SELECT T1.city_name,  T2.city_name FROM city AS T1 JOIN city AS T2 ON T1.id  = T2.id WHERE T1.id  =  '1' AND T2.id  =  '2'"}
{"question": "Find the names of students who have no friends and have taken no course", "query": "SELECT name FROM Student WHERE (NOT EXISTS (SELECT * FROM Friendship WHERE Student1.id = Student2.id AND Student2.id = Student1.id)) AND (NOT EXISTS (SELECT *  FROM Course WHERE Student1.id = Course.student_id))"}
{"question": "What is the name and age of the customer who made the most number of orders in the past two years?", "query": "SELECT T1.customer_first_name, T1.customer_last_name, T1.customer.age FROM customers AS T1 JOIN orders AS T2 ON T1.order_id  =  T2_id WHERE T2.date_added  >  (SELECT max(date_added) FROM orders WHERE date_added  >  (SELECT date_added FROM orders WHERE date_added  <  (SELECT date_added FROM customers WHERE customer_id  =  T1.customer_id ) ) ) AND T2.date_added  <  (SELECT min(date"}
{"question": "Return the name and id of all persons who are named \"Elliott\"", "query": "SELECT T1.fname,  T1.lname FROM person AS T1 WHERE T1.fname  =  \"Elliott\""}
{"question": "What is the population of the first town?", "query": "SELECT T1.population FROM town AS T1"}
{"question": "What are the names, rank, and salaries of all managers with a title of \"President\"?", "query": "SELECT name,  rank,  salary FROM managers WHERE title  =  \"President\""}
{"question": "Can you please explain in details about your work experience?", "query": "SELECT T1.name_first,"}
{"question": "What is the last name and age of the customer who has email \"luisg@sbcglobal", "query": "SELECT T1.last_name,  T1.age FROM customer AS T1 WHERE T1.email  =  \"luisg@sbcglobal\""}
{"question": "Find the names of the customers who have at least one product that has the status \"Sold Out\" and the status \"Pending", "query": "SELECT customer_id,  customer_first_name,  customer_last_name,  COUNT(*) FROM customers WHERE customer_status  =  'Sold Out' AND customer_status  =  'Pending' GROUP BY customer_id"}
{"question": "What is the maximum resolution of songs?", "query": "SELECT max(resolution) FROM song"}
{"question": "List the names of all the departments that have more than 50 employees", "query": "SELECT T1.department_name FROM department AS T1 WHERE T1.employee_count  >  50"}
{"question": "Give the names of the employees at the company", "query": "SELECT name FROM employee"}
{"question": "How many students are in the student club \"Quiet\"?", "query": "SELECT count(*) from students WHERE student_club_code  =  \"Quiet\""}
{"question": "What are the total number of games of the different genres?", "query": "SELECT T1.genre,  T2.games FROM game_genre AS T1 JOIN game AS T2 ON T1.game_id  =  T2.game_id"}
{"question": "How many teachers have at least 10 students?", "query": "SELECT T1.teacher_id,  COUNT(*) FROM teacher AS T1 JOIN student AS T2 ON T1.teacher_id  =  T2.teacher_id WHERE T2.student_id  >  0 AND T2.student_id  <  10 GROUP BY T1.teacher_id"}
{"question": "What are the names, gpa and id of the students who made at least one purchase in 2013?", "query": "SELECT T1.name,  T1.gpa,  T2.id FROM students AS T1 JOIN purchases AS T2 ON T1.studentid  =  T2.studentid"}
{"question": "What is the question?", "query": "SELECT * FROM player WHERE name_first  =  \"John\" AND name_last  =  \"Smith\""}
{"question": "What are the names and the ages of all the students who are taking the class \"Intro to Algorithms and Data Structures\"?", "query": "SELECT T1.name,  T1.\"age\" FROM student AS T1 WHERE T1.class_code  =  \"Intro to Algorithms and Data Structure\""}
{"question": "What are all the names of people who have an email address containing the word \"zach\"", "query": "SELECT name FROM Person"}
{"question": "What is the average age of all customers in the database?", "query": "SELECT AVG(age) FROM Customer"}
{"question": "Show the names of all departments where more than 10 employees work who got a commission percentage", "query": "SELECT T1.department_name,  T2.name FROM departments AS T1 JOIN employees AS T2 ON T1.department_id  =  T2.department_id WHERE T2.commission_percentage  >  0.1"}
{"question": "What are the first, last, and middle names of all students of the university?", "query": "SELECT first_name,  last_name,  middle_name FROM students"}
{"question": "Find the customer details and id for the customer who had more than one policy", "query": "SELECT T1.customer_id,  T1.first_name,  first_name,  T1.'last_name',  T1.last_address,  T1.last_city,  T1.last_state,  T1.last_zip,  T1.last_country,  T1.last_phone,  T1.last_email,  T1.last_fax,  T1.last_mobile,  T1.last_pager,  T1.last_home_phone,  T1.first_address"}
{"question": "What is the average temperature in the month of December?", "query": "SELECT AVG(T1.temp) FROM Weather AS T1 WHERE T1.month  =  '12'"}
{"question": "How many people have used the product \"air\", and what are the ids of their purchases?", "query": "SELECT T1.purchase_id,  T1.product_name,  T1.quantity,  T1.price_in_dollars FROM product_purchase AS T1 WHERE T1.product_id  =  \"air\""}
{"question": "What is the name and number of employees who live in the residence hall on the 3rd floor of the building with the code CWE?", "query": "SELECT name,  number FROM employees WHERE building_code  =  \"CWE\" AND floor_number  =  \"3\""}
{"question": "What is the total number of people who have been to the city of New York?", "query": "SELECT COUNT(*) FROM city WHERE city.name = 'New York'"}
{"question": "What is the id and name of the customer with the most transactions?", "query": "SELECT T1.name,  T1.id FROM customers AS T1 WHERE T1.transactions  =  (SELECT MAX(T2.id) FROM customers AS T2)"}
{"question": "What are the ages of the actors who have had the highest number of film roles?", "query": "SELECT T1.age,  T2.film_title FROM actor AS T1 JOIN film AS T1 ON T1.actor_id  =  T1._id JOIN film_actor AS T2 ON T2.actor_id  =  (SELECT actor_id FROM actor WHERE film_id  =  T1.[id]) ORDER BY T2.film_title DESC LIMIT 5"}
{"question": "Show the names of the players who have the most assists", "query": "SELECT T1.player_name,  T2.assist_count FROM player_record AS T1 JOIN player_stats AS T2 ON T1.player_id  =  T2._player_id WHERE T2.assist_count  >  0"}
{"question": "What is the total number of salesmen in the company?", "query": "SELECT count(*) AS total_number_of_salesmen FROM salesmen"}
{"question": "What are the last 3 digits of the customer id?", "query": "SELECT T1.customer_id,  T1.customer_id_last_3_digits FROM customers AS T1"}
{"question": "What are the names, heights and birthdays of all students in the room?", "query": "SELECT T1.fname,  T1.lname,  T1.age,  T1.height,  T1.birthday FROM student AS T1 WHERE T1.room_id = '1'"}
{"question": "Find the names of the products that are made by a single company", "query": "SELECT T1.name FROM products AS T1 JOIN manufacturer AS T2 ON T1.manufacturer_id  =  T2.manufacturer_id WHERE T2.company_id  =  \"ABC\""}
{"question": "What are the id and name of the students that are in the top-50 of the class?", "query": "SELECT T1.student_id,  T1.name FROM students AS T1 JOIN ( SELECT T2.student_id,  T2.score  FROM students AS T2 JOIN ( SELECT T3.student_id,  T3.score  FROM students AS T3 JOIN ( SELECT T4.student_id,  T4.score  FROM students AS T4 JOIN ( SELECT T5.student_id,  T5.score  FROM students AS T5 JOIN ( SELECT T6.student_id,  T6.score  FROM students AS T6 JOIN ( SELECT T7"}
{"question": "What are the names and ids of the students who have ever received award?", "query": "SELECT T1.student_id,  T1.name_first,  'award' AS type FROM student AS T1 JOIN student_award AS T2 ON  T1.student_id  =  T2.student_id WHERE T2.type  =  'award'"}
{"question": "What are the names for the products that are in mp3 format and are not in mp3 format?", "query": "SELECT T1.name FROM product AS T1 WHERE T1.format  =  \"mp3\" AND T1.format !=  \"mp3\""}
{"question": "(a novel question, about a project of a company), after \"", "query": "(the sql query to answer the query), after \""}
{"question": "What is the age of the student whose first name is \"Mario\" and last name is \"Sanchez\"?", "query": "SELECT age FROM Student WHERE first_name  =  \"Mario\" AND last_name  =  \"Sanchez\""}
{"question": "What are the names and average rating of all songs in Bangla?", "query": "SELECT T1.Song_name,  T2.Rating FROM Song_info AS T1 JOIN Song_list AS T2 ON T1.Song_id  =  T2._id WHERE T2.language  =  \"Bengali\""}
{"question": "How many students are there in the \"CSE\" program?", "query": "SELECT count(*)  FROM students WHERE program_code  =  \"CSE\""}
{"question": "What are the names, id, and number of transactions of all customers whose orders are cancelled within the last week?", "query": "SELECT T1.customer_first_name, T1.customer_last_name, T1.customer.id, T1.customer.number_of_transactions FROM customer AS T1 JOIN customer_orders AS T2 ON T1.Customer_ID  =  T2.Customer_ID WHERE T2.cancelled_at  >  \"2016-01-01 00:00:00\" AND T2.cancelled_type  =  \"Cancelled\""}
{"question": "What is the total cost of all products?", "query": "SELECT T1.cost FROM product AS T1 JOIN product_price AS T2 ON T1.product_id  =  T2"}
{"question": "What are the names, birthdays, and birthplaces of the students who are in a particular dorm?", "query": "SELECT T1.name,  T2.birthday,  T3.birthplace FROM student AS T1 JOIN lives AS T2 ON T1.id  =  T2.id JOIN dorm AS T3 ON T2.dormid  =  T3.dormid WHERE T3.dormid  =  \"1\""}
{"question": "What is the question of the question?", "query": "SELECT question FROM question"}
{"question": "What are the names and numbers of all students who have taken a course in the past 5 years", "query": "SELECT T1.student_id,  T1.name,  T1.[number] FROM student AS T1 JOIN courses AS T2 ON T1.student_id  =  T2.[student_id] WHERE T2.course_id  =  'QM-201' AND T2.year  =  '2009' AND T2.semester  =  '1' AND T2.term  =  '1' AND (T2.year  =  '2008' OR T2.year  =  2009)"}
{"question": "What is the name, birth date, and age of the customer who has a credit score of 600?", "query": "SELECT T1.name,  T1.\"birth date\",  T1.age FROM customer AS T1 WHERE T1.credit_score  =  \"600\""}
{"question": "Find the names and order of the authors who wrote a book by the same title as the book that you are reading now", "query": "SELECT author_name,  author_order FROM books WHERE book_title  =  \"The Art of Computer Programming\""}
{"question": "What are the names in alphabetical order of the universities with the largest number of students?", "query": "SELECT T1.name FROM universities AS T1 WHERE T1.students  >  (SELECT max(T2.students) FROM universities AS T2)"}
{"question": "What are the full names of all employees", "query": "SELECT T1.first_name,  T1.last_name FROM employees AS T1"}
{"question": "What is the name of an office with the phone number of 919-934-5656?", "query": "SELECT name FROM Office WHERE phone_number = \"919-934-5656\""}
{"question": "Find the highest and lowest numbers of students per professor", "query": "SELECT T1.professor_id,  T1.student_count FROM professors AS T1 JOIN students AS T2 ON T1.professor_id  =  T2_id WHERE T2.student_count  >  T1.student_count"}
{"question": "What are the names the songs of all the artists who have a work with the name \"Kisses on the Ground\"?", "query": "SELECT T1.song_name FROM song AS T1 JOIN artist AS T2 ON T1.artist_id  =  T2.artist_id WHERE T2.name  = \"Kisses on the Ground\""}
{"question": "Which company are all the employees of?", "query": "SELECT T1.company_id,  T1.company_name FROM company AS T1 WHERE T1.company_id  =  (SELECT T2.company_id FROM employee AS T2 WHERE T2.company_id  =  T1.company_id)"}
{"question": "If we need to find the average number of people attending a concert, we must first find the number of people", "query": "SELECT count(*) AS total_attendees FROM concert_attendees"}
{"question": "What are the names and genders of all persons named \"Katherine\"?", "query": "SELECT T1.person_name,  T1.person_gender FROM person AS T1 WHERE T1.person_name  =  \"Katherine\""}
{"question": "What are the names for all the restaurants in the town on the day of the party?", "query": "SELECT name FROM restaurant WHERE date  =  \"the day of the party\""}
{"question": "What are the names and id of customers who use payment method \"Paypal\"?", "query": "SELECT customer_name ,  customer_id FROM customers WHERE payment_method  =  \"Paypal\""}
{"question": "What is the name and code of the company that has the greatest number of employees?", "query": "SELECT T1.name,  T1.code FROM company AS T1 JOIN employee AS T2 ON T1.company_id  =  T2.id WHERE T2.employee_id  =  (SELECT max(employee_id) FROM employee)"}
{"question": "What are the names and ids of the customers who have the following information?", "query": "SELECT T1.customer_id,  T2.name FROM customers AS T1 JOIN customer_info AS T2 ON T1.id  = T2.customer_id WHERE (T2.name  LIKE '%John%' OR T2.name  LIKE '%Mary%' OR T2.name LIKE '%Bob%')"}
{"question": "What are the names, first names and ages of all the students who are enrolled in a single class at a certain time?", "query": "SELECT T1.student_id,  T1.name,  T1.age FROM student AS T1 WHERE T1.class_id  =  \"1\""}
{"question": "find the ids of the employees who had the highest salary in 2013", "query": "SELECT T1.id FROM employees AS T1 JOIN salaries AS T2 ON T1.employee_id  =  T2.[id] WHERE T2.salary  =  (SELECT MAX(T3.salary) FROM salaries AS T3)"}
{"question": "Find the ids of the employees who have been employed by the company for more than 4 years", "query": "SELECT T1.id FROM employee AS T1 JOIN employee_history AS T2 ON T1.id  =  T2.employee_id WHERE T2.start_date  >  '2011-01-01' AND T2.end_date  >  '2011'"}
{"question": "Find the prices of all products that have a color of blue", "query": "SELECT T1.price_in_dollars FROM product_details AS T1 JOIN product_colors AS T2 ON T1.id  =  T2.id WHERE T2.color  =  'blue'"}
{"question": "What are the names, birth years, and birth places of twins?", "query": "SELECT T1.name,  T1.birth_year,  T1.birth_place FROM twins AS T1 WHERE T1.name  = \"John\" AND T1.name  = \"Mary\""}
{"question": "List the total number of movies with title \"Pulp Fiction\" and year \"1994\"", "query": "SELECT COUNT(*) FROM movies WHERE title = \"Pulp Fiction\" AND year = \"1994\""}
{"question": "What is the average duration of the documents in a file, ordered by duration in ascending order, and show the file name", "query": "SELECT AVG(duration) FROM Documents WHERE File_Name  =  \"file1\""}
{"question": "What is the total number of students who live in the school with the code ETC?", "query": "SELECT COUNT(*) FROM students WHERE school_code  =  \"ETC\""}
{"question": "Find the names of the movies in which each actor or actress has played", "query": "SELECT T1.actor_name,  T1.actress_name FROM film_actor AS T1 WHERE T1.actor_id  =  (SELECT T2.actor_id FROM film_actor AS T2 WHERE T2.actor_id  =  T1) OR T1.actress_id  =  (SELECT  T2.actress_id FROM film_actor AS t2 WHERE t2.actress_id  = T1)"}
{"question": "Which products have the longest name?", "query": "SELECT T1.Product_Name,  T2.Product_Name FROM Products AS T1 JOIN Products AS T2 ON T1.Product_ID  =  T2.\"Product_ID\" WHERE T1.Product_Name  >  T2.Product_Name"}
{"question": "What are the names in the order of age of the students in the class?", "query": "SELECT name FROM Student WHERE age  =  (SELECT min(age) FROM student)"}
{"question": "what is the id of the college with the most tennis players?", "query": "SELECT T1.id FROM College AS T1 JOIN Sports AS T2 ON T1.college_id  =  T2.college_id WHERE T2.name  =  \"Tennis\""}
{"question": "Which customers have ordered a total of at least 2,500 products?", "query": "SELECT T1.customer_id,  T1.customer_name,  T1.customer_address,  T1.customer_city,  T1.customer_state,  T1.customer_zip,  T1.customer_phone,  T1.customer_fax,  T1.customer_email,  T1.customer_credit_card,  T1.customer_balance,  T1.customer_order_count,  T1.customer_total_paid,  T1.customer_last_order_date,  T1.customer_"}
{"question": "What are the dates of the earliest three payments?", "query": "SELECT MIN(Date_Payment) FROM payment"}
{"question": "List the id of all employees who are from California", "query": "SELECT T1.employee_id FROM employee AS T1 WHERE T1.state_id  =  \"CA\""}
{"question": "What are the names, dates of birth, and id's of the students who are in the Chemistry course of the  University of Illinois?", "query": "SELECT student_id,  T1.name,  T1.dob,  T1.id FROM students AS T1 JOIN courses AS T2 ON T1.crs_id  =  T2._id WHERE T2.name  = \"Chemistry\""}
{"question": "I have heard that the band \"Wolverine\" is a band", "query": "SELECT * FROM band WHERE name = \"Wolverine\""}
{"question": "What are the names and titles of employees who are working in the marketing department?", "query": "SELECT T1.first_name,  T1.last_name,  T1.title FROM employees AS T1 JOIN departments AS T2 ON T1.employee_id  =  T2._id WHERE T2.name  = 'Marketing'"}
{"question": "(a novel question, about a distinct table), after \"", "query": "Examples of some or all task item:"}
{"question": "Which are the names of countries where the president is female?", "query": "SELECT T1.country_name FROM Country AS T1 WHERE T1.president_id  =  (SELECT T2.country_id FROM Country AS T2 WHERE T2.name  =  \"United States\" )"}
{"question": "How many students are in the class with code 10018?", "query": "SELECT count(*)  FROM students WHERE stuid  =  '10018'"}
{"question": "What are the ids and names of the architects who built two bridges, one mill, or none of the above?", "query": "SELECT T1.id,  T1.name FROM architects AS T1 JOIN buildings AS T2 ON T1.architect_id  =  T2.architect_id JOIN bridges AS T3 ON T2.building_id  =  T3.building_id JOIN mills AS T4 ON T3.building_id  ="}
{"question": "What are the names and ids of all students who were involved in the accident?", "query": "SELECT T1.student_id,  T1.name,  T1.id FROM student AS T1 JOIN accident AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*)  DESC LIMIT 1"}
{"question": "\"A movie is made by a group of people", "query": "SELECT T1.title,  T1.director,  T1.actor,  T1.writer,  T1.producer,  T1.year,  T1.genre,  T1.rating,  T1.runtime,  T1.release_date,  T1.imdb_id,  T1.imdbid,  T1.imdbsynopsis,  T1.imdbactor,  T1.imdbwriter,  T1.imdbproducer,  T1.imdbdirector,  T1."}
{"question": "What are the names and the dates of birth of all the students who have an age of 27?", "query": "SELECT T1.name,  T1.date_of_birth FROM students AS T1 WHERE T1.age  =  27"}
{"question": "(a novel question, about a table of different kind)", "query": "SELECT T1.name FROM students AS T1 JOIN class AS T2 ON T1.student_id  =  T2.[id] WHERE T2.name  =  \"CSCI-101\""}
{"question": "What are the names and positions of the three players who won the most player awards?", "query": "SELECT T1.player_name,  T2.position FROM player_awards AS T1 JOIN player_awards AS T2 ON T1.player_id  =  T2.player_id WHERE T1.player_id  >  T2.player_id ORDER BY T1.player_id,  T2.position"}
{"question": "Find the first name, last name and phone number of the customers who have more than 200 phone calls", "query": "SELECT T1.first_name,  T1.last_name,  T1.phone_number FROM customer AS T1 WHERE T1.phone_number  >  200"}
{"question": "Find the names and numbers of the schools that have only one class", "query": "SELECT T1.school_name,  T1.school_number FROM schools AS T1 JOIN classes AS T2 ON T1.school_id  =  T2.school_id WHERE T2.class_id  =  (SELECT class_id FROM classes WHERE class_name  =  \"First Class\")"}
{"question": "What are the names, addresses and phone numbers of the schools with the most students?", "query": "SELECT T1.school_name,  T1.school_address,  T1.school_phone FROM school AS T1 JOIN school_student AS T2 ON T1.school_id  =  T2.school_id WHERE T2.student_count  >  10"}
{"question": "Tell me a new question about the same table", "query": "SELECT * FROM table_name"}
{"question": "What is the title of the movie with no cast?", "query": "SELECT name FROM movie WHERE movie_id NOT IN (SELECT movie_id FROM cast)"}
{"question": "(a novel question, about a section of the text), after \"", "query": "(the sql query to answer the query), after \""}
{"question": "Find the first name and last name of all students in course ACCT - 211 (including those who were not enrolled in the course)", "query": "SELECT T1.first_name,  T1.last_name FROM students AS T1 WHERE T1.course_id  =  \"ACCT - 211\""}
{"question": "What is the average height of the students in the college named 'Yale University', with the condition that the average of the height of all students is less than", "query": "SELECT AVG(height) FROM student WHERE college_name  =  \"Yale University\" AND average_height  <  (SELECT AVG(height) FROM student)"}
{"question": "Find the name of the store with the highest revenue", "query": "SELECT T1.store_name,  T2.store_id,  T2.store_address,  T2.store_city,  T2.store_state,  T2.store_zip,  T2.store_phone,  T2.store_fax,  T2.store_email,  T2.store_website,  T2.store_hours,  T2.store_manager,  T2.store_opening_hours,  T2.total_employees,  T2.total_sales,  T2.total"}
{"question": "What are the names (first and last name) of all engineers who are not working on the project on which the highest number of hours is spent?", "query": "SELECT T1.first_name,  T1.last_name FROM engineer AS T1 WHERE T1.project_id  =  (SELECT T2.project_id FROM project AS T2 WHERE T2.hours  =  (SELECT MAX(T3.hours) FROM project AS T3))"}
{"question": "Sort the names in ascending order of the number of documents", "query": "SELECT T1.name FROM documents AS T1 JOIN documents AS T2 ON T1.document_id  =  T2.[id] WHERE T1.document_id  >  T2.document_id ORDER BY T1.document_id ASC"}
{"question": "How many students have gender (G) in their name?", "query": "SELECT T1.G FROM student AS T1 WHERE T1.name  LIKE '%' || :question || '%'"}
{"question": "What is the name and age of the person in the picture?", "query": "SELECT T1.name,  T1.age FROM person AS T1 WHERE T1.picture_id  =  1"}
{"question": "What are the names, account numbers and account balances of the customers who bought products \"shoes\" once?", "query": "SELECT T1.name,  T1.account_number,  T1.account_balance FROM customer_orders AS T1 WHERE T1.product_name  =  \"shoes\""}
{"question": "What are the ids and names of the athletes who won the gold medal in weightlifting?", "query": "SELECT T1.id,  T1.name FROM athletes AS T1 JOIN weight_lifting AS T2 ON T1.id  =  T2.id WHERE T2.name  =  \"gold medal\""}
{"question": "(a novel question, about a table not mentioned in the question)", "query": "(the sql query to answer the query)"}
{"question": "Find all the names of the students that have not visited any countries", "query": "SELECT T1.student_id FROM students AS T1 JOIN countries AS T2 ON T1.country_id  =  T2.country_id WHERE T1.country_name  =  \"United States\" AND T1.student_id  NOT IN (SELECT T3.student_id FROM countries AS T3 WHERE T3.country_name  =  T2.country_name)"}
{"question": "What is the average income of all the customers?", "query": "SELECT AVG(transaction_amount) FROM Financial.Transaction"}
{"question": "Find the average amount of time taken to complete a task", "query": "SELECT AVG(Time_Spent) FROM Tasks"}
{"question": "Find the names of countries and the average distance from them to the capital", "query": "SELECT country_name,  country_capital,  avg(distance_in_meters) FROM country_info GROUP BY country_name, country_capital"}
{"question": "What is the name and id of the user who spent the most money in 2008?", "query": "SELECT T1.name,  T1.id FROM users AS T1 JOIN transactions AS T2 ON T1.user_id  =  T2,id  WHERE T2.date  =  \"2008\" AND T2.amount  >  0"}
{"question": "What are the ids and names of the lawyers who are also students?", "query": "SELECT T1.id,  T1.name FROM student AS T1 JOIN lawyer AS T2 ON T1.student_id  =  T2._id WHERE T2.student_id  =  '1'"}
{"question": "Which cities holds the record for the greatest total number of accidents?", "query": "SELECT T1.city,  T2.total_accidents FROM city AS T1 JOIN accidents AS T2 ON T1.city_id  =  T2.city_id WHERE T2.year  =  \"2008\""}
{"question": "What are the names, and type codes of all products?", "query": "SELECT T1.product_name,  T1.product_type_code FROM product AS T1"}
{"question": "What is the average age of the customers who buy the product, \"Coffee-Mocha\"?", "query": "SELECT T1.age FROM customer AS T1 JOIN order_item AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.product_name  =  \"Coffee-Mocha\" GROUP BY T1.customer.id HAVING count(*) =  1"}
{"question": "List the full names of the customers who don't use a credit card", "query": "SELECT T1.first_name,  T1.last_name,  T1.address,  T1.city,  T1.state,  T1.zip,  T1.phone,  T1.email,  T1.credit_card_type,  T1.credit_score,  T1.credit_limit,  T1.credit_status,  T1.credit_balance,  T1.credit_available,  T1.credit_used,  T1.credit_active,  T1.credit_inactive,"}
{"question": "What is the full size of the file \"A", "query": "SELECT file_size FROM files WHERE file_name  =  \"A\""}
{"question": "How many events did the player play during the time of the baseball game?", "query": "SELECT count(*) AS total FROM events WHERE player_id  =  \"1\" AND event_type  =  \"game\""}
{"question": "What are the names and ids of the employees who have the same last name as \"Spencer\"?", "query": "SELECT T1.last_name,  T2.id FROM employees AS T1 JOIN employees AS T2 ON T1.last_name  =  T2.last_name"}
{"question": "What are the names and the averages of the wines from France?", "query": "SELECT T1.wine_name,  T1.wine_price,  T1.wine_country FROM wine AS T1 WHERE T1.wine_name  IN (SELECT T2.wine_name FROM wine AS T2 WHERE T2.wine_name  LIKE \"Champagne\" OR T2.wine_name  =  \"Champagne\" OR T2.\"Champagne\"  LIKE \"Champagne\")"}
{"question": "Find the total number of students in the class \"Math\" in 2001", "query": "SELECT count(*) AS total FROM students WHERE class_name  =  \"Math\" AND year(date_of_birth)  =  2001"}
{"question": "How many products are there in total?", "query": "SELECT COUNT(*) FROM products"}
{"question": "What is the name, last name and id of the professor \"Smith\" and \"Zhu\"?", "query": "SELECT name,  last_name,  id FROM professor WHERE name  =  \"Smith\" AND last_name  =  \"Zhu\""}
{"question": "Find the names of students who have not taken the course \"Data Structuring and Analysis\"", "query": "SELECT T1.student_id,  T1.name_first,  'Data Structuring and Analysis' FROM student AS T1 WHERE NOT EXISTS (SELECT T2.student_id FROM course AS T2 WHERE T2.course_id  =  'Data Structuring and Analysis')"}
{"question": "What is the name, age and number of books in the library in the college?", "query": "SELECT T1.name,  T1.[age],  T1.num_books FROM library AS T1 WHERE T1.name  =  \"College Library\""}
{"question": "What are the number of students that have a first name that starts with a letter", "query": "SELECT T1.first_name FROM students AS T1 WHERE T1.first_name LIKE \"A%\""}
{"question": "What is the year in which the least people are in hall of fame?", "query": "SELECT year FROM Hall_of_Fame WHERE year  <  2000"}
{"question": "What are the name, age, and salary of the employees who work in the department of Finance?", "query": "SELECT T1.employee_name,  T2.employee_age,  T3.employee_salary FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN employees AS T3 ON T2.department_id  = T3.department_id"}
{"question": "What is the maximum size of the table with the largest number of entries?", "query": "SELECT max(size) FROM table"}
{"question": "How many students are there who are both students and employees?", "query": "SELECT T1.student_id,  T1.employee_id FROM students AS T1 JOIN employees AS T2 ON T1.student_id  =  T2.student_id AND T1.employee_id  =  T2 .employee_id"}
{"question": "What is the name of the largest state in the United States that shares the letter 'B'?", "query": "SELECT T1.state_name FROM state AS T1 WHERE T1.letter  =  'B'"}
{"question": "What are the dates when the first and second most important football games on television were broadcast?", "query": "SELECT T1.date,  T2.date FROM game_date AS T1 JOIN game_date AS T2 ON T1.date  =  T2.date WHERE T1.date  =  '01/01/2000' AND T2.date  =  '01-Jan-2000'"}
{"question": "Find the number and duration of games in the \"Atlanta\" category of the Atlanta team in 2000", "query": "SELECT count(*) AS total,  T1.game_id AS game_id,  T1.duration AS duration FROM games AS T1 WHERE T1.team_id  =  \"Atlanta\" AND T1.category  =  \"Atlanta\""}
{"question": "What is the average average price of milk?", "query": "SELECT AVG(price) FROM milk"}
{"question": "How many students are there in each course?", "query": "SELECT T1.course_code,  T1.number_of_students FROM course AS T1;"}
{"question": "Find the names of persons who have no parents", "query": "SELECT T1.name FROM Person AS T1 JOIN Person_Parents AS T2 ON T1.id  =  T2.person_id WHERE T2.id  =  0"}
{"question": "A:\n\nPerl 6, 101 bytes", "query": "sub MAIN($question) {"}
{"question": "How many times does the actor named Tessa Thompson win an Oscar?", "query": "SELECT T1.actor_name,  T2.year,  T3.count(*) FROM Oscar_Award AS T1 JOIN Actors AS T2 ON T1.actor_id  =  T2._id JOIN Awards AS T3 ON T1.award_id  =  T3.id WHERE T2.name  = 'Tessa Thompson' AND T3.year  =  '2016'"}
{"question": "What are the names and addresses of the students in the house at 2032 W", "query": "SELECT T1.student_name,  T1.student_address FROM student AS T1 WHERE T1.house_id  =  2032"}
{"question": "What is the average monthly income of people living in the US?", "query": "SELECT AVG(income) FROM people WHERE country_code  =  'US'"}
{"question": "Find the number of customers who had not purchased any product in the last month", "query": "SELECT T1.customer_id,  T1.customer_name,  T1.customer_address,  T1.customer_city,  T1.customer_state,  T1.customer_zip,  T1.customer_phone,  T1.customer_email,  T1.customer_fax,  T1.customer_credit_limit,  T1.customer_type_code,  T1.customer_status,  T1.customer_date_of_birth,  T1.customer_gender,  T1.customer_age,"}
{"question": "How many different products are there?", "query": "SELECT count(*) AS \"count\" FROM product"}
{"question": "List the names and ages of all employees", "query": "SELECT T1.name,  T1.age FROM employees AS T1 WHERE T1.age  >  18"}
{"question": "(Find people whose first name begins with \"T\" or \"S\")", "query": "SELECT T1.id,  T1.firstname,  T2.lastname FROM people AS T1 JOIN people AS T2 ON T1.firstname  =  T2.firstname WHERE T1.firstname  LIKE 'T%' OR T1.firstname  LIK 'S%'"}
{"question": "How many students live in the \"Tesla\" district?", "query": "SELECT T1.district_name,  T1.student_count FROM student AS T1 JOIN district AS T2 ON T1.district_id  =  T2._id WHERE T2.name  =  \"Tesla\""}
{"question": "What are the products of the company with the highest revenue?", "query": "SELECT product_name,  product_id FROM products ORDER BY product_revenue DESC LIMIT 1"}
{"question": "Find the names of the countries with the largest area", "query": "SELECT T1.name FROM country AS T1 WHERE T1.area  >  (SELECT max(T2.area) FROM country AS T2)"}
{"question": "What is the name and id of the movie that has the highest box office income?", "query": "SELECT T1.id,  T1.name FROM movie AS T1 JOIN box_office AS T2 ON T1.id  = T2.movie_id WHERE T2.amount  =  'Highest'"}
{"question": "(a novel question, about a table that is different from the one in the question): Which is the name of the person who has visited the most countries?", "query": "SELECT name FROM Person"}
{"question": "The latest two years of tax returns for the customer named \"Dayana Robell\"", "query": "SELECT T1.year,  T1.amount FROM customer_tax_returns AS T1 WHERE T1.customer_name  =  \"Dayana Robell\" AND T1.year  >  \"2012\" AND T1.year  <  \"2013\""}
{"question": "How many people live in the city of \"Crystal\"?", "query": "SELECT T1.city,  T1.population FROM city_population AS T1 WHERE T1.city  =  \"Crystal\""}
{"question": "What are the minimum and maximum numbers of times a player has won a game in the past 30 days?", "query": "SELECT MIN(game_id),  MAX(game_id) FROM game_history WHERE player_id  =  \"Alice\" AND date_of_game  >  DATE_SUB(NOW(), INTERVAL 30 DAY)"}
{"question": "What is the average number of customers per store?", "query": "SELECT count(*) AS \"count\" FROM customers AS T1 JOIN store AS T2 ON T1.store_id  =  T2.\"store_id\" GROUP BY T1.store_id"}
{"question": "What are the questions for all the people with first name John?", "query": "SELECT * FROM student WHERE name_first = 'John'"}
{"question": "Which of the following has the highest temperature?", "query": "SELECT T1.temperature FROM table1 AS T1 WHERE T1.id  =  \"1\""}
{"question": "(a novel question, about a table) What are the names of the schools in the USA which don't have a high school?", "query": "SELECT DISTINCT T1.school_name FROM schools AS T1 WHERE NOT EXISTS (SELECT T2.school_name FROM schools AS t2 WHERE t2.school_name = T1.school_name)"}
{"question": "What is the name, height and prominence of the mountains which do not belong to the 'Aberdare Range'?", "query": "SELECT T1.name,  T1.height,  T1.prominence FROM mountains AS T1 WHERE NOT EXISTS (SELECT T2.name FROM mountains AS T2 WHERE T2.name  =  T1.name)"}
{"question": "What are the names, and if they are the same, their corresponding values of, the most frequent values of the following attributes?", "query": "SELECT T1.value,  T2.value FROM table1 AS T1 JOIN table2 AS T2 ON T1.id  = T2.id WHERE T1.name  = \"John\" AND T2.name  = \"John\""}
{"question": "Which customers with distinct last names have an insurance policy with the type \"Pump\"? Give me the customer details", "query": "SELECT T1.Customer_id,  T1.Customer_name,  T1.Customer_address,  T1.Customer_city,  T1.Customer_state,  T1.Customer_zip,  T1.Customer_phone,  T1.Customer_credit_limit,  T1.Customer_age,  T1.Customer_gender,  T1.Customer_dob,  T1.Customer_ssn,  T1.Customer_email,  T1.Customer_type,  T1.Customer_policy,  T1."}
{"question": "What are the names, prices, and locations of all the items in the catalog?", "query": "SELECT T1.name,  T1.price,  T1.location FROM products AS T1"}
{"question": "What are the names in ascending order of age of the students who enrolled in the class with the code 10038?", "query": "SELECT T1.student_id,  T1.firstname,  T1.lastname,  T1.age FROM student AS T1 WHERE T1.class_id  =  10038 ORDER BY age ASC"}
{"question": "What does the query below answer?", "query": "SELECT T1.name,  T2.name FROM student AS T1 JOIN student AS T2 ON T1.id  =  T2.id WHERE T1.name  =  \"Alice\" AND T2.name  =  \"Bob\""}
{"question": "Find the last name of the person who has a first name \"Vivian\"", "query": "SELECT T1.last_name FROM employees AS T1 JOIN employees AS T2 ON T1.last_name  =  T2.first_name WHERE T1.first_name  =  \"Vivian\""}
{"question": "What is the average age of the first-graders whose last name begins with 'A' to 'I'?", "query": "SELECT AVG(age) FROM student WHERE last_name  LIKE 'A%'"}
{"question": "What are the ids and names of students who did not play football at the University of Pennsylvania?", "query": "SELECT T1.name FROM students AS T1 JOIN student_athletics AS T2 ON T1.stu_id  =  T2.stu_id WHERE T2.sport_code  =  \"N\""}
{"question": "What are the names and ages of all customers who have made at least one purchase?", "query": "SELECT customer_id,  customer_first_name,  customer_last_name,  age FROM customers WHERE customer_id  =  (SELECT customer_id FROM customers WHERE customer_id  IN (SELECT customer_id FROM customers WHERE age  >  (SELECT max(age) FROM customer WHERE customer_id  =  'customer_id')));"}
{"question": "Find the average age of all customers", "query": "SELECT AVG(age) FROM Customer"}
{"question": "What is the name and email of each employee who works in the kitchen area?", "query": "SELECT T1.employee_name,  T2.employee_email FROM employee AS T1 JOIN employee_address AS T2 ON T1.employee_id  =  T2.employee_id WHERE T1.department  =  'Kitchen'"}
{"question": "Find the names of companies that have at least 6 employees and at least 5 departments", "query": "SELECT T1.company_name,  T1.department_name FROM company AS T1 JOIN department AS T2 ON T1.company_id  =  T2._id WHERE T1.employee_count  >=  6 AND T1.department_count  >=  5"}
{"question": "What are the three cities in the United States that are called the \"Sunshine State\"?", "query": "SELECT T1.city_name FROM cities AS T1 JOIN states AS T2 ON T1.state_id  =  T2.state_id WHERE T2.name  =  \"Florida\""}
{"question": "what are the names of all the employees who have the surname Smith?", "query": "SELECT T1.firstname,  T1.lastname FROM employee AS T1 WHERE T1.surname  =  'Smith'"}
{"question": "What are the names (name, last name), birth dates (Birth Date, Date_of_birth) and phone numbers (phone) of all students", "query": "SELECT T1.name,  T1.last_name,  T1.birth_date,  T1.phone FROM student AS T1"}
{"question": "What are the names, locations and id of the employees who work at the same place?", "query": "SELECT T1.name,  T1.location,  T1.id FROM employees AS T1 JOIN location AS T2 ON T1.location_id  =  T2.location_id JOIN employee_location AS T3 ON T1.id  =  T3.employee_id WHERE T2.name  =  \"The Company\""}
{"question": "What are the customers who have the same date and time of birth?", "query": "SELECT DISTINCT Cust_ID FROM customer_info WHERE Cust_Birth_Date  =  '01/01/1990' AND Cust_Birth_Time  =  '00:00:00'"}
{"question": "find all the books' titles that are published in 2003", "query": "SELECT book_title FROM books WHERE book_year  =  2003"}
{"question": "How many programs are there?", "query": "SELECT count(*)  FROM program"}
{"question": "Find the names of students who did not get a degree", "query": "SELECT T1.student_name FROM students AS T1 WHERE T1.degree  =  'No'"}
{"question": "What is the range of the smallest and largest temperature for each month?", "query": "SELECT min(T1.temperature),  max(T1.temperature) FROM temperature AS T1 GROUP BY T1.month"}
{"question": "\"What is the number of the book that has been published by the author of \"The Great Gatsby\"?", "query": "SELECT T1.id FROM books AS T1 JOIN authors AS T2 ON T1.author_id  =  T2.id WHERE T2.name  =  \"F. Scott Fitzgerald\" AND T1.title  =  \"The Great Gatsby\""}
{"question": "What are the names, grades, grades and grades, of all students in the class?", "query": "SELECT DISTINCT T1.name,  T1.grade,  T1.grade, T1.grade,  T1.grade FROM student AS T1 WHERE T1.class_id  =  '1'"}
{"question": "What is the average size of the documents?", "query": "SELECT AVG(size) FROM documents"}
{"question": "What is the name of the movie where the main character is a kid?", "query": "SELECT T1.name FROM movie AS T1 JOIN actor AS T2 ON T1.actor_id  =  T2.actor_id WHERE T1.name  =  \"The Kid\""}
{"question": "How many professors are there in the department of biochemistry?", "query": "SELECT count(*)  FROM faculty WHERE department_id  =  \"biochemistry\""}
{"question": "(list the names of the companies and the names of the employees working in them, the first and last name, and the department, the full name, salary", "query": "SELECT T1.company_name,  T1.employee_name,  T1.department_name,  T1.full_name,  T1.salary FROM employee AS T1 JOIN company AS T2 ON T1.employee_id  =  T2.[employee_id] JOIN department AS T3 ON T1.department_id  =  T3.department_id WHERE T2.company_id  =  \"1\""}
{"question": "Find the names of the channels that have the most distinct characters", "query": "SELECT DISTINCT channel_name FROM channel"}
{"question": "What are the names and ages of the children of the mayor of Tokyo?", "query": "SELECT T1.name,  T1.age FROM children AS T1 JOIN parents AS T2 ON T1.parent_id  =  T2._id GROUP BY T1.name ORDER BY T1.age"}
{"question": "what are the names of the countries that have at least 3 cities?", "query": "SELECT DISTINCT country_name FROM country WHERE city_count > 3"}
{"question": "What is the total number of exams of the course \"Mathematics\"?", "query": "SELECT COUNT(*) FROM Exam"}
{"question": "what city is the school with the largest number of schools in the country?", "query": "SELECT city FROM school WHERE city  =  \"New York\""}
{"question": "What is the total budget for all the departments?", "query": "SELECT T1.total_budget FROM Department AS T1 JOIN Budget AS T2 ON T1.department_id  =  T2.department_id WHERE T2.name  =  \"All Departments\""}
{"question": "find the number of different programs that have the words \"world cup\" or \"world cup 2010\" in their name", "query": "SELECT DISTINCT program FROM program WHERE name  LIKE  '%world cup%' OR name  LIKE  '%2010 world cup%'"}
{"question": "Which year was the largest earthquake in the past 100 years?", "query": "SELECT T1.year,  T2.name FROM earthquake AS T1 JOIN country_region AS T2 ON T1.country  =  T2.country WHERE T1.year  >  1900 AND T1.year  <  2010"}
{"question": "What is the name (s)he who has the highest unsure rate", "query": "SELECT name FROM employee WHERE unsure_rate  =  \"null\""}
{"question": "What is the average length of episodes for all seasons of a show?", "query": "SELECT AVG(episode_length) FROM show_season"}
{"question": "What are the names and descriptions of all the programs?", "query": "SELECT T1.program_name,  T1.description FROM program AS T1 JOIN program_details AS T2 ON T1.program_id  =  T2.program_id WHERE T2.program_id  =  1"}
{"question": "What is the name and age of the person that is a friend of Dan or Alice?", "query": "SELECT T1.name,  T1.age FROM friends AS T1 WHERE T1.name  =  \"Dan\" OR T1.name  =  'Al'"}
{"question": "List all cities by name", "query": "SELECT T1.city_name FROM city AS T1 WHERE T1.city_name  =  'New York'"}
{"question": "What are the names and age of the youngest and oldest person in the group?", "query": "SELECT name,  age FROM Person WHERE age  =  \"Youngest\" OR age  =  \"Oldest\""}
{"question": "What is the name of the person with the name \"Peggy\"?", "query": "SELECT T1.name FROM people AS T1 WHERE T1.name  =  \"Peggy\""}
{"question": "Find the id of students who didn't get a passing mark", "query": "SELECT T1.id FROM student AS T1 WHERE T1.mark  <  50"}
{"question": "List the count and name of each product in all the orders of 'Apple'", "query": "SELECT COUNT(*),  T1.name FROM orders AS T1 JOIN products AS T3 ON T1.product_id  =  T3.product_id WHERE T3.product_name  =  'Apple'"}
{"question": "A:\n\nI would like to post and run this to prove this task is solvable", "query": "SELECT T1.Fname,  T1.Lname FROM COURSE as T1 JOIN FACULTY as T2 ON T1.Institute  =  T2.Facid GROUP BY T1.Institute ORDER BY count(*) DESC"}
{"question": "What are the names, roles and salaries of the employees with the title 'Manager' and who are not also department heads?", "query": "SELECT T1.name,  T1.role,  T1.salary FROM employees AS T1 WHERE T1.title  =  'Manager' AND T1.department_id  =  0"}
{"question": "Find the average age for all professors", "query": "SELECT AVG(age) FROM professor"}
{"question": "What are the average ages of the children in each class, in increasing order?", "query": "SELECT AVG(age) FROM class"}
{"question": "What is surnames of all the students in the department of mathematics?", "query": "SELECT T1.surname FROM student AS T1 JOIN department AS T3 ON T1.department_id  =  T3.id WHERE T3.name  = 'Mathematics'"}
{"question": "What are the names and salaries of all employees who have the word \"manager\" in their title?", "query": "SELECT T1.first_name,  T1.last_name,  T1.salary FROM employee AS T1 JOIN employee_title AS T2 ON T1.employee_id  =  T2.[employee_id] WHERE T2.title  = 'manager'"}
{"question": "(a novel question, about a distinct table)", "query": "SELECT name FROM Person"}
{"question": "What are the names, id, and names of all the students in the city with \"Tulsa\" in their first name?", "query": "SELECT T1.name,  T1.id,  T1.name FROM students AS T1 WHERE T1.first_name  LIKE  \"Tulsa\""}
{"question": "What are the names, titles and number of employees of the companies that have opened new offices?", "query": "SELECT T1.company_name,  T1.company_id,  T1.company_type,  T1.company_address,  T1.company_city,  T1.company_state,  T1.company_zip,  T1.company_phone,  T1.company_fax,  T1.company_email,  T1.company_website,  T1.company_manager_id,  T1.employee_id,  T1.job_title,  T1.company_size,  T1.company_"}
{"question": "What are the names the students who have registered for all classes?", "query": "SELECT T1.name FROM student AS T1 JOIN class AS T2 ON T1.id  =  T2.id WHERE T2.class_id  =  (SELECT T3.class_id FROM class AS T3 WHERE T3.name  =  \"All Classes\")"}
{"question": "What are the names, genders and salaries of all employees working at the company called \"Kirby\"?", "query": "SELECT name,  gender,  salary FROM employees WHERE company_name  =  \"Kirby\""}
{"question": "List the names of all students in the University of Maryland", "query": "SELECT T1.student_id,  T1.firstname,  T2.lastname FROM student AS T1 JOIN student_info AS T2 ON T1.student_id  =  T2.student_id"}
{"question": "List the minimum and maximum age of all students", "query": "SELECT MIN(T1.age),  MAX(T1.age) FROM Student AS T1"}
{"question": "Show the id and name of the students with a grade of 90", "query": "SELECT T1.student_id,  T1.student_name FROM students AS T1 WHERE T1.grade  =  90"}
{"question": "What is the average length of the books in the library?", "query": "SELECT AVG(length) FROM books"}
{"question": "(a novel question, about a wotkflow, or a business process), after \"", "query": "A:"}
{"question": "How many students are attending a university with the name \"San Jose State University\", which has the largest number of students?", "query": "SELECT T1.student_id FROM students AS T1 JOIN university AS T2 ON T1.university_id  =  T2.university_id WHERE T2.name  =  \"San Jose State University\" AND T1.student_id  =  (SELECT T3.student_id FROM students AS  T3  WHERE T3.university_id  = T2.university_id AND T3.name  =  \"San José State University\" )"}
{"question": "What are the names, dates, and salaries of all employees who have been with the company more than 5 years?", "query": "SELECT T1.firstname,  T1.lastname,  T1.salary,  T1.startdate,  T1.enddate FROM employee AS T1 WHERE T1.enddate  >  T1.startdate AND T1.enddate  > ( SELECT T2.enddate FROM employee AS T2 WHERE T2.enddate  >  T2.startdate AND T2.enddate  > ( SELECT MAX(T3.enddate) FROM employee AS T3 WHERE T3.enddate  >  T3.startdate AND T3."}
{"question": "Find the total value of the bills for the students", "query": "SELECT SUM(bills.amount) FROM bills WHERE bills.student_id =?"}
{"question": "What are the ids of the products that have been ordered by the customer with id 1?", "query": "SELECT T1.product_id FROM orders AS O1 JOIN order_items AS O2 ON O1.order_id  =  O2.order_id WHERE O1.customer_id  =  1"}
{"question": "List all the cities in the United States", "query": "SELECT city FROM city"}
{"question": "What is the id, name, and description of the first author of the book \"Woman In Red\", from the database", "query": "SELECT T1.first_name,  T1.last_name,  T1.book_id FROM author AS T1 WHERE T1.first_name  =  \"Mary\" AND T1.last_name  =  \"Braddon\""}
{"question": "(a novel question, about a query), after \"", "query": "(the sql query to answer the questions), after \""}
{"question": "What is the name, id and data type of the product with the highest unit price?", "query": "SELECT T1.name,  T1.id,  T1.data_type FROM product AS T1 WHERE T1.unit_price  =  (SELECT max(T2.unit_price) FROM product AS T2)"}
{"question": "What are the names for the different colors of the same car?", "query": "SELECT color_name FROM car_color"}
{"question": "How many students are in the class with teacher name \"Hai\"?", "query": "SELECT T1.student_id,  T1.first_name,  'Hai' AS teacher_name FROM students AS T1 JOIN teachers AS T2 ON T1.teacher_id  =  T2.id WHERE T2.name  =  \"Hai\""}
{"question": "What are the ages of the people who are at most 35?", "query": "SELECT T1.age FROM person AS T1 WHERE T1.age  <=  35"}
{"question": "Show the name of cities that have at least two players", "query": "SELECT T1.city_name,  T2.city_name FROM city AS T1 JOIN city AS T2 ON T1.city_id  =  T2._id WHERE T1.city_name  =  \"New York\" AND T2.city_name  =  T1.city_name"}
{"question": "What are the names, genders and ages of the directors of the five buildings?", "query": "SELECT T1.name, T1.gender, T1.age FROM directors AS T1 JOIN building AS T2 ON T1.director_id  =  T2.director_id JOIN building AS T3 ON T2.building_id  =  T3.building_id JOIN building AS T4 ON T3.building_id  =  \"null\""}
{"question": "List the countries in alphabetical order", "query": "SELECT Country FROM country ORDER BY Country"}
{"question": "List all the last names of all customers in the city of San Francisco", "query": "SELECT T1.last_name FROM customer AS T1 JOIN city AS T2 ON T1.city_id  =  T2.\"city_id\" WHERE T2.city_name  =  \"San Francisco\""}
{"question": "Find the average prices for all products from each manufacture, and return the full detail, like \"average price: $15", "query": "SELECT T1.manufacture_id,  T2.product_id,  T2.price FROM products AS T1 JOIN products_details AS T2 ON T1.product_id  =  T2._product_id GROUP BY T1.manufacture_id, T2.product_id"}
{"question": "Find all the restaurants in the city with a rating no less than 4", "query": "SELECT T1.restaurant_id,  T1.name,  T1.rating,  T1.address,  T1.city_id,  T1.state_id,  T1.zip_code,  T1.phone_number,  T1.fax_number,  T1.email,  T1.website,  T1.rating,"}
{"question": "Who are the winners of the competitions in which the winners are decided by the judges?", "query": "SELECT T1.winner_name,  T1.winner_id FROM competition AS T1 JOIN judge AS T2 ON T1.competition_id  =  T2.competition_id JOIN judge_score AS T3 ON T2.judge_id  =  T3.judge_id WHERE T3.score  >  0"}
{"question": "What are the names, positions, and ages of the employees?", "query": "SELECT T1.name,  T1.position,  T1.age FROM employees AS T1 WHERE T1.age  >  20"}
{"question": "What is the title of the movie that has the greatest number of copies?", "query": "SELECT T1.title FROM movie AS T1 JOIN copies AS T2 ON T1.movie_id  =  T2.movie_id WHERE T2.count  >  \"$1\""}
{"question": "For each distinct test result, find all students who got the result", "query": "SELECT T1.id,  T1.name,  T1.test_id,  T1.test_name,  T1.test  FROM test AS T1 WHERE T1.test_id  =  (SELECT T2.test_id FROM test AS T2 WHERE T2.test_id  =  T1.test_id)"}
{"question": "What is the id, name and gender of the architects who built two bridges?", "query": "SELECT T1.id,  T1.name,  T1.gender FROM architects AS T1 WHERE T1.id  =  \"1\" AND T1.name  =  'John Doe' AND T1.gender  = 'male' AND T1.id  =  '2' AND T1.name  = 'John Doe' AND T1.age  =  '25' AND T1.id !=  '2' AND T1.[gender]  = 'male' AND (T1.id  =  '1' AND T1."}
{"question": "What's the name of the course that is taught by a professor in which the student major is \"Mathematics\"?", "query": "SELECT T1.course_name FROM course AS T1 JOIN professor AS T2 ON T1.course_id  =  T2.course_id WHERE T2.firstname  ='John' AND T2.lastname  ='Smith' AND T2.department_id  =  'MATH'"}
{"question": "Find the ids of the students who have a score of zero in all grades of Maths", "query": "SELECT T1.student_id FROM student AS T1 JOIN student_grades AS T2 ON T1.student_id  =  T2.[student_id] WHERE T2.grade_id  =  0"}
{"question": "What are the names and ages of all the students who have taken courses in \"Physics\" in the past five years?", "query": "SELECT T1.name,  T1.age FROM students AS T1 JOIN courses AS T2 ON T1.crs_id  =  T2.crs_id WHERE T2.name  = \"Physics\" AND T1.age  >=  \"18\" AND T1.age  <=  \"25\""}
{"question": "\"find the personal name, family name,", "query": "SELECT T1.name FROM student AS T1 JOIN student_info AS T2 ON T1.id  =  T2.student_id WHERE T2.name  =  'John Smith'"}
{"question": "What are the author names of all students whose average score exceeds 40?", "query": "SELECT author_name FROM students WHERE average_score  >  40"}
{"question": "Do you teach at least two courses?", "query": "SELECT count(*) AS num_courses FROM course"}
{"question": "What is the average age of male for different job titles?", "query": "SELECT AVG(age) FROM people WHERE gender_code  =  \"Male\" AND job_title  =  \"Professor\""}
{"question": "\"Hindi\" - 10", "query": "SELECT T1.Name FROM Language_Type AS T1 JOIN Language_Type_Translation AS T2 ON T1.id  =  T2.id WHERE T2.name  = 'Hindi'"}
{"question": "What are the names, average salaries and numbers of players of the countries with the most registered players", "query": "SELECT T1.country_name,  T1.avg_salary,  T1.num_players FROM country AS T1 WHERE T1.num_players  >  (SELECT T2.num_players FROM country T2 WHERE T2.num_players  > 0)"}
{"question": "What are the average annual earnings of all physicians?", "query": "SELECT AVG(Earnings) FROM physician"}
{"question": "Find the names and ages of all the faculty", "query": "SELECT T1.name,  T1.age FROM faculty AS T1 WHERE T1.id  =  (SELECT id FROM faculty WHERE name  =  \"John Smith\")"}
{"question": "What are the names that have the most number of letters?", "query": "SELECT T1.first_name,  T1.last_name FROM Person AS T1 WHERE T1.first_name  LIKE '%a%' OR T1.last_name  LIKE '%a'"}
{"question": "What is the name and sex of all customers?", "query": "SELECT customer_id,  customer_name,  customer_sex FROM customers"}
{"question": "(a question about a sql table) Find the names of all customers whose name contains the name \"Michael\"", "query": "SELECT T1.customer_first_name, T1.customer_last_name, T1.customer.customer_phone FROM customers AS T1 JOIN customer_addresses AS T2 ON T1.address_id  =  T2.address_id WHERE T2.address_type_code  =  \"Home\" AND T2.customer_name  LIKE  \"Michael\""}
{"question": "Find the names of students who have no grades in the range of 70 to 89", "query": "SELECT T1.fname,  T1.lname,  T1.gpa,  T1.grade FROM student AS T1 WHERE T1.grade  <  70 AND T1.grade  >  89"}
{"question": "(a novel question, about a hunk table), for any given \"", "query": ""}
{"question": "Find the name of the program manager who has the most students enrolled in her courses", "query": "SELECT T1.program_name,  T1.program_id FROM program AS T1 JOIN program_students AS T2 ON T1.program_id  =  T2.program_id WHERE T2.student_id  =  \"1\""}
{"question": "What is the first name of the student who is a fan of the band \"Blurred Vision\"?", "query": "SELECT T1.student_id,  T1.first_name,  T1.last_name,  T1.band_id FROM student AS T1 JOIN band_member AS T2 ON T1.student_id  =  T2.student_id AND T2.band_id  =  \"Blurred Vision\""}
{"question": "What are the names and ids of the employees in the department that work a lot?", "query": "SELECT T1.name,  T1._id FROM employee AS T1 WHERE T1.department_id =  \"1\""}
{"question": "What is the average grade of all students in the class?", "query": "SELECT AVG(grade) FROM student"}
{"question": "What are the names, addresses, and birthdays of all the students in the class?", "query": "SELECT T1.first_name,  T1.last_name,  T1.address,  T1.birthday FROM students AS T1 WHERE T1.id  =  (SELECT T2.id FROM student_course_enrolment AS T2 WHERE T2.student_id  =  'T1')"}
{"question": "Which students are not taking the classes in the department of chemistry?", "query": "SELECT DISTINCT T1.student_id FROM student AS T1 JOIN class AS T2 ON T1.class_id  =  T2._id WHERE T2.department_id  =  \"Chemistry\""}
{"question": "Find the average grade for students with a GPA greater than 4", "query": "SELECT AVG(grade) FROM student_grades WHERE GPA > 4"}
{"question": "What are the names, addresses, and emails of each student?", "query": "SELECT T1.fname,  T1.lname,  T1.email,  T1.address_1,  T1.address_2,  T1.city,  T1.state,  T1.zip,  T1.phone,  T1.ssn,  T1.dob,  T1.gender,  T1.major,  T1.minor,  T1.email_verified,  T1.email_confirmed,  T1.email_status,  T1.email_sent,  T1"}
{"question": "Find all customers who have only one order", "query": "SELECT T1.customer_id,  T1.order_id,  T1.product_id,  T1.quantity,  T1.price,  T1.date,  T1.total_price,  T1.status,  T1.payment_method,  T1.payment_date,  T1.payment_amount,  T1.payment_status,  T1.paymentid,  T1.shipping_address_id,  T1.shipped_date,  T1.shipped"}
{"question": "What are the names and id of the students who are not enrolled in any course?", "query": "SELECT T1.student_id,  T1.name_first,  'not enrolled' AS status FROM student AS T1 WHERE T1.id NOT IN (SELECT T2.student_id FROM course AS T2)"}
{"question": "What is the average age of the students who live in the state of Georgia?", "query": "SELECT AVG(age) FROM students WHERE state_code = 'GA'"}
{"question": "What is the role(s) of the employee(s) named Koby?", "query": "SELECT T1.role_code FROM Project_Staff AS T1 JOIN employee AS T2 ON T1.id  =  T2.employee_id WHERE T2.name  =  'Koby'"}
{"question": "What are the register IDs of electoral registries that have the number \"2\" in the code?", "query": "SELECT T1.register_id FROM register_codes AS T1 WHERE T1.code  =  \"2\""}
{"question": "Which product model has the most number of reviews?", "query": "SELECT product_name,  count(*) AS review_count FROM reviews GROUP BY product_name ORDER BY review_count DESC LIMIT 1"}
{"question": "What is the name and number of people in the picture?", "query": "SELECT T1.name,  T1.number FROM people AS T1 WHERE T1.picture_id  =  (SELECT T2.picture_id FROM picture AS T2 WHERE T2.name  =  \"The picture\" )"}
{"question": "(about a different table): How many movies from 2000 to 2005 have a duration more than 2 hours?", "query": "SELECT DISTINCT T1.movie_title,  T1.movie_year,  T1.movie_length,  T1.movie_rating,  T1.movie_director,  T1.movie_writer,  T1.movie_actor,  T1.movie_country,  T1.movie_language,  T1.movie_genre,  T1.movie_release_date,  T1.movie_production_company,  T1.movie_studio,  T1.movie_distributor,  T1.movie_"}
{"question": "Find the id of the project that has the most members and what are the names of the employees of that project?", "query": "SELECT T1.project_id,  T2.name FROM project AS T1 JOIN members AS T2 ON T1.project_id  =  T2._id WHERE T1.project_id  >  0 AND T1.project_id  <  (SELECT MAX(project_id) FROM project)"}
{"question": "What is the average salary of all teachers who earned less than the maximum salary and who are not in the Art department?", "query": "SELECT AVG(salary) FROM employee WHERE salary  <  18000 AND department_id!= \"Art\""}
{"question": "What are the names, genders, and ages of all students in the class of 2005?", "query": "SELECT name,  gender,  age FROM student WHERE year  =  2005"}
{"question": "What are the the first name and major of the customers who are able to consume soy? Show the customer details and id for the customer who had two or more", "query": "SELECT T1.id,  T1.firstname,  T2.major FROM customer AS T1 JOIN customer_details AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.product_id  =  \"SOY\" AND T2.quantity  >  0;"}
{"question": "What are the top 10 cities that have the highest number of employees?", "query": "SELECT city,  COUNT(*) FROM employees GROUP BY city ORDER BY count(*) DESC"}
{"question": "Show the numbers of customers who are under 40 and also have a job", "query": "SELECT COUNT(*) FROM customers WHERE age  <  40 AND job  =  'job'"}
{"question": "Find the name of all the cities in the state of Massachusetts", "query": "SELECT city_name FROM cities WHERE state_code  =  \"MA\""}
{"question": "What is the first name of the employee who has no manager?", "query": "SELECT T1.first_name FROM Employee AS T1 WHERE T1.manager_id  =  NULL"}
{"question": "What is the name of the country, city and number of students that have the most students", "query": "SELECT country_name,  city_name,  count(*) AS students FROM students GROUP BY country_name,  city_id ORDER BY students DESC LIMIT 1"}
{"question": "What are the names, birth dates, and salaries of all employees?", "query": "SELECT T1.name,  T1.birth_date,  T1.salary FROM employees AS T1 JOIN employees AS T2 ON T1.manager_id  =  T2.id WHERE T1.name  <>  T2.name"}
{"question": "How many times did each player score a goal in a match?", "query": "SELECT T1.player_id,  T1.player_name,  T1.player_team,  T1.player_position,  T1.player_number,  T1.player_height,  T1.player_weight,  T1.player_birth_date,  T1.player_nationality,  T1.player_age,  T1.player_hometown,  T1.player_contract_type,  T1.player_salary,  T1.player_goal_number,  T1.goal_type"}
{"question": "What are the names, locations, prices, and sales volumes of the wines in the table wine?", "query": "SELECT T1.name,  T1.location,  T1.price,  T1.sales_volume FROM wine AS T1 WHERE T1.name  =  \"Chateau Margaux\""}
{"question": "What is the id and name of the stadium with the largest number of injury accidents", "query": "SELECT T1.name,  T1.id FROM stadium AS T1 WHERE T1.id  =  (SELECT T2.id FROM stadium AS T2 WHERE T2.id  =  (SELECT MAX(T3.id) FROM stadium AS T3 WHERE T3.name  = \"The Meadowlands\" AND T3.id  =  T1.id))"}
{"question": "Find the customer ids who have only one customer account", "query": "SELECT T1.id FROM customer AS T1 WHERE T1.customer_accounts  =  0"}
{"question": "What is the total number of employees?", "query": "SELECT count(*) AS total FROM employee;"}
{"question": "Which are the names of two employees that are friends, with the first name of one of them being \"John\" and the name of the other being \"D", "query": "SELECT T1.name FROM employees AS T1 JOIN friends AS T2 ON T1.employee_id  =  T2_friend_id WHERE T2.name  = \"John\" AND T1.name  = \"D\""}
{"question": "(Find the number of projects which each scientist are working on and their names) What is the average gradepoint of the students with the last name Smith?", "query": "SELECT T1.name,  T2.grade_point FROM student AS T1 JOIN project AS T2 ON T1.project_id  =  T2.\"project_id\" WHERE T1.last_name  =  \"Smith\""}
{"question": "Find the sum of the ages of all students", "query": "SELECT T1.age FROM Students AS T1 WHERE T1.age  >  0"}
{"question": "Find the names of students who are over 18 years old and have at least 4 years of experience", "query": "SELECT T1.student_id,  T1.name,  T1.age,  T1.experience FROM students AS T1 JOIN experience AS T2 ON T1.student_id  =  T2._id WHERE T1.age  >  18 AND T1.age  <  100 AND T1.experience  >  4"}
{"question": "Find the average number of gold medals for all clubs", "query": "SELECT AVG(gold_medals) FROM clubs"}
{"question": "What are the names, and in which year did they graduate, of the graduates of the program \"Computer Science\"?", "query": "SELECT T1.Name,  T1.Graduated_Year FROM Graduates AS T1 JOIN Program AS T2 ON T1.program_id  =  T2._id WHERE T2.name  = 'Computer Science'"}
{"question": "task:", "query": "A:"}
{"question": "What are the names, grades, and majors of all students in the school?", "query": "SELECT T1.name,  T1.grade,  T1.major FROM students AS T1 WHERE T1.school_id  =  \"1\""}
{"question": "What is the name, id, and gender of the person who took the most photos?", "query": "SELECT T1.person_id,  T1.name,  T1. gender FROM person AS T1 JOIN photo_person AS T2 ON T1.person_id  =  T2. person_id GROUP BY T1.person_id HAVING count(T2.photo_id)  =  1"}
{"question": "Find the average, minimum, maximum, average, and maximum speed of all cars driven by drivers with at least one accident", "query": "SELECT AVG(speed) AS avg_speed,  MIN(speed) AS min_speed,  MAX(speed) AS max_speed,  AVG(speed) AS avg2_speed,  MAX(speed_kmh) AS max_speed_kmh FROM car_speed WHERE driver_id  =  1;"}
{"question": "What are the names, scores, and emails of the employees who have a GPA of 2", "query": "SELECT T1.name,  T1.score,  T1.email FROM employees AS T1 WHERE T1.gpa  =  2"}
{"question": "What are the names and the ages of all the students?", "query": "SELECT T1.name,  T1.age FROM students AS T1"}
{"question": "Find the number of voters who are female and are over 50", "query": "SELECT count(*),  gender,  age FROM voter WHERE gender  =  'Female' AND age  >  50"}
{"question": "The price of the vehicle with the highest price is higher than the price of the vehicle with the lowest price", "query": "SELECT price FROM vehicle WHERE price  >  (SELECT min(price) FROM vehicle)"}
{"question": "Find the names of the countries, in reverse order, that have a population of at least 100 million people", "query": "SELECT T1.country_name FROM countries AS T1 WHERE T1.population  >  100"}
{"question": "(a novel question, about a collection of tables): What is the average ticket price for the seats with the highest probability of being sold out?", "query": "SELECT AVG(ticket_price) FROM ticket_prices WHERE ticket_price  >  '1.00' AND ticket_price  <  '2.00'"}
{"question": "What are the names, and id of, the colleges that have at least two players?", "query": "SELECT T1.name,  T2.id FROM college AS T1 JOIN player_college AS T2 ON T1.id  =  T2.id WHERE T2.player_id  =  1"}
{"question": "What is the total amount of settlement paid for all settlements?", "query": "SELECT T1.settlement_amount FROM settlements AS T1 WHERE T1.settlement_id  =  \"null\""}
{"question": "How many different types of vehicles are there?", "query": "SELECT DISTINCT TYPE FROM vehicle"}
{"question": "Who are the customers that have more than 1 policy? List the customers details and id", "query": "SELECT T1.customer_id,  T1.customer_name,  T1.customer_address,  T1.customer_city,  T1.customer_state,  T1.customer_zip,  T1.customer_phone,  T1.customer_email,  T1.customer_credit_limit,  T1.customer_debit_limit,  T1.credit_card_id,  T1.debit_card_id,  T2.customer_id,  T2.product_id,  T2.quantity,"}
{"question": "What are the names, addresses, and the number of rooms of all apartments?", "query": "SELECT T1.room_name,  T1.address,  T1.room_number FROM apartments AS T1"}
{"question": "What are the people who are not working in the project with the most hours? Show the average age and gender of each person", "query": "SELECT T1.name,  T1.age,  T1.gender FROM employee AS T1 JOIN project AS T2 ON T1.project_id  =  T2.id WHERE T2.project_name  =  'Project A' AND T2.project_status  =  'Active' AND T2.project_manager  =  'John Doe' AND T2.project_hours  =  '40'"}
{"question": "What are the names for all the cities where the company has its headquarters?", "query": "SELECT T1.city_name FROM company AS T1 JOIN city AS T2 ON T1.city_id  =  T2.\"city_id\" WHERE T1.company_id  =  '1'"}
{"question": "What are the locations of the following states?", "query": "SELECT state_name FROM states WHERE state_name IN (\"Alabama\", \"Alaska\", \"Arizona\", \"Arkansas\", \"California\", \"Colorado\", \"Connecticut\", \"Delaware\", \"Florida\", \"Georgia\", \"Hawaii\", \"Idaho\", \"Illinois\", \"Indiana\", \"Iowa\", \"Kansas\", \"Kentucky\", \"Louisiana\", \"Maine\", \"Maryland\", \"Massachusetts\", \"Michigan\", \"Minnesota\", \"Mississippi\", \"Missouri\", \"Montana\", \"Nebraska\", \"Nevada\", \"New Hampshire\","}
{"question": "Find the total number of sales of students who are in the top 10% of their class", "query": "SELECT T1.student_id,  T1.total_amount_purchased,  T1.total_value_purchased FROM students AS T1 JOIN ( SELECT student_id,  SUM(total_amount_purchasd) AS total_amount_purchased, SUM(total_value_purchasd) AS  total_value_purchased  FROM students AS T2 JOIN purchases AS T3 ON T2.student_id  =  T3.student_id GROUP BY student_id  ) AS T4 ON T1.student_id"}
{"question": "List the name and the number of employees of the company in which the department manager is working", "query": "SELECT T1.firstname,  T1.lastname,  T1.department_id,  T1.employee_id,  T1.company_id,  T1.title,  T1.salary,  T1.start_date,  T1.end_date,  T1.city_id,  T1.state_id,  T1.zip_code,  T1.country_id,  T1.phone_number,  T1.fax_number,  T1.email_address,  T1."}
{"question": "List the first names and the surnames of students with a \"last\" name", "query": "SELECT T1.first_name,  T1.surname FROM student AS T1 WHERE T1.last_name  =  \"Smith\""}
{"question": "What are the names from the table 'users' who were born in the same year as \"Ariel?\"", "query": "SELECT name FROM users WHERE year(birth_date) = \"Ariel\""}
{"question": "List the names of the top 10 players in terms of overall rating in the league", "query": "SELECT T1.player_id,  T1.name_first,  count(*) FROM player AS T1 JOIN player AS T2 ON T1.id  =  T2.id GROUP BY T1.playerid ORDER BY count(*) DESCRIBE"}
{"question": "What are all the possible values of the 'type' column in the table 'user_roles'?", "query": "SELECT DISTINCT user_roles.type FROM user_roles;"}
{"question": "How many times did the player score more than 1000 and less than 1500 in the last season?", "query": "SELECT count(*) AS count FROM Player WHERE score > 1000 AND score < 1500"}
{"question": "What are the names, id, and email of all customers who have at least one credit card", "query": "SELECT T1.customer_name,  T2.id,  T2.email FROM customers AS T1 JOIN customer_credit_cards AS T2 ON T1.id  = T2.customer_id WHERE EXISTS (SELECT T3.id FROM customer_credit_cards AS T3 WHERE T3.customer_id  =  T1.id)"}
{"question": "What is the name and the number of books in the library?", "query": "SELECT name,  count(*) FROM library"}
{"question": "Find the location of the place where the most people have been to", "query": "SELECT T1.location FROM Places_Visited AS T1 JOIN people AS T3 ON T1.place_id  =  T3.place_id WHERE T3.name  =  \"New York\""}
{"question": "What is the average price of a document? List the ID, price, type, and name", "query": "SELECT T1.price,  T1.type,  T1.name FROM document AS T1 WHERE T1.price  >  0.00;"}
{"question": "Find the number of distinct values for each column of the table and list them", "query": "SELECT count(*) AS count,  column_name AS column_name_1,  column_name AS column2_name,  column_name AS column3_name,  column_name_1 AS column_name_1_1,  column_name_1  AS column_name_1_2,  column_name_1_1 AS column_name_2_1,  column_name  AS column_name_3_1,  column_name as column_name_4_1,  column_name,  column_name AS column_1_name"}
{"question": "Find the names of students who have the highest average grade", "query": "SELECT name FROM student WHERE average_grade  =  \"null\""}
{"question": "What are the names and ids of all professors who have not been involved in any course?", "query": "SELECT T1.id,  T1.name_first,  'T1.name_last' FROM professor AS T1 WHERE NOT EXISTS (SELECT 1 FROM course AS T2 WHERE T2.teacher_id  =  T1.id)"}
{"question": "Find the names of all the products or services advertised in a newspaper", "query": "SELECT T1.name FROM product_advertiser_links AS T1 JOIN product_advertiser_links_products AS T2 ON T1.product_id  =  T2._id WHERE T2.advertiser_id  =  \"1\""}
{"question": "What are the addresses of the employees who work for the company that has the highest number of employees in the company?", "query": "SELECT T1.address FROM employees AS T1 JOIN employees_address AS T2 ON T1.employee_id  =  T2.employee_id WHERE T1.company_id  =  (SELECT max(company_id) FROM employees)"}
{"question": "List the names and ages of all the parents", "query": "SELECT T1.name,  T1.age FROM parent AS T1 WHERE T1.id  =  (SELECT T2.id FROM parent AS T2 WHERE T2.id  =  T1.parent_id)"}
{"question": "What are the names and gender of the persons in the \"Dormitory\" whose names are unique?", "query": "SELECT T1.first_name,  T1.last_name,  T1.gender FROM Person AS T1 JOIN Person_Dormitory AS T2 ON T1.id  = T2.person_id WHERE T2.name  = 'Dormitory' AND T2.name  =  UNIQUE(T1.first_name,  t1.last_name,  t1.gender)"}
{"question": "Find the first name, last name and age of the students who are enrolled in CS course", "query": "SELECT T1.first_name,  T1.last_name,  T1.age FROM student AS T1 WHERE T1.course  =  \"CS\""}
{"question": "(a question about a sql table) Which department has the most students?", "query": "SELECT T1.department_name FROM department AS T1 JOIN students AS T2 ON T1.department_id  =  T2.\"id\" WHERE T2.student_count  >  (SELECT T3.student_count FROM department AS T3 JOIN students AS T4 ON T3.department_id  = T4.department_id WHERE T4.student_count  >  T2.student_count)"}
{"question": "Find the id of all the products that have the same name and color as a red book", "query": "SELECT DISTINCT T1.product_id FROM product AS T1 JOIN product_color AS T2 ON T1.product_id  =  T2.product_id WHERE T2.color  =  'Red' AND T1.name  =  'Red Book'"}
{"question": "Find the name of employees in the department with the most employees", "query": "SELECT T1.name FROM employees AS T1 JOIN department AS T2 ON T1.department_id  =  T2.department_id WHERE T2.employees_count  >  (SELECT T3.employees_count FROM employees AS T3 WHERE T3.department_id  = T2.department_id)"}
{"question": "what are the names and locations of all the tracks?", "query": "SELECT name FROM track"}
{"question": "List the names of the customers who have no policies", "query": "SELECT T1.CustomerID,  T1.CustomerName,  T1.PolicyID FROM customer AS T1 WHERE T1.PolicyID  =  0"}
{"question": "What are the names, ages, and genders of the students of the class 'Physics 101'?", "query": "SELECT T1.name,  T1.\"age\",  T1.gender FROM student AS T1 WHERE T1.class_id  =  \"Physics 101\""}
{"question": "What are the names (first and last) of all students?", "query": "SELECT T1.first_name,  T1.last_name FROM students AS T1"}
{"question": "what are the names and phone numbers of all patients who had more than one appointment at a specific hospital?", "query": "SELECT T1.patient_id,  T2.first_name,  T2.last_name,  T2.phone_number FROM patient AS T1 JOIN patient_history AS T2 ON T1.patient_id  =  T2.patient_id WHERE T2.hospital_id  =  \"Hospital\" AND T2.date  =  \"2010-01-01\" AND T2.time  =  \"10:00:00\" AND T2.time_type  =  \"AM\""}
{"question": "What is the average age of all employees in the department of Information Systems?", "query": "SELECT AVG(Age) FROM Employee WHERE Department = \"Information Systems\""}
{"question": "Find the name and address of all customers where the payment method is cash", "query": "SELECT customer_name,  customer_address FROM customers WHERE payment_method  =  \"Cash\""}
{"question": "(a novel question, about a \"", "query": "SELECT T1.id,  T1.title,  T1.author_id,  T1.publisher_id,  T1.price,  T1.publish_date,  T1.isbn,  T1.isbn13,  T1.isbn10,  T1.isbn9,  T1.isbn8,  T1.isbn7,  T1.isbn6,  T1.isbn5,  T1.isbn4,  T1.isbn3,  T1.isbn"}
{"question": "What are the names, roles and departments of the employees who are in the engineering department?", "query": "SELECT DISTINCT T1.firstname,  T1.lastname,  T1.department_name,  T1.role_name FROM employee AS T1 JOIN department AS T2 ON T1.department_id  =  T2.id JOIN employee_role AS T3 ON T1.id  =  T3.employee_id WHERE T2.department_name  =  \"Engineering\""}
{"question": "What are the names, locations and products of the enzymes with \"inhibitor\" interaction?", "query": "SELECT T1.enzyme_id,  T1.name,  T1.location,  T1.product_id,  T1.inhibitor_id FROM enzyme_interaction AS T1 WHERE T1.enzyme_id IN (SELECT T2.enzyme_id FROM enzyme_interaction_inhibitor AS T2 WHERE T2.inhibitor_id  =  '1')"}
{"question": "List the ids of products with at least one color", "query": "SELECT product_id FROM products WHERE product_color  =  \"red\" OR product_color  =  \"blue\" OR product_color  = \"green\" OR product_color  =   \"yellow\""}
{"question": "What are the first name and last name of all students in the class?", "query": "SELECT T1.first_name,  T1.last_name FROM student AS T1 JOIN class AS T2 ON T1.class_id  =  T2._id WHERE T2.class_id  =  \"1\""}
{"question": "What are the names and the average salary of all of the drivers of the Lincoln Town Car?", "query": "SELECT T1.name,  T1.salary FROM drivers AS T1 GROUP BY T1.name ORDER BY T1.name"}
{"question": "How many tests have the result \"Fail\"?", "query": "SELECT count(*) AS count FROM test WHERE result  =  'Fail'"}
{"question": "What are the names and address of all the customers who live in a square", "query": "SELECT T1.customer_name,  T2.customer_address FROM customers AS T1 JOIN customers AS T2 ON T1.city_id  =  T2.city_id WHERE T1.city_id  IN (SELECT T3.city_id FROM city AS T3 WHERE T3.name  =  \"Square\")"}
{"question": "What are the names for the different types of customers?", "query": "SELECT customer_type_code,  customer_type_name FROM customer_types"}
{"question": "Find all the faculty with a last name of \"Chang\" and a first name of \"John\"", "query": "SELECT T1.last_name,  T1.first_name FROM faculty AS T1 WHERE T1.last_name  =  \"Chang\" AND T1.first_name  =  \"John\""}
{"question": "Which rooms cost between 10 and 15? Give me the room names", "query": "SELECT T1.room_id,  T1.room_price FROM room AS T1 WHERE T1.price  >  10 AND T1.price  <  15"}
{"question": "What is the first and last name of the customer named John D", "query": "SELECT T1.first_name,  T1.last_name FROM customer AS T1 WHERE T1.first_name  =  \"John D\""}
{"question": "(a novel question, about a function): Find the average of all ratings of restaurant \"A\"", "query": "SELECT AVG(rating) FROM restaurant AS T1 WHERE T1.name  = \"A\""}
{"question": "What is the name for the medication used for the patient staying the room 111?", "query": "SELECT name FROM medication WHERE room_id  =  \"111\" AND patient_id  =  \"1\""}
{"question": "How many students are there in the class \"Mathematics\"?", "query": "SELECT T1.name FROM student AS T1 WHERE T1.class_id  =  \"Mathematics\";"}
{"question": "What are the names for all the products which have a size of 3 x 3?", "query": "SELECT T1.product_name FROM products AS T1 WHERE T1.size  =  3 AND T1.size  =  9"}
{"question": "What is the number of tables in the database?", "query": "SELECT count(*) AS \"number of tables\" FROM information_schema.tables"}
{"question": "Find the name of all the courses that have the same name as the course of the course number \"6\"", "query": "SELECT course_name FROM courses WHERE course_number = \"6\""}
{"question": "What is the full title of the man who has lived in the country \"South Africa\"", "query": "SELECT T1.full_name FROM people AS T1 JOIN country AS T2 ON T1.country_id  =  T2.id WHERE T2.name  =  \"South Africa\""}
{"question": "List the names of the companies located in the city of Paris", "query": "SELECT T1.company_name FROM company AS T1 JOIN city AS T2 ON T1.city_id  =  T2.city_id WHERE T2.city_name  =  \"Paris\""}
{"question": "What are the names, positions, and ages of all students in the department of Mathematics", "query": "SELECT T1.name,  T2.position,  T3.age FROM student AS T1 JOIN department AS T2 ON T1.depid  =  T2.depid JOIN student_info AS T3 ON T1.student_id = T3.student_id WHERE T2.name  =  \"Mathematics\""}
{"question": "What is the name, id and type of each document about the course with id 6?", "query": "SELECT name,  id,  type FROM document_course_table WHERE course_id  =  6"}
{"question": "What are the names and positions of the people who have the most accounts?", "query": "SELECT T1.person_id,  T1.name_first,  count(*) FROM person AS T1 JOIN account AS T2 ON T1.person_id  =  T2.person_id GROUP BY T1.person_id ORDER BY count(*) ASC"}
{"question": "Find the names of students who are enrolled in \"R", "query": "SELECT T1.name FROM student AS T1 JOIN class_registration AS T2 ON T1.stu_id  =  T2.stu_id WHERE T2.class_code  =  \"R\""}
{"question": "Find the name of all employees who have purchased a flight simulator on the campus's website", "query": "SELECT employee_name FROM employees WHERE employee_id IN (SELECT T1.employee_id FROM employees AS T1 JOIN purchases AS T2 ON T1.employee_id  =  T2.employee_id)"}
{"question": "What are the names, last names, and nicknames of the employees who were hired in 2016?", "query": "SELECT T1.LastName,  T1.FirstName,  T2.Nickname FROM employees AS T1 JOIN employee_info AS T2 ON T1.EmployeeId  =  T2.id ORDER BY T1.LastName,  \"T1.FirstName\""}
{"question": "What are the names and surnames of all employees whose salary is greater than 500?", "query": "SELECT T1.first_name,  T1.last_name FROM employees AS T1 WHERE salary  >  500"}
{"question": "(For example:", "query": "SELECT count(*)  FROM customer"}
{"question": "Find the name of the store with the most number of products", "query": "SELECT T1.name FROM stores AS T1 JOIN products AS T2 ON T1.store_id  =  T2.\"store_id\" WHERE T2.quantity  >  T1.quantity"}
{"question": "What are the names, last names and ids of all athletes who have won medals", "query": "SELECT T1.firstname,  T1.lastname,  T1.id FROM athlete AS T1 JOIN medal_winner AS T2 ON T1.id  =  T2.id WHERE T2.name  = \"gold\""}
{"question": "List all the students who took Intro to Economics", "query": "SELECT T1.id,  T1.first_name,  T1.last_name,  T1.gender,  T1.dob,  T1.major,  T1.year_graduated,  T1.year_enrolled,  T1.year_of_graduation,  T1.year_in_school,  T1.year_at_school,  T1.first_year_of_school,  T1.second_year_of_school,"}
{"question": "What are the names, id and date of birth of all the students of a course?", "query": "SELECT T1.student_name,  T1.student_id,  T1.student_dob FROM student AS T1 JOIN course AS T2 ON T1.student_id  =  T2.student_id"}
{"question": "What are the names and ids of customers who did not have any order?", "query": "SELECT T1.id,  T1.name FROM customer AS T1 JOIN order_item AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_id IS NULL"}
{"question": "Find the name of all movies that have a rating of 2 or less", "query": "SELECT T1.title FROM Movie AS T1 WHERE T1.rating  =  2"}
{"question": "I have tried to use regular expression to find the word \"question\" and replace it with \"question\", but it doesn't work", "query": "SELECT * FROM question WHERE word = \"question\""}
{"question": "Find the number of authors who are not members of a workshop", "query": "SELECT count(*)  FROM authors AS T1 JOIN workshop AS T2 ON T1.workshop_id  =  T2.id WHERE T2.id  =  '1'"}
{"question": "(a question about a sql table), \"question\" replaced by the question text, but not the question type", "query": "(the sql query to answer the query), after \""}
{"question": "New question, based on a new table", "query": "SELECT T1.question_id,  T1.question,  T1.answer,  T1.correct_answer,  T1.correct,  T1.answer_id,  T1.answer_text,  T1.answer_type,  T1.answer_date,  T1.answer_time,  T1.answer_location,  T1.answer_source,  T1.answer_tags,  T1.answer_user_id,  T1.user_id,  T1._id,  T1.answer,"}
{"question": "What is the average price of the cheapest product?", "query": "SELECT avg(Price) FROM Products WHERE Price  =  (SELECT MIN(Price) FROM Products)"}
{"question": "Find the names of all players who have a home team and plays for a different team", "query": "SELECT T1.player_name FROM player AS T1 JOIN team AS T2 ON T1.player_id  =  T2.[player_id] WHERE T2.team_id  =  '1' AND T2.team_id !=  '1'"}
{"question": "What is the average score of all players?", "query": "SELECT AVG(score) FROM player"}
{"question": "What are the names, id, and grades of all students in all classes with the word \"tutor\" in their name?", "query": "SELECT T1.name,  T1.id,  T1.grade FROM students AS T1 JOIN classes AS T2 ON T1.class_id  =  T2.class_id JOIN students_classes AS T3 ON T1.id  =  T3.student_id JOIN students_classes AS  T4 ON T3.class_id  =  'Tutor'"}
{"question": "What is the alphabetically ordered  list of all the distinct names of girls' names?", "query": "SELECT name_first,  name_last FROM girls ORDER BY name_last;"}
{"question": "What are the names and ids of all faculty members from the biology department?", "query": "SELECT T1.name,  T1.id FROM faculty AS T1 JOIN department AS T3 ON T1.department_code  =  T3.code WHERE T3.name  = 'Biology'"}
{"question": "which customers have a credit score of between 100 and 110?", "query": "SELECT customer_id FROM customers WHERE credit_score BETWEEN 100 AND 110"}
{"question": "What is the average salary of all employees who has a grade between B and C?", "query": "SELECT AVG(SALARY) FROM EMPLOYEE WHERE GRADE  B  AND GRADE  C"}
{"question": "What are the names, address, email and phone number of all the students who sit in the first row of the lecture?", "query": "SELECT name,  address,  email,  phone_number FROM students WHERE seat_id  =  1"}
{"question": "What are the names, and names of the cities, of the countries that are represented by the letters \"A\", \"B\", and \"C\" in the", "query": "SELECT T1.country_name,  T1.city_name FROM country AS T1 JOIN country_city AS T2 ON T1.country_id  =  T2.country_id WHERE T2.letter  =  \"A\" OR T2.letter  =  'B' OR T2.letter  = 'C'"}
{"question": "What are the products that have the highest unit price?", "query": "SELECT T1.product_name,  T1.product_price FROM product AS T1 WHERE T1.product_price  >  (SELECT T2.product_price FROM product AS t2 WHERE t2.product_name  =  \"Toyota Camry\" )"}
{"question": "Find the most popular type of books", "query": "SELECT T1.type_id,  COUNT(*) FROM book AS T1 GROUP BY T1.type_id ORDER BY COUNT(*) DESC LIMIT 1;"}
{"question": "What are the names, genders and ages of the students who were born in the month of June?", "query": "SELECT T1.name,  T1.gender,  T1.age FROM student AS T1 WHERE T1.birth_date  =  \"June\""}
{"question": "What are the names, IDs, and email addresses of students who have taken all three courses in the course \"Database Design\" in the past semester?", "query": "SELECT T1.student_id,  T1.name,  T1.  T1.email_address FROM student AS T1 JOIN course_enrollment AS T2 ON T1.student_id  =  T2.student_id AND T2.course_id  =  \"Database Design\" GROUP BY T1.student_id ORDER BY T1.name ASC"}
{"question": "What is the first item of codeword \"TITANIC\"?", "query": "SELECT T1.codeword FROM codeword AS T1 WHERE T1.codeword  =  \"TITANIC\""}
{"question": "What are the first three letters of the names of the four basketball players", "query": "SELECT first_name,  last_name FROM players WHERE first_name  LIKE \"A%\" AND last_name  LIKE \"B%\" AND first_name  LIKE \"C%\" AND last_name  LIK \"D%\""}
{"question": "What is the average cost of procedures?", "query": "SELECT AVG(cost) FROM Procedures"}
{"question": "What are the names, years and country codes of all countries?", "query": "SELECT T1.country_name,  T2.country_code FROM country AS T1 JOIN country_code AS T2 ON T1.country_id  =  T2.country_id"}
{"question": "What are the names and IDs of the customers with the highest balance?", "query": "SELECT customer_id,  name FROM customers WHERE credit_score  >  0 ORDER BY credit_score DESC LIMIT 1"}
{"question": "Find the capacity and age of the dorm whose name has subscript \"Donor\"", "query": "SELECT T1.capacity,  T1.age FROM dorm AS T1 WHERE T1.name  =  \"Donor\""}
{"question": "What is the average salary of those who were hired in the year 2004?", "query": "SELECT AVG(salary) FROM employee WHERE hiredate  =  '2004'"}
{"question": "What are the names from the team of the students who scored the highest number of goals in the last quarter of the first game in the 2014 FIFA World Cup?", "query": "SELECT T1.name FROM team AS T1 JOIN scores AS T2 ON T1.id  =  T2.team_id WHERE T2.quarter  =  1 AND T2.game_id  =  1 AND T2.[score]  =  (SELECT max(score) FROM scores WHERE game_id  =  1 AND quarter  =  1)"}
{"question": "What is the name, last name, and phone numbers of all students who are in the class with id 101?", "query": "SELECT T1.student_name,  T1.student_lname,  T2.student_phone FROM student AS T1 JOIN class AS T2 ON T1.student_id  =  T2.student_id WHERE T2.class_id  =  101"}
{"question": "List all the customers who are female and have at least one car", "query": "SELECT customer_id,  gender,  has_car FROM customer WHERE gender  =  'F' AND has_car  =  'Y'"}
{"question": "What are the names and the city of birth of the students who have both accounting and computer science degrees?", "query": "SELECT T1.name,  T1.\"city of birth\" FROM student AS T1 WHERE T1.major  =  \"accounting\" AND T1.major  =  'computer science'"}
{"question": "What is the name and location of the company's first office?", "query": "SELECT T1.name,  T1.location FROM companies AS T1 WHERE T1.name  =  \"Company\""}
{"question": "What is the average age of the people who work in the kitchen?", "query": "SELECT AVG(age) FROM people WHERE job_id  =  \"kitchen\""}
{"question": "What is the name and street of the house that has the greatest number of rooms?", "query": "SELECT T1.house_id,  T2.house_name,  T3.house_address,  T4.house_rooms FROM houses AS T1 JOIN house_rooms AS T2 ON T1.house_id  =  T2.house_id JOIN houses AS T3 ON T2.house_id  =  'T3.house_id' JOIN houses AS T4 ON T3.house_id  =  't4.house_id' WHERE T1.house_id  >  'T4.house_id' AND T1.house_"}
{"question": "What is the number in the first row of each column?", "query": "SELECT T1.column_name FROM table_name AS T1 WHERE T1.column_name  =  \"1\""}
{"question": "List the count and ID of each product in all the orders?", "query": "SELECT T1.product_id,  T1.count,  T1.id FROM order AS T1 JOIN product AS T2 ON T1.product_id  =  T2.product_id"}
{"question": "What are the names, ordered by score, of all players in the league?", "query": "SELECT T1.name,  T2.score FROM player AS T1 JOIN league AS T2 ON T1.player_id  =  T2.player_id ORDER BY T1.name ASC"}
{"question": "Find the names of all cities that are the capital of two or more countries and whose population is over 100,000", "query": "SELECT name FROM city WHERE city_id IN (SELECT city_id FROM country WHERE country_name IN (\"USA\", \"Canada\", \"France\", \"Germany\", \"Spain\", \"Italy\", \"Japan\", \"China\", \"Russia\", \"Brazil\", \"India\", \"Mexico\", \"Argentina\", \"Thailand\", \"Vietnam\", \"Indonesia\", \"Philippines\", \"South Korea\", \"Kuwait\", \"Saudi Arabia\", \"UAE\", \"Qatar\", \"Morocco\", \"Moroccan\", \"Algeria\", \"Egypt\", \"Tunisia\", \"Lib"}
{"question": "Which students are not enrolled in any course? Find the name and id", "query": "SELECT T1.student_id,  T1.name_first,  name_last FROM student AS T1 WHERE NOT EXISTS (SELECT T2.student_id FROM course AS T2 WHERE T2.student_id = T1.student_id)"}
{"question": "What are the names and email addresses of all professors who have a home country of \"USA\"?", "query": "SELECT T1.name,  T1.email FROM professors AS T1 WHERE T1.home_country  =  'USA'"}
{"question": "Find the number of individuals who are in two or more groups that have the same first name", "query": "SELECT DISTINCT T1.first_name, T1.last_name FROM groups AS T1 JOIN groups AS T2 ON T1.group_id  =  T2.group_id WHERE T1.first_name  =  T2.first_name"}
{"question": "What is the name and age of the oldest employee in the company?", "query": "SELECT T1.first_name,  T1.last_name,  T1.age FROM employees AS T1 WHERE T1.age  =  (SELECT MAX(T2.age) FROM employees AS T2)"}
{"question": "Give the names of all customers and their account balances", "query": "SELECT customer_id,  account_balance FROM customer"}
{"question": "Return the code of a document type", "query": "SELECT document_type_code FROM documents"}
{"question": "Find the names of all students who took the course 'IT4A'", "query": "SELECT T1.fname,  T1.lname FROM student AS T1 JOIN class AS T2 ON T1.studentid  =  T2.studentid WHERE T2.course  =  'IT4A'"}
{"question": "Find the name of all the customers who bought a keyboard", "query": "SELECT T1.name FROM customer AS T1 JOIN order_item AS T2 ON T1.customer_id  = T2.customer_id WHERE T2.item_name  =  'keyboard'"}
{"question": "What are the ids and names of the teachers who taught \"Biology\" in the fall of 2004?", "query": "SELECT T1.teacher_id,  T1.name FROM teachers AS T1 JOIN class AS T2 ON T1.teacher_id  =  T2._id WHERE T2.class_name  =  \"Biology\""}
{"question": "What is the city that has the highest population?", "query": "SELECT city FROM City WHERE population  =  (SELECT max(population) FROM City);"}
{"question": "what are the names of the two persons who have been on a mission at least twice?", "query": "SELECT T1.name,  T2.name FROM Person AS T1 JOIN Person AS T2 ON T1.mission_id  =  T2._mission_id WHERE T1.mission_id  >  1 AND T2.mission_id  >  2"}
{"question": "What is the name, type and age of the student who is on the way to home?", "query": "SELECT T1.name,  T1.type,  T1.age FROM student AS T1 WHERE T1.id  =  (SELECT T2.id FROM student AS T2 WHERE T2.id  =  T1.home_id)"}
{"question": "What is the first name and last name of the student who registered for the first time and has an id of \"1\"?", "query": "SELECT T1.first_name,  T1.last_name FROM students AS T1 WHERE T1.id  =  1"}
{"question": "When is the last day that the students can cancel their registration before the start of classes?", "query": "SELECT T1.date_of_cancel FROM registration_details AS T1 WHERE T1.student_id  =  \"S1\" AND T1.date_of_start  =  \"2016-01-01\" AND T1.date_to_cancel  =  \"2016-01\""}
{"question": "What are the names, addresses, and phone numbers of all customers who live in the university?", "query": "SELECT T1.customer_first_name, T1.customer_last_name, T1.customer.address_type_code, T1.customer.address.street_address, T1.customer.addresses.city, T1.customer.addressses.state, T1.customer.addresss.zip, T1.customer.addressss.phone_number FROM customers AS T1 JOIN customer_addresses AS T2 ON T1.cust_id  =  T2_cust_id WHERE T1.cust_id IN (SELECT customer_id FROM"}
{"question": "find the names of the products with length of 3 or more", "query": "select name from product where length(name) > 3"}
{"question": "find the names of the professors who have a rank at least 2 times", "query": "SELECT T1.name FROM professor AS T1 JOIN rank AS T2 ON T1.rank_id  =  T2_id WHERE T2.rank  >=  2"}
{"question": "Show the number of students in each course", "query": "SELECT count(*) AS total FROM students WHERE course_id = 1"}
{"question": "What are the names and ids of the customers who have bought the product \"Vitamin D\"?", "query": "SELECT T1.Customer_id,  T1.name,  T1.id FROM customer AS T1 JOIN order_items AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.product_id  =  \"Vitamin D\""}
{"question": "Show the average height of males, as well as the average width of females", "query": "SELECT AVG(height) FROM Males, AVG(width) FROM Females"}
{"question": "What are the names for the two largest cities in the world?", "query": "SELECT city FROM cities WHERE city  >  'New York' AND city  <  'Tokyo'"}
{"question": "Find the number of documents with the most number of views", "query": "SELECT count(*) AS count FROM documents WHERE view_count  >  (SELECT max(view_count) FROM documents)"}
{"question": "What are the names and grades of students in grade two?", "query": "SELECT T1.student_name,  T2.grade FROM student_record AS T1 JOIN grade_two AS T2 ON T1.id  = T2.id"}
{"question": "What are the names, addresses, and ages of all the members of the club named \"Tennis\"?", "query": "SELECT T1.Name,  T1.Address,  T1.Age FROM members AS T1 WHERE T1.Club_Name  =  \"Tennis\""}
{"question": "How many schools are there in the United States?", "query": "SELECT COUNT(*) FROM Schools"}
{"question": "List all the vehicles from the vehicle type \"car\" with a speed greater than 8", "query": "SELECT T1.Vehicle_Type,  T1.Vehicle_ID,  T1.Veh_Make,  T1.Vehicles_Speed FROM Vehicle AS T1 WHERE T1.Vehicle_Speed  >  8"}
{"question": "Find the name of all students taught by OTHA Moyer", "query": "SELECT T1.name FROM student AS T1 JOIN teaches AS T3 ON T1.student_id = T3.student_id WHERE T3.teacher_id = \"OTHA Moyer\""}
{"question": "What are the last four digits of the account number of the customer with id 10?", "query": "SELECT T1.account_number FROM customer AS T1 WHERE T1.id  =  10"}
{"question": "What are the names and id of the customers who had a product named \"catnip\"?", "query": "SELECT T1.id,  T1.name_first,  name_last FROM customer AS T1 JOIN product AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.product_name = \"catnip\""}
{"question": "How many faculty members are there in the university?", "query": "SELECT count(*)  FROM faculty;"}
{"question": "Find the student id, name and city of the student with the smallest age", "query": "SELECT T1.student_id,  T2.name,  T2.city FROM Student AS T1 JOIN Student_Info AS T2 ON T1.id  = T2.student_id WHERE T2.age  =  (SELECT min(age) FROM Student)"}
{"question": "Find the number of authors with a submission score less than 100, and the number of authors with a submission scores greater than 150", "query": "SELECT count(*) AS \"number of authors with a submission score less\",  T1.name AS \"name of the author with a submission score less\" FROM authors AS T1 JOIN submissions AS T2 ON T1.authorid  =  T2.authorid WHERE T2.score  <  100"}
{"question": "What is the name of the product with the lowest price?", "query": "SELECT T1.product_name FROM product AS T1 WHERE T1.price  =  \"lowest price\""}
{"question": "What are the ids and names of the teachers of the class with the shortest average class duration?", "query": "SELECT T1.id,  T1.name FROM class AS T1 JOIN teacher AS T2 ON T1.class_id  =  T2._id WHERE T2.average_class_duration  =  (SELECT AVG(T3.class_duration) FROM class AS T3)"}
{"question": "Given a set of customers, find the customers with name \"Michele\" and city \"New York\"", "query": "SELECT name FROM customers WHERE name  =  \"Michele\" AND city  =  \"New York\""}
{"question": "A:\n\nI cannot say for sure, but i guess the reason for this error is that the task is not correctly formatted", "query": "SELECT T1.question_id,  T1.question,  T1.answer FROM question AS T1 JOIN answer AS T2 ON T1.question_id  =  T2.question_id"}
{"question": "List the number of students who are in both \"Introductory Statistics\" and \"Introductory Statistics 2\" at the \"University of California - Berkeley\"", "query": "SELECT COUNT(*) FROM students AS T1 JOIN courses AS T2 ON T1.course_id  =  T2.course_id WHERE T2.course_code  =  \"Introductory Statistics\" AND T2.course_code  >  \"Introductory Statistics 2\""}
{"question": "What is the number of vehicles that were manufactured by Ford?", "query": "SELECT count(*) AS \"count\" FROM vehicles WHERE manufacturer  =  \"Ford\""}
{"question": "(a question about a sql table, for example): Find the name of the customer who has a balance of 1000", "query": "SELECT T1.name FROM customer AS T1 WHERE T1.balance  =  1000"}
{"question": "What are the name and address of the customer who has purchased the most number of products during the last three months?", "query": "SELECT T1.customer_name,  T2.customer_address FROM customers AS T1 JOIN orders_history AS T2 ON T1.id  = T2.customer_id WHERE date_from  =  '2016-12-01' AND date_to  =  '2016-12-' AND T2.order_status  =  'Packing'"}
{"question": "Find the name of each customer who returned at least one product and whose purchases are under 50000", "query": "SELECT customer_id,  name FROM customer WHERE purchases  <  50000 GROUP BY customer_id ORDER BY count(*)"}
{"question": "What is the number (count) of movies with the first name \"Bruce\"?", "query": "SELECT COUNT(*) FROM movies WHERE first_name  =  \"Bruce\";"}
{"question": "Find the names of all students who were in class in the year 2009 and are still alive", "query": "SELECT DISTINCT T1.fname,  T1.lname FROM student AS T1 WHERE T1.year  =  2009 AND T1.status  =  'alive'"}
{"question": "What are the names, addresses, and ages of the students living in all the houses?", "query": "SELECT T1.name,  T1.address,  T1.age FROM student AS T1 JOIN house AS T2 ON T1.house_id  =  T2.house_id"}
{"question": "What are the names, IDs and locations of all the restaurants in the city of New York? (Use the table \"restaurants\")", "query": "SELECT name,  id,  location FROM restaurants WHERE city = \"New York\""}
{"question": "What is the name and id of the school in the United Kingdom that has the largest number of students?", "query": "SELECT school_name,  school_id FROM school WHERE school_name  =  \"University of Cambridge\""}
{"question": "Which employees are responsible for making the product?", "query": "SELECT T1.employee_id,  T2.name FROM employees AS T1 JOIN employees AS T2 ON T1.manager  =  T2.employee_id"}
{"question": "Show the names of all the members of the committee", "query": "SELECT T1.name FROM committee AS T1 WHERE T1.committee_id  =  \"1\""}
{"question": "List the name and id of all the documents in order by id", "query": "SELECT T1.id,  T1.name FROM documents AS T1 ORDER BY T1.id"}
{"question": "What are the names and age of the students?", "query": "SELECT T1.student_name,  T1.student_age FROM students AS T1"}
{"question": "How many distinct regions are there in the UK?", "query": "SELECT DISTINCT region FROM UK"}
{"question": "How many students have a first name that contains the word \"John\", and a second name that contains the word \"Smith\"?", "query": "SELECT COUNT(*) AS \"count\" FROM students WHERE first_name  LIKE \"%John%\" AND second_name  LIKE \"%Smith%\""}
{"question": "List the names of the employees, who have been working for at least two years", "query": "SELECT T1.name FROM employee AS T1 JOIN employee_history AS T2 ON T1.employee_id  =  T2.employee_id WHERE T2.start_date  >  \"2016-01-01\" AND T2.end_date  <  \"2016-12-31\""}
{"question": "What are the ids and names of all the clubs that have members in at least one of the cities with city code \"BAL\"", "query": "SELECT T1.id,  T1.name FROM Clubs AS T1 JOIN Cities AS T2 ON T1.city_id  =  T2.\"city_id\" WHERE T2.\"city_code\" =  \"BAL\""}
{"question": "What are the names, ages, and genders of the faculty members who have a certain amount of money in their bank accounts?", "query": "SELECT name,  age,  gender FROM faculty WHERE money  >  1000"}
{"question": "What is the name and gender of the student with the highest average age?", "query": "SELECT T1.student_id,  T1.age FROM student AS T1 JOIN student_age AS T2 ON T1.student_id  =  T2.student_id WHERE T1.age  =  (SELECT MAX(T3.age) FROM student AS T3);"}
{"question": "(a novel question, about a database with a different schema): What is the maximum number of students that can be accommodated in classroom 1?", "query": "SELECT T1.room_id,  T1.max_students FROM classroom AS T1 WHERE T1.room_id  =  1;"}
{"question": "What is the first name of the president of the company founded by John?", "query": "SELECT T1.name FROM president AS T1 JOIN company AS T2 ON T1.company_id  =  T2._id WHERE T2.name  = \"John\""}
{"question": "Find the number of salespersons who are in the sales department", "query": "SELECT count(*) AS count FROM employee AS T1 JOIN department AS T3 ON T1.dept_id  =  T3.id WHERE T3.dept_name  = 'Sales'"}
{"question": "What are the last names of the people who have a car with color \"black\"?", "query": "SELECT T1.last_name FROM Person AS T1 JOIN Car AS T2 ON T1.person_id  =  T2.person_id WHERE T2.color  =  'black'"}
{"question": "What are the names and addresses of the customers who are not in the state of Alabama, Florida, or Mississippi?", "query": "SELECT customer_id,  customer_name,  customer_address FROM customers WHERE state  NOT IN ( 'Alabama', 'Florida', 'Mississippi' )"}
{"question": "What are the last names of the students who participated in the most races after 2012?", "query": "SELECT T1.last_name FROM athletes AS T1 JOIN races AS T2 ON T1.race_id  =  T2.race_id WHERE T2.year  =  \"2012\" AND T2.race_id  =  (SELECT MAX(race_id) FROM races WHERE year  =  \"2012\")"}
{"question": "What are the names, in descending order, of the people who took the test that had the highest average score?", "query": "SELECT T1.name,  T2.score FROM test AS T1 JOIN test_results AS T2 ON T1.id  =  T2.id ORDER BY T2.score DESC"}
{"question": "What are the names, birthdays, and id numbers of the customers who spent at least $1000 last year?", "query": "SELECT name, birthday, id FROM customers WHERE amount_spent  >  1000"}
{"question": "List the names of all the people, in ascending order, who have had their first-born children in a year", "query": "SELECT T1.person_id,  T1.person_name,  T1.person_first_born_child_year FROM person AS T1 WHERE T1.person_first_born = 1 ORDER BY T1.person_name ASC"}
{"question": "(a question about a sql table) What are the names and salaries of all the instructors who advise students in the Math Department?", "query": "SELECT T1.first_name,  T1.last_name,  T1.salary FROM instructor AS T1 JOIN student AS T2 ON T1.instructor_id  =  T2.\"instructor_id\" WHERE T2.department_id  = \"Math\""}
{"question": "What are the first name and last names of all the actors?", "query": "SELECT T1.actor_first_name,  T3.actor_last_name FROM actors AS T1 JOIN actors AS T2 ON T1.actor_id  =  T2.actor_id JOIN actors AS T3 ON T2.actor_id  =  'T3'"}
{"question": "Find the number of employees who left the company in the last 5 years", "query": "SELECT count(*) AS c FROM employee AS T1 WHERE T1.leave_date  >  DATE_SUB(CURDATE(), INTERVAL 5 YEAR)"}
{"question": "What is the first name and last name of the director of the store in the mall where I bought a poster?", "query": "SELECT T1.first_name,  T1.last_name FROM store_director AS T1 JOIN store_manager AS T2 ON T1.id  = T2.id WHERE T2.name  = \"Mall\" AND T1.name  =  'John'"}
{"question": "Given:\nquestion (find the names of wrestlers and their", "query": "SELECT name,  weight FROM wrestler"}
{"question": "Find the average length of the students who went to the school", "query": "SELECT AVG(T2.length) FROM student AS T1 JOIN school AS T2 ON T1.school_id  =  T2"}
{"question": "What are the names, ages and titles of all the coaches in the NBA?", "query": "SELECT T1.name,  T1.age,  T1.title FROM coach AS T1"}
{"question": "Find all the names of the movies that are based on the books", "query": "SELECT name FROM movie AS T1 JOIN book AS T2 ON T1.movie_id  =  T2.movie_id WHERE T2.book_name  =  \"The Hunger Games\""}
{"question": "Find the first name of the first female teacher in the university history", "query": "SELECT T1.First_Name FROM teacher AS T1 WHERE T1.gender  =  'F' AND T1.First_Name  =  'FIRST'"}
{"question": "Find the names of employees whose salary is between $35k and $45k", "query": "SELECT T1.name FROM employees AS T1 JOIN salaries AS T2 ON T1.employee_id  =  T2.[employee_id] WHERE T2.salary BETWEEN $35k AND $45k"}
{"question": "What are the names, last names, and ages of all the students in the class of 2010?", "query": "SELECT T1.name,  T1.last_name,  T1.age FROM students AS T1"}
{"question": "What are all distinct countries for artists?", "query": "SELECT DISTINCT country FROM artist"}
{"question": "What are the names and number of all students who took the test in November 2005?", "query": "SELECT T1.student_id,  T2.name,  T2.score FROM Student_Test AS T1 JOIN Student_Test_Result AS T2 ON T1.id  = T2.id WHERE T1.date_taken  =  '2005-11-01'"}
{"question": "How many students does kawagordon teaches?", "query": "SELECT count(*) AS \"count\" FROM student_teacher_relationship WHERE teacher_id  =  \"kawagordon\""}
{"question": "What is the count and average salary of the employees whose last names begin with \"L\"?", "query": "SELECT count(*),  avg(salary) FROM employees WHERE last_name  LIKE \"L%\";"}
{"question": "How many students are teaching by TARRING LEIA?", "query": "SELECT T1.student_name,  T1.teach_id FROM teacher AS T1 JOIN student AS T2 ON T1.student_id  =  T2.student_id WHERE T2.teach_id  =  'TARRING LEIA'"}
{"question": "What are the names, ages and grades of the students in CHELSEA HIGH SCHOOL?", "query": "SELECT T1.name,  T1.age,  T1.grade FROM student AS T1 WHERE T1.school_name  =  \"Chelsea High School\""}
{"question": "Find the employee ids and job ids for the employees who are not responsible for managing inventory", "query": "SELECT T1.employee_id,  T1.job_id FROM employee AS T1 WHERE NOT EXISTS (SELECT T2.employee_id,  T2.job_id FROM employee AS t2 WHERE t2.employee_id  =  T1.employee_id AND t2.job_id  =  T1 .job_id)"}
{"question": "What is the first letter of the first word of the document with ID 7?", "query": "SELECT T1.first_letter FROM document AS T1 WHERE T1.id  =  7"}
{"question": "What is the name for the faculty of medicine at the University of Maryland?", "query": "SELECT name FROM faculty WHERE school_name  =  \"University of Maryland\""}
{"question": "What is the name and id of the customer with a credit card with the number 83955?", "query": "SELECT T1.id,  T1.name FROM customer AS T1 WHERE T1.credit_card_number  =  '83955'"}
{"question": "Find the names of the companies that have a customer with ID 'Ryder'", "query": "SELECT name FROM Customer WHERE Customer_ID  =  'Ryder'"}
{"question": "What are the last names of all the professors who teach in the morning?", "query": "SELECT T1.last_name FROM professors AS T1 WHERE T1.start_time  =  \"08:00:00\""}
{"question": "What is the name and address of the store for the company with no address?", "query": "SELECT T1.store_name,  T1.store_address FROM store AS T1 WHERE T1.store_name  =  \"No address\""}
{"question": "Find the id of the customer who has the first name \"Diana\" or \"Gina\"", "query": "SELECT customer_id FROM customer WHERE name  =  \"Diana\" OR name  =  \"Gina\""}
{"question": "All salesmen are given a commission of 5,000 dollars per sale", "query": "SELECT Salesman,  SUM(Sale_Price) FROM Salesman_Sales GROUP BY Salesman"}
{"question": "Table name", "query": "SELECT T1.column_name FROM table_name AS T1 WHERE T1.column_name  =  \"value\""}
{"question": "Find the names of students who are not in any course (of the class)", "query": "SELECT T1.student_name FROM students AS T1 WHERE T1.student_id NOT IN (SELECT T2.student_id FROM classes AS T2)"}
{"question": "Find the average age and number of students of the people with the first name \"Sam\"", "query": "SELECT AVG(age),  COUNT(*) FROM Student WHERE first_name  =  \"Sam\""}
{"question": "What are the names and prices of all products in all departments?", "query": "SELECT T1.product_name,  T2.price FROM products AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id"}
{"question": "What are the names, birth date, and death date of the first and last students in the class?", "query": "SELECT first_name,  last_name,  birth_date,  death_date FROM students WHERE first_name  =  \"John\" AND last_name  =  \"Smith\""}
{"question": "What is the name and position of the person who has the largest number of students?", "query": "SELECT T1.name,  T1.position FROM employees AS T1 WHERE T1.id  =  (SELECT employeeid FROM employees WHERE id  =  (SELECT max(id) FROM employees))"}
{"question": "What is the name for the room with the biggest volume?", "query": "SELECT T1.room_name FROM room AS T1 WHERE T1.volume  >  T2.volume"}
{"question": "What are the names, salaries, and titles of the staff of the university of Florida?", "query": "SELECT T1.name,  T1.salary,  T1.title FROM employee AS T1 WHERE T1.university_id  =  'UF'"}
{"question": "What are the ids and names of the architects who are building a new building together?", "query": "SELECT T1.architect_id,  T1.name FROM architects AS T1 JOIN building AS T2 ON T1.architect_id  =  T2.\"id\""}
{"question": "What are the names and ids of the employees who have been assigned to the department of product maintenance?", "query": "SELECT T1.employee_id,  T1.name,  T1. department_id FROM employee AS T1 JOIN department AS T2 ON T1.department_id  =  T2. department_id WHERE T2.department_name  =  \"Product Maintenance\""}
{"question": "count the number of cinemas", "query": "SELECT COUNT(*) FROM cinema"}
{"question": "How many people live in New York?", "query": "SELECT count(*) AS \"How many people live in New York?\" FROM people"}
{"question": "Find the minimum, mean and maximum number of employees working in a company", "query": "SELECT min(employee_id),  avg(employee_id),  max(employee_id) FROM employees"}
{"question": "What are the names and ids of all people who are not enrolled in any course at the university in the city of San Francisco?", "query": "SELECT T1.first_name,  T1.last_name,  T1.id FROM person AS T1 WHERE NOT EXISTS (SELECT 1 FROM course_enrollment AS T2 WHERE T2.person_id  =  T1)"}
{"question": "Find the id, name and age of the student with the least number of courses taken", "query": "SELECT T1.id,  T1.name,  T1.age FROM students AS T1 WHERE T1.courses  =  (SELECT MIN(T2.courses) FROM students AS T2)"}
{"question": "In which store did you buy the last shoes?", "query": "SELECT T1.store_name,  T1.store_address FROM store AS T1 WHERE T1.store_name  =  \"The Last Shoe\""}
{"question": "What is the number of players in the league?", "query": "SELECT COUNT(*) AS \"number of players in the league\" FROM league"}
{"question": "Find all the different names of the drivers who have at least one accident in the last six years", "query": "SELECT DISTINCT name FROM Driver_Accidents WHERE date_of_accident  >  '2009-01-01' AND date_of_accident  <  '2014-01-01'"}
{"question": "What is the name and id of the employee with the most responsibility?", "query": "SELECT T1.employee_id,  T1.name_first,  count(*) FROM employee AS T1 JOIN employee_responsibility AS T2 ON T1.employee_id  =  T2.employee_id GROUP BY T1.employee_id ORDER BY count(*)  DESC LIMIT 1"}
{"question": "Find the names of the products that are in at least two different events in ascending alphabetical order of the product name", "query": "SELECT T1.product_name FROM product AS T1 JOIN event AS T2 ON T1.product_id  =  T2.product_id WHERE T2.event_id  =  1 OR T2.event_id  >  1 ORDER BY T1.product_name ASC"}
{"question": "Show the names of all cities where the average ticket price is more than the national average", "query": "SELECT city FROM cities WHERE average_ticket_price > average_ticket_price_nation"}
{"question": "List the names of the schools that have the maximum number of students with the last name Smith", "query": "SELECT T1.name FROM schools AS T1 JOIN students AS T2 ON T1.id  =  T2.school_id WHERE T2.last_name  =  'Smith' ORDER BY T1.name DESC"}
{"question": "Find the number of courses offered by the different departments?", "query": "SELECT T1.department_id,  T2.name FROM courses AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id"}
{"question": "Find the first name for the student with the highest number of points in each class", "query": "SELECT T1.student_name,  T1.class_name,  T1.grade_point FROM student AS T1 JOIN class AS T2 ON T1.class_id  =  T2.class_id WHERE T1.grade_point  =  (SELECT max(grade_point) FROM class)"}
{"question": "How many students are there at the university of Alabama?", "query": "SELECT T1.id FROM students AS T1 JOIN courses AS T2 ON T1.student_id  =  T2.student_id WHERE T2.course_code  =  \"CS101\""}
{"question": "Find the name of all the customers of the company named \"Apple\"", "query": "SELECT T1.customer_name FROM customer AS T1 WHERE T1.company_name  =  \"Apple\""}
{"question": "what are the names of the students who did not complete the course \"Tutorial: How to Write a Program\", ordered by the score after they all received a", "query": "SELECT T1.name,  T2.score FROM student AS T1 JOIN course AS T2 ON T1.id  =  T2.id WHERE T2.course_id  =  \"Tutorial: How to Write a Programming\" ORDER BY T1.score DESC"}
{"question": "What are the city names of the cities which are part of the state of Missouri?", "query": "SELECT city FROM cities WHERE state_id = \"MO\""}
{"question": "List all directors along", "query": "SELECT T1.director_name FROM director AS T1 JOIN director_info AS T2 ON T1.director_id  =  T2.director_id WHERE T2.type  =  'director'"}
{"question": "Find the names of all songs that have the same title", "query": "SELECT T1.song_name FROM songs AS T1 JOIN songs AS T1 ON T1.song_id  =  T1.id WHERE T1.title  =  \"The Same\""}
{"question": "What is the last name of the student who has a birthday on a Tuesday?", "query": "SELECT student_name FROM students WHERE birthday  =  \"2012-04-12\" AND day(birthday)  =  \"Tuesday\""}
{"question": "What is the average ticket sales gross (in dollars) of films?", "query": "SELECT AVG(T1.gross) FROM film AS T1 WHERE T1.title  =  'The Matrix'"}
{"question": "What are the average gross sales in dollars across different types of movies?", "query": "SELECT AVG(price) FROM products WHERE product_type  =  \"Movie\""}
{"question": "Find the total account average balance for each customer", "query": "SELECT T1.account_balance,  T1.customer_name FROM customer AS T1 JOIN account AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id"}
{"question": "(for a question about a different table) Return the name of the customer with the greatest total cost", "query": "SELECT T1.customer_first_name, T1.customer_last_name, T1.customer.total_cost FROM customers AS T1 JOIN orders AS T2 ON T1.order_id  =  T2.order_id WHERE T2.total_cost  >  (SELECT T3.customer_total_cost FROM customers AS T3 WHERE T3.customer_id  =  (SELECT T4.customer_id FROM orders AS T4 WHERE T4.order_id  =  (SELECT MAX(T5.order_id) FROM orders AS T5))"}
{"question": "What are the names, cities, and ages of all the presidents?", "query": "SELECT T1.firstname,  T1.lastname,  T1.city,  T1.age FROM president AS T1;"}
{"question": "What are the average and median grades of all students?", "query": "SELECT AVG(grade),  AVG(grade) AS median FROM students"}
{"question": "What are the most common names of all the students?", "query": "SELECT name_first,  name_last FROM student"}
{"question": "How many customers are there in the store?", "query": "SELECT count(*)  FROM customer;"}
{"question": "What are the names and ages of students who are not in the college?", "query": "SELECT T1.name,  T1.age FROM students AS T1 WHERE T1.college_id  =  '1' AND NOT EXISTS (SELECT T2.name,  T1.college_id FROM students AS T2 WHERE T2.college_id  = '1' AND T2.name  =  T1.name)"}
{"question": "How many questions are there?", "query": "SELECT count(*) AS total FROM question"}
{"question": "What are the names and locations of all the buildings with the number of units greater than 100?", "query": "SELECT T1.building_name,  T2.city_name,  T3.state_province_census_code,  T4.number_of_units FROM buildings AS T1 JOIN cities AS T2 ON T1.city_id  =  T2._id JOIN states AS T3 ON T2.state_id  =  T3.id JOIN census_areas AS T4 ON T3.census_area_id  =  T4.id WHERE T1.number_of_units  >  100"}
{"question": "How many records are there in the table \"employees\"?", "query": "SELECT count(*)  FROM employees"}
{"question": "How many students are there in each grade, ordered by number of students and alphabetically?", "query": "SELECT T1.grade_id,  T1.grade_name,  T1.grade_number,  T1.grade_total_students FROM grades AS T1 GROUP BY T1.grade_id ORDER BY T1.grade_number ASC, T1.grade_number ASC"}
{"question": "What is the average score for all the movies?", "query": "SELECT AVG(score) FROM movie"}
{"question": "What are the names, and ids, of the teachers who have taught a class of \"C Programming\" but not one of \"C++ Programming\"?", "query": "SELECT T1.name,  T1.id FROM teacher AS T1 JOIN class AS T2 ON T1.id  =  T2.teacher_id WHERE T2.class_name  =  \"C Programming\" AND T2.class_name !=  \"C++ Programming\""}
{"question": "Show the names of all the employees who have a name that starts with K", "query": "SELECT name FROM employees WHERE name  LIKE 'K%'"}
{"question": "(for example): \"If a student has a lot of credits and no failures, what can he/she do?\"", "query": "(for example): \"SELECT * FROM student WHERE credits  >  0 AND grade_average  >  0\""}
{"question": "What are the names, birth years and genders of the people in the photos below?", "query": "SELECT T1.name,  T1.birth_year,  T1.gender FROM people AS T1 WHERE T1.photo_id  =  \"1\""}
{"question": "List the names of all the schools that have more than 2 students", "query": "SELECT T1.school_name FROM school AS T1 WHERE T1.students  >  2"}
{"question": "What is the average age of all students of the program \"Computer Science\"?", "query": "SELECT count(*) AS total,  avg(age) AS average FROM students GROUP BY age"}
{"question": "How many students are there in a dormitory with a TV lounge, ordered by dormitory number?", "query": "SELECT T1.dormitory_number,  T1.student_count FROM Dormitories AS T1 JOIN Students AS T2 ON T1.dormitory_id  =  T2.[dormitory_id] WHERE T2.room_type  =  \"TV lounge\""}
{"question": "List the names of the companies that have more than one warehouse", "query": "SELECT T1.company_name FROM company AS T1 JOIN warehouse AS T2 ON T1.id  =  T2.id WHERE T2.id  >  1"}
{"question": "What are the names (at least 5 characters) of all the students that have a \"z\" in their name?", "query": "SELECT T1.name FROM students AS T1 WHERE T1.name LIKE '%z%'"}
{"question": "What are the names (first name and last name) of the people who bought a car in the last month?", "query": "SELECT name FROM customer WHERE date_of_purchase  >  DATE_SUB(NOW(), INTERVAL 1 MONTH)"}
{"question": "When were the first two episodes of \"My Strange Addiction\" aired?", "query": "SELECT T1.episode_id,  T1.episode_name FROM episode AS T1 WHERE T1.episode_id  =  (SELECT MIN(episode_id) FROM episode WHERE episode_name = \"My Strange Addiction\") AND T1.episode_name  =  \"My Strange Addiction\""}
{"question": "How many movies are there in the database?", "query": "SELECT count(*)  FROM movies;"}
{"question": "What are the names and ids of all movies that contain the word \"pizza\" in their title?", "query": "SELECT T1.movie_name,  T1.movie_id FROM movies AS T1 WHERE T1.movie_name  LIKE \"%pizza%\""}
{"question": "How many countries has the United States invaded?", "query": "SELECT T1.country_name,  T2.country_name FROM country AS T1 JOIN country AS T2 ON T1.id  =  T2.country_id WHERE T1.name  =  'United States' AND T2.name  =  'United Kingdom'"}
{"question": "What are the titles of films that have a film market estimation?", "query": "SELECT T1.title FROM film_market_estimation AS T1 WHERE T1.film_id  =  '1'"}
{"question": "What are the names and addresses of the students who have no school ID card?", "query": "SELECT T1.student_id,  T1.student_name,  T1.student_address FROM student AS T1 WHERE NOT EXISTS (SELECT student_id FROM student_id_card AS T2 WHERE T1.student_id  =  T2)"}
{"question": "What are the names, and the number of times, that a player scored 100 in the game of cricket", "query": "SELECT T1.name,  T1.number_of_times FROM Player_scores AS T1 JOIN Player_names AS T2 ON T1.player_id  =  T2.\"name\""}
{"question": "What are the names, types, and ids of the departments in the following table?", "query": "SELECT T1.dept_name,  T1.dept_type,  T1.deptid FROM department AS T1 WHERE T1.dept_type  =  'School'"}
{"question": "What are the names, locations and prices of wines made in the US?", "query": "SELECT T1.name,  T1.location,  T1.price FROM wine AS T1 WHERE T1.country  =  'USA'"}
{"question": "Find the names of all the countries that do not have an embassy in the city of Paris", "query": "SELECT name FROM country WHERE country_id NOT IN (SELECT country_id FROM embassy WHERE country_id = \"Paris\")"}
{"question": "(a novel question, about a question about a different table)", "query": "(the sql query to answer the questions)"}
{"question": "What is the average number of miles to the nearest gas station", "query": "SELECT AVG(distance) FROM Gas_Stations;"}
{"question": "Find the name of the company that has the least amount of employees", "query": "SELECT T1.name FROM companies AS T1 WHERE T1.employees  <  (SELECT min(T2.name) FROM companies AS T2)"}
{"question": "What is the average credit score of the customers with the last name Smith?", "query": "SELECT AVG(credit_score) FROM Customer WHERE last_name  =  'Smith'"}
{"question": "(What is the average rating for each movie)", "query": "SELECT AVG(rating) FROM movies"}
{"question": "What are the titles and directors of all the films that were never presented in China?", "query": "SELECT T1.title,  T1.director FROM film_info AS T1 WHERE T1.country  =  \"China\" AND T1.status  =  \"never_presented\""}
{"question": "Find the name and gender type of a student", "query": "SELECT T1.student_first_name,  T1.student_last_name,  T1.student_gender_code FROM students AS T1 WHERE T1.student_id  =  (SELECT student_id FROM students WHERE student_first_name  =  'John' AND student_last_name  =  'Doe' )"}
{"question": "What are all the questions in the database?", "query": "SELECT T1.question FROM question AS T1"}
{"question": "Give the number of documents in \"data/doc", "query": "SELECT count(*) AS count FROM data.doc"}
{"question": "How many customers have a balance of more than 50000?", "query": "SELECT T1.Customer_id,  T1.Balance FROM customer AS T1 WHERE T1.Balance  >  50000"}
{"question": "The task is to create a question (a question about a sql table) that is not a duplicate of any of the questions in the dataset", "query": "SELECT T1.question FROM Questions AS T1 JOIN Questions AS T2 ON T1.question  =  T2.question WHERE T2.question  =  \"What is the name of the city with the most people?\""}
{"question": "How many types of wine exist?", "query": "SELECT DISTINCT type FROM wine"}
{"question": "What are the names and market shares of all the products in the same category we have?", "query": "SELECT T1.product_name,  T2.market_share FROM product_category AS T1 JOIN product_category_product AS T2 ON T1.product_category_id  =  T2._id WHERE T1.name  = \"Beverages\""}
{"question": "What are the names and salaries of the employees in the \"Data Entry\" department?", "query": "SELECT T1.Name,  T1.Salary FROM employee AS T1 WHERE T1.Department_ID  =  \"Data Entry\""}
{"question": "How many students are there with first names containing the letter 'Z'?", "query": "SELECT T1.id,  T1.first_name,  'Z' AS letter FROM students AS T1 WHERE T1.first_name  LIKE '%Z%'"}
{"question": "What is the name of the country that is the second largest in the world?", "query": "SELECT T1.Country_Name FROM Country AS T1 WHERE T1.Population  =  \"2,000,000,000\""}
{"question": "What are the names, ids, and average age of all doctors?", "query": "SELECT T1.name,  T1.id,  T1.age FROM doctor AS T1"}
{"question": "What are the names, addresses and grades of teachers whose students received the highest grade in math?", "query": "SELECT name,  address,  grade FROM teachers WHERE grade  =  \"highest grade in math\""}
{"question": "What are the names, ids and salaries of all the employees in the department of marketing?", "query": "SELECT T1.employee_id,  T1.name,  T1.salary FROM employees AS T1 WHERE T1.department_id  =  \"Marketing\""}
{"question": "Find the names of companies that does not have any employees", "query": "SELECT T1.name FROM company AS T1 WHERE NOT EXISTS (SELECT T2.name FROM employee AS T2 WHERE T2.company_id  =  T1.company_id)"}
{"question": "What is the name 'Bruce', and what is the name 'Sue', and what is the name 'Tyler', and what is the name '", "query": "SELECT name FROM Person"}
{"question": "What is the average age of customers who are male?", "query": "SELECT AVG(age) FROM Customer WHERE sex = 'M'"}
{"question": "What are all the students whose first name is \"Alessandro\" and last name is \"Mazzariol\"?", "query": "SELECT T1.first_name,  T1.last_name FROM students AS T1 WHERE T1.first_name  =  \"Alessandro\" AND T1.last_name  =  \"Mazzariol\""}
{"question": "Show the first name of all the students living in the dorm named \"Mallory\"", "query": "SELECT T1.first_name FROM students AS T1 JOIN dorm AS T2 ON T1.dorm_id  =  T2._id WHERE T2.name  =  \"Mallory\""}
{"question": "Find the names of all the people who are in the same city as Alison and Rosalind", "query": "SELECT T1.last_name,  T1.first_name FROM people AS T1 JOIN people AS T3 ON T1.city  =  T3.city WHERE T3.last_name  =  \"Alison\" AND T3.first_name  =  \"Rosalind\""}
{"question": "What is the average length of the first names of the students?", "query": "SELECT AVG(LENGTH(firstname)) FROM student"}
{"question": "What is the average yearly salary of all employees of the company \"ABC\"?", "query": "SELECT AVG(salary) FROM employees WHERE company_name = \"ABC\""}
{"question": "What are the name and the number of students in the city with the largest population", "query": "SELECT city_name,  count(*) FROM city GROUP BY city_name ORDER BY count(*) DESC;"}
{"question": "A:\n\nI used this regex to find question titles like these:", "query": "A:"}
{"question": "(a different question, about a table), after \"", "query": "SELECT T1.name FROM students AS T1 JOIN courses AS T2 ON T1.crs_id  =  T2.crs_id WHERE T2.name  = \"statistics\""}
{"question": "List the average age of the students of each program", "query": "SELECT T1.program_id,  T1.avg_age FROM program AS T1 JOIN student AS T0 ON T1.program_id  =  T0.program_id GROUP BY T1.program_id ORDER BY T1.avg_age DESC"}
{"question": "Find all the employees who are in a department and make the first and last name of three of them", "query": "SELECT T1.first_name,  T1.last_name FROM employees AS T1 WHERE T1.department_id  =  '1' AND T1.first_name  =  'John' AND T1.last_name  =  'Doe'"}
{"question": "Find the number of employees in the office with the name \"Zen\"", "query": "SELECT count(*)  FROM employees WHERE name  =  \"Zen\""}
{"question": "What are the average age and average height of the students whose name contains the character \"H\"?", "query": "SELECT T1.avg_age,  T1.avg_height FROM students AS T1 WHERE T1.name  LIKE  \"%H%\""}
{"question": "Generate:", "query": "SELECT T2.name,  T1.Eliminate_Move FROM elimination AS T1  JOIN wrestler AS T2 ON T2.Wrestler_ID  ==  T1.Wrestler_ID"}
{"question": "The first name, last name and id of the player who has made the most number of kills in the season 2009", "query": "SELECT T1.first_name,  T1.last_name,  T1.id FROM player AS T1 WHERE T1.id  =  (SELECT T2.id FROM player AS T2 WHERE T2.last_name  =  T1.last_name AND T2.first_name  =  T1, last_name  =  T1)"}
{"question": "What are the names for the departments in the department \"Mathematics\"", "query": "SELECT name FROM department WHERE department_id  =  \"Mathematics\""}
{"question": "What is the id of the document that is assigned to the id of the document with code \"2\"?", "query": "SELECT T1.id FROM Documents AS T1 WHERE T1.document_id  IN (SELECT T2.document_id FROM Documents AS  T2 WHERE T2.code  =  '2')"}
{"question": "Find the average balance of accounts for different id", "query": "SELECT AVG(balance) FROM Accounts WHERE id  =  \"1\""}
{"question": "How many employees do we have? (same)", "query": "SELECT count(*) AS \"total\" FROM employee"}
{"question": "What is the name, id, and code of the film that has the highest gross revenue?", "query": "SELECT T1.id,  T1.name,  T1.code FROM films AS T1 JOIN films_genres AS T2 ON T1.id  = T2.film_id JOIN genres AS T3 ON T2.genre_id  =  T3.id WHERE T1.gross_revenue  >  (SELECT T4.id FROM films AS T4 WHERE T4.id  =  '1')"}
{"question": "Find the total sales of all stores in the next 2 weeks", "query": "SELECT sum(total_sales) FROM sales WHERE date_of_sale  >=  DATE_SUB(NOW(), INTERVAL 2 WEEK)"}
{"question": "What is the number and id of the customer with the highest account balance?", "query": "SELECT T1.id,  T1.amount FROM customer_accounts AS T1 WHERE T1.id  =  (SELECT T2.id FROM customer_accounts AS T2 WHERE T2.amount  >  T1.amount)"}
{"question": "What is the id for the artist called Ebba?", "query": "SELECT T1.id FROM artist AS T1 WHERE T1.name  =  \"Ebba\""}
{"question": "List all names of students who have a class president votes", "query": "SELECT T1.name FROM student AS T1 JOIN class_presidents AS T2 ON T1.id  =  T2.id WHERE T2.year  =  2008"}
{"question": "What are the numbers of the employees with role \"HR\" who are in the department with id 2?", "query": "SELECT T1.employeeid,  T1.name,  T2.department_id FROM employees AS T1 JOIN department AS T2 ON T1.department_id  =  T2.department_id WHERE T1.role  =  'HR' AND T2.id  =  2"}
{"question": "(a novel question, about a [different] table), after \"", "query": "Examples of some or all task item:"}
{"question": "What are the ids for the students?", "query": "SELECT T1.student_id FROM student AS T1"}
{"question": "Find the average age of the students who had at least one course in 2016", "query": "SELECT AVG(age) FROM Student WHERE year  =  2016"}
{"question": "Return the name of the city that has the greatest number of baseball parks", "query": "SELECT T1.city_name,  T2.city_name,  T3.city_name FROM cities AS T1 JOIN cities AS T2 ON T1.city_id  =  T2.city_id JOIN cities AS T3 ON T2.city_id  =  \"T3\" WHERE T1.city_name  =  \"T4\" ORDER BY T1.city_name, T2.city_name, T3.city_name"}
{"question": "Find the names of companies in the United States", "query": "SELECT name FROM company WHERE country = \"United States\""}
{"question": "What are the names, id and salary of all employees with the first name 'Ludie'?", "query": "SELECT T1.first_name,  T1.id,  T1.salary FROM employee AS T1 WHERE T1.first_name  =  'Ludie'"}
{"question": "What are the names, last names and cities of the students who have the same last name?", "query": "SELECT T1.last_name,  T1.first_name,  T1.city FROM students AS T1 WHERE T1.last_name  =  'Smith'"}
{"question": "What are the id, name and genders of the architects who", "query": "SELECT T1.id,  T1.name,  T1.gender FROM architects AS T1 WHERE T1.name  = \"John Wen\""}
{"question": "List the names of the students who have been admitted to the school named \"University of Science\"", "query": "SELECT T1.student_id,  T1.name_first,  'University of Science' AS school_name FROM student AS T1 WHERE T1.student_id  =  (SELECT T2.student_id FROM student AS T2 WHERE T2.name_first  =  'John' AND T2.name_last  =  'Smith' AND T2.student_id  =  T1.[student_id])"}
{"question": "What is the name and id of the course for which the maximum number of students have failed?", "query": "SELECT T1.name,  T1.* FROM course AS T1 JOIN student_course_links AS T2 ON T1.course_id  =  T2.* WHERE T2.student_id  =  ( SELECT max(student_id) FROM student_course_links )"}
{"question": "What are the names, ages, and addresses of the customers who live in the state of California", "query": "SELECT customer_name, customer_age, customer_address FROM customers WHERE customer_address LIKE '%CA%'"}
{"question": "Which of the customer codes is the top most?", "query": "SELECT TOP 1 T1.code FROM customer_code AS T1 WHERE T1.code  =  'ABC'"}
{"question": "What are the names, last names, and telephone numbers of all faculty members?", "query": "SELECT T1.first_name,  T1.last_name,  T1.phone_number FROM faculty AS T1 WHERE T1.faculty_id  =  (SELECT T2.faculty_id FROM faculty AS T2 WHERE T2.faculty_id  = T1.faculty_id)"}
{"question": "Give me all the distinct locations that have parking lots", "query": "SELECT DISTINCT location_name FROM locations WHERE has_parking = \"1\""}
{"question": "What is the name of the last person in alphabetical order?", "query": "SELECT T1.lastname FROM person AS T1 ORDER BY T1.lastname ASC"}
{"question": "What is the name of the document \"Robin\" and the location name of the document \"CV\"?", "query": "SELECT T1.document_name,  T1.location_name FROM document AS T1 WHERE T1.document_name  =  \"Robin\" AND T1.location_name  =  \"CV\""}
{"question": "Find the names of all courses at a college that have a total cost of less than 30", "query": "SELECT name FROM course WHERE cost  <  30"}
{"question": "How many different types of accounts are there?", "query": "SELECT DISTINCT type FROM account"}
{"question": "What are the names, addresses, and phone numbers of all customers who are from San Francisco?", "query": "SELECT T1.name,  T1.* FROM customer AS T1 JOIN address AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.city  =  'San Francisco'"}
{"question": "What is the name and type of the vehicle that Mr", "query": "SELECT vehicle_type,  name FROM vehicles"}
{"question": "List the titles of books on the subject of \"computer science\"", "query": "SELECT title FROM book WHERE subject LIKE \"%computer science%\""}
{"question": "What are the names and salaries of all employees who are not male and do not have the word'manager' or 'director' in their job title?", "query": "SELECT T1.first_name,  T1.last_name,  T1.salary FROM employees AS T1 WHERE T1.gender  =  'female' AND T1.job_title  NOT IN ('manager', 'director')"}
{"question": "Which schools offer only business-related courses?", "query": "SELECT DISTINCT School_Name FROM School_Courses WHERE Course_Name  =  \"Business\""}
{"question": "Find all the students who have a major in Mathematics", "query": "SELECT T1.student_id FROM Student AS T1 JOIN Student_Courses AS T2 ON T1.student_id  =  T2.student_id WHERE T2.major_code  =  \"Mathematics\""}
{"question": "Find the number of employees who are women or men", "query": "SELECT T1.gender FROM employee AS T1 WHERE T1.gender  =  'Woman' OR T1.gender  = 'man'"}
{"question": "(a novel question, about a track in a college), after \"", "query": "SELECT * FROM students WHERE college_id = 1 AND ("}
{"question": "What are the names, IDs, and genders of the architects who are from the country of Italy?", "query": "SELECT T1.name,  T1.id,  T1.gender FROM architects AS T1 WHERE T1.country_id  =  \"Italy\""}
{"question": "What are the names and ids of the employees who have the same name and date of birth?", "query": "SELECT T1.employee_id,  T1.name,  T1.[date_of_birth] FROM employee AS T1 JOIN employee_name_date_of_birth AS T2 ON T1.employee_id  =  T2.[employee_id] AND T2.[date_of_birth] =  '2000-01-01'"}
{"question": "What are the names and ages of the employees who are known to have been on duty at the time of the incident?", "query": "SELECT T1.name,  T1.[age] FROM employees AS T1 JOIN incidents AS T2 ON T1.employee_id  =  T2.[employee_id] WHERE T2.date  =  \"2016-01-01\""}
{"question": "What are the total number of products?", "query": "SELECT count(*) AS total_number_of_products FROM products"}
{"question": "(a novel question, about a table) Show the id of each employee and  the number of document destruction authorised by the employee", "query": "SELECT T1.employee_id,  T2.count(*) FROM employee AS T1 JOIN (SELECT T3.employee_id,  T4.count(*) FROM document_destruction AS T2 JOIN employee AS T3 ON T2.employee_id  =  T3.employee_id JOIN employee AS T4 ON T3.employee_id  =  t4.employee_id WHERE T4.employee_id  =  'T1' ) AS T5 ON T1.employee_id  =  (T5.employee_id) GROUP BY T1."}
{"question": "How many customers have a surname containing \"Smith\" but no first name?", "query": "SELECT T1.customer_id FROM customers AS T1 WHERE T1.surname  LIKE '%Smith%' AND T1.first_name  =  '';"}
{"question": "How are the numbers of questions and answers in the course?", "query": "SELECT count(*) from course WHERE course_name = \"Introduction to Database Systems\""}
{"question": "\"What are the names of the customers who used product \"food\" at least once?\"", "query": "SELECT T1.customer_id,  T1.product_id,  T1.quantity,  T1.date_purchased FROM customer AS T1 JOIN product AS T2 ON T1.customer_id  = T2.customer_id JOIN order_details AS T3 ON T2.product_id  =  T3.product_id WHERE T1.product_id  =  \"food\" AND T1.quantity  >  0"}
{"question": "Find the department with the most number of people", "query": "SELECT department_name FROM employees WHERE count(*)  =  \"number of people\""}
{"question": "Show all students whose courses have at least one student who is a freshman", "query": "SELECT T1.student_id,  T1.course_id,  T1.year_of_graduation,  T1.major,  T1.name_first,  count(*) FROM student_course_association AS T1 GROUP BY T1.student_id, T1.course_id, T1.year_of_graduations, T1.major, T1.name_first HAVING count(*)  =  1"}
{"question": "How many times do the customers use an external network?", "query": "SELECT COUNT(*) FROM customer_network_usage"}
{"question": "What are the name, id and sex of the people whose first names are Joe?", "query": "SELECT T1.name,  T1.id,  T1.sex FROM people AS T1 WHERE T1.first_name  =  \"Joe\""}
{"question": "How many students are in the Computer Science department?", "query": "SELECT count(*)  FROM students WHERE department_id  =  'Computer Science'"}
{"question": "What is the number of customers with a \"C\" credit rating?", "query": "SELECT count(*) AS count FROM customer WHERE credit_score = \"C\""}
{"question": "Find the number of questions and answers in a certain topic", "query": "SELECT COUNT(*) FROM Questions_Answers WHERE topic_id  =  \"1\""}
{"question": "What is the name and id of the employee who has been with the company for the longest time?", "query": "SELECT T1.id,  T1.name FROM employee AS T1 WHERE T1.id  =  (SELECT T2.id FROM employee AS T2 WHERE T2.id  =  T1.id AND T2.joined  >  T1.joined)"}
{"question": "Show the name of the countries that have the highest number of students", "query": "SELECT T1.country_name,  T2.country_id FROM country AS T1 JOIN country_students AS T2 ON T1.country_id  =  T2.country_id WHERE T2.student_count  >  (SELECT max(T3.student_count) FROM country_students AS T3)"}
{"question": "What are all the names of the people who live in the city called \"Munich\" (and also in the city called \"München\")?", "query": "SELECT T1.name FROM city AS T1 JOIN city_population AS T2 ON T1.city_id  =  T2.city_id WHERE T2.name  =  \"Munich\" AND T2.population  >  0 AND T2.name  =  'München'"}
{"question": "(a question about a sql table) What are the names of columns and columns in the table?", "query": "(the sql query to answer the query), after \""}
{"question": "Find the names of all the students who studied in the month of December and took the exam", "query": "SELECT T1.name FROM student AS T1 JOIN class_exam AS T2 ON T1.student_id  =  T2.[student_id] WHERE T2.date  =  \"December\""}
{"question": "What are the names, titles, and salaries of the CEOs and their deputies?", "query": "SELECT T1.name,  T1.title,  T1.salary FROM CEOs AS T1 JOIN Deputies AS T2 ON T1.id  =  T2.CEO_id"}
{"question": "List all the products that have the word \"oil\" in their name", "query": "SELECT T1.product_id,  T1.product_name FROM product AS T1 WHERE T1.product_name  =  \"oil\""}
{"question": "What are the names and addresses of the faculty members who are in the same city as me?", "query": "SELECT T1.first_name,  T1.last_name,  T1.address_id FROM faculty AS T1 JOIN faculty_city AS T2 ON T1.city_id  =  T2.city_id WHERE T2.city_id  =  \"my city\""}
{"question": "Find the first names of the employees who were hired on the month of September", "query": "SELECT first_name FROM employees WHERE hired_on  =  \"September\""}
{"question": "What is the average height of all students of the department of computer science?", "query": "SELECT AVG(height) FROM student"}
{"question": "List the names and the prices of all products in the store", "query": "SELECT T1.name,  T2.price FROM product AS T1 JOIN product_price AS T2 ON T1.id  =  T2.id_product;"}
{"question": "The average age of the students at the university is 27", "query": "SELECT avg(age) FROM students"}
{"question": "Find the name and age of the pilot of the highest rank", "query": "SELECT T1.rank,  T1.name,  T1. age FROM pilot AS T1 JOIN pilot_rank AS T2 ON T1.rank  =  T2.rank WHERE T2.rank  =  1"}
{"question": "what is the first name and last name for 'Lucy's boyfriend'?", "query": "SELECT T1.first_name,  T1.last_name FROM boyfriend AS T1 WHERE T1.first_name  =  \"Lucy\""}
{"question": "Which of the following is not a name of a fictional character?", "query": "SELECT T1.name FROM characters AS T1 WHERE T1.name  =  \"The Dread Pirate Roberts\""}
{"question": "What is the salary of the engineer who earned the most this year?", "query": "SELECT T1.salary FROM employee AS T1 WHERE T1.year  =  2001 AND T1.name  =  \"John Doe\""}
{"question": "How many states are there?", "query": "SELECT count(*) AS \"count\" FROM state"}
{"question": "Show all the students who have a birthday in December", "query": "SELECT T1.student_id,  T1.first_name,  T1.last_name,  T1.birthday FROM students AS T1 WHERE T1.birthday  =  \"12/31\""}
{"question": "Find the names of the students who have the same name as the one named \"Bob\"", "query": "SELECT T1.name FROM students AS T1 JOIN students AS T2 ON T1.name  =  T2.name WHERE T2.name  =  \"Bob\""}
{"question": "List the count and ID of each player in all the orders", "query": "SELECT T1.player_id,  T1.player_name,  T1.player_position,  T1.player_team,  T1.player_height,  T1.player_weight,  T1.player_birth_year,  T1.player_jersey_number,  T1.player_number,  T1.team_id,  T1.team_name,  T1.team_abbreviation,  T1.team_city,  T1.team_state,  T1.team_country,"}
{"question": "What are the names, phone numbers, and email addresses of the customers of the products \"pizza\", \"fruit\" and \"meat\"?", "query": "SELECT T1.name,  T1.phone_number,  T1.email_address FROM customer AS T1 JOIN product AS T2 ON T1.customer_id  = T2.customer_id WHERE T2.name  =  \"pizza\" OR T2.name  =  'fruit' OR T2.name  = \"meat\""}
{"question": "Show the names, first names, and genders of all students who do not have a relationship with anyone", "query": "SELECT T1.name FROM student AS T1 JOIN student_has_relationship AS T2 ON T1.student_id  =  T2.student_id WHERE T2.student_id IS NULL"}
{"question": "What is the average height of employees in the city?", "query": "SELECT AVG(height) FROM employee"}
{"question": "What are the names or ids of the products that have the most number of sales?", "query": "SELECT T1.product_name,  T1.product_id FROM product AS T1 WHERE T1.sales  >  ( SELECT max(T2.sales) FROM product AS T2 )"}
{"question": "What are the names and heights of the students in the top 10% of their class?", "query": "SELECT T1.name,  T1.height FROM students AS T1 WHERE T1.height  >  (SELECT min(height) FROM students WHERE class_id  =  '1') ORDER BY T1.height DESC LIMIT 10"}
{"question": "Q: What is the average gradepo", "query": "SELECT AVG(grade) FROM grades"}
{"question": "What are the names, phone numbers, and email addresses of all customers in the database?", "query": "SELECT T1.first_name,  T1.last_name,  T1.phone_number,  T1.email_address FROM customers AS T1 WHERE T1.customer_id  =  (SELECT customer_id FROM customers WHERE first_name  =  \"John\" AND last_name  =  \"Doe\")"}
{"question": "What are the names and ids of the customers that are over 40 years old?", "query": "SELECT T1.name,  T1.id FROM customers AS T1 WHERE T1.age  >  40"}
{"question": "What is the name and the id of the largest stadium in the world?", "query": "SELECT T1.Name,  T1.id FROM stadium AS T1 WHERE T1.size  =  'largest'"}
{"question": "List the statuses of all employees whose last name starts with \"S\" and who are of gender male", "query": "SELECT T1.status,  T2.gender FROM employee AS T1 JOIN employee_details AS T2 ON T1.employee_id  =  T2.employee_id WHERE T1.last_name  LIKE \"S%\" AND T2.gender  =  \"male\""}
{"question": "What is the name and id of the course with the highest acceptance rate?", "query": "SELECT T1.name,  T1.id FROM course AS T1 JOIN course_attendance AS T2 ON T1.course_id  =  T2._id WHERE T2.acceptance_rate  >  0.5;"}
{"question": "Find the name of the author of the book \"Invisible Sun\"", "query": "SELECT name FROM author WHERE author_id  =  \"1\""}
{"question": "What is the average number of hours worked per week by employees in the Marketing department?", "query": "SELECT AVG(Hours) FROM employee_time_log WHERE department = 'Marketing'"}
{"question": "What is their first name?", "query": "SELECT first_name FROM students WHERE student_id = 1;"}
{"question": "(example of some or all task items)", "query": "SELECT T1.name,  T2.name FROM students AS T1 JOIN students AS T2 ON T1.id  =  T2.id WHERE T1.name  =  \"John\" AND T2.name  =  \"Mary\""}
{"question": "Find the name and location of the club \"Pen and paper gaming\"", "query": "SELECT T1.name,  T1.location FROM club AS T1 WHERE T1.name  =  \"Pen and paper gaming\""}
{"question": "What is the product name with the highest sales?", "query": "SELECT T1.product_name,  T2.product_price FROM products AS T1 JOIN sales AS T2 ON T1.product_id  =  T2._id WHERE T2.product_price  >  (SELECT T3.product_price FROM products AS t3 WHERE t3.product_id  =  'T1')"}
{"question": "What is the first and last name of the customer who has not made any purchases?", "query": "SELECT T1.first_name,  T1.last_name FROM customer AS T1 WHERE NOT EXISTS (SELECT 1 FROM purchase AS T2 WHERE T2.customer_id  =  T1.customer_id)"}
{"question": "What are the names, id and gender of all customers in the table \"customers\"?", "query": "SELECT T1.name,  T1.id,  T1.gender FROM customers AS T1"}
{"question": "What are the id and name of all the employees in the department 'A' who have no office?", "query": "SELECT T1.id,  T1.name FROM employee AS T1 JOIN department AS T2 ON T1.department_id  =  T2.department_id WHERE T2.department_name  =  \"A\" AND T2.office_id IS NULL"}
{"question": "What are the first name and last name of the student whose last name begins with \"A\"?", "query": "SELECT T1.first_name,  T1.last_name FROM student AS T1 WHERE T1.last_name  LIKE 'A%'"}
{"question": "How many cities have at least two colleges with the word 'university' in their names?", "query": "SELECT DISTINCT city FROM city_info WHERE city IN (SELECT city FROM city_info WHERE city_name LIKE '%university%')"}
{"question": "(Find the names and avg", "query": "SELECT T1.student_id,  T1.name_first,  (T1.name_last +'' + T1.name_middle) AS name,  T1.name_middle,  T1.name_suffix,  T1.name_prefix,  T1.name_given,  T1.name_family,  T1.name_honorific,  T1.name_title,  T1.name_nick,  T1.name_initials,  T1.name_acronym,  T1.name"}
{"question": "What are the first, middle, and last name of the employee with id \"001\"?", "query": "SELECT first_name, last_name FROM employee WHERE id = \"001\";"}
{"question": "What is the average age of the customers who ordered a small product?", "query": "SELECT AVG(age) FROM customers WHERE product_size  = 'small'"}
{"question": "Find the names of all customers who have purchased both an Xbox 360 and a PlayStation 3", "query": "SELECT T1.customer_id,  T2.name FROM customers AS T1 JOIN purchases AS T2 ON T1.id  = T2.customer_id WHERE (T2.product_id  =  'Xbox 360' AND T2.quantity  =  1) OR (T2.product_id = 'PlayStation 3' AND T2.quantity  >  1)"}
{"question": "What is the minimum and maximum number of people who have made a reservation at the restaurant \"Pizza Hut\"?", "query": "SELECT min(T1.num_people),  max(T1.num_people),  T1.restaurant_name FROM reservations AS T1 WHERE T1.restaurant_name  =  \"Pizza Hut\""}
{"question": "Find the names of all employees who are working in the same building as a man named \"Michael H", "query": "SELECT T1.employee_id,  T1.first_name,  'Michael H' AS name FROM employees AS T1 JOIN employees AS T2 ON T1.manager_id  =  T2.employee_id WHERE T2.first_name  =  \"Michael H\""}
{"question": "What are some of the first names of the students who took the course \"Web Design\"", "query": "SELECT DISTINCT fname FROM student WHERE course_code  =  \"Web Design\""}
{"question": "What are the names, ordered by id, of the customers who bought product \"coffee\" at least once?", "query": "SELECT T1.name FROM customer AS T1 JOIN purchases AS T2 ON T1.customer_id  = T2.customer_id WHERE T2.product_name  =  \"coffee\""}
{"question": "What are the names, ranks, and salaries of the employees in your company?", "query": "SELECT T1.name,  T1.rank,  T1.salary FROM employees AS T1 WHERE T1.name  IN (SELECT T2.name FROM employees AS T2 WHERE T2.rank  IN (SELECT T3.rank FROM employees AS T3 WHERE T3.name  IN (SELECT T4.name FROM employees AS T4 WHERE T4.rank  IN (SELECT T5.rank FROM employees AS T5 WHERE T5.name  IN (SELECT T6.name FROM employees AS T6 WHERE T6.rank  IN (SELECT T7.rank FROM employees"}
{"question": "Show the name of the customers who are not active in any credit card", "query": "SELECT DISTINCT CName FROM customer WHERE CStatus  =  'C' AND CActive  =  'N'"}
{"question": "What are the names, ids, and ages of all the children in the table?", "query": "SELECT T1.name,  T1._id,  T1.age FROM child AS T1 WHERE T1.age  >  0"}
{"question": "What is the name in English of the type of buildings that is constructed with bricks?", "query": "SELECT name FROM building_type WHERE type  =  \"brick\""}
{"question": "Find the names of the departments that have at least one person with the last name of 'Sanchez'", "query": "SELECT T1.dept_name FROM department AS T1 JOIN employee AS T2 ON T1.id  =  T2.depid WHERE T2.last_name  =  'Sanchez'"}
{"question": "What are the names, addresses, phone numbers, and ages of all the students who play basketball?", "query": "SELECT T1.first_name,  T1.last_name,  T1.address_id,  T1.phone_number,  T1.age FROM students AS T1 WHERE T1.student_id  IN (SELECT student_id FROM student_basketball_team)"}
{"question": "What is the language used most often in a song?", "query": "SELECT Language FROM Song WHERE Song_Name  =  \"The Girl with the Dragon Tattoo\""}
{"question": "What are the names, first names, and ages of all students, ordered by age?", "query": "SELECT T1.name,  T1.first_name,  (SELECT T2.age FROM students AS T2 WHERE T2.id  =  T1.id) AS age FROM students AS T1 ORDER BY age DESC"}
{"question": "How many clubs are there in the club database?", "query": "SELECT COUNT(*) FROM clubs"}
{"question": "What are the names, ordered by titles, of the employees who do not work at any specific location?", "query": "SELECT T1.name FROM employees AS T1 JOIN location AS T2 ON T1.location_id  =  T2.location_id WHERE T2.location_name  =  'None'"}
{"question": "What are the names, last name, and id of the employees who have a last name that starts with O?", "query": "SELECT name FROM employees WHERE name LIKE 'O%'"}
{"question": "(a question about a sql table) What is the name of the shop which has the most different kinds of devices", "query": "SELECT shop_name,  count(*) FROM shop GROUP BY shop_name ORDER BY count(*) DESC;"}
{"question": "What is the minimum price of the item with the lowest price?", "query": "SELECT MIN(price) FROM item;"}
{"question": "What are the names, average age and average height of all students?", "query": "SELECT student_id,  first_name,  last_name,  age,  height FROM students"}
{"question": "How many employees are there in the department?", "query": "SELECT count(*) AS count FROM employee"}
{"question": "What is the name and ID of the customer with the highest average credit card amount?", "query": "SELECT T1.customer_name,  T1.customer_id FROM customer AS T1 WHERE T1.credit_card_amount  =  (SELECT AVG(T2.credit_card_amount) FROM customer AS T2)"}
{"question": "Find the average age for female students in the college with the highest enrollment", "query": "SELECT avg(age) FROM student WHERE gender = \"Female\" AND college_name = \"College with the highest enrollment\""}
{"question": "How many students have a name that contain the words \"son\"?", "query": "SELECT T1.student_id FROM students AS T1 WHERE T1.first_name  LIKE '%son%'"}
{"question": "What is the most expensive car?", "query": "SELECT T1.price,  T1.make,  T1.model,  T1.year,  T1.color,  T1.transmission,  T1.doors,  T1.engine,  T1.fuel_type,  T1.fuel_capacity,  T1.acceleration,  T1.power,  T1.weight,  T1.length,  T1.width,  T1.height,  T1.wheelbase,  T1.engine_size,  T1.engine_type,  T1"}
{"question": "What are the names, cities and salaries of the most senior employees at Google?", "query": "SELECT T1.name,  T2.city,  T3.salary FROM employees AS T1 JOIN employees AS T2 ON T1.manager_id  =  T2.manager_id JOIN employees AS T3 ON T1.manager_id = T3.manager_id WHERE T1.name  =  \"Larry Page\" AND T2.name  =  \"Sundar Pichai\" AND T3.name  =  \"Eric Schmidt\""}
{"question": "What are the names, locations, and genders of all students who live in a dorm with a TV Lobby?", "query": "SELECT T1.name,  T1.location,  T1.gender FROM dorm AS T1 JOIN dorm_rooms AS T2 ON T1.dorm_id  =  T2.dorm_id WHERE T2.lobby_id  =  \"TV\""}
{"question": "What are the names, type, and number of employees who are in a department and also in the same job?", "query": "SELECT T1.name,  T1.\"type\",  T1.job_id FROM employee AS T1 JOIN job AS T2 ON T1.job_id  =  T2.\"job_id\" JOIN department AS T3 ON T1.department_code  =  T3.department_code WHERE T2.name  =  \"name\" AND T3.name  =  \"type\""}
{"question": "What is the maximum number of students who have taken a course with the topic of \"Physics\"?", "query": "SELECT MAX(T1.student_id) FROM courses AS T1 JOIN student AS T2 ON T1.crs_id  =  T2._id WHERE T1.topic  =  \"Physics\""}
{"question": "What is the average salary of the students with the last name Smith? (question)", "query": "SELECT AVG(T2.salary) FROM Student AS T1 JOIN T2 ON T1.last_name  =  T2.last_name WHERE T1.id  =  T2.student_id"}
{"question": "How many hotels are there with a total room count of more than 1000?", "query": "SELECT T1.room_count FROM hotels AS T1 WHERE T1.room_count > 1000"}
{"question": "What are the names and number of the employees of each department?", "query": "SELECT T1.department_name,  T1.employee_count FROM department AS T1"}
{"question": "What is the total cost of all of the transactions?", "query": "SELECT SUM(amount) FROM Financial_transactions"}
{"question": "What is the name of the city with the most number of theaters?", "query": "SELECT T1.city_name,  T2.theater_name FROM city AS T1 JOIN theaters AS T2 ON T1.city_id  =  T2._id WHERE T2.city_name  =  \"New York\""}
{"question": "What is the total number of people in the country with first name \"Zach\"?", "query": "SELECT T1.name FROM people AS T1 WHERE T1.name  = 'Zach'"}
{"question": "Find the names and salaries of advisors who are also lecturers", "query": "SELECT T1.advisor_name,  T1.advisor_salary FROM advisor AS T1 JOIN advisor_salary AS T2 ON T1.advisor_id  =  T2.advisor_id WHERE T2.advisor_id  = T1.advisor_id AND T2.advisor_type  =  'Lecturer'"}
{"question": "What are the ids, names and titles of the different students who have visited the lab?", "query": "SELECT T1.student_id,  T1.first_name,  T1.last_name,  T1.title,  T1.department_id,  T1.lab_id,  T1.date_of_visit,  T1.date_added FROM student AS T1 JOIN lab_visits AS T2 ON T1.student_id  =  T2.student_id WHERE T2.date_of_visit  >  ( SELECT min(date_of_visit) FROM lab_visits )"}
{"question": "How many students have two or more friends with the same name?", "query": "SELECT T1.name,  T2.name FROM friends AS T1 JOIN friends AS T2 ON T1.friend_id  =  T2.friend_id WHERE T1.name  =  \"John\" AND T2.name  =  \"John\";"}
{"question": "What are the response received dates for documents described as \"Irregular\" or granted with less than 10?", "query": "SELECT T1.response_date FROM documents AS T1 WHERE T1.type  =  \"Irregular\" OR T1.granted  <  10"}
{"question": "What is the response received date for an document described as Regular that was granted less than 100 dollars?", "query": "SELECT T1.response_date FROM Documents AS T1 WHERE T1.document_type  =  \"Regular\" AND T1.amount  <  100"}
{"question": "What are the first and last names of the first and last names of the customers who were born in the month of January?", "query": "SELECT first_name,  last_name FROM customer WHERE birth_date  =  \"01/01/2000\""}
{"question": "What is the name and location of the restaurant where Paul, Linda, and Bill went?", "query": "SELECT T1.name,  T1.location FROM restaurant AS T1 JOIN customers AS T3 ON T1.restaurant_id  =  T3.restaurant_id WHERE T3.name  =  \"Paul\" AND T3.name  =  'Linda' AND T3.name  = 'Bill'"}
{"question": "What are the average speed of roller coasters and the fastest roller coasters?", "query": "SELECT AVG(speed) FROM rides WHERE type = 'Roller Coaster'"}
{"question": "What is the id of the appointment with the highest number of times visited in last week?", "query": "SELECT T1.appointment_id,  T1.times_visited FROM appointment AS T1 WHERE T1.times_visited  >  (SELECT max(T2.times_visited) FROM appointment AS T2)"}
{"question": "What are the names, genders and ages of women who had a child with a man named Chris?", "query": "SELECT T1.name,  T1.gender,  T1.age FROM women AS T1 JOIN child AS T2 ON T1.child_id  =  T2.child_id WHERE T2.father_name  =  \"Chris\""}
{"question": "What are teh name of the different products, as well the number of customers who have ordered the product", "query": "SELECT name,  count(*) FROM products WHERE price  >=  100 GROUP BY name"}
{"question": "Find the first names for all students in all classes in the order of the class number", "query": "SELECT T1.first_name FROM student AS T1 JOIN class AS T2 ON T1.class_id  =  T2.class_id WHERE T2.class_number  =  1;"}
{"question": "What is the average age of the players?", "query": "SELECT AVG(age) FROM players"}
{"question": "What are the names and addresses of the people who live in each city?", "query": "SELECT T1.name,  T1.address FROM city AS T1 JOIN resident AS T2 ON T1.id  =  T2.city_id"}
{"question": "What is the name and number of the movie that was produced in 1999?", "query": "SELECT T1.movie_name,  T2.movie_id FROM movies AS T1 JOIN movies AS T2 ON T1.movie_id  =  T2.\"movie_id\" WHERE T1.year  =  1999"}
{"question": "(Find the total account balance of each customer, from each state), after \"Find the total account balance", "query": "SELECT T1.account_balance,  T1.state FROM customer AS T1 WHERE T1.state  =  \"NY\""}
{"question": "List the number of customers in each city, sorted by decreasing number of customers per city", "query": "SELECT T1.city,  T1.cust_count FROM customer AS T1 GROUP BY T1.city ORDER BY T1.cust_count DESC"}
{"question": "List the names of students of the courses taught by OTHA MOYERS", "query": "SELECT T1.first_name,  T1.last_name,  T1.course_id,  T1.course_name,  T1.section_id,  T1.section_name,  T1.semester_id,  T1.semester,  T1.year,  T1.course_code,  T1.course_number,  T1.course_title,  T1.course_description,  T1.course_credit,  T1.course_hours,  T1.course_fee,  T"}
{"question": "What are the names, IDs and genders of the students who have signed up for the classes in the past two years?", "query": "SELECT T1.student_name,  T1.student_id,  T1.student_gender FROM student AS T1 JOIN student_classes AS T2 ON T1.student_id  =  T2.student_id WHERE T2.class_year  >  \"2014\" AND T2.class_year  <  \"2015\""}
{"question": "When did the first staff member start work?", "query": "SELECT T1.start_date FROM staff AS T1 WHERE T1.name  =  \"John\""}
{"question": "What is the average graduation point of students in the class with the code \"10019\"?", "query": "SELECT AVG(graduation_point) FROM class WHERE code  =  \"10019\""}
{"question": "What is the average amount spent per item of the product with the id \"COOKING_POT\" and the price of $5?", "query": "SELECT AVG(price),  name FROM products WHERE id  =  \"COOKING_POT\" AND price  =  \"5\""}
{"question": "What is the name of the employee who worked for eight hours on March 24th?", "query": "SELECT name FROM Employee WHERE date(worked_on) = \"2016-03-24\""}
{"question": "What are the numbers of students in the first, second and third classes?", "query": "SELECT T1.id,  T1.name FROM students AS T1 WHERE T1.class_id  =  \"1\" OR T1.class_id  ==  \"2\" OR T1.class_Id  ==  \"3\""}
{"question": "task:\nGiven:", "query": "SELECT name FROM track"}
{"question": "What are the first name and last name of all the staff members?", "query": "SELECT first_name,  last_name FROM staff"}
{"question": "What are the names and phone numbers of all suppliers, sorted in alphabetical", "query": "SELECT T1.supplier_name,  T1.supplier_phone FROM supplier AS T1 JOIN supplier_details AS T2 ON T1.supplier_id  =  T2.supplier_id WHERE T2.name  =  \"Apple\""}
{"question": "Find the number of customers who have been registered in New York state", "query": "SELECT count(*)  FROM customers WHERE customer_address LIKE \"%New York%\""}
{"question": "Find the names of all documents for a given category", "query": "SELECT T1.name FROM documents AS T1 WHERE T1.category  =  \"C\""}
{"question": "Count the number of different colors for a product", "query": "SELECT count(*) AS count FROM product WHERE color!= \"Black\" AND color!= \"Blue\" AND color!= \"Brown\" AND color!= \"Green\" AND color!= \"Pink\" AND color!= \"Red\" AND color!= \"White\" AND color!= \"Yellow\""}
{"question": "Find the type of the instrument (\"drums\")", "query": "SELECT T1.instrument_type FROM Instruments AS T1 WHERE T1.instrument_type  =  \"drums\""}
{"question": "What are the names, age, and nationality of all the players?", "query": "SELECT T1.Name,  T1.Age,  T1.Nationality FROM Players AS T1;"}
{"question": "What is the name of the organization whose detail is listed in \"quo\"?", "query": "SELECT T1.name FROM organization AS T1 JOIN detail AS T2 ON T1.id  =  T2.organization_id WHERE T2.name  =  \"quo\""}
{"question": "(a novel question, about a section of the book), \"", "query": "SELECT name FROM track"}
{"question": "What are the names and ids of all the people who are not administrators?", "query": "SELECT T1.id,  T1.name FROM people AS T1 WHERE T1.id !=  '1'"}
{"question": "What are the names and ages of all students from the classes of 2000, 2004 and 2007, sorted by class?", "query": "SELECT T1.name,  T1.* FROM student AS T1 JOIN class_year AS T2 ON T1.class_id  =  T2.\"class_id\" WHERE T2.year  =  2000,2004,2007 ORDER BY T1.class_id, T1.name"}
{"question": "What is the number of times a player has been ejected from the game?", "query": "SELECT COUNT(*) FROM game_events WHERE player_id  =  '1' AND event_type  =  'ejection'"}
{"question": "What is the first and last name of the employee who has the highest salary?", "query": "SELECT T1.first_name,  T1.last_name FROM Employee AS T1 WHERE T1.salary  =  (SELECT MAX(T2.salary) FROM Employee AS T2)"}
{"question": "What is the latest date of the employees leaving the projects?", "query": "SELECT max(leave_date) FROM employee"}
{"question": "What are the ids of students who have the highest marks in the third year?", "query": "SELECT T1.student_id FROM Student AS T1 JOIN Student_grades AS T2 ON T1.student_id  =  T2.[student_id] WHERE T2.grade_id  =  3 AND T2.grade_score  =  (SELECT MAX(T3.grade_score) FROM Student_grades AS T3 WHERE T3.student_id  =  (SELECT student_id FROM Student_grades WHERE student_id  =  T1.student_id))"}
{"question": "How many people have the password 'password'?", "query": "SELECT T1.password FROM user AS T1 WHERE T1.password  =  'password'"}
{"question": "(a novel question, about a database): What is the name of the customer with the least number of orders?", "query": "SELECT T1.customer_id,  T1.name FROM customer AS T1 WHERE T1.orders  =  (SELECT MIN(T2.orders) FROM customer AS T2)"}
{"question": "Which departments have at least one male professor?", "query": "SELECT department_id FROM faculty WHERE gender  =  \"male\""}
{"question": "What are the first and last names of the students of the faculty of engineering? What is their major?", "query": "SELECT T1.student_id,  T1.firstname,  T2.major FROM student AS T1 JOIN faculty AS T2 ON T1.student_id  =  T2._id WHERE T2.name  =  \"Engineering\""}
{"question": "Which account has the most outstanding balance?", "query": "SELECT T1.account_id,  T1.account_name,  T1.account_balance FROM account AS T1 WHERE T1.account_balance  >  ( SELECT T2.account_balance FROM account AS t2 WHERE t2.account_id  =  T1.account_id )"}
{"question": "Show the first names and last names of the employees whose last names are 'Gagliardi'", "query": "SELECT first_name,  last_name FROM employees WHERE last_name  =  \"Gagliardi\""}
{"question": "List the names, addresses, and phone numbers of all the staff", "query": "SELECT T1.name,  T1.address,  T1.phone_number FROM staff AS T1 JOIN employee AS T2 ON T1.id  =  T2.staff_id WHERE T2.name  =  'John Smith'"}
{"question": "What is the full name of employee who supported most number of customers?", "query": "SELECT T1.full_name FROM Employee AS T1 JOIN Customer AS T2 ON T1.id  = T2.employee_id WHERE T2.customer_id  =  (SELECT T3.customer_id FROM customer_history AS T3 WHERE T3.date_from  =  (SELECT MAX(date_from) FROM customer_history))"}
{"question": "Find the names of all the cities that have an airport with the name \"Hartsfield-Jackson International Airport\"", "query": "SELECT name FROM city WHERE airport_name = \"Hartsfield-Jackson International\""}
{"question": "What are the names for the categories that products with product descriptions t are in?", "query": "SELECT T1.category_name FROM product_categories AS T1 JOIN product_descriptions AS T2 ON T1.category_id  =  T2.category_id WHERE T2.description_id  =  \"t\""}
{"question": "How many people attended the conference in 2012?", "query": "SELECT count(*) AS total FROM conference WHERE year  =  '2012'"}
{"question": "What are the names, and id of the products, and how many products are there?", "query": "SELECT T1.name,  T2.id,  count(*) FROM product AS T1 JOIN product_description AS T2 ON T1.id  =  T2.productid GROUP BY T1.name, T2.id"}
{"question": "What are the names, last names and ages of all guests to this dinner party?", "query": "SELECT T1.guest_name,  T1.guest_lastname,  T1.guess_age FROM guest AS T1 JOIN dinner_party AS T2 ON T1.guest_id  =  T2.guest_id"}
{"question": "What is the name and type of the file \"A", "query": "SELECT name,  type FROM file_type WHERE name  =  \"A\""}
{"question": "What is the average number of years a patient waits in a hospital to have their surgery?", "query": "SELECT AVG(T1.waiting_time) FROM Patient AS T1 JOIN Operation AS T2 ON T1.patient_id  =  T2_id WHERE T2.operation_id  =  \"Operation\""}
{"question": "How many times did each player score?", "query": "SELECT player_id,  COUNT(*) AS score FROM player_stats GROUP BY player_id"}
{"question": "Show the first name, last name, and job title for all the lawyers", "query": "SELECT T1.name,  T1.lastname,  T1.title FROM lawyer AS T1"}
{"question": "What are the names and gpa of students who have an average gpa between 3", "query": "SELECT T1.first_name,  T1.last_name,  T1.gpa FROM Students AS T1 WHERE T1.gpa  >=  3"}
{"question": "(a novel question, about a different topic), after \"", "query": "Examples of some or all task item:"}
{"question": "How many students do you have?", "query": "SELECT T1.id,  T1.first_name,  'Student' AS type FROM students AS T1 JOIN people AS T3 ON T1.id  = T3.student_id WHERE T3.first_name  =  \"John\""}
{"question": "(a novel question, about adifferent table): How many females does this table have?", "query": "SELECT count(*) AS \"count\" FROM female_fitness_data;"}
{"question": "What are the names, ordered by their frequency, of the first and last names of the three people attending this meeting?", "query": "SELECT T1.first_name,  T1.last_name FROM attendee AS T1 WHERE T1.meeting_id  =  '1'"}
{"question": "What is the average age for all persons?", "query": "SELECT avg(age) FROM people"}
{"question": "find the name of the top 3 players in terms of total rating", "query": "SELECT player_id,  rating FROM player GROUP BY player_id ORDER BY rating DESC LIMIT 3;"}
{"question": "List the names of all students who have taken a course in the Fall of 2003", "query": "SELECT T1.name FROM student AS T1 JOIN course AS T2 ON T1.stu_id  =  T2.\"StuID\" WHERE T2.year  =  2003"}
{"question": "What is the age of the oldest person?", "query": "SELECT T1.age FROM person AS T1 WHERE T1.age  >  (SELECT min(T2.age) FROM person AS T2 WHERE T2.age  >  0)"}
{"question": "What are the names and details of the students who are involved in the student government?", "query": "SELECT T1.student_name,  T2.student_name,  T3.student_name,  T4.student_name,  T5.student_name,  T6.student_name,  T7.student_name,  T8.student_name,  T9.student_name,  T10.student_name,  T11.student_name,  T12.student_name,  T13.student_name,  T14.student_name,  T15.student_name,  T16.student_name,"}
{"question": "What is the first car that the customer drove?", "query": "SELECT T1.car_name,  T1.car_year FROM customer_cars AS T1 WHERE T1.customer_id  =  1"}
{"question": "The data consists of 10 fields", "query": "SELECT T1.field1,  T1.field2,  T1.field3,  T1.field4,  T1.field5,  T1.field6,  T1.field7,  T1.field8,  T1.field9,  T1.field10 FROM table1 AS T1"}
{"question": "What is the total time of the flight?", "query": "SELECT T1.flight_time FROM flight AS T1 WHERE T1.flight_id  =  \"Flight 1\""}
{"question": "What are the names (names and job titles) of every person ordered alphabetically?", "query": "SELECT T1.first_name,  T1.last_name FROM person AS T1 ORDER BY T1.first_name"}
{"question": "What is the average age of students in the class?", "query": "SELECT avg(age) FROM student"}
{"question": "What is the first name of the student who was recommended to the most number of faculties?", "query": "SELECT T1.student_id,  T1.name_first,  count(*) FROM student AS T1 JOIN faculty AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(T2.faculty_id)  =  max(T2.faculty_count)"}
{"question": "(a novel question, about a possible table) What is the average age of employees at this company?", "query": "SELECT AVG(age) FROM employees"}
{"question": "What are the names and the ages of the students in this course?", "query": "SELECT T1.name,  T1.age FROM students AS T1 WHERE T1.course_id  =  \"CSCI-101\""}
{"question": "How many students are in New York?", "query": "SELECT count(*) AS \"count\" FROM student WHERE city_code  =  'NY'"}
{"question": "What are the names, average age, and number of children of all students?", "query": "SELECT T1.first_name,  T1.last_name,  T1.age,  T1.children FROM students AS T1"}
{"question": "How many customers are there with the account number (1000, 1001, 1002) and last name (Doe, John, Doe)?", "query": "SELECT count(*)  FROM customer WHERE account_number  =  \"1000\" AND last_name  =  \"Doe\""}
{"question": "What are the names, id's and salary of all the employees that are not from the USA?", "query": "SELECT T1.name,  T1.id,  T1.salary FROM employees AS T1 WHERE T1.country_code  =  \"USA\" AND T1.country_code !=  \"USA\""}
{"question": "Find all the documents whose status is 'cancelled'", "query": "SELECT T1.id,  T1.title,  T1.description,  T1.status,  T1.date_added,  T1.date_modified,  T1.user_id,  T1.user_name,  T1.user_email,  T1.user_password,  T1.user_role,  T1.user_type,  T1.user_phone,  T1.user_fax,  T1.user_address,  T1.user_city,  T1.user_state,"}
{"question": "What is the name, age and gender of all the students who played in the game this year?", "query": "SELECT T1.name,  T1.age,  T1.gender FROM student AS T1 WHERE T1.year  =  \"2008\" AND T1.id  IN (SELECT T2.id FROM player AS T2 WHERE T2.team_id  =  T1.team_id)"}
{"question": "(a novel question, about a section of the text)", "query": "SELECT name FROM track"}
{"question": "How many degrees are there in the \"C\" letter?", "query": "SELECT COUNT(*) FROM degrees WHERE letter = 'C';"}
{"question": "What is the first two numbers and last two numbers of the phone numbers of customers who have the same name?", "query": "SELECT T1.phone_number,  T1.phone_extension FROM customer AS T1 WHERE T1.name  =  \"John\" AND T1.phone_number  =  \"123-456-7890\" AND T1.phone_extension  =  \"123\" AND T1.phone_second_number  =  \"456\" AND T1.phone_third_number  =  \"7890\""}
{"question": "Show the names of all students in the class", "query": "SELECT T1.student_name FROM students AS T1 WHERE T1.class_id  =  1"}
{"question": "How many countries have at least two cities with the name Paris?", "query": "SELECT T1.country_code,  T1.country_name FROM COUNTRY AS T1 WHERE T1.country_name  =  'Paris'"}
{"question": "How many faculty members are there?", "query": "SELECT count(*) AS \"count\" FROM faculty"}
{"question": "Find the total account of each customer from Utah or Texas", "query": "SELECT count(*) AS Total_Account FROM customer WHERE state  =  'UT' OR state  =  'TX'"}
{"question": "Find the city which has the highest number of employees, and the second highest number of children", "query": "SELECT city,  COUNT(*) AS num_employees,  COUNT(DISTINCT state_province_county) AS num_children FROM city_state_province_county AS T1 GROUP BY city ORDER BY num_employees  DESC, num_employees  ASC, num_children  DESC, num_children  ASC"}
{"question": "(a novel question, about a section of text), after \"", "query": "A:"}
{"question": "Return the id of all the courses that have been taught by one instructor", "query": "SELECT T1.course_id FROM course AS T1 JOIN instructor AS T2 ON T1.course_id  =  T2.\"course_id\" WHERE T2.first_name  =  \"John\" AND T2.last_name  =  \"Smith\""}
{"question": "What is the name and age of the student, who has enrolled in the university for the first time, and who has not completed any of the courses?", "query": "SELECT T1.name,  T1.age FROM students AS T1 JOIN student_course AS T2 ON T1.id  =  T2.id WHERE T1.enroll_date  =  '2010-01-01' AND T1.enroll_status  =  'new' AND T1.enrollment_status  =  'active'"}
{"question": "(a fictional question, using the given question as a template) What is the number of employees that are under the age of 40?", "query": "SELECT count(*)  FROM employee WHERE age < 40"}
{"question": "What are the names and salaries of all employees who have an employee id between 1 and 50?", "query": "SELECT T1.employee_id,  T2.name,  T2.salary FROM employee AS T1 JOIN employee_info AS T2 ON T1.employee_id  =  T2._employee_id WHERE T1.employee_id BETWEEN 1 AND 50"}
{"question": "(a novel question, about a table) Find the name and age of all females in order of their age", "query": "SELECT name,  age FROM Person WHERE gender  =  \"Female\" ORDER BY age"}
{"question": "(a question about a sql table) How many students have personal names that containing the word \"son\"?", "query": "SELECT T1.name FROM students AS T1 WHERE T1.name LIKE '%son%'"}
{"question": "If there are no customers in the database, what are the products for sale?", "query": "SELECT T1.product_name,  T1.price,  T1.quantity,  T1.total_price,  T1.total_amount FROM products AS T1 WHERE T1.quantity  =  0"}
{"question": "What are the names with the highest number of votes and the names with the lowest number of votes?", "query": "SELECT T1.name,  T2.name FROM votes AS T1 JOIN votes AS T2 ON T1.name  =  T2.name WHERE T1.name  >  T2.name"}
{"question": "What are the name of the person who is a friend with the name of \"Dan\" or \"Alice\"?", "query": "SELECT name FROM person WHERE person.name IN (\"Dan\", \"Alice\")"}
{"question": "What are the names, genders and ranks of all students in the school?", "query": "SELECT T1.student_name,  T1.student_gender,  T1.student_rank FROM student AS T1 JOIN student_info AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*)"}
{"question": "Find the names of all employees who have the same name", "query": "SELECT T1.name FROM employees AS T1 JOIN employees AS T2 ON T1.name  =  T2.name WHERE T1.name  =  \"John\" AND T2.name  =  \"John\";"}
{"question": "What are all the employees who live in the same house as the CEO?", "query": "SELECT employee_id,  T1.name,  T1.address,  T1.city,  T1.state,  T1.zip,  T1.country,  T1.phone,  T1.fax,  T1.email,  T1.home_phone,  T1.home_fax,  T1.home_email,  T1.homepage,  T1.home_address,  T1.home_city,  T1.home_state,  T1.home_zip,  T1.home_"}
{"question": "Find the name of person who has friend with age above 40 but not under 30", "query": "SELECT T1.name FROM friend AS T1 JOIN person AS T2 ON T1.friend_id  =  T2.[id] WHERE T2.age  >  40 AND T2.age  <  30"}
{"question": "What is the title, and what is the author, of the movie with the lowest rating?", "query": "SELECT T1.title,  T2.author FROM movies AS T1 JOIN movies_ratings AS T2 ON T1.movie_id  =  T2.movie_id WHERE T2.rating  =  '0'"}
{"question": "What are the names and addresses of all the customers who have a credit card and a savings account with the same name and address", "query": "SELECT customer_name,  customer_address FROM customer WHERE customer_name  =  \"John Smith\" AND customer_address  =  \"123 Main Street\""}
{"question": "What is the name and phone number of the youngest person in the company?", "query": "SELECT T1.name,  T1.phone_number FROM employees AS T1 JOIN employees AS T2 ON T1.manager_id  =  T2.id WHERE T1.age  <  T2.age"}
{"question": "What is the name and address of the last customer with the first name \"Danny\"", "query": "SELECT T1.firstname,  T1.address FROM customer AS T1 WHERE T1.firstname  =  \"Danny\""}
{"question": "What are the names, ordered by first name, of the people who have had at least two friendships?", "query": "SELECT T1.first_name,  T2.first_value FROM friendships AS T1 JOIN friends AS T2 ON T1.friend_id  =  T2.friend_id WHERE T1.friend_id  >  1 GROUP BY T1.first_name ORDER BY T1.first_name"}
{"question": "If you have ever been to Italy, when was the last time you were there?", "query": "SELECT T1.date FROM employees AS T1 JOIN trips AS T2 ON T1.emp_id  =  T2.emp_id WHERE T2.country_name  =  \"Italy\""}
{"question": "What is the name and id of the employee with the highest salary?", "query": "SELECT T1.employee_id,  T1.name_first,  name_last FROM employee AS T1 JOIN salary AS T2 ON T1.employee_id  =  T2.employee_id GROUP BY T1.employee_id ORDER BY T1.salary DESC LIMIT 1"}
{"question": "Find the names of all people in the office of Bob", "query": "SELECT T1.name FROM people AS T1 JOIN employees AS T2 ON T1.person_id  =  T2.person_id WHERE T2.first_name  =  \"Bob\""}
{"question": "Who made the first film about the Wright Brothers?", "query": "SELECT T1.name FROM Person AS T1 JOIN Person_Film AS T2 ON T1.id  =  T2.person_id WHERE T2.name  = \"Wright Brothers\""}
{"question": "Find the number of patents that each employee has filed", "query": "SELECT T1.employee_id,  T1.patent_id FROM employee AS T1 JOIN patent AS T2 ON T1.employee_id  =  T2.employee_id GROUP BY T1.employee_id"}
{"question": "What is the name and rank of the first female astronaut?", "query": "SELECT T1.first_name,  T1.rank,  T1.gender FROM astronauts AS T1 WHERE T1.first_name  =  \"Mary\""}
{"question": "Show the names and ages of the first three customers", "query": "SELECT T1.first_name,  T1.last_name,  T1.age FROM customers AS T1 WHERE T1.age  <  30 ORDER BY T1.age ASC"}
{"question": "What is the total number of customers with a balance above $80?", "query": "SELECT T1.customer_id,  T1.balance,  T1.credit_limit,  T1.credit_used,  T1.date_added,  T1.date_modified,  T1.first_name,"}
{"question": "Find a title of the product whose price is less than 100", "query": "SELECT T1.title FROM product AS T1 WHERE T1.price  <  100"}
{"question": "What is the average grade point of students whose last name is Smith?", "query": "SELECT AVG(grade) FROM student WHERE last_name = \"Smith\""}
{"question": "What are the names for the products that are located closest to the city of \"New York\"?", "query": "SELECT name FROM products WHERE city  =  'New York' AND distance_to_city  <  '10'"}
{"question": "What is the name and id of the first student to enroll in a course with the name \"Math\"?", "query": "SELECT T1.student_id,  T1.name_first,  count(*) FROM student AS T1 JOIN course AS T2 ON T1.student_id  =  T2.student_id WHERE T2.name  =  \"Math\" GROUP BY T1.student_id ORDER BY count(*) ASC LIMIT 1"}
{"question": "Who has friends that are younger than average?", "query": "SELECT T1.name,  T1.\"age\" FROM friends AS T1 JOIN users AS T2 ON T1.friend_id  =  T2.\"id\" WHERE T2.age  <  (SELECT AVG(T3.age) FROM users AS T3)"}
{"question": "What are the names and addresses of the states that are the largest number of cities in the United States?", "query": "SELECT state_name,  city_name FROM states WHERE state_name  IN (SELECT state_name FROM states WHERE state_id  =  (SELECT max(state_id) FROM states))"}
{"question": "What is the name, age, and rank of the person who has the largest number of followers on Twitter?", "query": "SELECT T1.name,  T1.age,  T1.rank FROM user AS T1 WHERE T1.followers  =  (SELECT max(T2.number) FROM user AS T2)"}
{"question": "What are the names, gpa, and email of the students with the top 5 gpa?", "query": "SELECT T1.Name,  T1.gpa,  T1.email FROM student AS T1 WHERE T1.gpa  =  (SELECT max(gpa) FROM student) ORDER BY T1.gpa DESC LIMIT 5"}
{"question": "What are the names, id, and roles of all the scientists who work at the university?", "query": "SELECT T1.name,  T1.id,  T1.role FROM scientists AS T1 JOIN university AS T2 ON T1.university_id  =  T2.id WHERE T2.name  =  \"University of Science and Technology\""}
{"question": "What is the average age of the students at the university?", "query": "SELECT AVG(age) FROM student"}
{"question": "\"Find me the ids of all employees who work in the accounting department", "query": "SELECT T1.employee_id FROM employee AS T1 WHERE T1.department_id  =  \"Accounting\""}
{"question": "What are the total credits of students in the first grade?", "query": "SELECT SUM(T1.credits) FROM students AS T1 WHERE T1.grade = 1"}
{"question": "\"List all directors along with the number of", "query": "SELECT T1.director_id,  T1.name_first,  count(*) FROM director AS T1 GROUP BY T1.director_id ORDER BY count(*)"}
{"question": "What are the names, first names, and ids of all the people who are registered at this university?", "query": "SELECT T1.name,  T1._id,  T1.first_name FROM student AS T1 WHERE T1.university_id  =  \"1\""}
{"question": "Which students have the most hours of work?", "query": "SELECT T1.student_id,  T2.hours_worked FROM students AS T1 JOIN student_work AS T2 ON T1.id  =  T2.id GROUP BY T1.student_id HAVING count(T2.hours_worked)  >  (SELECT count(*) FROM student_work)"}
{"question": "Find the full names of all students who have a phone number of (555) 123-4567", "query": "SELECT T1.full_name FROM students AS T1 JOIN student_phone_number AS T2 ON T1.id  = T2.student_id WHERE T2.phone_number  =  '555-123-4567'"}
{"question": "What are the names, surnames, and cities of the people who can play the guitar?", "query": "SELECT T1.first_name,  T1.last_name,  T1.city FROM people AS T1 WHERE T1.can_play_guitar = 'Y'"}
{"question": "What are the first names of all the people in the photos in the album named \"Rebecca's Wedding\"?", "query": "SELECT T1.name FROM photos AS T1 JOIN photos_albums AS T2 ON T1.photo_id  =  T2.photo_id WHERE T2.album_name  =  \"Rebecca's Wedding\""}
{"question": "How many people are in the city of Austin?", "query": "SELECT T1.city_name,  T1.population FROM city AS T1 WHERE T1.city_name  =  \"Austin\""}
{"question": "What are the names, id and price of each of the products?", "query": "SELECT T1.name,  T2.id,  T3.price FROM product AS T1 JOIN product_description AS T2 ON T1.id  =  T2.id_product JOIN product_price AS T3 ON T1.id  = T3.id_product WHERE T2.name  =  'Samsung Galaxy S3'"}
{"question": "What are the id, names and genders of the artists who made a record?", "query": "SELECT T1.artist_id,  T1.artist_name,  T1.artist.gender FROM artist AS T1 JOIN album AS T2 ON T1.artist_id  =  T2._artist_id WHERE T2.record_id  =  \"1\""}
{"question": "Show the names and ids of customers who enrolled in an online course", "query": "SELECT T1.student_id,  T1.course_id FROM student AS T1 JOIN course AS T2 ON T1.student_id  =  T2.student_id WHERE T2.course_id  =  'COURSE_ID'"}
{"question": "How many people are there in the department of Computer Science?", "query": "SELECT COUNT(*) FROM STUDENT AS S1 JOIN DEPARTMENT AS S2 ON S1.department_id  ==  S2.department_id"}
{"question": "What are the names and ranks of the people involved in the shooting of \"The Dark Knight\"?", "query": "SELECT T1.name,  T1.rank FROM people AS T1 JOIN people_involved AS T2 ON T1.person_id  =  T2.[person_id] WHERE T2.name  = \"The Dark Knight\""}
{"question": "What is the average price of wines that are available only in the \"California\" state?", "query": "SELECT AVG(Price) FROM wine WHERE state_code  =  \"California\""}
{"question": "What is the average height of the first two rows of men?", "query": "SELECT AVG(height) FROM men WHERE id  =  (SELECT MIN(id) FROM men)"}
{"question": "Find the names of countries where the number of people with brown hair is more than the number of people with black hair", "query": "SELECT T1.country_name,  T1.population_number FROM countries AS T1 WHERE T1.population_number  >  T2.population_number AND T1.hair_color  =  \"Black\" AND T2.hair_color  =  'Brown'"}
{"question": "What are the names, salaries, and positions of the staff in the company?", "query": "SELECT T1.name,  T1.salary,  T1.position_id FROM employee AS T1 JOIN position AS T2 ON T1.position_id  =  T2.position_id JOIN department AS T3 ON T1.position_id = T3.position_id WHERE T2.name  = \"John\""}
{"question": "What are the names, order by last name, of the students who have not signed up for any online courses?", "query": "SELECT T1.name,  T2.last_name FROM students AS T1 JOIN student_course_enrollment AS T2 ON T1.id  =  T2.id WHERE T2.course_id  =  0"}
{"question": "What are the locations of all the colleges whose name ends with the letter \"r\" and the state is California?", "query": "SELECT name FROM college WHERE name  LIKE  '%r' AND state = \"California\""}
{"question": "Find the name of all files in the folder named \"B\"", "query": "SELECT * FROM file WHERE folder_name = \"B\""}
{"question": "What are the names and dates of birth of all students who were born in the US?", "query": "SELECT T1.first_name,  T1.last_name,  T1.date_of_birth FROM student AS T1 WHERE T1.country  =  'United States'"}
{"question": "Show the names of airlines using the code \"BA\"", "query": "SELECT airline_name FROM airlines WHERE airline_code  =  \"BA\""}
{"question": "What are the names in ascending order of their rank in the tournament (after \"", "query": "SELECT T1.Name FROM Tournament AS T1 JOIN Tournament_Player AS T2 ON T1.TournamentId  =  T2.TournamentId ORDER BY T2.Rank DESC"}
{"question": "How many students have a name that starts with the letter \"N\"", "query": "SELECT T1.name FROM students AS T1 WHERE T1.name  LIKE  \"N%\""}
{"question": "What are all the employees who are in the Finance department?", "query": "SELECT T1.name FROM employee AS T1 JOIN department AS T2 ON T1.department_id  =  T2.department_id WHERE T2.name  =  'Finance'"}
{"question": "What are the names, and numbers of days, of the students who are in the class of 2010?", "query": "SELECT T1.student_name,  T1.student_id,  T2.day_number FROM student AS T1 JOIN class AS T2 ON T1.student_id  =  T2.student_id"}
{"question": "List all directors along the number of films directed by each, after \"", "query": "SELECT director_id,  name_first,  name_last,  count(*) FROM director GROUP BY director_id ORDER BY count(*)"}
{"question": "What is the average weight of all the cookies?", "query": "SELECT AVG(weight) FROM cookie;"}
{"question": "Find the names of all students who have studied at a college in California", "query": "SELECT T1.student_id,  T2.name FROM students AS T1 JOIN college AS T2 ON T1.college_id  =  T2._id WHERE T2.state  =  'CA'"}
{"question": "What are the number of people in the city of New York?", "query": "SELECT count(*) AS c FROM city AS T1 JOIN resident AS T2 ON T1.city_id  =  T2.city_id WHERE T1.name  =  'New York'"}
{"question": "You can use this dataset, for example, to extract the \"question\" and \"task\" for each question-task pair, and then use the", "query": "SELECT T1.question,  T2.task FROM question_task AS T1 JOIN question_task AS T2 ON T1.question_id  =  T2.question_id"}
{"question": "What are the names, roles and salaries of the staff in the department of \"Economics\"?", "query": "SELECT T1.Name,  T1.Role,  T1.Salary FROM employee AS T1 WHERE Department_Name  =  \"Economics\""}
{"question": "What was the population of the largest town in the district?", "query": "SELECT T1.population FROM District AS T1 JOIN City AS T2 ON T1.city_id  =  T2.city_id WHERE T2.name  =  \"Lake\""}
{"question": "Find a new question that is similar to this one but not too similar", "query": "SELECT T2.name,  T1.Elim_Move FROM elimination AS T1  JOIN wrestler AS T2 ON T2.Wrestler_ID  IN ( SELECT T3.Wrestler_ID FROM wrestler AS T3 WHERE T3.Wrestler_Name  =  T1.Wrestler_Name )"}
{"question": "What are the IDs, names and genders of the employees who received a raise?", "query": "SELECT T1.employeeid,  T1.name,  T1.gender FROM employees AS T1 WHERE T1.salary  >  \"0\" AND T1.salary  <  \"10000\""}
{"question": "Find the list of documents that are in the most three popular type but not in the most three popular structure", "query": "SELECT DISTINCT document_type,  count(*) FROM documents GROUP BY document_type HAVING count(*)  =  3 AND count(DISTINCT document_structure)  =  3"}
{"question": "What are the names and ages of all members of the board of directors?", "query": "SELECT T1.name,  T1.\"age\" FROM board_members AS T1"}
{"question": "Find the names of customers who have no records", "query": "SELECT T1.Customer_ID,  T2.customer_name,  T2.Customer_First_Name,  T2.Customer_Last_Name,  T2.customer_address,  T2.customer_city,  T2.customer_state,  T2.customer_zip,  T2.customer_country,  T2.customer_phone,  T2.customer_email,  T2.customer_fax,  T2.customer_mobile,  T2.customer_work_phone,  T2.Customer_Work_Address,"}
{"question": "Find the numbers of customers with high savings balance and low saving balance", "query": "SELECT T1.custid,  T2.balance,  T3.[name] FROM accounts AS T1 JOIN checking_account AS T2 ON T1.id  =  T2.account_id JOIN savings_account AS T3 ON T1.id  = T3.account_id WHERE T2.balance  >  0 AND T3.name  =  \"Savings\""}
{"question": "What are the names and addresses of all the houses with at least three bedrooms?", "query": "SELECT T1.house_name,  T2.house_address FROM houses AS T1 JOIN houses_with_bedrooms AS T2 ON T1.house_id  =  T2.house_id GROUP BY T1.house_name, T2.house_address"}
{"question": "What are the average scores of all the exams?", "query": "SELECT avg(score) FROM exams"}
{"question": "What are the names (including aliases) of the companies whose revenue is less than 50 million?", "query": "SELECT T1.name FROM companies AS T1 WHERE T1.revenue  <  50"}
{"question": "What are the names in ascending order of ID?", "query": "SELECT T1.id,  T1.name FROM table AS T1 ORDER BY T1.id"}
{"question": "What is the name of the city that was the host of the first ever olympic games?", "query": "SELECT T1.city,  T2.name FROM city AS T1 JOIN country AS T2 ON T1.country_id  =  T2.country_id WHERE T1.name  =  \"Athens\""}
{"question": "What is the name, id and date of birth of all students in the database?", "query": "SELECT T1.student_name,  T1.student_id,  T1.student_date_of_birth FROM student AS T1"}
{"question": "List the names of the students who were enrolled in the class \"A\" and \"C\" simultaneously", "query": "SELECT T1.student_id,  T1.name_first,  count(*) FROM student AS T1 JOIN student_enrollment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(T1.name_first)  =  2"}
{"question": "What are the names and ids of all employees who are working over 40 hours a week?", "query": "SELECT T1.first_name,  T1.last_name,  T1.id FROM employee AS T1 WHERE T1.hours_worked  >  40;"}
{"question": "How many letters are there in the name of the product \"Heroes of the Storm\"?", "query": "SELECT count(*) AS c FROM product WHERE name  =  \"Heroes of the Storm\""}
{"question": "What is the name and score of the student with id 1001 of the class X?", "query": "SELECT T1.id,  T1.name,  T1.score FROM students AS T1 WHERE T1.id  =  1001"}
{"question": "What are the names and first names of the employees who work in the building with the highest population", "query": "SELECT name,  first_name FROM employees WHERE building_id  =  (SELECT max(building_id) FROM building)"}
{"question": "What is the name or type of the first book ever written by Homer?", "query": "SELECT title FROM books WHERE author_id  =  (SELECT author_id FROM authors WHERE first_name  =  \"Homer\")"}
{"question": "What are the first nine numbers in a sequence that grows by five?", "query": "SELECT T1.num,  T2.num FROM sequence AS T1 JOIN sequence AS T2 ON T1.num  =  T2.num + 5"}
{"question": "show the name of colleges that have at-least-two players", "query": "SELECT T1.Name FROM college AS T1 JOIN player AS T2 ON T1.College_ID  =  T2.College_ID WHERE T2.Player_ID  =  (SELECT MAX(Player_ID) FROM player)"}
{"question": "What are the students' names and the times they arrived at the party?", "query": "SELECT T1.student_name,  T1.time_arrived FROM students AS T1 JOIN party_attendance AS T2 ON T1.student_id  =  T2.[student_id]"}
{"question": "Find the age of the employee that has the biggest salary in the company", "query": "SELECT T1.age FROM employee AS T1 WHERE T1.salary  >  T2.salary;"}
{"question": "How many transactions are there in a day?", "query": "SELECT count(*)  FROM Transactions"}
{"question": "Find the number of seats for each of the following classes: A, B, and C", "query": "SELECT COUNT(*) FROM classes WHERE class_code IN (\"A\", \"B\", \"C\")"}
{"question": "(a novel question, about a hamburgers), after \"", "query": "SELECT"}
{"question": "What are the names and prices of the products in my shopping cart?", "query": "SELECT T1.product_name,  T2.price FROM products AS T1 JOIN cart AS T2 ON T1.id  = T2.product_id"}
{"question": "How many students have a score greater than 8", "query": "SELECT count(*)  FROM student WHERE score  >  8"}
{"question": "What are the names, rank, and salary of the professors of the University?", "query": "SELECT T1.name,  T1.rank,  T1.salary FROM professors AS T1 WHERE T1.id  =  (SELECT T2.id FROM professors AS T2 WHERE T2.name  =  \"John Smith\")"}
{"question": "What are the names in ascending order of height and number of legs of all animals?", "query": "SELECT T1.Name FROM animal AS T1 WHERE T1.height  >  (SELECT T2.height FROM animal AS T2 WHERE T2.number_of_legs  >  T1.number_of_legs) ORDER BY T1.height ASC, T1.number_of_leg_count ASC"}
{"question": "\"Find the id of user with id = 2\"", "query": "SELECT T1.id FROM user AS T1 WHERE T1.id = 2"}
{"question": "Find the names and addresses of all buildings except those that have an institution founded in 2003", "query": "SELECT T1.name,  T1.address FROM building AS T1 JOIN address AS T2 ON T1.address  =  T2.address WHERE T1.founded_year  <  2003"}
{"question": "List the first name and id of the people who have more than one account", "query": "SELECT T1.id,  T1.name FROM player AS T1 JOIN player AS T2 ON T1.id  =  T2.id WHERE T2.id  =  T1.name_first"}
{"question": "Which is the smallest city in the USA?", "query": "SELECT T1.city FROM cities AS T1 WHERE T1.population  =  ( SELECT min(T2.population) FROM cities AS T2 WHERE T2.country_code  =  \"USA\" )"}
{"question": "Find the names of all students who have majored in Computer Science in the order of their GPA", "query": "SELECT T1.student_name,  T2.grade_average FROM students AS T1 JOIN student_courses AS T2 ON T1.id  =  T2.id WHERE T2.major  =  \"Computer Science\" ORDER BY T2.grade_average"}
{"question": "Find the number of customers who have been with the company for more than 5 years", "query": "SELECT count(*) AS \"count\" FROM customer AS T1 WHERE T1.joining_date  >  '1995-01-01' AND T1.joining_date <  '2000-01-01'"}
{"question": "Find the names of countries and their corresponding population", "query": "SELECT name,  population FROM country"}
{"question": "What is the total budget of the company, and the budget of the Marketing Department?", "query": "SELECT T1.total_budget,  T1.budget_of_marketing FROM company AS T1 JOIN budget_categories AS T2 ON T1.company_id  =  T2, budget_categories AS T3 ON T2.budget_category_id  =  T3.id WHERE T3.name  =  \"Marketing\""}
{"question": "What is the average length in kilometers of the river running through the city of Zurich?", "query": "SELECT AVG(distance) FROM river WHERE city  =  'Zurich'"}
{"question": "How many students attend the courses with the number of credits?", "query": "SELECT COUNT(*),  course_id FROM courses WHERE credit_hours  >  0"}
{"question": "List the names of students who have never been in a class with a teacher who has the name \"Natalia\"", "query": "SELECT name FROM student WHERE student_id NOT IN (SELECT student_id FROM class WHERE teacher_id = \"Natalia\")"}
{"question": "How many people are there in the region of the airport named \"Mosul\"?", "query": "SELECT count(*)  FROM airport WHERE name  =  \"Mosul\""}
{"question": "Find all products that were sold in 2002", "query": "SELECT T1.product_id,  T1.product_name,  T1.product_description,  T1.product_price,  T1.product_category_id,  T1.quantity,  T1.quantity_sold,  T1.quantity_on_hand,  T1.quantity_in_stock,  T1.quantity_backorder,  T1.quantity_returned,  T1.quantity_cancelled,  T1.quantity_refunded,  T1.quantity,  T1.quantity_sold,"}
{"question": "List the names of the customers who have only made one purchase", "query": "SELECT T1.name FROM customers AS T1 WHERE T1.purchases  =  1"}
{"question": "(an original question, not starting with \"", "query": "SELECT T1.title,  T1.film_id,  T1.description FROM film_actor AS t1 JOIN film AS t2 ON t1.film_id  = t2.film_id WHERE t1.film_id  IN (SELECT film_id FROM film WHERE title  =  \"The Matrix\")"}
{"question": "Find the number of employees in total", "query": "SELECT count(*)  FROM employees"}
{"question": "Find the names of cities from which the most shipments are sent", "query": "SELECT T1.city_name,  count(*) AS total_shipments FROM shipments AS T1 GROUP BY T1.city_name ORDER BY total_shipments DESC"}
{"question": "(a novel question, about a table) Find the id and name of customers who made the purchase from a particular vendor", "query": "SELECT T1.id,  T1.name FROM customers AS T1 JOIN purchases AS T2 ON T1.cust_id  =  T2.[customer_id] WHERE T2.vendor_id  =  \"1\""}
{"question": "What are the names or titles of all the records of a table that have the field name \"title\" and the value \"C++\"?", "query": "SELECT T1.Name FROM table_name AS T1 WHERE T1.field_name  =  \"name\" AND T1.field_value  =  \"C++\""}
{"question": "What are the names, full names, and job ids of employees who make more than the highest paid employee with title of PU_MAN?", "query": "SELECT T1.name,  T1.full_name,  T1.job_id FROM employees AS T1 WHERE T1.salary > (SELECT MAX(T2.salary) FROM employees AS T2 WHERE T2.title  =  'PU_MAN')"}
{"question": "Return the name of all the customers who are women", "query": "SELECT T1.CustomerID,  T1.Name_First,  T1.Name_Last,  T1.Gender FROM customer AS T1 WHERE T1.Gender  =  'W'"}
{"question": "Find the names of all courses that have at least one professor from Physics department", "query": "SELECT T1.name FROM course AS T1 JOIN professor AS T2 ON T1.course_id  =  T2.course_id WHERE T2.department_id  = 'Physics'"}
{"question": "(a question about a sql table) Show the name of the building that is the location of the most number of departments", "query": "SELECT T1.name FROM building AS T1 JOIN department AS T3 ON T1.id  =  T3.building_id WHERE T3.name  = 'Theatre'"}
{"question": "Find the number of cities with an average temperature greater than 10 degrees Celsius", "query": "SELECT COUNT(*) FROM city WHERE AVG(temperature) > 10"}
{"question": "(a novel question, about a question about a sql table), after \"", "query": "SELECT count(*) AS count FROM table"}
{"question": "What is the first character of the first name of the customer with account number 1234?", "query": "SELECT T1.customer_first_name FROM customers AS T1 WHERE T1.account_number  =  1234 AND T1.customer_id  >  0"}
{"question": "What are the names that are at most 20 characters long and contain the word \"Mum\" only once?", "query": "SELECT T1.name FROM students AS T1 JOIN name AS T2 ON T1.name  =  T2.name WHERE T2.name  LIKE '%Mum%' AND T2.name  NOT LIKE '%Mum%' AND T1.name  NOT LIKE '%MUM%'"}
{"question": "What are the names, birthdays and id of students who passed the test last year?", "query": "SELECT T1.name,  T1.birthday,  T1.id FROM students AS T1 WHERE T1.id IN (SELECT T2.id FROM test AS T2 WHERE T2.year  =  \"2012\" AND T2.grade  =  \"A\")"}
{"question": "What is the first name, last name and ID of the employee with the most number of claims as a manager?", "query": "SELECT T1.first_name,  T1.last_name,  T1.id FROM employees AS T1 JOIN claims AS T2 ON T1.id  =  T2.employee_id WHERE T2.claim_type  = 'manager'"}
{"question": "What are the numbers of employees in each department?", "query": "SELECT T1.department_id,  count(*) FROM employees AS T1 JOIN department AS T2 ON T1.department_id  =  T2._id GROUP BY T1.department_id"}
{"question": "List the country of birth of the employees who have never been married", "query": "SELECT T1.country_code FROM employee AS T1 WHERE T1.marital_status  =  'never_married' GROUP BY T1.country_code"}
{"question": "What is the average volume of the last year's transactions?", "query": "SELECT AVG(volume) FROM transactions WHERE YEAR(date) =  '2016'"}
{"question": "List all the customers who have no orders made with a product called \"Chocolate\"", "query": "SELECT customer_id,  customer_first_name,  customer_last_name,  T1.product_name,  T1.quantity,  T1.price,  T1.total_price,  T1.total FROM customers AS T1 JOIN orders AS T2 ON T1.id  =  T2.cust_id WHERE T1.product_name  =  \"Chocolate\""}
{"question": "What is the average of all the salespeople's salaries after they were told that the average salary of a salesperson is $110,000?", "query": "SELECT AVG(salary) FROM sales_person WHERE salary > $110,000"}
{"question": "How many different products have the following features in common?", "query": "SELECT T1.feature_name,  T2.feature_name FROM features AS T1 JOIN features AS T2 ON T1.feature_id  =  T2.feature_id WHERE T1.feature_id  <>  T2.feature_id"}
{"question": "Which programs are never", "query": "SELECT T1.program_name FROM program_info AS T1 WHERE T1.program_id  =  (SELECT max(program_id) FROM program_info)"}
{"question": "Find the names of the two products that cost the least in the store", "query": "SELECT T1.product_name,  T1.price FROM products AS T1 JOIN products_prices AS T2 ON T1.product_id  =  T2.product_id WHERE T2.price  <  \"0.00\""}
{"question": "How many of the employees of the company named \"Hai\" are female?", "query": "SELECT T1.fname,  T1.lname,  T1.gender FROM employees AS T1 WHERE T1.name  =  \"Hai\""}
{"question": "Which movie has the largest number of ratings?", "query": "SELECT T1.name FROM movie AS T1 JOIN rating AS T2 ON T1.movie_id  =  T2"}
{"question": "List all products together with their prices", "query": "SELECT T1.product_id,  T1.price FROM products AS T1 JOIN products_price AS T2 ON T1.product_id  =  T2.product_id GROUP BY T1.product_id ORDER BY T1.price ASC"}
{"question": "What are the names and email addresses of all employees who work in the marketing department?", "query": "SELECT T1.name,  T1.email FROM employees AS T1 WHERE T1.dept_id  =  'Marketing'"}
{"question": "Which part fault requires maximum number of skills to fix? List the part id and name", "query": "SELECT T1.part_id,  T1.part_name FROM part AS T1 WHERE T1.part_name  =  'Fault'"}
{"question": "What are the names, prices, and quantities of all products that cost more than $300?", "query": "SELECT T1.Product_Name,  T2.Price,  T3.Quantity FROM Products AS T1 JOIN Products_Prices AS T2 ON T1.Product_ID  =  T2._Product_ID JOIN Products_Quantities AS T3 ON T2.Price  =  T3.Price WHERE T2.Price  >  300"}
{"question": "Find the names of students in the class of 2018 with grade point average greater than 3", "query": "SELECT name FROM Student WHERE GPA  >  3"}
{"question": "Find the id of the students who have no friends", "query": "SELECT T1.id FROM Students AS T1 JOIN Friends AS T2 ON T1.student_id  =  T2.student_id WHERE T2.student_id  =  0"}
{"question": "List the total number of transactions for each supplier", "query": "SELECT T1.supplier_id,  T1.total_transactions FROM supplier AS T1 GROUP BY T1.supplier_id ORDER BY T1.total_transactions DESC"}
{"question": "How many different products have a price of over $50?", "query": "SELECT T1.price_in_dollars,  T1.product_id FROM product AS T1 WHERE T1.price_in_cents  >  50"}
{"question": "Show all the records from the table \"film", "query": "SELECT * FROM film"}
{"question": "(a different question, about a different table), with \"", "query": "Examples of some or all task elements:"}
{"question": "List all the cities that have more than one university", "query": "SELECT T1.city FROM city AS T1 JOIN university AS T2 ON T1.city  =  T2.city GROUP BY T1.city HAVING count(*)  >  1"}
{"question": "What are the names, ages, and gender of all the staff members of the company?", "query": "SELECT T1.name,  T1.age,  T1.gender FROM staff AS T1"}
{"question": "Find the names of customers who are not registered in the city of Boston", "query": "SELECT T1.name FROM customer AS T1 WHERE T1.city_id  =  \"Boston\" AND T1.reg_date  =  NULL"}
{"question": "What are the names, cities, and addresses of all the companies that have been in business for more than 5 years and have a physical address in Chicago since 1998", "query": "SELECT T1.company_name,  T2.city,  T2.address FROM company AS T1 JOIN address AS T2 ON T1.company_id  =  T2.company_id WHERE T1.company_id  >  '0' AND T1.company_id  <  '999999' AND T2.city  =  'Chicago' AND T2.address  =  'Chicago'"}
{"question": "What are the names and addresses of all the members of the club?", "query": "SELECT T1.first_name,  T1.last_name,  T1.address FROM members AS T1 WHERE T1.club_id  =  \"Y\""}
{"question": "List the names of all the employees who work in the same building as the manager", "query": "SELECT T1.employee_id,  T1.first_name,  'Building' AS building FROM employees AS T1 JOIN building AS T2 ON T1.building_id  =  T2.building_id WHERE T2.name  =  \"Building\""}
{"question": "What is the first word of the title of the song?", "query": "SELECT T1.title FROM song AS T1 WHERE T1.title  =  \"The First Word of the Title of the Song\""}
{"question": "What are the names, locations and colors of the festivals?", "query": "SELECT T1.name,  T2.location,  T3.color FROM festival AS T1 JOIN festival_details AS T2 ON T1.id  =  T2.id,  festival_colors AS T3 ON T1.color  =  T3.color WHERE T1.name  =  \"Festival\""}
{"question": "Find the average rating for the cars in the new car category", "query": "SELECT AVG(rating) FROM car_ratings WHERE car_category = \"new car\""}
{"question": "What is the average speed of all the flights?", "query": "SELECT AVG(Speed) FROM flight"}
{"question": "What are the names, ids and amount of customers who purchased something in year 2007?", "query": "SELECT T1.name,  T1.[id],  T1.amount FROM customer AS T1 WHERE T1.year  =  2007"}
{"question": "What is the average number of audience in the world?", "query": "SELECT AVG(count(*)),  T1.country_name FROM audience AS T1 GROUP BY T1.country_name"}
{"question": "How many are there in the bank?", "query": "SELECT count(*)  FROM bank"}
{"question": "What is the name and country of the artist with the most number of paintings?", "query": "SELECT T1.artist_name,  T2.country FROM artist AS T1 JOIN artist_paintings AS T2 ON T1.artist_id  =  T2.artist_id WHERE T2.artist_id  =   (SELECT MAX(artist_id) FROM artist_paintings)"}
{"question": "Show the names of all the employees in the department with the highest average salary", "query": "SELECT T1.Name,  T1.salary FROM employees AS T1 JOIN department AS T2 ON T1.department_id  =  T2.department_id WHERE T2.avg_salary  =  (SELECT max(avg_salary) FROM department)"}
{"question": "Show the names of cities in ascending order of their population", "query": "SELECT T1.city_name FROM City_Info AS T1 JOIN City_Info_Population AS T2 ON T1.city_id  =  T2.city_id ORDER BY T2.population DESC"}
{"question": "Show the names of the guests", "query": "SELECT T1.guest_name FROM guest AS T1 WHERE T1.guest_id  =  1"}
{"question": "What is the name, last name and date of birth of the person who is the oldest", "query": "SELECT T1.name,  T1.last_name,  T1.dob FROM person AS T1 WHERE T1.age  =  (SELECT max(T2.age) FROM person AS T2)"}
{"question": "What are the id, name and email of the user in the database with username \"David Shieber\"", "query": "SELECT T1.name,  T1.email,  T2.id FROM users AS T1 JOIN user_info AS T2 ON T1.user_id  =  T2.user_id WHERE T1.username  =  \"David Shieber\""}
{"question": "List the types of wine", "query": "SELECT T1.type FROM wine AS T1 WHERE T1.type  = 'red'"}
{"question": "Use the data to find the minimum, maximum, and average salary of the average employee at the company", "query": "SELECT AVG(salary) FROM employees AS T1 JOIN employees AS T2 ON T1.employee_id  =  T2.\"employee_id\" WHERE T1.department_id = T2.department_id"}
{"question": "What is the average price of all vehicles?", "query": "SELECT AVG(transaction_price) FROM Financial_transactions"}
{"question": "What are the names and email ids of all employees who are not in a union?", "query": "SELECT T1.first_name,  T1.last_name,  T1.email_id FROM employees AS T1 WHERE T1.union_id  =  0"}
{"question": "Find all the names of the bands that have released their first album on the first day of the month", "query": "SELECT T1.bandname FROM band_releases AS T1 WHERE T1.date  =  \"01/01\""}
{"question": "In which year are there festivals both outside the 'United States' and inside the 'United States'?", "query": "SELECT T1.year FROM festivals AS T1 JOIN countries AS T2 ON T1.country_id  =  T2.country_id WHERE T2.country_name  =  \"United States\" AND T2.country_name !=  \"United States\" AND T1.year  >  2000"}
{"question": "What is the average salary of the employees who work in the offices of the same building?", "query": "SELECT AVG(salary) FROM employee WHERE office_id  =  (SELECT office_id FROM office WHERE building_id  =  (SELECT building_id FROM building WHERE address_id  =  (SELECT address_id FROM address WHERE city  =  \"New York\")))"}
{"question": "What are all the distinct premise types in the last question?", "query": "SELECT DISTINCTION T1.premise_type FROM premise AS T1 JOIN premise_type AS T2 ON T1.premise_type_id  =  T2.premise_type_id"}
{"question": "What does the table contain?", "query": "SELECT name FROM track"}
{"question": "How many times is the word \"the\" in \"the sun is hot\"?", "query": "SELECT COUNT(*) FROM word WHERE word = \"the\""}
{"question": "Show the average number of students who work at a computer in the rooms of each room", "query": "SELECT AVG(T1.num_students) FROM T1 JOIN T2 ON T1.room_id  =  T2.[room_id]"}
{"question": "What is the first name of the employee with the earliest date in the company?", "query": "SELECT T1.first_name FROM employees AS T1 WHERE T1.date_of_hire  =  (SELECT min(date_of_hire) FROM employees WHERE job  =  'employee')"}
{"question": "What is the name and address of the store who has the largest number of employees?", "query": "SELECT T1.store_name,  T2.address FROM store AS T1 JOIN employee AS T2 ON T1.store_id  =  T2.store_id WHERE T1.number_of_employees  =  'largest'"}
{"question": "Show the names of all artists who have participated in the recording of \"Hocus Pocus", "query": "SELECT artist_name FROM artist WHERE artist_name IN (SELECT artist_name FROM recording WHERE recording_name = \"Hocus Pocus\")"}
{"question": "Show the number of accounts with balance below $200", "query": "SELECT COUNT(*) FROM Accounts WHERE balance < 200"}
{"question": "How many engineers did no one contact?", "query": "SELECT T1.employeeid,  T1.name,  T1.phone,  T1.email,  T1.fax,  T1.address,  T1.city,  T1.state,  T1.zip,  T1.country,  T1.\"date_of_birth\",  T1.gender,  T1.salary,  T1.phone_type,  T1.phone_number,  T1.email_type,  T1.email_address,  T1.fax_type,  T1"}
{"question": "Show the names of rooms that are on the north side of the building", "query": "SELECT T1.name FROM room AS T1 JOIN building AS T2 ON T1.room_id  =  T2.\"room_id\" WHERE T2.building_type  =  \"N\""}
{"question": "What are the names, genders, and ages of the students in class with id 100", "query": "SELECT T1.name,  T1.gender,  T1.age FROM students AS T1 WHERE T1.id  =  100"}
{"question": "What is the total number of students in each grade? Show the number and their names", "query": "SELECT T1.grade,  T1.name FROM grade AS T1 GROUP BY T1.grade ORDER BY T1.grade DESC"}
{"question": "What are the names and ids of all employees who have a salary greater than $30,000 and less than $40,000?", "query": "SELECT T1.name,  T1.* FROM employees AS T1 JOIN employees AS T2 ON T1.manager_id  =  T2.* WHERE T1.salary  >  30 AND T1.salary  <  40"}
{"question": "Find the maximum and minimum temperature in New York City", "query": "SELECT MAX(temperature) FROM weather WHERE city = \"New York\""}
{"question": "What are the names and price of all products in the store?", "query": "SELECT T1.product_name,  T2.price FROM products AS T1 JOIN products_price AS T2 ON T1.product_id  =  T2.product_id"}
{"question": "What are the names and IDs of all the companies that have a subsidiary in the country of \"China\"?", "query": "SELECT T1.company_name,  T1.company_id FROM companies AS T1 JOIN subsidiaries AS T2 ON T1.company_id  =  T2.company_id WHERE T2.country_code  =  \"China\""}
{"question": "(a novel question, about a table similar to the prior one) What are the names of courses with 10 credit?", "query": "SELECT T1.Course_Name FROM Course AS T1 WHERE T1.Credit_Hours  =  10"}
{"question": "What are the names, id, and grades of all the students who have taken the class ACM-122?", "query": "SELECT T1.name,  T1.id,  T1.grade FROM student AS T1 JOIN class_attendance AS T2 ON T1.id  =  T2.id WHERE T2.class_id  =  'ACM-122'"}
{"question": "List the names of hotels in the city of \"Hong Kong\"", "query": "SELECT name FROM hotels WHERE city  =  \"Hong Kong\""}
{"question": "Select the number of cars", "query": "SELECT COUNT(*) FROM cars"}
{"question": "What are the names, ids, and rating of the movies that are about the characters in the movie \"Shrek\"?", "query": "SELECT T1.name,  T1.[id],  T1.rating FROM movie AS T1 JOIN movie_characters AS T2 ON T1.movie_id  =  T2.[id] WHERE T2.name  =  \"Shrek\""}
{"question": "How many students are taking the course \"Computer Architecture\"?", "query": "SELECT T1.student_id FROM students AS T1 WHERE T1.course_name  =  \"Computer Architecture\""}
{"question": "List the names of all the products", "query": "SELECT T1.name FROM product AS T1"}
{"question": "What are the ids of all the customers who have bought the product \"carpet\"?", "query": "SELECT T1.id FROM customers AS T1 JOIN orders_products AS T2 ON T1.id  = T2.customer_id AND T2.product_id = 'carpet'"}
{"question": "What are the names and ids of the customers who have bought the following product types?", "query": "SELECT T1.product_id,  T1.product_name,  T1.price,  T1.quantity FROM product AS T1 WHERE T1.product_id  IN (SELECT product_id FROM product WHERE product_name IN ('Coffee', 'Tea', 'Coffee and Tea'))"}
{"question": "Find the first and second names of all students who are living in the docks with a balcony", "query": "SELECT T1.student_first_name,  T1.student_last_name FROM students AS T1 JOIN student_addresses AS T2 ON T1.student_id  =  T2.student_id WHERE T2.address_type_code  =  \"Dock\" AND T2.address_type_name  =  \"Boat\" AND T2.address_sub_type_code  =  'B' AND T2.address_subtype_name  =  'B' AND (T2.address_sub_type  =  'B"}
{"question": "How many children do each of the following have?", "query": "SELECT T1.child_name,  T1.child_age FROM child AS T1 WHERE T1.parent_id  =  '1'"}
{"question": "(Show the name of colleges that have at", "query": "SELECT T1.college_name,  T2.city_name FROM college AS T1 JOIN city AS T2 ON T1.college_id  =  T2.college_id WHERE T2.city_name  =  \"New York\""}
{"question": "What are the first names for customers who have an \"a\" in first name?", "query": "SELECT T1.first_name FROM customer AS T1 WHERE T1.first_name LIKE '%a%'"}
{"question": "Find the first names and last names for the female students who are married and have at least two children", "query": "SELECT T1.lastname,  T1.firstname FROM student AS T1 JOIN student_marriage AS T2 ON T1.student_id  =  T2.student_id JOIN student_children AS T3 ON T1.student_id = T3.student_id WHERE T2.marriage_type  = 'married' AND T3.children_count  =  '2'"}
{"question": "What are the names and ids of the customers who are in the \"VIP\" category?", "query": "SELECT T1.name,  T1.* FROM customer AS T1 WHERE T1.status  =  'VIP'"}
{"question": "(What are the names of all the departments in the company that are in the same building as the finance department?)", "query": "SELECT T1.name FROM departments AS T1 JOIN building AS T2 ON T1.dept_id  =  T2.[dept_id] WHERE T2.building_id  =  \"1\""}
{"question": "What are the names and ages of faculty members in the department of statistics", "query": "SELECT T1.name,  T1.age FROM faculty AS T1 WHERE T1.dept_name  = 'Statistics'"}
{"question": "What are the last names of all students who are taking a course in the mathematics department", "query": "SELECT T1.last_name FROM Students AS T1 WHERE T1.course_id  =  'MATH'"}
{"question": "What is the name, surname and number of the person who is a student of the university with the highest number of students enrolled?", "query": "SELECT T1.student_name,  T1.student_surname,  T1.student_number FROM students AS T1 WHERE T1.student_number  =  (SELECT max(student_number) FROM students)"}
{"question": "What are the names, and the number of times, each student has visited Starbucks?", "query": "SELECT T1.student_name,  T1.count FROM visits AS T1 JOIN student AS T2 ON T1.student_id  =  T2._id WHERE T2.school_code  =  \"GOR\""}
{"question": "What are the distinct numbers of players for each department?", "query": "SELECT DISTINCE T1.department_id,  T1.player_id FROM player AS T1 JOIN department AS T2 ON T1.department_id  =  T2.department_id"}
{"question": "What are the names, addresses, and ratings of all drivers who have a car?", "query": "SELECT T1.name,  T1.address,  T1.rating FROM driver AS T1 JOIN car AS T2 ON T1.driverid  =  T2.driverid"}
{"question": "Find the total number of students in each city in descending order", "query": "SELECT city,  count(*) FROM city GROUP BY city ORDER BY count(*) DESC;"}
{"question": "What is the name and id of the customer who has the most transactions?", "query": "SELECT T1.name,  T1.id FROM customer AS T1 JOIN transactions AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.count(*)  =  1"}
{"question": "Show the names of all the students who are assigned at the beginning of the year", "query": "SELECT student_name FROM students WHERE student_id  =  (SELECT min(student_id) FROM students)"}
{"question": "What is the average cost of movies that use the computer generated effects?", "query": "SELECT AVG(transaction_amount),  SUM(transaction_amount) FROM Financial.transactions"}
{"question": "How many students are there in the second class?", "query": "SELECT count(*)  FROM students WHERE class_id  =  2"}
{"question": "What are the first and last names of the employees of the \"National Science Foundation\" with the last name \"Zhou\"?", "query": "SELECT T1.first_name,  T1.last_name FROM employees AS T1 JOIN employees AS T2 ON T1.manager_id  =  T2.employee_id WHERE T1.last_name  =  \"Zhou\""}
{"question": "(a question about a sql table) What is the average amount of people who bought the record with the most copies sold in the last month?", "query": "SELECT T1.product_id,  T1.quantity,  T1.price FROM products AS T1 WHERE T1.quantity  >  (SELECT MAX(T2.quantity) FROM products AS T2 WHERE T2.product_id  =  T1.product_id)"}
{"question": "What are the names (in alphabetical order) of all athletes with a height of 4'11\"?", "query": "SELECT T1.firstname,  T1.lastname FROM athlete AS T1 WHERE height  =  4'11\""}
{"question": "find the id of the question that has the highest priority", "query": "SELECT T1.id,  T1.question_id FROM question AS T1 WHERE T1.priority  =  (SELECT MAX(T2.priority) FROM question AS T2)"}
{"question": "What is the name, gender, and age of the student who has an average grade of 4", "query": "SELECT name, gender, age FROM student WHERE average_grade  =  4"}
{"question": "List all the students who are not in the class of the speaker", "query": "SELECT T1.student_id FROM student AS T1 WHERE T1.class_id  =  '1' AND T1.student_id !=  '1'"}
{"question": "What is the name and date of the first publication of the book \"The Little Prince\" by 'Antoine de Saint-Exupéry'?", "query": "SELECT T1.title,  T1.year FROM book AS T1 JOIN publication AS T2 ON T1.book_id  =  T2.book_id WHERE T2.title  =  'The Little Prince' AND T1.year  =  '1943'"}
{"question": "Find the name of the department that is responsible for creating new products", "query": "SELECT T2.dept_name FROM department AS T1 JOIN product_category AS T2 ON T1.dept_id  =  T2._dept_id"}
{"question": "What is the population of all the cities that have more than 1500 inhabitants?", "query": "SELECT T1.city_name,  T2.population FROM city AS T1 JOIN city_population AS T2 ON T1.city_id  =  T2.city_id WHERE T2.population  >  1500"}
{"question": "What are the ids of products that have more than one line item?", "query": "SELECT T1.id FROM products AS T1 JOIN line_item AS T2 ON T1.id  = T2.product_id WHERE T2.quantity > 1"}
{"question": "How many times has each student registered for the course?", "query": "SELECT count(*) AS count FROM student_registration WHERE student_id  =  \"{student_id}\""}
{"question": "What is the maximum and minimum budget of the projects?", "query": "SELECT T1.budget_max,  T1.budget_min FROM Project_Budget AS T1 JOIN Project_Budget_Type AS T2 ON T1.budget_type_id  =  T2.id WHERE T2.name  =  \"Budget\""}
{"question": "What are the names, job titles, salaries, and specialties of all the employees?", "query": "SELECT T1.firstname,  T1.lastname,  T1.jobtitle,  T1.salary,  T1.specialty FROM employee AS T1 ORDER BY T1.firstname ASC"}
{"question": "What is the average speed of the fastest runner in the world?", "query": "SELECT AVG(speed) FROM runner_data"}
{"question": "What is the average age of students living in the dorm with the highest percentage of students who have been to college?", "query": "SELECT avg(age) FROM dorm_students WHERE dorm_id = (SELECT dorm_id FROM dorm_students WHERE dormitory_type_code = 'Dormitory' AND dorm_id = (SELECT dormitory_id FROM dorm_students  WHERE dorm_id = (SELECT dormid FROM dorm_students WHERE student_id = (SELECT student_id FROM student WHERE dorm_id = (SELECT d.dorm_id FROM dorm_dormitories AS d WHERE d.dorm_id = (SELECT d.id FROM dorm_dormitories WHERE d.dorm_"}
{"question": "What are the names and ids of the people who have attended at least one marketing course?", "query": "SELECT T1.id,  T1.name_first,  (SELECT name_last FROM student_profile AS T2 WHERE T2.id  =  T1.student_id) FROM student_profile AS T1 WHERE T1.student_id  IN (SELECT id FROM student_profile WHERE name_first  =  'John' OR name_last  =  'Smith')"}
{"question": "What are the names and ages of the students at the university?", "query": "SELECT T1.name,  T1.\"age\" FROM student AS T1;"}
{"question": "Find the first name and last name for all instructors who have taught a course about database", "query": "SELECT T1.first_name,  T1.last_name FROM instructors AS T1 JOIN courses AS T2 ON T1.instructor_id  =  T2.instructor_id WHERE T2.course_name  =  \"database\""}
{"question": "(what is the question about a table)", "query": "SELECT * FROM table_name"}
{"question": "What are the name, address, and gender of all customers from the table GALAXY", "query": "SELECT T1.customer_name,  T2.customer_address,  T3.customer_gender FROM customers AS T1 JOIN customer_address_history AS T2 ON T1.id  = T2.customer_id JOIN customer_address_history AS  T3 ON T2.id  =  T3.id"}
{"question": "What are the names and birthdays of the professors who have been working at the university for more than 25 years?", "query": "SELECT T1.Name,  T1.Birthday FROM professor AS T1 JOIN professor_info AS T2 ON T1.Professor_ID  =  T2._id WHERE T2.Start_date  >  '1993-01-01' AND T2.End_date  <  '2018-01-01'"}
{"question": "What are the names for the days of the week?", "query": "SELECT T1.day_name FROM day_of_week AS T1"}
{"question": "What are the names that are not in the database?", "query": "SELECT name FROM track_name WHERE name NOT IN (SELECT name FROM track)"}
{"question": "(a novel question, about a specific database)", "query": "(the sql query to answer the questions)"}
{"question": "what are all the details of the organisations", "query": "SELECT T1.name,  T1.\"description\",  T1.address,  T1.phone,  T1.fax,  T1.email,  T1.website,  T1.city,  T1.state,  T1.country,  T1.country_code,  T1.country_name,  T1.country_population,  T1.country_area,  T1.country_currency,  T1.currency_code,  T1.currency_name,  T1.currency_symbol,  T1"}
{"question": "What is the name and type of each of the cars that Mr", "query": "SELECT T1.name,  T1.type FROM cars AS T1"}
{"question": "What are the names, dates of birth and marital status of all the alumni who currently have at least one child?", "query": "SELECT T1.name,  T1.dob,  T1.marriage,  T1.children FROM alumni AS T1 WHERE T1.children  =  1"}
{"question": "Return the details of customers who have not made any transaction with us", "query": "SELECT T1.customer_id,  T2.name,  T3.city,  T4.state,  T5.country,  T6.phone,  T7.email,  T8.credit_score,  T9.credit_limit,  T10.credit_status,  T11.credit_status_date,  T12.credit_status_date_time,  T13.credit_status_date_type,  T14.credit_status_date_year,  T15.credit_status_date_month,  T"}
{"question": "What are the names, birthdays, and phone numbers of all the teachers in the following table:", "query": "SELECT T1.Name,  T1.Birthday,  T1.Phone_Number FROM Teacher AS T1"}
{"question": "(a novel question, about a table) Find the average grade point of student who has the last name of \"Smith\"", "query": "SELECT T1.grade_point FROM Student AS T1 JOIN Student_grades AS T2 ON T1.student_id  =  T2.student_id WHERE T2.last_name  =  \"Smith\""}
{"question": "What is the average grade for all students with a major in \"engineering\"?", "query": "SELECT AVG(grade) FROM student WHERE major = 'engineering'"}
{"question": "What are the names, id and city of the student address(es) with the highest average monthly rental?", "query": "SELECT T1.name,  T1.id,  T1.city FROM student_address AS T1 WHERE T1.rental_average  >  (SELECT AVG(rental_average) FROM student_address)"}
{"question": "What is the name, gender and height of each student at a specific university?", "query": "SELECT T1.name,  T1.gender,  T1.height FROM students AS T1 WHERE T1.university_id  =  \"1\""}
{"question": "What is the name and address of the department that has the most professors?", "query": "SELECT T1.department_id,  T1.name,  T1.[address] FROM department AS T1 JOIN professor AS T2 ON T1.department_id  =  T2.[department_id] GROUP BY T1.department_id ORDER BY count(*) ASC LIMIT 1"}
{"question": "What is the name of the artist who is known as \"the most prolific producer of songs?\"", "query": "SELECT T1.name FROM artist AS T1 JOIN songs AS T3 ON T1.artist_id  =  T3.[artist_id] WHERE T3.title  =  \"The Most Prolific Producer Of Songs\""}
{"question": "Find the average distance of the cars to their parking places", "query": "SELECT AVG(distance) FROM parking_places"}
{"question": "What are the names and positions of students who have been enrolled in the same course with name \"Class of 2014\" at the end of 2013?", "query": "SELECT T1.name,  T1.position FROM student AS T1 JOIN course AS T2 ON T1.course_id  =  T2.[course_id] WHERE T2.name  =  'Class of 2014' AND T1.year  =  '2013'"}
{"question": "Find the customer code and name for the customer with the highest purchase volume", "query": "SELECT T1.customer_code,  T1.customer_name FROM customer AS T1 WHERE T1.purchase_volume  =  (SELECT MAX(T2.purchase_volume) FROM customer AS T2)"}
{"question": "What are the first name, last name, and birth date of the customer whose date of birth is the latest?", "query": "SELECT first_name,  last_name,  birth_date FROM customer WHERE birth_date  =  (SELECT max(birth_date) FROM customer)"}
{"question": "What is the value of the attribute \"number\" on this particular product?", "query": "SELECT T1.product_id,  T1.product_name,  T1.product_price,  T1.product_quantity,  T1.product_category,  T1.product_description,  T1.product_image,  T1.product_number FROM products AS T1 WHERE T1.product_id  =  (SELECT product_id FROM products WHERE product_name  =  \"Product 1\")"}
{"question": "Find the id and list all the names of the employees who have been in engineering for more than 3 years", "query": "SELECT T1.employee_id,  T1.name FROM employee AS T1 JOIN department AS T2 ON T1.department_id  =  T2.department_id WHERE T2.department_name  =  \"Engineering\" AND T1.years_in_department  >  3"}
{"question": "What are the names, locations and product types of the products with \"white\" in their description?", "query": "SELECT T1.name,  T1.location,  T1.product_type FROM product AS T1 WHERE T1.description  LIKE '%white%'"}
{"question": "(a question about a sql table) Give the id and product type of all products with a price below $20", "query": "SELECT T1.product_id,  T1.product_type FROM products AS T1 WHERE T1.price  <  20"}
{"question": "List all documents that have a text type", "query": "SELECT T1.text FROM Documents AS T1 WHERE T1.type  =  'text'"}
{"question": "What is the first and last name of the customer that purchased something most recently?", "query": "SELECT T1.first_name,  T1.last_name FROM customer AS T1 WHERE T1.last_purchase_date  =  ( SELECT min(last_purchase_date) FROM customer )"}
{"question": "Find the average age of customers who ordered beer", "query": "SELECT AVG(age) FROM customers WHERE customer_order_item  =  \"beer\""}
{"question": "What is the address for the customer who has the name \"John\"", "query": "SELECT address FROM customer WHERE name  =  \"John\""}
{"question": "What are the names, and id of the students' last names that contain the letters D and V", "query": "SELECT T1.last_name FROM students AS T1 WHERE T1.last_name LIKE \"%D%V%\""}
{"question": "Find the names of all the students who are under the age of 12", "query": "SELECT T1.student_name FROM student AS T1 WHERE T1.age  <  12"}
{"question": "Find the names and gender of the students who have played both Call of Destiny and Works Of Widenius games", "query": "SELECT T1.student_id,  T1.first_name,  'Male' AS gender FROM students AS T1 JOIN games AS T2 ON T1.student_id  =  T2.[player_id] WHERE T2.game_id  =  \"Call of Destiny\" AND T2.game_id !=  \"Works of Widenius\""}
{"question": "What is the name of the school with the largest enrollment?", "query": "SELECT T1.school_name FROM school AS T1 JOIN student AS T2 ON T1.id  =  T2.school_id WHERE T2.school_size  >  1000"}
{"question": "What are the names, id and number of columns of each table in the database?", "query": "SELECT T1.column_name,  T1.column_id,  T1.column_type FROM table_info AS T1"}
{"question": "What is the name, age and position of the president of the company that just received the first customer?", "query": "SELECT name, age, position FROM president WHERE name  =  \"John Doe\""}
{"question": "What are the name, phone number, and email address of the customer who ordered the most number of products?", "query": "SELECT T1.id,  T1.name,  T1.phone_number,  T1.email_address FROM customer AS T1 WHERE T1.order_count  =  (SELECT MAX(T2.order_count) FROM customer AS T2)"}
{"question": "What is the average price for each year?", "query": "SELECT AVG(price) FROM products"}
{"question": "Find the amount of the product with the maximum price", "query": "SELECT T1.product_id,  T1.price FROM products AS T1 WHERE T1.price  =  (SELECT MAX(T2.price) FROM products AS T2)"}
{"question": "What are the major events of the year?", "query": "SELECT T1.year,  T2.name FROM year AS T1 JOIN event AS T2 ON T1.year  =  T2.year"}
{"question": "Find the name of all the players who have played for the New York Yankees", "query": "SELECT name FROM Player WHERE team = \"New York Yankees\""}
{"question": "What is the name and city of the employee who has the highest salary?", "query": "SELECT T1.employee_id,  T1.first_name,  \"T1.last_name\" FROM employees AS T1 JOIN employees AS T2 ON T1.employee_id  =  T2.\"T1.employee_id\" WHERE T1.salary  >  T2.salary ORDER BY T1.salary DESC LIMIT 1"}
{"question": "How can I figure out which course is the most frequently taught?", "query": "SELECT T1.course_id,  T1.course_name,  T1.course_code,  T1.course_year,  T1.course_semester,  T1.course_quarter,  T1.course_term,  T1.course_type,  T1.course_credit_hours,  T1.course_fee,  T1.course_instructor,  T1.course_teaching_method,  T1.course_location,  T1.course_start_date,  T1.course_end"}
{"question": "What are the names and ids of the customers whose names begin with \"A-\"?", "query": "SELECT T1.id,  T1.name FROM customer AS T1 WHERE T1.name  LIKE 'A-%'"}
{"question": "What are the names, first and last, of the customers who have an order with shipping method FedEx, status Paid, and order id 8?", "query": "SELECT T1.first_name,  T1.last_name,  T1.order_id,  T1.shipping_method,  T1.status,  T1.order_date,  T1.total_price,  T1.order_total,  T1.order_item_id,  T1.order_status,  T1.orderid,  T1.orderdate,  T1.order_quantity,  T1.order_product_id,  T1.product_id,  T1._id,"}
{"question": "Show the price of products, grouped by product id", "query": "SELECT T1.product_id,  T2.price FROM products AS T1 JOIN prices AS T2 ON T1.product_id  =  T2.\"product_id\""}
{"question": "Find the number and names of customers who have both New and Paid orders", "query": "SELECT count(*),  name FROM customer WHERE (order_status  =  'New' AND order_status  =  'Paid')"}
{"question": "What is the average age of students who have allergies with food and/or animal types?", "query": "SELECT AVG(Age) FROM Student_Allergies WHERE food_type  =  'yes' OR animal_type  =  'yes';"}
{"question": "For the customer with the id of 579, show the total number of items purchased, the total amount of the items and the total amount of the items purchased", "query": "SELECT T1.item_name,  T1.item_price,  T1.item_quantity,  T1.item_total FROM customer_items AS T1 WHERE customer_id  =  579"}
{"question": "What is the average age of all the employees with the last name of \"Smith\"?", "query": "SELECT T1.age FROM employees AS T1 WHERE T1.last_name  =  \"Smith\""}
{"question": "(a novel question, about a table), after \"Generate:\"", "query": "(the sql query to answer the query), after \""}
{"question": "Find the names of students who have joined the school in the same term with the student who has the highest average grade", "query": "SELECT T1.name FROM student AS T1 JOIN student AS T2 ON T1.term_id  =  T2._id WHERE T2.grade_average  >  T1.grade_average"}
{"question": "(a novel question)", "query": "SELECT name FROM track AS T1 JOIN race AS T2 ON T1.track_id  =  T2.track_id WHERE T2.race_id  =  \"null\""}
{"question": "What are all the names of students who have not taken math-physics in the last three years, ordered by their last name?", "query": "SELECT T1.lastname FROM student AS T1 JOIN student_attendance AS T2 ON T1.student_id  =  T2._id WHERE T2.course_id  =  \"math-physics\" AND T2.year_id  =  \"2009\" AND T2.term_id  =  \"1\" AND T2.term_year  =  \"2009\" AND NOT T1.lastname  =  \"Smith\" ORDER BY T1.lastname"}
{"question": "Find the first name and last name of all customers who have a total of at least $200", "query": "SELECT T1.first_name,  T1.last_name FROM customer AS T1 JOIN customer_details AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.total_price  >=  200"}
{"question": "Find the full name of employees who report tomc", "query": "SELECT T1.first_name,  T1.[last_name] FROM Employees AS T1 WHERE T1.first_name  =  \"Tom\""}
{"question": "What is the average grade point for students with last name \"Smith\"?", "query": "SELECT AVG(GPA) FROM Student WHERE last_name  =  \"Smith\""}
{"question": "Find the product type whose average price of all products is lower than the average price of products of the same product type", "query": "SELECT T1.product_type,  T2.product_type FROM product_type AS T1 JOIN product_type AS T2 ON T1.product_type  =  T2.product_type WHERE T1.average_price  <  T2.average_price"}
{"question": "What is the last date of all the products in the table \"all_products\"?", "query": "SELECT max(date) FROM all_products"}
{"question": "List the names of all customers in order of the number of days they have been active", "query": "SELECT T1.customer_first_name, T1.customer_last_name, T1.customer.customer_id, T1.customer_address_id, T1.customer.customer.customer_id,  T1.customer.customer.customer.customer_type_code, T1.customer.customer"}
{"question": "What is the id and name of employees who are not from the state of Mississippi?", "query": "SELECT T1.id,  T1.name FROM employee AS T1 WHERE T1.state !=  'Mississippi'"}
{"question": "What are the names, ages, and surnames of all students, ordered by age and name?", "query": "SELECT T1.name,  T1.age,  T1.surname FROM student AS T1 ORDER BY T1.age,  T1.name"}
{"question": "What are the names, genders and ages of students in the class of 2001?", "query": "SELECT T1.name,  T1.gender,  T1.age FROM student AS T1 WHERE T1.class_id  =  2001"}
{"question": "What are the numbers of movies that have the same first name as \"Michael\"?", "query": "SELECT T1.movie_id,  T1.title,  T1.first_name,  T1.last_name,  T1.year,  T1.genre,  T1.director,  T1.actor,  T1.rating,  T1.votes,  T1.runtime,  T1.release_date,  T1.director_id,  T1.actor_id,  T1.genre_id,  T1.rating_id,  T1.votes_id,  T1."}
{"question": "What are the names, id, and average salary of all employees?", "query": "SELECT employee_id,  first_name,  last_name,  salary FROM employees"}
{"question": "What is the average score of all people who have a score of 99?", "query": "SELECT AVG(score) FROM people WHERE score  =  99"}
{"question": "What are the names and ids of all customers whose address contains TN?", "query": "SELECT T1.customer_id,  T2.name,  T2.address_id FROM customer_address_histories AS T1 JOIN customers AS T2 ON T1.Customer_id  =  T2._id WHERE T2.address_id  =  'TN'"}
{"question": "Find the number of people who have not taken the \"Twin Peaks\" course", "query": "SELECT count(*)  FROM student WHERE course_id  =  \"Twin Peaks\""}
{"question": "Find the employee with the highest average salary", "query": "SELECT T1.employee_id,  T1.salary FROM employees AS T1 WHERE T1.salary  =  (SELECT AVG(T2.salary) FROM employees AS T2 WHERE T2.employee_id  =  T1.employee_id)"}
{"question": "What are the names, dates of birth, and emails of all employees who have an office address of \"1234 Main Street\" or \"1234 Main Street, Suite", "query": "SELECT T1.firstname,  T1.lastname,  T1.email,  T1.dob,  T1.office_address,  T1.phone,  T1.fax,  T1.position,  T1.manager_id,  T1.manager_name,  T1.manager_phone,  T1.manager_fax,  T1.manager_address,  T1.manager_email,  T1.manager_position,  T1.managerphone,  T1.managerfax,  T1.manager"}
{"question": "(a novel question, about a wikipedia page, or other website, or a book, or a website, or a book, or the internet)", "query": "(the sql query to answer the query)"}
{"question": "List the name and address of all students in alphabetical order", "query": "SELECT T1.student_name,  T1.address_street,  T1.address_city,  T1.address_state,  T1.address_zip FROM student AS T1 JOIN address AS T2 ON T1.student_id  =  T2.student_id ORDER BY T1.student_name ASC"}
{"question": "What are the ids and names of the customers who have bought products from the \"Mario's\" shop?", "query": "SELECT T1.customer_id,  T1.customer_name FROM customer AS T1 JOIN shop AS T2 ON T1.customer_id  =  T2.[customer_id] WHERE T2.name  =  \"Mario's\""}
{"question": "What is the average student age of each course in the College of Business?", "query": "SELECT course_id,  avg(student_age) FROM courses GROUP BY course_id"}
{"question": "Find the average age of customers with a credit card", "query": "SELECT AVG(age) FROM customer WHERE credit_card_id  =  \"1\""}
{"question": "(a novel question, about a table different from the table of the previous question), after \"", "query": "(the sql query to answer the previous question), after \""}
{"question": "(a novel question, about a more difficult table): Please show the first 2 rows of the records of the table 'users'", "query": "SELECT * FROM users"}
{"question": "What is the number and percentage of customers who have two or more policies?", "query": "SELECT COUNT(*) FROM customers WHERE num_policies  >  1"}
{"question": "Find the names of all the customers who bought an item from the store \"Dollar\"", "query": "SELECT T1.name FROM customer AS T1 JOIN order_item AS T2 ON T1.Customer_ID  =  T2.Customer_ID JOIN item AS T3 ON T2.Item_ID  =  T3.Item_ID WHERE T3.Item_Name  =  \"Dollar\""}
{"question": "How many products are sold by the company with the highest revenue this year?", "query": "SELECT T1.product_name,  T1.price,  T1.quantity,  T1.year,  T1.company_name,  T1.company_id,  T1.company_type,  T1.company_address,  T1.company_city,  T1.company_state,  T1.company_zip,  T1.company_country,  T1.company_phone,  T1.company_fax,  T1.company_email,  T1.company_website,  T1.company_"}
{"question": "What are the ids and names of the buildings where the event \"Spring Festival\" is held?", "query": "SELECT T1.building_id,  T1.building_name FROM building AS T1 WHERE T1.name  = \"Spring Festival\""}
{"question": "What are the names and email addresses of all customers who have purchased a \"Samsung Galaxy\" product?", "query": "SELECT customer_id,  customer_first_name,  customer_last_name,  email_address FROM customers WHERE product_name  =  \"Samsung Galaxy\""}
{"question": "Find the number of customers who have at most three transactions", "query": "SELECT count(*) from customer WHERE transaction_count <= 3"}
{"question": "(a question about a sql table) What are the first and last names?", "query": "SELECT first_name,  last_name FROM Person"}
{"question": "What is the name of the band that has the most number of songs with the same title?", "query": "SELECT name FROM band WHERE count(*)  =  (SELECT count(*) FROM song WHERE song_title  =  \"The\")"}
{"question": "What are the names, grades and birth dates of the students with the most number of friends?", "query": "SELECT T1.student_id,  T1.first_name,  first_name,  T1.\"grade\",  T1.birth_date,  T1.gender_code,  T1.address_type_code,  T1.city_id,  T1.state_id,  T1.zip_code,  T1.country_id,  T1.phone_number,  T1.email_address,  T1.address_id,  T1.address_street,  T1.address_city,  T"}
{"question": "What are the names, addresses and phone numbers of the customers who have a credit card?", "query": "SELECT T1.firstname,  T1.lastname,  T1.address,  T1.phone FROM customer AS T1 JOIN customer_card AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.card_type  =  'Visa'"}
{"question": "What is the name and id of the first employee named Mike?", "query": "SELECT T1.name,  T1.id FROM employee AS T1 WHERE T1.name  =  \"Mike\""}
{"question": "How many different employees have the same name as the CEO?", "query": "SELECT DISTINCT name FROM employees WHERE name  =  \"John Doe\""}
{"question": "What are the id's of the customers with the most transactions?", "query": "SELECT T1.id FROM customer AS T1 JOIN customer_transactions AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.id ORDER BY count(*) DESCRIBE"}
{"question": "What are the names, locations and codes of the teams in the US", "query": "SELECT T1.name,  T1.\"location\",  T1.code FROM team AS T1 WHERE T1.name  =  \"Chicago Bulls\""}
{"question": "What are the names and locations of products that were bought by at most two distinct customers?", "query": "SELECT DISTINCT p.product_name,  p.product_id,  p.location,  count(*) FROM products AS p GROUP BY p.product_id, p.product_name, p.location HAVING count(*)  <=  2"}
{"question": "What are the names in alphabetical order of the students who have the same birthday as Christoper, and are not the same as Chris or Chris?", "query": "SELECT T1.name FROM students AS T1 JOIN birthday AS T2 ON T1.birthday  =  T2.birthday WHERE T1.name  =  'Christopher' AND T1.name !=  'Chris' AND T1.name  =  'the same' AND T1.name !='Christopher' AND T1.birthday  = (SELECT min(T3.birthday) FROM students AS T3 WHERE T3.name  = 'Chris')"}
{"question": "Find the average number of sales made by each employee", "query": "SELECT AVG(Amount) FROM Sales"}
{"question": "What are the names and numbers of the two customers who bought the most number of newspapers?", "query": "SELECT customer_name,  customer_id FROM customers WHERE number_of_newspapers  =  (SELECT max(number_of_newspapers) FROM customers)"}
{"question": "Find the names of all the departments for which the total number of employees is greater than the number of students", "query": "SELECT T1.dept_name FROM department AS T1 JOIN employees AS T2 ON T1.department_id  =  T2,"}
{"question": "What are the names, id and email of the students of class T1?", "query": "SELECT T1.name,  T1.id,  T1.email FROM student AS T1 WHERE T1.class_id  =  'T1'"}
{"question": "What are the names, ages and genders of students who have the same first names as the students named Mary and Nancy, but different last names?", "query": "SELECT T1.name,  T1.age,  T1.gender FROM students AS T1 WHERE T1.first_name  =  \"Mary\" AND T1.last_name  =  \"Nancy\" AND T1.gender  =  \"female\" AND T1.age  =  \"18\""}
{"question": "What are the different names of the cities in the United States?", "query": "SELECT city_name FROM city"}
{"question": "What are the names in a table?", "query": "SELECT name FROM table"}
{"question": "Find the age of the person who has the most number of years to live", "query": "SELECT T1.age FROM Person AS T1 WHERE T1.age  >  (SELECT max(age) FROM person WHERE job = \"doctor\")"}
{"question": "List the names of the products that are not from the state of Hawaii", "query": "SELECT T1.product_name FROM product AS T1 WHERE T1.state_code  =  'HI' AND T1.product_name  NOT IN (SELECT T2.product_name FROM product AS t2 WHERE t2.state_code  =  \"HI\")"}
{"question": "What are the names and the first names of the students who have the same name as the student who was born on the day of the first of September", "query": "SELECT T1.first_name,  T1.name FROM Students AS T1 JOIN Students AS T3 ON T1.name  =   T3.name WHERE T3.birth_date  =  '01/09/1980'"}
{"question": "What is the first and last name of the student who ordered the least number of products?", "query": "SELECT T1.student_id,  T1.first_name,  'first_name',  T1.last_number,  T1.last_address,  T1.last_city,  T1.last_state,  T1.last_zip,  T1.last_country,  T1.last_phone,  T1.last_email,  T1.last_fax,  T1.last_mobile,  T1.last_work_phone,  T1.email_address,  T1.email_type"}
{"question": "What are the names for the artists?", "query": "SELECT T1.artist_name FROM artist AS T1"}
{"question": "What are the names, last names and IDs of the two authors of the book with the highest number of pages?", "query": "SELECT T1.first_name,  T1.last_name,  T1.id FROM authors AS T1 WHERE T1.pages  >  (SELECT T2.pages FROM books AS T2 WHERE T2.author_id  =  T1.id)"}
{"question": "(Example of some or all of the task items - (a question about a sql table)))", "query": "SELECT name FROM track"}
{"question": "What is the amount of salary for the employee and the name of the company that he works for?", "query": "SELECT T1.employee_id,  T1.name_first,  count(*) FROM employee AS T1 JOIN salary AS T2 ON T1.employee_id  =  T2.employee_id GROUP BY T1.employee_id ORDER BY count(*)  DESC LIMIT 1"}
{"question": "What is the average number of people in a room?", "query": "SELECT AVG(T1.num_people) FROM T1"}
{"question": "What are the names, order numbers, and addresses of all students at the University of Maryland?", "query": "SELECT student_id,  first_name,  last_name,  address,  order_number,  type FROM students"}
{"question": "What are the names and addresses of all the customers of the company \"Aerospace Corporation\"?", "query": "SELECT T1.name,  T1.address FROM customer AS T1 WHERE T1.company_id  =  \"Aerospace Corporation\""}
{"question": "What are the names and department numbers of all managers?", "query": "SELECT T1.manager_id,  T2.manager_name,  T2.manager_dept_id FROM manager_record AS T1 JOIN manager AS T2 ON T1.manager_id  =  T2.manager_id"}
{"question": "Who is the manager of the building with the highest number of apartments?", "query": "SELECT T1.building_name,  T1.building_id FROM buildings AS T1 JOIN apartments AS T2 ON T1.building_id  =  T2.building_id WHERE T2.num_apartments  =  (SELECT max(T3.num_apartments) FROM apartments AS T3)"}
{"question": "Show the dates, cities, and names of events in ascending order of the attendance", "query": "SELECT T1.event_date,  T1.city,  T1.name FROM events AS T1 ORDER BY T1.attendance DESC"}
{"question": "Give the number of employees in each department", "query": "SELECT T1.department_id,  T1.name,  T1.salary FROM employee AS T1 WHERE T1.department_id  =  (SELECT T2.department_id FROM department AS T2 WHERE T2.name  =  \"IT\")"}
{"question": "What are the ages of the students in ascending order?", "query": "SELECT T1.age FROM student AS T1 ORDER BY T1.age ASC"}
{"question": "List all universities that have a football team", "query": "SELECT T1.university_name FROM university AS T1 JOIN team AS T2 ON T1.university_id  =  T2.university_id WHERE T2.team_id  =  1"}
{"question": "What are the names in descending order of salary for all accountants?", "query": "SELECT T1.name FROM Accountant AS T1 ORDER BY T1.salary DESC"}
{"question": "What are the names and addresses of customers in the state of New York, ordered alphabetically?", "query": "SELECT customer_name, customer_address FROM customers WHERE state = \"New York\" ORDER BY customer_name"}
{"question": "Which are the names of the schools that are not on the list?", "query": "SELECT DISTINCT school_name FROM School_District WHERE school_name NOT IN (SELECT school_name FROM School_District_List)"}
{"question": "What is the names of the products with the highest average price?", "query": "SELECT T1.product_id,  T2.price FROM products AS T1 JOIN products_price AS T2 ON T1.product_id  =  T2, price_history AS T3 WHERE T3.price  >  T2.price ORDER BY T3.price  -  T2.price DESC"}
{"question": "Give the names and prices of all wines", "query": "SELECT T1.product_name,  T1.price FROM wine AS T1 WHERE T1.price  >  0"}
{"question": "How many customers have the following names?", "query": "SELECT T1.customer_first_name, T1.customer_last_name, T1.customer.address_type_code FROM customers AS T1 JOIN customer_addresses AS T2 ON T1.address_id  =  T2.address_id WHERE T2.customer_id  =  (SELECT customer_id FROM customers WHERE customer_first_name  =  \"John\" AND customer_last_name  =  \"Doe\")"}
{"question": "How many people are there in the following list?", "query": "SELECT T1.Name FROM people AS T1 WHERE T1.age  >  18"}
{"question": "What is the name of the captain of the ship with the most passengers?", "query": "SELECT T1.name FROM ship AS T1 JOIN passengers AS T2 ON T1.ship_id  =  T2._id WHERE T2.count  >  (SELECT count(*) FROM passengers WHERE ship_id  =  T1.ship_id)"}
{"question": "What is the first and last name of the student with id 4?", "query": "SELECT T1.student_name,  T1.student_id FROM student AS T1 JOIN student_info AS T2 ON T1.student_id  =  T2.student_id WHERE T2.id  =  4"}
{"question": "Find the names of students who have the most marks for Mathematics, Accounting, and Geography in descending order of marks", "query": "SELECT T1.student_name,  T1.marks_MATH,  T1.marks_ACC,  T1.marks_GEO FROM student AS T1 JOIN marks AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY T1.marks_MATH DESC,  T1.marks_Acc  DESC,  T1.marks_Geo  DESC"}
{"question": "What is the number and location of the stadiums with the most number of matches?", "query": "SELECT stadium_id,  COUNT(*) AS total_matches FROM stadiums GROUP BY stadium_id HAVING total_matches  =  MAX(total_matches)"}
{"question": "What is the name that has the most number of employees?", "query": "SELECT T1.name FROM employee AS T1 WHERE T1.emp_id  =  (SELECT max(T2.emp_id) FROM employee AS T2)"}
{"question": "What are the names and birth dates of all students", "query": "SELECT T1.first_name,  T1.last_name,  T1.birth_date FROM Students AS T1 WHERE T1.first_name  =  'John' AND T1.last_name  =  'Smith'"}
{"question": "What are the names and ages of all pilots in the game \"Space Invaders\"?", "query": "SELECT name,  age FROM pilot"}
{"question": "What are the names, types and id of all the products?", "query": "SELECT T1.product_name,  T1.product_type,  T1.product_id FROM product AS T1"}
{"question": "Find the number of students enrolled in San Francisco State University", "query": "SELECT COUNT(*) AS \"count\" FROM student_enrollment AS T1 WHERE T1.city  =  \"San Francisco\""}
{"question": "What are the id's of the people that have attended the first day of the course?", "query": "SELECT T1.student_id FROM student AS T1 JOIN course_attendance AS T2 ON T1.student_id  =  T2.[student_id] WHERE T2.course_id  =  1"}
{"question": "Find the names of all students that are in the table \"students\"", "query": "SELECT T1.student_id,  T1.name_first, ... FROM students AS T1 WHERE T1.student_id  IN (SELECT T2.student_id FROM students AS T2 WHERE T2.name_first  =  'John' AND T2.name_last  =  'Smith' AND T2.name_middle  =  'J. Smith' AND T2.name_suffix  =  'Jr.')"}
{"question": "There are $4$ students in the first grade, $3$ students in the second grade, and $4$ students in the third grade", "query": "SELECT T1.grade,  T1.student_id FROM student AS T1 WHERE T1.grade  =  \"1\""}
{"question": "(a question about a sql table) What are the names of the countries that have a population of at most 1 million people?", "query": "SELECT T1.name FROM country AS T1 WHERE T1.population  =  (SELECT min(T2.population) FROM country AS T2 WHERE T2.name  =  T1.name)"}
{"question": "(find the number of documents), after \"", "query": "SELECT COUNT(*) FROM documents WHERE document_type  =  'Article'"}
{"question": "What is the total number of vehicles that have been sold from the company \"Porsche\"?", "query": "SELECT count(*) AS total_vehicles FROM vehicles WHERE company_name  =  \"Porsche\""}
{"question": "What are the fullnames of the three instructors who teach the most courses? (this one is hard)", "query": "SELECT T1.full_name FROM instructors AS T1 JOIN courses AS T2 ON T1.instructor_id  =  T2.instructor_id WHERE T2.course_code  =  \"CSCI-101\" OR T2.course_code  =\"CSCI-102\" OR T2.course_id  =  \"CSCI_103\""}
{"question": "How old is the youngest winning pilot, what is their name?", "query": "SELECT T1.age,  T1.name FROM pilot AS T1 WHERE T1.win_year  =  '2000'"}
{"question": "(a novel question, about a hmble table) list the names of universities with 3 or more students", "query": "SELECT T1.name FROM university AS T1 JOIN students AS T2 ON T1.university_id  =  T2._id WHERE T2.student_count  >=  3"}
{"question": "What are the product type codes that have at most two products?", "query": "SELECT T1.product_type_code FROM product_types AS T1 JOIN product_types AS T2 ON T1.product_type_id  =  T2.product_type_id WHERE T2.product_type_id  <  2"}
{"question": "How many products are in the catalog named \"Greyhound\"?", "query": "SELECT T1.product_name FROM products AS T1 WHERE T1.product_name  =  \"Greyhound\""}
{"question": "What are the distinct service types that are provided in the organization?", "query": "SELECT DISTINCT service_type FROM service_types;"}
{"question": "I have a table of names (with a random letter at the start), and a table of numbers, and I want to see the frequency of names that start", "query": "SELECT name,  count(*) FROM names WHERE name  LIKE \"%a%\" GROUP BY name"}
{"question": "What is the maximum height of all the athletes?", "query": "SELECT MAX(height) FROM athlete"}
{"question": "What is the difference between regular and express?", "query": "SELECT T1.description,  T2.description FROM product_detail AS T1 JOIN product_detail AS T2 ON T1.product_id  =  T2.product_id WHERE T1.product_type  =  'Regular' AND T2.product_type  = 'regular'"}
{"question": "What are the first and last names of the people who got a part in the movie \"Dallas Buyers Club\"?", "query": "SELECT T1.first_name,  T1.last_name FROM cast_members AS T1 WHERE T1.role  =  \"Actor\""}
{"question": "What is the average speed of all the rides in the park?", "query": "SELECT AVG(speed) FROM rides"}
{"question": "How many people attended a lecture?", "query": "SELECT count(*) AS count FROM Attendance WHERE lecture_id  =  \"1\""}
{"question": "What are the names, rates and check in/out dates of the rooms with the highest rates", "query": "SELECT T1.room_id,  T1.name,  T1.rate,  T1.check_in,  T1.check_out,  T1.rate_id FROM room AS T1 WHERE T1.rate  >  (SELECT T2.rate FROM room AS T2 WHERE T2.rate  >  T1.rate) ORDER BY T1.rate ASC"}
{"question": "What is the average length of the shortest question with id 6?", "query": "SELECT T1.question_id,  T1.question_length FROM question AS T1 WHERE T1.question_id  =  6"}
{"question": "What are the first names of the customers with a savings account and a mortgage?", "query": "SELECT T1.FirstName,  T1.LastName,  T1.CustomerID,  T1.AccountType,  T1.AccountBalance,  T1.AccountBalances,  T1.AccountBalancing,  T1.AccountBalancings,  T1.AccountBalanings,  T1.AccountBilling,  T1.AccountBilled,  T1.AccountBills,  T1.AccountBillings,  T1.AccountBillings,  T1.AccountCredit,  T1.AccountCreditBalance,"}
{"question": "What is the average price of a hotel room in San Jose?", "query": "SELECT AVG(price) FROM hotel_rooms WHERE city  =  'San Jose'"}
{"question": "What are the names and genders of all students?", "query": "SELECT T1.name,  T1.gender FROM students AS T1"}
{"question": "What are the resident details containing the substrings 'Miss' and 'Missy'?", "query": "SELECT T1.name,  T1.address,  T1.city,  T1.state,  T1.zip,  T1.phone,  T1.email,  T1.gender,  T1.dob,  T1.marital_status,  T1.race,  T1.ethnicity,  T1.height,  T1.weight,  T1.hair_color,  T1.eye_color,  T1.drivers_license_number,  T1.drivers license state,  T"}
{"question": "Find the name, age, and nationality of each customer", "query": "SELECT T1.customer_name,  T2.customer_age,  T3.customer_nationality FROM customers AS T1 JOIN customers_addresses AS T2 ON T1.id  = T2.customer_id JOIN customers_addresses_telephones AS T3 ON T2.id  =  T3.customer_id"}
{"question": "What are the names, prices, and units of the products?", "query": "SELECT T1.product_name,  T1.price,  T1.units FROM products AS T1 WHERE T1.price  >  0.99 AND T1.units  >  0.01"}
{"question": "How many students have a name that contains the word \"son\"?", "query": "SELECT T1.name FROM students AS T1 WHERE T1.name LIKE '%son%'"}
{"question": "List the number of employees who have showed A1 in the circulation history of that document", "query": "SELECT T1.employeeid,  T1.name,  T1.title,  T1.salary,  T1.dept_id,  T1.emp_type,  T1.emp_status,  T1.emp_salary,  T1.emp_dept_id,  T2.emp_type,  T2.emp_status,  T2.emp_salary,  (SELECT count(*) FROM Employee_history AS T3 WHERE T3.emp_id  =  T1.emp_id AND T3"}
{"question": "What are the names, ages and home towns of the ten most popular athletes of the 2010 FIFA World Cup?", "query": "SELECT T1.name,  T1.age,  T1.hometown FROM athlete AS T1 WHERE T1.id  IN (SELECT T2.id FROM athlete AS T2 WHERE T2.id  IN (SELECT T3.id FROM athlete AS T3 WHERE T3.id  IN (SELECT T4.id FROM athlete AS T4 WHERE T4.id  IN (SELECT T5.id FROM athlete AS T5 WHERE T5.id  IN (SELECT T6.id FROM athlete AS T6 WHERE T6.id  IN (SELECT T7.id FROM athlete"}
{"question": "What is the name and ids of all the customers with an account number of \"12345678\"?", "query": "SELECT T1.id,  T1.name_first,  \"12345678\" FROM customer AS T1 WHERE T1.account_number = \"12345678\""}
{"question": "List all the first names of students in class T1B", "query": "SELECT T1.first_name FROM Student AS T1 JOIN class AS T2 ON T1.student_id  =  T2.[class_id] WHERE T2.class_code  =  \"T1B\""}
{"question": "In the USA, what is the largest city by population?", "query": "SELECT city FROM cities WHERE city  =  \"New York\""}
{"question": "How many students are there in the university that is the destination of the most routes?", "query": "SELECT count(*) AS \"Number of students\" FROM student AS T1 JOIN route AS T2 ON T1.student_id  =  T2.\"student_id\" WHERE T2.destination  =  \"University\""}
{"question": "List the names of all schools with enrollment of more than 10000 students", "query": "SELECT T1.school_name FROM school AS T1 WHERE T1.enrollment  >  10000"}
{"question": "Find the average number of reviews of a book", "query": "SELECT avg(review_count) FROM book_reviews"}
{"question": "Find the total number of students in a classroom", "query": "SELECT COUNT(*) FROM students WHERE classroom_id  =  (SELECT classroom_id FROM classrooms WHERE classroom_name  =  \"Room A\")"}
{"question": "What is the last date of the last exam of this semester?", "query": "SELECT T1.date_end FROM exam AS T1 WHERE T1.semester  =  \"Spring\" AND T1.date_start  >  \"2016-01-01\""}
{"question": "What are the names, ages and birth dates of the players that won the most matches?", "query": "SELECT T1.name,  T1.age,  T1.birth_date FROM player AS T1 WHERE T1.win_count  >  (SELECT max(T2.win_count) FROM player AS T2)"}
{"question": "What are the names, genders, and ages of all players?", "query": "SELECT T1.name,  T1.gender,  T1.age FROM player AS T1 WHERE T1.name  = \"John Doe\""}
{"question": "What are the first names and last names of all the employees in the company?", "query": "SELECT T1.employee_id,  T1.firstname,  T2.lastname FROM employee AS T1 JOIN employee_info AS T2 ON T1.employee_id  =  T2.employee_id"}
{"question": "What is the average price of all wines that have the same name?", "query": "SELECT AVG(price) FROM wines WHERE name  =  'Chateau Margaux'"}
{"question": "What are the names, ages, and heights of all players?", "query": "SELECT T1.name,  T1.age,  T1.height FROM player AS T1 ORDER BY T1.name ASC"}
{"question": "What is the name and phone number of the student who is the oldest customer?", "query": "SELECT T1.customer_name,  T1.phone_number FROM customers AS T1 WHERE T1.customer_id  =  (SELECT customer_id FROM customer_history WHERE customer_id  =  'T1') ORDER BY T1.customer_id DESC"}
{"question": "What is the name of the department that is not part of the Faculty of Engineering?", "query": "SELECT DISTINCT(department_name) FROM department WHERE department_name!= \"Engineering\""}
{"question": "Show the emails of the employees who have made no commission last year", "query": "SELECT T1.email FROM employee AS T1 JOIN commission AS T2 ON T1.id  =  T2.employeeid WHERE T2.amount  =  0"}
{"question": "Find the average number of times a player has visited each location", "query": "SELECT T1.location,  AVG(T2.visited) FROM player AS T1 JOIN location AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.location"}
{"question": "What is the name for the city with city code \"LJN\"?", "query": "SELECT city_name FROM city WHERE city_code  =  \"LJN\""}
{"question": "What are the names and ids of students who had a score of more than 90 in the last year?", "query": "SELECT T1.student_id,  T1.name,  T1._score FROM student AS T1 WHERE T1._score  >  90"}
{"question": "\"What are the names of all movies not reviewed by Chris", "query": "SELECT T1.name FROM Movie AS T1 WHERE NOT EXISTS (SELECT T2.name FROM Reviewer AS T2 WHERE T2.name  =  \"Chris\")"}
{"question": "What are the names and ages of all students who have used the library since 2009?", "query": "SELECT T1.name,  T1.age FROM students AS T1 WHERE T1.last_visit  >  '2009'"}
{"question": "How many athletes have the same score?", "query": "SELECT DISTINCT score FROM Athlete WHERE score  =  \"100\""}
{"question": "For each denomination, return the name of the denomination and the number of schools with that denomination", "query": "SELECT denomination_name,  COUNT(*) AS num_schools FROM schools WHERE denomination_id  =  '1' GROUP BY denomination_id"}
{"question": "What is the top-selling car in the United States in 2008?", "query": "SELECT TOP 1 T1.car_name,  T1.car_model,  T1.car_year,  T1.car_color,  T1.car_price FROM cars AS T1 WHERE T1.car_year  =  2008"}
{"question": "What is the average height of the players who scored the most goals?", "query": "SELECT AVG(height) FROM player WHERE goals  =  '1'"}
{"question": "(a question in a question and answer system)", "query": "SELECT name FROM track AS T1 JOIN race AS T2 ON T1.track_id  =  T2.track_id WHERE T2.race_id  =  \"null\""}
{"question": "Which companies are not department stores?", "query": "SELECT T1.company_name FROM company AS T1 WHERE T1.company_type !=  'Department Store'"}
{"question": "Find the name of employees who serve at least 10 employees", "query": "SELECT T1.name FROM employees AS T1 JOIN employees AS T2 ON T1.emp_id  =  T2.emp_id WHERE T2.emp_id  =  ( SELECT T3.emp_id FROM employees AS T3 WHERE T3.emp_id  =  \"1\" ) AND T1.emp_id  >  \"1\""}
{"question": "What are the names, ages, and states of all employees who do not have a house in the United States?", "query": "SELECT T1.name,  T1.age,  T1.state FROM employees AS T1 WHERE T1.home_country  =  'United States' AND T1.home_state  =  'Alaska' AND T1.home_city  =  'Anchorage'"}
{"question": "(the novel one), after \"Generate:\"", "query": "(the sql query to answer the questions)"}
{"question": "What are the names and locations of all airports in the city of Köln?", "query": "SELECT T1.city_name,  T2.name,  T2.location FROM airport AS T1 JOIN city AS T2 ON T1.city_id  =  T2.city_id"}
{"question": "Find the first name, last name and age of the students whose first name is not 'Alf'", "query": "SELECT T1.firstname,  T1.lastname,  T1.age FROM student AS T1 WHERE T1.firstname  NOT IN ('Alf')"}
{"question": "What is the name, location of the school called \"College\"", "query": "SELECT T1.name,  T1.location FROM College AS T1"}
{"question": "What is the average volume of the album \"Highway Star\" by the band \"The Cure\"?", "query": "SELECT AVG(volume) FROM album WHERE artist  =  \"The Cure\" AND album  =  \"Highway Star\""}
{"question": "What are the names, ordered by first name, of the customers who bought product \"bread\" at least once?", "query": "SELECT T1.name FROM customer AS T1 JOIN order_item AS T2 ON T1.customer_id  = T2.customer_id WHERE T2.product_id  =  'bread' AND T2.quantity  >  0"}
{"question": "What is the type of the hotel that is in the city with name \"Shanghai\"?", "query": "SELECT hotel_type_code FROM hotel WHERE city_name  =  \"Shanghai\""}
{"question": "Find the average number of students, per year, who take the computer science course", "query": "SELECT AVG(T1.num_students) FROM (SELECT DISTINCT T1.year FROM student AS T1) AS T2"}
{"question": "find the names of all products that are not in category \"apparel\"", "query": "SELECT T1.name FROM product AS T1 JOIN product_category AS T2 ON T1.product_id  =  T2.product_id WHERE T2.category_code  =  \"apparel\""}
{"question": "Find the name of all cities with population greater than 100000", "query": "SELECT T1.name FROM city AS T1 WHERE T1.pop > 100000"}
{"question": "What is the minimum number of passengers for an aircraft whose flight time is more than 8 hours?", "query": "SELECT min(Flight_Duration) FROM Flight_Duration WHERE Flight_Duration  >  8"}
{"question": "Which school district has the highest average grade point?", "query": "SELECT T1.district_name,  T1.grade_point FROM school_district AS T1 JOIN school_grades AS T2 ON T1.school_id  =  T2._id GROUP BY T1.district_name ORDER BY T1.grade_point DESC LIMIT 1"}
{"question": "I need a list of all the products with title that starts with 'A' or 'B'", "query": "SELECT T1.product_id,  T1.title FROM products AS T1 WHERE T1.title LIKE 'A%' OR T1.title LIKE 'B%'"}
{"question": "What is the average salary of the employees who are working in the 'Finance' department?", "query": "SELECT T1.avg_sal FROM employee AS T1 JOIN department AS T2 ON T1.department_id  =  T2.department_id WHERE T2.department_name  =  \"Finance\""}
{"question": "What are the names (first name, last name) of the students who have participated in at least one of the activities?", "query": "SELECT T1.first_name,  T1.last_name FROM student AS T1 JOIN activity AS T2 ON T1.id  =  T2.id WHERE T2.activity_name  =  \"football\""}
{"question": "What are the names (first names only, no middle names) of the students with the most credits?", "query": "SELECT T1.name FROM students AS T1 JOIN credits AS T2 ON T1.student_id  =  T2.student_id WHERE T2.credit_count  >  (SELECT max(T3.credit_count) FROM students AS T3)"}
{"question": "What is the name and number of the employee who was fired from the company last year?", "query": "SELECT T1.employee_id,  T1.name,  T1. last_name,  T1.position,  T1.salary,  T1.hire_date,  T1.termination_date,  T1.department_id,  T1.job_id,  T1.manager_id,  T1.title,  T1.email,  T1.phone_number,  T1.address_id,  T2.name AS department_name,  T2.department_id,  (SELECT T3"}
{"question": "Find the names of all people who have been involved in a fight", "query": "SELECT T1.name FROM fight AS T1 WHERE T1.person_id  =  (SELECT T2.person_id FROM fight AS T2 WHERE T2.person_id  =  T1.person_id)"}
{"question": "What are the names and id numbers of all the students who have been born in the year 1982?", "query": "SELECT T1.student_id,  T2.first_name,  T2.last_name,  T3.birth_date,  T4.gender,  T5.city,  T6.state,  T7.country,  T8.zip_code,  T9.phone_number,  T10.email,  T11.address,  T12.dob,  T13.dob_year,  T14.dob_month,  T15.dob_day,  T16.dob_month_day"}
{"question": "What is the average age of students with the last name Smith? List the names of students with the last name Smith", "query": "SELECT T1.name,  T1.age FROM student AS T1 WHERE T1.last_name  =  'Smith'"}
{"question": "How many hours does it take to do a task?", "query": "SELECT T1.hours FROM Tasks AS T1 JOIN Tasks_Performed AS T2 ON T1.id  = T2.id WHERE T2.task_id  =  '1'"}
{"question": "Show the names of the customers of each store with the most number of customers", "query": "SELECT store_name,  count(*) AS customers FROM store_customers GROUP BY store_name ORDER BY customers DESC"}
{"question": "What is the id and name of the student with the highest number of assessment notes?", "query": "SELECT T1.id,  T1.name FROM Student_notes AS T1 JOIN Student_notes AS T2 ON T1.student_id  =  T2.student_id WHERE T1.id  =  (SELECT MAX(id) FROM Student_notes) AND T2.id  =  (SELECT MIN(id) FROM Student_notes);"}
{"question": "Find the names of all the cities with population less than 1000", "query": "SELECT T1.city_name FROM city AS T1 WHERE T1.population  <  1000"}
{"question": "What are the names, and addresses of the buildings named after \"Herman Miller\"?", "query": "SELECT T1.name,  T2.address FROM building AS T1 JOIN building_name AS T2 ON T1.building_id  =  T2.building_id WHERE T2.name  =  \"Herman Miller\""}
{"question": "How many students in a particular university have made the Dean's list for the current academic year?", "query": "SELECT T1.student_id,  T1.name_first,  'Dean's List' AS status FROM student AS T1 JOIN student_dean_list AS T2 ON T1.student_id  =  T2.student_id WHERE T2.year  =  '2009' AND T2.status  =  'yes'"}
{"question": "What is the average score for students in the class'math'?", "query": "SELECT AVG(score) FROM class_math;"}
{"question": "How many of the people from the same country are in the United States?", "query": "SELECT DISTINCT country FROM people WHERE country  =  'United Kingdom'"}
{"question": "What is the average number of children per family?", "query": "SELECT AVG(T1.children) FROM family AS T1"}
{"question": "What is the average weight of all the products that are in the product subcategory of \"Beverages\"?", "query": "SELECT AVG(Weight) FROM products WHERE product_subcategory  =  \"Beverages\""}
{"question": "Show the names of the products that were not available for sale until the year of 2010", "query": "SELECT T2.Product_Name,  T2.Product_Price FROM Products AS T1 JOIN Products_Prices AS T2 ON T1.Product_id  =  T2.Product_id WHERE T1.Product_id  NOT IN (SELECT T3.Product_id FROM Products_Prices AS T3 WHERE T3.Product_id  =  \"T1.Product_id\")"}
{"question": "What is the difference between a book and magazine?", "query": "SELECT T1.description FROM product_categories AS T1 JOIN product_categories AS T2 ON T1.parent_id  =  T2.id WHERE T1.id  =  \"book\" AND T2.id  =  \"magazine\""}
{"question": "Find the names of customers who have at most two orders in 2009", "query": "SELECT T1.customer_id,  T1.customer_name,  T1.customer_address,  T1.customer_city,  T1.customer_state,  T1.customer_zip,  T1.customer_phone,  T1.customer_email,  T1.customer_type_code,  T1.customer_credit_limit,  T1.customer_balance,  T1.customer_status,  T1.customer_date_added,  T1.customer_last_login,  T1.customer_first_"}
{"question": "The average number of daily visitors to the average number of users", "query": "SELECT AVG(visits),  AVG(users) FROM (SELECT AVG(visits), AVG(users) FROM (SELECT COUNT(*) AS visits,  COUNT(*) AS users FROM visitors) AS T1 GROUP BY 1) AS T2"}
{"question": "What's the name of the book with the author id of \"B-5\" and the title of \"The Hunger Games\"?", "query": "SELECT name FROM book WHERE author_id  =  \"B-5\" AND title  =  \"The Hunger Games\""}
{"question": "What is the number and name of the most popular products?", "query": "SELECT T1.product_name,  T1.product_id,  count(*) FROM product AS T1 GROUP BY T1.product_id HAVING count(T1.product_id)  =  max(T1.product_id);"}
{"question": "Find the names of all the movies not reviewed by Chris Jackson", "query": "SELECT T1.title FROM Movie AS T1 JOIN Reviewer AS T2 ON T1.movie_id  =  T2.[movie_id] WHERE T2.name  =  \"Chris Jackson\""}
{"question": "What are the scores of the last 50 students in the class?", "query": "SELECT T1.student_id,  T2.score FROM students AS T1 JOIN scores AS T2 ON T1.id  =  T2.id ORDER BY T1.id DESC LIMIT 50"}
{"question": "(a question about a sql table) Give me a list of distinct product types from your database", "query": "SELECT DISTINCT Product_Type FROM Product"}
{"question": "What is the name and phone number of all users who have a college degree (higher than a bachelors) and have more than one degree?", "query": "SELECT T1.first_name,  T1.last_name,  T1.phone_number FROM users AS T1 JOIN education AS T2 ON T1.user_id  =  T2._id WHERE T2.degree  =  'Bachelor' AND T2.degree_id  =  (SELECT MAX(degree_id) FROM education) AND T2.degree_id >  (SELECT MAX(degree_code) FROM education)"}
{"question": "Find the names of all employees in the office of Y", "query": "SELECT name FROM employees WHERE office_id  =  \"Y\""}
{"question": "How many employees are enrolled in colleges that have student acceptance during tryouts, and in which countries are those colleges?", "query": "SELECT T1.country_name,  T1.city_name,  T1.state_name,  T1.zip_code,  T1.year_of_graduation,  T1.graduation_date,  T1.graduation  FROM students AS T1 JOIN colleges AS T2 ON T1.student_id  =  T2.student_id WHERE T2.acceptance_during_tryouts  =  'Yes' AND T2.country_name  =  'United States' AND T2.city_name  =  'New"}
{"question": "List the names of the departments that have more than one employee", "query": "SELECT T1.dept_name FROM department AS T1 JOIN employee AS T2 ON T1.dept_id  =  T2.dept_id WHERE T2.num_of_employees > 1"}
{"question": "Show the name of the departments that have at least two employees", "query": "SELECT T1.name FROM departments AS T1 JOIN employees AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.name HAVING count(*) > 1"}
{"question": "Find the name of the person that is the youngest in the class", "query": "SELECT T1.student_name FROM student AS T1 WHERE T1.age  =  \"Youngest\""}
{"question": "What is the number of documents in the database?", "query": "SELECT count(*)  FROM documents;"}
{"question": "What are the types or countries of competitions?", "query": "SELECT DISTINCT country FROM competitions"}
{"question": "What is the average age of customers who have purchased more than one car?", "query": "SELECT AVG(age) FROM Customer WHERE Customer.cust_id  =  (SELECT Customer.cust_id FROM Customer WHERE Customer.custid  =  (SELECT Customer_id FROM Customer_Car WHERE Customer_Car.cust_id  = Customer.cust_id))"}
{"question": "What is the number and percent of students who are enrolled in each college?", "query": "SELECT T1.college_id,  T2.percentage FROM College AS T1 JOIN Student_Course AS T2 ON T1.id  = T2.college_id WHERE T2.student_id  =  '1'"}
{"question": "What are the names in alphabetical order of the products from the supplier with id 2?", "query": "SELECT T1.product_name FROM supplier AS T1 JOIN products AS T2 ON T1.supplier_id  =  T2._id WHERE T2.id  =  2"}
{"question": "How many students are there in the colleges with the average population?", "query": "SELECT T1.student_id,  T1.student_name,  T1.student_age,  T1.student_gender,  T1.student_college_id,  T1.address_type_code,  T1.city,  T1.state,  T1.country,  T1.zip_code,  T1.phone_number,  T1.email_address,  T1.student_status,  T1.student_major,  T1.student_year,  T1.student_grade,"}
{"question": "What is the average age of all employees of the company?", "query": "SELECT AVG(age) FROM employee"}
{"question": "What are the types and id for the first four customers' vehicles?", "query": "SELECT T1.type,  T1.id FROM customer AS T1 WHERE T1.id  =  1"}
{"question": "What are the names with id more than 95, and have been reviewed by Brittany Harris at least once?", "query": "SELECT name FROM track AS T1 JOIN review AS T2 ON T1.track_id  =  T2._id WHERE T2.name  =  \"Brittany Harris\" AND T2.reviewer_id  =  \"1\""}
{"question": "How many countries in the world have the same capital as the USA?", "query": "SELECT DISTINCT Country FROM country_name WHERE capital = \"Washington, DC\""}
{"question": "What are the names and id of all documents with 'Bird' in their titles?", "query": "SELECT T1.title,  T1.id FROM document AS T1 WHERE T1.title  =  \"Bird\""}
{"question": "What is the name and gender of the youngest person living in the USA?", "query": "SELECT T1.name,  T1.gender FROM people AS T1 WHERE T1.age  =  (SELECT min(age) AS min_age FROM people WHERE job  =  'person')"}
{"question": "What is the average grade point of students with the last name Smith? Find the average score from table grades", "query": "SELECT AVG(grade) FROM grades WHERE last_name  =  'Smith'"}
{"question": "List the names and ids of all the customers who live in the state of \"NY\"", "query": "SELECT T1.Customer_id,  T1.Customer_name FROM Customers AS T1 WHERE T1.State  =  \"NY\""}
{"question": "What are the titles and stars of the movies that are not available in the video shop?", "query": "SELECT T1.title,  T1.star_rating FROM movies AS T1 JOIN movies_ratings AS T2 ON T1.movie_id  =  T2.movie_id WHERE T2.rating  =  \"0\" AND T2.title  =  \"The\""}
{"question": "What is the id, first name, age and birthplace of the first man ever to be elected to the Senate?", "query": "SELECT T1.id,  T1.first_name,  T1.age,  T1.birthplace FROM person AS T1 WHERE T1.first_name  =  \"John\""}
{"question": "What are the names, ages and surnames of the students with the highest test scores?", "query": "SELECT T1.name,  T1.age,  T1.surname FROM student AS T1 WHERE T1.test_score  =  (SELECT T2.test_score FROM student AS T2 WHERE T2.id  =  (SELECT T3.id FROM student AS T3 WHERE T3.id  =  T1.id))"}
{"question": "What are the names, dates and phone numbers of all the employees that are under 25?", "query": "SELECT T1.name,  T1.date_of_birth,  T1.phone_number FROM employees AS T1 WHERE T1.age  <  25"}
{"question": "(Find the average height and weight for all females (sex is F), find the average height and weight for all students and find the average height and weight for", "query": "(Find the average height and weight of all females (sex is F),"}
{"question": "How many times was the name of the first author changed?", "query": "SELECT T1.name,  T1.[first_name],  T1.[last_name] FROM authors AS T1 WHERE T1.name  =  \"John Doe\" AND T1.first_name  =  \"John\" AND T1.last_name  =  \"Doe\""}
{"question": "What is the average score of the students?", "query": "SELECT AVG(score) FROM student"}
{"question": "(a question about a sql table) Find the names and counts of all the items in the catalog", "query": "SELECT T1.item_name,  T2.count FROM catalog AS T1 JOIN items AS T2 ON T1.item_id  =  T2.item_id"}
{"question": "What are all the cities of the state that have population over one million?", "query": "SELECT city FROM state WHERE population  >  1000000"}
{"question": "What is the average height of the members in each class?", "query": "SELECT AVG(height) FROM students WHERE class_id  =  (SELECT class_id FROM classes WHERE name  =  \"Math\")"}
{"question": "What are the ages of the students in the class of 2008?", "query": "SELECT T1.age FROM student AS T1 WHERE T1.year  =  2008"}
{"question": "What are the names for the two artists that have not participated in a recording session?", "query": "SELECT T1.name FROM artist AS T1 WHERE NOT EXISTS (SELECT T2.name FROM recording_session AS T2 WHERE T2.artist_id  =  T1.artist_id)"}
{"question": "(a question about a sql table) What are the names of players who trained between 500 and 1500 hours?", "query": "SELECT T1.name FROM player AS T1 JOIN training_record AS T2 ON T1.player_id  =  T2.player_id WHERE T2.hours_trained  >  500 AND T2.hours_trained  <  1500"}
{"question": "What are the IDs, names and genders of the Architects who built two bridges or one mill", "query": "SELECT T1.id,  T1.name,  T2.gender FROM architects AS T1 JOIN buildings AS T2 ON T1.architect_id  =  T2.architect_id WHERE T1.name  = \"John Doe\" OR T1.name  =  'John Doe' OR T1.name  = \"Jane Doe\" OR T1.name = \"John Doe\" OR T1.name = \"John Doe\" OR (T1.name  =  'Jane Doe' AND T1.gender  =  'female') OR (T1."}
{"question": "What are the names, ranks, and the number of students in each university?", "query": "SELECT T1.university_name,  T1.rank,  T1.student_count FROM university AS T1 JOIN student_university AS T2 ON T1.university_id  =  T2.[university_id]"}
{"question": "How many students are there in the college that has the smallest enrollment?", "query": "SELECT count(*)  FROM student WHERE college_id  =  \"1\""}
{"question": "Which aircrafts did not fly in any training course?", "query": "SELECT aircraft_id FROM aircrafts WHERE aircraft_id NOT IN (SELECT aircraft_id FROM training_courses)"}
{"question": "Find the number of doctors in the hospital with title of Chief of Surgery", "query": "SELECT count(*)  FROM doctor AS T1 WHERE T1.title  =  \"Chief of Surgery\""}
{"question": "What are the names and locations of the cities on the continent of Antarctica?", "query": "SELECT T1.city_name,  T2.country_name FROM continent AS T1 JOIN country AS T2 ON T1.country_id  =  T2.country_id WHERE T1.continent_id  =  'Antarctica'"}
{"question": "What is the name of the company that produces the most number of products?", "query": "SELECT count(*) AS count FROM products WHERE company_name  =  \"Apple\""}
{"question": "What is the name and position of the person who has the most number of followers?", "query": "SELECT T1.name,  T1.position FROM followers AS T1 WHERE T1.user_id  =  (SELECT user_id FROM users AS T2 WHERE T2.name  =  \"Billy\")"}
{"question": "What are the names, ages, and professions of each player with the same surname?", "query": "SELECT T1.name,  T1.age,  T1.job FROM player AS T1 WHERE T1.surname  =  \"Smith\""}
{"question": "What is the name in the name of the city that is a famous singer?", "query": "SELECT name FROM city WHERE name LIKE '%singer%'"}
{"question": "What are the names and ids of all customers with at least 2 accounts", "query": "SELECT T1.name,  T1.id FROM customers AS T1 JOIN Accounts AS T2 ON T1.id  =  T2.account_id GROUP BY T1.name HAVING count(*)  =  2"}
{"question": "Which player has the greatest number of points in the season?", "query": "SELECT MAX(points) FROM player_stats"}
{"question": "What is the name and age of the two people that have the same birthday?", "query": "SELECT T1.Name,  T1.age FROM Person AS T1 WHERE T1.birthday  =  (SELECT T2.birthday FROM Person AS T2 WHERE T2.age  =  T1.age)"}
{"question": "Find the number of passengers who had a flight at 8 o'clock", "query": "SELECT T1.flight_time,  T1.passenger_count FROM flight AS T1 JOIN passengers AS T2 ON T1.flight_id  =  T2.flight_id WHERE T1.flight_time  =  \"8:00\""}
{"question": "What are the names, addresses, and phone numbers of all graduates from 'B' University?", "query": "SELECT T1.firstname,  T1.lastname,  T1.address,  T1.phone FROM graduates AS T1 WHERE T1.graduation_year  =  'B'"}
{"question": "What are the names, ids, and types of the customers who have more than 1 car?", "query": "SELECT T1.customer_id,  T1.name,  T1.type FROM customer AS T1 WHERE T1.customer_id  IN (SELECT T2.customer_id FROM customer AS T2 JOIN car AS T3 ON T2.customer_id  =  T3.customer_id WHERE T3.type  =  'car' AND T3.type  =  T1.type)"}
{"question": "What are the names, first names, and birthdays of all current students with a last name that contains \"O'Connor\"?", "query": "SELECT T1.name,  T1.first_name,  T1.birthday FROM students AS T1 WHERE T1.last_name  LIKE '%O'Connor%'"}
{"question": "What is the average age of all people?", "query": "SELECT AVG(T1.Age) FROM person AS T1;"}
{"question": "Which is the largest city?", "query": "SELECT City FROM City ORDER BY count(*) DESC"}
{"question": "How many times has the customer \"Mallorca\" made an order?", "query": "SELECT count(*)  FROM orders AS T1 WHERE T1.customer_id  =  \"Mallorca\""}
{"question": "What is the id of the student who has a sister with the name \"Alice\"?", "query": "SELECT T1.student_id FROM student AS T1 JOIN student_siblings AS T2 ON T1.student_id  =  T2.student_id WHERE T2.sibling_name  =  \"Alice\""}
{"question": "What is the name of the company in which the author works?", "query": "SELECT T1.name FROM author AS T1 WHERE T1.company_id  =  \"1\""}
{"question": "(a novel question, about a table with the same number of rows as the original question, so that rows in the original question and the novel question are the", "query": "SELECT DISTINCT T1.type FROM T1 JOIN T2 ON T1.type  =  T2.type"}
{"question": "Find the names of doctors who are also professors", "query": "SELECT T1.name FROM doctor AS T1 JOIN professor AS T2 ON T1.prof_id  =  T2.id WHERE T2.prof_id  =  '1'"}
{"question": "What is the name, gender, and address of all employees who work in the IT department?", "query": "SELECT T1.first_name,  T1.last_name,  T1.address FROM Employees AS T1 JOIN Employee_Address AS T2 ON T1.employee_id  =  T2.employee_id WHERE T1.department_id  =  'IT'"}
{"question": "What are the names for each level of a company?", "query": "SELECT T1.name FROM company AS T1 JOIN level_of_company AS T2 ON T1.company_id  =  T2.[level_of_company_id]"}
{"question": "What is the name and phone number of the assistant store manager of the store with name \"Apple\"?", "query": "SELECT T1.first_name,  T1.last_name,  T1.phone_number FROM employee AS T1 JOIN store AS T2 ON T1.store_id  =  T2._id WHERE T2.name  = \"Apple\" AND T1.type  =  \"assistant store manager\""}
{"question": "Which document type is in?", "query": "SELECT T1.document_type FROM document_types AS T1 WHERE T1.name  =  \"document_type\""}
{"question": "What are the first names, genders and ages of the students?", "query": "SELECT T1.fname,  T1.lname,  T2.age FROM student AS T1 JOIN student_info AS T2 ON T1.student_id  =  T2.student_id"}
{"question": "What are the names and number of students of the first person to receive a degree from the school in the state of California?", "query": "SELECT T1.student_id,  T1.name,  T1.[state] FROM student AS T1 WHERE T1.state  =  'CA' AND T1.student_id  =  (SELECT T2.student_id FROM student AS T2 WHERE T2.state  =  'CA')"}
{"question": "How many students are there in the class of 2006?", "query": "SELECT count(*) AS total FROM student WHERE year  =  2006"}
{"question": "What are the states of the colleges who play in the championship?", "query": "SELECT T1.state FROM colleges AS T1 WHERE T1.name  =  \"University of Phoenix\""}
{"question": "Find the name, year, and place of birth of every person named \"Karl\"", "query": "SELECT T1.name,  T1.year,  T1.place_of_birth FROM people AS T1 WHERE T1.name  =  \"Karl\""}
{"question": "What are the names in descending order of age of students without any friends?", "query": "SELECT T1.student_name FROM student AS T1 JOIN student_friend AS T2 ON T1.id  = T2.student_id WHERE T2.student_id IS NULL ORDER BY T1.age DESC"}
{"question": "- Find the number of distinct departments of the college where Zack is attending", "query": "SELECT count(*)  FROM department WHERE department_name  =  \"Zack\""}
{"question": "What is the highest degree of education of the person who has the highest number of orders?", "query": "SELECT T1.degree_of_education FROM people AS T1 JOIN orders AS T2 ON T1.person_id  =  T2_id WHERE T2.number_of_orders  =  (SELECT MAX(number_of_orders) FROM orders)"}
{"question": "(about a different table), after \"", "query": "Examples of some or all task item:"}
{"question": "What are the names, location and email of the faculty members who participated in some activities, together with the number of activities", "query": "SELECT T1.name,  T2.location,  T3.email,  T4.activity_id FROM faculty AS T1 JOIN activity AS T2 ON T1.id  =  T2.id AND T2.activity_type  =  'course' AND T2.activity_id  =  '1' JOIN activity AS T3 ON T1.id  = T3.id AND T3.activity_type  = 'student' AND T3.activity_id  =  T4.id AND T4.activity_type  ="}
{"question": "What is the name or id of the car for the customer with id 25?", "query": "SELECT name FROM car WHERE customer_id  =  25"}
{"question": "(a question about a sql table) What is the average number of hours of study for students who scored more than 90?", "query": "SELECT AVG(Hours) FROM Student_Score WHERE Score > 90"}
{"question": "What is the name of the city that has the most schools and colleges?", "query": "SELECT T1.city_name FROM city AS T1 JOIN school AS T2 ON T1.city_id  =  T2.city_id JOIN college AS T3 ON T1.city_id = T3.city_id WHERE T3.school_id  =  T2  AND T2.college_id  =  T3  AND T3.school_id  >  0"}
{"question": "Show the names of all airports that have the word \"London\" in their name", "query": "SELECT airport_name FROM airports WHERE airport_name LIKE \"%London%\""}
{"question": "What is the first name of the second wife of the president?", "query": "SELECT T1.name FROM president AS T1 JOIN wife AS T2 ON T1.id  =  T2.husband_id WHERE T2.id  =  2"}
{"question": "What are the names, average salary, and number of employees in each department?", "query": "SELECT T1.department_name,  T2.salary,  T3.count(*) FROM department AS T1 JOIN employee AS T2 ON T1.department_id  =  T2.department_id JOIN employee_department AS T3 ON T2.employee_id  =  T3.employee_id GROUP BY T1.department_id"}
{"question": "What is the title of the movie for which the director is \"Michael Bay\" and the actor is \"Matthew Broderick\"?", "query": "SELECT title FROM movie WHERE director = \"Michael Bay\" AND actor = \"Matthew Broderick\""}
{"question": "Which university has the most number of students who have done a PhD?", "query": "SELECT T1.university_name,  T1.total_students FROM universities AS T1 JOIN students AS T2 ON T1.university_id  =  T2.university_id WHERE T2.degree_code  =  \"PhD\""}
{"question": "Find the first names of the employees who are from the city with the smallest population", "query": "SELECT T1.firstname FROM employee AS T1 JOIN city AS T2 ON T1.city_id  =  T2.city_id WHERE T2.population  =  \"smallest\""}
{"question": "What is the name and id of the student who has the highest average grade?", "query": "SELECT T1.id,  T1.name FROM student AS T1 JOIN grades AS T2 ON T1.id  =  T2.id WHERE T2.grade  =  (SELECT max(grade) FROM grades)"}
{"question": "What are the names, ids and salaries for employees who got a raise in the last year", "query": "SELECT T1.name,  T1.id,  T1.salary FROM employees AS T1 JOIN raise AS T2 ON T1.id  =  T2.employee_id WHERE T2.year  =  \"2011\""}
{"question": "What are the names, ids, and salaries of all the employees?", "query": "SELECT T1.employee_id,  T1.name,  T1. salary FROM employee AS T1 JOIN employee_salary AS T2 ON T1.employee_id  =  T2. employee_id GROUP BY T1.employee_id ORDER BY T1.salary DESC"}
{"question": "Find the names of customers who have used the credit card but not the debit card", "query": "SELECT T1.name FROM customer AS T1 JOIN credit_card AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.debit_card_id  =  0"}
{"question": "What are the names, titles, and the year of birth of all the professors at the university?", "query": "SELECT T1.name,  T1.title,  T1.year_of_birth FROM professors AS T1"}
{"question": "(a novel question, about a table from which the column names are known), after \"generate:\"", "query": "(the sql query to answer the query)"}
{"question": "What are the names and ages of all students who are planning to take next year's courses?", "query": "SELECT T1.student_name,  T2.student_age FROM student AS T1 JOIN student_course_enrolment AS T2 ON T2.student_id  =  'T1.student_id'"}
{"question": "Find the names of states that have a college in each state", "query": "SELECT T1.state_name,  T1.college_name FROM state AS T1 JOIN college AS T2 ON T1.state_id  =  T2.state_id"}
{"question": "Find the names of the customers who made the most deposits in 2010 and have a credit score of less than 100", "query": "SELECT T1.customer_first_name, T1.customer_last_name, T1.customer.credit_score FROM customers AS T1 JOIN deposits AS T2 ON T1.Customer_ID  =  T2.Customer_ID WHERE T2.year  =  2010 AND T2.credit_score  <  100"}
{"question": "What are the maximum and minimum of all numbers?", "query": "SELECT MAX(a) AS max, MIN(a) AS min FROM numbers;"}
{"question": "What are the names, ordered by number of seats, of the football teams that have used a different captain every year since 2004?", "query": "SELECT T1.name,  T2.captain FROM team AS T1 JOIN captain AS T2 ON T1.id  =  T2.id WHERE T1.year  =  2004 AND T2.id  =  NULL ORDER BY T1.number_of_seats"}
{"question": "Show all the first names of students of the first class of the first year of a given course", "query": "SELECT name FROM student WHERE student_id  =  \"1\" AND class_code  =  \"1\" AND year  =  \"1\""}
{"question": "(a question about a sql table) What are the names of the coaches of the girls' volleyball team?", "query": "SELECT T1.coach_id,  T1.name_first,  'Girls' AS team FROM coach AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id WHERE T1.team_id  IN (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,"}
{"question": "Is there life on Mars?", "query": "SELECT T1.is_life_on_mars FROM T1"}
{"question": "What are the ids for all doctors who are in charge of patients in the hospital?", "query": "SELECT T1.doctor_id FROM doctors AS T1 WHERE T1.hospital_id  =  \"1\""}
{"question": "What are the names and ages of the accountants at the company in which you work?", "query": "SELECT T1.name,  T1.age FROM employee AS T1 JOIN accountant AS T2 ON T1.id  =  T2.emp_id"}
{"question": "What is the title and number of students with a first name that is a palindrome?", "query": "SELECT T1.first_name,  T1.last_name,  T1.id FROM Student AS T1 JOIN Student_Info AS T2 ON T1.id  = T2.student_id WHERE T1.first_name  =  T2.first_name AND T1.last_name  =  T2.\"last_name\" AND T1.first_name  LIKE  \"%\" + T2.first_name + \"%\""}
{"question": "find the customer name from the customer id", "query": "SELECT customer_id,  customer_name FROM customer"}
{"question": "How many students are there in the state with the highest population?", "query": "SELECT T1.state_name,  T1.population FROM states AS T1 JOIN students AS T2 ON T1.state_id  =  T2.state_id WHERE T2.state_id  =  (SELECT state_id FROM states WHERE population  =  (SELECT max(population) FROM states))"}
{"question": "List the names and salaries of all employees who are in the data science department", "query": "SELECT T1.firstname,  T1.lastname,  T1.salary FROM employee AS T1 JOIN department AS T2 ON T1.department_id  =  T2.department_id WHERE T2.name  = \"data science\""}
{"question": "Are there any students who are not in any departments other than the two departments of Engineering?", "query": "SELECT T1.stuid,  T1.department_id,  T1.name,  T1.gender,  T1.age,  T1.address,  T1.city,  T1.state,  T1.zipcode,  T1.phone,  T1.email,  T1.major,  T1.year,  T1.credits,  T1.major_code,  T1.minor_code,  T1.degree_level,  T1.degree_year,  T1.degree_"}
{"question": "Find the names of all employees in descending order of salary", "query": "SELECT name FROM employees ORDER BY salary DESC"}
{"question": "What is the average price of the cheapest car?", "query": "SELECT AVG(price) FROM car WHERE price  <  1000"}
{"question": "What movies have a title containing the letter \"A\"?", "query": "SELECT T1.title FROM Movie AS T1 WHERE T1.title LIKE '%A%';"}
{"question": "What are the names and addresses of the students who live in the city of Peking?", "query": "SELECT T1.name,  T1.address FROM students AS T1 WHERE T1.city  =  \"Peking\""}
{"question": "List the names of the cities where the two largest airports are", "query": "SELECT city_name FROM airports WHERE city_id  IN (SELECT city_id FROM cities WHERE city_name  =  \"New York\") AND city_id  IN (SELECT  city_id FROM cities WHERE city_id  =  \"Chicago\")"}
{"question": "What are the names (firstname) of all students who have not attended any classes for the past three months?", "query": "SELECT T1.first_name FROM student AS T1 WHERE T1.attendance_date  =  '0000-00-00'"}
{"question": "What are the names for the cars?", "query": "SELECT name FROM car"}
{"question": "What are the names, ages, and genders of the students in your school?", "query": "SELECT T1.name,  T1.age,  T1.gender FROM students AS T1 WHERE T1.school_id  =  \"1\""}
{"question": "What are all the types of music?", "query": "SELECT T1.type FROM music AS T1 JOIN type AS T2 ON T1.type_id  =  T2.type_id"}
{"question": "Find the ids of problems reported after 2009-06-26", "query": "SELECT T1.id FROM problems AS T1 WHERE T1.reported_date  >  '2009-06-26'"}
{"question": "What are the names, type and numbers of the computers in the office of the manager?", "query": "SELECT T1.name,  T1.type,  T1.number FROM computers AS T1 WHERE T1.manager_id  =  \"null\""}
{"question": "What are the names (or descriptions) of the products that can be found in the catalog with the most number of entries?", "query": "SELECT product_name FROM catalog GROUP BY product_name HAVING count(*)  =  max(count(*));"}
{"question": "What are the names, prices and ratings of all the restaurants in the center of town?", "query": "SELECT T1.name,  T1.\"price\",  T1.rating FROM restaurant AS T1 WHERE T1.city  =  \"Center of town\""}
{"question": "What are the names, and birth dates, of all students who went to a school with the code \"MSCC\"", "query": "SELECT T1.name,  T1.birth_date FROM students AS T1 WHERE T1.school_code  =  \"MSCC\""}
{"question": "What is the maximum average height of all the students?", "query": "SELECT max(T1.height),  avg(T1.height) FROM Student AS T1"}
{"question": "What are the names with the same first name?", "query": "SELECT name FROM Person GROUP BY name HAVING COUNT(*)  =  1"}
{"question": "How many times was the score of the soccer team \"Wycombe Wanderers\" less than its goal difference?", "query": "SELECT T1.score,  T1.goal_difference FROM Team AS T1 WHERE T1.team_name  =  \"Wycombe Wanderers\" AND T1.score  <  T1.goal_difference"}
{"question": "What are the students' names?", "query": "SELECT T1.Fname,  T1.Lname FROM Students AS T1 WHERE T1.Fname  =  \"John\" AND T1.Lname  =  \"Smith\""}
{"question": "What are the courses that have more than three students", "query": "SELECT T1.course_id,  COUNT(*) FROM course AS T1 JOIN students AS T2 ON T1.id  =  T2.id GROUP BY T1.course_id HAVING COUNT(*) > 3"}
{"question": "What are the names, last names and ids of all students in the university?", "query": "SELECT T1.name,  T1.last_name,  T1.id FROM students AS T1 WHERE T1.id  IN (SELECT T2.id FROM students AS T2 WHERE T2.id  IN (SELECT T3.id FROM students AS T3 WHERE T3.id  IN (SELECT T4.id FROM students AS T4 WHERE T4.id  IN (SELECT T5.id FROM students AS T5 WHERE T5.id  IN (SELECT T6.id FROM students AS T6 WHERE T6.id  IN (SELECT T7.id FROM"}
{"question": "What are the names, last name, and id of the players with the most all star game experiences in football?", "query": "SELECT T1.player_id,  T1.name_first,  count(*) FROM player AS T1 JOIN player AS T2 ON T1.team_id  =  T2.player_id WHERE T1.player_id !=  T2.player_id AND T1.player_id  IN (SELECT player_id FROM player_award WHERE player_id  =  T1.player_id) AND T1.player_id!= 0 GROUP BY T1.player_i"}
{"question": "What are the names, addresses, and phone numbers of the people who live in house #2?", "query": "SELECT T1.name,  T1. address,  T1.phone_number FROM people AS T1 JOIN house_details AS T2 ON T1.person_id  =  T2. person_id WHERE T2.house_id  =  2"}
{"question": "What are the ids and names of products with a price lower than 6000 or higher than 9000?", "query": "SELECT T1.product_id,  T1.product_name,  T1.price FROM products AS T1 WHERE T1.price  <  6000 OR T1.price  >  9000"}
{"question": "Find the names of customers with accounts, the number of checking accounts of each customer and the total number of checking accounts", "query": "SELECT T1.cust_id,  T1.name,  T1.account_id,  T1.account_type,  T1.account_number,  T1.account_balance,  T1.account_status,  T1.account_debit,  T1.account_credit,  T1.account_date,  T1.account_amount,  T1.account_transaction_id,  T1.credit_limit,  T1.credit_used,  T1.credit_available,  T1.credit_"}
{"question": "What is the name and salary of employees who are involved in several departments?", "query": "SELECT T1.first_name,  T1.last_name,  T1.salary FROM Employees AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.\"department_id\" WHERE T1.department_id IN (SELECT T3.department_id FROM Departments AS T3 WHERE T3.department_name  =  \"IT\")"}
{"question": "What are the cities where no one has a passport?", "query": "SELECT DISTINCT City FROM City WHERE City  NOT IN (SELECT City FROM Passport)"}
{"question": "What are the names, locations, and ages of the members in the club \"The Club\"", "query": "SELECT T1.name, T1.location, T1.age FROM members AS T1 WHERE T1.club_id  =  \"The Club\""}
{"question": "Find the names of all books with the word \"The\" in their titles", "query": "SELECT T1.book_title FROM book AS T1 WHERE T1.book_title LIKE '%The%'"}
{"question": "What are the names, ages, and nationalities of the players who competed in the 2006 Olympics?", "query": "SELECT T1.name,  T1.age,  T1.nationality FROM player AS T1 WHERE T1.year  =  2006"}
{"question": "What is the average age of students who took a course in the subject of \"Hackers' Paradise\"?", "query": "SELECT AVG(age) FROM student WHERE subject = \"Hackers' Paradise\""}
{"question": "Show the name of the university in which the most students are studying computer science", "query": "SELECT T1.name FROM university AS T1 JOIN student AS T2 ON T1.university_id  =  T2.university_id WHERE T2.major  =  \"Computer Science\""}
{"question": "What are the three types of companies that have a large number of patents?", "query": "SELECT DISTINCT T1.type FROM companies AS T1 JOIN patents AS T2 ON T1.company_id  =  T2.[company_id] GROUP BY T1.type"}
{"question": "What is the average number of times that the vehicle was driven in the last week?", "query": "SELECT AVG(Driven_Times) FROM Vehicle_Driven_Times"}
{"question": "What is the number of years since the launch of Facebook", "query": "SELECT YEAR(date_from) FROM Events WHERE date_from  >  '2010-01-01'"}
{"question": "How many students are older than 50 and younger than 60, in total?", "query": "SELECT T1.age FROM students AS T1 WHERE T1.age  >  50 AND T1.age  <  60"}
{"question": "What is the name and type of each record in the table \"Fruits\"?", "query": "SELECT T1.name,  T1.type FROM Fruits AS T1;"}
{"question": "What is the first name of the person that has a first name like \"Clyde\" and a last name like \"Harper\"?", "query": "SELECT name FROM Person WHERE name LIKE '%Clyde%' AND name LIKE '%Harper%'"}
{"question": "How many distinct types are there?", "query": "SELECT DISTINCT type FROM table"}
{"question": "(list of questions)", "query": "(the sql query to answer the questions)"}
{"question": "What are the names, and prices, for all products in which the country of origin is listed as \"CZ\"?", "query": "SELECT product_name,  price FROM products WHERE country_of_origin  =  \"CZ\""}
{"question": "List the names of all employees who receive gifts", "query": "SELECT T1.employee_name FROM Employee AS T1 JOIN Gift_Recipient AS T2 ON T1.employee_id  =  T2.employee_id"}
{"question": "What are the names, locations and opening dates for all restaurants?", "query": "SELECT name,  location,  opening_date FROM restaurants"}
{"question": "Give the names of musicians and their favorite songs", "query": "SELECT T1.name,  T1.favorite_song FROM musicians AS T1 JOIN songs AS T2 ON T1.musician_id  =  T2.[id]"}
{"question": "What are the titles and genres of all movies whose total gross exceeds 50 billion dollars?", "query": "SELECT T1.title,  T1.genre FROM movie AS T1 WHERE T1.total_gross  >  50"}
{"question": "List the names and ages of all the customers who left the store without buying anything", "query": "SELECT T1.customer_id,  T1.name,  T1.age FROM customer AS T1 WHERE T1.name  <>  \"Alice\" AND T1.age  >  \"20\""}
{"question": "How many courses are there with at most one instructor?", "query": "SELECT T1.Course_ID,  T1.Instructor_ID FROM COURSE AS T1 WHERE T1.Instructor_ID  =  (SELECT MIN(T2.Instructor_ID) FROM COURSE AS T2 WHERE T2.Course_ID  =  T1.Course_ID)"}
{"question": "What is the name, age, and address of customer with last name \"Petersen\" and date of birth 17/07/1989?", "query": "SELECT customer_id,  name,  age,  address_id,  date_of_birth FROM customer WHERE last_name  =  \"Petersen\" AND date_of_birth  =  \"17/07/1989\""}
{"question": "What have you learned from this course?", "query": "SELECT T1.question_id,  T1.question_text,  T1.question_type,  T1.question_id,  COUNT(*) AS answer_count,  T1.question_date,  T1.question_time,  T1.question_author,  T1.question_category,  T1.question_tags,  T1.question_correct_answer,  T1.question_wrong_answer,  T1.answer_id,  T1.answer_text,  T1.answer_type,  T"}
{"question": "What is the average age of all the players in the league?", "query": "SELECT AVG(age) FROM player"}
{"question": "How many apples do we have?", "query": "SELECT COUNT(*) FROM apples"}
{"question": "Find the full name and gender of all the students who are over 30 and are not in the Department of Chemistry", "query": "SELECT T1.first_name,  T1.last_name,  T1.gender FROM students AS T1 WHERE T1.age  >  30 AND T1.dept_id  =  \"Chemistry\""}
{"question": "What is the total number of employees at the branch in San Francisco?", "query": "SELECT count(*) AS total_number_of_employees FROM employees AS T1 JOIN branches AS T2 ON T1.branch_id  =  T2.branch_id WHERE T2.city  =  \"San Francisco\""}
{"question": "Find the last name of the student who had the most number of assessment notes", "query": "SELECT T1.last_name FROM student AS T1 JOIN assessment_notes AS T2 ON T1.student_id  =  T2._id WHERE T2.count  =  \"last_name\""}
{"question": "Show the table and its id", "query": "SELECT * FROM table_name"}
{"question": "What are the names in the table \"customer\" and \"order\" whose ids are less than 15000 and greater than 15000, sorted by id?", "query": "SELECT T1.name FROM customer AS T1 JOIN order AS T2 ON T1.ID  =  T2.customerid WHERE T2.id  <  15000 AND T2.id  >  15000"}
{"question": "What are the names, first names and ages of all students?", "query": "SELECT T1.name,  T1.first_name,  T1.age FROM student AS T1"}
{"question": "What are the names and phone numbers of all customers who visited on December 29?", "query": "SELECT T1.Name,  T1.Phone FROM customer AS T1 JOIN visit_history AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.Date_Visit  =  \"2009-12-29\""}
{"question": "What are the names, locations and number of employees of the company in the table \"Company\"", "query": "SELECT T1.name,  T1.\"location\",  T1.num_employees FROM Company AS T1"}
{"question": "What is the average age of members of the museum that was founded in 1854?", "query": "SELECT AVG(age) FROM members WHERE year  =  1854"}
{"question": "What is the name and id of the company that was founded in 1878 (the year in which the company was founded)?", "query": "SELECT T1.company_name,  T1.company_id FROM company AS T1 WHERE T1.founded_year  =  1878"}
{"question": "Show me the name of all the authors who have written a book about a subject titled \"Computer Science\" in the U", "query": "SELECT T1.author_name FROM book AS T1 JOIN book_subject AS T2 ON T1.book_id  =  T2.book_id WHERE T2.subject_id  =  \"Computer Science\""}
{"question": "What are the id and name of the staff who has the most number of students attending?", "query": "SELECT T1.id,  T1.name FROM staff AS T1 JOIN students AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.student_id  =  (SELECT T3.student_id FROM students AS T3 WHERE T3.name  =  \"John Smith\")"}
{"question": "What is the name of the artist who made 'Bobby Brown' and 'What's Going on'?", "query": "SELECT T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_id  =  T2.artist_id WHERE T2.song_name  =  \"Bobby Brown\" AND T2.song_name  like  \"What's Going on\""}
{"question": "What is the name and id of the professor with the most enrollments in Computer Science?", "query": "SELECT T1.name,  T1.id FROM professor AS T1 JOIN enrollments AS T2 ON T1.id  =  T2.professor_id WHERE T2.course_id  =  'CS'"}
{"question": "What are the names, genders and ages of all singers in the band \"Karaoke\"?", "query": "SELECT name,  gender,  age FROM singer WHERE band_name  =  \"Karaoke\""}
{"question": "What are the first names and last names of students in the order of their id?", "query": "SELECT T1.student_id,  T1.name_first,  'T1.name_last' FROM student AS T1 ORDER BY T1.student_id"}
{"question": "What is the total revenue of all products sold by the company \"Samsung\"?", "query": "SELECT SUM(T1.total_revenue) FROM product_sales AS T1 WHERE T1.product_id  =  \"Samsung\""}
{"question": "What is the product id of the product whose detail contains the word \"LatteOrCappuccinoOrCoffeeMaker\"?", "query": "SELECT product_id FROM product_details WHERE product_name LIKE \"%LatteOrCappuccino%\";"}
{"question": "Give the id, name, and position of all directors who are at least 30 years old", "query": "SELECT T1.director_id,  T1.name,  T1.position FROM director AS T1 WHERE T1.age  >=  30"}
{"question": "Find the name of the product with highest sales volume", "query": "SELECT T1.product_name,  T2.price,  T2.quantity,  T2.sales_price,  T2.sales_volume FROM products AS T1 JOIN sales AS T2 ON T1.product_id  =  T2.product_id WHERE T2.sales_volume  =  (SELECT MAX(sales_volume) FROM sales)"}
{"question": "What is the number of documents with a rating of 8?", "query": "SELECT count(*) AS count FROM ratings WHERE rating = 8"}
{"question": "What is the name and age of the student with the highest grades?", "query": "SELECT T1.name,  T1.age FROM students AS T1 JOIN grades AS T2 ON T1.student_id  =  T2"}
{"question": "What is the name and location of the store named \"FJA", "query": "SELECT T1.store_name,  T1.store_address FROM store AS T1 JOIN store_location AS T2 ON T1.store_id  =  T2"}
{"question": "What are the names, ordered by credits, of the students taking a course named \"Mathematics of Finance\"?", "query": "SELECT T1.name,  T2.credits FROM student AS T1 JOIN course AS T2 ON T1.id  =  T2.id WHERE T2.name  =  \"Mathematics of Finance\""}
{"question": "(a question about a sql table) What are the names and addresses of the stores with marketing region code “CA”?", "query": "SELECT name,  address FROM store WHERE marketing_region_code  =  \"CA\""}
{"question": "What are the names, age, and gender of the students in the students with the highest grades?", "query": "SELECT T1.student_name,  T1.student_age,  T1.student_gender FROM students AS T1 JOIN grades AS T2 ON T1.student_id  =  T2.student_id WHERE T2.grade  =  \"A\""}
{"question": "What is the total number of visitors who use the service?", "query": "SELECT COUNT(*) FROM Visitors"}
{"question": "What are the names, birthdays and favorite foods of those students who are in the class of 2009?", "query": "SELECT T1.name,  T1.birthday,  T1.favorite_food FROM students AS T1 WHERE T1.class_id  =  '2009'"}
{"question": "What are the names and ids of the students who are working in a lab?", "query": "SELECT T1.student_id,  T1.name,  T1.id FROM students AS T1 JOIN lab AS T2 ON T1.student_id  =  T2"}
{"question": "What is the weight of the cheapest item in the store?", "query": "SELECT MIN(weight) FROM products WHERE price  <  100"}
{"question": "What is the average age of all customers who bought tickets to the show \"Superheroes\" on the day of the release?", "query": "SELECT T1.age FROM customer AS T1 JOIN ticket_purchases AS T2 ON T1.customer_id  =  T2._id WHERE T2.show_date  =  \"2016-01-01\""}
{"question": "Find the name and address of all the employees in alphabetical order of name", "query": "SELECT T1.name,  T1.address FROM employees AS T1 ORDER BY T1.name ASC"}
{"question": "What are the names with the most points?", "query": "SELECT T1.Name FROM player AS T1 WHERE T1.points  >  (SELECT T2.Name FROM player AS T2 WHERE T2.points  >  T1.Name)"}
{"question": "What is the name of the course taught by John Wilkes Booth?", "query": "SELECT T1.course_name FROM course AS T1 JOIN instructor AS T2 ON T1.id  =  T2.id WHERE T2.name  =  \"John Wilkes Booth\""}
{"question": "Find the total number of people who have been to the course", "query": "SELECT count(*)  FROM course_attendees"}
{"question": "What are the dates and times that all the classes occur, in order from when they start", "query": "SELECT DISTINCT Start_Time,  Start_Date,  End_Time,  End_Date FROM class_schedule"}
{"question": "What are the names in the order of the number of hours played by each player?", "query": "SELECT T1.name FROM Player AS T1 JOIN player_hours AS T2 ON T1.pid  =  T2.pid ORDER BY T2.hours DESC"}
{"question": "Find the name of all the faculty who are in the \"English\" department", "query": "SELECT T1.name FROM faculty AS T1 JOIN department AS T2 ON T1.dept_id  =  T2._id WHERE T2.dept_name  =  \"English\""}
{"question": "(Find the number of projects which each scientist are working on and scientist's name)", "query": "SELECT T1.project_id,  T1.scientist_id,  T1.name FROM project AS T1 JOIN scientist AS T2 ON T1.project_id  =  T2.project_id WHERE T2.scientist_id  =  T1.scientist_id"}
{"question": "What is the name and type of the customer who has a current balance of $1,000,000?", "query": "SELECT T1.customer_name,  T2.type FROM customer_accounts AS T1 JOIN customer_types AS T2 ON T1.type  =  T2.type WHERE T1.current_balance  =  \"$1,000,000\""}
{"question": "What are the names and the first letter of the last names of the employees of \"Amazon\" who are in the sales department?", "query": "SELECT T1.first_name,  T1.last_name FROM employees AS T1 WHERE T1.department  =  \"sales\""}
{"question": "(a question about a sql table) What are the total order quantities of video products?", "query": "SELECT SUM(quantity) FROM order_items WHERE product_id  =  'VHS'"}
{"question": "Find the average credit scores of the customers who have no loan", "query": "SELECT AVG(credit_score) FROM customer WHERE customer_id  =  NULL"}
{"question": "What are the names, genders and IDs of the students with a college GPA over 3", "query": "SELECT name,  gender,  id FROM students WHERE college_gpa  >  3"}
{"question": "(a novel question, about a table with the same name as the original, but with a different meaning), after \"", "query": "Examples of some or all task item:"}
{"question": "What are the ids and names of the departments that have the highest average number of students?", "query": "SELECT T1.dept_name,  T1.avg_students FROM department AS T1 JOIN ( SELECT dept_id,  AVG(stu_id) AS avg_students FROM student AS T2 GROUP BY T2.stu_id ) AS T2 ON T1.stu_id  =  T2.\"avg_students\" GROUP BY T1.deptid"}
{"question": "How many products have the same product id?", "query": "SELECT product_id,  COUNT(*)  FROM products GROUP BY product_id HAVING count(DISTINCT product_id)  >  1"}
{"question": "What is the average number of customers per vehicle?", "query": "SELECT AVG(customer_count) FROM vehicle"}
{"question": "What is the name and grade of the student who scored the lowest in the class?", "query": "SELECT T1.student_id,  T2.name,  T2.grade FROM student AS T1 JOIN student_grade AS T2 ON T1.id  = T2.student_id WHERE T1.id  =  '1' AND T2.grade  =  'F'"}
{"question": "What is the name of the first player to win the first World Series?", "query": "SELECT name FROM Player WHERE Year  =  \"1901\""}
{"question": "Find the names and addresses of all customers who have ever been married", "query": "SELECT T1.customer_first_name, T1.customer_last_name, T1.customer.address_type_code FROM customer AS T1 JOIN customer_addresses AS T2 ON T1.address_type_code  =  T2.address_type_code WHERE T2.customer_id  =  (SELECT customer_id FROM customer_addresses WHERE customer_id  =  T1.customer_id)"}
{"question": "List the names of the students who had no first name, and who have not taken the test", "query": "SELECT T1.firstname,  T1.lastname,  T1.test_score FROM student AS T1 WHERE T1.firstname  =  \"\" OR T1.lastname  =  \"\" OR T2.test_score  =  \"\""}
{"question": "What are the names, last names and surnames of the players who have won a lot of medals", "query": "SELECT T1.name,  T1.last_name,  T1.surname FROM player AS T1 JOIN medal_winners AS T2 ON T1.id  =  T2.id WHERE T2.type  =  'gold'"}
{"question": "What are the total number of papers in the database?", "query": "SELECT count(*)  FROM papers"}
{"question": "Find the names of the authors and the number of publications of their books", "query": "SELECT T1.author_id,  T1.name_first,  count(*) FROM author AS T1 JOIN book AS T2 ON T1.author_id  =  T2.author_id GROUP BY T1.author_id ORDER BY count(*)"}
{"question": "What are the names and ids of all students who took the course \"Data Structures\"?", "query": "SELECT T1.name,  T1.\"id\" FROM student AS T1 WHERE T1.course_id  =  \"Data Structures\""}
{"question": "What is the name, rank, and phone number of the commander of the space battle at the moment?", "query": "SELECT T1.name,  T1.rank,  T1.phone_number FROM commanders AS T1 WHERE T1.name  =  \"Commander\""}
{"question": "What is the student with the most number of books?", "query": "SELECT T1.student_id,  T1.name,  T1.books FROM student AS T1 JOIN book_collection AS T2 ON T1.student_id  =  T2.student_id WHERE T2.books  =  (SELECT max(books) FROM book_collection)"}
{"question": "What is the name and number of the employee who is working in the customer service department?", "query": "SELECT T1.first_name,  T1.last_name,  T1.employee_id FROM employees AS T1 JOIN employee_department AS T2 ON T1.employee_id  =  T2._id WHERE T2.department_id  =  'Customer service'"}
{"question": "Find all the names of the students from the University of Texas, Austin", "query": "SELECT student_name FROM students WHERE university_name = \"University of Texas, Austin\""}
{"question": "Question about which table?", "query": "SELECT T1.column_name FROM table_name AS T1 WHERE T1.column_name = \"question\""}
{"question": "What is the name of the author of the book \"Hackers: Heroes of the Computer Revolution\"?", "query": "SELECT T1.author_name FROM book AS T1 JOIN author AS T2 ON T1.book_id  =  T2.book_id WHERE T2.author_name  =  \"Hackers: Heroes of the computer Revolution\""}
{"question": "what is the name of the course that is listed in both the statistics and psychology departments?", "query": "SELECT course_name FROM course_department WHERE course_id  IN (SELECT course_id FROM course_department WHERE department_id  =  \"psychology\") AND course_id  IN (SELECT cid FROM course_department WHERE courseid  =  \"statistics\")"}
{"question": "What are the names, ratings and prices of all the products that have a rating of at least 4?", "query": "SELECT name FROM product WHERE rating  >  4"}
{"question": "What is the name and id of the student who has the most friends?", "query": "SELECT T1.student_id,  T1.name_first,  count(*) FROM student AS T1 JOIN friend AS T2 ON T1.student_id  =  T2.\"friend_id\" GROUP BY T1.student_id HAVING count(T1.student_id)  =  T1.student_id"}
{"question": "Show the names of all employees with last name \"Smith\"", "query": "SELECT T1.first_name,  T1.last_name,  T1.department_id FROM employees AS T1 JOIN departments_employees AS T2 ON T1.employee_id  =  T2._id WHERE T2.department_id  = \"1\" AND T2.last_name  =  \"Smith\""}
{"question": "(a question about a sql table) How many distinct orders are there?", "query": "SELECT COUNT(*) FROM orders"}
{"question": "What is the average price of wines by year of production?", "query": "SELECT AVG(price) FROM wine WHERE year  =  2001"}
{"question": "What is the population of all cities in the state of Texas?", "query": "SELECT T1.Population FROM City AS T1 WHERE T1.state_id  =  'TX'"}
{"question": "What are the names and telephone numbers of all customers who purchased in the previous month?", "query": "SELECT T1.Customer_id,  T1.Customer_name,  T1.Customer_phone FROM Customer_Purchase AS T1 WHERE T1.Date_purchased  =  (SELECT MAX(T2.Date_purchased) FROM Customer_Purchase AS T2)"}
{"question": "List the id and first and last name of the person who has the highest number of documents", "query": "SELECT T1.id,  T1.first_name,  'first_name' AS type,  T1.last_Name,  'last_name' AS type FROM T1 JOIN documents AS T2 ON T1.document_id  =  T2.[id]"}
{"question": "What is the name and number of employees in the United States that have a salary greater than 10000 and less than 20,000?", "query": "SELECT DISTINCT T1.name,  T1.salary FROM employee AS T1 WHERE T1.salary > 10000 AND T1.salary < 20,000"}
{"question": "Find all the names of cities with the highest number of students", "query": "SELECT T1.city,  T2.student_count FROM city AS T1 JOIN students AS T2 ON T1.city_id  =  T2.city_id"}
{"question": "Which is the largest university?", "query": "SELECT name FROM university WHERE population  >  \"University of California, Berkeley\""}
{"question": "What is the name and the number of apartments in the building with short name 'Columbus Square'?", "query": "SELECT T1.building_name,  T1.number_of_apartments FROM building AS T1 JOIN apartment AS T2 ON T1.building_id  =  T2.building_id WHERE T2.short_name  =  'Columbus Square'"}
{"question": "Find the first and last name of the customer who has email \"luisg@umbraco", "query": "SELECT T1.first_name,  T1.last_name FROM Customer AS T1 JOIN Customer_Address AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.email  =  \"luisg@umbraco\""}
{"question": "How many students are there in the class?", "query": "SELECT count(*)  FROM students"}
{"question": "\"How many books are there in the library?\"", "query": "SELECT count(*)  FROM library"}
{"question": "I'm trying to answer this problem, but I'm stuck on the \"generate\" question", "query": "SELECT T1.id,  T2.name,  T2.description,  T2.price,  T2.quantity,  T2.total_price,  T2.total_quantity,  T2.total,  T2.total_tax,  T2.total_discount,  T2.total_tax_percentage,  T2.total_total,  T2.total_subtotal,  T2.total2,  T2.total2_tax,  T2.price2,  T2.price2_tax"}
{"question": "Find the total number of students at the school with the first name \"John\"", "query": "SELECT count(*)  FROM student WHERE first_name = \"John\""}
{"question": "What is the name and id of the student who has the highest number of courses?", "query": "SELECT T1.name,  T1.id FROM students AS T1 JOIN courses AS T2 ON T1.student_id  =  T2.\"id\" WHERE T2.course_id  =  (SELECT T3.course_id FROM courses AS T3 WHERE T3.name  =  \"English\")"}
{"question": "What is the first letter of the name of the artist who made a song with the most sales?", "query": "SELECT T1.Name FROM artist AS T1 JOIN song AS T2 ON T1.artistid  =  T2.artistid WHERE T2.sales  >  T1.sales"}
{"question": "(a question about a sql table), after \"Count the number\"", "query": "SELECT COUNT(*) AS cnt FROM table_name"}
{"question": "What is the name, id and department of the student with id 1?", "query": "SELECT name, id, department FROM student WHERE id = 1"}
{"question": "What is the first name of the customer who has a credit card with a maximum balance of $10,000?", "query": "SELECT T1.CustomerID,  T1.FirstName,  T1.LastName,  T1.CreditCardID,  T1.CreditCardBalance,  T1.CreditCardType,  T1.CreditCardExpirationDate,  T1.CreditCardNumber,  T1.CreditCardCSC,  T1.CreditCardCVV,  T1.CreditCardIssueDate,  T1.CreditCards FROM customer AS T1 JOIN credit_card AS T2 ON T1.CreditCardID  =  T2.CreditCardID WHERE T"}
{"question": "What are the ids, emails, and phone numbers of the employees who are in the HR department?", "query": "SELECT T1.employee_id,  T1.email,  T1.phone_number FROM employee AS T1 JOIN employee_department AS T2 ON T1.employee_id  =  T2._id WHERE T2.department_id  = 'HR'"}
{"question": "How many customers live in Utah?", "query": "SELECT T1.city FROM customers AS T1 WHERE T1.state  =  \"UT\""}
{"question": "What are the locations of the documents \"Robin CV\" and \"Robin CV?", "query": "SELECT T1.location FROM document AS T1 WHERE T1.name  =  \"Robin CV\" AND T1.type  =  \"CV\""}
{"question": "What are the names, id, name and age of all students who are older than 20?", "query": "SELECT T1.id,  T1.name,  T1.age FROM Student AS T1 WHERE T1.age  >  20"}
{"question": "What is the average height of students who have more than 10 points?", "query": "SELECT avg(height) FROM Students WHERE score > 10"}
{"question": "How many times has a player joined the game since joining a team?", "query": "SELECT T1.player_id,  T1.player_name,  T1.player_team_id,  T1.game_id,  T1.join_date,  T1.join_time,  T1.join_type,  T1.join_team_id,  T2.team_id,  T2._id,  T2.teamname,  T2.team_name,  T2.teamname_short,  T2.team_short,  T2.city,  T2.state,  T"}
{"question": "What is the name of the artist who made \"We Are The World\"? The first name and the last name", "query": "SELECT first_name,  last_name FROM artist WHERE first_name  =  \"We\" AND last_name  =  \"Are\""}
{"question": "Find the number of products that have no manufacturer", "query": "SELECT T1.Product_ID,  T1.Product_name,  T1.Product_price,  T1.Product_quantity,  T1.Product_category,  T1.Product_type,  T1.Product_subtype,  T1.Product__type,  T1.Product___type,  T1.Product____type,  T1.Product________type,  T1.Product____________type,  T1.Product________________type,  T1.Product________________________________type,  T1.Product _________________________________type,  T1.Product _____________________________"}
{"question": "List the names of the actors who played the role of the movie with title \"The Godfather\"", "query": "SELECT name FROM actor WHERE role = \"The Godfather\""}
{"question": "Show the students who are taking courses in the course \"Computer Science\"", "query": "SELECT T1.student_id,  T1.course_id FROM student AS T1 JOIN course AS T2 ON T1.student_id  =  T2.student_id AND T2.course_id  =  \"Computer Science\""}
{"question": "What is the id that has the most transactions?", "query": "SELECT T1.ID FROM Transactions AS T1 WHERE T1.ID  =  (SELECT MAX(T2.ID) FROM Transactions AS T2)"}
{"question": "What is the name and the number of the most popular song in the world?", "query": "SELECT song_name,  count(*) from songs GROUP BY song_name ORDER BY count(*) DESC"}
{"question": "What are the names and ages of the doctors who work in the hospital?", "query": "SELECT T1.name,  T1.age FROM doctor AS T1 JOIN patient AS T3 ON T1.patient_id  =  T3.id"}
{"question": "find all the products that have the same supplier id", "query": "SELECT T1.product_name,  T1.supplier_id FROM products AS T1 JOIN supplier_product AS T2 ON T1.id  =  T2.products_id WHERE T2.supplier_id  =  \"1\""}
{"question": "(a novel question, about a \"different\" table), after \"", "query": "SELECT T1.id,  T1.title,  T1.price,  T1.publisher_id,  T1.publisher,  T1.year,  T1.isbn,  T1.isbn13,  T1.isbn10,  T1.language_id,  T1.language,  T1.language_name,  T1.language_abbreviation,  T1.language_native,  T1.language_territory,  T1.language_variant,  T1.language_code,"}
{"question": "What is the location of the customer with the most accounts?", "query": "SELECT T1.city,  T1.state_code,  T1.zip_code,  T1.country,  T1.\"street_name\",  T1.latitude,  T1.longitude,  T1.address_id,  T1.address_type,  T1.address_status,  T1.address_city,  T1.address_state,  T1.address_zip,  T1.address_country,  T1.address_street,  T1.address_phone,  T1.address"}
{"question": "find the city with the highest population", "query": "SELECT T1.city,  T2.population FROM city AS T1 JOIN population AS T2 ON T1.city_id  =  T2.city_id ORDER BY T1.population DESC LIMIT 1"}
{"question": "What are the id's of all students in the university?", "query": "SELECT T1.student_id FROM student AS T1 JOIN student_class AS T2 ON T1.student_id  =  T2.student_id WHERE T2.class_id  =  \"1\""}
{"question": "What is the id, name and address of the store that the person with id 100 has most recent transactions with?", "query": "SELECT T1.store_id,  T1.name,  T2.address FROM store_transaction AS T1 JOIN store_transaction AS T2 ON T1.store_id  =  T2.store_id WHERE T2.customer_id  =  100"}
{"question": "What are the names and ids of all students in the class?", "query": "SELECT T1.student_id,  T1.name_first, 'student' AS type FROM student AS T1 WHERE T1.student_id  =  '1'"}
{"question": "What is the average temperature in the summer?", "query": "SELECT AVG(T1.temperature) FROM Weather AS T1;"}
{"question": "What is the difference between \"a\" and \"an\"?", "query": "SELECT T1.question_id,  T1.question,  T1.answer FROM questions AS T1 WHERE T1.question  =  \"What is the difference between \\\"a\\\" and \\\"an\\\"\""}
{"question": "What is the name and the age of all students who got a high score?", "query": "SELECT T1.first_name,  T1.last_name,  T1.age FROM Students AS T1 WHERE T1.score  >  (SELECT AVG(score) FROM Students)"}
{"question": "Give the names of books and their authors", "query": "SELECT T1.book_name,  T1.author_name FROM books AS T1 JOIN authors AS T2 ON T1.author_id  =  T2.[author_id]"}
{"question": "How many students are there in this course who have majored in Computer Science?", "query": "SELECT T1.student_id FROM students AS T1 JOIN courses AS T2 ON T1.course_id  =  T2.course_id WHERE T2.course_name  =  \"Computer Science\""}
{"question": "What are the id and age of the employee named Mark Young? What are the id and title of the employee named Mark Young? How many employees have a first", "query": "SELECT T1.id,  T1.age,  T1.firstname,  T1.lastname,  T1.title,  T1.address_id,  T1.city,  T1.state_code,  T1.zip_code,  T1.phone,  T1.email,  T1.fax,  T1.cellphone,  T1.homephone,  T1.workphone,  T1.address_type,  T1.address_status,  T1.address_street,  T1"}
{"question": "What are the types and names of the ships that have both shipless ships with tonnage more than 6001 and those with tonnage less that", "query": "SELECT T1.type_name,  T1.name FROM ship AS T1 WHERE T1.tonnage  >  6001 AND T1.type_name  =  \"shipless\" OR T1.type_name  =\"shipping\""}
{"question": "How many different cities in the world have a population of more than 100,000 people?", "query": "SELECT DISTINCT city_code FROM city WHERE population  >  100000"}
{"question": "How many employees have address in the country \"United States\"?", "query": "SELECT T1.name,  T1.\"address\" FROM employee AS T1 WHERE T1.country  =  \"United States\""}
{"question": "What is the total number of employees by department?", "query": "SELECT T1.dept_name,  T1.employee_count FROM department AS T1 GROUP BY T1.dept_name"}
{"question": "What are the names, locations and descriptions of the different products?", "query": "SELECT T1.name,  T1.location,  T1.description FROM product AS T1 WHERE T1.name  =  \"Apple\""}
{"question": "What are the names, and phone numbers of all students with first name as \"Michael\"?", "query": "SELECT T1.first_name,  T1.phone_number FROM students AS T1 WHERE T1.first_name  =  \"Michael\""}
{"question": "What is the movie rating for the movie \"Chronicles of Narnia: Prince Caspian - Battle of the Five Armies\"?", "query": "SELECT rating FROM movie WHERE movie_title  =  \"Chronicles of Narnia\""}
{"question": "List the names of all states, ordered by area from smallest to largest", "query": "SELECT T1.name FROM states AS T1 JOIN states AS T2 ON T1.area  =  T2.area ORDER BY T1.area ASC, T1.name ASC"}
{"question": "Find the names of all employees who took the course Sports and Physical Education", "query": "SELECT T1.firstname,  T1.lastname,  T1.title,  T1.department_id,  T1.office_id,  T1.phone,  T1.email,  T1.address_id,  T1.ssn,  T1.dob,  T1.gender,  T1.marital_status,  T1.race,  T1.ethnicity,  T1.religion,  T1.nationality,  T1.citizenship,  T1.country,"}
{"question": "What is the name and the address of the student named \"Matsuhisa\" with the highest average monthly rental?", "query": "SELECT T1.name,  T1.address FROM student AS T1 JOIN rental AS T2 ON T1.id  =  T2.id WHERE T2.rental_amount  >  (SELECT T3.rental_amount FROM rental AS T3 WHERE T3.rental_date  =  (SELECT MAX(rental_date) FROM rental AS T4 WHERE T4.rental_date  >  T3.rental_date))"}
{"question": "What is the maximum value of the data type \"float\" in SQL?", "query": "SELECT MAX(T1.data_type) FROM table_name"}
{"question": "What are the names in the table that has the most rows?", "query": "SELECT T1.name FROM table_name AS T1 WHERE T1.rows  =  \"the most rows\""}
{"question": "What is the first name of the person who is the youngest person to be elected mayor of a city?", "query": "SELECT T1.name FROM Person AS T1 JOIN Person_Age AS T2 ON T1.id  =  T2.person_id WHERE T2.age  =  (SELECT min(age)  FROM person WHERE job  = 'mayor') AND T1.name  =  \"John\""}
{"question": "What is the first name and last name of students who are in the top 10% of class rank?", "query": "SELECT T1.student_id,  T1.first_name,  'Top 10%' AS rank_type,  T1.last_Name,  T1.class_rank FROM student AS T1 JOIN ( SELECT student_id,  class_rank FROM class_rank WHERE class_rank  >  0.1 ORDER BY class_rank DESC LIMIT 10 ) AS T2 ON T1.student_id  =  T2.student_id ORDER BY T2.class_rank DESC"}
{"question": "What are the names and positions of all employees in the company?", "query": "SELECT T1.first_name,  T1.last_name,  T1.position FROM employees AS T1 ORDER BY T1.first_name, T1.last_name, T1.position"}
{"question": "How many students have taken courses in the past year?", "query": "SELECT count(*)  FROM student"}
{"question": "What is the average age of the people living in the same zip code?", "query": "SELECT T1.age FROM people AS T1 JOIN zip_code AS T2 ON T1.zip_code_id  =  T2.\"zip_code_id\" WHERE T2.zip_code_id  IN (SELECT T3.zip_code_id FROM zip_code AS T3 WHERE T3.zip_code  =  \"12345\")"}
{"question": "What is the average age of the person called \"Morten\"?", "query": "SELECT T1.age FROM person AS T1 WHERE T1.name  =  \"Morten\""}
{"question": "What are the names, ages, and zip codes of the players that live in the same city as the player in the id=42?", "query": "SELECT T1.name,  T1.age,  T1.zip_code FROM player AS T1 WHERE T1.id  =  42"}
{"question": "List the first name and last name of the CEOs of all companies", "query": "SELECT T1.name FROM CEO_of_company AS T1 JOIN company AS T2 ON T1.company_id  =  T2._id WHERE T2.name  =  \"XYZ Inc.\""}
{"question": "How many employees are there in the department \"Marketing\"?", "query": "SELECT T1.employee_id FROM employee AS T1 JOIN department AS T2 ON T1.department_id  =  T2.department_id WHERE T2.department_name  =  \"Marketing\""}
{"question": "How many students live in the same room with Chris Jackson?", "query": "SELECT T1.student_name,  T1.room_number FROM student AS T1 JOIN room AS T2 ON T1.room_id  =  T2.room_id WHERE T2.room_number  =  \"Chris Jackson\""}
{"question": "How many different types of vocal performances do you know?", "query": "SELECT DISTINCE(T1.Name) FROM Vocal_Performances AS T1 JOIN Vocal_Performances AS t2 ON T1.Vocal_Performances_id  =  t2.Vocal_Performances"}
{"question": "What are the names and dates of birth of the student whose name contains \"Markus\" and \"Elyse\"?", "query": "SELECT T1.Name,  T1.date_of_birth FROM student AS T1 WHERE T1.Name  =  \"Markus\" AND T1.date_of_birth  =  \"Elyse\""}
{"question": "What is the average salary of the salesmen at the firm in your city?", "query": "SELECT AVG(salary) FROM salesman WHERE city = \"your city\""}
{"question": "What are the first three letters of the names of the students who have the most number of absences?", "query": "SELECT T1.first_name,  T1.last_name FROM student AS T1 JOIN absences AS T2 ON T1.id  =  T2.id WHERE T2.absence_type  =  'abs' AND T2.absence_date  >  '2008-01-01' ORDER BY T1.absence_date ASC LIMIT 3"}
{"question": "What is the name and email of the user with the most amount of questions?", "query": "SELECT T1.name,  T1.email FROM user_profiles AS T1 JOIN user_questions AS T2 ON T1.User_ID  =  T2.User_ID WHERE T2.Question_count  >  (SELECT count(*) FROM user_questions)"}
{"question": "What is the name which is closest to the name of the company you work for?", "query": "SELECT T1.name FROM companies AS T1 JOIN employees AS T2 ON T1.company_id  =  T2.company_id WHERE T2.name  =  \"Your Company\""}
{"question": "What is the name and birth city of the actor who plays a detective in the movie \"The Big Hit\"?", "query": "SELECT name,  city FROM actor WHERE name  =  \"The Big Hit\""}
{"question": "What is the number in the database?", "query": "SELECT count(*)  FROM table"}
{"question": "What are the first names and the last names of all the students who are enrolled in at least one course?", "query": "SELECT T1.student_id,  T1.firstname,  T2.lastname FROM student AS T1 JOIN student_course AS T2 ON T1.student_id  =  T2.student_id WHERE T2.course_id  IN  (SELECT course_id FROM course WHERE course_name  =  \"CS101\")"}
{"question": "What are the number of employees of the companies of the customers of the bank?", "query": "SELECT COUNT(*) FROM customers AS T1 JOIN employees AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.company_id  =  \"1\""}
{"question": "How many countries have the word \"Spain\" in the name?", "query": "SELECT country_name FROM countries WHERE country_name  LIKE \"%Spain%\""}
{"question": "What are the names and salaries of all employees of the company who have a title of \"Director\" or \"President\"?", "query": "SELECT T1.name,  T1.salary FROM employee AS T1 JOIN position AS T2 ON T1.id  =  T2.employee_id WHERE T2.title  =  \"Director\" OR T2.title  =  'President'"}
{"question": "What are the names (and the ids) of the students who are on the basketball team?", "query": "SELECT student_name,  student_id FROM students WHERE student_id  IN (SELECT student_id FROM team_membership WHERE team_id  =  \"Basketball\")"}
{"question": "The answer for the previous question", "query": "SELECT T1.address_type_code FROM Customer_Addresses AS T1 JOIN Customer AS T2 ON T1.Customer_ID  =  T2._id WHERE T2.first_name  =  \"Payam\""}
{"question": "How many songs have a shared vocal by the first name \"Ludie\" and last name \"Oliver\"?", "query": "SELECT T1.SongId,  T1.SongName,  T1.ArtistName,  T1.Artists,  T1.AlbumName,  T1.AlbumArtist,  T1.SongLength,  T1.SongLength_h,  T1.SongLengthInSeconds,  T1.SongLengthSeconds,  T1.SongTime,  T1.SongTime_h,  T1.Time,  T1.Time_h,  T1._id,  T1.SongId_h,  T1.Artist"}
{"question": "What are the names, locations and product types of the products that I have never bought?", "query": "SELECT T1.name,  T1.location,  T1.product_type FROM product AS T1 WHERE T1.id NOT IN (SELECT T2.id FROM product AS T2)"}
{"question": "What are the names, ages and ids of all students who live in the same dorm as Mike?", "query": "SELECT T1.name,  T1.age,  T1.id FROM student AS T1 JOIN dorm AS T2 ON T1.studentid  =  T2.studentid WHERE T2.name  =  \"Mike\""}
{"question": "What are the names and degrees of all students in the database?", "query": "SELECT T1.student_id,  T1.name_first,  firstname,  T1.name_middle,  T1.name_second,  T1.name_third,  T1.name_fourth,  T1.name_fifth,  T1.degree,  T1.city,  T1.state,  T1.zip,  T1.country,  T1.phone,  T1.email,  T1.address_id,  T2.name_first,  T2.name_middle,"}
{"question": "What is the id and the name of the last city that's the base for a train route with a total distance of more than 500 miles?", "query": "SELECT T1.city_id,  T1.city_name FROM train_routes AS T1 WHERE T1.total_distance  >  500"}
{"question": "What are the names and the roles of the students who went to the party?", "query": "SELECT T1.student_name,  T1.role FROM students AS T1 JOIN party_attendance AS T2 on T1.student_id  ==  T2.student_id GROUP BY T1.student_name, T1.role"}
{"question": "What is the average grade of the students who have joined the college in the past 10 years?", "query": "SELECT avg(grade) FROM Student WHERE year  >  (SELECT min(year) FROM Student)"}
{"question": "What is the name, gender, and age of the customer who is the eldest customer?", "query": "SELECT T1.customer_name,  T2.gender,  T2.age FROM customer AS T1 JOIN customer_history AS T2 ON T1.id  = T2.customer_id WHERE (T2.date_added  =  (SELECT MAX(date_added) FROM customer_history)) AND (T2.customer_id  =  T1.id)"}
{"question": "Show the amount of money spent by each employee for the most expensive car", "query": "SELECT T1.employeeid,  T1.amount,  T2.car_name FROM employee AS T1 JOIN car AS T2 ON T1.car_id  =  T2.car_id WHERE T1.amount  =  (SELECT max(amount) FROM employee)"}
{"question": "What is the total number of vehicles?", "query": "SELECT count(*) from vehicles"}
{"question": "What is the fastest speed of roller coasters?", "query": "SELECT T1.speed FROM ride AS T1 JOIN ride_type AS T2 ON T1.ride_type_id  =  T2._id WHERE T2.name  = 'rollercoaster'"}
{"question": "What are the names, locations, and ages of the twins?", "query": "SELECT T1.name,  T2.location,  T3.age FROM twins AS T1 JOIN student AS T2 ON T1.twins_id  =  T2.id JOIN student AS T3 ON T2.student_id  =  t3.id WHERE T1.name  =  \"Alice\" AND T2.name  =  \"Bob\""}
{"question": "What are the names, genders, and ages of all students in the school?", "query": "SELECT T1.name,  T1.gender,  T1.age FROM student AS T1"}
{"question": "What is the name and year of the artist who performed back stage of the song \"Der Kapitan\"", "query": "SELECT T1.artist_name,  T1.artist_year FROM artist AS T1 WHERE T1.artist_name  =  \"Der Kapitan\""}
{"question": "What is the average maximum age of all basketball players?", "query": "SELECT AVG(max_age) FROM basketball_players"}
{"question": "What are the names for all the ships that are in the United States Navy?", "query": "SELECT name FROM ship"}
{"question": "What is the name, address, and phone number for the person with the last name of \"Klein\"?", "query": "SELECT T1.name,  T1.address,  T1.phone_number FROM customer AS T1 WHERE T1.last_name  =  \"Klein\""}
{"question": "What is the name (first and last) of the employee who is assigned to the \"Gymnastics\" project", "query": "SELECT T1.first_name,  T1.last_name FROM employee AS T1 JOIN project AS T2 ON T1.employee_id  =  T2.\"Gymnastics\""}
{"question": "What are the names, first names, and last names of all the students in the room with the name \"Hall H\" at the school where I work", "query": "SELECT T1.first_name,  T1.last_name,  T2.room_name FROM students AS T1 JOIN rooms AS T2 ON T1.room_id  =  T2._id WHERE T2.name  =  \"Hall H\""}
{"question": "My code:\ndef question(str):", "query": "SELECT T1.question_id,  T1.question_text,  T1.question_type,  T1.question_order,  T1.question_status,  T1.question_date,  T1.question_author,  T1.question_category,  T1.question_id,  (SELECT T2.question_id FROM questions AS T2 WHERE T2.question_text  =  T1.question_text) AS answer_id,  T1.answer_text,  T1.answer_type,  T1."}
{"question": "(a novel question, about a particular topic)", "query": "SELECT T2.name,  T1.Eliminate_Move FROM elimination AS T1  JOIN wrestler AS T2 ON T2.Wrestler_ID"}
{"question": "What are the names in the table, sorted by date?", "query": "SELECT T1.name FROM table AS T1 WHERE T1.date  >  '2008-01-01' ORDER BY T1.date"}
{"question": "Who is the user with username \"coffee\"?", "query": "SELECT user_name FROM users WHERE user_name  =  \"coffee\""}
{"question": "What are the names, positions, and departments of all instructors, as well as what are the first names, age, and gender of the students?", "query": "SELECT T1.id,  T1.name_first,  (T1.name_last ||'' || T1.name_middle) AS name_full, T1.position,  T1.department,  T1.age,  T1.gender FROM instructor AS T1 JOIN student AS T2 ON T1.id  =  T2.instructor_id GROUP BY T1.id ORDER BY T1.id ASC"}
{"question": "What are the names, ids, and addresses of all employees, as well as the company names, which have a manager who is also an employee?", "query": "SELECT T1.name,  T1.* FROM employee AS T1 JOIN employee_manager AS T2 ON T1.employee_id  =  T2.employee_id WHERE T2.manager_id  =  T1.employee_id"}
{"question": "What is the total number of games played by the New York Giants?", "query": "SELECT COUNT(*) FROM games WHERE team_id = 'NYG'"}
{"question": "Find all customers who have a credit card with a certain balance", "query": "SELECT customer_id,  credit_card_id,  credit_card.balance FROM customer AS T1 JOIN credit_card AS T2 ON T1.customer_id  =  t2.customer_id WHERE T2.credit_card_id  =  \"1\""}
{"question": "What is the name and age of all students who have graduated", "query": "SELECT T1.id,  T1.name,  T1.age FROM students AS T1 WHERE T1.graduated  =  'Yes'"}
{"question": "Give the names of wrestling teams and their elimination moves", "query": "SELECT T1.team_name,  T1.elimination_move FROM team_info AS T1 WHERE T1.elimination_move  =  \"Tombstone\""}
{"question": "How many students have university degrees?", "query": "SELECT T1.student_id FROM Student AS T1 JOIN Degrees AS T2 ON T1.student_id  =  T2.student_id WHERE T2.degree_code  =  \"University\""}
{"question": "What are the names in ascending order of the scores?", "query": "SELECT T1.Name FROM Score AS T1 ORDER BY T1.Score ASC"}
{"question": "Find the names of people who have been injured in the last week", "query": "SELECT T1.name FROM Injuries AS T1 JOIN patients AS T2 ON T1.patient_id  =  T2.patient_id WHERE T2.last_update  >  (SELECT date_sub(now(), interval 1 week) FROM DUAL)"}
{"question": "Find the names and id of all students in the department with a gpa of at least 4", "query": "SELECT name FROM student WHERE gpa  >  4"}
{"question": "What is the average rating for the most recent movie and its year of release?", "query": "SELECT AVG(Rating),  YEAR(Release_Date) FROM movie GROUP BY YEAR(Release_Date) ORDER BY AVG(Rating) DESC"}
{"question": "What is the first and last name of the customer that purchased most recently?", "query": "SELECT T1.first_name,  T1.last_name FROM customer AS T1 WHERE T1.last_purchase_date  =  (SELECT max(last_purchase_date) FROM customer)"}
{"question": "What is the name and number of the customers who have a credit score over 800?", "query": "SELECT customer_name, customer_id FROM customers WHERE customer_credit_score > 800"}
{"question": "(Find the names of all the countries that have won more than one world cup)", "query": "SELECT T1.country_name,  T2.country_name FROM country AS T1 JOIN country AS T2 ON T1.id  =  T2.country_id WHERE T1.id  =  (SELECT MAX(id) FROM country)"}
{"question": "What are the names and ids of the students who are on the list of students who are on the list of top 10 students?", "query": "SELECT T1.student_id,  T2.name FROM students AS T1 JOIN students AS T2 ON T1.id  = T2.id WHERE T1.id  =  '1' AND T2.id  =  '10'"}
{"question": "Find the first three customers by last name", "query": "SELECT T1.last_name,  T1.first_name,  T1.address,  T1.city,  T1.state,  T1.zip,  T1.phone,  T1.email,  T1.email_type,  T1.email_address,  T1.email_status,  T1.email_sent_date,  T1.email_received_date,  T1.phone_number,  T1.email_from,  T1.email_to,  T1.email_cc,"}
{"question": "What is the name and id of the customer who has the lowest credit balance?", "query": "SELECT T1.customer_id,  T1.customer_name,  T1.customer_address_type_code,  T1.customer_credit_balance FROM customers AS T1 WHERE T1.customer_credit_balance  =  (SELECT min(T2.customer_credit_balance) FROM customers AS T2 WHERE T2.customer_id  =  (SELECT customer_id FROM customers AS T3 WHERE T3.customer_address_type_id  =  T1.customer_addresses.address_type_id))"}
{"question": "What is the name and phone number of the person who has the highest rating?", "query": "SELECT T1.fname,  T1.lname,  T1.phone FROM customer AS T1 WHERE T1.rating  =  (SELECT max(T2.rating) FROM customer AS T2)"}
{"question": "What are the first two names of the students whose GPA is more than 3", "query": "SELECT T1.first_name,  T1.last_name FROM student AS T1 WHERE GPA  >  3"}
{"question": "What is the name, gpa and school of the student who has the highest number of hours?", "query": "SELECT name,  gpa,  school FROM students WHERE gpa  =  \"null\" AND hours  >  \"null\""}
{"question": "How many customers have made a purchase in the past 24 hours?", "query": "SELECT T1.customer_id,  T1.date_purchased,  T1.total_spent FROM customer AS T1 WHERE T1.date_purchased  >  DATE_SUB(NOW(), INTERVAL 1 DAY)"}
{"question": "What are the names and ids of the customers who bought \"food\" and \"baking\"?", "query": "SELECT customer_id,  customer_first_name,  customer_last_name,  COUNT(*) FROM customers WHERE customer_address LIKE '%food%' AND customer_address LIKE '%baking%' GROUP BY customer_id"}
{"question": "Find the name, headquarter and founders of the manufacturer that has the most revenue", "query": "SELECT T1.name,  T1.headquarter,  T1.founders FROM company AS T1 WHERE T1.revenue  =  (SELECT max(T2.revenue) FROM company AS T2)"}
{"question": "What is the total amount of tax paid by corporations?", "query": "SELECT SUM(tax_amount) FROM tax_records"}
{"question": "Find the name of all students with at least 2 records in the \"student\" table", "query": "SELECT T1.student_id,  T1.name FROM student AS T1 JOIN student_info AS T2 ON T1.student_id  =  T2.student_id WHERE T1.id  IN (SELECT T3.id FROM student_info AS T3 WHERE T3.student_id  =  \"$id\")"}
{"question": "What is the first names of employees who are in the marketing department", "query": "SELECT T1.full_name FROM employees AS T1 WHERE T1.department_id  =  \"Marketing\""}
{"question": "Find the names of all the countries with more than one capital", "query": "SELECT T1.Country_Name,  T1.Country_Code FROM Country_Info AS T1 JOIN Country_Info AS T2 ON T1.Country_Code  =  T2.Country_Code WHERE T2.Country_Name  =  \"United States\""}
{"question": "(a novel question, about a question that has \"question\" in its name), after \"", "query": "A:"}
{"question": "What are the names, gender, and ages of the last 20 students in the class?", "query": "SELECT T1.name,  T1.gender,  T1.age FROM students AS T1 WHERE T1.age  >  18 ORDER BY T1.age ASC"}
{"question": "What are the names, prices and amounts of all products whose price is at least 100 and less than 300?", "query": "SELECT name,  IF(price  >  100,  price,  0) AS price,  IF(price  > 300,  price,  0) as price_300 FROM products WHERE price  >  100 AND price  <  300"}
{"question": "What is the title of the movie with the most number of scenes?", "query": "SELECT T1.title FROM Movie AS T1 JOIN Scene AS T2 ON T1.movie_id  =  T2.\"movie_id\" GROUP BY T1.title HAVING count(*)  >  1"}
{"question": "Find the average price by location of wines that are not made in California", "query": "SELECT AVG(Price) FROM wine WHERE city_id  =  \"CA\" AND state_id  =  \"CANADA\" AND country_id  =  \"USA\" AND city_name  =  \"San Francisco\""}
{"question": "What are the names, id and the corresponding number of checks written by the customer with id 3", "query": "SELECT T1.customer_name,  T2.check_number FROM customer AS T1 JOIN checks AS T2 ON T1.id  = T2.customer_id WHERE customer_id  =  3"}
{"question": "Find the city where the total number of customers is greater than 200", "query": "SELECT city FROM customer WHERE total_customers  >  200"}
{"question": "What are the names, ages and salaries of all the students in a school in the following order:", "query": "SELECT T1.student_name,  T1.student_age,  T1.student_salary FROM students AS T1 WHERE T1.school_id  =  (SELECT school_id FROM schools WHERE city  =  \"New York\" ) ORDER BY T1.student_name ASC"}
{"question": "Find the names of all people who are not in the list below:", "query": "SELECT T1.firstname,  T1.lastname FROM people AS T1 JOIN friends AS T2 ON T1.id  =  T2.friend_id WHERE T2.friend_id  NOT IN (SELECT T3.friend_id FROM friends AS T3 WHERE T3.friend_id  =  T1.id)"}
{"question": "What are the names, last names, and ids of the people who have used the name \"Bryan\"?", "query": "SELECT T1.name,  T1.last_name,  T1.id FROM people AS T1 WHERE T1.name  =  \"Bryan\""}
{"question": "Show the names of schools with the greatest enrollment in the United States", "query": "SELECT name FROM school WHERE enrollment  >  \"10,000\""}
{"question": "What are the ids and names of employees who are in the department \"Accounting\"?", "query": "SELECT T1.name FROM employees AS T1 JOIN departments_employees AS T2 ON T1.employee_id  =  T2._id WHERE T2.department_id  = \"Accounting\""}
{"question": "What is the average cost of each product in the database?", "query": "SELECT AVG(price) FROM products"}
{"question": "How many scientists are there in the university?", "query": "SELECT COUNT(*) FROM Scientists"}
{"question": "What are the names and types of all the products in the database?", "query": "SELECT T2.Product_Name,  T2.Product_Type FROM Product_Types AS T1 JOIN Products AS T3 ON T1.Product_Type  =  T3.Product_Type WHERE T1.Product_Name  =  \"name\""}
{"question": "Find the first name and last name of the employees with the most number of points", "query": "SELECT T1.last_name,  T1.first_name FROM employees AS T1 WHERE T1.points  =  (SELECT max(T2.points) FROM employees AS T2)"}
{"question": "What is the minimum and maximum number of players that can be on a tennis team?", "query": "SELECT MIN(T1.num_players),  MAX(T1.num_play_team) FROM team AS T1 GROUP BY T1.team_id"}
{"question": "\"what are the names of all the authors who have published books with the following title: \"Guitar in E Minor\"", "query": "SELECT T1.author_id,  T1.name FROM author AS T1 JOIN books AS T2 ON T1.author_id  =  T2.author_id WHERE T2.title  =  \"Guitar in E Minor\""}
{"question": "What are the names, locations, and products of the enzymes which has an \"inhibitor\" interaction?", "query": "SELECT T1.name,  T1.location,  T1.product_id FROM enzyme_interaction AS T1 WHERE T1.interaction_type  =  \"inhibitor\""}
{"question": "What are the names, types, and amounts of all the employees working in the company?", "query": "SELECT T1.name,  T1.type,  T1.amount FROM employees AS T1"}
{"question": "(a novel question, about a table with other words), after \"", "query": "(the sql query to answer the questions)"}
{"question": "(a novel question, about a new type of table), after \"", "query": "(the sql query to answer the query), after \""}
{"question": "What are the names and prices of products in the store?", "query": "SELECT product_name,  price FROM products"}
{"question": "Find the names of the products that are not in this database", "query": "SELECT T2.product_name FROM product AS T1 JOIN product_category AS T2 ON T1.product_id  =  T2.product_id WHERE T2.category_id  =  '1'"}
{"question": "What are the names and population of all countries?", "query": "SELECT T1.country_name,  T2.country_population FROM country AS T1 JOIN country_population AS T2 ON T1.country_id  =  T2.country_id"}
{"question": "Find the average salary for each job title?, after \"", "query": "SELECT count(*) AS count,  T1.job_title,  T1.salary FROM employees AS T1 JOIN job_titles AS T2 ON T1.job_id  =  T2._job_id GROUP BY T1.job_title ORDER BY count DESC"}
{"question": "find the first names of the persons in the following table and store them in an array", "query": "SELECT T1.name FROM people AS T1 WHERE T1.id  =  (SELECT T2.id FROM people AS T2 WHERE T2.name  =  \"John\")"}
{"question": "Find the names of all people who have no phone numbers", "query": "SELECT T1.firstname,  T1.lastname FROM person AS T1 WHERE T1.phone_number  =  NULL"}
{"question": "(what are the names of the products that have the same price in all countries)", "query": "SELECT T1.price_in_dollars,  T2.name FROM product AS T1 JOIN product AS T2 ON T1.price_in_dollar  =  T2.price_in_dollar;"}
{"question": "Find the number of different types of tickets that are offered by the airlines", "query": "SELECT count(*)  FROM tickets"}
{"question": "What is the number and percentage of products from company A?", "query": "SELECT COUNT(*),  COUNT(DISTINCT product_id) FROM products WHERE company_id  =  'A'"}
{"question": "Find the first name of all those who have the same birthday as the person whose id is 100", "query": "SELECT T1.first_name FROM students AS T1 JOIN birthday AS T2 ON T1.stu_id  =  T2.\"id\" WHERE T2.birthday  =  \"100\""}
{"question": "What is the name and the first and last name of the persons that are in the same department with Nancy Edwards?", "query": "SELECT T1.name,  T1.first_name,  T1.last_name FROM Person AS T1 JOIN Person_Department AS T2 ON T1.person_id  =  T2._id WHERE T2.department_id  =  \"1\""}
{"question": "What is the average grade of students who scored at least 20 on the final exam?", "query": "SELECT AVG(grade) FROM student WHERE score >= 20"}
{"question": "What are the names and prices of all products that cost at least 100, sorted by price decreasing and name increasing?", "query": "SELECT T1.Product_Name,  T2.Price FROM Products AS T1 JOIN Products AS T2 ON T1.price  >  T2.price WHERE T1.price  >  100 ORDER BY T1.price,  T1.Product_Name"}
{"question": "What is the name and last name of the faculty member that has been the most times as the chair?", "query": "SELECT name,  last_name FROM faculty WHERE chair_id  =  (SELECT max(chair_id) FROM faculty)"}
{"question": "(a novel question, about a quiz), after \"", "query": "A:"}
{"question": "find the name of the artist who made album \"Balls to the Wall\"", "query": "SELECT T1.artist_name FROM album AS T1 JOIN artist AS T2 ON T1.artist_id  =  T2.artist_id WHERE T2.artist_name  =  \"Balls to the Wall\""}
{"question": "What is the average temperature in the city with the name of \"New York\"?", "query": "SELECT AVG(temperature) FROM city WHERE name  =  \"New York\""}
{"question": "What are the names, and the dates of the following movies:", "query": "SELECT name, date FROM movie WHERE date  >  '2014-01-01' AND date  <  '2014-01-01';"}
{"question": "What is the first name and age of the students who have a GPA of at least 3", "query": "SELECT T1.student_id,  T1.first_name,  T1.age FROM student AS T1 WHERE T1.GPA  >=  3"}
{"question": "Find the sum of the first and second column", "query": "SELECT sum(T1.first_column) +  sum(T1.second_column) FROM table1 AS T1;"}
{"question": "What are the names and addresses of all customers in the database?", "query": "SELECT customer_name  FROM customers"}
{"question": "What are the prices of the products?", "query": "SELECT T1.price FROM products AS T1"}
{"question": "What is the name, birth date and occupation of the customer who has the most transactions?", "query": "SELECT T1.Name,  T1.birth_date,  T1.Occupation FROM customer AS T1 WHERE T1.transactions  =  (SELECT max(T2.transactions) FROM customer AS T2)"}
{"question": "List the ages and number of male and female students in schools with different types of tuition fees", "query": "SELECT T1.age,  T1.gender,  T1.school_type_code FROM students AS T1 JOIN schools AS T2 ON T1.school_id  =  T2.id WHERE T2.type_code  =  \"tuition_fee\""}
{"question": "What are the names, id and the corresponding number of employees who have been trained by the company with the highest profit?", "query": "SELECT T1.Name,  T1.id,  T1.num_employees FROM employee AS T1 JOIN training AS T2 ON T1.id  =  T2.employeeid WHERE T2.profit  >  (SELECT MAX(T3.profit) FROM training AS T3)"}
{"question": "What are the names, locations and prices of products that have the least number of reviews?", "query": "SELECT T1.name,  T2.location,  T3.price FROM product AS T1 JOIN product_review AS T2 ON T1.id  =  T2.productid JOIN product_review_details AS T3 ON T2.review_id  =  T3.review_id WHERE T1.id  =  (SELECT min(id) FROM product_review)"}
{"question": "What is the name, address, and phone number of the person who used a phone with id 2 in the past 15 minutes?", "query": "SELECT name,  address,  phone_number FROM person WHERE person_id  =  2 AND ( ( ( NOW() - person_last_login ) / 60 )  >  15 AND ( ( NOW() - person_first_login ) / 60 )  <  30 )"}
{"question": "What is the mean price of all products?", "query": "SELECT AVG(price) FROM products"}
{"question": "How many times did the student named \"X\" go to school?", "query": "SELECT count(*) AS \"count\" FROM STUDENT AS T1 WHERE T1.Fname  =  \"X\""}
{"question": "Show the name of all companies that have a president who's name is \"Sally\"", "query": "SELECT name FROM company WHERE president  =  \"Sally\""}
{"question": "Find the names of schools whose average scores are highest in the city", "query": "SELECT T1.name FROM school AS T1 JOIN school_district AS T2 ON T1.school_id  =  T2.school_id WHERE T2.city_id  =  \"city_id\" AND T2.average_score  =  (SELECT AVG(score) FROM school_results WHERE school_id  =  T1.id)"}
{"question": "Find the students who are enrolled in the most courses", "query": "SELECT T1.student_id,  T2.name FROM students AS T1 JOIN student_course_enrolment AS T2 ON T2.student_id  =  (SELECT student_id FROM student_course_enrolment WHERE student_id  =  T1.student_id)"}
{"question": "What are the first name, last name, and age of the person who has the most customers in Illinois?", "query": "SELECT T1.first_name,  T1.last_name,  T1.age FROM customer AS T1 WHERE T1.state  =  \"Illinois\" ORDER BY T1.customer_count DESC LIMIT 1"}
{"question": "What are the descriptions and unit cost of the items of the first course?", "query": "SELECT T1.description,  T1.unit_cost FROM course AS T1 JOIN products AS T2 ON T1.course_id  =  T2.id WHERE T2.id  =  (SELECT product_id FROM products WHERE product_name  =  \"First Course\")"}
{"question": "List the names of the files that are to be opened in the current directory", "query": "SELECT file_name FROM file_info WHERE file_name  =  \"$1\""}
{"question": "What are the names, addresses, and grades of the students from the classes of 2004, 2006, 2010?", "query": "SELECT T1.name,  T1.address,  T1.grade FROM student AS T1 JOIN class AS T2 ON T1.class_id  =  T2._id WHERE T2.year  =  2004 OR T2.year  =  2006 OR T2.year  = 2010"}
{"question": "What are the ids of the architects who built two bridges in a city or a mill?", "query": "SELECT T1.id FROM architects AS T1 JOIN building AS T2 ON T1.architect_id  =  T2.id WHERE T2.name  =  \"Bridge\" OR T2.name  =  'Mill'"}
{"question": "What are the names, start and end dates, and salaries of employees in the department \"R&D\"?", "query": "SELECT T1.employee_id,  T1.name,  T1.[start_date],  T1.[end_date],  T1.salary FROM employee AS T1 WHERE T1.department_id  =  \"R&D\""}
{"question": "What is the average amount of time each student takes to prepare for the final exam?", "query": "SELECT AVG(T1.time_to_exam) FROM Student AS T1"}
{"question": "What is the name? The first name? The second name?", "query": "SELECT T1.name FROM Person AS T1 WHERE T1.name  =  \"John\""}
{"question": "What are the id, name, and email for all customers with the same surname?", "query": "SELECT T1.custid,  T1.surname,  T1.first_name,  'email' AS email FROM customer AS T1 WHERE T1.surname  =  (SELECT T2.surname FROM customer AS T2 WHERE T2.custid  =  'T1.custid')"}
{"question": "What are the names, and the number of, of the cities of the US state Washington?", "query": "SELECT T1.city_name,  T2.city_id FROM city AS T1 JOIN state AS T2 ON T1.state_id  =  T2.state_id WHERE T2.state_name  =  'Washington'"}
{"question": "The company is the largest producer of beer in the world", "query": "SELECT count(*) AS total FROM beer WHERE company_name  =  \"Anheuser-Busch\""}
{"question": "What is the full text of the document with ID 4?", "query": "SELECT T1.document_name FROM documents AS T1 WHERE T1.id  =  4"}
{"question": "Find the name of all employees who are in the region Dortmund", "query": "SELECT T1.firstname,  T1.lastname,  T1.address_id,  T1.city,  T1.state_code,  T1.zip_code,  T1.phone_number,  T1.email_address,  T1.employeeid,  T1.manager_id,  T1.department_id,  T1.job_title,  T1.office_id,  T1.office_location,  T1.start_date,  T1.end_date,  T1."}
{"question": "What are the names, id, location and course number of the students who were not enrolled in any classes in the spring semester of 2009?", "query": "SELECT T1.name,  T1.id,  T1.location,  T1.course_number FROM student AS T1 WHERE NOT EXISTS (SELECT T2.name,  T2.id,  T2.location,  T2.course_number FROM course AS T2 WHERE T2.student_id = T1.id)"}
{"question": "What are the ids and names of the countries which belong to the European Union?", "query": "SELECT T1.country_id,  T1.country_name FROM country AS T1 JOIN country_membership AS T2 ON T1.country_id  =  T2.[country_id] WHERE T2.member_state  =  'EU'"}
{"question": "What are the names, ids, and email addresses of all customers who are not listed as having a policy?", "query": "SELECT T1.name,  T1.\"id\",  T1.email FROM customer AS T1 WHERE NOT EXISTS (SELECT 1 FROM policy AS T2 WHERE T2.customer_id  =  T1.id)"}
{"question": "What are the names, id and details of the most expensive hotels in the world?", "query": "SELECT T1.name,  T1.id,  T1.details FROM hotels AS T1 WHERE T1.price  >  (SELECT MAX(T2.price) FROM hotels AS T2)"}
{"question": "(a novel question, about a specific table) What is the name of the book written by Anne?", "query": "SELECT title FROM book WHERE author = \"Anne\""}
{"question": "What is the average cost of hotel rooms in the US?", "query": "SELECT AVG(Room_Price) FROM Hotel_Room_Price"}
{"question": "List the names, email of all the employees who were hired before 2004", "query": "SELECT T1.employee_name,  T1.email FROM employees AS T1 WHERE T1.hire_date  <  2004"}
{"question": "What are the names and id of the members of the board of directors of the companies whose employees have the lowest salaries?", "query": "SELECT T1.name,  T1.id FROM board_of_directors AS T1 JOIN employees AS T2 ON T1.company_id  =  T2.company_id WHERE T2.salary  <  \"0.00\""}
{"question": "What are the first and last names of the students who have taken the course \"Introduction to Database Management Systems\"?", "query": "SELECT DISTINCT stu_fname,  stu_lname FROM student WHERE stu_course_code  =  \"Introduction to Database Management Systems\""}
{"question": "How many students have at least one different sport?", "query": "SELECT COUNT(*),  T1.sport FROM student AS T1 JOIN sport AS T2 ON T1.sport  =  T2.sport GROUP BY T1.sport"}
{"question": "(a novel question, about a class, but this is a different question), after \"", "query": "SELECT T1.name,  T1.address FROM customer AS T1 JOIN customer_orders as T2 ON T1.customerid  =  T2.id WHERE T2.order_id  = (SELECT max(order_id) FROM customer_orders)"}
{"question": "Show the first name, last name, and status of the employees who work most hours", "query": "SELECT T1.first_name,  T1.last_name,  T2.status FROM employees AS T1 JOIN employee_hours AS T2 ON T1.emp_id  =  T2.[employee_id]"}
{"question": "What is the complete list of all the cities?", "query": "SELECT * FROM city"}
{"question": "What are the different names of the customers who ordered product Latte?", "query": "SELECT T1.name FROM customer AS T1 JOIN order AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.product_id  =  \"Latte\""}
{"question": "(a question about a sql table) What are the names of the technicians who have been assigned to repair machines?", "query": "SELECT T1.name FROM technicians AS T1 JOIN technicians_assigned_to_machines AS T2 ON T1.tech_id  =  T2.[tech_id] WHERE T2.machine_id  =  \"1\""}
{"question": "How many customers purchased products with the id in the table?", "query": "SELECT count(*)  FROM customer_product WHERE customer_id  =  \"1\" AND product_id  =  \"1\";"}
{"question": "Which artists are the most famous people in music?", "query": "SELECT T1.Artist_name,  T2.Artist_name FROM artist_record AS T1 JOIN artist_record AS T2 ON T1.Artist_id  =  T2._id WHERE T1.Artist_name  =  \"The Beatles\" AND T2.Artist_name  = \"The Beatles\""}
{"question": "What are the names in alphabetical order of the students in all the classes?", "query": "SELECT T1.student_name FROM student AS T1 JOIN class AS T2 ON T1.class_id  =  T2"}
{"question": "What's the average age of the customers whose names begin with the letter A?", "query": "SELECT AVG(age) FROM customers WHERE name  LIKE  \"A%\""}
{"question": "What are the ids of the problems I reported after the date of any problems I reported by Rylan Homenick", "query": "SELECT T1.id FROM problem AS T1 JOIN problem_history AS T2 ON T1.id  =  T2.problem_id WHERE T2.date  >  \"2014-01-01\""}
{"question": "What are the names, and the ages of the students, with the first name like 'Bryan' or 'Robert'?", "query": "SELECT T1.first_name,  T1.age FROM students AS T1 WHERE T1.first_name LIKE '%Bryan%' OR T1.first_name LIKE 'Robert%'"}
{"question": "What are the ids of the products that have a rating higher than the average rating?", "query": "SELECT T1.product_id FROM products AS T1 JOIN product_ratings AS T2 ON T1.product_id  =  \"T2.product_id\" WHERE T2.rating  >  \"T1.product_rating\""}
{"question": "What are the names and id of all customers who have an account with an interest rate of 1", "query": "SELECT T1.id,  T1.name FROM customer AS T1 JOIN account AS T2 ON T1.customer_id  =  T2._id WHERE T2.interest_rate  =  1"}
{"question": "What are the ids and names of both the staff members and customers who attended a party", "query": "SELECT T1.name,  T1.\"staff_id\" FROM staff AS T1 JOIN party AS T3 ON T1.staff_id = T3.staff_id WHERE T3.id = 1"}
{"question": "What are the ids of the problems which are in the product \"voluptatem\" with the status \"cras etiam\", and are reported before 2000?", "query": "SELECT problem_id FROM problems WHERE problem_name  =  \"voluptatem\" AND status  =  \"cras etiam\" AND date_reported  <  \"2000\""}
{"question": "Find the student with the most points", "query": "SELECT T1.student_id,  T1.score FROM student AS T1 JOIN student_scores AS T2 ON T1.id  =  T2.student_id WHERE T2.score  >  (SELECT max(T3.score) FROM student_scores AS T3)"}
{"question": "Which employees are married and do not have a child?", "query": "SELECT T1.employee_id,  T2.name,  T3.name FROM Employees AS T1 JOIN Employees AS T2 ON T1.employee_id  =  T2.\"employee_id\" JOIN Employees AS T3 ON T2.employee_id  =  \"T3.employee_id\" WHERE T1.employee_id  <>  T3.employee_id AND T1.marriage_status  =  \"Married\" AND T2.marriage_status  = \"Single\" AND T3.employee_id  =  NULL"}
{"question": "Find the first names of the customers whose average balance is greater than 3000", "query": "SELECT T1.first_name FROM customer AS T1 WHERE T1.account_balance  >  3000"}
{"question": "What are the full name of students who have the same names of their parents?", "query": "SELECT T1.student_first_name,  T1.student_last_name FROM students AS T1 JOIN students AS T2 ON T1.student_id  =  T2.student_id WHERE T1.student_id  <>  T2.student_id AND T1.student_first_m  =  T2.student_first_m AND T1.student_last_m  =  T2.student.last_m"}
{"question": "What are all the products whose price was increased more than the average?", "query": "SELECT T1.product_name,  T1.price,  T1.increase_percentage FROM product AS T1 WHERE T1.price  >  (SELECT AVG(price) FROM product WHERE product_id  =  T1.product_id);"}
{"question": "What are the ids, names, and last names of all the football players who did not play in the world championship?", "query": "SELECT T1.id,  T1.name,  T1.last_name FROM player AS T1 WHERE T1.id NOT IN (SELECT T2.id FROM player AS T2)"}
{"question": "What is the maximum id of a course in the university's database?", "query": "SELECT max(course_id) FROM course"}
{"question": "What were the names and salaries of the people working on the project named \"Hollywood\" as of Oct 1, 2009?", "query": "SELECT T1.last_name,  T1.first_name,  T1.salary FROM employee AS T1 WHERE T1.project_id  =  'Hollywood'"}
{"question": "What is the population of each city?", "query": "SELECT T1.city_name,  T1.population FROM city AS T1 JOIN country_info AS T2 ON T1.city_id  =  T2._id GROUP BY T1.city_id ORDER BY T1.population DESC LIMIT 1"}
{"question": "What are the names for the 3 schools that have the least students?", "query": "SELECT school_name,  count(*) AS students FROM schools GROUP BY school_name ORDER BY students DESC LIMIT 3"}
{"question": "What is the average age of the customers of the store \"EatMore\"?", "query": "SELECT AVG(age) FROM Customer WHERE store_id  =  \"EatMore\""}
{"question": "What are the names and addresses of all patients who have been tested for HIV in the last year?", "query": "SELECT T1.patient_name,  T2.patient_address FROM patient_record AS T1 JOIN patient_history AS T2 ON T1.patient_id  =  T2.patient_id WHERE T2.date_of_test  >  '2016-01-01'"}
{"question": "How many distinct users are there?", "query": "SELECT count(*) AS total FROM users"}
{"question": "How many students are in the class with the highest average marks?", "query": "SELECT T1.student_id,  T1.grade_average FROM Student AS T1 JOIN Student_Grades AS T2 ON T1.student_id  =  T2.student_id WHERE T2.grade_average  =  (SELECT AVG(grade) FROM Student_Grades WHERE student_id  =  T1.student_id )"}
{"question": "What is the title for the course with Differential Geometry as a prerequsite?", "query": "SELECT T1.title FROM course AS T1 JOIN course_prerequisite AS T2 ON T1.course_id  =  T2.course_id WHERE T2.prereq_id  =  'DGE'"}
{"question": "Which two students had the most hours of tutored lessons?", "query": "SELECT T1.id,  T1.name,  T1.hours_tutored FROM student AS T1 JOIN tutoring AS T2 ON T1.id  =  T2.id WHERE T2.student_id  =  '1' AND T2.hours_tutored  >  '2'"}
{"question": "Find the names and prices of all products that have the characteristic name \"cheap\"", "query": "SELECT T1.product_name,  T1.product_price FROM product AS T1 WHERE T1.product_name  =  'cheap'"}
{"question": "How many are the male students in the university who played soccer?", "query": "SELECT T1.student_id,  T1.name_first,  count(*) FROM student AS T1 JOIN player_awards AS T2 ON T1.student_id  =  T2.student_id WHERE T2.player_id  =  '1' GROUP BY T1.student_id ORDER BY count(*)  DESC LIMIT 1"}
{"question": "Where is the largest market?", "query": "SELECT T1.name,  T1._row_id,  T1.city,  T1.state,  T1.zip,  T1.lat,  T1.lng,  T1.population,  T1.area,  T1.population_density,  T1.lat_lng_area,  T1.lat_long_area,  T1.population, T1.population_density,  ( T1.population * T1.population_density ) AS population_density_sq_mi,  T1.lat,"}
{"question": "What are the names (first and last) of all the scientists who work in New York City?", "query": "SELECT first_name,  last_name FROM scientists WHERE city  =  \"New York\""}
{"question": "If a customer has a health insurance, find the name of the insurance company", "query": "SELECT T1.name FROM insurance_company AS T1 JOIN customer AS T2 ON T1.customer_id  =  (SELECT customer_id FROM customer WHERE customer.customer_id  =  customer.customer_id)"}
{"question": "What are the names and locations of the hospitals in order of the number of beds", "query": "SELECT T1.hospital_name,  T2.city_name FROM hospitals AS T1 JOIN hospitals_city AS T2 ON T1.hid  =  T2.hid ORDER BY T2.population DESC"}
{"question": "(a novel question, about a table with different columns)", "query": "SELECT T1.column_name,  T1.column_type,  T1.column_length,  T1.column_precision,  T1.column_scale,  T1.column_nullable,  T1.column_default,  T1.column_key,  T1.column_extra FROM information_schema.columns AS T1 WHERE T1.table_name  =  \"table_name\""}
{"question": "How many students have a name that contain the expression \"Son\"?", "query": "SELECT T1.name FROM students AS T1 WHERE T1.name LIKE '%Son%'"}
{"question": "What is the average age of the employees of the company?", "query": "SELECT AVG(age) FROM employees"}
{"question": "Find the number of vehicles of each make and model", "query": "SELECT COUNT(*) AS total FROM vehicle WHERE make  =  'BMW' AND model  =  'X5'"}
{"question": "What are the names and ids of the students who are taking any engineering degree?", "query": "SELECT T1.student_id,  T1.name_first,  \"T1.name_last\" FROM student AS T1 JOIN student_degree AS T2 ON T1.student_id  =  T2.\"student_id\" WHERE T2.degree_id  =  \"engineering\""}
{"question": "Find the number of authors who have at least two articles in the same article type", "query": "SELECT count(*) AS \"number of authors\" FROM author AS T1 JOIN author_article AS T2 ON T1.id  =  T2.author_id WHERE T2.article_type  =  'Article' AND T2.id  =  T1.article_id"}
{"question": "What are the ids of colleges located in the city of Santa Clara?", "query": "SELECT T1.id FROM colleges AS T1 WHERE T1.city  =  'Santa Clara'"}
{"question": "What is the number of regions that have more than one branch of the department with the highest number of customers?", "query": "SELECT T1.branch_id,  T1.branch_name,  T1.branch_city,  T1.branch_state,  T1.branch_country,  T1.branch_phone,  T1.branch_fax,  T1.branch_email,  T1.branch_address,  T1.branch_zip,  T1.branch_manager,  T1.branch_hours,  T1.branch_latitude,  T1.branch_longitude,  T1.branch.branch_id,  T2."}
{"question": "What is the name and the age range of the student who has the most number of pictures?", "query": "SELECT T1.name,  T1.age FROM students AS T1 JOIN pictures AS T2 ON T1.student_id  =  T2.student_id WHERE T2.picture_id  =  (SELECT picture_id FROM pictures WHERE picture_name  =  \"student_id\" AND picture_type  =  \"student_id\")"}
{"question": "What are the names, last names, and birth months of the students who joined the club in July 2017?", "query": "SELECT T1.first_name,  T1.last_name,  T1.birth_month FROM student AS T1 JOIN club AS T2 ON T1.id  =  T2.id WHERE T2.joined_date  =  '2017-07-01'"}
{"question": "What are the names, last names, and ages of all the professors who work in the computer science department?", "query": "SELECT T1.lastname,  T1.name,  T1.\"age\" FROM professor AS T1 WHERE T1.department = \"computer science\""}
{"question": "How many of the following companies are not involved in the film industry? What are the names of the companies?", "query": "SELECT T1.company_name FROM company AS T1 WHERE NOT EXISTS (SELECT 1 FROM film_company AS T2 WHERE T1.company_id  =  T2.company_id)"}
{"question": "List the names of all movies about space exploration", "query": "SELECT movie_name FROM movies WHERE movie_name  LIKE \"%space exploration%\""}
{"question": "What is the model name of the product with the code \"M2-M4\"", "query": "SELECT model_name FROM product WHERE code  =  \"M2-M4\""}
{"question": "What is the total distance in miles for all the courses?", "query": "SELECT T1.course_id,  T2.distance FROM courses AS T1 JOIN courses_distance AS T2 ON T1.course_id  =  T2.course_id"}
{"question": "What are the names, status, and countries of all the astronauts?", "query": "SELECT T1.Name,  T1.status,  T1.country FROM astronauts AS T1 JOIN country AS T2 ON T1.country_id  =  T2._id WHERE T1.status  =  \"active\" ORDER BY T1.country ASC"}
{"question": "What is the total number of purchases by the customers in the country where the average annual temperature is 36°C?", "query": "SELECT T1.customer_id,  T1.total_amount_purchased,  T1.total_value_purchased FROM customers AS T1 WHERE T1.country_code  =  \"FR\" AND T1.avg_annual_temperature  =  \"36\""}
{"question": "What are the names, and the total sales for the customers below average in every city", "query": "SELECT T1.Name,  T1.Sales FROM Customer AS T1 JOIN ( SELECT T2.City,  T2.Sales FROM Customer AS T2 WHERE T2.Average_Sales  <  T1.Average_Sales ) AS T3 ON T1.City  =  T3.City GROUP BY T1.Name,  T2.Sales"}
{"question": "List the names of the employees who are the most experienced", "query": "SELECT T1.name FROM employees AS T1 JOIN experience AS T2 ON T1.employee_id  =  T2._id WHERE T2.experience  >  (SELECT MAX(T3.experience) FROM employees AS T3)"}
{"question": "Show all video games (from table) with type Collectible card game", "query": "SELECT * FROM video_games WHERE type = \"Collectible card game\""}
{"question": "What is the full name, hire data, and gender of the managers who is older than 35 years old?", "query": "SELECT name, hire_date, gender FROM managers WHERE hire_date  >  \"1995-01-01\" AND age  >  35"}
{"question": "What is the name, id and age of the student who has a score of 100 in mathematics?", "query": "SELECT T1.student_id,  T1.name,  T1.[age] FROM student AS T1 JOIN student_scores AS T2 ON T1.student_id  =  T2.[student_id] WHERE T2.score  =  100"}
{"question": "Find the age of the person whose birthday is in July", "query": "SELECT T1.age FROM Birthday AS T1 JOIN Person AS T2 ON T1.person_id  =  T2.person_id WHERE T2.birthday  =  \"July\""}
{"question": "What is the average speed of each student?", "query": "SELECT AVG(speed) FROM Student"}
{"question": "How many flights do I have?", "query": "SELECT count(*) AS \"count\" FROM flights"}
{"question": "Find the distinct number of customers", "query": "SELECT DISTINCT Customer_ID FROM Customers"}
{"question": "What are the names, ages, and cities of students who live in the area of the city", "query": "SELECT T1.firstname,  T1.lastname,  T1.city,  T1.age FROM student AS T1 WHERE T1.city  =  \"New York\""}
{"question": "Find the first names of students with major 55", "query": "SELECT T1.first_name FROM student AS T1 JOIN student_majors AS T2 ON T1.student_id  =  T2.student_id WHERE T2.major_id  =  55"}
{"question": "How many of the students are taking the first year course?", "query": "SELECT T1.student_id,  T1.course_id FROM student AS T1 JOIN course AS T2 ON T1.student_id  =  T2.[student_id] WHERE T2.course_id  =  1"}
{"question": "Find the names of the three most recent winners of the Tour de France", "query": "SELECT T1.name FROM winner AS T1 JOIN race AS T2 ON T1.winner_id  =  T2.[winner_id] WHERE T2.year  =  \"2012\" ORDER BY T1.name DESC LIMIT 3"}
{"question": "What are the average age of the women in the United States?", "query": "SELECT AVG(age) FROM person"}
{"question": "What is the date of the event where the maximum number of people attended?", "query": "SELECT date_of_event FROM Event WHERE count(*)  =  max(count(*)),"}
{"question": "What is the name and address of each student", "query": "SELECT T1.first_name,  T1.last_name,  T1.address_id,  T1.address_street,  T1.address_city,  T1.address_state,  T1.address_zip,  T1.address_country,  T1.address_phone,  T1.address_fax,  T1.address_email,  T1.address_web,  T1.address_notes,  T1.address_pager,  T1.address_home,  T1.address_work"}
{"question": "What is the total account balance of each customer in Texas", "query": "SELECT T1.account_balance,  T1.customer_name FROM customers AS T1 JOIN account_balances AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.customer_name  =  \"Texas\""}
{"question": "Find the names of the countries having the highest density of the population", "query": "SELECT T1.country_name,  T1.population_density FROM countries AS T1 JOIN people AS T3 ON T1.country_id  =  T3.country_id WHERE T3.population_density  >  T2.population_density"}
{"question": "What are the names that start with \"J\" and end with \"?\" and those that are not of the form \"J-J\"?", "query": "SELECT T1.Name FROM table_name AS T1 WHERE T1.Name LIKE 'J%' AND T1.Name NOT LIKE 'J-%'"}
{"question": "Find the names of the students who have the last name \"Gunn\"?", "query": "SELECT T1.first_name,  T1.last_name FROM students AS T1 WHERE T1.last_name  =  \"Gunn\""}
{"question": "What are the titles of the songs that are in the top 10 of the \"most listened to\" list?", "query": "SELECT name FROM track_listings AS T1 JOIN track AS T2 ON T1.track_id  =  T2._id WHERE T2.name  IN (SELECT name FROM track WHERE track_id IN (SELECT track_id FROM playlist_top_10))"}
{"question": "\"What is the average number of points for all players in the \"AIB\" club?\"", "query": "SELECT AVG(Points) FROM player_award WHERE player_id  =  \"AIB\""}
{"question": "What are the names in the table?", "query": "SELECT name FROM table"}
{"question": "What is the name and the address of the company that produces the widest range of products?", "query": "SELECT DISTINCT T1.name,  T1.address FROM company AS T1 WHERE T1.product_range  =  \"widest\""}
{"question": "What is the name, last name and location of all students who are studying the same course as you?", "query": "SELECT T1.student_id,  T1.course_id,  T1.name,  T1.lastname,  T1.location FROM student AS T1 JOIN course AS T2 ON T1.course_id  =  T2.id WHERE T2.name  =  \"Computer Science\""}
{"question": "What are the names, and ids of all the countries that have a country code \"CN\"?", "query": "SELECT T1.country_name,  T2.country_id FROM country AS T1 JOIN country_code AS T2 ON T1.country_id  =  T2.country_id WHERE T2.code  =  \"CN\""}
{"question": "What are the names, addresses, and phone numbers of all customers whose name contains \"Smith\"?", "query": "SELECT T1.Name,  T1.Address,  T1.Phone FROM Customer AS T1 WHERE T1.Name  LIKE  \"Smith\""}
{"question": "What are the names (first and last) of all the students who attended all classes in fall semester?", "query": "SELECT T1.student_id,  T1.first_name,  \"T1.last_name\" FROM students AS T1 WHERE T1.class_id  =  (SELECT class_id FROM classes WHERE semester  =  \"Fall\" AND year  =  \"2014\")"}
{"question": "What is the name of the customer who ordered the most number of products?", "query": "SELECT T1.customer_name FROM customer AS T1 WHERE T1.order_count  =  (SELECT max(T2.order_count) FROM customer AS T2)"}
{"question": "What is the number of people within the country with the highest population?", "query": "SELECT COUNT(*),  country_name FROM country WHERE population  =  (SELECT max(population) FROM country)"}
{"question": "(a novel question, about a track), after \"", "query": "SELECT name FROM track"}
{"question": "What is the first and last name of the customer that had visited the store in the last 6 months?", "query": "SELECT customer_name FROM customer WHERE date_last_visit >=  '2009-01-01' AND date_last_visit <=  '2009-12-31'"}
{"question": "Which students are not students of the same university?", "query": "SELECT T1.student_id,  T1.first_name,  T1.last_name,  T1.university_id,  T1.major_id,  T1.email,  T1.phone,  T1.address_id,  T1.city,  T1.state,  T1.zip_code,  T1.country,  T1.gender,  T1.year_of_birth,  T1.year_graduated,  T1.graduated_from_university,  T1."}
{"question": "What are the names and ages of the faculty members working at the university?", "query": "SELECT T1.name,  T1.age FROM faculty AS T1"}
{"question": "Find the number of students who have at least one dorm as their residence", "query": "SELECT count(*) AS total FROM student AS T1 JOIN dorm AS T2 ON T1.dorm_id  =  T2._id WHERE T1.dorm_id IS NOT NULL"}
{"question": "What are the first, last, and middle names of the students that are involved in the most student organizations?", "query": "SELECT T1.first_name,  T1.last_name,  T1.middle_name FROM students AS T1 JOIN student_organization AS T2 ON T1.id  = T2.student_id WHERE T2.organization_type  =  'Student Organization' GROUP BY T1.first_name, T1.last_name, T1.middle_name"}
{"question": "Find the id and year of the oldest driver who won a race at the Daytona International Speedway", "query": "SELECT T1.id,  T1.year FROM driver AS T1 WHERE T1.race_id  =  (SELECT T2.race_id FROM race AS T2 WHERE T2.year  =  T1.year)"}
{"question": "What are the complete names of the 3 instructors who teach all the courses?", "query": "SELECT T1.full_name FROM instructors AS T1 JOIN courses AS T2 ON T1.course_id  =  T2.course_id WHERE T2.course_id  =  (SELECT course_id FROM courses WHERE course_name  =  \"Introduction to Programming\")"}
{"question": "How many students are enrolled in the course \"Introduction to the Internet\" at the University of Texas at Austin?", "query": "SELECT DISTINCT stu_fname,  stu_lname FROM student WHERE stu_course  =  \"Introduction to the Internet\""}
{"question": "(a novel question, about a table other than the table containing the question)", "query": "SELECT T1.question_id,  T1.question,  T1.answer,  T1.correct_answer,  T1.question_type,  T1.question_id_fk,  T1.question_text,  T1.question_order,  T1.question_status,  T1.question_date,  T1.question_time,  T1.question_language,  T1.question_difficulty,  T1.question_correct_answer,  T1._id,  T1.question_author,"}
{"question": "Find the first names of the staff in the department with the highest number of employees", "query": "SELECT T1.name FROM employees AS T1 JOIN department AS T2 ON T1.department_id  =  T2.department_id WHERE T2.number_of_employees  =  \"highest number of employees\""}
{"question": "What are the names, and years of birth, of all students who have attended the first two years of a particular track?", "query": "SELECT T1.student_id,  T1.name,  T1.[year] FROM student AS T1 WHERE T1.track_id  =  '1' AND T1.year  =  '2'"}
{"question": "Find the average score of all courses", "query": "SELECT AVG(T1.score) FROM Course AS T1"}
{"question": "What are the names and genders of all students in the school called MBA?", "query": "SELECT T1.name,  T1.gender FROM students AS T1 WHERE T1.school_name  =  \"MBA\""}
{"question": "What are the names (first name and last name) of the people in the list: [Catherine, Jasmine, Janice, Justin, Kathleen,", "query": "SELECT FirstName, LastName FROM CUSTOMER WHERE CustomerID  =  \"Catherine\" OR CustomerID  =  \"Jasmine\" OR CustomerID  =  'Janice' OR CustomerID  =  'Justin' OR CustomerID  =  \"Kathleen\" OR CustomerID  =  \"'Kathleen'\";"}
{"question": "What are the names and salaries of all the people who work in the accounting department?", "query": "SELECT T1.first_name,  T1.last_name,  T1.salary FROM employees AS T1 WHERE T1.department  =  'Accounting'"}
{"question": "Find the last names of students in the group \"K\" that have the \"A\" in the name", "query": "SELECT T1.last_name FROM students AS T1 JOIN group AS T2 ON T1.group_id  =  T2.group_id WHERE T2.group_name  =  \"K\" AND T1.name  =  \"A\""}
{"question": "how many students have personal names that contain", "query": "SELECT T1.student_id FROM students AS T1 WHERE T1.first_name  LIKE '%' || T2.first_name || '%'"}
{"question": "What is the average age of students who live at the address \"1755 University Avenue\" and have secretary votes in the winter election cycle", "query": "SELECT T1.avg_age FROM student AS T1 JOIN address AS T2 ON T1.student_id  =  T2._id WHERE T2.address_id  =  \"1755 University Avenue\" AND T2.city  =  \"Chicago\" AND T2.state  =  \"IL\" AND T2.year  =  \"2012\" AND T2.month  =  \"1\" AND T2.day  =  \"1\" AND (T2.is_primary_address =  1 OR T2.is_secondary_address =  1)"}
{"question": "What are the ids and names of the employees who are using a computer with windows XP?", "query": "SELECT T1.employee_id,  T1.name FROM employee AS T1 JOIN computer_usage AS T2 ON T1.employee_id  =  T2._id WHERE T2.operating_system  =  \"Windows XP\""}
{"question": "What is the total amount of payment processed? Return the total amount of money", "query": "SELECT SUM(amount) FROM payment"}
{"question": "What is the average price of all items with a retail price of $99 or less?", "query": "SELECT AVG(price) FROM products WHERE price  >=  99"}
{"question": "What is the most common last name of the students who have at least one photo?", "query": "SELECT DISTINCT last_name FROM student_photos WHERE student_id  =  ( SELECT MAX(student_id) FROM student_photos GROUP BY student_id )"}
{"question": "What is the account balance of the customer with a credit score of 50 in the past 24 months?", "query": "SELECT SUM(Amount_Payment) FROM Pay_History WHERE customer_id = \"50\" AND date_of_payment > \"2011-01-01\" AND date_of_payment < \"2011-12-31\""}
{"question": "I'm a student and I'm on a diet", "query": "SELECT T1.name,  T1.diet_type,  T1.diet,  T1.dieting_duration,  T1.dietary_restrictions,  T1.dietetic_advice,  T1.dietitian_advice,  T1._id FROM diet AS T1 WHERE T1.student_id  =  \"$student_id\""}
{"question": "What is the first movie that Tom Hanks and Meg Ryan acted in", "query": "SELECT T1.title FROM movies AS T1 JOIN actors AS T2 ON T1.movie_id  =  T2._id WHERE T2.name  = 'Meg Ryan' AND T2.name  = 'Tom Hanks'"}
{"question": "What is the number and age of the players who are on the track team?", "query": "SELECT count(*) AS \"Number of players\",  T1.age AS \"Age of players\" FROM player AS T1 WHERE T1.team_id  =  \"Track\""}
{"question": "What are the first names of students who have the most friends?", "query": "SELECT T1.student_first_name FROM students AS T1 JOIN friends AS T2 ON T1.student_id  =  T2.student_id WHERE T2.student_id  =  (SELECT student_id FROM friends WHERE student_id  =  (SELECT first_name FROM students WHERE student_id  =  T1.student_id ))"}
{"question": "What is the name and id of the project that has the highest score?", "query": "SELECT T1.project_name,  T1.project_id FROM project AS T1 WHERE T1.score  =  (SELECT max(score) FROM project)"}
{"question": "What are the names in the index of the table \"Papers\"?", "query": "SELECT T1.name FROM index_name AS T1 WHERE T1.table_name = 'Papers'"}
{"question": "Find the names of students who only took one course", "query": "SELECT T1.student_name,  T1.course_code FROM student AS T1 JOIN course AS T2 ON T1.student_id  =  T2.student_id WHERE T1.course_code  =  \"1\""}
{"question": "What are the first name, last name, first name, and last name of all customers with ids 1-100?", "query": "SELECT T1.first_name,  T1.last_name,  T1.first_name,  \"T1.last_name\" FROM customer AS T1 WHERE T1.id  =  1-100;"}
{"question": "What is the average salary of all employees in the company?", "query": "SELECT AVG(salary) FROM employees"}
{"question": "What are the names, addresses and ages of all students in the database?", "query": "SELECT T1.name,  T1.address,  T1.age FROM student AS T1"}
{"question": "What is the name, department, and first name of the employee who has been with the company the most?", "query": "SELECT T1.first_name,  T1.last_name,  T1.name FROM employees AS T1 WHERE T1.id  =  (SELECT T2.id FROM employees AS T2 WHERE T2.department  =  'IT' AND T2.first_name  =  'John' AND T2.last_name  =  'Smith')"}
{"question": "Which one is the largest and smallest company in the world?", "query": "SELECT T1.Name,  T1.Country,  T1.Population FROM Country AS T1 WHERE T1.Population  >  0 AND T1.Population  <  1000000"}
{"question": "Find the names of companies that have received the most financing from the government", "query": "SELECT T1.company_name,  T1.total_amount FROM company AS T1 JOIN financing AS T2 ON T1.id  =  T2.id WHERE T2.type  =  'Govt'"}
{"question": "What are the first three letters of the first name of a female (sex is F) student in the table?", "query": "SELECT T1.first_name FROM student AS T1 WHERE T1.sex  =  'F' AND T1.first_name  LIKE 'A%'"}
{"question": "What are the names, order by birth date ascending, of the employees who have the most childless friends?", "query": "SELECT T1.name,  T1.birth_date FROM employees AS T1 JOIN friend_of_employee AS T2 ON T1.employee_id  =  T2.employee_id WHERE T2.friend_id  =  (SELECT friend_id FROM employee_friends WHERE employee_id  =  T1.employee_id) AND T2.friend_id  NOT IN (SELECT friend_id FROM friend_of_employee AS T3 WHERE T3.employee_id  =  (SELECT employee_id FROM employee_friends WHERE friend_id  =  T1"}
{"question": "What is the name & age of the youngest female in the party with id 3 and the party with the ID 1?", "query": "SELECT name,  age FROM party WHERE id  =  3 AND id  =  1"}
{"question": "What is the name in alphabetical order of the students who have at least one computer science degree?", "query": "SELECT T1.student_id,  T1.name_first,  count(*) FROM student AS T1 JOIN student_info AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) ASC"}
{"question": "What is the name and salary of the most recent President?", "query": "SELECT T1.name,  T1.salary FROM President AS T1 ORDER BY T1.salary DESC LIMIT 1"}
{"question": "What is the number of products that have not been sold?", "query": "SELECT count(*) AS total FROM product WHERE sold = 0"}
{"question": "What is the average quantity of products purchased?", "query": "SELECT AVG(Quantity) FROM Products"}
{"question": "What is the average height of the residents of the city of San Francisco?", "query": "SELECT avg(height) FROM Residents WHERE City = \"San Francisco\""}
{"question": "Find the id, name and number of events for which the player with id \"10\" is the leading scorer", "query": "SELECT T1.id,  T1.name,  T1.number FROM events AS T1 WHERE T1.player_id  =  \"10\" AND T1.score_leader  =  1"}
{"question": "How many types of weather are there?", "query": "SELECT T1.type FROM weather AS T1 JOIN weather_type AS T2 ON T1.weather_type_id  =  T2.weather_type_id"}
{"question": "What are the names, locations, and number of students of each department, ordered by the number of students?", "query": "SELECT T1.department_name,  T1.location,  T1.student_count FROM department AS T1 ORDER BY T1.student_count"}
{"question": "What are the first names of the professors from physics department with the highest number of publications?", "query": "SELECT T1.name FROM faculty AS T1 JOIN faculty_publications AS T2 ON T1.fid  =  T2.fid WHERE T2.pub_count  =  \"max\""}
{"question": "What is the name, id, and location of each restaurant and bar", "query": "SELECT T1.name,  T1.* FROM restaurant AS T1 JOIN bar AS T2 ON T1.restaurant_id  =  T2.restaurant_id WHERE T2.name  =  \"The Bar\""}
{"question": "What is the name and city of the person that has the most \"alive\" friends on Facebook?", "query": "SELECT T1.name,  T1.city FROM friends AS T1 JOIN friends_of_friends AS T2 ON T1.friend_id  =  T2.friend_id WHERE T1.status  =  'alive' AND T2.status  =  'alived' GROUP BY T1.name,  T2.friend_id HAVING count(T2.friend_id)  =  (SELECT count(*) FROM friends AS T3 WHERE T3.friend_id  =  'T1.friend_id')"}
{"question": "Create a new table with the following columns:", "query": "SELECT * FROM table_name"}
{"question": "What is the price of the movie \"The Hobbit\" with the highest average price?", "query": "SELECT T1.price FROM movies AS T1 JOIN movie_price AS T2 ON T1.id  = T2.movie_id WHERE T2.price  =  (SELECT AVG(price) FROM movie_price)"}
{"question": "What are the names which have a certain amount of words in them that use the number '7' or '8'?", "query": "SELECT name FROM Person"}
{"question": "Who is the youngest student in the database?", "query": "SELECT T1.age FROM Student AS T1 WHERE T1.age  =  (SELECT MIN(age) FROM Student)"}
{"question": "Return the name of the employee who has the highest salary", "query": "SELECT T1.firstname,  T1.lastname,  T1.salary FROM employee AS T1 JOIN salary AS T2 ON T1.id  =  T2.employee_id WHERE T2.salary  =  (SELECT max(T3.salary) FROM employee AS T3)"}
{"question": "What is the numberof cities in the United States with morethan 3 airports?", "query": "SELECT COUNT(*),  city_name FROM city_airport_link AS T1 JOIN city AS T2 ON T1.city_id  =  T2.city_id WHERE T1.airport_id  >  0 AND T1.city_id  >  0"}
{"question": "What are the names, age and id of all students who are in the same class as me?", "query": "SELECT T1.name,  T1.age,  T1.id FROM students AS T1 WHERE T1.class_id  =  \"1\""}
{"question": "Find the names of all the singers who have had the most amount of hits", "query": "SELECT name_first,  name_last,  count(*) FROM artist_singers WHERE hits  >  0 GROUP BY name_first,  name_second ORDER BY count(*) DESC;"}
{"question": "What are the ids, names and average of all the products in the database?", "query": "SELECT T1.product_id,  T1.product_name,  T1.avg_price FROM product AS T1 ORDER BY T1.product_id DESC"}
{"question": "How many products are in the 'Drugs' category and have a typical price over 1000?", "query": "SELECT COUNT(*) FROM products WHERE category = 'Drugs' AND price > 1000"}
{"question": "What is the name, checking balances, and savings balances (in dollars) of customers, ordered by the total checking and savings balances descending?", "query": "SELECT T1.balance,  T2.balance,  T3.* FROM customers AS T1 JOIN checking AS T3 ON T1.id  =  T3.id JOIN savings AS T2 ON T1.id  = T2.id ORDER BY T1.balance + T2.balance DESC"}
{"question": "What is the average price of all products with price more than 200?", "query": "SELECT AVG(price) FROM products WHERE price > 200"}
{"question": "What is the id, city, and state of the customer that has the highest income?", "query": "SELECT customer_id,  city,  state FROM customer WHERE income  =  (SELECT max(income) FROM customer)"}
{"question": "What are the names that are in all the documents?", "query": "SELECT document_name AS name FROM documents GROUP BY document_name HAVING count(*) =  (SELECT count(*) FROM documents GROUP BY document_name)"}
{"question": "What is the name and number of employees who work for the company whose revenue is 100?", "query": "SELECT T1.firstname,  T1.lastname,  T1.salary FROM employee AS T1 WHERE T1.company_id  IN ( SELECT T2.company_id FROM company AS T2 WHERE T2.revenue  =  100 )"}
{"question": "What are the course numbers, ordered by credits?", "query": "SELECT T1.course_id,  T1.credit_hours FROM course AS T1 ORDER BY credit_hours ASC"}
{"question": "Which product category has id 9?", "query": "SELECT name FROM product_category WHERE id  =  9"}
{"question": "What is the number in the string of first names of the customers who have a common last name with the customer 'Daniel'?", "query": "SELECT COUNT(*) FROM customer WHERE last_name  LIKE 'Daniel%' AND first_name  LIKE '%Daniel%'"}
{"question": "Find the ids of all products with the title \"snowboard\"", "query": "SELECT T1.product_id FROM product AS T1 WHERE T1.title  =  \"snowboard\""}
{"question": "What are the colors of the dog 'King'?", "query": "SELECT color FROM dog WHERE name  =  \"King\""}
{"question": "What are the names and ages of all the engineers", "query": "SELECT T1.name,  T1.age FROM engineer AS T1"}
{"question": "Return the age of the person who is called 'John Doe'", "query": "SELECT T1.age FROM Person AS T1 WHERE T1.name  = 'John Doe'"}
{"question": "Find the average speed of all roller coasters, using the average speed to normalize the speeds", "query": "SELECT AVG(speed) FROM roller_coaster"}
{"question": "What are the id, name, title, and location of each product with a page size smaller than 10", "query": "SELECT T1.id,  T1.name,  T1.title,  T1.location FROM products AS T1 WHERE T1.page_size  <  10"}
{"question": "What is the average salary for each department?", "query": "SELECT T1.dept_name,  T1.avg_salary FROM department AS T1 JOIN ( SELECT dept_id,  AVG(salary) AS avg_salary FROM employee_salary GROUP BY dept_id ) AS T2 ON T1.dept_id  =  T2"}
{"question": "Which cities have most 'hotel' type buildings?", "query": "SELECT T1.city,  T2.name FROM city AS T1 JOIN building_type AS T2 ON T1.city_id  =  T2._id WHERE T2.name  =  'hotel'"}
{"question": "How many courses do each of the following courses have?", "query": "SELECT course_id FROM courses WHERE course_name  =  \"Algebra\""}
{"question": "Give the names of all students in the university", "query": "SELECT T1.student_id,  T1.name_first,  'first' AS type FROM student AS T1 JOIN student_info AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY T1.name_first DESC"}
{"question": "What is the average length of all tracks?", "query": "SELECT AVG(LENGTH(TRACK)) FROM track"}
{"question": "What are the names, birthplaces, and ages of the students in the class of 2001?", "query": "SELECT T1.name,  T1.birthplace,  T1.age FROM students AS T1 WHERE T1.class_id  =  2001"}
{"question": "What is the difference between the maximum and minimum number of people in the store?", "query": "SELECT max(count(*)),  min(count(*)),  count(*) FROM customers"}
{"question": "What is the id and name of the customer who makes most orders?", "query": "SELECT T1.id,  T1.name FROM customer AS T1 JOIN order AS T2 ON T1.id  = T2.customer_id WHERE (T2.order_amount  >  T1.order_amount) AND (T2.order_date  >  T1.orderdate)"}
{"question": "How many students are under the age of 20?", "query": "SELECT count(*)  FROM student WHERE age  <  20"}
{"question": "What is the data type of the value of the field named \"age\" in the table named \"users\"?", "query": "SELECT T1.data_type FROM users AS T1 WHERE T1.age  =  \"age\""}
{"question": "What is the average salary of employees working at Apple?", "query": "SELECT AVG(salary) FROM employee WHERE company = 'Apple'"}
{"question": "Which colleges have the largest number of students?", "query": "SELECT T1.college_id,  T1.student_count FROM college AS T1 GROUP BY T1.college_id ORDER BY T1.student_count DESC"}
{"question": "Find the name of a course with a few courses", "query": "SELECT name FROM course WHERE course_id IN (SELECT course_id FROM course_course_relation WHERE course_id IN (SELECT DISTINCT course_id FROM course_course))"}
{"question": "Find the average number of miles driven by students whose average speed is greater than 100 miles per hour", "query": "SELECT AVG(miles) FROM student_driving_record WHERE speed > 100"}
{"question": "What is the number, average, and standard deviation of the amount of money spent in the last ten years", "query": "SELECT T1.amount,  T1.avg,  T1.stddev FROM ( SELECT T1.amount,  count(*) AS cnt,  sum(T1.amount) AS total FROM ( SELECT T1.amount  FROM transactions AS T1 WHERE T1.date  >  ( SELECT min(T2.date) FROM transactions AS T2 ) GROUP BY T1.amount ) AS T2 GROUP BY T1.amount ) T3 WHERE T3.cnt  >  0"}
{"question": "What are the ids for the movies that are not reviewed by ###", "query": "SELECT DISTINCT movie_id FROM movies WHERE movie_id NOT IN (SELECT movie_id FROM reviews)"}
{"question": "What is the average grade point of students with the last name Smith? (This example is invalid)", "query": "SELECT AVG(grade) FROM student WHERE last_name  =  \"Smith\""}
{"question": "List the number of employees per department", "query": "SELECT T1.department_id,  T2.name FROM employees AS T1 JOIN department AS T2 ON T1.department_id  =  T2.department_id"}
{"question": "Find the names of musicians using the last name \"Eddy\" and the first name \"Mitch\"", "query": "SELECT name FROM Musician WHERE last_name  =  \"Eddy\" AND first_name  =  \"Mitch\""}
{"question": "What are the names, titles, and salaries of the managers?", "query": "SELECT T1.full_name,  T1.title,  T1.salary FROM employees AS T1 JOIN managers AS T2 ON T1.manager_id  =  T2.id WHERE T2.full_name  =  \"John Smith\""}
{"question": "How many customers have the age in the interval [20,40]?", "query": "SELECT T1.age FROM customer AS T1 WHERE T1.age  >  20 AND T1.age  <  40"}
{"question": "(a question about a sql table), after \"Generated:\"", "query": "SELECT name FROM track AS T1 WHERE T1.track_id NOT IN (SELECT trackid FROM race AS T2)"}
{"question": "What kind of vehicle is the one that is made in the U", "query": "SELECT vehicle_type FROM vehicle WHERE vehicle_type = 'car'"}
{"question": "Find the names of all movies from the year 2000 or earlier that have been written by or co-written by Chris Jackson", "query": "SELECT T1.name FROM Movie AS T1 JOIN Writer AS T2 ON T1.movie_id  =  T2._id WHERE T2.name  =  \"Chris Jackson\""}
{"question": "What are the numbers of the different products whose description is \"sporty\"?", "query": "SELECT DISTINCT product_name FROM products WHERE product_description  =  \"sporty\""}
{"question": "Find the number of the hotels with the most number of rooms", "query": "SELECT count(*) AS count FROM hotel_rooms WHERE hotel_id  =  \"1\""}
{"question": "What is the first letter of the name of a customer whose phone number is 732-1234?", "query": "SELECT T1.first_name FROM customer AS T1 WHERE T1.phone_number  =  \"732-1234\""}
{"question": "Which are the top 3 types of car in the database?", "query": "SELECT T1.type,  T1.count FROM car_type AS T1 JOIN car_type_count AS T2 ON T1.type  =  T2.type WHERE T2.count  >  3 ORDER BY T1.type ASC"}
{"question": "What are the names that appear in the \"firstname\" column of the \"customer\" table?", "query": "SELECT DISTINCT first_name FROM customer"}
{"question": "What are the names, id, and city of the employees who work in the department, \"Sales\", and who have the department, \"Marketing\", as", "query": "SELECT T1.firstname,  T1.lastname,  T1.id,  T1.city,  T1.department_name,  T1.department,  T1.position,  T1.salary,  T1.start_date,  T1.end_date,  T1.start_time,  T1.end_time,  T1.phone,  T1.fax,  T1.email,  T1.address_1,  T1.address_2,  T1.address_3"}
{"question": "What is the name of the course that is taught by Andrew Taylor?", "query": "SELECT T1.course_id,  T1.title,  T1.instructor_id FROM course AS T1 JOIN teaches_as T2 ON T1.courseid  =  T2.id WHERE T2.instructor_id  =  \"Andrew Taylor\""}
{"question": "What are the names, ages and locations of the professors who teach at least one course about biology?", "query": "SELECT T1.name,  T1.age,  T1.location FROM faculty AS T1 WHERE T1.course_id  IN (SELECT T2.course_id FROM course AS T2 WHERE T2.name  =  \"Biology\")"}
{"question": "List all directors along and the number of films with each director", "query": "SELECT T1.director_name,  T1.film_count FROM director AS T1 JOIN film_director AS T2 ON T1.director_id  =  T2.director_id GROUP BY T1.director_id ORDER BY T1.film_count DESC"}
{"question": "What is the average, minimum, and maximum of the values of the movie with the id 100?", "query": "SELECT AVG(rating), MIN(rating), MAX(rating) FROM movies WHERE id = 100"}
{"question": "List the names of all the students who are in the psychology department", "query": "SELECT T1.name FROM student AS T1 JOIN department AS T3 ON T1.dept_id  =  T3.id WHERE T3.dept_name  = 'Psychology'"}
{"question": "Find the number of products that have been sold in 2016", "query": "SELECT count(*)  FROM products WHERE year(date_sold)  =  2016"}
{"question": "What is the average height of students?", "query": "SELECT avg(height) FROM students"}
{"question": "What is the capital of Wyoming?", "query": "SELECT T1.capital_name FROM states AS T1 JOIN states_capital AS T2 ON T1.state_id  =  T2.state_id WHERE T2.state_name  =  \"Wyoming\""}
{"question": "What are the names, prices, and numbers of customers who have a credit card?", "query": "SELECT T1.customer_name,  T1.customer_number,  T1.customer_credit_card_number,  T1.price,  T1.number_of_cards FROM customer AS T1 WHERE T1.customer_credit_card  =  'YES'"}
{"question": "What is the percentage of employees who are not on the top of the ladder?", "query": "SELECT T1.percentage,  T2.name FROM employees AS T1 JOIN employees AS T2 ON T1.manager_id  =  T2.\"manager_id\" WHERE T1.employee_id  =  T2.'employee_id' AND T1.employee_id  >  T2.employee_id"}
{"question": "What are the names, ordered by ids, of all products that are related to a specific company", "query": "SELECT T1.name FROM product AS T1 JOIN company AS T2 ON T1.company_id  =  T2._id WHERE T2.name  =  \"Company A\""}
{"question": "What does it mean if the name of a color is not found?", "query": "SELECT name FROM color WHERE name  =  \"red\""}
{"question": "What are the customers that have never left the country? Order by last name", "query": "SELECT T1.lastname FROM customers AS T1 JOIN customers_with_addresses AS T2 ON T1.\"customer_id\"  =  T2.\"customer_id\" AND T2.address_id  =  0 GROUP BY T1.lastname ORDER BY count(*) DESC;"}
{"question": "Find the ids of all products which are not in the category of \"car\"", "query": "SELECT T1.product_id FROM product AS T1 WHERE T1.category_id  =  \"car\" AND T1.product_id  NOT IN (SELECT T2.product_id FROM product AS t2 WHERE t2.category_id  =  T1.category_id)"}
{"question": "What is the average number of times that students have used an iPhone?", "query": "SELECT AVG(count) FROM (SELECT COUNT(*) FROM iPhone_usage) AS T1"}
{"question": "What is the name, details and data types of the \"homes\" in the \"homes\" table", "query": "SELECT T1.name,  T1.details,  T1.data_type FROM homes AS T1 WHERE T1.id  =  (SELECT id FROM homes WHERE name  =  \"homes\")"}
{"question": "What are the names, ages, and addresses of all employees who live in San Francisco?", "query": "SELECT T1.first_name,  T1.last_name,  T1.address_id,  T1.city,  T1.state_province_id,  T1.zip_code,  T1.phone_number,  T1.email_address,  T1.age,  T1.gender,  T1.marital_status,  T1.dob,  T1.ssn,  T1.ssn_type,  T1.ssn2,  T1.ssn3,  T1"}
{"question": "What are the names in the table \"customer_card_log\" and their corresponding \"customer_card_type_code\" values?", "query": "SELECT T1.Name,  T1.customer_card_type_code FROM customer_card_log AS T1 WHERE T1.Name  =  \"John Smith\""}
{"question": "What's your favorite color?", "query": "SELECT T1.color FROM colors AS T1 JOIN people AS T3 ON T1.color  =  T3.color WHERE T3.first_name  =  \"John\""}
{"question": "How many animals are there in each of the following places?", "query": "SELECT T1.animal,  T2.place_name FROM animal_place AS T1 JOIN place_name AS T2 ON T1.place_id  =  T2.place_id WHERE T2.place_name  =  \"Beijing\""}
{"question": "What is the name of the instructor who teaches the classes with the last name \"Swayn\" in the first name \"Janessa\"?", "query": "SELECT T1.first_name,  T1.last_name FROM instructor AS T1 JOIN classes AS T2 ON T1.id  =  T2.instructor_id WHERE T2.first_name  =  \"Janessa\" AND T2.last_name  =  \"Swayn\""}
{"question": "What is the name, age and phone number of the person who is the customer of this store?", "query": "SELECT name,  age,  phone_number FROM customer WHERE customer_id  =  \"1\""}
{"question": "What is the average age of students in a college or university?", "query": "SELECT AVG(Age) FROM student"}
{"question": "What is the number of employees who have worked in the city \"Taipei\" in the previous year?", "query": "SELECT COUNT(*) FROM employees AS T1 JOIN departments_locations AS T2 ON T1.emp_id  =  T2.[employee_id] WHERE T2.city  =  \"Taipei\""}
{"question": "What is the name, position, and email address of all professors?", "query": "SELECT T1.name,  T1.position,  T1.email FROM professors AS T1"}
{"question": "Find the name and age of the person with the most documents", "query": "SELECT T1.name,  T1.age FROM customer AS T1 JOIN customer_documents AS T2 ON T1.id  =  T2.customer_id WHERE T2.count  =  (SELECT max(T3.count) FROM customer_documents AS T3 WHERE T3.customer_id  =  (SELECT T4.id FROM customer AS T4 WHERE T4.id  =  T1.customer_id))"}
{"question": "Find the names of books that are written by a writer who has a wife and has two daughters", "query": "SELECT T1.book_name,  T2.book_author FROM books AS T1 JOIN books_authors AS T2 ON T1.book_id  =  T2.book_id WHERE T2.book_id  =  (SELECT T3.book_id FROM books AS T3 WHERE T3.book_author  =  \"John Doe\")"}
{"question": "What is the average age of the three people who are not in the class?", "query": "SELECT avg(age) FROM Person WHERE Class = \"Class\""}
{"question": "Find the customer who bought the most number of books on the same date", "query": "SELECT T1.customer_id,  T1.total_purchases FROM customer_purchases AS T1 JOIN customer AS T2 ON T1.user_id  =  T2.user_id WHERE T1.date  =  T2.date ORDER BY T1.date ASC LIMIT 1"}
{"question": "What are the countries that have more than one city?", "query": "SELECT DISTINCT country_name FROM country WHERE city  =  'city'"}
{"question": "What are the names, job titles, and salaries of all the professors who teach \"Art History\"?", "query": "SELECT T1.name,  T2.job_title,  T3.salary FROM professor AS T1 JOIN professor_job_title AS T2 ON T1.id  =  T2.id_professor JOIN salary_range AS T3 ON T2.salary_range_id  =  T3.salary_range_id WHERE T1.course_id  IN (SELECT T4.course_id FROM course AS T4) AND T1.name  =  \"John Smith\""}
{"question": "What is the average score of each student in the study group?", "query": "SELECT T1.student_name,  AVG(T2.score) FROM student AS T1 JOIN study_group AS T2 ON T1.student_id  =  T2.student_id"}
{"question": "What is the first year of the movie \"The Longest Day\"?", "query": "SELECT year FROM movie WHERE movie_id  =  'The Longest Day'"}
{"question": "find the age of the customer who has a credit card with the name 'John' and'smith' in the middle", "query": "SELECT customer_id,  customer_first_name,  customer_last_name,  age FROM customers WHERE customer_name  =  \"John\" AND customer_middle_name  =  \"Smith\""}
{"question": "List the names of the swimmers who have been on the winning teams", "query": "SELECT T1.name FROM swimmer AS T1 JOIN team AS T2 ON T1.team_id  =  T2._id WHERE T2.wins  =  1"}
{"question": "What are the names, age and number of children of the five people who live in the house with the same name", "query": "SELECT T1.first_name,  T1.last_name,  T1.age,  T1.children_count FROM people AS T1 WHERE T1.name  = 'John'"}
{"question": "Find the firsts names of all customers whose account number start with 14-9", "query": "SELECT T1.first_name FROM customer AS T1 WHERE T1.account_number  =  '14-9'"}
{"question": "Find the names of all students who were in the last tryout", "query": "SELECT T1.firstname,  T1.lastname FROM student AS T1 WHERE T1.id  IN ( SELECT T2.id FROM tryout AS T2 WHERE T2.date  =  '2016-09-01' )"}
{"question": "Give me the number of student who took the course QM-261", "query": "SELECT COUNT(*) AS \"count\" FROM student_course_enrollment AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2._id WHERE T1.Course_ID  IN (SELECT T3.Course_ID FROM course AS T3 WHERE T3.Course_Name  =  \"QM-261\")"}
{"question": "How many different kinds of colors are there?", "query": "SELECT DISTINCT color FROM colors"}
{"question": "(a novel question, about a the table): Find the table whose name contains the word \"table\"", "query": "SELECT * FROM table WHERE name LIKE \"table\""}
{"question": "Find the names of all students who took the class \"Introduction to Microprocessors\"", "query": "SELECT T1.name FROM student AS T1 JOIN class_registration AS T2 ON T1.stu_id  =  T2.[stu_id] WHERE T2.class_code  =  \"Introduction to Microprocessors\""}
{"question": "What is the name and nationality of the swimmers who have won (i", "query": "SELECT T1.name,  T1.nationality FROM swimmers AS T1 WHERE T1.nationality  =  \"Swiss\""}
{"question": "Find the number of products whose price is less than 150", "query": "SELECT count(*) AS c FROM products WHERE price < 150"}
{"question": "Find the name and number of the employee who has highest salary in the company", "query": "SELECT T1.employee_id,  T2.salary FROM employee AS T1 JOIN employee_salary AS T2 ON T1.employee_id  =  T2.\"employee_id\""}
{"question": "What is the name of the customer with the most credit card transactions?", "query": "SELECT customer_name,  count(*) AS total_transactions FROM customer_transactions GROUP BY customer_name ORDER BY total_transactions DESC LIMIT 1"}
{"question": "Find the names of actors that have a star rating of 5", "query": "SELECT T1.actor_first_name,  T1.actor_last_name FROM actors AS T1 JOIN stars AS T2 ON T1.actor_id  =  T2.actor_id WHERE T2.star_rating  =  \"5\""}
{"question": "List the count and ids of each product in all the orders and the name of the corresponding product", "query": "SELECT T1.product_name,  T1.product_id,  T1.quantity,  T1.price,  T1.total_price,  T1.total FROM orders AS T1 JOIN products AS T2 ON T1.product_id  =  T2:product_id WHERE T2.name  = 'product_name'"}
{"question": "How many different countries have no border with the country of the city whose population is the largest?", "query": "SELECT Country FROM country WHERE Country NOT IN (SELECT Country FROM city WHERE population  >  100000)"}
{"question": "What does the phrase \"The name of the game is to win\" mean?", "query": "SELECT T1.question_id,  T1.question,  T1.answer FROM question AS T1 JOIN question_answer AS T2 ON T1.question_id  =  T2.question_id WHERE T2.answer  =  \"The name of the game is to play\""}
{"question": "How many states do students live in?", "query": "SELECT DISTINCT state FROM student"}
{"question": "What are the total number of employees in the United States?", "query": "SELECT count(*) AS total FROM employees"}
{"question": "What is the average temperature in New York City, USA?", "query": "SELECT AVG(temperature) FROM weather_station WHERE city_name  =  \"New York City\""}
{"question": "What are the names in order of priority of a certain group of students", "query": "SELECT T1.first_name,  T1.last_name FROM students AS T1 WHERE T1.priority  =  '1' ORDER BY T1.first_name, T1.last_name"}
{"question": "What is the name of the company that produces the largest number of cars in the world?", "query": "SELECT company_name FROM company WHERE company_name  =  \"Ford\""}
{"question": "What is the average cost of the product with the smallest unit price?", "query": "SELECT T1.product_id,  T1.price,  T1.quantity,  T1.unit_price,  T1.unit_cost,  T1.total_cost FROM product AS T1 JOIN product_unit_price AS T2 ON T1.product_id  =  T2.product_id WHERE T2.unit_price  =  (SELECT min(unit_price) FROM product_unit_price)"}
{"question": "List the names and addresses of all students who took Physics", "query": "SELECT T1.fname,  T1.lname,  T1.address,  T1.city,  T1.state,  T1.zip,  T1.phone,  T1.email,  T1.major,  T1.year,  T1.gpa,  T1.major_code,  T1.year_code,  T1.gpa_code,  T1.major_name,  T1.year_name,  T1.gpa1,  T1.major1,  T1"}
{"question": "\"", "query": ""}
{"question": "Find the names and locations of all hotels with a hotel name containing \"hotel\"", "query": "SELECT name,  location FROM hotel WHERE name  LIKE  \"hotel%\""}
{"question": "Which customers have bought the most items, and what are their names?", "query": "SELECT T1.CustomerID,  T1.Name,  T1.NumItems FROM customer AS T1 JOIN order_items AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.CustomerID,  (T2.NumItems) ORDER BY T1.CustomerID, T2.NumItems DESC"}
{"question": "(a question about a sql table) Generate a table which shows the number of unique values of the columns \"year\" and \"name\"", "query": "(the sql query to answer the query), after \""}
{"question": "What are the names, addresses, and zip codes of the customers who live in the same zip code as the office of a company which makes and sells cars?", "query": "SELECT customer_name, customer_address, customer_zip FROM customers WHERE customer_zip = \"12345\""}
{"question": "Find the number of cities where have more than one bus service", "query": "SELECT count(*) AS \"number of cities\" FROM city_service AS T1 WHERE T1.city_id  =  (SELECT city_id FROM city_service AS T2 WHERE T2.service_id  =  T1.\"service_id\")"}
{"question": "Show the details of the table which has the largest number of records", "query": "SELECT T1.column_name,  T2.column_name,  T3.column_name,  T4.column_name,  T5.column_name,  T6.column_name,  T7.column_name,  T8.column_name,  T9.column_name,  T10.column_name,  T11.column_name,  T12.column_name,  T13.column_name,  T14.column_name,  T15.column_name,  T16.column_name,"}
{"question": "What is the sum of all the products' prices?", "query": "SELECT sum(price) FROM products"}
{"question": "What is the name and the place of birth of the only child in the family of a girl who has no siblings?", "query": "SELECT T1.name,  T1.place_of_birth FROM family AS T1 WHERE T1.family_id  =  (SELECT family_id FROM family WHERE family_id  =  (SELECT T2.family_id FROM family AS T2 WHERE T2.name  =  \"Amy\" ) ) AND T1.child_id  =  (SELECT child_id FROM family AS T3 WHERE T3.name  =  \"Aaron\" )"}
{"question": "What is the average age of all the managers in the company?", "query": "SELECT AVG(age) FROM manager"}
{"question": "What is the name, address and postcode of the student with the highest exam score in a particular year?", "query": "SELECT T1.name,  T1.address,  T1.postcode,  T1.score FROM student AS T1 WHERE T1.year  =  2008 AND T1.score  =  (SELECT MAX(score) FROM student WHERE year  =  2008)"}
{"question": "List all students who have a grade point of 3", "query": "SELECT T1.student_name,  T1.grade_point FROM student AS T1 JOIN grade AS T2 ON T1.student_id  =  T2.student_id WHERE T2.grade_point  =  3"}
{"question": "How many accounts have a balance of $100 or more?", "query": "SELECT T1.account_id,  T1.account_name,  T1.account_balance FROM account AS T1 WHERE T1.account_balance  >=  100"}
{"question": "Find the first name and last name of all customers who purchased something most recently", "query": "SELECT T1.first_name,  T1.last_name FROM customer AS T1 JOIN order AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.date_added  =  (SELECT max(date_added) FROM order)"}
{"question": "What is the average number of files per customer?", "query": "SELECT AVG(T1.file_count) FROM customer AS T1"}
{"question": "How many distinct first names of the employees are there?", "query": "SELECT DISTINCE T1.first_name FROM employees AS T1"}
{"question": "List the names of all directors of musicals that starred in \"The Producers\"", "query": "SELECT T1.director_name FROM director AS T1 JOIN cast AS T2 ON T1.director_id  =  T2.director_id JOIN play AS T3 ON T2.play_id  =  T3.play_id JOIN play_role AS T4 ON T3.play_role_id  =  T4.play_role_id WHERE T4.role_id  =  \"Producers\""}
{"question": "What are the details and details of the project with no outcomes", "query": "SELECT T1.project_name,  T1.project_description,  T1.project_start_date,  T2.project_end_date FROM projects AS T1 JOIN project_details AS T2 ON T1.project_id  =  T2.project_id WHERE T1.project_id  <>  T2.project_id"}
{"question": "List the names, emails, and phone numbers of the employees who are not associated with any projects", "query": "SELECT T1.firstname,  T1.lastname,  T1.email,  T1.phone FROM employee AS T1 JOIN project AS T2 ON T1.id  =  T2.employee_id WHERE T2.id  =  0;"}
{"question": "(a novel question, about a particular table)", "query": "SELECT name FROM track_races WHERE track_id  =  \"1\" AND race_id  =  \"1\";"}
{"question": "Find the names of the movies that have the least number of movies from the same director", "query": "SELECT DISTINCT movie_name FROM movie_actor_movie WHERE director_id  =  \"1\""}
{"question": "What are the names and gpa of the students in the first two classes, sorted by last name?", "query": "SELECT T1.last_name,  T1.first_name,  T1.gpa FROM student AS T1 WHERE T1.class_id  =  1 OR T1.class_id  >  1 ORDER BY T1.last_name, T1.first_name, T1.gpa"}
{"question": "What are the names, and IDs of all the people with an email address \"michael", "query": "SELECT T1.name,  T1.id FROM people AS T1 WHERE T1.email  =  \"michael\""}
{"question": "What are the names and ages of the professors who are in the literature department and have a Ph", "query": "SELECT T1.name,  T1.age FROM professors AS T1 JOIN faculty_department AS T2 ON T1.id  =  T2.professor_id WHERE T2.department_name  =  'Literature'"}
{"question": "Find the total number of movies for which the director has a credit in the film", "query": "SELECT T1.director_name,  T2.film_title,  T3.film_year,  T4.film_rating,  T5.film_length,  T6.film_release_date,  T7.film_director,  T8.film_writer,  T9.film_producer,  T10.film_actor,  T11.film_actor_id,  T12.film_actor_name,  T13.film_actor_birth_year,  T14.film_actor_birth_country,"}
{"question": "What are the first name and age of the student who is attending the University of Arizona?", "query": "SELECT T1.name,  T1.age FROM students AS T1 JOIN university AS T2 ON T1.student_id  =  T2._id WHERE T2.name  =  \"University of Arizona\""}
{"question": "What are the names, ranks, and salaries of the employees in the company, ranked by salary, in descending order of salary?", "query": "SELECT T1.firstname,  T1.lastname,  T1.salary,  T1.rank,  T1.department_code,  T1.department AS department_name,  T1.departmentcode AS department_code,  T1.position AS position_name,  T1.positioncode AS position_code,  T1.title AS title,  T1.titlecode AS titlecode,  T1.title_desc AS title_desc,  T1.title_code AS title_code,  T1.salary"}
{"question": "Show the name of all students who enrolled in at least three courses", "query": "SELECT T1.name FROM student AS T1 JOIN enrollments AS T2 ON T1.id  =  T2.id WHERE T2.courses  >  3"}
{"question": "What are the names, locations and prices of the products that cost at least 180, in ascending order?", "query": "SELECT T1.name,  T1.location,  T1.price FROM product AS T1 WHERE T1.price  >  180 ORDER BY T1.price ASC"}
{"question": "What are the names, salaries and age of all employees in the accounting department", "query": "SELECT name,  salary,  age FROM employees WHERE department_id  =  \"accounting\""}
{"question": "List the names of all the faculty who have not been to any conferences in the last 5 years", "query": "SELECT T1.lastname,  T1.firstname,  T2.name_first,  T2.name_last,  T2.email,  T2.phone,  T2.address_id,  count(*) FROM faculty AS T1 JOIN faculty_contact AS T2 ON T1.id  =  T2.faculty_id WHERE T2.name_first  =  'N' AND T2.name_last  =  'N' AND NOT EXISTS (SELECT 1 FROM conference_attendance AS T3 WHERE T3.fac"}
{"question": "What are the names and id of the student who has the highest number of classes taken", "query": "SELECT T1.name,  T1._id FROM student AS T1 WHERE T1.num_classes  =  ( SELECT max(T2.num_classes) FROM student AS T2 )"}
{"question": "What are the names and dates of birth of all students who are older than 50?", "query": "SELECT T1.name,  T1.date_of_birth FROM students AS T1 WHERE T1.age  >  50"}
{"question": "Find the name of all departments that do not have at least one employee", "query": "SELECT T1.dept_name FROM department AS T1 WHERE T1.emp_count  =  0"}
{"question": "What is the first email of the customers who are in age 20 to 25?", "query": "SELECT T1.email FROM customer AS T1 WHERE T1.age  =  '20' AND T1.age  >  '25'"}
{"question": "How many students attend the school?", "query": "SELECT count(*) from students"}
{"question": "(a novel question, about a) different table, after \"", "query": "SELECT T1.title,  T1.author,  T1.price,  T1.genre,  T1.publisher,  T1.year,  T1.isbn,  T1.isbn13,  T1.isbn10,  T1.isbn9,  T1.isbn8,  T1.isbn7,  T1.isbn6,  T1.isbn5,  T1.isbn4,  T1.isbn3,  T1.isbn2,  T1"}
{"question": "Find the names of all movies with the highest grossing year", "query": "SELECT T1.movie_name,  T1.movie_year FROM movie AS T1 JOIN (SELECT movie_name,  movie_year FROM movie ORDER BY movie_year DESC LIMIT 1) AS T2 ON T1.movie_name  =  T2.movie_name"}
{"question": "List the names of all cities that are in the states of Arizona and California", "query": "SELECT T1.city_name,  T2.state_name FROM city AS T1 JOIN state AS T2 ON T1.state_id  =  T2._id WHERE T2.state_name IN ('California', 'Arizona')"}
{"question": "What is the total capacity of all dorms in the university?", "query": "SELECT T1.capacity FROM dorm AS T1 JOIN building AS T2 ON T1.dorm_id  =  T2.dorm_id"}
{"question": "What are the names and salaries of all employees with the first name John?", "query": "SELECT T1.employee_id,  T1.firstname,  T2.salary FROM employees AS T1 JOIN employees AS T2 ON T1.employee_id  =  T2.employee_id WHERE T1.firstname  =  \"John\""}
{"question": "What are the names, ids and grades of the students who are in ECE class 10B?", "query": "SELECT T1.name,  T1.[id],  T1.grade FROM student AS T1 WHERE T1.class_id  =  10B;"}
{"question": "What are the names, genders, ages, and interests of all students?", "query": "SELECT T1.name,  T1.gender,  T1.age,  T1.interests FROM students AS T1"}
{"question": "List the names of all the employees who have a wife that works in the USA", "query": "SELECT T1.name FROM employee AS T1 JOIN employee AS T2 ON T1.id  =  T2.spouse_id WHERE T2.country_code  =  'USA'"}
{"question": "What are the names and id for all cars that are sold in the United States?", "query": "SELECT T1.id,  T1.name FROM cars AS T1 WHERE T1.country_code  =  'US'"}
{"question": "Find the number of countries that have a higher number of universities than the number of students", "query": "SELECT count(*)  FROM country WHERE num_university  >  num_student"}
{"question": "What is the title of the movie directed by the one who has won the most number of awards?", "query": "SELECT T1.title FROM film AS T2 JOIN film_awards AS T3 ON T2.Film_ID  =  (SELECT T3.Film_ID FROM film_awards AS T3 WHERE T3.award_type  =  \"Award\" AND T3.award_winner  =  T2.director_id)"}
{"question": "How many apartments have no kitchen?", "query": "SELECT COUNT(*) FROM apartment WHERE kitchen = 0"}
{"question": "Find the names and details of all the employees", "query": "SELECT T1.name,  T2.details FROM employee AS T1 JOIN employee_details AS T2 ON T1.employee_id  =  T2.employee_id"}
{"question": "Find the document type code for the document type \"Business Letter\"", "query": "SELECT document_type.document_type_code FROM document_type WHERE name  =  \"Business Letter\""}
{"question": "What are the names for the employees that have no manager?", "query": "SELECT T1.employee_name FROM employee AS T1 WHERE T1.manager_id IS NULL"}
{"question": "What is the name and address of all students who live in California?", "query": "SELECT T1.student_id,  T1.address FROM students AS T1 WHERE T1.state  =  'CA'"}
{"question": "Find the number of products that have been released by the company that has the highest revenue", "query": "SELECT count(*) AS total FROM product WHERE company_id  =  (SELECT company_id FROM company WHERE revenue  =  (SELECT max(revenue) FROM company))"}
{"question": "What is the name and number of floors of the building in which the room with the minimum area is located?", "query": "SELECT T1.floor_number,  T2.floor_name FROM building AS T1 JOIN room AS T2 ON T1.id  = T2.building_id WHERE T2.area  =  '0.00'"}
{"question": "What are the names, first names, and age of all students who are in the class of '2012'?", "query": "SELECT T1.first_name,  T1.last_name,  T1.age FROM students AS T1 WHERE T1.class_id  =  '2012'"}
{"question": "What are the names with a size greater than 80 or less than 40?", "query": "SELECT T1.name FROM people AS T1 WHERE T1.size  >  80 OR T1.size  <  40"}
{"question": "Find the names of students, instructors, and staff who take no courses", "query": "SELECT T1.firstname,  T1.lastname,  T1.email,  T1.phone,  T1.address_id,  T1.address_city,  T1.address_state,  T1.address_zip,  T1.address_country,  T1.address_street,  T1.address_type,  T1.address_latitude,  T1.address_longitude,  T1.addresses_id,  T1.courses_id,  T1.teaching_id,"}
{"question": "What is the name and address of the department with the highest number of students?", "query": "SELECT T1.name,  T1.address FROM department AS T1 WHERE T1.student_count  =  (SELECT max(T2.student_count) FROM department AS T2)"}
{"question": "What are the names, ages and genders of the members of the club \"Spring\"?", "query": "SELECT T1.name,  T1.age,  T1.gender FROM members AS T1 WHERE T1.club_id  =  \"Spring\""}
{"question": "What is the name of the dorm that has a TV Lounge as well as a Study Room?", "query": "SELECT dorm_name FROM dorm WHERE dorm_name  =  \"Dorm A\" AND dorm_type  =  \"Dorm\" AND dorm_type_id  =  \"Dorm A-1\" AND dorm_type_id_2  =  \"Dorm A1\" AND dorm_type_code  =  \"Dorm A2\" AND dorm_type_code_2  =  \"DORM A2\" AND dorm_type  = \"Dorm\" AND dorm_type  = 'Dorm' AND dorm_type  = 'dorm' AND dorm_type"}
{"question": "What is the name(s) of the student(s) who was/were in the room with the highest average score?", "query": "SELECT T1.name FROM Student AS T1 JOIN Student_Attributes AS T2 ON T2.student_id  =  T1.id WHERE T2.average_score  >  ( SELECT avg (T3.average_score) FROM Student_Attributes AS T3 WHERE T3.student_id  =  \"T1\" )"}
{"question": "What is the name for the third largest city in the country?", "query": "SELECT T2.city_name FROM cities AS T1 JOIN cities AS T2 ON T1.city_id  =  T2.\"city_id\" WHERE T1.city_name  =  \"New York\" AND T2.city_name  =  'Chicago'"}
{"question": "What are the names and id of the employees who were hired in the beginning of the year 2000?", "query": "SELECT T1.name,  T1.id FROM employee AS T1 WHERE T1.hired_date  =  '2000-01-01'"}
{"question": "What is the last and first name of the customer with a credit card whose name is Bob?", "query": "SELECT T1.customer_name,  T2.first_name,  'Bob' AS last_name FROM customer AS T1 JOIN customer_credit_card AS T2 ON T1.id  = T2.customer_id WHERE name  =  'Bob'"}
{"question": "How many students are in the building with the name \"El Dorado Heights\"?", "query": "SELECT count(*)  FROM students WHERE building_name  =  \"El Dorado Heights\""}
{"question": "What is the number of students who are involved in the most activities?", "query": "SELECT T1.activity_id,  T1.student_id FROM activities AS T1 JOIN students AS T2 ON T1.student_id  =  T2.[id] WHERE T2.student_id  =  (SELECT student_id FROM students WHERE student_id  =  (SELECT max(student_id) FROM activities))"}
{"question": "List the names of the authors who wrote \"A Scanner Darkly\", \"The Big Sleep\" and \"The Godfather\"", "query": "SELECT T1.author_name FROM book AS T1 JOIN book_author AS T2 ON T1.book_id  =  T2.book_id WHERE T2.author_id  =  \"1\""}
{"question": "(a question about a sql table) Show the names of colleges that have at least two students", "query": "SELECT T1.name FROM college AS T1 JOIN student AS T2 ON T1.college_id  =  T2._id WHERE T2.student_id  IN (SELECT T3.student_id FROM student AS T3 JOIN college AS T4 ON T3.college_id  = T4._id WHERE T4.name  =  \"College A\")"}
{"question": "Find the number of students who are students at the school without a cafeteria", "query": "SELECT count(*)  FROM students WHERE school_id  =  \"null\""}
{"question": "What are the first names, last names and birth dates of all students in your college?", "query": "SELECT T1.student_id,  T1.firstname,  T2.lastname,  T1.birth_date FROM student AS T1 JOIN student_info AS T2 ON T1.student_id  =  T2.student_id"}
{"question": "Find the ids of all students whose first name is \"Clement\"", "query": "SELECT T1.first_name,  T1.last_name,  T1.id FROM student AS T1 WHERE T1.first_name  =  \"Clement\""}
{"question": "what are the names of the athletes who have at least one event in which they have finished in the top 20?", "query": "SELECT T1.name FROM athletes AS T1 JOIN events AS T2 ON T1.athlete_id  =  T2.[athlete_id] WHERE T2.place  =  \"top 20\" AND T1.name  =  \"John Smith\""}
{"question": "Find the names of employees who have a first name and surname that are the same as the name of the company", "query": "SELECT T1.name FROM employee AS T1 JOIN company AS T2 ON T1.company_id  =  T2._id WHERE T2.name  =  \"Company Name\""}
{"question": "What are the names and first names of all the students who are over 30?", "query": "SELECT T1.first_name,  T1.last_name FROM students AS T1 WHERE age  >  30"}
{"question": "Which city has the highest per capita number of residents who are under the age of 18?", "query": "SELECT city_name,  COUNT(*) FROM city WHERE population  >  0 AND age  <  18 GROUP BY city_name ORDER BY COUNT(*) DESC LIMIT 1;"}
{"question": "What are the names that do not contain the word \"name\"?", "query": "SELECT T1.name FROM people AS T1 WHERE NOT EXISTS (SELECT * FROM people AS T2 WHERE T2.name = T1.name)"}
{"question": "Find the average number of students in each class with the same course section", "query": "SELECT T1.course_id,  T1.class_id,  T1.student_id,  AVG(T2.student_count) FROM class AS T1 JOIN class_section AS T2 ON T1.class_id  =  T2.class_id GROUP BY T1.class_id, T1.course_id"}
{"question": "What is the mean temperature in the cities with the highest temperature?", "query": "SELECT T1.city_name,  T1.city_temperature FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.\"city_id\" WHERE T2.city_temperature  >  (SELECT AVG(T3.city_temperature) FROM temperature AS T3 WHERE T3.city_id  =  \"T1.city_id\")"}
{"question": "Find the average age of the students in the club \"Tennis Club\"", "query": "SELECT avg(age) FROM students WHERE club_name  =  \"Tennis Club\""}
{"question": "What are the names and ids of all students?", "query": "SELECT T1.id,  T1.name_first,  t1.name_last FROM student AS T1"}
{"question": "What are the names and total number of students in each of the following majors:", "query": "SELECT T1.name,  count(*) FROM student AS T1 JOIN major AS T2 ON T1.major_id  =  T2._id GROUP BY T1.name"}
{"question": "A:\n\nHaskell, 118 bytes", "query": "SELECT * FROM (SELECT * FROM (SELECT * FROM ("}
{"question": "What are the names, ages, and professions of all customers of the company named \"X\"?", "query": "SELECT T1.name,  T1.age,  T1.profession FROM customer AS T1 WHERE T1.company_name  =  \"X\""}
{"question": "What are the names, number of employees, and salary of all the employees who work in the computer center?", "query": "SELECT T1.employee_name,  T2.employee_number,  T3.salary FROM employees AS T1 JOIN employees AS T2 ON T1.employee_id  =  T2.employee_id JOIN employees AS T3 ON T2.employee_id  =  'T3'"}
{"question": "What is the name of the actress who played a role in a movie called \"The Lord of the Rings: The Return of the King\"?", "query": "SELECT T1.actor_name FROM actor AS T1 WHERE T1.actor_id  =  (SELECT T2.actor_id FROM actor AS T2 WHERE T2.actor_name = \"Gandalf\")"}
{"question": "What are the names, and what are their ids, of students who took the course \"Intro to C++\"?", "query": "SELECT T1.student_id,  T1.first_name,  'Intro to C++' AS course FROM students AS T1 JOIN courses AS T2 ON T1.student_id  =  T2.student_id WHERE T2.name  =  \"Intro to C++\""}
{"question": "Find all the customers who live in the city with the highest median home value (by zipcode)", "query": "SELECT T1.city,  T1.zipcode,  T1.median_home_value FROM customer AS T1 JOIN zipcode AS T2 ON T1.zipcode  =  T2.zipcode WHERE T2.median_home_value  =  (SELECT MAX(median_home_value) FROM zipcode WHERE zipcode  =  T1.zipcode)"}
{"question": "What is the starting date of the oldest technicians?", "query": "SELECT T1.start_date,  T2.name FROM technicians AS T1 JOIN employees AS T2 ON T1.employee_id  =  T2._id WHERE T1.employee_id  >  0 AND T1.employee_id  <  T2.employee_id ORDER BY T1.start_date DESC"}
{"question": "What is the name, last name, and phone of the student that has a score of at least 95%?", "query": "SELECT name FROM student WHERE score  >  95"}
{"question": "What is the average number of seats in first class?", "query": "SELECT AVG(Seats) FROM Seats"}
{"question": "What are the names, first and last, of all the professors who have more than 2 students?", "query": "SELECT T1.first_name,  T1.last_name FROM professor AS T1 JOIN students AS T2 ON T1.professor_id  =  T2"}
{"question": "What are the names and addresses of all students who are not in the class of 2010?", "query": "SELECT T1.name,  T1.address FROM students AS T1 WHERE T1.class_code  <>  '2010'"}
{"question": "Find the number of schools that have a team that won the state championship in a given season", "query": "SELECT count(*) AS total FROM school AS T1 JOIN team AS T2 ON T1.school_id  =  T2._id WHERE T2.state_id  =  '1' AND T2.season  =  '2011'"}
{"question": "What are the names and ages of students who have the same age as a professor?", "query": "SELECT T1.student_name,  T2.student_age FROM student AS T1 JOIN student AS T2 ON T1.age  =  T2.age WHERE T1.name  = \"Professor\""}
{"question": "What is the average grade of the football player in the team \"Dolphins\"?", "query": "SELECT avg(grade) FROM player WHERE team_name  =  \"Dolphins\""}
{"question": "\"What are the names of students who are in the dorm with name \"Rancho Las Palmas\"?\"", "query": "SELECT T1.name FROM students AS T1 JOIN dorm AS T2 ON T1.dorm_id  =  T2_id WHERE T2.name  =  \"Rancho Las Palmas\""}
{"question": "Find the names of all distinct customers who started their first purchase after any purchase containing the phrase \"John Doe\" in their first name", "query": "SELECT DISTINCT T1.cust_name, T1.cust_id FROM customer AS T1 JOIN order AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_id  IN (SELECT T3.order_id FROM order AS T3 WHERE T3.cust_first_name  LIKE '%John%' AND T3.cust_last_name  LIKE '%Doe%')"}
{"question": "Which students are older than 20 in the dorm?", "query": "SELECT T1.stuid,  T1.fname,  T2.lname,  T1.age,  T1.gender,  T1.dormid,  T1.year,  T1.first_name,  T1.last_name,  T1.email,  T1.phone,  T1.address,  T1.city,  T1.state,  T1._id,  T1.dorm_id,  T1.dob,  T1.gender_id,  T1.race"}
{"question": "Find the first name of students who have taken classes with professor \"X\"", "query": "SELECT name FROM student AS T1 JOIN class AS T2 ON T1.student_id  =  T2.student_id WHERE T2.name  =  \"X\""}
{"question": "Find the names and types of the drugs that are used in the treatment of the disease \"AIDS\"", "query": "SELECT T1.name,  T1.[type] FROM drug_types AS T1 JOIN drug_disease_types AS T2 ON T1.type  =  T2.type WHERE T2.disease  =  \"AIDS\""}
{"question": "What is the name and city of the school near San Francisco, with the most students?", "query": "SELECT T1.name,  T1.city FROM schools AS T1 JOIN students AS T2 ON T1.school_id  =  T2._id GROUP BY T1.name,  T2.city HAVING count(*)  =  1"}
{"question": "How many students live in the female dorm (with gender F) of the male dorm?", "query": "SELECT T1.name,  T1.gender,  T1.dorm_id FROM dorm AS T1 WHERE T1.gender  =  'F' AND T1.dorm_id  =  'M'"}
{"question": "What are the names and IDs of all the customers with a credit card account?", "query": "SELECT T1.customer_name,  T2.customer_id FROM customers AS T1 JOIN customer_accounts AS T2 ON T1.id  = T2.customer_id"}
{"question": "What are the names and ages of the students who have a gpa of least than 3", "query": "SELECT T1.student_name,  T1.student_age FROM student AS T1 WHERE T1.gpa  <  3"}
{"question": "What is the first name of the student who has been on the school's newspaper more than any other student?", "query": "SELECT T1.student_first_name FROM students AS T1 JOIN newspaper_edits AS T2 ON T1.student_id  =  T2.student_id WHERE T2.edition_id  =  1 AND T2.edition_date  =  \"2010-01-01\" AND T2.edition_time  =  \"00:00:00\" AND T2.edition  =  \"First\""}
{"question": "List all products with the substring \"Basketball\" in its name", "query": "SELECT T1.product_name FROM product AS T1 WHERE T1.product_name LIKE '%Basketball%'"}
{"question": "What are the names, orders and ages of the students of Smith Hall?", "query": "SELECT T1.name,  T1.order,  T1.age FROM student AS T1 WHERE T1.hall_id = 'Smith Hall'"}
{"question": "What is the name is the company \"Motorcraft\"?", "query": "SELECT name FROM company WHERE name  =  \"Motorcraft\""}
{"question": "What are the names, ids, and first names of the people who have no siblings and are related to each other by a parent-child relationship?", "query": "SELECT T1.person_id,  T1.name_first,  (SELECT T2.name_first FROM person AS T2 WHERE T2.person_id  =  T1.person_id) AS name_second,  T1.person_id_parent,  T1.person_name_parent,  T1.parent_id,  T1.person_type,  T1.person_age,  T1.person_height,  T1.person_weight,  T1.person_hair_color,  T1.person_"}
{"question": "Find the number of books that are in the \"Reference\" section of the library", "query": "SELECT COUNT(*) FROM books WHERE book_type  =  \"Reference\""}
{"question": "What are the ids and names of all customers who have a balance of above $5", "query": "SELECT T1.id,  T1.name FROM customer AS T1 WHERE T1.balance  >  5"}
{"question": "What are the names and addresses of all the customers who were never late to work?", "query": "SELECT customer_name,  customer_address FROM customer WHERE customer_id  NOT IN (SELECT customer_id FROM customer_late_for_work)"}
{"question": "Show the name and age of the student with the maximum average age", "query": "SELECT T1.name,  T1.age FROM students AS T1 WHERE T1.average_age  =  (SELECT avg(T2.average_age) FROM students AS T2 WHERE T2.name  =  T1.name)"}
{"question": "What is the number of the last names of the presidents whose name begins with 'W'", "query": "SELECT DISTINCT T1.lastname FROM president AS T1 WHERE T1.firstname  LIKE \"W%\""}
{"question": "What are the names, count, and percentage of each city in the US?", "query": "SELECT T1.city,  T1.name,  T1.count,  T1.percentage FROM city AS T1 GROUP BY T1.city"}
{"question": "What are the names, ids and salaries of the professors who teach both \"database\" and \"data structure\" courses?", "query": "SELECT T1.name,  T1.id,  T1.salary FROM professor AS T1 JOIN professor_courses AS T2 ON T1.Professor_id  =  T2C.Professor_id JOIN course AS T3 ON T2.Course_id  =  T3.Course_id WHERE T3.name  =  \"database\" AND T3.name  =  'data structure'"}
{"question": "What are the names, dates of birth and gender of students who are on scholarship and have major 693?", "query": "SELECT T1.name,  T1.date_of_birth,  T1.gender FROM students AS T1 JOIN scholarship AS T2 ON T1.student_id  =  T2.student_id WHERE T2.major_code  =  \"693\""}
{"question": "What is the number in the bank account with id 100?", "query": "SELECT T1.id,  T1.name,  T1.[value] FROM bank_account AS T1 WHERE T1.id  =  100"}
{"question": "What are the names and ages of all students who have an average GPA of 3", "query": "SELECT T1.name,  T1.age FROM students AS T1 WHERE T1.GPA  =  3"}
{"question": "What are the names, locations, and dates of birth of all students who have at least one of the three most common names?", "query": "SELECT T1.first_name,  T1.last_name,  T1.date_of_birth FROM students AS T1 WHERE T1.first_name  IN ( 'John', 'Mary', 'Robert' ) AND T1.last_name  IN ( 'Smith', 'Jones', 'Brown' ) AND T1.date_of_birth  IN ( '01/01/1990', '01/01/1991', '01/01/1992' )"}
{"question": "What are the names and birthdays of the students in the music department?", "query": "SELECT student_name,  birthday FROM students"}
{"question": "Find the name, price, and sale price of the product that has the highest price after the first 20 sales", "query": "SELECT T1.name,  T1.price,  T1.sale_price FROM products AS T1 WHERE T1.price  >  20 ORDER BY T1.price DESC LIMIT 1"}
{"question": "List the names and the id of products that have been purchased by at least 2 customers", "query": "SELECT T1.product_name,  T1.product_id FROM product AS T1 JOIN purchase AS T2 ON T1.product_id  =  T2.[product_id] WHERE T2.customer_id  >  2"}
{"question": "What is the name and id of the patient with the highest blood pressure?", "query": "SELECT T1.name,  T1.id FROM patient AS T1 WHERE T1.blood_pressure  >  (SELECT max(T2.blood_pressure) FROM patient AS T2)"}
{"question": "What are the names, locations and prices of all items?", "query": "SELECT name,  location,  price FROM items"}
{"question": "What is the official names and statuses of the city with the most residents", "query": "SELECT city_name,  city_status FROM city WHERE city_population  =  \"most\""}
{"question": "Count the number of cinema in the city", "query": "SELECT count(*)  FROM cinema"}
{"question": "What are the names, age, salaries and departments of all staff who are not teachers?", "query": "SELECT T1.name,  T1.age,  T1.salary,  T1.department_id FROM staff AS T1 WHERE T1.type  <>  'T' ORDER BY T1.name"}
{"question": "Find the emails of customers who has made a purchase of the product with the highest revenue in 2016", "query": "SELECT T1.email FROM customer AS T1 JOIN purchase AS T2 ON T1.customer_id  ="}
{"question": "What are the names, positions, and salaries of all students who are also instructors?", "query": "SELECT T1.first_name,  T1.last_name,  T1.position,  T1.salary FROM Students AS T1 JOIN Instructor AS T2 ON T1.id  = T2.student_id"}
{"question": "What are the product names of the products where the maximum number of customers buy them?", "query": "SELECT product_name FROM product WHERE count(*)  =  (SELECT count(*) FROM order_items WHERE product_id  =  product_id)"}
{"question": "What is the minimum and maximum number of complaints filed by each customer", "query": "SELECT T1.customer_id,  T1.complaint_count FROM customer_complaints AS T1 WHERE T1.customer_id  IN (SELECT T2.customer_id FROM customer_complaints AS T2 GROUP BY T2.customer_id HAVING count(*)  >  1)"}
{"question": "How many students are there in the last year that has been studied by a teacher who has taught in a school for more than 3 years?", "query": "SELECT T1.student_id,  T1.name,  T1.grade,  T1.school_code,  T1.year,  T1.teacher_id FROM student AS T1 JOIN school AS T2 ON T1.school_id  =  T2._id WHERE T2.teacher_id  =  'T1' AND T1.year  =  'T2.year' AND T1.grade  =  'T2.grade' AND T1.school_code  =  'T2.school_code'"}
{"question": "What are the names, locations and products of the enzymes that have any 'inhibitor' interaction? Return the id", "query": "SELECT T1.enzyme_id,  T1.name,  T1.location,  T1.product_id,  T1.inhibitor_id FROM enzymes AS T1 WHERE T1.product_id  IN (SELECT T2.product_id FROM products AS T2 WHERE T2.name  LIKE '%inhibitor%')"}
{"question": "What are the last names of all students who are part of a club?", "query": "SELECT T1.lastname FROM students AS T1 JOIN clubs AS T2 ON T1.student_id  =  T2._id WHERE T2.club_id  =  '1'"}
{"question": "What are the ids and names of all employees who are in the company that has the most employees?", "query": "SELECT T1.employee_id,  T1.name FROM employee AS T1 JOIN employee_department AS T2 ON T1.employee_id  =  T2._id WHERE T2.company_id  =  ( SELECT max(T3.company_id) FROM employee_department AS T3 )"}
{"question": "What are the first, middle, and last names of all customers of the restaurant?", "query": "SELECT T1.first_name,  T1.middle_name,  T1.last_name FROM customers AS T1 WHERE T1.customer_id  IN (SELECT customer_id FROM customers WHERE customer_name  =  \"Restaurant\")"}
{"question": "What is the number of athletes with the last name \"Jones\"?", "query": "SELECT count(*) AS count FROM athlete WHERE last_name  =  \"Jones\""}
{"question": "What are the names and salaries of employees working in London", "query": "SELECT T1.first_name,  T1.last_name,  T1.salary FROM Employees AS T1 JOIN Employees AS T2 ON T1.manager_id  =  T2.\"manager_id\" WHERE T1.city  =  \"London\""}
{"question": "Find the first name, last name, and age of all employees", "query": "SELECT T1.firstname,  T1.lastname,  T1.age FROM employees AS T1"}
{"question": "What is the name, gender, and age of the customer who ordered the least amount?", "query": "SELECT T1.customer_first_name, T1.customer_last_name, T1.customer.age FROM customers AS T1 JOIN orders AS T2 ON T1.order_id  =  T2.order_id WHERE T2.order_total  <  \"0.00\""}
{"question": "Find the names of two cities with the maximum number of residents, sorted in descending order of population", "query": "SELECT T1.city,  T1.city_population FROM city AS T1 ORDER BY T1.city_population DESC LIMIT 2"}
{"question": "What are the names, locations, and ages of all employees", "query": "SELECT T1.name,  T1.location,  T1.age FROM employee AS T1"}
{"question": "What is the average weight of the people who live in the city with id=1?", "query": "SELECT avg(Weight) FROM people WHERE city_id  =  1"}
{"question": "What are the names and ids of the students who are not studying any CS courses?", "query": "SELECT T1.student_id,  T1.name_first,  count(*) FROM student AS T1 GROUP BY T1.student_id HAVING count(T1.student_id)  =  0"}
{"question": "What is the last-name of the individual that has a phone number \"555-1234\"?", "query": "SELECT T1.last_name FROM Person AS T1 WHERE T1.phone_number  =  \"555-1234\""}
{"question": "What is the highest salary of a player in NBA?", "query": "SELECT MAX(salary) FROM player"}
{"question": "Which project has less than 5 records on file?", "query": "SELECT project_id,  count(*) FROM Project_Projects GROUP BY project_id HAVING count(*)  <  5"}
{"question": "What are the names and first names of all students?", "query": "SELECT T1.first_name,  T1.name FROM Student AS T1 JOIN Student_Course AS T2 ON T1.id  = T2.student_id"}
{"question": "(give the names of wrestlers and their termination moves)", "query": "SELECT T1.wrestler_name,  T1.termination_move FROM wrestler AS T1 WHERE T1.wrestler_id  =  (SELECT T2.wrestler_id FROM wrestler AS T2 WHERE T2.wrestler_name  =  T1.wrestler_name)"}
{"question": "Find the number of times each city has been the location of a major league baseball game", "query": "SELECT T1.city,  count(*) FROM games AS T1 JOIN cities AS T2 ON T1.city  =  T2.city WHERE T2.name  =  \"New York\" GROUP BY T1.city"}
{"question": "What is the sum of the salaries of the staff in the company?", "query": "SELECT T1.salary FROM employee AS T1 JOIN company AS T3 ON T1.company_id = T3.company_id WHERE T3.company_name = \"ABC\""}
{"question": "What are the ids of the students who have been suspended for at least one day?", "query": "SELECT T1.student_id FROM students AS T1 JOIN suspension AS T2 ON T1.student_id  =  T2.student_id WHERE T2.days_suspended  >  1"}
{"question": "Find the total monthly income for each department", "query": "SELECT T1.dept_name,  T1.total_income FROM department AS T1 GROUP BY T1.dept_name"}
{"question": "Find the names and ages of employees who have the last name Smith", "query": "SELECT T1.name,  T1.age FROM employee AS T1 WHERE T1.last_name  =  \"Smith\""}
{"question": "What are the names and addresses of all the customers who have a credit card?", "query": "SELECT T1.customer_name,  T2.address FROM customer_record AS T1 JOIN customer_address_history AS T2 ON T1.id  = T2.id WHERE T2.credit_card  =  'Yes'"}
{"question": "What is the name, age and address of the employee whose birthday is May 10, 1995?", "query": "SELECT name,  age,  address FROM employee WHERE birthday  =  \"May 10, 1995\""}
{"question": "What is the name and age of the woman with the most number of books?", "query": "SELECT T1.name,  T1.age FROM people AS T1 JOIN books AS T2 ON T1.person_id  =  T2.[person_id] WHERE T2.book_id  =  (SELECT max(book_id) FROM books)"}
{"question": "What is the city of the university with the most students?", "query": "SELECT T1.city FROM university AS T1 JOIN student AS T2 ON T1.university_id  =  T2.university_id WHERE T2.student_id  =  (SELECT T3.student_id FROM student AS T3 WHERE T3.university_id  =   T1.university_id )"}
{"question": "(a question about a sql table) (Find the names of the employees who have the most complaints", "query": "SELECT T1.name FROM employees AS T1 JOIN complaints AS T2 ON T1.id  =  T2.employee_id WHERE T2.complaint_count  >  (SELECT max(T3.complaint_count) FROM employees AS T3)"}
{"question": "What are the names, places, and average age of students of the school in the city with city code \"MAY\"", "query": "SELECT T1.name,  T1.place,  T2.age FROM student AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id WHERE T1.city_code  =  \"MAY\""}
{"question": "Give the name of the department of the student who has not been enrolled in the department", "query": "SELECT T1.student_id,  T1.name_first,  'not_enrolled' AS status FROM student AS T1 WHERE T1.student_id  =  '1'"}
{"question": "Find all the locations with at least 5 stations", "query": "SELECT T1.location_name,  T1.location_id,  T1.location_type,  T1.location_latitude,  T1.location_longitude,  T1.location1_id,  T1.distance_from_location1,  T1.location2_id,  T1.T2.location_id,  T2.distance_from_location2,  T2.distance_to_location1,  T2.distance_between_locations,  T2.distance_of_the_two_locations,"}
{"question": "How many customers have only one product and each product has a distinct price?", "query": "SELECT customer_id,  COUNT(DISTINCT product_id) FROM products GROUP BY customer_id HAVING count(DISTINCT product_id  =  1) =  count(*)"}
{"question": "Find the number of patents that each scientist is working on", "query": "SELECT count(*) AS cnt FROM patent_details WHERE scientist_id  =  \"1\""}
{"question": "Find the name of products that have the largest and smallest number of sales", "query": "SELECT T1.product_name,  T2.sales FROM product_history AS T1 JOIN product_sales AS T2 ON T1.product_id  =  T2._id WHERE T2.sales  =  (SELECT MAX(sales) FROM product_sales) AND T2.sales  =  \"(SELECT MIN(sales) FROM product_sales)\""}
{"question": "What is the name or id of the customer who has the most transactions?", "query": "SELECT customer_id,  count(*) FROM transactions GROUP BY customer_id HAVING count(distinct(customer_id))  =  1"}
{"question": "\"What are the names of cities with population below 1000?\"", "query": "SELECT T1.city_name FROM cities AS T1 WHERE T1.population  <  1000"}
{"question": "What are the id, name and salary of the employee who has the highest salary?", "query": "SELECT T1.id,  T1.name,  T1.salary FROM employee AS T1 WHERE T1.salary  =  ( SELECT MAX(T2.salary) FROM employee AS T2 )"}
{"question": "Find the names and ages of all players who played in the first round", "query": "SELECT T1.name,  T1.age FROM player AS T1 JOIN game AS T2 ON T1.player_id  =  T2._id WHERE T2.round  =  1"}
{"question": "Find the total number and percentage of students who are smokers", "query": "SELECT count(*) AS total,  (count(*) / total) * 100 AS percent FROM students"}
{"question": "Find the players whose ids are not in (the list given in the answer to the question of type \"generate\")", "query": "SELECT T1.player_id FROM player_award AS T1 JOIN player AS T2 ON T1.team_id  =  T2.team_id WHERE T2.player_id NOT IN (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,"}
{"question": "What is the average number of minutes the plane takes to fly from London to the USA?", "query": "SELECT AVG(flight_duration) FROM flight"}
{"question": "For each college, compute the average total number of authors", "query": "SELECT T1.college_id,  T2.name,  T3.total_authors FROM colleges AS T1 JOIN authors AS T2 ON T1.college_id  =  T2.college_id JOIN authors AS T3 ON T1.college_name  =  T3.college_name WHERE T2.name  = 'University of California'"}
{"question": "Find a description of a product", "query": "SELECT description FROM product"}
{"question": "(an example of some or all task items):", "query": "SELECT T1.address_type_code FROM customer_accounts AS T1 JOIN customer_addresses AS T2 ON T1.account_id  =  T2.account_id WHERE T2.address_type_code  =  \"Residential\""}
{"question": "List the names of the schools with average enrollment below 1000", "query": "SELECT T1.school_name,  T1.enrollment FROM school AS T1 JOIN school_enrollment AS T2 ON T1.school_id  =  T2.school_id WHERE T2.enrollment  >  1000"}
{"question": "(a novel question, about a question about a sql table)", "query": "SELECT COUNT(*) AS total FROM students WHERE (personal_name LIKE '%son%' OR personal_name LIKE '%son%' AND personal_name LIKE '%son%')"}
{"question": "Show the names of all products whose quantity is equal to or greater than 10 but less than or equal to 20", "query": "SELECT T1.product_name,  T1.product_price,  T1.product_quantity FROM products AS T1 WHERE T1.product_quantity  >  10 AND T1.product_quantity  <  20"}
{"question": "What are the top 3 teams who are involved in the most basketball games?", "query": "SELECT T1.team_id,  T1.team_name,  T1.team_city,  T1.team_abbreviation,  T1.team_logo,  T1.team_rank,  T1.team_record,  T1.team_wins,  T1.team_losses,  T1.team_points,  T1.team_games,  T1.team_gaps,  T1.team_last_game,  T1.team_next_game,  T1.game_id"}
{"question": "What is the average temperature of all cities in the world?", "query": "SELECT AVG(temperature) FROM weather;"}
{"question": "What is the score of the film \"The Incredibles\" (2004)?", "query": "SELECT SUM(score) FROM film WHERE film_title = \"The Incredibles\""}
{"question": "What is the total number of books?", "query": "SELECT count(*)  FROM book"}
{"question": "(a question about a sql table) What are the names of the departments that have the highest number of employees?", "query": "SELECT T1.Department_name FROM Department AS T1 JOIN Employee AS T2 ON T1.department_id  =  T2._department_id WHERE T2.employee_id  =  (SELECT MAX(employee_id) FROM Employee)"}
{"question": "Give the names of the employees on board the ferry \"City of Sydney\"", "query": "SELECT name FROM Person JOIN Ferry AS T1 ON T1.person_id  =  Person.person_id WHERE T1.name  =  \"City of Sydney\""}
{"question": "What are the names, last names and phone numbers of employees of the company \"Lennart Båge\"?", "query": "SELECT T1.last_name,  T1.first_name,  (T1.phone_number) FROM employees AS T1 WHERE T1.company_id  =  \"Lennart Båge\""}
{"question": "Find the names of all the people in descending order of their ages", "query": "SELECT T1.firstname,  T1.lastname,  T1.age FROM person AS T1 ORDER BY T1.age DESC"}
{"question": "The question has been updated", "query": "SELECT T1.name,  T2.city,  T3.state,  T4.country,  T5.population,  T6.latitude,  T7.longitude,  T8.year,  T9.month,  T10.day,  T11.hour,  T12.minute,  T13.second,  T14.year_range,  T15.year_range_start,  T16.year_range_end,  T17.year_range_start_date,  T18.year_range_"}
{"question": "List the names of the cities with the name of the person who is the mayor of the city", "query": "SELECT name FROM city WHERE mayor_name  =  \"John Doe\""}
{"question": "Find the number of students in each class at University of California, Berkeley", "query": "SELECT T1.class_name,  T1.num_students FROM class AS T1 JOIN student AS T2 ON T1.class_id  =  T2.[class_id] GROUP BY T1.class_id"}
{"question": "What is the average rating of the products with the id 1,2,5 and 6?", "query": "SELECT AVG(rating) FROM products WHERE id  =  1,2,5,6"}
{"question": "\"What are the names and numbers of the customers who are currently looking at a new car, but have not made a decision yet?\"", "query": "SELECT T1.customer_name,  T2.order_date FROM customers AS T1 JOIN order_history AS T2 ON T1.id  = T2.customer_id WHERE NOT EXISTS (SELECT T3.customer_id FROM order_history AS T3 WHERE T3.customer_id  =  T2.customer_id AND T3.order_date  =  T2.order_date)"}
{"question": "Find the names of books that are being read by everyone under the age of 10", "query": "SELECT name FROM Book WHERE age  <  10"}
{"question": "What is the average age of employees who work at the company called \"The Bank\" in California?", "query": "SELECT AVG(age) FROM employees WHERE company_name  =  \"The Bank\" AND state_code  =  \"CA\""}
{"question": "How many students have taken calculus?", "query": "SELECT count(*) AS num_students FROM student WHERE major  =  \"Calculus\""}
{"question": "What are the names, ordered by popularity, of the 10 most popular songs about love?", "query": "SELECT T1.name FROM song_lyrics AS T1 JOIN song_text AS T2 ON T1.song_id  =  T2._id WHERE T2.text  =  'love' ORDER BY T1.popularity DESC"}
{"question": "List all employees who have a first name that begins with the letter \"S\"", "query": "SELECT T1.employee_id,  T1.firstname,  T2.lastname FROM employee AS T1 JOIN employee_info AS T2 ON T1.employee_id  =  T2.employee_id WHERE T1.firstname  LIKE 'S%'"}
{"question": "What is the name the student with id 20?", "query": "SELECT T1.name FROM student AS T1 WHERE T1.id  =  20;"}
{"question": "What is the name of the customer who has an account id with the substring \"1234\"?", "query": "SELECT customer_id FROM customers WHERE customer_id LIKE \"%1234%\""}
{"question": "Find the names of students who are not in any course", "query": "SELECT T1.name FROM student AS T1 WHERE NOT EXISTS (SELECT T2.name FROM course AS T2 WHERE T2.id  =  T1.course_id)"}
{"question": "List the name and ids of all the departments", "query": "SELECT T1.id,  T1.name FROM departments AS T1"}
{"question": "What is the name (first and last name) of the customer with id 4560596484842?", "query": "SELECT name FROM Customer WHERE id  =  4560596484842"}
{"question": "Find the first name, last name, and department for the students who have a GPA of 3", "query": "SELECT T1.student_id,  T1.first_name,  'GPA',  T1.last_address,  T1.last_city,  T1.last_state,  T1.last_zip,  T1.last_country,  T1.last_phone,  T1.last_email,  T1.last_major,  T1.last_year,  T1.last_gpa,  T1.last_grade,  T1.last_advisor,  T1.last_department"}
{"question": "How many trips do you make each year?", "query": "SELECT T1.trip_id,  T1.trip_date,  T1.trip_time,  T1.trip_distance,  T1.trip_type,  T1.trip_status,  T1.trip_driver_id,  T1.driver_name,  T1.trip_start_time,  T1.driver_phone,  T1.trip_end_time,  T1.passenger_count,  T1.trip_id,  (T1.trip_distance / 60) AS trip_duration,"}
{"question": "What are the names, id, and salary of the employees who have been with the company for at least 2 years?", "query": "SELECT T1.name,  T1.id,  T1.salary FROM employee AS T1 WHERE T1.joining_date  >  DATE_SUB(NOW(), INTERVAL 2 YEAR)"}
{"question": "What are the name, ID, and last name of all students with birthdays in June?", "query": "SELECT T1.name,  T1.id,  T1.last_name FROM students AS T1 WHERE T1.birthday  =  \"June\""}
{"question": "How many students have a college of arts and sciences degree?", "query": "SELECT count(*)  FROM students WHERE college_of_arts_and_sciences_degree IS NOT NULL"}
{"question": "Find the id of customers who have rented a car during the last week", "query": "SELECT T1.id FROM customer AS T1 JOIN car_rental AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.date_rented  >=  DATE_SUB(NOW(), INTERVAL 1 WEEK)"}
{"question": "What is the lowest temperature of all days in the winter of 2002?", "query": "SELECT MIN(T.temp) FROM TEMP AS T"}
{"question": "What are the names (first and last) of all students in the MBA program at the University of Texas?", "query": "SELECT T1.name FROM students AS T1 JOIN student_course AS T2 ON T1.id  =  T2.stu_id WHERE T2.course_name  =  \"MBA\""}
{"question": "What is the name or id of the person who has the highest rating?", "query": "SELECT T1.name,  T1.id FROM customer AS T1 JOIN rating AS T2 ON T1.customer_id  ="}
{"question": "Find the number of employees who have not been paid for at least one week", "query": "SELECT count(*) AS \"count\" FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM employee_payments WHERE employee_id =  \"employee_id\")"}
{"question": "Find the average number of pages for each customer", "query": "SELECT AVG(T2.pages) FROM Customer_Policies AS T1 JOIN Customer AS T2 ON T1.customer_id  =  T2"}
{"question": "List all the departments", "query": "SELECT T1.dept_name FROM department AS T1 JOIN department_structure AS T2 ON T1.department_id  =  T2.department_id WHERE T2.structure_type  =  \"Department\""}
{"question": "What is the number of years of all contracts signed with a specific customer?", "query": "SELECT T1.contract_year FROM contract AS T1 JOIN customer AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_name  =  \"John Smith\""}
{"question": "Give the names of the countries with the highest average temperature", "query": "SELECT country_name,  AVG(temperature) FROM country GROUP BY country_name ORDER BY AVG(temperature) DESC"}
{"question": "(a novel question, in some other language/dialect/colloquial or some other domain), after \"", "query": "SELECT name FROM track_info WHERE track_id NOT IN ( SELECT track_id FROM race )"}
{"question": "What is the total amount of payment processed by Amazon?", "query": "SELECT SUM(Amount) FROM Payment"}
{"question": "Show the names of all students who have an id of 1 or 2 or 3", "query": "SELECT T1.name FROM student AS T1 WHERE T1.id  =  1 OR T1.id  =  2 OR T1.id  = 3"}
{"question": "Show the name of the person who has been working on the project with the most minutes", "query": "SELECT T1.name FROM Person AS T1 JOIN Employee_Projects AS T2 ON T1.employee_id  =  T2.employee_id WHERE T2.minutes  =  (SELECT max(T3.minutes) FROM Employee_Projects AS T3 WHERE T3.employee_id  =  (SELECT T4.employee_id FROM Employee_Projects AS T4 WHERE T4.employee_id  =  'T5' AND T4.minutes  =  T3.minutes))"}
{"question": "What is the average age of the students who are in the sports and music courses?", "query": "SELECT AVG(age) FROM student WHERE course_id  =  \"sports\" OR course_id  =  \"music\""}
{"question": "What is the total number of flights and the average price of each one?", "query": "SELECT T1.flight_id,  T2.price FROM flights AS T1 JOIN prices AS T2 ON T1.flight_id  =  T2.flight_id"}
{"question": "(a novel question, about a question about a question about a table), after \"question\"", "query": "(the sql query to answer the query), after \""}
{"question": "What is the name, id and the number of transactions of the customer that bought the most number of wines?", "query": "SELECT T1.name,  T1.id,  T1.total_transactions FROM customers AS T1 JOIN transactions AS T2 ON T1.name  =  T2.name WHERE T2.total_transactions  >  (SELECT MAX(T3.total_transactions) FROM customers AS T3)"}
{"question": "What is the average revenue from business to business transactions?", "query": "SELECT AVG(amount) FROM business_to_business_transaction"}
{"question": "Find the name and id of the student who has the largest number of siblings", "query": "SELECT T1.name,  T2.id FROM student AS T1 JOIN family AS T2 ON T1.sibling_id  =  T2._id WHERE T1.sibling_count  >  T2.sibling_count"}
{"question": "What are the names and ids of all employees in the company Bob works for?", "query": "SELECT T1.employee_id,  T1.name_first,  \""}
{"question": "Find all the names of the cities that are in the USA, have at least 10,000 people, and have a population density of more than 100 people per", "query": "SELECT T1.city_name FROM city AS T1 JOIN city_population AS T2 ON T1.city_id  =  T2._id WHERE T2.population  >  10000 AND T2.population_density  >  100"}
{"question": "What is the name and age of the player who has the most goals?", "query": "SELECT name,  age FROM player WHERE goals  =  (SELECT max(goal) FROM player)"}
{"question": "Find the name of all the employees that are in the accounting department", "query": "SELECT T1.name FROM employee AS T1 JOIN department AS T3 ON T1.dept_id  =  T3.id WHERE T3.dept_name  = 'Accounting'"}
{"question": "What is the name and role of the employee who has worked the longest year in the company", "query": "SELECT employee_name,  employee_role FROM employee WHERE employee_role  =  \"Manager\" AND employee_age  =  (SELECT max(employee_age) FROM employee)"}
{"question": "What are the names, gender and ages of all students in the database?", "query": "SELECT T1.name,  T1.gender,  T1.age FROM students AS T1"}
{"question": "How many students do they have?", "query": "SELECT count(*) AS \"number of students\" FROM students"}
{"question": "Show the names and details of all students in the course", "query": "SELECT T1.name,  T2.details FROM student AS T1 JOIN course AS T2 ON T1.id  =  T2.id"}
{"question": "Show the names of all the employees who received a promotion over the last two years", "query": "SELECT T1.name FROM employees AS T1 JOIN promotion AS T2 ON T1.emp_id  =  T2.emp_id WHERE T2.year  >  2000 AND T2.year  <  2010"}
{"question": "Find the number of customers who are single", "query": "SELECT COUNT(*) FROM customers WHERE status ='single'"}
{"question": "How many people in your family have a special skill?", "query": "SELECT T1.name,  T1.\"special skill\" FROM family AS T1"}
{"question": "Find the names of the employees who are in the company in the following order: \"John, Robert, Bob, Alice, John, John, John, John", "query": "SELECT DISTINCT T1.name FROM employees AS T1 JOIN employee_department AS T2 ON T1.employee_id  =  T2.employee_id WHERE T2.department_id  =  \"John\" ORDER BY T1.name"}
{"question": "What is the name and phone number of all the employees who are responsible for the accounting department?", "query": "SELECT T1.employee_name,  T2.employee_phone FROM employees AS T1 JOIN employee_department AS T2 ON T1.employee_id  =  T2.employee_id"}
{"question": "Find the number and names of the cities with the highest number of students", "query": "SELECT city_name,  count(*) AS \"Number of students\" FROM student_cities GROUP BY city_name ORDER BY \"Number of students\" DESC LIMIT 10"}
{"question": "Find the titles of albums by the artist 'AC/DC'?", "query": "SELECT T1.title FROM album AS T1 JOIN artist AS T2 ON T1.artist_id  =  T2.id WHERE T2.name  =  \"AC/DC\""}
{"question": "Find what is the average of the ratings of the customer's products", "query": "SELECT AVG(rating) FROM product_reviews"}
{"question": "What is the average temperature of the city LA in 2008?", "query": "SELECT AVG(temperature) FROM weather_data WHERE city = \"LA\" AND year = 2008"}
{"question": "What are the names, dates of birth and city of residence for the ten members of the 'Hedda Gabler' cast?", "query": "SELECT T1.name,  T1.dob,  T1.city FROM cast AS T1 WHERE T1.cast_id  =  \"10\""}
{"question": "What is the average length of a document in the database?", "query": "SELECT AVG(LENGTH(document_name)) FROM document"}
{"question": "Find the names of students in the class \"History of the World\", ordered by first name, and show the average grade", "query": "SELECT T1.first_name,  T1.last_name,  T1.avg_grade FROM student AS T1 JOIN class_history_of_the_world AS T2 ON T1.student_id  =  T2._id GROUP BY T1.first_name, T1.last_name ORDER BY T1.first_name  ASC"}
{"question": "What are the names and photos of all the people who work in a particular restaurant?", "query": "SELECT T1.name,  T1.photo FROM employees AS T1 WHERE T1.work_place  =  \"The Cheesecake Factory\""}
{"question": "Which states are home to the most number of professional athletes?", "query": "SELECT state_code,  count(*) FROM state_team_members WHERE state_code  =  \"AL\" OR state_code  =  \"AK\" OR state_code  = \"AZ\" OR state_code  =   \"AR\" OR state_code  =    \"CA\" OR state_code  =     \"CO\" OR state_code  =      \"CT\" OR state_code  =       \"DE\" OR state_code  =         \"FL\" OR state_code  =          \"GA\" OR state_code  =           \"HI\" OR state_code"}
{"question": "What are the names for the four types of product?", "query": "SELECT T1.Type,  T2.Name FROM products AS T1 JOIN product_type AS T2 ON T1.Product_Type_ID  =  T2.Product_Type_ID"}
{"question": "What are the names and first names of all the students at the university?", "query": "SELECT student_name,  first_name FROM students"}
{"question": "Which city has the most number of concerts?", "query": "SELECT T1.city_name,  T1.city_id FROM city AS T1 JOIN concerts AS T2 ON T1.city_id  =  T2.city_id WHERE T2.city_name  =  \"New York\""}
{"question": "List the names of the cities of the United States", "query": "SELECT T1.city_name FROM city AS T1 WHERE T1.state_province_code  =  \"AL\""}
{"question": "What are the top 2 movies of actors \"Leonardo DiCaprio\" and \"George Clooney\"?", "query": "SELECT * FROM movies WHERE actor_id IN (SELECT actor_id FROM actors WHERE first_name  =  \"Leonardo DiCaprio\" AND last_name  =  \"DiCaprio\") AND actor_id IN (SELECT actorid FROM actors WHERE first_name = \"George Clooney\" AND last_name  = \"Clooney\")"}
{"question": "What are the ids and names of the authors of the books in the library?", "query": "SELECT T1.author_id,  T1.author_name FROM authors AS T1 JOIN books AS T2 ON T1.author_id  =  T2.author_id"}
{"question": "What are the names and age of the students who are good at swimming?", "query": "SELECT T1.student_name,  T1.age FROM student AS T1 WHERE T1.swimming_score  >  0"}
{"question": "Count the number of different cities", "query": "SELECT DISTINCT city FROM city_table"}
{"question": "Find the names of the students who have a high grade average", "query": "SELECT T1.student_id,  T2.grade_average FROM students AS T1 JOIN grades AS T2 ON T1.id  =  T2.id WHERE T1.id  =  (SELECT T3.id FROM students AS T3 WHERE T3.id  =  T1.id AND T3.grade_average  =  T2.grade_average)"}
{"question": "What is the population of the city that has the most people on the planet?", "query": "SELECT T1.city_id,  T1.population FROM cities AS T1 WHERE T1.population  =  (SELECT max(T2.population) FROM cities AS T2)"}
{"question": "What is the smallest number of products that can be packed into four or more boxes?", "query": "SELECT MIN(Qty) FROM Products"}
{"question": "What is the average score of the students who have taken both the class \"English\" and the class \"History\"?", "query": "SELECT avg(Scores) FROM Student_Scores WHERE Class_ID  =  \"English\" AND Class_ID  =  \"History\""}
{"question": "Find the names and descriptions of the photos of the students who took the picture of the \"basketball court\" in the gym", "query": "SELECT T1.name,  T1.description FROM photos AS T1 JOIN students AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"basketball court\""}
{"question": "What is the name and number of each of your customers?", "query": "SELECT T1.customer_id,  T1.name,  T1.phone_number FROM customer AS T1"}
{"question": "What is the name/id of the book that is the author of all textbooks?", "query": "SELECT name FROM book WHERE book_id  =  \"1\""}
{"question": "What is the name and the number of times that each of the books has been rented in the last three years?", "query": "SELECT T1.book_id,  T1.rental_count FROM book AS T1 JOIN rental AS T2 ON T1.book_id  =  T2.[book_id] WHERE T2.year  =  '2009' AND T2.month  =  '1' AND T2.day  =  '1' AND (T2.rental_count  =  0 OR T2.rental_count  >  1)"}
{"question": "(i.e. \"What is the first name and last name (last name is optional) of the customer that has email \"mylucy@", "query": "SELECT T1.first_name,  T1.last_name,  T1.email FROM customer AS T1 WHERE T1.email  =  \"mylucy@\";"}
{"question": "What is the name and id of the employee who has the highest salary?", "query": "SELECT T1.name,  T1.id FROM employees AS T1 WHERE T1.salary  =  (SELECT max(T2.salary) FROM employees AS T2)"}
{"question": "What is the average score of the students in the university?", "query": "SELECT AVG(score) FROM student"}
{"question": "How many customers have made at least one purchase over the last three months?", "query": "SELECT COUNT(*) FROM customer_purchases WHERE date_added  >  DATE_SUB(NOW(), INTERVAL 3 MONTH)"}
{"question": "Find the first name, last name, and age of all students who are practicing basketball", "query": "SELECT T1.first_name,  T1.last_name,  T1.age FROM students AS T1 WHERE T1.activity  =  \"basketball\""}
{"question": "What are the account details of the customer who ordered the least amount in total?", "query": "SELECT T1.account_number,  T1.account_type,  T1.account_balance,  T1.account_status,  T1.account_date,  T1.account_name,  T1.account_city,  T1.account_state,  T1.account_zip,  T1.account_country,  T1.account_phone,  T1.account_fax,  T1.account_email,  T1.account_credit_limit,  T1.account_debit_limit,  T1"}
{"question": "List the names of the books with title 'The'", "query": "SELECT T1.title FROM book AS T1 WHERE T1.title  =  \"The\""}
{"question": "What are the forenam", "query": "SELECT * FROM students WHERE first_name LIKE \"%John%\""}
{"question": "What are the names, genders, and ages of the students in your class?", "query": "SELECT T1.name,  T1.gender,  T1.age FROM student AS T1 WHERE T1.class_id  =  \"1\""}
{"question": "\"What are the names of the tourist attractions", "query": "SELECT T1.Name FROM tourist_attraction AS T1 WHERE T1.Name  =  \"The Great Wall of China\""}
{"question": "The name of the customer who bought the most items", "query": "SELECT T1.name FROM customer AS T1 WHERE T1.total_items  =  ( SELECT max(T2.total_items) FROM customer AS T2 )"}
{"question": "What are the names (first and last) of students who attend the University of Wisconsin-Madison?", "query": "SELECT T1.first_name,  T1.last_name FROM students AS T1 WHERE T1.university_id  =  'UW'"}
{"question": "What is the average price range of each star ratings for each hotel?", "query": "SELECT AVG(transaction_amount),  SUM(transaction_amount) FROM Financial.transaction WHERE star_rating  =  \"5\""}
{"question": "Find the name of a manager who has a car named \"Abbott\"", "query": "SELECT T1.manager_name FROM Employee AS T1 JOIN Employee_Car AS T2 ON T1.id  = T2.manager_id WHERE T2.car_name  =  \"Abbott\""}
{"question": "What are the names, birthdays, and IDs of all employees in the company?", "query": "SELECT T1.first_name,  T1.last_name,  T1.id FROM employees AS T1 WHERE T1.id  IN (SELECT T2.id FROM employees AS T2 WHERE T2.last_name  =  \"Smith\" AND T2.first_name  =  \"John\" AND T2.id  <  T1.id)"}
{"question": "Find the average number of hours per week that they play computer games", "query": "SELECT AVG(hours_per_week) FROM (SELECT T1.hours_per_week FROM Tasks AS T1 JOIN Tasks AS T2 ON T1.task_id  =  T2.task_id WHERE T1.task_id  IN (SELECT task_id FROM Tasks WHERE task_name  =  \"Play computer games\") AND T2.task_id  IN ( SELECT task_id FROM Tasks WHERE  task_name  =  \"Play video games\") ) AS T3"}
{"question": "List the id and name of those students who are not in the class", "query": "SELECT T1.id,  T1.name FROM student AS T1 WHERE T1.id NOT IN (SELECT T2.id FROM class AS T2)"}
{"question": "Find the average grade of students in each of the classes of the department", "query": "SELECT T1.class_id,  AVG(T2.grade) FROM class AS T1 JOIN student_class AS T2 ON T1.class_id  =  T2.class_id GROUP BY T1.class_id"}
{"question": "What are the names (first and last) of students who have already signed the agreement?", "query": "SELECT T1.student_name,  T1.student_fname,  T1.[student_lname] FROM students AS T1 JOIN agreement AS T2 ON T1.student_id  =  T2.[student_id]"}
{"question": "Which is the least expensive hotel, with the greatest number of reviews?", "query": "SELECT T1.hotel_id,  T1.hotel_name,  T1.hotel-price,  T1.hotel -reviews FROM hotel AS T1 WHERE T1.hotel_id  =  (SELECT MIN(hotel_id) FROM hotel) AND T1.hotel_name  =  (SELECT MIN(name) FROM hotel) AND T1.[hotel-price]  =  (SELECT MIN(price) FROM hotel) AND T1.-reviews  =  (SELECT MIN(reviews) FROM hotel)"}
{"question": "What is the name of the player whose most frequent moves were \"a\", \"d\", and \"f\" in the game Street Fighter 2?", "query": "SELECT T1.name FROM player AS T1 JOIN player_move_history AS T2 ON T1.name  =  T2.name WHERE T2.move  =  \"a\" OR T2.move  =  'd' OR T2.move  = 'f'"}
{"question": "What are the people that are named Caitlin and Abigail and live in the city of Boston?", "query": "SELECT T1.name FROM people AS T1 WHERE T1.city  =  'Boston' AND T1.first_name  =  'Caitlin' AND T1.last_name  =  'Dowd' AND T1.first_last_name  =  'C.D.' AND T1.last_first_name  =  'A.D.'"}
{"question": "Which countries have more students than USA?", "query": "SELECT country_code,  count(*) FROM student WHERE country_code  =  \"USA\" GROUP BY country_code ORDER BY count(*)"}
{"question": "Find the name, full name, and gender of the female employee whose birthday is in May (M/F)", "query": "SELECT T1.full_name,  T2.gender,  T3.birthday FROM Employees AS T1 JOIN Birthday AS T2 ON T1.employee_id  =  T2.\"employee_id\" JOIN Employee_Birthday AS T3 ON T2.birthday  =  T3.birthday WHERE T1.full_name  =  \"Mary\" AND T3.birthday  =  \"May\""}
{"question": "What are the id, first name, and surname of the driver who has the smallest lap time?", "query": "SELECT T1.id,  T1.first_name,  T1.surname FROM driver AS T1 WHERE T1.lap_time  =  (SELECT min(T2.lap_time) FROM driver AS T2)"}
{"question": "What are the names in descending order of age for the students?", "query": "SELECT T1.Fname,  T1.Lname,  T1.age FROM Student AS T1 ORDER BY T1.age DESC"}
{"question": "Find all students taught in a particular school", "query": "SELECT T1.stuid,  T2.course_id FROM student AS T1 JOIN teaches AS T3 ON T1.stuid !=  T3.stuid AND T1.stuid  = T3.stuid JOIN course AS T2 ON T3.course_id  =  'T3'"}
{"question": "Which movie has been made by the company \"Lionsgate\" and what is the name of the movie and the number of people who watched this movie in the", "query": "SELECT T1.movie_name,  T1.movie_id,  T2.count_viewed FROM movies AS T1 JOIN view_count AS T2 ON T1.movie_id  =  T2.movie_id WHERE T2.name  =  \"Lionsgate\""}
{"question": "Find all the distinct values of a given column", "query": "SELECT DISTINCT column_name FROM table_name"}
{"question": "(a novel question, about a table with the same schema as the original table), after \"", "query": "(the sql query to answer the original question), after \""}
{"question": "Show the names and ids of tourist destinations that have the same number of days as the number of days in the year", "query": "SELECT DISTINCT T1.name,  T1.id FROM destinations AS T1 JOIN days AS T2 ON T1.day  =  T2.day WHERE T2.day  =  \"number of days in the year\""}
{"question": "How many students have a high school degree from a university?", "query": "SELECT count(*)  FROM student WHERE degree_level  =  \"High School\""}
{"question": "What is the name and address of the tourist attraction in the city \"Winnipeg\" that has the most parking?", "query": "SELECT T1.city,  T2.name,  T2.address FROM tourist_attraction AS T1 JOIN parking_lot AS T2 ON T1.parking_lot_id  =  T2.id WHERE T2.city  =  \"Winnipeg\" AND T2.parking_lot_type  =  \"Free\" ORDER BY T2.name,  T1.name"}
{"question": "What is the name (s)he likes the most?", "query": "SELECT name FROM Person"}
{"question": "Are there any students in the department of computer science who are also students in the department of electrical and computer engineering?", "query": "SELECT T1.student_id FROM Student AS T1 JOIN Student AS T2 ON T1.student_id  =  T2.student_id WHERE T2.department_code  =  \"Electrical and Computer Engineering\" AND T1.department_code  = \"Computer Science\""}
{"question": "List the names of the movie titles with at least one character named Bill", "query": "SELECT T1.title FROM movie AS T1 JOIN character AS T2 ON T1.movie_id  =  T2._id WHERE T2.name  = 'Bill';"}
{"question": "Find all students taught at OTHA by M", "query": "SELECT T1.stuid,  T1.name,  T1.major,  T1.course_id,  T1.year,  T1.instructor_id,  T1.instructor,  T1.instructor1,  T1.instructor2,  T1.instructor3,  T1.instructor4,  T1.instructor5,  T1.instructor6,  T1.instructor7,  T1.instructor8,  T1.instructor9,  T1.instructor10"}
{"question": "What are the names, ids and salaries of the employees working at the company of \"American Express\"?", "query": "SELECT T1.name,  T1.id,  T1.salary FROM employees AS T1 WHERE T1.company_name  =  \"American Express\""}
{"question": "What is the total number of students from the university of Maryland-Baltimore County?", "query": "SELECT COUNT(DISTINCT student_id) FROM student"}
{"question": "Which movie did Vincent watch?", "query": "SELECT T1.movie_name FROM movies AS T1 WHERE T1.title  =  \"Vincent\""}
{"question": "Find the age and gender of all students who have a favorite food", "query": "SELECT T1.name,  T1.age,  T1.gender,  T1.favorite_food FROM students AS T1 WHERE T1.favorite_food  =  \"pizza\""}
{"question": "What is the average age of the customers who made purchases of \"dinner set\" and \"tablecloth\"?", "query": "SELECT AVG(age) FROM customer WHERE product_name  =  \"dinner set\" AND product_name  =  \"tablecloth\""}
{"question": "How many pages does the user manual have?", "query": "SELECT COUNT(*) FROM manual"}
{"question": "Find the names of all places with a population of 500 or more", "query": "SELECT name FROM place WHERE population  >=  500"}
{"question": "What are the names, id, and grade of the students in the classroom that has least number of students in it?", "query": "SELECT T1.student_name,  T1.student_id,  T1.student_grade FROM students AS T1 JOIN classroom AS T2 ON T1.student_id  =  T2.[student_id] WHERE T2.classroom_id  =  (SELECT classroom_id FROM classroom WHERE classroom_name  =  \"Math\") ORDER BY T1.student_grade ASC LIMIT 1"}
{"question": "What are the names, role codes, and dates of birth of all employees named 'Martha'?\"", "query": "SELECT T1.firstname,  T1.lastname,  T1.role_code,  T1.dob FROM employee AS T1 WHERE T1.firstname  =  \"Martha\""}
{"question": "What are the names, id, and type of all the students?", "query": "SELECT T1.name,  T1.id,  T1.type FROM student AS T1"}
{"question": "(a novel question, about a family), after \"", "query": "SELECT name FROM family WHERE id  =  \"1\""}
{"question": "Show all types of vehicles", "query": "SELECT T1.type FROM vehicle AS T1 WHERE T1.type  =  'car'"}
{"question": "What are the names and ids of the customers who have not contacted the company?", "query": "SELECT T1.name,  T1.\"id\" FROM customer AS T1 WHERE NOT EXISTS ( SELECT 1 FROM contact AS T2 WHERE T2.customer_id  =  T1.id )"}
{"question": "List the name of the students who are in the sports marketing course", "query": "SELECT T1.student_name FROM students AS T1 WHERE T1.course_name  =  \"sports marketing\""}
{"question": "What is the average age of all the customers in this table?", "query": "SELECT AVG(age) FROM customer"}
{"question": "Calculate the mean age of all employees", "query": "SELECT AVG(age) FROM employees"}
{"question": "What's the largest lake in the US?", "query": "SELECT max(Lake_Area) FROM lakes"}
{"question": "What are the first and last names of all students who are enrolled in an institution of higher learning", "query": "SELECT T1.last_name,  T1.first_name FROM students AS T1 JOIN institution_of_higher_learning AS T2 ON T1.student_id  =  T2.student_id WHERE T2.institution_id  =  \"1\""}
{"question": "How many books does the library have?", "query": "SELECT COUNT(*) FROM books"}
{"question": "What is the name and id of the department that was reorganized in the year 1991?", "query": "SELECT T1.name,  T1.id FROM department AS T1 JOIN reorganized_department AS T2 ON T1.department_id  =  T2._id WHERE T2.year  =  1991"}
{"question": "What are the names that are listed in order of how many times they appear in the text?", "query": "SELECT name FROM text WHERE name IN (SELECT name FROM text WHERE name IN ("}
{"question": "What are the ages of the players whose name do not contain 'B'?", "query": "SELECT T1.age FROM player AS T1 WHERE T1.name NOT LIKE 'B%'"}
{"question": "How many trips are there in the station \"AWS\" in the month of May?", "query": "SELECT COUNT(*) FROM trips WHERE station_id  =  \"AWS\" AND month  =  \"May\""}
{"question": "What is the average quantity of products sold in each state?", "query": "SELECT state_name,  AVG(quantity) FROM products GROUP BY state_name"}
{"question": "What is the numberof students in the university named \"Long Beach State University\" in 2006?", "query": "SELECT count(*) from student WHERE university_name  =  \"Long Beach State University\" AND year  =  2006"}
{"question": "What are the names and amounts of the transactions with the same time stamp?", "query": "SELECT T1.transaction_id,  T2.name,  T2.amount FROM Transactions AS T1 JOIN Transactions AS T2 ON T1.transaction_id  =  T2._id WHERE T1.time  =  T2.time"}
{"question": "(a novel question, about a table with the same name)", "query": "SELECT T1.title FROM book AS T1 JOIN book_author AS T2 ON T1.book_id  =  T2.book_id WHERE T2.author_id  =  (SELECT author_id FROM book_authors WHERE book_id  =  T1.book_id)"}
{"question": "What is the average temperature of all countries in the world?", "query": "SELECT AVG(temp) FROM world"}
{"question": "Find the id of the course that has the most students", "query": "SELECT course_id,  count(*) FROM course AS T1 JOIN students AS T2 ON T1.id  =  T2.id GROUP BY T1.id HAVING count(*)  >  (SELECT count(*) FROM course AS T1 GROUP BY T1.id)"}
{"question": "What are the names, genders and ages of the actors who play the roles of \"Oliver\" and \"Emma\" in the movie \"Mr", "query": "SELECT T1.name,  T1.gender,  T1.age FROM actor AS T1 WHERE T1.role  =  \"Oliver\" AND T1.role  =  'Emma'"}
{"question": "What are the names, age, and address of all customers from Texas?", "query": "SELECT T1.Name,  T1.Age,  T1.Address FROM customer AS T1 WHERE T1.State = 'Texas'"}
{"question": "What are the names for all employees of the department of mathematics?", "query": "SELECT T1.name FROM employee AS T1 WHERE T1.department_id = 1;"}
{"question": "What are the names and dates of birth of all students who have \"Bach\" as one of their initials?", "query": "SELECT T1.student_name,  T1.date_of_birth FROM students AS T1 WHERE T1.initials  =  \"Bach\""}
{"question": "What are the numbers of people who have more than 100 records?", "query": "SELECT count(*) AS count FROM customer WHERE customer.cust_id  >  100"}
{"question": "Find the full name (first and last) and salary of the employee who supports the most number of employees", "query": "SELECT T1.first_name,  T1.last_name,  T1.salary FROM Employee AS T1 JOIN Employee_Support AS T2 ON T1.id  = T2.employee_id WHERE T2.number_of_employees  =  (SELECT MAX(number_of_employees) FROM Employee_Support)"}
{"question": "What is the name of the city where the company headquarters are located?", "query": "SELECT city_name FROM city WHERE city_name  =  \"New York\""}
{"question": "What is the average number of guests of all the hotels in the state of Maryland?", "query": "SELECT AVG(guest_count) FROM hotels_in_state WHERE state_name  =  \"Maryland\""}
{"question": "What are the names, titles and salaries of the company's employees?", "query": "SELECT T1.first_name,  T1.last_name,  T1.title,  T1.salary FROM employee AS T1 WHERE T1.company_id  =  1"}
{"question": "How many different movies are there, sorted by their production years?", "query": "SELECT DISTINCT movie_name FROM movie ORDER BY movie_name"}
{"question": "(a novel question, about a question)", "query": "(the sql query to answer the query)"}
{"question": "What are the ids for all the students who took both the first and second years?", "query": "SELECT T1.student_id FROM STUDENT AS T1 WHERE T1.year  =  '1' AND T1.year  =  \"2\""}
{"question": "What is the minimum, average, maximum order level of all invoices", "query": "SELECT MIN(order_level) FROM invoices"}
{"question": "What are the names, addresses, and ages of all students in the class of 2010?", "query": "SELECT T1.name,  T1.address,  T1.age FROM students AS T1 WHERE T1.class_id  =  '2010'"}
{"question": "What are the faculty names of those who have a Ph", "query": "SELECT T1.first_name,  T1.last_name FROM faculty AS T1 JOIN faculty_student AS T2 ON T1.id  = T2.faculty_id WHERE T2.student_id  =  '1'"}
{"question": "(How many games played)", "query": "SELECT count(*) AS \"How many games played\" FROM game_results"}
{"question": "What is the name and number of customers who have used the product with type \"Biscuit\"?", "query": "SELECT T1.Name,  T1.Cust_ID FROM Customer AS T1 JOIN Product_Type AS T2 ON T1.Product_Type_ID  =  T2.[Type] WHERE T2.Name  =  \"Biscuit\""}
{"question": "How many students are there in room 101?", "query": "SELECT COUNT(*) AS \"count\" FROM students WHERE room_id = 101"}
{"question": "What is the average rating of all students in the year 2006?", "query": "SELECT AVG(Rating) FROM student WHERE YEAR  =  2006"}
{"question": "What are the names, ids, and gender of all the employees who are not managers or supervisors?", "query": "SELECT T1.name,  T1.[id],  T1.gender FROM employee AS T1 WHERE T1.manager  =  0 OR T1.supervisor  =  0 OR T1.[id]  >  0;"}
{"question": "What are the numbers and names of the students who have the same ID numbers as the ones in the \"student\" table?", "query": "SELECT T1.student_id,  T2.student_first_name,  T3.student_last_name,  T4.student_address,  T5.student_city,  T6.student_state,  T7.student_zip,  T8.student_phone,  T9.student_email,  T10.student_age,  T11.student_gender,  T12.student_major,  T13.student_birthday,  T14.student_dob,  T15.student_dob_month"}
{"question": "What are the first and last names of all customers with the age less than 30?", "query": "SELECT T1.last_name,  T1.first_name FROM customers AS T1 WHERE T1.age  <  30"}
{"question": "What is the author's name of the book \"The Book of Ender\"", "query": "SELECT author_name FROM books WHERE book_id  =  'The Book of Ender'"}
{"question": "What are the names (first and last name) of the 6 students with the highest GPA?", "query": "SELECT T1.first_name,  T1.last_name FROM students AS T1 WHERE GPA  =  (SELECT max(GPA) FROM students)"}
{"question": "What is the age of the manager who is also a coach?", "query": "SELECT T1.manager_first_name,  T1.manager_last_name,  T1.manager_age FROM employees AS T1 JOIN managers AS T2 ON T1.manager_id  =  T2.id WHERE T2.first_name  =  \"Coach\""}
{"question": "Which is the last name of the employee who is from New York?", "query": "SELECT T1.last_name FROM employee AS T1 WHERE T1.state_code  =  'NY'"}
{"question": "What are the names, numbers, and last names of the students who are on the football team?", "query": "SELECT T1.first_name,  T1.last_name,  T1.number,  T1.team_id_br FROM student AS T1 JOIN team AS T3 ON T1.team_id  =  T3.team_id_br WHERE EXISTS (SELECT T2.first_name,  T2.last_name,  T2.number,  T2.team_id_br FROM player AS T2 WHERE T1.team_id_br  =  T2.team_id AND T1.number  =  T2."}
{"question": "What is the average age of all students who play basketball?", "query": "SELECT AVG(T1.age) FROM students AS T1 JOIN sport AS T2 ON T1.student_id  =  T2.student_id WHERE T2.name  =  \"basketball\""}
{"question": "What is the name, id and number of visits for each attraction?", "query": "SELECT Attraction_Name,  Attraction_ID,  COUNT(*) FROM Attraction_Visits GROUP BY Attraction_ID"}
{"question": "What are the titles of all movies not reviewed in the past year by Steve Jobs?", "query": "SELECT T1.title FROM Movie AS T1 JOIN Reviewer AS T2 ON T1.movie_id  =  T2.movie_id WHERE T2.name  =  \"Steve Jobs\" AND T2.review_date  <  \"2013-01-01\""}
{"question": "What are the names, if any, of the employees in each department, ordered from highest salary to lowest?", "query": "SELECT T1.name,  T1.salary FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.[department_id] ORDER BY T1.salary DESC;"}
{"question": "(a novel question, about a \"table\"), after \"", "query": "Examples of some or all task item:"}
{"question": "Show the average product price for the products with the average price per unit below 10000", "query": "SELECT AVG(price) FROM products WHERE price  /  units < 10000"}
{"question": "What does a typical test question look like?", "query": "SELECT * FROM table_name"}
{"question": "List the names and addresses of the companies that have the letter S in their name", "query": "SELECT T1.name,  T1.address FROM companies AS T1 JOIN address AS T2 ON T1.company_id  =  T2.[company_id] WHERE T2.letter  =  \"S\""}
{"question": "List all the ids of students who have a major in art, and how many of them are men", "query": "SELECT T1.id,  T1.major,  T1.sex FROM student AS T1 JOIN major AS T2 ON T1.major_id  =  T2"}
{"question": "What is the name and occupation of the person with the first name \"Alessandro\" who is a singer?", "query": "SELECT T1.name,  T1.occupation FROM person AS T1 WHERE T1.first_name  =  \"Alessandro\""}
{"question": "List the ids, names and genders for the architects who built two bridges or a mill", "query": "SELECT T1.id,  T1.name,  T2.gender FROM architects AS T1 JOIN bridge_or_mill AS T2 ON T1.id  =  T2.id"}
{"question": "What are the names and email addresses of the owners of the apartment in which the team \"Tennis Club\" plays?", "query": "SELECT T1.owner_name,  T1.owner_email FROM apartment AS T1 JOIN team AS T2 ON T1.owner_id  =  T2.[owner_id]"}
{"question": "What is the average cost per transaction for people who have credit cards?", "query": "SELECT AVG(T1.total_price) FROM transactions AS T1 WHERE T1.type  =  \"Credit Card\""}
{"question": "???", "query": "SELECT???"}
{"question": "What is a unique id for each customer?", "query": "SELECT id FROM customer WHERE name  =  \"John Smith\""}
{"question": "What is the name and phone of everyone who is an employee in the company?", "query": "SELECT T1.first_name,  T1.last_name,  T1.phone FROM employees AS T1 WHERE T1.employee_id  =  (SELECT employee_id FROM employee_address_history)"}
{"question": "How many people have the same name as the first person who was born in the same month?", "query": "SELECT count(*)  FROM person WHERE name  =  \"John Smith\" AND month(birth_date)  =  \"January\""}
{"question": "Show the names of all the countries where more than 2 students are from", "query": "SELECT T1.country_name FROM country AS T1 JOIN students AS T2 ON T1.country_id  =  T2_country_id WHERE T2.country_name  =  \"United States\""}
{"question": "Find all the users who have no friends that have the same name as them", "query": "SELECT T1.user_id,  T1.user_name,  T1.user_email,  T1.user_password,  T1.user_phone,  T1.user_fax,  T1.user_address,  T1.user_city,  T1.user_state,  T1.user_zip,  T1.user_country,  T1.user_gender,  T1.user_birthday,  T1.user_age,  T1.user_height,  T1.user_weight"}
{"question": "What are the names, locations, and titles of all directors? (note, you may wish to use another column to store the name of the director", "query": "SELECT T1.name,  T1.location,  T1.title FROM director AS T1"}
{"question": "What are the names, addresses, and telephone numbers of all members of the Board of Trustees?", "query": "SELECT name,  address,  phone FROM board_members"}
{"question": "List all students and their grades", "query": "SELECT T1.student_id,  T1.name_first,  (T1.grade_id + 1) AS grade FROM student AS T1 JOIN grade AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY T1.grade_id DESC"}
{"question": "\"Given: \"", "query": "SELECT T1.question_id,  T1.question_text,  T1.question_type,  T1.question_order,  T1.question_id,  COUNT(*) AS question_count FROM questions AS T1 GROUP BY T1.question_id"}
{"question": "What are the names and ID's of all the customers?", "query": "SELECT T1.name,  T1.id FROM customers AS T1"}
{"question": "What is the name and id of the employee who has the most account codes?", "query": "SELECT T1.id,  T2.name FROM employee AS T1 JOIN account_codes AS T2 ON T1.id  = T2.employee_id WHERE T2.count  =  'Max'"}
{"question": "How many employees are in each department?", "query": "SELECT T1.department_id,  T1.name FROM department AS T1 JOIN employee AS T2 ON T1.department_id  =  T2.department_id"}
{"question": "What is the largest university in the world?", "query": "SELECT T1.university_name FROM university AS T1 WHERE T1.university_name  =  \"The University of Texas at Austin\""}
{"question": "What are the names, and ages, of the kids who are the most likely to have asthma?", "query": "SELECT T1.name,  T2.age FROM kids AS T1 JOIN health_conditions AS T2 ON T1.id  =  T2.id WHERE T2.name  =  'asthma'"}
{"question": "(a novel question, about a thesaurus), after \"", "query": "(the sql query to answer the query), after \""}
{"question": "Find the name of the department that has at least 10 students who are attending the same course", "query": "SELECT T1.department_id,  T1.name_first,  count(*) FROM student AS T1 JOIN student_course AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.department_id HAVING count(T2.course_id)  >=  10"}
{"question": "\"What are the names of all students who played both Call Of Destiny and Works Of Widenius?\"", "query": "SELECT T1.name FROM student AS T1 JOIN game AS T2 ON T1.student_id  =  T2.\"student_id\" WHERE T2.name  =  \"Call Of Destiny\" AND T2.name  =  'Works Of Widenius'"}
{"question": "(a novel question, about a question about a table) What are the names of all customers?", "query": "SELECT customer_id FROM customers"}
{"question": "What are the races that had more than 20 runners?", "query": "SELECT Races.race_id,  Races.race_name,  Races.race_date FROM Races ORDER BY Races.race_date DESC LIMIT 20"}
{"question": "Find the name of all the customer accounts with a balance over $50", "query": "SELECT T1.customer_name FROM customer AS T1 WHERE T1.balance  >  50"}
{"question": "What is the name and gender of the person who is the most popular in our database?", "query": "SELECT T1.name,  T1.gender FROM people AS T1 JOIN people_likes AS T2 ON T1.name  =  T2.name WHERE T2.count  >  (SELECT count(*) FROM people_likes WHERE name  =  T1.name)"}
{"question": "What is the name and id of the employee who has the largest salary?", "query": "SELECT T1.firstname,  T1.lastname,  T1.salary FROM employee AS T1 WHERE T1.salary  >  (SELECT max(T2.salary) FROM employee AS T2)"}
{"question": "How much is the average price of the wine that the customer ordered the most?", "query": "SELECT AVG(price) FROM wine WHERE customer_id = 1"}
{"question": "What are the names, emails, and phone numbers of the employees who work in the kitchen?", "query": "SELECT name,  email,  phone FROM employees WHERE department_id  =  \"kitchen\""}
{"question": "Show the names of the users who have the most friends", "query": "SELECT T1.user_id,  T1.user_name,  T1.friend_count FROM user AS T1 JOIN user_friends AS T2 ON T1.user_id  =  T2.user_id GROUP BY T1.user_id ORDER BY T1.friend_count DESC LIMIT 1"}
{"question": "What is the age of the oldest player on the basketball team?", "query": "SELECT T1.player_id,  T1.player_name,  T1.player_age FROM players AS T1 WHERE T1.player_age  =  (SELECT min(player_age) FROM players WHERE player_id  =  'T1')"}
{"question": "Find the first name of the persons attending the event", "query": "SELECT T1.name FROM attendee AS T1 WHERE T1.event_id  =  \"1\""}
{"question": "What is the first and last names of the drivers that won at least 4 races in the season?", "query": "SELECT T1.driver_name,  T1.race_id FROM race_results AS T1 JOIN race AS T2 ON T1.race_id  =  T2.race_id WHERE T1.driver_id  =  (SELECT T3.driver_id FROM driver AS T3 WHERE T3.name  =  \"John Smith\") AND T1.race_id  >  1 AND T1.race_id <  4"}
{"question": "What are all the types of products in the store?", "query": "SELECT T1.product_name,  T1.product_price,  T1.product_description,  T1.product_category,  T1.product_type,  T1.product_size,  T1.product_color,  T1.product_weight,  T1.product_quantity,  T1.product_unit,  T1.product_image,  T1.product_available,  T1.product_in_stock,  T1.product_discount,  T1.product_tax,  T1.product"}
{"question": "Find the total sales, in thousands, of each product", "query": "SELECT T1.product_name,  T1.product_price,  T1.product_quantity,  T1.product_total FROM product AS T1 WHERE T1.product_name  =  \"Samsung\""}
{"question": "What are the names, orderings, and costs of the meals that can be ordered at the restaurant?", "query": "SELECT T1.name,  T2.order_by,  T3.cost FROM menu AS T1 JOIN meal AS T2 ON T1.meal_id  =  T2.meal_id JOIN order_item AS T3 ON T2.order_item_id  =  T3.order_item_id WHERE T1.name  =  \"lunch\""}
{"question": "What are the names for the products with the most discounts?", "query": "SELECT name FROM product WHERE discount > 0"}
{"question": "What is the first day of the month in which the event named \"World Junior\" occurred?", "query": "SELECT date_part('day', event_date) FROM events WHERE event_name = 'World Junior'"}
{"question": "List the ids of all students in the group \"English Literature\" and the ids of all students in the", "query": "SELECT T1.student_id,  T1.name FROM student AS T1 WHERE T1.group_id  =  \"English Literature\""}
{"question": "What is the average grade of students who are in the physics-chemistry class?", "query": "SELECT AVG(grade) FROM student_grades WHERE course_id = 1"}
{"question": "What are the customer codes and the customer names for the customers who have made a purchase of 'Food' item (the item status is \"Purchase\")", "query": "SELECT T1.customer_code,  T1.customer_name FROM customer AS T1 WHERE T1.item_code  =  'Food'"}
{"question": "What is the name of the actress who married her first husband when she was 19 and then dated her second husband when she was 35?", "query": "SELECT T1.first_name,  T1.last_name FROM Person AS T1 JOIN MARRIAGE AS T2 ON T1.first_name  =  T2.first_name JOIN MARRIAGE AS T3 ON T1.last_name  =  T3.last_name WHERE T2.date_of_marriage  =  \"19\" AND T3.date_of_marriage = \"35\""}
{"question": "What is all the customer names who ordered the most items in total?", "query": "SELECT T1.Name FROM Customer_Orders AS T1 JOIN Order_Items AS T2 ON T1.Order_id  =  T2.\"Order_id\" WHERE T2.Product_id  =  \"P1\" AND T2.Quantity  >  0 GROUP BY T1.Name ORDER BY T1.Name ASC"}
{"question": "What are the full name of the 3 professors who teach the most courses?", "query": "SELECT T1.last_name,  T1.first_name FROM professors AS T1 JOIN courses AS T2 ON T1.professor_id  =  T2.professor_id WHERE T2.course_id  =  (SELECT course_id FROM courses GROUP BY course_id ORDER BY count(*)  DESC LIMIT 1)"}
{"question": "Find the names of all the employees who have ever been in a car accident", "query": "SELECT T1.firstname,  T1.lastname FROM employee AS T1 JOIN car_accident AS T2 ON T1.id  =  T2.employee_id WHERE T2.date  >  '01-01-2000'"}
{"question": "How many students are there in the class with the id of 1019?", "query": "SELECT COUNT(*) AS total FROM student WHERE student_id  =  1019"}
{"question": "What are the id, names, and genders of the architects who made two buildings or one mill?", "query": "SELECT T1.id,  T1.name,  T1.gender FROM architects AS T1 WHERE T1.name  = \"John Smith\" OR T1.name  =  'John Smith' OR T1.name  = \"Jane Doe\" OR T1.name  ==  \"John Doe\" OR T1.name == \"Jane Doe\" OR T1.\"name\"  =  \"John Doe\" OR T2.name  =  \"John Smith\" OR T2.name  ==  \"John Smith\" OR T3.name  =  \"John Doe\""}
{"question": "What is the name and id of the player in the video game who is the only one not wearing a red shirt?", "query": "SELECT T1.player_id,  T1.name_first,  \"name_last\" FROM player AS T1 JOIN player AS T2 ON T1.name_first  =  T2.name_first WHERE T1.name_last  =  \"name_last\" AND T2.name_first  =  \"name_first\" AND T2.name_last  =  T1.name_last AND T1.player_id !=  T2.player_id"}
{"question": "Find the average distance and price for all students from LA", "query": "SELECT AVG(distance),  AVG(price) FROM students WHERE city = \"Los Angeles\""}
{"question": "What is the name and position of students who attended a course about psychology?", "query": "SELECT T1.name,  T1.position FROM students AS T1 JOIN courses AS T2 ON T1.crs_id  =  T2.[course_id] WHERE T2.course_name  =  \"Psychology\""}
{"question": "Find the names of the top 5 cities in the US that have more people with college degrees than do the top 5 cities in the world", "query": "SELECT city_name,  count(*) FROM city_population GROUP BY city_name ORDER BY count(*) DESC"}
{"question": "Find the names and addresses of all people who have purchased the same wine", "query": "SELECT T1.first_name,  T1.last_name,  T1.address_id,  T1.city,  T1.state_province_id,  T1.zip_code,  T1.country_id,  T1.phone,  T1.email,  T1.credit_card_id,  T1.credit_limit,  T1.credit_status,  T1.credit_type,  T1.credit_balance,  T1.credit_date,  T1.credit_month,"}
{"question": "What are the names and last names of the students of the classes of the year 2016?", "query": "SELECT T1.student_name,  T1.student_last_name FROM students AS T1 WHERE T1.class_year  =  2016"}
{"question": "Find the city with post code 255, and then the name of the city with the greatest number of people", "query": "SELECT T1.city_name,  T1.city_population FROM city AS T1 JOIN city_population AS T2 ON T1.city_id  =  T2.city_id WHERE T2.post_code  =  \"255\" AND T2.city_population  >  T1.city_population"}
{"question": "(Find the names of the products with length larger than 5 and smaller than 10)", "query": "SELECT T1.product_name FROM product AS T1 WHERE length(T1.product_name) > 5 AND length(T1.product_id) < 10"}
{"question": "What are the countries with the highest number of islands?", "query": "SELECT T1.country,  T1.island FROM country AS T1 GROUP BY T1.country ORDER BY T1.island_count DESC"}
{"question": "What are the names, genders, and ages of all the employees with an age of 40 or higher", "query": "SELECT name, gender, age FROM employees WHERE age  >  40"}
{"question": "List the countries having more than 4 accounts", "query": "SELECT Country FROM Accounts GROUP BY Country HAVING count(*)  =  4"}
{"question": "(a novel question, about a target table), after \"", "query": "A:"}
{"question": "What are the names and roles of employees named 'Lori Peterson' and 'David White'?", "query": "SELECT T1.name,  T1.role FROM employees AS T1 WHERE T1.name  =  'Lori Peterson' AND T1.role  =  'employee'"}
{"question": "What is the average age of students in a college?", "query": "SELECT AVG(age) FROM Student"}
{"question": "What is the average cost of the most expensive items from the catalog?", "query": "SELECT AVG(price) FROM products WHERE price  >  (SELECT AVG(price) FROM products)"}
{"question": "How many documents are in the database?", "query": "SELECT count(*) AS count FROM documents"}
{"question": "What is the \"active to date\", if we replace \"Tillman Ernser\" by \"Tillman Ernser\" and \"contact channel\" by", "query": "SELECT T1.name,  T1.address_type_code,  T1.address_line_1,  T1.address_city,  T1.address_state,  T1.address_zip,  T1.address_country,  T1.phone,  T1.email,  T1.fax,  T1.website,  T1.address_street,  T1.address_number,  T1.address_building_number,  T1.contact_channel,  T1.address_status,  T1."}
{"question": "Find the name of all the books in the database that have the highest price", "query": "SELECT T1.title,  T1.price FROM book AS T1 JOIN book_price AS T2 ON T1.book_id  =  T2._id WHERE T2.price  >  T1.price"}
{"question": "What is the total population of the states in descending order?", "query": "SELECT T1.state,  T2.population FROM state AS T1 JOIN population AS T2 ON T1.state_id  =  T2.state_id ORDER BY T1.population DESC"}
{"question": "What are the names, ages and weights of all the students in the class of 2015?", "query": "SELECT T1.name,  T1.age,  T1.weight FROM students AS T1 JOIN class AS T2 ON T1.class_id  =  T2.class_id"}
{"question": "What are the names and birthdays of the students who are the most popular?", "query": "SELECT T1.student_id,  T1.name_first,  'Birthday' AS \"Birthday\" FROM student AS T1 JOIN ( SELECT T2.student_id,  count(*) AS \"Count\" FROM student AS T2 GROUP BY T2.student_id ORDER BY \"Count\" DESC LIMIT 1 ) AS T3 ON T1.student_id  =  T3.student_id GROUP BY T1.student_id ORDER BY \"count\" DESC LIMIT 1"}
{"question": "What are the names, id and addresses of all customers in the table \"Customer\"?", "query": "SELECT customer_name, customer_id, customer_address FROM customer"}
{"question": "What is the name, gender, and phone number of the customer who have a policy with the product code \"Tape\"?", "query": "SELECT T1.name,  T1.gender,  T1.phone_number FROM customer AS T1 WHERE T1.policy_code  =  \"Tape\""}
{"question": "What is the average temperature for the whole year in the city of San Francisco?", "query": "SELECT AVG(temperature) FROM weather WHERE city = 'San Francisco'"}
{"question": "What are the names and Ids of the patients in the department of Health and Human Services?", "query": "SELECT T1.patient_id,  T1.patient_name FROM patients AS T1 JOIN patient_history AS T2 ON T1.patient_id  =  T2._patient_id WHERE T2.date  =  \"2016-01-01\""}
{"question": "What are the names, email addresses, and phone numbers of all employees whose last name begins with the letter L?", "query": "SELECT T1.firstname,  T1.lastname,  T1.email,  T1.phone FROM employee AS T1 WHERE T1.lastname  LIKE 'L%'"}
{"question": "How many people have a first name shorter than 3 characters?", "query": "SELECT T1.FirstName,  T1.LastName,  T1.PlayerID FROM Player AS T1 WHERE T1.FirstName  <  \"3\""}
{"question": "Find the name, id, and number of hours worked by all the department heads", "query": "SELECT T1.name,  T1.id,  T1.hours_worked FROM employees AS T1 JOIN departments_employees AS T2 ON T1.employee_id  =  T2.employee_id JOIN departments AS T3 ON T2.department_id  = T3.id WHERE T3.name  = 'Department Heads'"}
{"question": "How many employees work in each department in the company?", "query": "SELECT T1.department_id,  T2.employee_id FROM department AS T1 JOIN employees AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id"}
{"question": "What is the id and name of the university where the largest number of students are enrolled?", "query": "SELECT T1.name,  T1.id FROM university AS T1 WHERE T1.num_students  =  (SELECT max(T2.num_students) FROM university AS T2)"}
{"question": "How many customers have at least one contact with a different state than their home state?", "query": "SELECT T1.customer_id,  T2.state_id FROM customers AS T1 JOIN customer_state_history AS T2 ON T1.id  = T2.customer_id WHERE  T2.state_id  <>  T1.state_id"}
{"question": "Find the names of all the books written by author \"Nancy Yee\"", "query": "SELECT T1.book_name FROM book AS T1 WHERE T1.author = \"Nancy Yee\""}
{"question": "How many students are registered at colleges in Michigan?", "query": "SELECT COUNT(*) FROM students WHERE state_code  =  \"MI\""}
{"question": "List the names and ages of all the employees", "query": "SELECT T1.fname,  T1.lname,  T1.age FROM employee AS T1 JOIN employee AS T2 ON T1.fname  =  T2.fname WHERE T1.lname  =  \"Smith\" AND T1.age  >  20"}
{"question": "How many residents are there in the city of Santa Ynez?", "query": "SELECT COUNT(*) AS \"count\" FROM city AS T1 JOIN resident AS T2 ON T1.city_id  =  T2.city_id"}
{"question": "What are the names, ids, and product numbers of the products that are available for sale?", "query": "SELECT name,  id,  product_id FROM products WHERE available_for_sale"}
{"question": "How many students are on campus?", "query": "SELECT COUNT(*) FROM student"}
{"question": "Find the names and prices of all products whose price is between 100 and 500", "query": "SELECT T1.product_name,  T1.product_price FROM product AS T1 WHERE T1.product_price  >  100 AND T1.product_price  <  500"}
{"question": "What is the number of students in the class of 2016-2017 in the university of Massachusetts, Amherst, MA?", "query": "SELECT COUNT(*) FROM students WHERE school_name  =  \"University of Massachusetts, Amherst, MASS\""}
{"question": "What is the last number in the sequence: [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13,", "query": "SELECT T2.id FROM table AS T1 JOIN table AS T2 ON T1.id  =  T2.parent_id WHERE T1.id  =  13"}
{"question": "Who is the youngest person who has ever been president?", "query": "SELECT T1.age FROM Person AS T1 JOIN Person_Biography AS T2 ON T1.id  = T2.id WHERE T2.bio  =  'President' AND T1.age  =  'youngest'"}
{"question": "How many students are in each city?", "query": "SELECT T1.city,  T1.student_count FROM city AS T1 GROUP BY T1.student_count"}
{"question": "What is the name and role of the person who has the highest number of credit cards?", "query": "SELECT T1.name,  T1.role FROM people AS T1 JOIN credit_cards AS T2 ON T1.person_id  =  T2.person_id WHERE T2.number  =  \"1\""}
{"question": "What is the name of the movie that has the highest rating?", "query": "SELECT T1.title FROM movie AS T1 WHERE T1.rating  =  (SELECT MAX(T2.rating) FROM movie AS T2)"}
{"question": "What are the captains of the aircraft carrier \"USS Saratoga\"?", "query": "SELECT T1.name FROM captain AS T1 JOIN ship_command_officer AS T2 ON T1.id  =  T2.id WHERE T2.ship_id  =  \"USS Saratoga\""}
{"question": "What are the total number of transactions per week", "query": "SELECT count(*) AS Total_Transactions FROM transactions"}
{"question": "List the names of the students who are not a child of any coaches", "query": "SELECT T1.student_id FROM student AS T1 WHERE NOT EXISTS (SELECT * FROM coach AS T2 WHERE T1.student_id  =  T2.student_id)"}
{"question": "What are the average speeds in kilometers per second for all persons who were born in 1999?", "query": "SELECT AVG(speed) FROM person WHERE year  =  1999"}
{"question": "List the names of customers who did not pay with Visa", "query": "SELECT T1.name FROM customers AS T1 WHERE T1.card_type  =  \"Visa\" AND T1.card_number  =  \"\""}
{"question": "What is the name, id and the amount of the loan for each customer of the current month?", "query": "SELECT T1.name,  T1.id,  T1.loan_amount FROM customer AS T1 WHERE T1.month  =  \"current\""}
{"question": "What are the names and addresses of the customers who bought the milk and bread", "query": "SELECT T1.customer_name,  T2.address_id FROM customer AS T1 JOIN order_item AS T2 ON T1.id  = T2.customer_id WHERE (T2.order_item_id  =  '1') AND (T2.order_item  =  'Milk') AND (T2.order  =  '1') AND T1.customer_id  =  '1'"}
{"question": "What are the names, first names, and addresses of all the customers who have placed an order with a product called \"Chocolate\"?", "query": "SELECT customer_id,  product_id,  name,  first_name,  last_name,  address FROM customer_product JOIN order_item ON customer_id  =  customer_id JOIN product ON product_id  =  product_id JOIN order_item ON order_id  =  order_id WHERE product_name  =  \"Chocolate\""}
{"question": "\"What are the names of the customers who never placed an order?", "query": "SELECT T1.customer_first_name, T1.customer_last_name, T1.customerid, T1.address_type_code, T1.address_line_1, T1.address_line2, T1.city, T1.state, T1.zip_code, T1.phone_number, T1.email_address, T1.address_type, T1.address_status, T1.address_type AS address_type_code, T1._id AS id FROM customers AS T1 WHERE T1.address_type_"}
{"question": "Find the name of students who are not in the second or third class", "query": "SELECT T1.fname,  T1.lname FROM student AS T1 WHERE T1.class  =  '2' OR T1.class  =  'third'"}
{"question": "Find the names of teachers whose address has zip code: 918", "query": "SELECT T1.name FROM teachers AS T1 JOIN address AS T2 ON T1.teach_id  =  T2.teach_id WHERE T2.zip_code  =  \"918\""}
{"question": "What is the name, age, and address of the customers who have purchased both products Lat and Americano?", "query": "SELECT T1.name,  T1.age,  T1.address FROM customers AS T1 JOIN order_items_products AS T2 ON T1.customer_id  =  T2.customer_id AND T2.product1_id  =  T1.product1_id AND T2.product2_id  =  T1.product2_id"}
{"question": "What is the rank of the student with the first name \"Prahlad\" in grade level 10?", "query": "SELECT T1.student_id,  T1.name_first,  count(*) FROM student AS T1 JOIN grade_level AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id, T1.name_first HAVING count(*)  =  1"}
{"question": "What are the names and email addresses of 5 employees who have sent an email to someone else?", "query": "SELECT T1.name,  T1.* FROM employee AS T1 JOIN email_history AS T2 ON T1.employee_id  =  T2.* WHERE T2.recipient_id  =  \"someone\""}
{"question": "What is the name and id of the most popular brand of cars in Texas?", "query": "SELECT DISTINCT brand_name,  brand_id FROM cars WHERE state_code  =  'Texas' ORDER BY sales_volume DESC LIMIT 1"}
{"question": "What is the average age of the people in the city named 'Bergen'?", "query": "SELECT AVG(age) FROM people WHERE city_name  =  \"Bergen\""}
{"question": "Find the average age of all artists", "query": "SELECT AVG(age) FROM artist"}
{"question": "Find the average age and average height for all students", "query": "SELECT avg(age),  avg(height) FROM students"}
{"question": "What are the first three names of the actor \"Denzel Washington\"?", "query": "SELECT T1.last_name FROM actors AS T1 WHERE T1.first_name  LIKE  \"Denzel\" AND T1.last_name  LIKE  \"Washington\" ORDER BY T1.last_name ASC LIMIT 3"}
{"question": "What are the names, addresses, and emails of the customers who bought a product that has a price greater or equal to 10?", "query": "SELECT T1.Name,  T1.Address,  T1.Email FROM Customer AS T1 WHERE T1.Product_ID  =  'P1' AND T1.Price  >  10"}
{"question": "What are the names, locations and sizes of the two largest lakes in the world?", "query": "SELECT T1.name,  T2.location,  T3.size FROM lake AS T1 JOIN lake AS T2 ON T1.name  =  T2.name JOIN lake AS T3 ON T2.location  =  T3.location"}
{"question": "List the names of the people who have a name starting with the letter \"A\"", "query": "SELECT name FROM people WHERE name  LIKE 'A%'"}
{"question": "Find the names of doctors in a hospital", "query": "SELECT T1.doctor_name FROM doctor AS T1 JOIN hospital AS T2 ON T1.hospital_id  =  T2.hospital_id GROUP BY T1.hospital_id ORDER BY count(*)  DESC LIMIT 1"}
{"question": "What is the id and last name of the student who has not taken a course with Dr", "query": "SELECT T1.student_id,  T1.last_name  FROM student AS T1 WHERE NOT EXISTS ( SELECT 1 FROM course AS T2 WHERE T1.student_id  =  T2.student_id AND T2.course_id  =  T1.course_id )"}
{"question": "What are the names for the types of problems that are not used by any type of customer?", "query": "SELECT DISTINCT type FROM problems WHERE type NOT IN (SELECT type FROM problems WHERE type = \"customer\")"}
{"question": "Find the number of movies that had a rating below 4 in 2016", "query": "SELECT count(*) AS count FROM movie AS T1 JOIN rating AS T2 ON T1.id  =  T2.movie_id WHERE T2.rating  <  4"}
{"question": "What are the names and id of the employees who serve at most 20 customers", "query": "SELECT T1.id,  T2.name FROM employee AS T1 JOIN customer AS T2 ON T1.employee_id  =  T2.employee_id WHERE T2.customer_id  =  (SELECT MAX(customer_id) FROM customer)"}
{"question": "What is the name of the movie about the war with Iraq?", "query": "SELECT name FROM Movie WHERE name = \"The Hurt Locker\""}
{"question": "What are the titles and names of the band members?", "query": "SELECT T1.band_name,  T1.band_title FROM band_members AS T1 JOIN band_members AS T2 ON T1.band_id  =  T2.band_id WHERE T1.band_id  <>  T2.band_id"}
{"question": "What are the first three words of the lyrics of the song \"Chelsea Dagger\"?", "query": "SELECT T1.lyrics FROM song AS T1 JOIN song_lyrics AS T2 ON T1.song_id  =  T2._id WHERE T2.lyrics  =  \"Chelsea Dagger\""}
{"question": "What are the top three players?", "query": "SELECT T1.name FROM player AS T1 WHERE T1.points  >  (SELECT T2.points FROM player AS T2 WHERE T2.name  =  T1.name) ORDER BY T1.points DESC LIMIT 3"}
{"question": "What are the names, birth dates and genders of students in the class of 2009?", "query": "SELECT T1.name,  T1.birth_date,  T1.gender FROM students AS T1 WHERE T1.year  =  2009"}
{"question": "What are the names and id of the players who have the highest overall ratings in the year 2015?", "query": "SELECT T1.player_id,  T1.name_first,  count(*) FROM player AS T1 JOIN player AS T2 ON T1.id  =  T2.id AND T1.year  =  2015 AND T2.year  =  2015 GROUP BY T1.player_code ORDER BY count(*) DESC;"}
{"question": "What is the average time between first and last names for all the students?", "query": "SELECT T1.first_name,  T1.last_name,  T1.avg_time_between FROM student AS T1 JOIN ( SELECT first_name,  lastname,  DATEDIFF(first_name, last_name) AS avg_time_between FROM student ) AS T2 ON T1.first_name  =  T2.first_name AND T1.last_name  =  T2.last_name"}
{"question": "Here are a few questions to get you started, try to come up with more", "query": "SELECT T1.name,  T2.name FROM students AS T1 JOIN students AS T2 ON T1.id  =  T2.id WHERE T1.name  =  \"Alice\" AND T2.name  =  \"Bob\""}
{"question": "What are the first names of customers who are in the city with city code \"NYC\"?", "query": "SELECT T1.name FROM customer AS T1 WHERE T1.city_code  =  \"NYC\""}
{"question": "What are the full names of all of Zach's friends who have the highest scores?", "query": "SELECT T1.first_name,  T1.last_name FROM friends AS T1 JOIN scores AS T2 ON T1.friend_id  =  T2.[friend_id] WHERE T2.score  =  MAX(T2.score)"}
{"question": "What are the first 3 letters of the last name of the students who have a name starting with \"G\", \"R\", and \"W\"?", "query": "SELECT T1.last_name FROM students AS T1 WHERE T1.name LIKE \"GRW%\""}
{"question": "What is the difference between a database server and a data store?", "query": "SELECT T1.Name,  T1.Description FROM database AS T1 JOIN data_store AS T2 ON T1.database_id  =  T2.database_id WHERE T2.Name  =  \"database\""}
{"question": "Show the first name, last name and number of players who participated in the match in which the team has the most points", "query": "SELECT T1.first_name,  T1.last_name,  T1.number_of_players FROM match AS T1 WHERE T1.team_id  =  (SELECT T2.team_id FROM team AS T2 WHERE T2.team_id_fk  =  T1.team_id) AND T1.points  =  (SELECT max(T3.points) FROM match AS T3 WHERE T3.team_id_fk = T1.team_id)"}
{"question": "List the name of all customers who have a birthday in the month of January and the country of South Africa", "query": "SELECT T1.name FROM customer AS T1 JOIN customer_birthday AS T2 ON T1.Customer_ID  =  T2.Customer_ID WHERE T2.Birthday_Month  =  \"January\" AND T2.Country  =  T1.Country;"}
{"question": "Return names of songs in volumes that have at least 10 words", "query": "SELECT name FROM track AS T1 JOIN volume AS T3 ON T1.track_id  =  T3.[track_id] WHERE T3.volume  >  10"}
{"question": "How many employees work at the company 'A'? How many employees work at the company \"B\"?", "query": "SELECT T1.employee_id,  T1.name,  T1.[company_name] FROM employee AS T1 JOIN company AS T2 ON T1.company_id  =  T2.[company_id] GROUP BY T1.employee_id, T1.name, T1.company_name"}
{"question": "Find the number of students who are taking a course with a specific topic", "query": "SELECT T1.topic_id,  T1.topic_name,  T1.topic_description,  T1.topic_type,  T1.topic_level,  T1.topic_number,  T1.topic_credit_hours,  T1.topic_instructor_id,  T1.course_id,  T1.student_id,  T1.date_of_registration,  T1.date_end_of_course,  T1.date_start_of_course,  T2.course_name,"}
{"question": "What was the name of the first president of the United Nations?", "query": "SELECT T1.name FROM presidents AS T1 WHERE T1.name  =  \"Theodore Roosevelt\""}
{"question": "What are the first and last names of all the customers of the bank \"RBS\"?", "query": "SELECT T1.first_name,  T1.last_name FROM customer AS T1 WHERE T1.bank_id  =  'RBS'"}
{"question": "What are the numbers and names of students who are taking at most two courses, and at least one course?", "query": "SELECT T1.student_id,  T1.course_id,  T1.num_courses,  T1.num_classes,  T1.num_credits,  T1.num_semesters,  T1.num_years,  T1.num_grades,  T1.num_units,  T1.num_hours,  T1.num_days,  T1.num_weeks,  T1.num_months,  T1.num_quarters,  T1.num_quizzes,  T1"}
{"question": "What is the name and id of the employee whose last name is \"Vander\"", "query": "SELECT T1.last_name,  T1.id FROM employees AS T1 JOIN employees AS T2 ON T1.employee_id  =  T2.\"id\" WHERE T2.first_name  =  \"Vander\""}
{"question": "Find the names of all products with length smaller than 3 or", "query": "SELECT T1.Name FROM product AS T1 WHERE T1.length  <  3"}
{"question": "Please show the names of all the cities in the country", "query": "SELECT T1.city_name FROM city AS T1 WHERE T1.country_id  =  1"}
{"question": "Find the names of people who have a friend named \"Sylvia\"", "query": "SELECT name FROM people WHERE person_id  IN (SELECT person_id FROM friend WHERE friend_name  =  \"Sylvia\")"}
{"question": "What is the total number of flights with a speed below 1000?", "query": "SELECT T1.flight_id,  T1.flight_time,  T1.flight_speed FROM flight AS T1 WHERE T1.flight_time  >=  '2009-01-01' AND T1.flight_time  <  '2009-01-01 00:00:00' AND T1.flight_speed  <  1000"}
{"question": "Find the price of all books with titles containing the word \"history\"", "query": "SELECT T1.price FROM book AS T1 JOIN book_details AS T2 ON T1.book_id  =  T2.book_id WHERE T2.title  =  'history'"}
{"question": "What is the total amount of settlement across all settlements in the country?", "query": "SELECT SUM(Amount_Settlement) FROM settlements"}
{"question": "What are the names, average ages, and numbers of drivers who can drive more than 10,000 miles per year?", "query": "SELECT T1.name,  T1.age,  T1.mileage FROM drivers AS T1 WHERE T1.mileage  >  10000"}
{"question": "What is the title and author of the book that John has written?", "query": "SELECT title,  author FROM book WHERE id = (SELECT book_id FROM book WHERE author = \"John\")"}
{"question": "(a question about a SQL table) - > (a novel question, about a table)", "query": "(the sql query to answer the query)"}
{"question": "What are the names, the roles and the locations of all the employees?", "query": "SELECT T1.firstname,  T1.lastname,  T1.title,  T1.department,  T1.location,  T1.role,  T1.salary,  T1.phone,  T1.email,  T1.fax,  T1.email_address,  T1.fax_number,  T1.phone_number,  T1.address,  T1.address_line1,  T1.address_city,  T1.address_state,  T1.address_zip,"}
{"question": "Show the name and number of the customers who have been buying the products \"coffee\" and \"tea\"", "query": "SELECT T1.name,  T2.count(*) FROM customer AS T1 JOIN product_purchases AS T2 ON T1.customer_id  = T2.customer_id WHERE T2.product_name  =  \"coffee\" AND T2.product_name  like  \"tea\""}
{"question": "What are the names, genders and ids of the administrators who live and work in the city of New York?", "query": "SELECT name FROM administrator WHERE city_id  =  \"New York\""}
{"question": "List all the students who have a special interest in the field of computer science", "query": "SELECT T1.student_id,  T1.name_first,  'Computer Science' AS field FROM student AS T1 JOIN student_field AS T2 ON T1.student_id  =  T2.student_id WHERE T2.field  =  'Computer Science'"}
{"question": "Find the names of the customers who have a credit card with \"Mercury\" name", "query": "SELECT T1.name FROM customer AS T1 JOIN credit_card AS T2 ON T1.cid  =  T2.cid WHERE T2.name  =  \"Mercury\""}
{"question": "What is the price of the product \"Beverage\" of the company \"Lionel Inc\"?", "query": "SELECT price FROM products WHERE product_name = \"Beverage\" AND company_name = \"Lionel Inc\""}
{"question": "Find the name of the employee with the most work hours", "query": "SELECT T1.name FROM employee AS T1 JOIN employee_work AS T2 ON T1.id  =  T2.employee_id WHERE T2.hours  >  (SELECT max(hours) FROM employee_work)"}
{"question": "Which row has the highest average temperature?", "query": "SELECT T1.temperature FROM weather AS T1 WHERE T1.date  =  \"2016-01-01\" AND T1.location  =  \"New York\" AND T1.temperature  =  (SELECT AVG(T2.temperature) FROM weather AS T2 WHERE T2.date  =  \"2016\" AND T2.location  =  \"New york\")"}
{"question": "What is the name and number of the document that has the name \"Tennis Ball\" in the content field?", "query": "SELECT T1.document_name FROM documents AS T1 WHERE T1.content  =  \"Tennis Ball\""}
{"question": "How many users have an email with the name \"John Doe\"?", "query": "SELECT T1.email FROM user AS T1 WHERE T1.name  =  \"John Doe\""}
{"question": "What are the issue dates of volumes which have been released in the last three years", "query": "SELECT T1.issue_date,  T2.volume_id FROM volume AS T1 JOIN issue_date AS T2 ON T1.volume_id  =  T2.volume_id WHERE T1.issue_date  IN (SELECT T3.issue_date FROM volume AS T3 JOIN issue_date AS T4 ON T3.volume_id  ="}
{"question": "List the names and total of employees who have a major in Computer Science", "query": "SELECT T1.name,  T1.total FROM employees AS T1 JOIN major AS T2 ON T1.emp_id  =  T2.emp_id WHERE T2.major_code  =  \"CS\""}
{"question": "What is the number, name, and start and end dates of the apartments in the building with the short name \"Columbus Square\"?", "query": "SELECT T1.apartment_id,  T1.name,  T1.[start_date],  T1.[end_date] FROM apartments AS T1 WHERE T1.short_name = \"Columbus Square\""}
{"question": "List all the customers who has bought the same product as the first customer", "query": "SELECT T1.customer_id,  T1.product_id,  T1.quantity,  T1.price,  T1.date_purchased FROM customer AS T1 JOIN product AS T2 ON T1.product_id  =  T2.product_id WHERE T2.product_id  =  ( SELECT MIN(product_id) FROM customer )"}
{"question": "What are the names and salaries of all employees of the company?", "query": "SELECT T1.name,  T1.salary FROM employees AS T1"}
{"question": "How many days have passed from the day of the event and how many days have passed from the day I saw the movie?", "query": "SELECT date_format(date_sub(curdate(), interval dayofweek(date_sub(curdate(), interval dayofweek(date_add(date_sub(curdate()), interval dayofweek(date_from_unixtime(now() - interval dayofweek(date_to_unixtime(date_add(date_add(date_from_unixtue(now() - interval dayofday(date_sub(curdate()))), interval hour(date_sub(curdate())), interval minute(date_sub(curdate())), interval second("}
{"question": "What is the highest price for the product?", "query": "SELECT max(price) FROM products"}
{"question": "What are the names (first and last) of all employees in the department with the largest number of employees?", "query": "SELECT T1.first_name,  T1.last_name FROM employees AS T1 WHERE T1.department_id  =  (SELECT T2.department_id FROM departments AS T2 WHERE T2.department_name  =  \"Department with the largest number of employees\")"}
{"question": "What is the average cost of a package of a product with ID=2345?", "query": "SELECT T1.price FROM products AS T1 WHERE T1.id  =  2345"}
{"question": "- The questions are listed in random order", "query": "- The questions are listed in random"}
{"question": "What are the names (first and last) of the customers who purchased the highest number of products?", "query": "SELECT T1.first_name,  T1.last_name FROM customer AS T1 JOIN purchases AS T2 ON T1.customer_id  = T2.customer_id WHERE T2.product_count  >  (SELECT max(product_count) FROM purchases)"}
{"question": "What is the name, age, and address of the only son of the couple whose names are \"Brenton\" and \"Lisa\"?", "query": "SELECT name, age, address FROM family WHERE name  =  \"Brenton\" AND age  =  \"27\" AND address  =  \"123 Main Street\""}
{"question": "List the name of the city where the bus stop with the id #1244 is located", "query": "SELECT city_name FROM city WHERE city_id  =  1244"}
{"question": "Find the titles of movies that have been released in the last week", "query": "SELECT T1.title FROM Movie AS T1 WHERE T1.release_date  >  DATE_SUB(NOW(), INTERVAL 1 WEEK)"}
{"question": "Find the details of the movies where the protagonist have a beard", "query": "SELECT T1.movie_id,  T2.character_name,  T2.character_id,  T2.actor_id,  T2.role_id,  T2.gender,  T2.hair_color,  T2.hair_style,  T2.hair_length,  T2.eye_color,  T2.eye_style,  T2.skin_color,  T2.skin_tone,  T2.body_type,  T2.body_size,  T2.height,  T2."}
{"question": "Show the names and age of all the engineers", "query": "SELECT T1.name,  T1.age FROM engineer AS T1"}
{"question": "Find the names of students who have been awarded the highest marks for Math", "query": "SELECT T1.student_name FROM students AS T1 JOIN student_marks AS T2 ON T1.id  = T2.student_id WHERE T2.mark  =  'A'"}
{"question": "What are the names that belong to the highest levels of abstraction?", "query": "SELECT name FROM Person ORDER BY level_of_abstraction DESC"}
{"question": "What are the names, first names, and phone numbers of all the customers who have made purchases within the last year?", "query": "SELECT T1.customer_first_name, T1.customer_last_name, T1.customer.customer_phone FROM customers AS T1 WHERE T1.date_of_purchase  >  DATE_SUB(NOW(), INTERVAL 1 YEAR)"}
{"question": "What is the total salary of all the employees?", "query": "SELECT T1.salary FROM employee AS T1 JOIN salary AS T2 ON T1.id  =  T2.employeeid"}
{"question": "What is the name for the store that has the most items with a price above $1000?", "query": "SELECT name FROM store WHERE price  >  1000"}
{"question": "What is the name and id of the band that performed in the song named \"All I Want Is You\"?", "query": "SELECT name_first,  name_last,  player_id FROM player AS T2 JOIN player_award AS T3 ON T2.player_id  =  (SELECT player_id FROM player AS T4 WHERE T4.name_first  =  \"All I Want Is You\") GROUP BY T2.player_id ORDER BY count (DISTINCT T4.name_first) DESC LIMIT 1;"}
{"question": "What is the number of members with the first name 'Mary' and the last name 'Smith'?", "query": "SELECT COUNT(*) FROM members WHERE first_name  =  \"Mary\" AND last_name  =  \"Smith\""}
{"question": "What are the names, ages and job titles of all the students?", "query": "SELECT T1.name,  T1.age,  T1.job_title FROM students AS T1"}
{"question": "(a novel question, about a table) What are the names of the oldest students in the table?", "query": "SELECT name FROM Student WHERE age  =  (SELECT min(age) FROM student)"}
{"question": "What are the names, classes, ranks, and salaries of all members of the CFO's office?", "query": "SELECT T1.firstname,  T1.lastname,  T1.class,  T1.salary,  T1.rank,  T1.office_id FROM employee AS T1 JOIN office AS T2 ON T1.office_id  =  T2"}
{"question": "Who was the first person to complete the task?", "query": "SELECT T1.first_name,  T1.last_name FROM student AS T1 JOIN student_info AS T2 ON T1.id  =  T2.id WHERE T2.first_name  =  \"John\" AND T2.last_name  =  \"Doe\""}
{"question": "What is the name and age of the student who took the test '9' on the 1st of January?", "query": "SELECT T1.name,  T1.age FROM students AS T1 WHERE T1.test_id  =  \"9\""}
{"question": "What are the names, ages, and genders of all students in a class of 50 students?", "query": "SELECT T1.name,  T1.age,  T1.gender FROM students AS T1 WHERE T1.class_id  =  \"50\""}
{"question": "Give the names of the people who have taken at least one course", "query": "SELECT T1.student_id,  T1.name_first,  count(*) FROM student AS T1 JOIN course AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*)  DESC LIMIT 1"}
{"question": "Count the number of movie titles from the list", "query": "SELECT count(*)  FROM Movies WHERE title  LIKE '%' ||? || '%'"}
{"question": "What are the average and maximum numbers of words per sentence in the book \"The Catcher in the Rye\" by J", "query": "SELECT AVG(word_count),  MAX(word_count) FROM book WHERE book_id  =  'The_Catcher_in_the_Rye'"}
{"question": "What is the average age of students who live on the coast with code \"NYC\" and had a degree in the last 5 years?", "query": "SELECT AVG(age) FROM Student WHERE city_code  ==  \"NYC\" AND degree_date  >  \"2009-01-01\""}
{"question": "What are the names, birthdates and email addresses of the employees who made a purchase from a company?", "query": "SELECT T1.first_name,  T1.last_name,  T1.email,  T1.birthdate FROM employees AS T1 JOIN purchases AS T2 ON T1.employee_id  =  T2.employee_id"}
{"question": "What are the names and major cities of the states, and the population of each state?", "query": "SELECT T1.state_name,  T1.state_abbr,  T1.population FROM states AS T1 JOIN states_and_territories AS T2 ON T1.state_id  =  T2._id WHERE T2.territory_id  =  \"1\""}
{"question": "What is the total cost of the products that cost less than 100?", "query": "SELECT T1.product_name,  T1.price,  T1.quantity FROM product AS T1 WHERE T1.price  <  100"}
{"question": "What are the names, salaries and departments of all employees?", "query": "SELECT T1.name,  T2.salary,  T3.department FROM employee AS T1 JOIN salary AS T2 ON T1.employee_id  =  T2.employee_id JOIN department AS T3 ON T2.department_id  =  T3.department_id"}
{"question": "What is the name if the product with the id \"1234\"?", "query": "SELECT name FROM product WHERE product_id = \"1234\""}
{"question": "What is the name and type of the documents of the company?", "query": "SELECT T1.type,  T1.name FROM documents AS T1 WHERE T1.company_id  =  '1'"}
{"question": "what is the id of the customer of the largest purchase amount?", "query": "SELECT T1.customer_id FROM customer AS T1 WHERE T1.purchase_amount  =  ( SELECT max(T2.purchase_amount) FROM customer AS T2 )"}
{"question": "What is the average number of employees in each of the following countries?", "query": "SELECT AVG(employee_count) FROM countries"}
{"question": "Find the names and ages of the employees who have been at their current job for less than three months", "query": "SELECT T1.name,  T1.age FROM employee AS T1 WHERE T1.joining_date  <  DATE_SUB(NOW(), INTERVAL 3 MONTH)"}
{"question": "What is the title and length of the movie that has the highest gross?", "query": "SELECT T1.title,  T2.length FROM movies AS T1 JOIN movies_lengths AS T2 ON T1.movie_id  =  T2.movie_id WHERE T2.length  =  (SELECT MAX(length) FROM movies_lengths)"}
{"question": "Find the number of customers who are registered in more than one institution", "query": "SELECT count(*) AS cnt FROM customer WHERE customer_id  IN (SELECT customer_id FROM customer_institution)"}
{"question": "What are the names, titles and salaries of all employees?", "query": "SELECT T1.name,  T1.title,  T1.salary FROM employees AS T1 WHERE T1.id  =  (SELECT employeeid FROM employees WHERE first_name = \"John\")"}
{"question": "Which company's products have the most sales?", "query": "SELECT T1.product_name,  T1.sales FROM product AS T1 JOIN sales AS T2 ON T1.product_id  =  T2.[product_id] GROUP BY T1.product_name ORDER BY T1.sales DESC"}
{"question": "Find the average height of all tall people", "query": "SELECT AVG(height) FROM people"}
{"question": "What are all the countries in Europe that are not in the European Union?", "query": "SELECT Country FROM Europe WHERE NOT EXISTS (SELECT * FROM European_Union)"}
{"question": "What are the names and ids of books with more than 20 pages?", "query": "SELECT T1.name,  T1.\"id\" FROM book AS T1 WHERE T1.pages  >  20"}
{"question": "What are the id and address of students who had a total of more than 100 hours of study in a semester?", "query": "SELECT T1.student_id,  T1.address FROM students AS T1 WHERE T1.hours_of_study  >  100 GROUP BY T1.student_id"}
{"question": "What are the numbers and names of all courses taught in the department of Mathematics?", "query": "SELECT T1.course_id,  T1.course_name FROM course AS T1 WHERE T1.department_id  =  \"MATH\""}
{"question": "What is the name and origin of all products that are red in color?", "query": "SELECT T1.Product_name,  T2.Color FROM product_table AS T1 JOIN product_color AS T2 ON T1.id  = T2.id WHERE T2.color  =  'Red'"}
{"question": "What are the unique name of races that held after 2000 and that are in Spain?", "query": "SELECT DISTINCT race_name FROM race WHERE race_year  >=  2000 AND race_country = \"Spain\""}
{"question": "What are the different types of vehicles that do not have the word \"car\" in their title?", "query": "SELECT T1.vehicle_type FROM vehicles AS T1 JOIN vehicles_types AS T2 ON T1.vehicle_type  =  T2.vehicle_type WHERE T2.name !=  \"car\""}
{"question": "What does the weatherman say about the weather in San Francisco, CA, USA on a certain day?", "query": "SELECT T1.weather_description FROM weather AS T1 JOIN city AS T2 ON T1.city_id  =  T2.city_id WHERE T2.name  = \"San Francisco\" AND T2.country  =  \"USA\" AND T2.state  =  \"CA\" AND T2.date  =  \"2013-12-12\""}
{"question": "What are the names, id, and grades of the students enrolled in a particular class?", "query": "SELECT T1.name,  T1.id,  T1.grade FROM student AS T1 WHERE T1.class_id =?"}
{"question": "What is the full name of the person in the third row of the first table?", "query": "SELECT name FROM employee WHERE employee_id  =  \"3\""}
{"question": "What is the average age of all employees at the company where the youngest employee is a secretary?", "query": "SELECT AVG(age) FROM employee WHERE employee_id  =  (SELECT MIN(employee_id) FROM employee)"}
{"question": "Find the names and ids of the customers with the highest revenue", "query": "SELECT T1.name,  T1.id FROM customer AS T1 JOIN order_details AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.revenue  >  ( SELECT max(T3.revenue) FROM order_details AS T3 )"}
{"question": "what are the names and flags of ships with a captain that is not a Midshipman?", "query": "SELECT T1.name,  T1.flag FROM ships AS T1 WHERE T1.captain_id  =  '1' AND T1.midshipman_id  =  '0'"}
{"question": "Find the name of the ships that have their names in uppercase", "query": "SELECT T1.name FROM ship AS T1 WHERE T1.name  LIKE  '%[^A-Z]%'"}
{"question": "What are the names and salaries of the employees who have access to the office of the President for the first time?", "query": "SELECT T1.first_name,  T1.last_name,  T1.salary FROM employees AS T1 JOIN employees AS T2 ON T1.manager_id  =  T2.id WHERE T1.manager_id  IN (SELECT id FROM manager WHERE first_name  =  \"John\" AND last_name  =  \"Doe\")"}
{"question": "What are the names and ages of all students in the school?", "query": "SELECT T1.student_id,  T1.name,  T1.age FROM student AS T1"}
{"question": "Find all events that were held by cities that have a population greater than 10000", "query": "SELECT T1.event_id FROM events AS T1 JOIN cities AS T2 ON T1.city_id  =  T2.city_id WHERE T2.population  >  10000"}
{"question": "What are the names, email addresses, and phone numbers of all students?", "query": "SELECT T1.fname,  T1.lname,  T1.email,  T1.phone FROM student AS T1;"}
{"question": "What is the first and last name of every student with a course with the name \"Computer Science and Engineering\"?", "query": "SELECT T1.first_name,  T1.last_name FROM student AS T1 JOIN course AS T2 ON T1.id  =  T2.id WHERE T2.name  =  \"Computer Science and Engineering\""}
{"question": "What is the first name of all the students?", "query": "SELECT T1.student_fname,  T1.student_lname FROM student AS T1 JOIN student_grades AS T2 ON T1.student_id  =  T2.student_id WHERE T2.grade_id  =  1"}
{"question": "(a novel question, about a mrechine): What are the ids and names of all the students who are not from Boston?", "query": "SELECT T1.student_id,  T1.name FROM student AS T1 WHERE T1.city  =  \"Boston\" AND T1.city_code  =  \"BOS\""}
{"question": "What is the first and last name of the customer that will be paid with a Visa card?", "query": "SELECT T1.first_name,  T1.last_name FROM customer AS T1 JOIN credit_card AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.type  =  \"Visa\""}
{"question": "Return the name of the professor whose office is in room number 4", "query": "SELECT T1.professor_name FROM professors AS T1 JOIN offices AS T2 ON T1.professor_id  =  T2.professor_id WHERE T2.room_number  =  4"}
{"question": "\"How many hours do the students spend studying\"", "query": "SELECT T1.hours_studying,  T2.hours_sleeping FROM student AS T1 JOIN time_table AS T2 ON T1.id  =  T2.student_id WHERE T1.id  =  '1'"}
{"question": "What is the id of the product with the largest average price?", "query": "SELECT T1.id,  T2.name,  T2.price FROM Products AS T1 JOIN Products_Attributes AS T2 ON T1.id  = T2.id WHERE T2.price  >  (SELECT AVG(price) FROM Products)"}
{"question": "How many times did the number of adults and kids stay in a room reached the maximum capacity?", "query": "SELECT count(*) AS count,  room_type_code AS room_type,  room_type_name AS room_type_name,  room_type_description AS room_type_description,  room_type_capacity AS room_type_capacity,  room_type_capacity_max AS room_type_capacity_max,  room_type_capacity.room_type_capacity_max_date AS room_type_capacity_capacity_max_date,  room_type_capacity, room_type_capacity_max, room_type_capacity_capacity, room_"}
{"question": "What is the temperature of \"Shiguan\" city in January?", "query": "SELECT T1.temperature FROM Weather_Station AS T1 JOIN Weather_Station_Temperature AS T2 ON T1.station_id  =  T2.station_id WHERE T2.city_id  =  \"Shiguan\" AND T2.month  =  \"January\""}
{"question": "What is the name and description of the product with a code of 12000?", "query": "SELECT T1.product_name,  T1.product_description FROM product AS T1 WHERE T1.code  =  12000"}
{"question": "What are the courses taught by Dr", "query": "SELECT T1.course_id,  T1.course_name,  T1.course_description,  T1.course_instructor,  T1.course_start_date,  T1.course_end_date,  T1.price_in_dollars,  T1.course_location,  T1.course_type,  T1.course_year,  T1.course_semester,  T1.course_quarter,  T1.course_credit_hours,  T1.course_credits,  T1."}
{"question": "What are the names, first names and last names of all students who took Math and Physics together?", "query": "SELECT T1.name FROM student AS T1 JOIN course AS T2 ON T1.course_id  =  T2.course_id WHERE T2.course_name  =  \"Math\" AND T2.course_name !=  \"Physics\""}
{"question": "What is the name and city of the customer with the most orders?", "query": "SELECT T1.id,  T1.name_first,  'T1.name_last' FROM customer AS T1 JOIN order_items AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.id,  T2.order_id ORDER BY count(*)  DESC LIMIT 1"}
{"question": "What is the name and the number of the hotel with the highest average daily rate?", "query": "SELECT T1.name,  T1.\"average_daily_rate\" FROM hotel AS T1 WHERE T1.avg_daily_rate  =  ( SELECT AVG(T2.rate) FROM room AS T2 WHERE T1.id  =  ( SELECT T3.id FROM room AS T3 WHERE T3.hotel_id  =  T1.id ) )"}
{"question": "What are the names on the list?", "query": "SELECT T1.name FROM employees AS T1 WHERE T1.dept_id  =  1;"}
{"question": "How many people were there in the restaurant on the evening of 18/19/20 December?", "query": "SELECT count(*) AS count FROM table WHERE date  =  \"18/19/20\""}
{"question": "In which city did temperature reach its maximum in March?", "query": "SELECT T1.city,  T2.temperature FROM Weather AS T1 JOIN Temperature AS T2 ON T1.city  =  T2.city WHERE T2.month  =  'March'"}
{"question": "When was the last time you saw a deer? Give me the name of the place", "query": "SELECT name FROM place WHERE place_name  =  \"Deer\""}
{"question": "What is the name and level of catalog structure which has level number between 5 and 10", "query": "SELECT catalog_level, catalog_level_name FROM Catalog_Structure WHERE catalog_type_code = \"catalog\" AND catalog_level_number BETWEEND 5 AND 10"}
{"question": "Find the average age of the people in the city with the greatest number of employees?", "query": "SELECT AVG(age) FROM city WHERE population  >  1000"}
{"question": "What are the id's of all drivers who have been registered in the country of United States for at least five years?", "query": "SELECT T1.driver_id,  T1.country_name FROM driver AS T1 JOIN country AS T2 ON T1.country_id  =  T2.country_id WHERE T1.registration_date  >  DATE_SUB(CURDATE(), INTERVAL 5 YEAR)"}
{"question": "What is the name, age, and number of months of the shortest greek letter?", "query": "SELECT name,  age,  months FROM greek_letter WHERE months  =  '1'"}
{"question": "List the names of all countries in descending order of population", "query": "SELECT name FROM country ORDER BY population DESC"}
{"question": "Find the number of films that have a title that starts with \"The\"", "query": "SELECT count(*) AS total FROM film WHERE title LIKE \"%The%\""}
{"question": "Tell me the names of the employees who have the same first name as the Manager", "query": "SELECT T1.name FROM employee AS T1 JOIN manager AS T2 ON T1.emp_id  =  T2.[id] WHERE T2.name  =  \"John\""}
{"question": "What is name of the club, which has the least members?", "query": "SELECT T1.club_name,  T2.members FROM club AS T1 JOIN club_members AS T2 ON T1.club_id  =  T2.club_id WHERE T1.club_id  <  (SELECT T3.club_id FROM club AS T3 WHERE T3.club_id  =  '1')"}
{"question": "What is the average age of the students in the college with the name \"Peterson\"?", "query": "SELECT average(T2.age) FROM STUDENT AS T1 JOIN STUDENT_INFO AS T2 ON T1.Student_ID  =  T2._id WHERE T1.name  =  \"Peterson\""}
{"question": "What are the names, and locations, of the first three airports in the world", "query": "SELECT T1.name,  T1.location FROM airports AS T1 WHERE T1.name  =  \"Airport 1\" OR T1.name  =  'Airport 2' OR T1.name  = 'Airport 3'"}
{"question": "List the names and addresses of all persons whose names start with the letters \"J\" and \"R\"", "query": "SELECT T1.firstname,  T1.lastname,  T1.address FROM person AS T1 WHERE T1.firstname  LIKE 'J%' AND T1.lastname  LIKE 'R%'"}
{"question": "All the information about the student who uses the name \"Ivana\"", "query": "SELECT T1.first_name,  T1.last_name,  T1.email,  T1.phone,  T1.address,  T1.city,  T1.state,  T1.\"zip\",  T1.country,  T1.gender,  T1.birth_date,  T1.dob,  T1.city_id,  T1.state_id,  T1.country_id,  T1.gender_id,  T1.birth_day_id,  T1.city_"}
{"question": "List the names of the cities which are located on the left side of a river and are to the right of a river", "query": "SELECT name FROM city WHERE city_id NOT IN (SELECT city_id FROM river)"}
{"question": "Show the list of all the employees who have been fired from their jobs", "query": "SELECT T1.employee_id,  T1.name_first,  name_last,  T1.[status] FROM employee AS T1 JOIN employee_history AS T2 ON T1.employee_id  =  T2.[employee_id] WHERE T2.[status]  =  'fired'"}
{"question": "what is the id of the customer who bought the phone with the least amount of money", "query": "SELECT T1.customer_id FROM customer AS T1 WHERE T1.amount  =  ( SELECT min(amount) FROM customer )"}
{"question": "(a question about a sql table) find the GDP of the city with the smallest regional population", "query": "SELECT city,  gdp FROM cities WHERE city  =  \"New York\" AND population  =  \"1\""}
{"question": "What are the ages of the employees?", "query": "SELECT T1.age FROM employee AS T1 WHERE T1.id  =  \"1\""}
{"question": "List the software platform that has the greatest number of devices", "query": "SELECT T1.platform_id,  T2.platform_name FROM devices AS T1 JOIN platforms AS T2 ON T1.platform_id  =  T2.platform_id"}
{"question": "Find the names of musicians who have the same first name as their fathers", "query": "SELECT T1.first_name,  T1.last_name FROM musicians AS T1 JOIN musicians_fathers AS T2 ON T1.first_name  =  T2.first_name WHERE T2.father_first_name  =  \"John\""}
{"question": "List all first, middle, and last names, ordered by middle name", "query": "SELECT T1.last_name,  T1.first_name,  'Middle' AS middle_name FROM people AS T1 ORDER BY T1.middle_name"}
{"question": "\"Find the names of the products with length lower than 3 or height greater than 5", "query": "SELECT T1.product_name FROM product AS T1 WHERE T1.length <  3 OR T1.height >  5"}
{"question": "What are the names, ordered by date, of the schools that have a student in the class of 2012?", "query": "SELECT T1.school_id,  T1.name,  T1.date FROM school AS T1 JOIN student AS T2 ON T1.school_id  =  T2._id WHERE T2.class_year  =  2012"}
{"question": "What are the average hours of all projects?", "query": "SELECT avg(hours) FROM project"}
{"question": "What is the id, name, and status of the latest statement?", "query": "SELECT T1.id,  T1.name,  T1.status FROM statement AS T1 WHERE T1.id  =  (SELECT max(id) FROM statement);"}
{"question": "Find the name of employees who had a birthday in the year 2000", "query": "SELECT T1.name FROM employees AS T1 WHERE T1.birthday  =  2000"}
{"question": "What is the name and age of the student who studied at the school with the code \"LIT\"?", "query": "SELECT T1.name,  T1.age FROM students AS T1 WHERE T1.school_code  =  \"LIT\""}
{"question": "Find the names of the products with the highest number of customers", "query": "SELECT T1.product_name,  T2.customer_name FROM products AS T1 JOIN orders AS T3 ON T1.product_id  =  T3.product_id JOIN customers AS T4 ON T3.customer_id  =  T4.customer_id WHERE T4.customer_name  =  'John Smith'"}
{"question": "What are the numbers of employees who have worked for the company for 10 years?", "query": "SELECT count(*)  FROM employee WHERE age  >=  10"}
{"question": "(a novel question, about a question about a new topic), after \"", "query": "(the sql query to answer the new question)"}
{"question": "What are the names in alphabetical order of the organizations that are not included in the list of organizations in the first question?", "query": "SELECT T1.Name FROM Organization AS T1 WHERE T1.Name NOT IN (SELECT T2.Name FROM Organization AS T2)"}
{"question": "Find the names of all doctors named John", "query": "SELECT T1.name FROM doctors AS T1 WHERE T1.name  =  \"John\""}
{"question": "What is the name of the city with the highest population?", "query": "SELECT T1.name FROM city AS T1 JOIN city_population AS T2 ON T1.city_id  =  T2._id WHERE T2.population  >  (SELECT max(population) FROM city)"}
{"question": "show the number of friends of a student named \"Ted\" in chronological order, starting from the latest friend", "query": "SELECT name FROM friend WHERE student_id = \"Ted\" ORDER BY date_added DESC"}
{"question": "What is the last name of the employee who has been assigned to the office \"University\" for the longest time?", "query": "SELECT T1.last_name FROM employee AS T1 JOIN employee_department AS T2 ON T1.employee_id  =  T2._employee_id WHERE T2.department_id  =  \"University\" AND T1.last_name  =  \"LAST\""}
{"question": "(a novel question, about a search engine) Find the number of users that have ever accessed the site with the highest number of hits", "query": "SELECT COUNT(*) FROM (SELECT DISTINCT user_id FROM user_history WHERE user_id  =  \"user_id\" AND date_added  >  \"date_added\" AND date_added  <  \"date_added\" + INTERVAL 1 DAY) AS T1"}
{"question": "What is the average age of doctors who are older than 45?", "query": "SELECT AVG(age) FROM doctor WHERE age > 45"}
{"question": "Find the names of the cities with most number of airports", "query": "SELECT T1.city_name,  T2.name FROM city AS T1 JOIN airport AS T2 ON T1.city_id  =  T2.city_id WHERE T1.population  >  0"}
{"question": "Find the id of the student who is in the second year", "query": "SELECT id FROM student WHERE year  =  \"2\""}
{"question": "What are the employee ids of the people who never worked in the same department as me?", "query": "SELECT T1.employee_id FROM employees AS T1 JOIN employees AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_id!= T2.department_id"}
{"question": "All the companies that have a minimum of 1 office in the city of New York", "query": "SELECT T1.company_name,  T1.city_name,  T1.state_code,  T1.state_name,  T1.zip_code,  T1.country,  T1.\"city_name\" AS city_name_2,  T1.state_id,  T1.state_abbr,  T1.state_full_name,  T1.country_code,  T1.city_code,  T1.street_name,  T1.street_number,  T1.street_type,"}
{"question": "What are the first and last names of all students in my database?", "query": "SELECT T1.first_name,  T1.last_name FROM student AS T1 WHERE T1.stuid  =?"}
{"question": "What are the names, genders, and numbers of all the students in the class?", "query": "SELECT T1.student_name,  T1.gender,  T2.number FROM student AS T1 JOIN class AS T2 ON T1.student_id  =  T2.student_id"}
{"question": "(the question above)", "query": "SELECT T1.id,  T1.name_first,  'player' AS type,  T1.player_name,  T1.player_last,  T1.team_id,  T1.player_number,  T1.player_position,  T1.player_height,  T1.player_weight,  T1.player_birthday,  T1.player_first_game,  T1.player_second_game,  T1.team_name,  T1.team_number,  T1.team_"}
{"question": "What are the names and the last 3 digits of the credit cards used by more than 3 customers?", "query": "SELECT T1.credit_card_number,  T1.name, T1.last_3_digits FROM credit_card AS T1 WHERE T1.number_of_customers  >  3"}
{"question": "What are the salaries of the staff that are married?", "query": "SELECT T1.employee_id,  T2.salary FROM employees AS T1 JOIN employees AS T2 ON T1.employee_id  =  T2.employee_id WHERE T1.marital_status  = 'married'"}
{"question": "What are the names and ages of students in the class of 2014?", "query": "SELECT T1.name,  T1.age FROM student AS T1 WHERE T1.class_id  =  '2014'"}
{"question": "What are the names and prices of products that are sold by the store with the highest average price?", "query": "SELECT T1.product_name,  T2.price FROM products AS T1 JOIN products AS T2 ON T1.price  =  T2.price WHERE T1.store_id  =  '1' AND T1.price  >  T2.price"}
{"question": "What are the names and first names of the customers who have used a service in the last four days?", "query": "SELECT customer_name,  customer_first_name FROM customer WHERE date(date_of_service)  >=  date(now() - interval 4 day)"}
{"question": "(a question about a sql table) Show the number of votes for each party", "query": "SELECT T1.party_id,  T1.party_name,  T1.party_votes FROM party AS T1 WHERE T1.party_id  =  (SELECT T2.party_id FROM party AS T2 WHERE T2.party_name  =  \"Democratic\")"}
{"question": "What are the first names, last names and ids of the players who won the most matches this season?", "query": "SELECT T1.first_name,  T1.last_name,  T1.id FROM player AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.player_id WHERE T2.season  =  \"2008\" AND T2.winner  =  1"}
{"question": "What are the names, genders and ages of all residents in apartment \"21\" in apartment house \"Bond\" in New York City?", "query": "SELECT name, gender, age FROM residents WHERE apartment_id  =  \"21\" AND apartment_house_id  =  \"Bond\""}
{"question": "What is the average age of the people with the highest height?", "query": "SELECT AVG(Age) FROM height_distribution WHERE Height  =  MAX(Height)"}
{"question": "What is the last name for all the people in the database?", "query": "SELECT T1.last_name FROM person AS T1 WHERE T1.id  =  ( SELECT MAX(id) FROM person )"}
{"question": "Find the name of the city which is the place where the person has the most number of relatives that are doctors, and the number of relatives that are architects", "query": "SELECT city,  count(*) FROM relatives GROUP BY city HAVING count (doctor)  >  count (architect)"}
{"question": "What are the names in which the person was listed as a consultant?", "query": "SELECT T1.name FROM consultant AS T1 WHERE T1.name  =  \"John Smith\""}
{"question": "What are the id and name of the student who has the largest number of credits?", "query": "SELECT T1.id,  T1.name FROM student AS T1 WHERE T1.credits  =  (SELECT MAX(T2.credits) FROM student AS T2)"}
{"question": "Find the location of the university with the largest enrollment", "query": "SELECT T1.name,  T1.city,  T1.state,  T1.zip_code,  T1.country,  T1.latitude,  T1.longitude FROM Universities AS T1 JOIN CMI_Geo_Coordinates AS T2 ON T1.name  =  T2.name WHERE T2.latitude  >  0.0 AND T2.longitude  >  0.0"}
{"question": "What is the average age of a student who is in a course with the id of 18?", "query": "SELECT T1.avg_age FROM student AS T1 JOIN course AS T2 ON T1.course_id  =  T2._id WHERE T2.id  =  18"}
{"question": "What are the first names of students who have both a GPA and a GPA?", "query": "SELECT T1.first_name FROM student AS T1 JOIN grade_point_average AS T2 ON T1.id  =  T2.id WHERE T2.gpa  =  'G' AND T2.gpa  = 'G'"}
{"question": "Who are the managers in charge of more than 4 employees?", "query": "SELECT T1.manager_name FROM employees AS T1 JOIN manager AS T2 ON T1.manager_id  =  T2.manager_id WHERE T2.manager_id  >  4"}
{"question": "List the types of vehicles used on the road of Virginia", "query": "SELECT T1.type_name FROM vehicle_type AS T1 JOIN vehicle_type_description AS T2 ON T1.type_id  =  T2._id WHERE T2.description  =  \"road\""}
{"question": "What is the number of customers who have purchased at least 10 pairs of shoes?", "query": "SELECT COUNT(*) FROM customer_shoes WHERE number_of_pairs  >  10"}
{"question": "Find the name of the student who took the class \"Statistics\" and has the lowest score", "query": "SELECT T1.student_id,  T2.name FROM students AS T1 JOIN class AS T2 ON T1.crs_id  =  T2._id WHERE T2.name  = \"Statistics\" AND T1.score  =  \"lowest\""}
{"question": "Find the number of hotels where are located in the city with the city code of \"CITY\"", "query": "SELECT count(*) AS \"number of hotels\" FROM hotel WHERE city_code  =  'CITY'"}
{"question": "Show the age of the person who has the highest salary", "query": "SELECT T1.age FROM Person AS T1 JOIN Person_Salary AS T2 ON T1.id  = T2.id WHERE T2.salary  =  MAX(T3.salary)"}
{"question": "Give the names of the countries that have the most number of students in the US", "query": "SELECT T1.country_name,  T1.population FROM Country AS T1 JOIN Country_Students AS T2 ON T1.country_id  =  T2._country_id GROUP BY T1.country_name ORDER BY T1.population DESC"}
{"question": "(a question about a sql table) What are all the names of all the schools in the US?", "query": "SELECT T1.name FROM school AS T1 WHERE T1.country_code  =  \"US\""}
{"question": "What is the maximum age for a student to play cricket?", "query": "SELECT T1.age FROM student AS T1 WHERE T1.age  >  18"}
{"question": "\"What are the names of the employees in the store who are not managers?\"", "query": "SELECT T1.name FROM employees AS T1 WHERE T1.job_id  =  (SELECT T2.job_id FROM employees AS T2 WHERE T2.job_id  =  T1.job_id) AND T1.job_id  <>  (SELECT T3.job_id FROM employees AS t3 WHERE t3.job_id  = 'manager')"}
{"question": "What is the rating of the movie with the highest number of stars? Give the movie and the rating of the movie", "query": "SELECT name FROM movie WHERE rating  =  \"5.0\""}
{"question": "What is the name, age, and number of students of the class of 2007-2008 who are graduating this year?", "query": "SELECT T1.student_id,  T1.name,  T1.[year],  T1.age,  T1.number_of_students FROM class_of_2007_2008 AS T1 WHERE T1.year  =  \"2007-2008\""}
{"question": "What is the name and details of the employee who was fired from the company last week?", "query": "SELECT T1.first_name,  T1.last_name,  T1.department_id,  T1.position_id,  T1.salary,  T1.hire_date,  T1.termination_date,  T1.reason_for_termination,  T1.termination_reason,  T1.termination_effective_date,  T1.department,  T1.position,  T1.first_name_initial,  T1.last_initial,  T1.hire_from,  T1.hire"}
{"question": "What are the names and the start and end date of all the classes offered by a university?", "query": "SELECT T1.name,  T1.start_date,  T1.end_date FROM classes AS T1 WHERE T1.dept_code  = \"UNIVERSITY\""}
{"question": "(a novel question, about a d", "query": "SELECT * FROM student WHERE id  =  '1'"}
{"question": "List the full name, name of the company and id of the employee who is on the payroll of 'IBM' and has the highest salary", "query": "SELECT T1.full_name,  T2.name,  T2.id FROM employee AS T1 JOIN payroll AS T2 ON T1.id  = T2.employee_id WHERE T2.salary  =  (SELECT MAX(salary) FROM employee)"}
{"question": "Find the name of each customer who has a negative balance", "query": "SELECT customer_id,  customer_name,  customer_balance FROM customer WHERE customer_balance  <  0"}
{"question": "What are the answers for the question \"What is the date when a student is born?\"", "query": "SELECT T1.birth_date FROM students AS T1 WHERE T1.id  =  (SELECT T2.id FROM students AS T2 WHERE T2.name  =  \"John Smith\")"}
{"question": "What is the average salary of the employees who do not work in the IT department?", "query": "SELECT AVG(salary) FROM employee WHERE department_id  =  'IT'"}
{"question": "What are the names, locations and prices of the wines made from Zinfandel grapes?", "query": "SELECT T1.name,  T1.location,  T1.price FROM wine AS T1 WHERE T1.name  =  \"Zinfandel\""}
{"question": "What are the numbers of the students who have city code \"NY\"?", "query": "SELECT count(*)  FROM students WHERE city_code  =  \"NY\""}
{"question": "what is the name of the company that has the largest number of employees?", "query": "SELECT T1.company_name FROM company AS T1 WHERE T1.employees  >  (SELECT T2.employees FROM company AS T2)"}
{"question": "What is the second smallest employee in the company?", "query": "SELECT T1.first_name,  T1.last_name,  T1.salary,  T1.department_id,  T1.position_id,  T1.manager_id,  T1.company_id,  T1.title,  T1.salary_type,  T1.start_date,  T1.end_date,  T1.salary FROM employee AS T1 WHERE T1.salary  <  ( SELECT min(T2.salary) FROM employee AS T2 WHERE T2.first_"}
{"question": "What are the names, ids and country codes of all the countries in the world?", "query": "SELECT name,  id,  country_code FROM countries"}
{"question": "What are the names and ages of all the students who are living in the city of 'Hamburg'?", "query": "SELECT T1.name,  T1.age FROM student AS T1 WHERE city_name  =  'Hamburg'"}
{"question": "What are the names and ages of all the students who are in the class?", "query": "SELECT T1.first_name,  T1.last_name,  T1.age FROM Students AS T1 WHERE T1.class_id  =  '1'"}
{"question": "What are the first four names of students who have a GPA of less than 3", "query": "SELECT T1.first_name,  T1.last_name FROM students AS T1 WHERE T1.GPA  <  3"}
{"question": "find the names of the patients who are not using the medication \"procrastin-x\"", "query": "SELECT T1.patient_id,  T1.first_name,  'Procrastin-x' FROM patient AS T1 WHERE T1.medication_id  =  \"Procrastin-x\""}
{"question": "How many employees have the first name of 'Eric'", "query": "SELECT T1.firstname FROM employee AS T1 WHERE T1.firstname  =  'Eric'"}
{"question": "The results of the questionnaire are as follows", "query": "SELECT T1.question,  T1.answer FROM question AS T1 JOIN answers AS T2 ON T1.id  =  T2.id"}
{"question": "How many people on the internet use the website \"Myspace\"", "query": "SELECT count(*) AS count FROM users WHERE user_id  =  \"1\""}
{"question": "What is the name, the age, and the gender of the youngest professor?", "query": "SELECT T1.name,  T1.[age],  T1.gender FROM professor AS T1 WHERE T1.age  =  (SELECT min(age) FROM professor)"}
{"question": "Find the average student age of the university which has the largest enrollment", "query": "SELECT avg(age) FROM university"}
{"question": "What are the names and ages of the students who have three or more siblings?", "query": "SELECT T1.name,  T1.age FROM students AS T1 JOIN siblings AS T2 ON T1.id  =  T2.student_id WHERE T2.count  =  3"}
{"question": "(a question about a sql table) Find the names of all customers who have an account balance of less than $100", "query": "SELECT T1.customer_name FROM customer AS T1 WHERE T1.balance  <  100"}
{"question": "What are the id and name of the employees who have the least number of hours worked?", "query": "SELECT T1.employeeid,  T1.name FROM employees AS T1 JOIN ( SELECT T2.employeeid,  T2.name FROM employees AS T2 JOIN ( SELECT T3.employeeid,  T3.name FROM employees AS T3 JOIN ( SELECT T4.employeeid,  T4.name FROM employees AS T4 JOIN ( SELECT T5.employeeid,  T5.name FROM employees AS T5 JOIN ( SELECT T6.employeeid,  T6.name FROM employees AS T6 JOIN ( SELECT T7.employeeid,  T7.name FROM employees"}
{"question": "Show the ids of the customers who have both New (A) and Open (B) orders", "query": "SELECT T1.customer_id FROM customer_orders AS T1 JOIN customer_orders AS T2 ON T1.order_id  =  T2.order_id WHERE T1.order_type  =  \"A\" AND T2.order_type  =  'B'"}
{"question": "What are the names, locations and budgets for each employee?", "query": "SELECT T1.name,  T2.location,  T3.budget FROM employee AS T1 JOIN employee_details AS T2 ON T1.employee_id  =  T2.employee_id JOIN budget AS T3 ON T2.budget_id  =  T3.budget_id"}
{"question": "What are the names, status, and years of experience of each employee in the accounting firm?", "query": "SELECT name,  status,  year_of_experience FROM employees"}
{"question": "Find the first name and last name of all students who have at least one friend", "query": "SELECT T1.student_id,  T1.name_first,  \"name_last\" FROM student AS T1 JOIN friend AS T2 ON T1.student_id  =  T2.\"student_id\" GROUP BY T1.student_id ORDER BY count(*)"}
{"question": "What are the names, ids, and details of accounts that have a balance of $0?", "query": "SELECT T1.name,  T1.* FROM account AS T1 WHERE T1.balance  =  0"}
{"question": "What are the names and types of products and services sold by a company called 'XYZ Corporation'?", "query": "SELECT product_name,  product_type FROM products WHERE company_name  =  \"XYZ Corporation\""}
{"question": "What is the average salary of all faculty, and the average salary of all staff?", "query": "SELECT AVG(T1.salary),  AVG(T2.salary) FROM faculty AS T1 JOIN staff AS T2 ON T1.id  =  T2.faculty_id"}
{"question": "Show the most popular names in each city", "query": "SELECT T1.city,  T2.name FROM city_table AS T1 JOIN city_name_table AS T2 ON T1.city_id  =  T2.city_id WHERE T2.name  = (SELECT MAX(name) FROM city_name_table)"}
{"question": "How many employees work in the department where Joe is employed and he works as manager?", "query": "SELECT count(*) AS \"T1.name\" FROM employees AS T1 JOIN employee_department AS T2 ON T1.emp_id  =  T2.emp_id WHERE T2.dept_id  =  \"T1.name\""}
{"question": "How many students are in the class who are not taking a course?", "query": "SELECT T1.student_id FROM Student AS T1 JOIN courses AS T2 ON T1.student_id  =  T2.student_id WHERE T2.course_id  =  (SELECT course_id FROM courses WHERE course_name  =  \"Math\") AND T1.course_id  =  0"}
{"question": "List the names of the students in ascending order of age", "query": "SELECT T1.Fname,  T1.Lname FROM student AS T1 ORDER BY T1.age ASC"}
{"question": "Find the name and the phone number of the student who is the oldest student in the department of computer science", "query": "SELECT T1.name,  T2.phone_number FROM student AS T1 JOIN student_info AS T2 ON T1.id  =  T2.id WHERE T2.department_id  =  '1' AND T2.age  =  (SELECT max(age) FROM student)"}
{"question": "What are the names, locations and phone numbers of all branches of the bank that has the largest assets in the US?", "query": "SELECT T1.branch_name,  T1.branch_location,  T1.branch_phone FROM branch AS T1 WHERE T1.assets  >  (SELECT T2.assets FROM branch AS T2 WHERE T2.branch_name  =  \"Bank of America\")"}
{"question": "list the names and ids of all students who are from either Engineering or Management department", "query": "SELECT T1.name,  T1.id FROM student AS T1 JOIN department_students AS T2 ON T1.student_id  =  T2.student_id WHERE T2.department_id  = 1 OR T2.department_id = 2"}
{"question": "Find the first name of the student with id 989", "query": "SELECT T1.student_id,  T2.first_name FROM students AS T1 JOIN students AS T2 ON T1.id  =  T2.id WHERE T1.id  =  '989'"}
{"question": "What are the number of students in the university?", "query": "SELECT count(*) AS \"number of students in the university\" FROM student"}
{"question": "What are the product numbers of products that have the product number of 7?", "query": "SELECT T1.product_id FROM products AS T1 WHERE T1.product_id = 7"}
{"question": "What are the first three names of the first five drivers?", "query": "SELECT T1.first_name,  T1.last_name FROM drivers AS T1 WHERE T1.first_name  IN ( \"John\", \"Mary\", \"Bob\", \"Jim\", \"Alice\" )"}
{"question": "\"show the document name and the document date", "query": "SELECT document_name,  document_date FROM documents"}
{"question": "What are the id and name of the employees who have the same names as their friends?", "query": "SELECT T1.firstname,  T1.lastname FROM employee AS T1 JOIN friend AS T2 ON T1.firstname  =  T2.firstname AND T1.lastname  =  T2.lastname"}
{"question": "Find the names of the players who have the biggest number of kills", "query": "SELECT T1.name FROM player AS T1 JOIN kills AS T2 ON T1.player_id  =  T2.player_id WHERE T2.kills  >  (SELECT max(kills) FROM player)"}
{"question": "How many documents were created during the period March 31, 2011 to April 3, 2011?", "query": "SELECT count(*) AS total FROM Documents WHERE date(created_at) BETWEEN '2011-03-31 00:00:00' AND '2011-04-03 00:00:00'"}
{"question": "What is the first person's name that is the only common name of all the students?", "query": "SELECT name_first FROM student WHERE name_first  =  (SELECT name_first FROM student WHERE name  =  (SELECT name FROM student WHERE name  =  'John' AND name_last  =  'Smith' AND name_middle  =  'John' AND age  =  '23' AND gender  = 'male' AND name_first  =  'John' AND gender  =  'female' AND name_last  = 'Smith' AND gender  =  'other' AND name_middle  = 'John' AND gender  = 'some' AND name"}
{"question": "What are the last names of all the athletes who have won a silver medal?", "query": "SELECT T1.last_name FROM athletes AS T1 JOIN medals AS T2 ON T1.athlete_id  =  T2.athlete_id WHERE T2.medal_id  =  \"Silver\""}
{"question": "Show all project ids for which there are no documents", "query": "SELECT project_id FROM projects WHERE project_id NOT IN (SELECT project_id FROM documents)"}
{"question": "What are the average age of employees whose names begin with J?", "query": "SELECT AVG(age) FROM employee WHERE name  LIKE  \"J%\""}
{"question": "What are the names and ages of all customers who have been to the same restaurant 3 or more times?", "query": "SELECT T1.customer_name,  T2.age FROM customers AS T1 JOIN orders_history AS T2 ON T1.id  = T2.customer_id WHERE (T2.order_id  =  (SELECT T3.order_id FROM orders_history AS T3 WHERE T3.customer_id  =  T1.id AND T3.order_id  =  T2.id)) AND T2.order_date  >  '2016-01-01' AND T2.order_date <  '2016-01-01';"}
{"question": "What are the names, heights, and weights of all the students in room 5-1-4?", "query": "SELECT T1.firstname,  T1.lastname,  T1.height,  T1.weight FROM student AS T1 WHERE T1.roomno  =  \"5-1-4\""}
{"question": "What is the average age of the employees who work for the department named \"Software\"?", "query": "SELECT T1.age FROM employees AS T1 WHERE T1.department_name  =  \"Software\""}
{"question": "What is the name (full name) of the person who has been nominated for the most music?", "query": "SELECT DISTINCT name FROM musician WHERE nomination = 'Most Music'"}
{"question": "What are the different types of races, and how many races", "query": "SELECT DISTINCTION T1.race,  T1.number_of_races FROM race AS T1"}
{"question": "List the products that are not available for sale", "query": "SELECT T1.product_id FROM products AS T1 WHERE T1.product_id NOT IN (SELECT product_id FROM product_availability);"}
{"question": "Find all the employees who have the title of professor", "query": "SELECT T1.first_name,  T1.last_name,  T1.department_id,  T1.position_id,  T1.salary,  T1.start_date,  T1.end_date,  T1.office_id,  T1.office_location,  T1.office_phone,  T1.office_fax,  T1.office_email,  T1.office_hours,  T1.office_manager,  T1.office_assistant,  T1.office_secret"}
{"question": "Find all employees that are not in the Marketing department", "query": "SELECT employee_id FROM employees WHERE employee_department_id  =  \"NULL\""}
{"question": "What are the ids and names of the departments with a total budget over 100000?", "query": "SELECT T1.dept_id,  T1.dept_name FROM department AS T1 WHERE T1.budget  >  100000"}
{"question": "What is the name and id of the store with the most employees?", "query": "SELECT T1.id,  T1.name FROM Store AS T1 JOIN employees AS T2 ON T1.id  = T2.store_id WHERE T2.id  =  (SELECT id FROM Store WHERE id  =  (SELECT id FROM store_id_to_store_name))"}
{"question": "What are the names and ids of the students who were elected as the best in the class?", "query": "SELECT T1.student_id,  T1.name FROM students AS T1 JOIN class_results AS T2 ON T1.student_id  =  T2.[student_id] WHERE T2.class_id  =  \"C\" AND T2.grade  =  \"A\""}
{"question": "What is the data of all documents?", "query": "SELECT T1.document_name FROM documents AS T1 WHERE T1.document_type_code  =  \"A\""}
{"question": "List the names of students who have a GPA of 3", "query": "SELECT T1.fname,  T1.lname,  T1.gpa FROM student AS T1 WHERE T1.gpa  =  3"}
{"question": "What is the average of all the weights?", "query": "SELECT AVG(weight) FROM students"}
{"question": "How many students have taken a course from a specific professor?", "query": "SELECT T1.student_id,  T1.name,  T2.crs_code FROM student AS T1 JOIN course AS T2 ON T1.course_id  =  T2.course_id WHERE T2.name  =  \"Professor's name\""}
{"question": "What are the names, and id of students who are enrolled in a course with at least one professor?", "query": "SELECT T1.student_id,  T1.name,  T1.* FROM student AS T1 JOIN course AS T2 ON T1.student_id  =  T2.student_id WHERE T2.course_id  =  'QM-101'"}
{"question": "What is the name and phone number of the person who has the highest credit score?", "query": "SELECT T1.name,  T1.phone_number FROM customers AS T1 WHERE T1.credit_score  =  (SELECT MAX(T2.credit_score) FROM customers AS T2)"}
{"question": "Find the name of the team that has the most wins", "query": "SELECT T1.name FROM team AS T1 JOIN win AS T2 ON T1.id  =  T2.team_id GROUP BY T1.name ORDER BY count(*) DESC"}
{"question": "What is the name and city of the bank that has the largest number of branches?", "query": "SELECT T1.bank_name,  T2.city FROM bank_branch AS T1 JOIN bank_branch AS T2 ON T1.branch_id  =  T2.branch_id WHERE T1.bank_name  =  'Bank of America' AND T2.city  =  'New York'"}
{"question": "(a novel question, about a table), and answer \"answer:\"", "query": "SELECT T1.question,  T1.answer FROM table_name AS T1"}
{"question": "Find all the names of films that do not have a movie market estimation", "query": "SELECT T1.title FROM film AS T2 JOIN film_market_estimation_data AS T3 ON T2.id  =  T3.film_id WHERE T3.market_estimate  =  \"null\""}
{"question": "Find the name of course with the most students enrolled", "query": "SELECT T1.course_name FROM course AS T1 JOIN students AS T2 ON T1.course_id  =  T2._id WHERE T2.count  >  T1.max_students"}
{"question": "What are the names for the different levels of the university courses?", "query": "SELECT T1.name FROM course AS T1 WHERE T1.level  =  'Bachelor'"}
{"question": "What are all the countries that have a population of at least 20 million?", "query": "SELECT Country FROM country WHERE population  >  20"}
{"question": "What is the name and id of the university that has the highest percentage of female students?", "query": "SELECT T1.university_name,  T1.university_id FROM university AS T1 WHERE T1.percentage_female  =  (SELECT MAX(T2.percentage_female) FROM university AS T2)"}
{"question": "What is the name and location of track with the most races?", "query": "SELECT T1.name,  T1.\"location\" FROM track AS T1 WHERE T1.num_races  =  ( SELECT max(T2.num_races) FROM track AS T2 )"}
{"question": "What are all the cities near New York?", "query": "SELECT city FROM cities WHERE city  =  \"New York\""}
{"question": "Find the number of employees who worked in the company as of December 31", "query": "SELECT count(*) AS count FROM employee WHERE employee_date  =  '2012-12-31'"}
{"question": "What are the names, id and address for all employees who work as a bank teller?", "query": "SELECT T1.id,  T1.name,  T1.address FROM employees AS T1 JOIN bank_teller AS T2 ON T1.id  = T2.id"}
{"question": "How many employees are on the staff of the company with the id \"3724\"?", "query": "SELECT count(*) AS cnt FROM employees WHERE company_id  =  3724"}
{"question": "Show the id, age of the person who has the most number of friends and how many are women", "query": "SELECT T1.id,  T1.age,  T1.gender FROM people AS T1 JOIN friends AS T2 ON T1.person_id  =  T2.[person_id] WHERE T2.person_id  =  (SELECT person_id FROM people WHERE id  =  (SELECT max(id) FROM people))"}
{"question": "Which is the most expensive product?", "query": "SELECT T1.product_name,  T1.price FROM product AS T1 WHERE T1.price  >  T2.price"}
{"question": "Find the names of the students who have the most friends", "query": "SELECT T1.name FROM students AS T1 JOIN friends AS T2 ON T1.id  =  T2.id WHERE T2.student_id  =  (SELECT T3.student_id FROM students AS T3 JOIN friends AS T4 ON T3.id  =  T4.id WHERE T4.student_id  =  \"T1\")"}
{"question": "What are the names, addresses and id of the books with the first author's name \"John Smith\"?", "query": "SELECT name, address, id FROM book WHERE author_name = \"John Smith\""}
{"question": "What are the names and ages of the three students who are in both the Biology and Applied Math classes?", "query": "SELECT T1.student_id,  T1.name,  T1.[age] FROM student AS T1 JOIN student AS T2 ON T1.student_id  =  T2.student_id WHERE T1.class = 'Biology' AND T2.class = 'Applied Math'"}
{"question": "What is the count of all documents?", "query": "SELECT count(*) AS count FROM documents"}
{"question": "What is the names and ages of students in the following courses:", "query": "SELECT T1.student_id,  T1.name,  T1.age FROM students AS T1 WHERE T1.course_name  =  \"statistics\""}
{"question": "What are the names, ages, and gpa's of all computer science majors in the university?", "query": "SELECT T1.first_name,  T1.last_name,  T1.age,  T1.gpa FROM student AS T1 WHERE T1.major  =  \"Computer science\""}
{"question": "Show the distinct customers", "query": "SELECT DISTINCT customer_id FROM customers"}
{"question": "What are the names, numbers, and weights of the products that contain the word \"fish\"?", "query": "SELECT T1.product_name,  T1.product_number,  T1.product_weight FROM products AS T1 WHERE T1.product_name  LIKE  \"fish\""}
{"question": "What are the names, job titles and salaries of employees in ascending order of age?", "query": "SELECT T1.firstname,  T1.lastname,  T1.job,  T1.salary FROM employee AS T1 WHERE T1.age  >  T2.age ORDER BY T1.age ASC"}
{"question": "question (a novel question), after \"", "query": "A:"}
{"question": "What are the ids of documents that have expenses", "query": "SELECT document_id, sum(cost) FROM Documents WHERE document_type_code  =  \"Expense\" GROUP BY document_id"}
{"question": "What are the names, age and ID of the students who are in the top 3 of the computer science program?", "query": "SELECT T1.student_id,  T1.name,  T1.age,  T1.student_id FROM student AS T1 JOIN student_grades AS T2 ON T1.student_id  =  T2.student_id WHERE T2.grade_id  =  3;"}
{"question": "Who is the largest employer in the state?", "query": "SELECT T1.name,  T1.\"employer_id\" FROM employer AS T1 JOIN employees AS T2 ON T1.employer_id  =  T2.\"employer_id\" GROUP BY T1.name ORDER BY count(*) DESC"}
{"question": "What are the dates for the documents that have both 'GV' type and 'PF' type expenses?", "query": "SELECT T1.date_of_expense,  T1.type_of_expense,  count(*) FROM expenses AS T1 WHERE T1.type_of_expenses  =  \"GV\" AND T1.type_of_payment  =  \"PF\" GROUP BY T1.date_of_payment"}
{"question": "Find the number of columns in each table", "query": "SELECT count(*)  FROM table_name"}
{"question": "What are the account details with the smallest value or with a value having char '5' in the value of the value?", "query": "SELECT T1.account_number,  T2.account_name,  T3.account_type,  T4.account_balance,  T5.account_currency_code,  T6.account_currency_name,  T7.account_currency_symbol,  T8.account_currency_symbol_position,  T9.account_currency_decimal_digits,  T10.account_currency_group_code,  T11.account_currency_sub_unit_code,  T12.account_currency_sub_total_digits"}
{"question": "Return all the transactions completed during the day, in the order of receipt time", "query": "SELECT T1.transaction_id,  T1.transaction_date,  T1.transaction_time,  T1.transaction_type,  T1.transaction_amount,  T1.transaction_description,  T1.transaction_status,  T1.transaction_receipt_time,  T1.customer_name,  T1.customer_address,  T1.customer_city,  T1.customer_state,  T1.customer_zip,  T1.customer_country,  T1.customer_phone,  T1.customer"}
{"question": "How many states have a river that runs through them?", "query": "SELECT T1.state_name,  T1.river_name FROM state AS T1 JOIN river AS T2 ON T1.state_id  =  T2.state_id WHERE T2.river_name  =  \"Rio Grande\""}
{"question": "Find the number of players with at least one game in each category", "query": "SELECT T1.category,  COUNT(*) FROM player AS T1 JOIN game AS T2 ON T1.player_id  =  T2.\"player_id\" GROUP BY T1.category"}
{"question": "What is the name, address, and id of the company that sells the widgets with id of '3-8-1'?", "query": "SELECT name, address, id FROM company WHERE id  =  \"3-8-1\""}
{"question": "What is the total number of people who attended the lecture?", "query": "SELECT COUNT(*) FROM attendee"}
{"question": "What is the name, age, and city of the actor who plays the role of \"Walt\" in the TV series \"Bones\"", "query": "SELECT T1.name,  T1.\"age\",  T1.city FROM actor AS T1 WHERE T1.name  =  \"Walt\""}
{"question": "Find all the movies that have been produced by Universal Pictures", "query": "SELECT DISTINCT T1.movie_id FROM movies AS T1 WHERE T1.producer_id  =  \"Universal Pictures\""}
{"question": "What is the average age of all students in a school?", "query": "SELECT AVG(age) FROM student"}
{"question": "What are the names and heights of buildings with only one institution founded after 1880 (with the city name)?", "query": "SELECT T1.city_name,  T2.name,  T2.height FROM buildings AS T1 JOIN institutions AS T2 ON T1.id  = T2.building_id WHERE T2.founded_after  =  '1880' AND T2.founded_after  >  '1880'"}
{"question": "What are the names and id of the customers who bought the item \"Punk\" and \"Orton\" in the same transaction?", "query": "SELECT customer_id,  item_id FROM orders WHERE item_id  =  \"Punk\" AND item_id  =  \"Orton\""}
{"question": "List all cities and the total number of people living in them", "query": "SELECT T1.city,  count(*) FROM city AS T1 GROUP BY T1.city"}
{"question": "What are the names, ordered by weight, of the students who have the most different majors?", "query": "SELECT T1.name,  T2.weight FROM student AS T1 JOIN student_majors AS T2 ON T1.id  =  T2.id ORDER BY T1.name ASC"}
{"question": "(What is the name of the store that has the most", "query": "SELECT name FROM store WHERE store_id  =  \"1\""}
{"question": "(a question about a sql table) Find the number of students in each class", "query": "SELECT T1.class_name,  count(*) FROM student AS T1 JOIN class AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.class_name"}
{"question": "show the average time it takes to complete the task and the number of tasks that are not completed at all", "query": "SELECT AVG(T1.time_taken) AS avg_time_taken, COUNT(*) AS total_tasks FROM Tasks AS T1 WHERE T1.status  =  'complete' AND T1.time_taken  >  0 GROUP BY T1.status"}
{"question": "What is the average time a person spends on a website?", "query": "SELECT AVG(Time) FROM (SELECT Time FROM Time_on_site WHERE website  =  \"www.google.com\") AS T1"}
{"question": "Find the names and phone numbers of all customers who have a total of more than 6", "query": "SELECT T1.customer_name,  T2.customer_phone FROM customers AS T1 JOIN orders as T2 ON T1.customer = T2.customer WHERE T1.total_order  >  6"}
{"question": "Find the name and age of people who had a birthday on \"March 15\"", "query": "SELECT name,  age FROM Person WHERE birthday = \"03/15\""}
{"question": "Find the name of all companies that do not have a marketing department", "query": "SELECT T1.company_name FROM companies AS T1 WHERE T1.marketing_department_id IS NULL"}
{"question": "How many employees do the following companies have?", "query": "SELECT T1.employee_id,  T1.first_name,  T1.last_name,  T1.title,  T1.department_id,  T1.salary,  T1.hire_date,  T1.hire_by,  T1.hire_for,  T1.hire_reason,  T1.hire_status,  T1.hire_duration,  T1.hire_start_date,  T1.salary_type,  T1.salary  FROM employee AS T1 WHERE T1"}
{"question": "What are the names, orders, and ages of all the students?", "query": "SELECT T1.name,  T2.order,  T3.age FROM student AS T1 JOIN student AS T2 ON T1.id  =  T2.id JOIN student AS T3 ON T2.order  =  T3.order"}
{"question": "What are the names (names, not ids) of all users who have a total of 50 votes?", "query": "SELECT name FROM user WHERE total_votes  =  50"}
{"question": "Show a list of all clubs, not including the three main clubs in the city", "query": "SELECT * FROM club_members WHERE city_code  =  'NYC'"}
{"question": "What are the names, ages of all students in the school in the year 2002?", "query": "SELECT T1.name,  T1.\"age\" FROM student AS T1 WHERE T1.school_id  =  \"school\" AND T1.year  =  2002"}
{"question": "what are the names of all the tracks that are on the Movies Playlist?", "query": "SELECT T1.name FROM tracks AS T1 WHERE T1.playlist_id  =  \"Playlist\""}
{"question": "Find the number of products in the store that are below the average price", "query": "SELECT count(*) AS total_count FROM products WHERE product_price < (SELECT AVG(product_price) FROM products)"}
{"question": "List the names of all the cities with population larger than 100000", "query": "SELECT T1.city_name FROM city AS T1 WHERE population  >  100000"}
{"question": "What are the names from the following types of documents?", "query": "SELECT name FROM document_type WHERE name IN (\"letter\", \"memo\", \"report\", \"proposal\", \"contract\", \"agreement\", \"contract_addendum\", \"contract_amendment\", \"contract_modification\", \"contract_termination\", \"contract_renewal\", \"contract_extension\", \"contract_renewal_extension\", \"contract_renewals\", \"contract_extension_extension\", \"contract_extension_renewals\", \"contract_renewal_extensions\", \"contract_renewal_renewals\", \"contract_amendment_extension\", \"contract_amendment_renewals\", \""}
{"question": "What are the names, locations, and number of games of all teams?", "query": "SELECT T1.team_name,  T1.location,  T1.games FROM teams AS T1 WHERE T1.team_id  =  (SELECT team_id FROM teams WHERE team_name  =  \"Team A\")"}
{"question": "What is the name, age and city of the person whose birthday is on the 12th of February, who lives in the US, and is a woman?", "query": "SELECT T1.Name,  T1.Age,  T1.City,  T1.Birthday,  T1.Gender,  T1.Country,  T1.State,  T1.Zip,  T1.CountryCode,  T1.StateCode,  T1.CountryName,  T1.StateName,  T1.CountryCodeName,  T1.StateCodeName,  T1.CountryNameCode,  T1.StateNameCode,  T1.CountryCodeAbbreviation,  T1.StateNameAbbrev"}
{"question": "Find the average and the standard deviation of the weight distribution per gender", "query": "SELECT AVG(weight),  AVG(weight) FROM student"}
{"question": "What are the last name of all persons below 30 years old who are a fan of a band?", "query": "SELECT name FROM person WHERE age  >  30 AND name NOT IN (SELECT name FROM band_fans)"}
{"question": "What are the famous names of those who have not only had volumes that have spent more than 2 weeks on top and are also volumes that have spent less than 2", "query": "SELECT DISTINCT name FROM player WHERE volume_id  =  '1' AND volume_rank  =  '1' AND (volume_rank  =  '1 AND volume_rank  <  2' OR volume_rank  =  '2 AND volume_rank  <  3' OR volume_rank  = '3 AND volume_rank  <  4' OR volume_rank  ='4 AND volume_rank  <  5' OR volume_rank  = 5 AND volume_rank  <  6' OR volume_rank  = 6 AND volume_rank  <"}
{"question": "What is the city of the most popular basketball player?", "query": "SELECT city FROM basketball WHERE popularity  =  'M'"}
{"question": "What is the third-grade teacher's name?", "query": "SELECT T1.name FROM teachers AS T1 WHERE T1.grade  =  \"3\" AND T1.id  =  \"T3\""}
{"question": "What are the first name and last name of employees who receive a bonus?", "query": "SELECT T1.name,  T1.bonus FROM employee AS T1 JOIN bonus AS T2 ON T1.id  =  T2.employee_id WHERE T2.amount  =  100"}
{"question": "What is the name and age of the student who has the most test scores?", "query": "SELECT T1.student_name,  T2.age FROM student_record AS T1 JOIN student_test_scores AS T2 ON T1.id  = T2.student_id WHERE T2.score  =  MAX(T2.score)"}
{"question": "What are the names or the ages of the customers who have a balance of more than 5000?", "query": "SELECT T1.Customer_id,  T1.Customer_name,  T1.Customer_age FROM Customer AS T1 WHERE T1.Balance  >  5000"}
{"question": "Find the names and city of all customers who have bought at least one product in 2003", "query": "SELECT T1.customer_first_name, T1.customer_last_name, T1.city, T1.state, T1.zip_code, T1.country_code, T1.phone, T1.email, T1.address_type_code, T1.address_type, T1.address_line1, T1.address_line2, T1.address_line3, T1.city_name, T1.state_name, T1.country_name, T1.zip_code_name, T1.phone_"}
{"question": "What is the average salary of a manager?", "query": "SELECT AVG(salary) FROM employee WHERE manager_id  =  '1'"}
{"question": "What are the names, with id, of all players who are not in the team with id \"Palladium\" (i", "query": "SELECT T1.name,  T2.id FROM player AS T1 JOIN team AS T1 ON T1.team_id  =  T2"}
{"question": "(a novel question, about a table), \"question\" needs to be removed", "query": "SELECT name FROM table WHERE name LIKE '%a%'"}
{"question": "What are the names, total number of projects, and the number of hours worked by each student who works on Project \"Project1\"?", "query": "SELECT T1.student_id,  T1.name,  T1.\"Projects\",  T1.hours_worked FROM student AS T1 JOIN project AS T2 ON T1.student_id  =  T2.\"student_id\" WHERE T2.project_id  =  \"Project1\""}
{"question": "What are the full names of the students living in the dorm with the largest number of beds?", "query": "SELECT T1.first_name,  T1.last_name,  T1.room_number,  T1.room_type,  T1.room_capacity,  T1.room_occupancy,  T1.room_status,  T1.room_owner,  T1.room_manager,  T1.room_building,  T1.room_floor,  T1.room_room,  T1.room_bed,  T1.room_bathroom,  T1.room__status,  T1.room"}
{"question": "Find the names of the movie directors whose name begins with the first letter of \"j\"", "query": "SELECT T1.name FROM directors AS T1 WHERE T1.name  LIKE \"j%\""}
{"question": "What is the average age of the students who have the highest average GPA?", "query": "SELECT T1.avg_gpa,  T2.age FROM students AS T1 JOIN (SELECT T3.student_id,  T4.avg(T5.gpa) AS avg_gpa FROM students AS T3 JOIN grades AS T4 ON T3.id  =  T4.student_id JOIN grades AS T5 ON T4.grade_id  =  T5.id WHERE T3.id  =  (SELECT max(id) FROM students) GROUP BY T3.student_id) AS T2 ON T1.id  =  T"}
{"question": "What is the last day of the study of the class \"Math\"?", "query": "SELECT T1.date_from,  T2.date_to FROM class_schedule AS T1 JOIN class_schedule AS T2 ON T1.id  = T2.id WHERE T1.class_id  =  \"Math\" AND T2.class_id  =  'Math' AND T1.date_from  =  '2015-12-31' AND T2.date_to  =  '2015-1231'"}
{"question": "What are the names that have the most different first names?", "query": "SELECT DISTINCT first_name FROM people"}
{"question": "What are the names, addresses and the number of rooms of all the apartments?", "query": "SELECT T1.name,  T1.address,  T1.room_count FROM Apartment_Rooms AS T1 JOIN Apartment_Rooms AS T2 ON T1.room_id  =  T2.room_id WHERE T1.room_id !=  T2.room_id"}
{"question": "What is the average temperature in Kelvin for the month of August?", "query": "SELECT AVG(temp) FROM weather_data WHERE month = 'August' AND year = '2012'"}
{"question": "Find the name of the first student who has a course record of 4", "query": "SELECT T1.first_name,  T1.last_name,  T1.course_id FROM student AS T1 WHERE T1.course_id  IN (SELECT T2.course_id FROM course AS T2 WHERE T2.year  =  2008) AND T1.course_id  >  0 AND T1.course_id = (SELECT T3.course_id FROM course AS t3 WHERE t3.year  =  2008 AND t3.course_id  >  T1.course_id)"}
{"question": "What are the names, locations, and prices of all hotels in the city?", "query": "SELECT name,  location,  price FROM hotel WHERE location  =  \"New York\""}
{"question": "(a new question), after \"generate:\"", "query": "(the sql query to answer the questions), after \""}
{"question": "What are the names, department ids and description of each department in the university?", "query": "SELECT T1.name,  T1.[department_id],  T1.description FROM department AS T1 JOIN university AS T2 ON T1.university_id  =  T2.[department_id]"}
{"question": "Find the department names of the instructors whose names contain 'Soisalon'", "query": "SELECT T1.name FROM instructors AS T1 JOIN instructor_department AS T2 ON T1.instructor_id  =  T2.instructor_id WHERE T2.name  = 'Soisalon'"}
{"question": "What are the names, birthdays, and blood types of all employees?", "query": "SELECT T1.name,  T1.birthday,  T1.blood_type FROM employee AS T1"}
{"question": "What is the student id of the student who is enrolled in the course with title \"Intro to Statistics\" but has not taken any courses with titles \"Introduction", "query": "SELECT T1.student_id FROM student_course_enrolment AS T1 JOIN student AS T2 ON T1.id  = T2.student_id WHERE T2.course_id  =  '1' AND T2.title  =  'Intro to Statistics'"}
{"question": "Find the names of students who have the most credits", "query": "SELECT student_name,  count(*) AS credits FROM student GROUP BY student_name ORDER BY credits DESC LIMIT 1"}
{"question": "What are the names, as well as the access counts, of all the files in the directory?", "query": "SELECT T1.name,  T1.access_count FROM files AS T1 WHERE T1.name  =  \"file1\""}
{"question": "Return the names of all products", "query": "SELECT T1.product_name FROM product AS T1"}
{"question": "What are the names, ages, and number of children of the parents of the youngest child?", "query": "SELECT T1.name,  T1.age,  T1.num_children FROM parent AS T1 WHERE T1.num_children  =  (SELECT MIN(T2.num_children) FROM parent AS T2)"}
{"question": "What are the ids and names of the administrators who are also faculty?", "query": "SELECT T1.admin_id,  T1.admin_name FROM admin AS T1 JOIN faculty AS T2 ON T1.admin_id  =  T2.admin_id"}
{"question": "What are the ids and names of all the people, in order, from A to Z?", "query": "SELECT T1.id,  T1.name FROM people AS T1 ORDER BY T1.name"}
{"question": "What is the name, id, and description of the employee who has the highest salary?", "query": "SELECT T1.name,  T1.* FROM employee AS T1 WHERE T1.salary  =  ( SELECT MAX(T2.salary) FROM employee AS T2 )"}
{"question": "What are the names in the database of all the countries where the company is headquartered?", "query": "SELECT name FROM country WHERE country_code  =  \"USA\""}
{"question": "What is the average life expectancy of people in a country?", "query": "SELECT T1.country_id,  T1.avg_life_expectancy FROM country AS T1 WHERE T1.population  >  0"}
{"question": "Find the employees who have worked for 20 years or more", "query": "SELECT count(*)  FROM employees WHERE age  >=  (SELECT max(age)  FROM employees)"}
{"question": "How many students are there in South America?", "query": "SELECT T1.student_id FROM students AS T1 WHERE T1.country_code  =  \"South America\""}
{"question": "Find the first names of the customers who have bought a movie ticket of the movie 'The Big Bang Theory'", "query": "SELECT T1.firstname FROM customer AS T1 JOIN movie AS T2 ON T1.customer_id  =  T2._id WHERE T2.title  =  \"The Big Bang Theory\""}
{"question": "What are the names, prices and locations of the cars that have been sold within the last 3 years?", "query": "SELECT T1.name,  T1.price,  T1.location FROM car AS T1 WHERE T1.sold_date  >  (SELECT max(sold_date) FROM car) AND T1.sold_date  <  (SELECT min(sold_date) FROM car);"}
{"question": "What is the average price of wines made in California?", "query": "SELECT avg(price) FROM wine WHERE region = \"California\""}
{"question": "What are the first and last names of all the customers who have not made a purchase since the beginning of the year?", "query": "SELECT T1.Customer_Name FROM Customers AS T1 JOIN Order_Items AS T2 ON T1.Customer_ID  =  T2.Customer_ID WHERE T2.Order_ID  =  0 AND T2.Date_Purchased  =  '0000-00-00 00:00:00'"}
{"question": "In the United States, what is the total number of zip codes with the highest number of inhabitants?", "query": "SELECT T1.zip_code,  T2.population FROM zip_codes AS T1 JOIN zip_code_population AS T2 ON T1.zip_code  =  T2.zip_code WHERE T2.population  =  (SELECT max(population) FROM zip_code_population)"}
{"question": "Find the total number of students whose age is less than or equal to 20", "query": "SELECT count(*)  FROM students WHERE age  <=  20"}
{"question": "What is the number of apples in each box?", "query": "SELECT T1.box_id,  T1.number_of_apples FROM boxes AS T1 WHERE T1.number_of_app_boxes  =  \"5\""}
{"question": "What are the names, id, id of the cities, and the ids of the countries which are in the list of countries that are associated with the country of", "query": "SELECT T1.city,  T1.country,  T1.[id],  T1.id FROM country AS T1 JOIN country_city AS T2 ON T1.country_id  =  T2.[country_id] JOIN city AS T3 ON T2.city_id  =  T3.[id] WHERE T1.id  =  '1'"}
{"question": "Name the table that contains the largest number of customers", "query": "SELECT COUNT(*) AS count FROM customer"}
{"question": "What are the names, ordered by credits, of the products that are in the database", "query": "SELECT T1.name FROM product AS T1 JOIN product_category AS T2 ON T1.product_id  =  T2.product_id WHERE T2.category_id  =  \"1\" ORDER BY T1.credits;"}
{"question": "Show the first names of the customer who have at least 3 orders", "query": "SELECT T1.name FROM customer AS T1 JOIN order AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_count  >  3"}
{"question": "What are the ids and names of the employees of the university having the letter J?", "query": "SELECT T1.employee_id,  T1.employee_name FROM employee AS T1 WHERE T1.employee_name LIKE 'J%'"}
{"question": "What is the average annual salary of all employees who are women?", "query": "SELECT AVG(salary) FROM employees WHERE gender  =  'female'"}
{"question": "What are the prices of wines for different years? Give me the prices of wines for different years", "query": "SELECT year,  price FROM wine WHERE year  >  2001"}
{"question": "What is the maximum and average age of the players?", "query": "SELECT max(Age),  AVG(Age) FROM Player"}
{"question": "Find the average credit of the customers who have products from the following brands: \"Bush, Chevy", "query": "SELECT avg(credit) FROM customer WHERE brand IN (\"Bush, Chevy\")"}
{"question": "What are the names, and how many of each, of the tables in the database?", "query": "SELECT T1.name,  count(*) FROM table AS T1 GROUP BY T1.name"}
{"question": "What are the names, and ages of all customers who had a credit score above 100?", "query": "SELECT T1.Name,  T1.Age FROM customer AS T1 WHERE T1.credit_score  >  100"}
{"question": "What are the authors of books with the title \"The Little Prince\" and \"The Little Prince and the Aviator\"?", "query": "SELECT T1.author_id,  T1.name FROM authors AS T1 JOIN books AS T2 ON T1.author_id  =  T2.author_id WHERE T2.title  =  \"The Little Prince\" AND T2.title  =  T1.name"}
{"question": "What are the first names of drivers who drove at least 1000 minutes in each of the following races?", "query": "SELECT T1.name FROM Driver AS T1 JOIN Race AS T2 ON T1.driver_id  =  T2.driver_id WHERE T2.race_id IN (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,"}
{"question": "What is the average age of the students of the university with the lowest average grade?", "query": "SELECT AVG(grade) FROM student WHERE university_id  =  \"UNIVERSITY\""}
{"question": "What is the name of the school which has the highest graduation rate?", "query": "SELECT T1.name,  T1.* FROM school AS T1 WHERE T1.graduation_rate  >  ( SELECT MAX(graduation_rate) FROM school )"}
{"question": "What are the names and id of students who have a minimum grade of A in all courses?", "query": "SELECT T1.student_id,  T1.name,  T1.grade FROM students AS T1 JOIN grades AS T2 ON T1.id  =  T2.id WHERE T2.grade  =  'A' GROUP BY T1.student_id ORDER BY T1.grade ASC"}
{"question": "What are the names and ages of the customers who have the same first name and last name?", "query": "SELECT T1.name,  T1.age FROM customer AS T1 WHERE T1.name  =  \"John Smith\" AND T1.age  =  \"25\""}
{"question": "Find the names of all the directors who have more than one movie", "query": "SELECT T1.director_id,  T2.name FROM director AS T1 JOIN director_movie AS T2 ON T1.director_id  =  T2.director_id WHERE T2.movie_id  =  '1'"}
{"question": "What are the names and addresses of all the hotels in the US", "query": "SELECT hotel_name,  hotel_address FROM hotels"}
{"question": "What is the total age of the members of the team \"Team Red\"", "query": "SELECT T1.age FROM team AS T1 JOIN member AS T2 ON T1.team_id  =  T2.team_id WHERE T2.team_name  =  \"Team Red\""}
{"question": "What are the names, first and last, of the students who have been enrolled in at least two courses?", "query": "SELECT T1.first_name,  T1.last_name,  T2.course_id FROM student AS T1 JOIN courses AS T2 ON T1.id  =  T2.id WHERE T2.course_id IN (SELECT T3.course_id FROM course AS T3 WHERE T3.year  =  T1.year)"}
{"question": "What is the total price of all products?", "query": "SELECT T1.product_id,  T1.price FROM products AS T1"}
{"question": "Find the name of all departments that do NOT have any employees", "query": "SELECT T1.department_name FROM department AS T1 WHERE NOT EXISTS (SELECT T2.department_name FROM department_employee AS T2 WHERE T2.department_id = T1.department_id)"}
{"question": "(a novel question, about a database), \"", "query": "(the sql query to answer the query), after \""}
{"question": "What is the average age of all musicians?", "query": "SELECT AVG(age) FROM musicians"}
{"question": "What are the average price and score for all wines in the table 'Wine'?", "query": "SELECT AVG(price),  AVG(score) FROM Wine"}
{"question": "Find the name of companies that have an active policy for each customer", "query": "SELECT T1.company_name,  T1.customer_name,  T1.policy_id FROM customer_policies AS T1 JOIN customer_policies AS T2 ON T2.customer_id  =  T1.customer_id WHERE T1.policy_id  =  (SELECT max(T3.policy_id) FROM customer_policies AS  T3 WHERE T3.customer_id  =  (SELECT T4.customer_id FROM customer_policys AS T4 WHERE T4.customer_id  =  \"customer_"}
{"question": "What are the names, in order, of all the people in the movie \"Office Space\"?", "query": "SELECT T1.name FROM people AS T1 WHERE T1.movie_id  =  \"Office Space\""}
{"question": "Find the names of the customers who have made at least three purchases", "query": "SELECT T1.customer_id,  T1.name FROM customer AS T1 WHERE T1.purchases  >  3"}
{"question": "How many students are in the following classes?", "query": "SELECT T1.student_id,  T1.student_name,  T2.class_name FROM student AS T1 JOIN class AS T2 ON T1.student_id  =  T2.student_id"}
{"question": "What are the first names of all users who have the last name Ackerman?", "query": "SELECT T1.user_id,  T1.name_first FROM user AS T1 WHERE T1.name_last  =  \"Ackerman\""}
{"question": "Which of the following is not a question?", "query": "SELECT T1.id,  T2.name,  T2.age,  T2.gender,  T2.city,  T2.country,  T2.email,  T2.phone,  T2.address,  T2.zipcode,  T2.city_id,  T2.country_id,  T2.state_id,  T2.city_state_id,  T2.country_state_id,  T3.name,  T3.age,  T3.gender,  T3."}
{"question": "What is the name and id of the department that is responsible for all the traffic lights in the city?", "query": "SELECT T1.name,  T1.id FROM department AS T1 JOIN traffic_light AS T2 ON T1.dept_id  =  T2.dept_id WHERE T2.name  = \"City\""}
{"question": "What are the names and ages of athletes who are in the top 10 in each category?", "query": "SELECT T1.name,  T1.age FROM athlete AS T1 WHERE T1.name  IN (SELECT T2.name FROM athlete AS T2 WHERE T2.name  IN (SELECT T3.name FROM athlete AS T3 WHERE T3.name  IN (SELECT T4.name FROM athlete AS T4 WHERE T4.name  IN (SELECT T5.name FROM athlete AS T5 WHERE T5.name  IN (SELECT T6.name FROM athlete AS T6 WHERE T6.name  IN (SELECT T7.name FROM athlete AS T7 WHERE T7."}
{"question": "(a novel question, about a department) Find the department name of the instructor who has the highest number of students in the fall semester", "query": "SELECT T1.department_name FROM instructor AS T1 JOIN instructor_course AS T2 ON T1.id  = T2.instructor_id JOIN course AS T3 ON T2.course_id  =  T3.id WHERE T3.semester  =  'Fall' AND T1.semester  =  'Spring'"}
{"question": "How many customers of this store are women?", "query": "SELECT count(*)  FROM customer WHERE gender = \"W\""}
{"question": "Show the employee id of the employee who has the highest salary", "query": "SELECT employee_id FROM employees WHERE salary  =  (SELECT max(employee_id) FROM employees)"}
{"question": "What are the average number of people who are employees?", "query": "SELECT AVG(num_people) FROM employees"}
{"question": "What are all the courses in computer science?", "query": "SELECT T1.course_id,  T1.course_name FROM course AS T1 WHERE T1.course_id  IN (SELECT T2.course_id FROM course AS T2 WHERE T2.course_name  =  \"Computer Science\")"}
{"question": "What are the first names and the cities of all people who have given a testimony during a trial?", "query": "SELECT T1.first_name,  T1.city FROM witness AS T1 WHERE T1.trial_id  =  \"1\""}
{"question": "What is the total amount of money earned by the student named \"Rachel Brown\" in the end of year 2008?", "query": "SELECT T1.amount FROM student AS T1 JOIN (SELECT T2.name_first,  T2.name_last,  T2.player_id FROM player AS  T2 JOIN player_award AS T3 ON T2.player_id  =  \"Rachel Brown\" GROUP BY T2.player_id) AS T2 ON T1.name_last  =  T2.name_last AND T1.name_first  =  T2.name1_first WHERE T1.name_last  =\"Rachel Brown\" AND T1.name_"}
{"question": "What are the locations of cities with the highest average temperature?", "query": "SELECT T1.city,  T1.avg_temp FROM locations AS T1 JOIN temperature AS T2 ON T1.city  =  T2.city GROUP BY T1.city ORDER BY T1.avg_temp DESC LIMIT 1"}
{"question": "What is the name and city of the city that is the center of St", "query": "SELECT city,  city_name FROM cities WHERE city  =  \"St\""}
{"question": "What is the average age of students who have at least 2 hours of training per week?", "query": "SELECT AVG(age) FROM student WHERE training_hours  >  2"}
{"question": "Find the names of doctors who have more than two specialties, and have a specialty of some kind", "query": "SELECT T1.doctor_name,  T2.specialty_name,  T3.specialty_id FROM doctor_record AS T1 JOIN specialty_record AS T2 ON T1.specialty_id  =  T2.specialty_id JOIN specialty AS T3 ON T2.specialty_id  = T3.specialty_id WHERE T1.doctor_id  =  T3.doctor_id"}
{"question": "What are the names and addresses of all students in Smith Hall? (the answer is the question)", "query": "SELECT T1.first_name,  T1.last_name,  T1.address FROM student AS T1 WHERE T1.stu_id  =  (SELECT T2.stu_id FROM student AS T2 WHERE T2.stu_id  = T1.stu_id)"}
{"question": "How many students in the university of Michigan are there?", "query": "SELECT COUNT(*) FROM students"}
{"question": "Show the names of all countries and the amount of water in each of them", "query": "SELECT T1.Country,  T1.Water FROM Country AS T1 JOIN Water AS T2 ON T1.Country_ID  =  T2.Country_ID"}
{"question": "What are all the cities that fall above the line y = 2x?", "query": "SELECT T1.city,  T2.x FROM city AS T1 JOIN city_x AS T2 ON T1.city_id  =  T2,x WHERE T2.y  =  2*T1.x"}
{"question": "How many students are in the school building with the ID of 2?", "query": "SELECT count(*)  FROM school_building AS T1 WHERE T1.id  =  2"}
{"question": "List the player's id and the number of games he played", "query": "SELECT T1.player_id,  T1.games FROM player AS T1 JOIN player AS T2 ON T1.id  =  T2.id WHERE T1.id  =  '1'"}
{"question": "What are the names and numbers of all students who have not registered for classes for the summer semester?", "query": "SELECT T1.name,  T1.[number] FROM student AS T1 WHERE NOT EXISTS (SELECT 1 FROM registration AS T2 WHERE T2.student_id  =  T1.id)"}
{"question": "Who has the maximum number of friends among students?", "query": "SELECT T1.name,  T2.friend FROM Students AS T1 JOIN Friends AS T2 ON T1.id  =  T2.friend GROUP BY T1.name ORDER BY count(*) DESC"}
{"question": "Find the average length of all songs", "query": "SELECT AVG(LENGTH(song_name)) FROM song"}
{"question": "List the first names and last names of employees who are in the administration department", "query": "SELECT T1.first_name,  T1.last_name FROM Employees AS T1 JOIN Employee_Department AS T2 ON T1.employee_id  =  T2.\"department_id\" WHERE T2.department_name  =  \"Administration\""}
{"question": "Which city has the most number of hotels?", "query": "SELECT city_name,  COUNT(*) FROM hotel GROUP BY city_name ORDER BY COUNT(*) DESC LIMIT 1;"}
{"question": "What is the name, phone number and email of the employee who has the most amount of experience?", "query": "SELECT T1.full_name,  T1.phone_number,  T1.email FROM employees AS T1 WHERE T1.experience  >  (SELECT T2.experience FROM employees AS T2 WHERE T2.id  =  T1.id)"}
{"question": "What is the name of the country that has the most people living in it?", "query": "SELECT T1.Country_Name FROM Country_Info AS T1 WHERE T1.Population  >  0"}
{"question": "Find the id of the student who received an A and B in the class with the code 10001", "query": "SELECT T1.id,  T1.name FROM student AS T1 JOIN class AS T2 ON T1.class_id  =  T2.class_id WHERE T2.code  =  '10001' AND T1.marks  =  'A' AND T1.marks  <>  'B'"}
{"question": "What is the total number of trains, ordered by number of stops?", "query": "SELECT count(*) AS total_count FROM train_stops"}
{"question": "how many people work in the company", "query": "SELECT T1.employee_id,  T1.name_first,  count(*) FROM employee AS T1 JOIN employee_address AS T2 ON T1.employee_id  =  T2.employee_id GROUP BY T1.employee_id ORDER BY count(*) ASC LIMIT 1"}
{"question": "Find the values of all the columns in the table", "query": "SELECT T1.column_name,  T1.column_value FROM table_name AS T1 WHERE T1.column_name  =  \"question\""}
{"question": "Find the average age of the participants in the competition for the event \"Gymnastics\"", "query": "SELECT AVG(age) FROM participants WHERE event_name = \"Gymnastics\""}
{"question": "List the names of all the departments in alphabetical order", "query": "SELECT T1.name FROM department AS T1 JOIN student AS T3 ON T1.dept_id  =  T3.dept_id ORDER BY T1.name ASC"}
{"question": "What are the ids of cities in the following order:", "query": "SELECT T1.id FROM city AS T1 WHERE T1.name  = 'New York'"}
{"question": "What are the names and ages of the people who have been married for more than 40 years?", "query": "SELECT name,  age FROM Person WHERE age  >  40 AND age  <  60"}
{"question": "What is the maximum number of members in a party who are older than 25 years?", "query": "SELECT T1.max_age FROM party AS T1 JOIN people AS T3 ON T1.party_id  =  T3.party_id WHERE T3.age  >  25"}
{"question": "List the names of universities with more than two campuses", "query": "SELECT T1.university_name FROM university AS T1 JOIN campus AS T2 ON T1.university_id  =  T2.[university_id] WHERE T2.campus_id  >  2"}
{"question": "Find the names and locations of all the stations located in the United States", "query": "SELECT T1.name,  T1.location FROM station AS T1 WHERE T1.country  =  'United States'"}
{"question": "What are the names, ages and addresses of students at the school?", "query": "SELECT T1.name,  T1.age,  T1.address FROM students AS T1 WHERE T1.age  >  18"}
{"question": "What is the number and names of all the airports which are not located in Italy?", "query": "SELECT * FROM airport WHERE country_code !=  'IT'"}
{"question": "What average number of students are taking the course \"Physics\"?", "query": "SELECT AVG(T1.stu_count) FROM student AS T1 WHERE T1.course_code  =  \"Physics\""}
{"question": "What is the name and first name of the employee who works in human resources?", "query": "SELECT T1.name,  T1.first_name FROM employees AS T1 WHERE T1.department_id  =  'HR'"}
{"question": "Show the details of the customers who have signed up for the service in the last 6 months", "query": "SELECT T1.cust_id,  T1.first_name,  '6 months' AS time_period,  T1.last_login,  T1.email,  T1.phone,  T1.address,  T1.city,  T1.state,  T1.zip,  T1.country,  T1.email_type,  T1.email_address,  T1.email_status,  T1.email_sent_date,  T1.email_received_date,  T1.last_log"}
{"question": "Who is the customer with the most number of orders?", "query": "SELECT customer_id,  count(*) FROM orders GROUP BY customer_id ORDER BY count(*)"}
{"question": "What is the name and the date of birth of the student whose first name is James and last name is Smith?", "query": "SELECT T1.name,  T1.date_of_birth FROM students AS T1 WHERE T1.first_name  =  \"James\" AND T1.last_name  =  \"Smith\""}
{"question": "What are the average ages of the students who did not go to the party?", "query": "SELECT AVG(age) FROM students WHERE student_id NOT IN (SELECT student_id FROM party)"}
{"question": "What are the names, locations and average number of vehicles for each track?", "query": "SELECT T1.track_name,  T1.location,  T1.num_vehicles FROM track AS T1 GROUP BY T1.track_name ORDER BY T1.num_vehicles DESC"}
{"question": "What is the average age of students in the class with id of 100?", "query": "SELECT avg(age) FROM student WHERE student_id = 100"}
{"question": "A:\n\nPerl 6, 43 bytes", "query": "sub MAIN($question) {"}
{"question": "What are the average height and weight for the students of the department of Economics?", "query": "SELECT AVG(height),  AVG(weight) FROM students AS T1 JOIN department AS T3 ON T1.dept_id  =  T3.dept_id GROUP BY T1.dept"}
{"question": "Find the names of cities that have at least two streets named \"Alice Street\" and \"Alice Lane\"", "query": "SELECT T1.city_name FROM street AS T1 JOIN street AS T2 ON T1.street_id  =  T2.street_id WHERE T2.street_name  =  \"Alice Street\" AND T2.street_name  ==  \"Alice Lane\""}
{"question": "How many employees have a first name in the set {'A', 'B', 'C'}?", "query": "SELECT count(*) AS Expr1 FROM employees WHERE first_name IN ('A', 'B', 'C')"}
{"question": "What is the first and last name of the person with the largest number of transactions?", "query": "SELECT T1.first_name,  T1.last_name FROM customer AS T1 JOIN transactions AS T2 ON T1.customer_id  =  T2..customer_id WHERE T2.amount  >  (SELECT max(T3.amount) FROM transactions AS T3)"}
{"question": "What is the date of the first day of the week for which the 24h time length is equal to 1?", "query": "SELECT T1.date_of_the_first_day_of_the_week FROM Calendar AS T1 WHERE T1.time_length  =  1"}
{"question": "Return the names and numbers of all employees", "query": "SELECT T1.fname,  T1.lname,  T1.phone,  T1.email,  T1.address_id,  T1.address_street,  T1.address_city,  T1.address_state,  T1.address_zip,  T1.address_country,  T1.address_type,  T1.address_latitude,  T1.address_longitude,  T1.addresses_id,  T1.employees_id,  T1.manager_id,  T"}
{"question": "What are the staffs IDs and genders of all staffs with a job title of \"Department Manager\"?", "query": "SELECT T1.staff_id,  T1.gender FROM staff AS T1 WHERE T1.job_title  =  \"Department Manager\""}
{"question": "What is the first name and last name of the employee with id 6?", "query": "SELECT name FROM employee WHERE employee_id  =  6"}
{"question": "How many employees are in the office where Janessa Sawayn works?", "query": "SELECT T1.employee_id FROM employees AS T1 JOIN employee_office AS T2 ON T1.employee_id  =  T2.employee_id WHERE T2.office_id  =  '1'"}
{"question": "List the names of employees who work in department D", "query": "SELECT T1.first_name,  T1.last_name,  T1.department_name,  T1.salary FROM employee AS T1 JOIN department AS T3 ON T1.department_code  =  T3.department_code WHERE T3.name  = 'D'"}
{"question": "What is the name and address of Bob, and the dollar amount of the first payment he made?", "query": "SELECT name,  address,  amount FROM customers WHERE customer_id = 1"}
{"question": "How many students are in the room with the name 'Gym' in the city of 'Sydney'?", "query": "SELECT count(*) from room WHERE room_name  =  \"Gym\" AND city_name  =  \"Sydney\""}
{"question": "What are the names and ages of the students of the class with id 1?", "query": "SELECT T1.first_name,  T1.last_name,  T1.age FROM Students AS T1 WHERE T1.id  =  1"}
{"question": "What are the first name, last name and age of the customer with id 90943?", "query": "SELECT first_name,  last_name,  age FROM customer WHERE id  =  90943"}
{"question": "What is the first name of the employee who is from \"Belgium, France, Germany, and Spain?\"", "query": "SELECT T1.name FROM employees AS T1 JOIN countries AS T2 ON T1.country_id  =  T2.\"Belgium, France, Germany, Spain\""}
{"question": "What are the grades of all students in the class of 2009?", "query": "SELECT T1.grade FROM student AS T1 JOIN class AS T2 ON T1.student_id  =  T2._id WHERE T2.year  =  2009"}
{"question": "What are the names, ordered by their average salary, of all the employees in the USA?", "query": "SELECT T1.name,  T2.salary FROM employee AS T1 JOIN employee_salary AS T2 ON T1.employee_id  =  T2.\"employee_id\" ORDER BY T2.salary ASC"}
{"question": "Find a list of all unique names of cities/cities in Spain", "query": "SELECT DISTINCT city FROM city_table"}
{"question": "What is the total travel expense of all employees who live in the New York City?", "query": "SELECT T1.employee_id,  T1.name_first,  count(*) AS total_travel_expense FROM employee AS T1 JOIN employee_travel AS T2 ON T1.employee_id  =  T2.employee_id GROUP BY T1.employee_id ORDER BY total_travel_expense DESC LIMIT 1;"}
{"question": "How many employees have been assigned to the department of \"Horticulture\"?", "query": "SELECT T1.employee_id,  T1.department_id FROM employee AS T1 JOIN department AS T1 ON T1.employee_id  =  T1.employee_id WHERE T1.department_id = \"Horticulture\""}
{"question": "Find the average age of the singers with a vocal range between G to C in the song \"Alive\" by the band \"The Who\"", "query": "SELECT AVG(age) FROM singer WHERE vocal_range  =  \"G-C\" AND song_id  =  \"Alive\""}
{"question": "What is the name and the date of birth of the employee who has the highest birth date?", "query": "SELECT T1.first_name,  T1.last_name,  T1.birth_date FROM employee AS T1 WHERE T1.birth_date  =  (SELECT MAX(T2.birth_date) FROM employee AS T2)"}
{"question": "List the first name and last name for all customers", "query": "SELECT T1.firstname,  T1.lastname FROM customers AS T1"}
{"question": "What is the average age of the customers for all the products?", "query": "SELECT AVG(age) FROM customers WHERE product_id  =  (SELECT product_id FROM products WHERE product_name  =  \"Bread\")"}
{"question": "What is the name of the customer who has the birthday after the first of the month?", "query": "SELECT T1.customer_id,  T1.customer_name,  T1.birthday FROM customer AS T1 WHERE T1.birthday  >  '01-01-1970'"}
{"question": "What are the titles of all movies that have a character named \"Robin Wright\"?", "query": "SELECT T1.Title FROM movie AS T1 JOIN character AS T2 ON T1.Movie_ID  =  T2.\"Movie_ID\" WHERE T2.Name  =  \"Robin Wright\""}
{"question": "What are the names, salaries, and positions of all sales representatives in the U", "query": "SELECT T1.name,  T1.salary,  T1.position FROM sales_representative AS T1 WHERE T1.name  = \"John Smith\""}
{"question": "How many invoices are there in the database and how many invoices are still outstanding?", "query": "SELECT COUNT(*) FROM invoice;"}
{"question": "What is the name, city, country, station number and latitude of the station with the highest altitude in the city of Paris?", "query": "SELECT T1.name,  T1.* FROM station AS T1 WHERE T1.city  =  \"Paris\" AND T1.country  =  \"France\" AND T1.latitude  =  \"48.85\" AND T1.longitude  =  \"2.35\" AND T1.altitude  =  \"10\""}
{"question": "What are the names and contact information of all the users on the system?", "query": "SELECT T1.name,  T1.contact_info FROM users AS T1"}
{"question": "Find the name of customers who have made more than one purchase", "query": "SELECT T1.name FROM customers AS T1 JOIN purchases AS T2 ON T1.customer_id  =  t2.customer_id WHERE T2.count  >  1"}
{"question": "What is the name and number of stations for all the cities with at least 15 stations", "query": "SELECT T1.city_name,  T2.city_id FROM city AS T1 JOIN station AS T2 ON T1.city_id  =  T2.city_id WHERE T1.city_population  >=  15"}
{"question": "What are the names and the number of horses in the race?", "query": "SELECT name,  num_horses FROM race"}
{"question": "(Find the maximum and minimum durations of tracks", "query": "SELECT T1.duration FROM tracks AS T1 JOIN tracks_duration AS T2 ON T1.track_id  =  T2.track_id WHERE T2.duration  =  (SELECT MAX(T3.duration) FROM tracks_duration AS T3 WHERE T3.duration  >  T2.duration) AND T2.duration  ="}
{"question": "List the name, address, and city of each customer in ascending order of customer number", "query": "SELECT T1.customer_name,  T1.customer_address,  T1.customer_city FROM customer AS T1 ORDER BY T1.customer_number ASC"}
{"question": "What are the names, in order of popularity, of the three books written by the authors of the three books", "query": "SELECT T1.name,  T2.name FROM books AS T1 JOIN books AS T2 ON T1.author_id  =  T2.author_id ORDER BY T1.popularity DESC, T2.popularity DESC"}
{"question": "(a question about a sql table) List all customer status codes and the name of customers having each status code", "query": "SELECT T1.status_code,  T1.customer_name FROM customer AS T1 JOIN customer_status AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.status_code  =  \"A\""}
{"question": "What are the average age of the students who are male and female students?", "query": "SELECT AVG(age) FROM student WHERE gender ='male'"}
{"question": "How many rooms have the same number of rooms that have a king bed?", "query": "SELECT T1.room_id,  T1.room_name,  T1.room_type,  T1.room_price,  T1.room_beds,  T1.room_king_beds FROM room AS T1 WHERE T1.room_type  =  \"King\" AND T1.room_price  =  \"$price\" AND T1.room_beds  =  \"$beds\""}
{"question": "\"Show the names of authors from college \"Ohio\" or \"Baylor\"", "query": "SELECT T1.AuthorName FROM Author AS T1 JOIN College AS T2 ON T1.college_id  =  T2.college_id WHERE T2.college  =  'Ohio' OR T2.college  = 'Baylor'"}
{"question": "What are the names, ids and descriptions of the products with the highest price?", "query": "SELECT T1.product_name,  T1.product_id,  T1.product_description FROM product AS T1 WHERE T1.product_price  =  (SELECT max(T2.product_price) FROM product AS T2)"}
{"question": "What is the name, gender, birth date, birthday and id of user that bought the most tickets?", "query": "SELECT T1.name,  T1.gender,  T1.birth_date,  T1.birthday,  T1.id FROM users AS T1 WHERE T1.ticket_count  >  (SELECT max(T2.ticket_count) FROM users AS T2 WHERE T2.id  =  T1.id)"}
{"question": "What is the number of items in the account?", "query": "SELECT count(*) AS total FROM account"}
{"question": "Find the name and title of the employees of the company who has the most number of employees not in the marketing department", "query": "SELECT T1.name,  T2.title FROM employee AS T1 JOIN employee_department AS T2 ON T1.employee_id  =  T2._id WHERE T2.department_id  =  0"}
{"question": "How many students are there for each course?", "query": "SELECT T1.course_id,  T1.course_name,  T1.course_code,  T1.course_duration,  T1.course_price,  T1.course_capacity,  T1.course_type,  T1.course_instructor,  T1.course_location,  T1.course_description,  T1.course_start_date,  T1.course_end_date,  T1.instructor_id,  T1.instructor1_name,  T1.instructor2_"}
{"question": "What is the name that has the id of 1045?", "query": "SELECT name FROM track AS T1 WHERE T1.id  =  1045"}
{"question": "For each student, list the name and the number of hours they got credit for", "query": "SELECT T1.student_id,  T1.name,  T1.[hours] FROM student AS T1 JOIN (SELECT DISTINCT student_id,  COUNT(*) AS [hours] FROM grade GROUP BY student_id ) AS T2 ON T1.student_id  =  T2.[student_id]"}
{"question": "Find the id, name, and phone number for the first person who has the name \"Diana\"", "query": "SELECT T1.name,  T1.\"id\",  T1.\"phone\" FROM \"Person\" AS T1 WHERE T1.name  =  \"Diana\""}
{"question": "What is the name and id of the student who had the highest GPA?", "query": "SELECT T1.name,  T1.id FROM students AS T1 WHERE T1.GPA  =  (SELECT MAX(T2.GPA) FROM students AS T2)"}
{"question": "What is the name for the first person who has ever been elected as president of the united states?", "query": "SELECT T1.name FROM president AS T1 WHERE T1.id  =  1"}
{"question": "What is the name and id of the customer who likes 'The Simpsons' the most?", "query": "SELECT T1.id,  T1.name FROM customer AS T1 JOIN likes AS T2 ON T1.id  = T2.customer_id WHERE name  =  \"The Simpsons\""}
{"question": "1) What is the average age of all musicians?", "query": "SELECT average(age) FROM musicians"}
{"question": "task: show the names of all students who have been recorded as 'trying out' for the position of striker, in order of date", "query": "SELECT T1.student_id,  T1.first_name,  date_of_trying_out FROM students AS T1 JOIN student_positions AS T2 ON T1.student_id  =  T2.[student_id] WHERE T2.position_id  =  \"Striker\""}
{"question": "What is the maximum time interval between the first and second time slot of the students?", "query": "SELECT T1.start_time,  T1.end_time FROM student AS T1 JOIN time_slot AS T2 ON T1.id  =  T2.id WHERE T2.start_time  >  T1.start_time AND T2.end_time  <  T1.end_time"}
{"question": "What are the average ratings of those courses that have more than 3 students enrolled?", "query": "SELECT AVG(T1.rating) FROM courses AS T1 JOIN students AS T2 ON T1.course_id  =  T2.course_id WHERE T2.student_id  >  3"}
{"question": "What are the names and numbers of the films directed by J", "query": "SELECT T1.title,  T1.director_id FROM film AS T1 JOIN director AS T2 ON T1.director_id  =  T2.director_id GROUP BY T1.director_id ORDER BY count(*)"}
{"question": "How many products have not been ordered?", "query": "SELECT T1.product_id,  T1.product_name,  T1.product_price,  T1.product_quantity,  T1.product_category_id,  T1.quantity_on_hand,  T1.product_description,  T1.product_image,  T1.product_status,  T1.product_date_added,  T1.product_updated,  T1.product_deleted,  T1.product_id_in_stock,  T1.product_stock_quantity,  T1"}
{"question": "What are the names, birth dates, and the number of payments of customers with id 3, 4 and 5?", "query": "SELECT customer_id,  customer_first_name,  customer_last_name,  COUNT(*) FROM customers WHERE customer_id  =  3,4,5 GROUP BY customer_id"}
{"question": "List all the customers who bought at least one item", "query": "SELECT T1.customer_id,  T1.name,  T1.city_id,  T1.state_id,  T1.zip_code,  T1.email,  T1.phone,  T1.credit_limit,  T1.credit_status,  T1.credit_type,  T1.credit_balance,  T1.credit_history,  T1.credit_exp_date,  T1.credit_in_use,  T1.credit_active,  T1.credit_closed,  T"}
{"question": "(a question about a sql table), where the input is the table name, and the output is a new question about that table", "query": "(the sql query to answer the query), after \""}
{"question": "What are the names, age, and birthplace of the students in your group?", "query": "SELECT T1.student_name,  T1.age,  T1.birthplace FROM students AS T1 GROUP BY T1.student_name ORDER BY T1.student_name ASC"}
{"question": "How many students have names that contain the word \"son\" in their first name?", "query": "SELECT T1.name FROM students AS T1 WHERE T1.name LIKE \"%son%\""}
{"question": "Find the names of all the professors who are not teaching class with code ACCT-214", "query": "SELECT DISTINCT T1.name FROM professor AS T1 JOIN class AS T2 ON T1.class_code  =  T2.code WHERE T2.code  =  'ACCT-214'"}
{"question": "What are the names, addresses and phone numbers of all the students who are enrolled in the class \"3M-301\"?", "query": "SELECT T1.name,  T1.address,  T1.phone_number FROM student AS T1 WHERE T1.course_id  IN (SELECT T2.course_id FROM course AS T2 WHERE T2.name  =  '3M-301')"}
{"question": "What is the number of students in the class of 2013?", "query": "SELECT count(*)  FROM students"}
{"question": "How many students does HEBRUIN S", "query": "SELECT T1.student_id,  T1.name_first,  'HEBRUIN S' AS school FROM student AS T1 GROUP BY T1.student_id ORDER BY T1.student_id DESC LIMIT 1;"}
{"question": "How many employees have the last name of \"Baksh\"?", "query": "SELECT T1.last_name FROM employee AS T1 WHERE T1.last_name  =  \"Baksh\""}
{"question": "What is the total sales for all departments before and after the new salary policy?", "query": "SELECT SUM(Amount_Payment) FROM Pay_Transactions WHERE Date_of_Payment <= \"2011-01-01\" AND Date_of_Payment  >  \"2010-01-01\""}
{"question": "What is the total number of students who are in the class of 2018 and are taking intro to statistics?", "query": "SELECT count(*) AS total FROM student AS T1 JOIN class AS T2 ON T1.student_id  =  T2.student_id WHERE T2.class_year  =  2018"}
{"question": "What are the names and values of the following fields of the students table for a specific student: first_name, last_name, age, student_id", "query": "SELECT T1.first_name,  T1.last_name,  T1.age,  T1.student_id FROM students AS T1 WHERE T1.student_id  ==  '1'"}
{"question": "Show the details of the company with the headquarter in the city of \"Napa\"", "query": "SELECT T1.company_name,  T1.city,  T1.state,  T1.country,  T1.headquarter_name FROM company AS T1 WHERE T1.city  =  \"Napa\""}
{"question": "What are the names in the following table in the order of height (least to greatest)?", "query": "SELECT T1.name FROM people AS T1 JOIN people AS T3 ON T1.height  =  T3.height ORDER BY T1.height DESC, T3.height DESC"}
{"question": "What is the last product of \"Tetra\" whose name has 'X' in it?", "query": "SELECT T1.product_name FROM product AS T1 WHERE T1.product_name LIKE '%X%'"}
{"question": "What is the average age of the students and the staff?", "query": "SELECT T1.age,  T2.name FROM student AS T1 JOIN staff AS T2 ON T1.id  =  T2.id;"}
{"question": "What are the names, titles and birth years of the three people who have been to the same place at the same time?", "query": "SELECT T1.name,  T1.title,  T1.birth_year FROM people AS T1 JOIN place_visits AS T2 ON T1._id  =  T2.person_id WHERE T2.place_id  =  \"1\""}
{"question": "Find the names of all salespeople who are not in the \"New York\" club", "query": "SELECT T1.salesperson_name FROM salesperson AS T1 WHERE T1.club_id  =  'New York' AND T1.salesperson_id  =  '0'"}
{"question": "What are the ids and names of companies in the list with most number of employees?", "query": "SELECT T1.company_id,  T1.company_name,  T1.company_city,  T1.company_state,  T1.company_zip,  T1.company_phone,  T1.company_fax,  T1.company_website,  T1.company_employees FROM company AS T1 WHERE T1.company_employees  =  ( SELECT count(*) FROM employee AS T2 WHERE T2.company_id  =  T1.company_id )"}
{"question": "What is the name and age of the person who has the highest number of friends?", "query": "SELECT T1.name,  T1.age FROM friends AS T1 WHERE T1.name  =  \"Bob\""}
{"question": "What are the first and last names of the employees who have bought two or more products?", "query": "SELECT T1.name,  T2.name FROM employees AS T1 JOIN purchases AS T2 ON T1.id  =  T2.employee_id WHERE T1.name  =  'John' AND T2.name  =  'Smith'"}
{"question": "Show the names, phone, and payment method code of all customers in descending order of customer type", "query": "SELECT T1.customer_name,  T2.customer_phone,  T3.payment_method FROM customers AS T1 JOIN customer_type AS T2 ON T1.cust_type  =  T2.cust_type JOIN customer_payment_method AS T3 ON T1.cust_id  =  T3.cust_id ORDER BY T2.customer_type,  T1.customer_name,  (T2.customer_phone) DESC"}
{"question": "What are the names, id and the corresponding number of pages that are used by the book written by the author \"Shirley Jackson\"?", "query": "SELECT T1.name,  T1.id,  T1.pages FROM book AS T1 JOIN author AS T2 ON T1.author_id  =  T2.id WHERE T2.name  =  \"Shirley Jackson\""}
{"question": "What is the name and telephone number of the restaurant where you had dinner last year?", "query": "SELECT T1.Name,  T1.Phone_Number FROM Restaurant AS T1 WHERE T1.Last_Dinner  =  'Yes'"}
{"question": "What are the names, first name, and last name of all the people who have been in the cafeteria for at least 3 minutes?", "query": "SELECT T1.name,  T1.first_name,  T1.last_name FROM cafeteria AS T1 WHERE T1.time_in_minutes  >=  3"}
{"question": "What are the first name, last name, and id of the students who have been in the class since September 2008?", "query": "SELECT T1.first_name,  T1.last_name,  T2.id FROM students AS T1 JOIN class_history AS T2 ON T1.student_id  =  T2.student_id WHERE T2.date  >  \"2008-09-01\" AND T2.date  <  \"2008-09-01\";"}
{"question": "What is the average salary of employees for each company?", "query": "SELECT AVG(salary) FROM employees"}
{"question": "What is the name and id of the store manager of the store that sells the most pizza in the city?", "query": "SELECT T1.store_name,  T1.store_id FROM store AS T1 JOIN store_manager AS T2 ON T1.store_id  =  T2.store_id WHERE T2.name  =  \"John Smith\""}
{"question": "Find the names of all the students with a first name as \"Tom\"", "query": "SELECT T1.name FROM students AS T1 WHERE T1.first_name  =  \"Tom\""}
{"question": "What are the names and id of customers with addressed that contain WU and who do not use a credit cards for payment?", "query": "SELECT T1.customer_id,  T2.name,  T2.address_id,  T2.payment_method,  T2.credit_card_id,  T2.credit_limit,  T2.credit_status,  T2.credit_balance,  T2.credit_exp_date,  T2.credit_last_digits,  T2.credit_first_digits,  T2.[credit_last_digits] AS [Last Digits],  T2.credit_lastname,  T2.credit_"}
{"question": "How many students take course \"Statistics\" in the Fall?", "query": "SELECT count(*) AS \"count\" FROM student_courses WHERE course_name = \"Statistics\""}
{"question": "Show the distinct department names of the department with course \"CompSci\"", "query": "SELECT T1.dept_name FROM department AS T1 JOIN course_in_department AS T2 ON T1.department_id  =  T2.department_id WHERE T2.course_id  =  \"CompSci\""}
{"question": "What is the name of the employee who moved to the department with the smallest budget?", "query": "SELECT T1.employee_name FROM employee AS T1 JOIN department AS T2 ON T1.department_id  =  T2.department_id WHERE T2.budget  =  \"$min_budget\""}
{"question": "What are the names, positions and ages of the people in the room?", "query": "SELECT T1.name,  T1.position,  T1.age FROM people AS T1 WHERE T1.room_id  =  1"}
{"question": "What are the names for the colleges in the state of CA?", "query": "SELECT name FROM college WHERE state_code  =  \"CA\""}
{"question": "Find the names of regions with populations over 50k", "query": "SELECT region_id,  name_first,  name_last FROM region WHERE population  >  5000"}
{"question": "Find the names of medications used on the patient who stays in the room \"room 111\"?", "query": "SELECT T1.medication_name FROM patient_medications AS T1 JOIN patient_rooms AS T2 ON T1.patient_id  =  T2.[patient_id] WHERE T2.room_id  =  \"111\""}
{"question": "I have tried the following code to find the common words in all of the questions", "query": "SELECT DISTINCT word FROM questions WHERE question_id  =  \"1\""}
{"question": "What are the names and age of all the employees with the last name 'Brown' in order of age", "query": "SELECT T1.LastName,  T1.FirstName,  T2.age FROM employee AS T1 JOIN employee AS T2 ON T1.id  =  T2.emp_id WHERE T1.LastName  =  'Brown' ORDER BY T2.id ASC"}
{"question": "What are the ids of customers who never made a purchase of the type 'Shampoo'?", "query": "SELECT T1.id FROM customer AS T1 WHERE NOT EXISTS (SELECT T2.id FROM customer AS T2 WHERE T2.customer_id = T1.id AND T2.order_id = 0)"}
{"question": "Find the name of three students who took a class in 2009 and 2010", "query": "SELECT T1.student_id,  T1.student_name FROM students AS T1 WHERE T1.class_id  =  (SELECT class_id FROM class WHERE class_year  =  2009) AND T1.class_id  >  (SELECT class_id FROM  class WHERE class_year  =  2010)"}
{"question": "What is the total population of students who have no insurance?", "query": "SELECT T1.student_id FROM students AS T1 JOIN students_with_no_insurance AS T2 ON T1.student_id  =  T2.student_id WHERE T2.student_id  =  0"}
{"question": "What are the names, birth dates, and nationality of the students?", "query": "SELECT T1.Fname,  T1.Lname,  T1.Birth_date,  T1.Nationality FROM STUDENT AS T1 WHERE T1.Fname  LIKE  \"%John%\" AND T1.Lname  LIKE  \"%Smith%\" AND T1.Birth_date  LIKE  \"%1990%\" AND T1.Nationality  LIKE  \"%USA%\""}
{"question": "Find the names of the doctors who are on call", "query": "SELECT T1.name FROM doctor AS T1 WHERE T1.on_call"}
{"question": "What is the name if the institution where a certain student works in?", "query": "SELECT name FROM institution WHERE student_id  =  \"John Doe\""}
{"question": "List all the schools that are not in West", "query": "SELECT College FROM match _season GROUP BY College HAVING (count(*)  >  2)"}
{"question": "How many customers bought something from the company \"Abraham and Lillian\" last month?", "query": "SELECT T1.name FROM customer AS T1 JOIN order_item AS T2 ON T1.cust_id  =  T2.cust_id WHERE T2.order_id  =  \"Abraham and Lillian\" AND T1.date  =  \"2016-01-01\""}
{"question": "What are the first three names of all the captains of the first class of the ship \"Washington\"?", "query": "SELECT T1.name FROM first_class AS T1 JOIN captain AS T2 ON T1.id  =  T2.first_class_id WHERE T2.name  = \"John\""}
{"question": "Find the city, country and country code of the university", "query": "SELECT city,  country,  country_code FROM university"}
{"question": "What are the names, gender, and salaries of all the teachers that do not have a master's degree?", "query": "SELECT T1.first_name,  T1.last_name,  T1.salary,  T1.gender FROM teachers AS T1 WHERE T1.degree  =  'No'"}
{"question": "Find the number of customers who are not using the medication of Crestor", "query": "SELECT count(*)  FROM customer WHERE medication_name!= \"Crestor\""}
{"question": "How many students have the same ID as their professor?", "query": "SELECT T1.id,  T1.student_id,  T1.student.first_name,  T2.* FROM students AS T1 JOIN students AS T2 ON T1.student_id  =  T2.[student_id] WHERE T1.student.first_name  =  \"John\""}
{"question": "What is the average age of all people, in ascending order of their height?", "query": "SELECT AVG(age) FROM people ORDER BY height ASC"}
{"question": "What is the average salary of the employees in the department C?", "query": "SELECT AVG(salary) FROM employees WHERE department_id  =  \"C\""}
{"question": "Find the number of documents with document type code BK", "query": "SELECT count(*)  FROM Documents WHERE document_type_code  =  \"BK\""}
{"question": "Show all the students who attend courses from the Departement of Computer Science", "query": "SELECT T1.student_id,  T1.course_id FROM student AS T1 JOIN course AS T2 ON T1.student_id  =  T2.student_id WHERE T2.department_id  =  \"CS\""}
{"question": "\"Find the names of all employees who have an average salary of more than $40,000 but less than $50,000", "query": "SELECT T1.first_name,  T1.last_name,  T1.salary FROM employee AS T1 WHERE T1.salary  >  ( SELECT avg (T2.salary) FROM employee AS T2 WHERE T2.first_name  =  T1.first_name AND T2.last_name  =  T1.last_name ) AND T1.salary  <  ( SELECT avg (T3.salary) FROM employee AS  T3 WHERE T3.first_name  =  \" \" AND T3.last"}
{"question": "Find the number of scientists who are working on a project", "query": "SELECT count(*) from scientists WHERE project_id = 1"}
{"question": "What are the ids and names of all the students?", "query": "SELECT T1.name,  T1.id FROM student AS T1"}
{"question": "Find the names of all the schools with more than 500 students", "query": "SELECT T1.school_name FROM schools AS T1 WHERE T1.student_count  >  500"}
{"question": "What are the first and last names of the students whose family name starts with \"W\"?", "query": "SELECT T1.last_name,  T1.first_name FROM students AS T1 JOIN family_names AS T2 ON T1.family_name  =  T2.family_name WHERE T2.family_name  LIKE  'W%'"}
{"question": "Show the name of a city with the most \"bricks\" in it", "query": "SELECT T1.city_name,  COUNT(*) FROM city AS T1 GROUP BY T1.city_name HAVING COUNT(*) > (SELECT COUNT(*) FROM city AS T2 WHERE T2.city_name  =  T1.city_name)"}
{"question": "What are the names, genders and ages of students?", "query": "SELECT T1.name,  T1.gender,  T1.age FROM students AS T1 WHERE T1.gender  =  \"male\" OR T1.gender  =  0 OR T1.gender  = -1 OR T1.gender  = \"female\""}
{"question": "List all directors alongwith the number of films directed by each", "query": "SELECT T1.director_name,  T1.director_id FROM director AS T1 JOIN film_director AS T2 ON T1.director_id  =  T2.director_id GROUP BY T1.director_id ORDER BY count(*)"}
{"question": "(a novel question, about a hulking table), after \"", "query": "(the sql query to answer the query), after \""}
{"question": "What are the names, last names, and emails of all employees with \"James\" in the first name?", "query": "SELECT T1.name,  T1.last_name,  T1.email FROM employees AS T1 WHERE T1.first_name  =  'James'"}
{"question": "What are the names and addresses of all hotels in the city", "query": "SELECT T1.name,  T1.address FROM hotels AS T1 WHERE T1.city_id  =  \"1\""}
{"question": "What is the name and department of the student with first name \"Jennifer\" and last name \"Chandler\" and email address \"Jennifer", "query": "SELECT T1.first_name,  T1.last_name,  T1.email_address FROM students AS T1 WHERE T1.first_name  =  \"Jennifer\" AND T1.last_name  =  \"Chandler\" AND T1.email_address  =  \"Jennifer@yahoo.com\""}
{"question": "What is the average age of all students who have not passed their first test?", "query": "SELECT avg(age) FROM student WHERE test_passed = 0"}
{"question": "Find the names of all the employees who are assigned to a project of \"software development\"", "query": "SELECT T1.name FROM employees AS T1 JOIN projects AS T2 ON T1.project_id  =  T2.id WHERE T2.name  =  \"software development\""}
{"question": "How many students are there in the class C?", "query": "SELECT T1.student_id,  T1.student_name,  T1.student_age,  T1.student_sex,  T1.student_major,  T1.student_gpa,  T1.student_address,  T1.student_city,  T1.student_state,  T1.student_zip,  T1.student_phone,  T1.student_email,  T1.student_birthday,  T1.student_type,  T1.student_status,  T1.student_"}
{"question": "What is the id of the student that graduated in year 2003?", "query": "SELECT T1.id FROM student AS T1 WHERE T1.graduation_year  =  2003"}
{"question": "What are the names, genders, and ages of the musicians who produced the top three highly rated music?", "query": "SELECT name,  gender,  age FROM musicians WHERE rating  =  \"highly rated\" ORDER BY rating DESC LIMIT 3"}
{"question": "List the names and dates of all the students who have a meal plan", "query": "SELECT T1.student_id,  T1.meal_id,  T1.date_added FROM student_meal_plan AS T1 WHERE T1.student_id  = ? AND T1.meal_id  = ?"}
{"question": "What are the names and ids of all students in the class", "query": "SELECT T1.name,  T1.\"id\" FROM student AS T1"}
{"question": "What is the average time of all flights in the past 2 hours?", "query": "SELECT AVG(duration) FROM flights WHERE date_time  >  '2015-01-01 00:00:00' AND date_time  <  '2015-01-01 02:00:00'"}
{"question": "Show names of all students who have received a grade of an A or B", "query": "SELECT T1.student_id,  T2.name FROM student_grades AS T1 JOIN student_grades AS T2 ON T1.grade  =  T2.grade WHERE T1.grade  =  'A' OR T1.grade  =  B"}
{"question": "Find the names of all employees who are employed by the company that has the most employees", "query": "SELECT T1.employee_name FROM employee AS T1 JOIN company AS T2 ON T1.company_id  =  T2._id WHERE T2.employees  >  T1.employee_id"}
{"question": "What is the name and number of the person who is closest to the current record?", "query": "SELECT T1.name,  T1.id FROM people AS T1 JOIN people_friends AS T2 ON T1.name  =  T2.name WHERE T2.id  =  T1.id"}
{"question": "Find the names of people who have been married less than twice", "query": "SELECT T1.fname,  T1.lname FROM person AS T1 JOIN marriage AS T2 ON T1.person_id  =  T2.person_id WHERE T2.marriage_id  =  0"}
{"question": "What are the names, hometowns, and id's of all players with at least one win?", "query": "SELECT T1.name,  T1.hometown,  T1.id FROM player AS T1 WHERE T1.win  >  0"}
{"question": "What are the names, numbers and ages of the students from the group of students in the picture?", "query": "SELECT T1.name,  T1.number,  T1.age FROM students AS T1 WHERE T1.group_id  =  \"1\""}
{"question": "What is the first and last name for the employee who has the most number of transactions?", "query": "SELECT T1.employee_id,  T1.name_first,  'T1.name_last' FROM employee AS T1 JOIN transactions AS T2 ON T1.employee_id  =  T2.employee_id GROUP BY T1.employee_id HAVING count(T2.transaction_id)  =  1"}
{"question": "Find the first, last and gender of all students who has an email \"Cathy@microsoft", "query": "SELECT T1.first_name,  T1.last_name,  T1.gender,  T1.email FROM student AS T1 WHERE T1.email  =  \"Cathy@microsoft\""}
{"question": "What is the name and name of the company that has the most employees?", "query": "SELECT T1.name,  T1.name FROM companies AS T1 JOIN employees AS T2 ON T1.company_id  =  T2.[company_id] GROUP BY T1.name HAVING count(*)  =  1"}
{"question": "What is the total height of all buildings in the city of Atlanta?", "query": "SELECT T1.height FROM building AS T1 JOIN building_type AS T2 ON T1.type_id  =  T2._id WHERE T2.city_id  =  \"ATL\""}
{"question": "What are the names, gender and age of students who take maths, science, and computer science?", "query": "SELECT T1.first_name,  T1.last_name,  T1.age,  T1.gender FROM Students AS T1 WHERE T1.major  =  'Maths' OR T1.major  = 'science' OR T1.major  ='Computer science'"}
{"question": "What is the product name of the product booked with an amount 15", "query": "SELECT product_name FROM product WHERE amount  =  15"}
{"question": "What are the id, name of the employee who has the most number of tasks?", "query": "SELECT T1.id,  T1.name FROM employees AS T1 JOIN tasks AS T2 ON T1.employee_id  =  T2.employee_id WHERE T2.id  =  (SELECT id FROM tasks WHERE employee_id  =  (SELECT id  FROM employees WHERE name  =  \"John Smith\") )"}
{"question": "What is the name and type of the product whose id is the lowest?", "query": "SELECT T1.product_name,  T1.product_type FROM product AS T1 WHERE T1.id  =  (SELECT MIN(T2.id) FROM product AS T2);"}
{"question": "What are the names, birth dates and ages of all students in the university?", "query": "SELECT T1.name,  T1.birth_date,  T1.age FROM student AS T1 WHERE T1.student_id  IN (SELECT T2.student_id FROM student AS T2)"}
{"question": "What are the names (in English) of the cities and states with the most students?", "query": "SELECT name FROM city_state_population WHERE population  >  100000"}
{"question": "What is the number the movies that were produced in 2005?", "query": "SELECT COUNT(*) FROM movie WHERE year  =  2005"}
{"question": "Find the names of all movies that are not reviewed by Chris Jackson", "query": "SELECT T1.title FROM Movie AS T1 WHERE T1.reviewer_id  =  \"Chris Jackson\""}
{"question": "What are the names (first and last) of the students who do not have any courses?", "query": "SELECT T1.name FROM students AS T1 WHERE NOT EXISTS (SELECT T2.name FROM courses AS T2 WHERE T2.course_id = T1.course_id)"}
{"question": "Which tableau numbers are in the range of 0 to 999?", "query": "SELECT T1.tableau_id FROM tableau AS T1 WHERE T1.id  IN (SELECT T2.id FROM tableau AS T2 WHERE T2.id  IN (SELECT T3.id FROM tableau AS T3 WHERE T3.id  IN (SELECT T4.id FROM tableau AS T4 WHERE T4.id  IN (SELECT T5.id FROM tableau AS T5 WHERE T5.id  IN (SELECT T6.id FROM tableau AS T6 WHERE T6.id  IN (SELECT T7.id FROM tableau AS T7"}
{"question": "Find the average price of all products with the manufacturer code 2", "query": "SELECT avg(T1.price) FROM products AS T1 WHERE T1.Manufacturer  =  2"}
{"question": "What are the names and salaries of all the professors who do not play Can", "query": "SELECT T1.firstname,  T1.lastname,  T1.salary FROM professor AS T1 JOIN professor_salary AS T2 ON T1.id  =  T2.professor_id WHERE T2.type  =  'Professor' AND T2.salary  <  5000"}
{"question": "What is the name and last name of the student who spent the most time in the library?", "query": "SELECT T1.name,  T1.last_name FROM student AS T1 JOIN library_visits AS T2 ON T1.id  =  T2.id WHERE T2.time_in_minutes  >  (SELECT max(T3.time_in_minutes) FROM library_visits AS T3)"}
{"question": "What is the average age of women in New Jersey?", "query": "SELECT AVG(age) FROM people WHERE state_id = \"NJ\""}
{"question": "What are the names, and ids of the employees who are on call?", "query": "SELECT T1.first_name,  T1.last_name,  T1.id FROM Employee AS T1 WHERE T1.on_call = 'Y'"}
{"question": "Which students participate in both Canoe and Kayaking as their activities?", "query": "SELECT DISTINCT t1.student_name FROM student AS t1 JOIN student_participates_in AS t2 ON t1.student_id  =  t2.student_id JOIN activity AS t3 ON t2.activity_id  =  t3.activity_id WHERE t3.activity_name  = 'Canoe' AND t3.activity_name != 'Kayaking'"}
{"question": "Find the first names, last names and gender of all customers", "query": "SELECT T1.lastname,  T1.firstname,  T2.gender FROM customers AS T1 JOIN customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.lastname  =  \"Smith\" AND T1.firstname  =  \"John\" AND T2.lastname = \"Smith\" AND T2.firstname = \"John\""}
{"question": "What are the names and ids of the professors with the most number of students?", "query": "SELECT T1.name,  T1.[id] FROM professor AS T1 JOIN student AS T2 ON T1.professor_id  =  T2.[id] GROUP BY T1.name HAVING count(*)  >  1"}
{"question": "List all names, locations, and types of products sold by the company 'McDonalds'", "query": "SELECT T1.name,  T1.location,  T1.type FROM products AS T1 WHERE T1.company_name  =  'McDonalds'"}
{"question": "What are the names and first names of all students who have a degree of 4 or more?", "query": "SELECT T1.first_name,  T1.name FROM Students AS T1 JOIN Degree AS T2 ON T1.degree  =  T2.degree WHERE T2.grade  =  4"}
{"question": "What is the name of the student with the most test scores?", "query": "SELECT name FROM student WHERE test_score  =  (SELECT max(test_score) FROM student)"}
{"question": "(about a different table) What is the title of the movie \"The Good Son\"?", "query": "SELECT title FROM movie AS T1 WHERE T1.title = \"The Good Son\""}
{"question": "What are the names, types, and numbers of the documents with the id 1?", "query": "SELECT T1.document_name,  T1.document_type,  T1.document_number FROM documents AS T1 WHERE T1.id  =  1"}
{"question": "What is the price of the course with the highest budget and the highest enrollment?", "query": "SELECT T1.course_id,  T1.budget,  T1.enrollment FROM course AS T1 WHERE T1.budget  >  (SELECT T2.budget FROM course AS T2 WHERE T2.enrollment  >  T1.enrollment) AND T1.enrollment  >  (SELECT T3.enrollment FROM course AS  T3 WHERE T3.budget  >  T1.budget)"}
{"question": "(a novel question, about a specific topic in a specific place): What is the temperature in a house in the state of Virginia?", "query": "SELECT temperature FROM house_temperature WHERE house_id = \"1\""}
{"question": "What are the names and id of all the employees who work in the same company as the person with id 100?", "query": "SELECT T1.employee_id,  T1.name FROM employee AS T1 JOIN employee_has_manager AS T2 ON T1.employee_id  =  T2.employee_id WHERE T2.manager_id  =  100;"}
{"question": "What are the names and salaries of all employees in the company?", "query": "SELECT T1.first_name,  T1.last_name,  T1.salary FROM employees AS T1 WHERE T1.company_id  =  \"1\""}
{"question": "Who are the players who have used a player skill to get more than 4 points in a single match?", "query": "SELECT player_id,  player_name,  player_team,  player_position,  player_skill,  player_score,  player_team_id,  player_team_name,  player_team_score,  player_team2_id,  player_team2_name,  player_team2_score,  player_team3_id,  player_team3_name,  player_team3_score,  player_team4_id,  player_team4_name,  player_team4_score,  player_team"}
{"question": "What is the average weight of people in the country with the highest average weight?", "query": "SELECT AVG(weight) FROM people WHERE country_id = (SELECT country_id FROM country WHERE average_weight = (SELECT MAX(average_weight) FROM people))"}
{"question": "What are the namesof the books that have been written by authors who have written more than one book?", "query": "SELECT T1.book_name FROM books AS T1 JOIN authors AS T2 ON T1.author_id  =  T2,"}
{"question": "What are the locations of the buildings with the most students?", "query": "SELECT T1.location_name,  T1.student_count FROM buildings AS T1 JOIN student_locations AS T2 ON T1.building_id  =  T2.[building_id] GROUP BY T1.location_name ORDER BY T1.student_count DESC LIMIT 1"}
{"question": "What are the most frequently used verbs in \"The Wind and the Will\" by Shakespeare?", "query": "SELECT T1.verb FROM Verse AS T1 JOIN Verse_Part_Assemblies AS T2 ON T1.ver_id  =  T2.ver_id WHERE T2.part_assembly_id  =  \"1\""}
{"question": "List the names of the employees in descending order of salary", "query": "SELECT T1.firstname,  T1.lastname,  T1.salary FROM employee AS T1 ORDER BY T1.salary DESC"}
{"question": "What are the names, locations and credit of all the students who took a course in the year 2003", "query": "SELECT T1.name,  T1.location,  T1.credit_grade FROM student AS T1 JOIN course AS T2 ON T1.id  =  T2.id WHERE T2.year  =  2003"}
{"question": "What is the name, first name and age of the manager with the most employees?", "query": "SELECT T1.name,  T1.first_name,  T1.age FROM employees AS T1 WHERE T1.manager_id  =  (SELECT T2.manager_id FROM employees AS T2 WHERE T2.employee_id  =  T1.employee_id ORDER BY T2.name  ASC LIMIT 1)"}
{"question": "What are the names and ids of the customers who have only one account?", "query": "SELECT T1.id,  T1.name_first,  '1' AS account_count FROM customer AS T1 WHERE T1.id  =  (SELECT MAX(id) FROM customer)"}
{"question": "Find all cities that have an airport", "query": "SELECT T1.city,  T1.state,  T1.country,  T1.population,  T1.latitude,  T1.longitude,  T1.airport_code  FROM city AS T1 JOIN country AS T2 ON T1.country_id  =  T2.country_id JOIN state AS T3 ON T1.state_id  =  T3.state_id JOIN population AS T4 ON T1.population  =  T4.population JOIN airport AS T5 ON T1.airport_id  =  T"}
{"question": "What is the name and telephone number of each of the students who are in the first grade of this school?", "query": "SELECT student_id,  first_name,  last_name,  phone_number FROM students WHERE school_id  =  '1'"}
{"question": "What are the names, addresses and ages of all students?", "query": "SELECT T1.name,  T1.address,  T1.age FROM student AS T1"}
{"question": "Find the average price of all products with supplier code 2", "query": "SELECT AVG(price) FROM products WHERE supplier_code  =  2"}
{"question": "What are the names for 5 cities that have only one mayor?", "query": "SELECT name FROM city WHERE mayor = 1"}
{"question": "What is the number for the new record?", "query": "SELECT T1.id FROM new_record AS T1 WHERE T1.id  =  (SELECT MAX(id) FROM new_record)"}
{"question": "Find the city and country of the largest airport", "query": "SELECT T1.city,  T1.country FROM airports AS T1 WHERE T1.population  >  100000"}
{"question": "Find the average price of all wines made by the same winery", "query": "SELECT AVG(price) FROM wine WHERE winery_id = (SELECT T1.id FROM wine_producer AS T1 WHERE T1.winery_id = T2.id)"}
{"question": "What is the average age of students at the university with the following details?", "query": "SELECT avg(age) FROM students WHERE department_id = \"1\" AND year_of_birth  =  \"1990\""}
{"question": "What are the names, and the city of the airport which is the gateway of the most number of routes", "query": "SELECT airport_name,  city FROM airport GROUP BY airport_name,  city ORDER BY count(*) DESC;"}
{"question": "What is the number of students in the class \"Accounting 101\" in the year 2003?", "query": "SELECT COUNT(*) FROM student WHERE class_code  =  \"Accounting 101\" AND year  =  2003"}
{"question": "Find the names of the companies that are the same as the names of all companies that are not in the \"company\" table", "query": "SELECT T1.name FROM companies AS T1 JOIN companies AS T2 ON T1.company_name  =  T2.company_name WHERE T1.company_name  NOT IN (SELECT T3.company_name FROM companies AS T3)"}
{"question": "What is the average age of students who have the last name Smith?", "query": "SELECT AVG(age) FROM student WHERE last_name  =  \"Smith\""}
{"question": "What are the names and cities of the customers who are not in the state of Alaska?", "query": "SELECT T1.customer_name,  T2.city FROM customers AS T1 JOIN states AS T2 ON T1.state_id  =  T2._id WHERE T2.state_name  =  \"Alaska\""}
{"question": "What are the titles and names of the customers with the least number of orders?", "query": "SELECT T1.Name,  T1.Order_Count FROM Customer AS T1 WHERE T1.Order_Count  =  (SELECT min(T2.Order_Count) FROM Customer AS T2)"}
{"question": "List the names of cities whose population is between 20K and 50K", "query": "SELECT T1.city_name FROM city AS T1 JOIN city_population AS T2 ON T1.city_id  =  T2.city_id WHERE T2.population  >  20K AND T2.population  <  50K"}
{"question": "What is the number or percentage of students in the university who play a sport?", "query": "SELECT T1.student_name,  T1.student_sport FROM student AS T1 JOIN sport AS T2 ON T1.student_id  =  T2.student_id WHERE T2.name  = \"sport\""}
{"question": "What are the names, ages and cities of all the players in the NBA, ordered by the age of the player?", "query": "SELECT T1.name,  T2.age,  T3.city FROM player AS T1 JOIN player_details AS T2 ON T1.player_id  =  T2.player_id JOIN city AS T3 ON T2.city_id  =  T3.city_id ORDER BY T1.age"}
{"question": "What is the name, last name and id of the employee who has the most hours worked?", "query": "SELECT name, last_name, id FROM employees WHERE hours_worked  =  (SELECT MAX(hours_worked) FROM employees)"}
{"question": "What is the number and name of managers who work in the same building as Robert Smith?", "query": "SELECT T1.manager_id,  T1.name_first,  'Building' AS building FROM manager AS T1 WHERE T1.name_last  =  'Smith'"}
{"question": "What is the total number of students who have taken the course \"CIS-1171\" in the last five years?", "query": "SELECT count(*) AS total FROM student_course_history WHERE student_id  =  \"1\" AND course_id  =  \"1171\" AND year  >  (SELECT min(year) FROM student_course_history WHERE  student_id  =  \"1\")"}
{"question": "Find the names of hospitals that have a doctor named 'M", "query": "SELECT T1.name FROM hospitals AS T1 JOIN doctors AS T2 ON T1.hospital_id  =  T2.\"M\""}
{"question": "(a novel question, about a specific table, and the table name can be omitted) What is the average population of the countries whose names begin with 'A", "query": "SELECT AVG(population) FROM country WHERE name  LIKE  \"A%\""}
{"question": "List the names of all the accounts, in ascending order of their balances", "query": "SELECT T1.account_name FROM account AS T1 WHERE T1.balance  >  0 ORDER BY T1.account_name"}
{"question": "What are the names and IDs of the students who have a GPA of 3", "query": "SELECT T1.student_id,  T1.name,  T1.GPA FROM student AS T1 WHERE T1.GPA  =  3"}
{"question": "How many students have a name with an apostrophe?", "query": "SELECT T1.name FROM students AS T1 WHERE T1.name LIKE '%'"}
{"question": "How many employees' first names begin with A?", "query": "SELECT T1.firstname FROM employees AS T1 WHERE T1.firstname  LIKE 'A%'"}
{"question": "What is the total number of universities in the US?", "query": "SELECT count(*)  FROM universities"}
{"question": "What is the price of the cheapest product?", "query": "SELECT price FROM products WHERE price  =  (SELECT MIN(price) FROM products);"}
{"question": "What are the names and birthdates of all the students who are in the class of 2011?", "query": "SELECT T1.name,  T1.birthdate FROM students AS T1 WHERE T1.class_id  =  '1'"}
{"question": "What is the name and the id of the employee with the highest salary?", "query": "SELECT T1.name,  T1.salary FROM employee AS T1 JOIN salary AS T2 ON T1.id  =  T2.employee_id ORDER BY T1.salary DESC LIMIT 1"}
{"question": "(What are the names of all movies with the word \"Hollywood\" in the title?)", "query": "SELECT name FROM movie WHERE title LIKE \"%Hollywood%\""}
{"question": "List the names of the employees who have the most number of certificates for each category", "query": "SELECT T1.employee_name,  T1.cert_type,  T1.cert_count FROM employee AS T1 JOIN cert_type AS T2 ON T1.id  =  T2.employee_id JOIN cert_type_category AS T3 ON T2.cert_type_id  =  T3.cert_type_id WHERE T3.cert_type  =  \"cert_type1\" GROUP BY T1.employee_name, T1.cert_type, T1.cert_count"}
{"question": "How many employees are there in the company?", "query": "SELECT COUNT(*) AS \"count\" FROM employees"}
{"question": "What are the average salaries of the employees in the IT department in descending order of grade?", "query": "SELECT T1.grade,  T1.salary FROM employees AS T1 JOIN grade_levels AS T2 ON T1.grade  =  T2.grade ORDER BY T1.grade DESC"}
{"question": "List the average elevation of all airports for the country named \"Brazil\"", "query": "SELECT AVG(elevation) FROM airports WHERE country_name  =  'Brazil'"}
{"question": "For each employee, what is the age?", "query": "SELECT T1.age FROM employees AS T1 WHERE T1.first_name  =  \"John\""}
{"question": "What is the name on the third highest paid employee?", "query": "SELECT T2.employee_id,  T2.salary,  T2.name FROM employees AS T1 JOIN employees AS T2 ON T1.employee_id  =  T2.\"employee_id\" WHERE T2.salary  >  (SELECT T3.salary FROM employees AS T3 WHERE T3.employee_id  =  (SELECT T4.employee_id FROM employees AS T4 WHERE T4.employee_id  =  \"T2.employee_id\") AND T3.employee_id  <>  \"T2.employee_ID\") ORDER"}
{"question": "What is the average score of students who are enrolled in the business school?", "query": "SELECT AVG(score) FROM student WHERE major  =  \"Business\""}
{"question": "What is the total number of days between two successive occurrences of the same weather?", "query": "SELECT T1.date_from,  T2.date_to FROM Weather AS T1 JOIN Weather AS T2 ON T1.date_from  =  T2.date_to WHERE T1.date_from  <>  T2.date_from AND T1.date_from  <  T2.date_to"}
{"question": "A question about a sql table: What is the average number of orders for each customer at each store, and what is the total number of customers?", "query": "SELECT T1.store_name,  T1.customer_name,  T1.order_count,  T1.total_order_count FROM store_details AS T1 JOIN customers AS T2 ON T1.customer_id  =  T2.customer_id JOIN orders AS T3 ON T1.store_id  =  T3.store_id GROUP BY T1.store_name, T1.customer_name, T1.order_count, T1.total_order_count"}
{"question": "What is the movie title of the film with the lowest score?", "query": "SELECT name FROM movie WHERE score  =  \"null\""}
{"question": "Retrieve the average annual salary for employees who are not in the same department as the person in the top-paid position", "query": "SELECT T1.employee_id,  T1.name_first,  \""}
{"question": "What is the number of rows in the table?", "query": "SELECT count(*) AS count FROM table;"}
{"question": "List the names of students with the last name of Smith", "query": "SELECT T1.student_id,  T2.last_name FROM students AS T1 JOIN students AS T2 ON T1.id  =  T2.id WHERE T1.last_name  =  \"Smith\""}
{"question": "What is the highest score in the game?", "query": "SELECT MAX(score) FROM game"}
{"question": "Show the names of all products that have a minimum price of $100", "query": "SELECT T1.product_name FROM products AS T1 WHERE T1.price  =  '100'"}
{"question": "What is the number assigned to each student in the class of 2003?", "query": "SELECT T1.student_id,  T1.name FROM students AS T1 JOIN class_of_2003 AS T2 ON T1.class_id  =  T2._id GROUP BY T1.student_id ORDER BY T1.student_id"}
{"question": "Find the name of all the employees who have an age between 50 and 60", "query": "SELECT T1.name FROM employees AS T1 JOIN employees AS T2 ON T1.age  >  60 AND T1.age  <  70 AND T2.age  >  50 AND T2.age  <  60"}
{"question": "What is the number of employees in the department of accounting?", "query": "SELECT count(*) from employees WHERE department_id = 'DNO 140'"}
{"question": "Give the names of employees who are also members of the country's Olympic Committee", "query": "SELECT T1.name FROM employees AS T1 JOIN country_olympic_committee AS T2 ON T2.member_id  =  T1.id"}
{"question": "What are the names, last names and salaries of all the employees of \"The University of Washington\"?", "query": "SELECT T1.name,  T1.last_name,  T1.salary FROM employees AS T1 WHERE T1.university_id = \"The University of Washington\""}
{"question": "Which actors are not in any movies with the word \"The\", and what are the names of those actors", "query": "SELECT T1.actor_id,  T1.actor_name FROM actor AS T1 JOIN movie AS T2 ON T1.actor_id  =  T2._actor_id WHERE T2.title  =  \"The\" AND T2.actor_id  =  0"}
{"question": "What are the titles of all customers who purchased more than $500 worth of products? (Assume that the numbers of products are available", "query": "SELECT T1.title FROM customer AS T1 JOIN order_item AS T2 ON T1.cust_id  =  T2.[cust_id] WHERE T2.quantity  >  500"}
{"question": "What are the ids and names of the students who have taken the courses with the code 3?", "query": "SELECT T1.student_id,  T1.name FROM students AS T1 JOIN courses AS T2 ON T1.crs_id  =  T2.[course_id] WHERE T2.code  =  3"}
{"question": "Find the name of the department which has the minimum number of employees", "query": "SELECT T1.dept_name FROM department AS T1 JOIN employee AS T2 ON T1.id  =  T2.depid WHERE T2.emp_id  =  (SELECT MIN(emp_id) FROM employee)"}
{"question": "How many are there, including myself, who have a Ph", "query": "SELECT count(*) AS \"count\" FROM \"question\""}
{"question": "Find the names of all the directors who have directed at least one film in the first half of the 20th Century", "query": "SELECT T1.director_name FROM director AS T1 JOIN film AS T2 ON T1.director_id  =  T2._id WHERE T2.year  <  1900"}
{"question": "Find the student with the most number of classes", "query": "SELECT T1.student_id FROM students AS T1 JOIN classes AS T2 ON T1.student_id  =  T2.[student_id] WHERE T2.class_id  =  (SELECT MAX(T3.class_id) FROM classes AS T3)"}
{"question": "How many orders have a shipment id of \"3452\"?", "query": "SELECT T1.shipment_id FROM orders AS T1 WHERE T1.shipment_id  =  \"3452\""}
{"question": "\"Find all customers who ordered both \"food\" and \"coffee\" during the same time period", "query": "SELECT T1.customer_id,  T1.order_date,  T1.order_item_name,  T1.order_price,  T1.order_quantity,  T1.order_total,  T1.order_status,  T1.order_type,  T1.order_time,  T1.order_address,  T1.order_city,  T1.order_state,  T1.order_zip,  T1.order_country,  T1.order_phone,  T1.order_"}
{"question": "What are the names, id and the corresponding number of visitors for each  tourist attraction? (from the previous example)", "query": "SELECT T1.name,  T1.id,  T2.number_of_visitors FROM tourist_attraction AS T1 JOIN tourist_attraction_visitors AS T2 ON T1.attraction_id  =  T2.attraction_id"}
{"question": "What is the name and id of the customer who made the most orders?", "query": "SELECT T1.id,  T1.name FROM customer AS T1 JOIN order_item AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_id  =  (SELECT MAX(order_id) FROM order_item)"}
{"question": "What are the names, and ages of the customers who buy products from you?", "query": "SELECT T1.name,  T1.\"age\" FROM Customer AS T1 JOIN Products AS T2 ON T1.customer_id  =  T2.\"customer_id\""}
{"question": "Find the names of all schools that do not have a gym", "query": "SELECT school_name FROM schools WHERE school_name NOT IN (SELECT school_name FROM schools WHERE schooltype  =  \"gym\")"}
{"question": "What are the names, salaries, and the number of employees of departments with average salary more than 42000?", "query": "SELECT T1.name,  T1.salary,  T1.num_employees FROM departments AS T1 JOIN employees AS T2 ON T1.id  =  T2.department_id WHERE T1.salary  >  42000 GROUP BY T1.name, T1.salary, T1.num_employees ORDER BY T1.name"}
{"question": "What are the names of all the customers who ordered the most products?", "query": "SELECT T1.customer_name FROM customer AS T1 JOIN order AS T2 ON T1.id  = T2.customer_id WHERE order_count  =  (SELECT MAX(order_count) FROM order)"}
{"question": "What are the names (first and last) of the customers who have had a loan of $1400 or less and have been in business for at least 2", "query": "SELECT T1.first_name,  T1.last_name FROM customer AS T1 WHERE T1.loan_amount  =  1400 AND T1.age  >=  2"}
{"question": "What is the average age of the employees with a manager?", "query": "SELECT AVG(age) FROM employees WHERE manager_id  >  0"}
{"question": "Find all the names of customers who bought more than 1 product in a day", "query": "SELECT T1.customer_name FROM customer AS T1 WHERE T1.cust_id IN (SELECT T2.cust_id FROM order AS T2 WHERE T2.date  =  \"2016-01-01\" AND T2.product_id  =  \"1\" AND T2.quantity  >  1)"}
{"question": "List the names of customers with an address in a big city", "query": "SELECT T1.customer_id,  T1.address,  T1.city,  T1.state,  T1.\"zip code\" FROM customer AS T1 WHERE T1.city  =  \"New York\""}
{"question": "What is the last name of the customer named \"Jeramie\" who placed an order at the store named \"Jerusalem\" on March 1?", "query": "SELECT T1.customer_name,  T1.customer_address,  T1.customer_city,  T1.customer_state,  T1.customer_zip,  T1.customer_phone,  T1.customer_email,  T1.customer_credit_card,  T1.customer_balance,  T1.customer_order_id,  T1.customer_shipping_address,  T1.credit_card_type,  T1.credit_id,  T1.credit_name,  T1.credit_number"}
{"question": "(Find the dates of orders which belong to\")", "query": "SELECT DISTINCT date_of_order FROM order_items WHERE order_id  =  \"1\""}
{"question": "Find the name of the company that is the host of the most number of championships", "query": "SELECT T1.name FROM company AS T1 JOIN championship AS T2 ON T1.company_id  =  T2.company_id WHERE T2.number_of_championships  =  ( SELECT max(number_of_championships) FROM championship )"}
{"question": "How many students are there in the course QM-261? What is the average grade?", "query": "SELECT COUNT(*) FROM students WHERE course_id = 'QM-261'"}
{"question": "How many male students are in the class with highest average score?", "query": "SELECT T1.avg_score FROM class AS T1 JOIN student AS T3 ON T1.class_id  =  T3.class_id WHERE T3.gender  =  'M'"}
{"question": "What are the names and addresses of all customers whose zip codes ends with 6700?", "query": "SELECT T1.customer_name,  T2.address_id,  T2.zip_code FROM customers AS T1 JOIN address AS T2 ON T1.id  = T2.customer_id WHERE  T2.zip_code  =  '6700'"}
{"question": "What are the names, ages, and cities/campus of the two students who were in the same class as you in college?", "query": "SELECT T1.student_name,  T1.student_age,  T1.student_city FROM student AS T1 WHERE T1.student_id  =  (SELECT student_id FROM student WHERE student_id  =  '1')"}
{"question": "What is the name, last name and id of the person with the largest number of courses?", "query": "SELECT T1.id,  T1.first_name,  'T1.first_name' AS question_name,  T1.first_letter,  T1.last_letter,  T1.first_number,  T1.last_number,  T1.id,  T1.\"first_name\",  T1.\"last_name\",  T1.id, T1.id,  T2.id,  T2.first_name,  T2.\"last_name\",  \"T2.first_name\" AS"}
{"question": "What are the names, phone numbers, and ages of the students who have attended class A?", "query": "SELECT T1.fname,  T1.lname,  T1.phone,  T1.age FROM students AS T1 WHERE T1.class  =  'A'"}
{"question": "What are the names, ids, and salaries of the employees who have id less than 10000?", "query": "SELECT T1.name,  T1.id,  T1.salary FROM employee AS T1 WHERE T1.id  <  10000"}
{"question": "What is the name, home city, and location of the hotel that has the most rooms?", "query": "SELECT name,  city,  location FROM hotel WHERE hotel_rooms  >  (SELECT hotel_rooms FROM hotel WHERE hotel_name  =  \"The Grand Hotel\")"}
{"question": "When was the order placed whose shipment tracker number is 3452? Give me a novel question about that table", "query": "SELECT * FROM order_item WHERE order_id = '3452'"}
{"question": "What is the average temperature in July in the year 2002?", "query": "SELECT AVG(temperature) FROM weather WHERE YEAR(date) =  2002 AND MONTH(date) =  7"}
{"question": "What is the total number of records?", "query": "SELECT count(*) AS total FROM table"}
{"question": "What is the average age of all the students in your school?", "query": "SELECT AVG(age) FROM Student"}
{"question": "What are the names, locations and sales of both stores", "query": "SELECT T1.store_name,  T2.store_location,  T3.store_sales FROM stores AS T1 JOIN stores AS T2 ON T1.store_id  =  T2._id JOIN stores AS T3 ON T2.store_id  =  '3' WHERE T1.store_name  =  \"Store A\" AND T2.store_location  =  \"New York\" AND T3.store_sales  =  \"$100,000\""}
{"question": "What is the name of the university in which the student named JENNY CHEN has been enrolled?", "query": "SELECT name FROM University WHERE name = \"JENNY CHEN\""}
{"question": "Find the id and name of the student who has 3 or more attempts", "query": "SELECT T1.id,  T1.name FROM students AS T1 JOIN attempts AS T2 ON T1.student_id  =  T2.student_id WHERE T2.attempts  >  3"}
{"question": "What is the name of the professor with the highest number of students?", "query": "SELECT T1.name FROM professor AS T1 JOIN students AS T2 ON T1.id  =  T2.id WHERE T2.student_id  =  (SELECT T3.student_id FROM student AS T3 WHERE T3.id  =  (SELECT T4.student_id FROM student AS t4 WHERE t4.id  =  T2.id))"}
{"question": "What are the numbers of employees with the first name \"Amanda\" in the department of \"IT\" in the city of \"San Francisco\" whose age", "query": "SELECT T1.first_name,  T1.last_name,  T2.department_name,  T3.city_name,  T4.state_code,  T5.country_code FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN cities AS T3 ON T2.city_id  =  T3.city_id JOIN states AS T4 ON T3.state_id  =  T4.state_id JOIN countries AS T5 ON T4.country"}
{"question": "Find the name of all students", "query": "SELECT * FROM student"}
{"question": "What is the name, address, and phone number of the salesman who sold the car to John", "query": "SELECT T1.name,  T1.[address],  T1.[phone] FROM salesman AS T1 JOIN car AS T2 ON T1.salesman_id  =  T2.[salesman_id] WHERE T2.owner_id  =  \"John\""}
{"question": "Show the names of all athletes, ordered by age, and the number of races they won", "query": "SELECT athlete_name,  age,  count(*) FROM athlete WHERE age  >  (SELECT max(age) FROM athlete WHERE race_id  =  1) GROUP BY athlete_name ORDER BY age"}
{"question": "What is the average grade for students with last name \"Smith\"?", "query": "SELECT AVG(grade) FROM student AS T1 JOIN student_grades AS T2 ON T1.id  =  T2.student_id WHERE T2.last_name  =  \"Smith\""}
{"question": "What are the ids of all distinct order ids that have been cancelled?", "query": "SELECT T1.id FROM orders AS T1 WHERE T1.cancelled =  '1'"}
{"question": "What should I do?", "query": "SELECT name FROM Person"}
{"question": "List the first names of all players with a nickname beginning with the letter \"r\"", "query": "SELECT T1.name FROM players AS T1 WHERE T1.name  LIKE  \"r%\""}
{"question": "What are the ids and names of the customers who bought the most products?", "query": "SELECT T1.cust_id,  T1.cust_name FROM customers AS T1 WHERE T1.cust_id IN (SELECT T2.cust_id FROM orders AS T2 WHERE T2.cust_id IN ( SELECT T3.cust_id FROM orders_products AS T3 WHERE T3.order_id IN ( SELECT T4.order_id FROM orders_products AS t4 WHERE t4.product_id IN ( SELECT T5.product_id FROM products AS t5 WHERE t5.product_id IN ( SELECT t6."}
{"question": "What is the age of all the females in order of their age?", "query": "SELECT T1.age,  T2.name FROM female_age_table AS T1 JOIN person AS T2 ON T1.id  =  T2.id WHERE T1.age  >  0 ORDER BY T1.age ASC"}
{"question": "What are the names, genders and weights of all staffs who have a weight greater than 200?", "query": "SELECT T1.name,  T1.gender,  T1.weight FROM staff AS T1 WHERE T1.weight  >  200"}
{"question": "(find the number of\")", "query": "(find the number of\")"}
{"question": "What are the names and ids of the movies whose release year and title are same?", "query": "SELECT T1.title,  T1.id FROM movie AS T1 WHERE T1.release_year  =  \"2012\" AND T1.title  =  \"The Dark Knight\""}
{"question": "What is the name and date of birth of each employee who is at least 50 years old", "query": "SELECT T1.name,  T1.dob FROM employees AS T1 WHERE age  >=  50"}
{"question": "How many of these players played at least one game with the same team?", "query": "SELECT T1.player_id,  T1.team_id FROM player AS T1 JOIN team AS T2 ON T1.team_id  =  T2.id WHERE T2.team_name  =  'New York Yankees' GROUP BY T1.team_id HAVING COUNT(*)  >  1"}
{"question": "What are the names, addresses and phone numbers(es) of the persons who have visited the school in the past month?", "query": "SELECT T1.first_name,  T1.last_name,  T1.address_id,  T1.phone_number FROM Person AS T1 JOIN Person_Address AS T2 ON T1.id  = T2.id JOIN Person_Phone AS T3 ON T1.address_id = T3.address_id WHERE T1 IN (SELECT T4.id FROM Person_Visit AS T4 WHERE T4.date_from <= DATE_SUB(NOW(), INTERVAL 30 DAY) AND T4.date_to >= DATE_SUB(NOW(), INTERESTING"}
{"question": "What are the names, first and last, of the 4 customers who have more than three orders?", "query": "SELECT T1.Name,  T1.first_name,  T1.last_name FROM customer AS T1 WHERE T1.orders  >  3"}
{"question": "Find the first names of all the customers who are not registered in any courses", "query": "SELECT T1.customer_first_name FROM customers AS T1 WHERE NOT EXISTS (SELECT T2.customer_id FROM courses AS T2 WHERE T2.customer_id = T1.customer_id)"}
{"question": "What are the names, gender, and states of all the employees?", "query": "SELECT T1.firstname,  T1.lastname,  T1.gender,  T1.state_code FROM employee AS T1 WHERE T1.state_code  =  'CA'"}
{"question": "What are the names, heights, and weights of all the students at the University of Washington?", "query": "SELECT name,  height,  weight FROM student"}
{"question": "Which students who have registered in the class \"Computer Science 201\" have not attended the class?", "query": "SELECT Student_id FROM student WHERE class_id =  \"201\" AND class_name =  \"Computer Science 201\" AND attendance =  '0'"}
{"question": "What is the name and id of the student who has the worst attendance?", "query": "SELECT T1.name,  T1.\"id\" FROM student AS T1 WHERE T1.attendance  =  \"Worst\""}
{"question": "What is the name and id of the coach who has coached the most number of people?", "query": "SELECT coach_name,  player_id FROM coaches WHERE coach_id  =  (SELECT coach_id FROM coaches WHERE coach_name  =  \"Alice\" AND player_id  =  \"Bob\")"}
{"question": "Find the names of the songs whose rating  is below the rating of all songs in Chinese", "query": "SELECT T1.name FROM song AS T1 WHERE T1.rating  <  (SELECT T2.rating FROM song AS T2 WHERE T2.name  =  T1.name)"}
{"question": "What are the names, addresses, and phone numbers of all customers who live in the country of Russia?", "query": "SELECT T1.customer_name,  T2.address_id,  T2.phone_number FROM customers AS T1 JOIN customer_address_history AS T2 ON T1.id  = T2.customer_id WHERE country_code  =  'RU'"}
{"question": "What is the name and address of the nearest hospital?", "query": "SELECT name,  address FROM hospital WHERE distance  =  (SELECT min(distance) FROM hospital)"}
{"question": "What are the names in the table \"Races\" with the maximum number of wins?", "query": "SELECT T1.Name FROM Races AS T1 WHERE T1.Wins  =  (SELECT max(T2.Wins) FROM Races AS T2);"}
{"question": "List the id, genre, and name for all the albums with the highest sales", "query": "SELECT T1.album_id,  T1.genre,  T1.name FROM album AS T1 WHERE T1.sales  >  (SELECT T2.sales FROM album AS T2 WHERE T2.genre  =  T1.genre)"}
{"question": "What are the names, last names, and phone numbers of the people who are on the list?", "query": "SELECT T1.Name,  T1.Last_Name,  T1.Phone_Number FROM people AS T1 WHERE T1.id IN (SELECT T2.id FROM people AS T2 WHERE T2.name IN (SELECT T3.name FROM people AS T3 WHERE T3.last_name IN (SELECT T4.last_name FROM people AS T4 WHERE T4.name IN (SELECT T5.name FROM people AS T5 WHERE T5.last_name IN (SELECT t6.name FROM people AS t6 WHERE t6.last_name IN (SELECT name"}
{"question": "What are the names, dates of birth and death of all faculty that have a name beginning with the letter 'D'?", "query": "SELECT name,  dob,  dod FROM faculty WHERE name  LIKE 'D%'"}
{"question": "What are the ids and names of all the schools that are not the college of the university?", "query": "SELECT T1.id,  T1.name FROM school AS T1 JOIN university AS T2 ON T1.school_id  =  T2._id WHERE T2.university_id  =  0"}
{"question": "What is the average salary of employees for each city in descending order of city name?", "query": "SELECT city,  AVG(salary) FROM employees GROUP BY city ORDER BY city"}
{"question": "What are the names and genders of all the people who have worked in the lab since 2010?", "query": "SELECT T1.name,  T1.gender FROM people AS T1 WHERE T1.date_of_joining  >=  '2010-01-01'"}
{"question": "What are the email address of the drama workshop groups with address 'in Alaska state'?", "query": "SELECT DISTINCT T1.email FROM workshop AS T1 JOIN workshop_group AS T2 ON T1.id  =  T2.workshop_id WHERE T2.address  =  \"in Alaska state\""}
{"question": "Which of the mill names is not made in France?", "query": "SELECT T1.code,  T2.name FROM mill AS T1 JOIN mill_name AS T2 ON T1.code  =  T2.code"}
{"question": "Which is the only city that is not the birthplace of any of the athletes of the NHL?", "query": "SELECT DISTINCT City FROM Athletes WHERE Birthplace = \"None\""}
{"question": "What is the name, first name, and last name of the person who is currently the president of the company", "query": "SELECT T1.firstname,  T1.lastname,  T1.name FROM employee AS T1 WHERE T1.firstname  =  \"John\" AND T1.lastname  =  \"Doe\""}
{"question": "What is the name, department id, and department name of the employee who has the highest salary?", "query": "SELECT T1.name,  T2.department_id,  T3.department_name FROM employee AS T1 JOIN department AS T2 ON T1.department_id  =  T2.department_id JOIN department AS T3 ON T2.department_id  = T3.department_id WHERE T1.salary  =  (SELECT max(salary) FROM employee)"}
{"question": "What are the names, locations and unit prices of all products that are not fruits or vegetables?", "query": "SELECT T1.name,  T1.location,  T1.unit_price FROM products AS T1 WHERE T1.type  =  \"not fruits\" AND T1.type  =  not \"vegetables\""}
{"question": "What are the names in descending order for the students who are in the top 10% for the course?", "query": "SELECT name FROM student AS T1 JOIN student_grades AS T2 ON T1.student_id  =  T2._student_id WHERE T2.percentage  >  0.1 ORDER BY T1.name DESC"}
{"question": "What are the names and ids of all students who are enrolled in a course with title \"CS 101\" or \"CS 102\"?", "query": "SELECT T1.student_id,  T1.name_first,  (SELECT name_last FROM student AS T2 WHERE T2.student_id  =  T1.student_id) FROM student AS T1 JOIN course AS T2 ON T1.student_id  =  (SELECT student_id FROM student AS T3 WHERE T3.course_id  =  T2.course_id) WHERE T2.course_title  =  \"CS 101\" OR T2.course_title  ==  \"CS 102\""}
{"question": "find the names of all employees in the company who live in the city of \"San Jose\", and order them by their salary", "query": "SELECT T1.name FROM employee AS T1 JOIN city AS T2 ON T1.city_id  =  T2._id WHERE T2.city  =  \"San Jose\""}
{"question": "Show the average temperature of a day in the U", "query": "SELECT AVG(temperature) FROM weather_data WHERE date_time  =  \"2011-01-01 00:00:00\""}
{"question": "What are the names and locations of all the offices of the company?", "query": "SELECT T1.name,  T1.location FROM office AS T1 WHERE T1.name  =  \"Office of the President\""}
{"question": "What is all the names of movies starring Matthew McConaughey?", "query": "SELECT T1.movie_name FROM movies AS T1 JOIN actors AS T2 ON T1.actor_id  =  T2._id WHERE T2.name  = \"Matthew McConaughey\""}
{"question": "How many books are there in \"Penguin Classics\" category?", "query": "SELECT count(*) from book WHERE category = \"Penguin Classics\""}
{"question": "What are the names, numbers, and descriptions of the products containing the letter a?", "query": "SELECT T1.name,  T1.number,  T1.description FROM products AS T1 WHERE T1.name  LIKE  \"a\""}
{"question": "What is the average income of the employees who are not teachers?", "query": "SELECT AVG(salary) FROM employee WHERE employee_type  =  'Employee' AND employee_status  =  'Non-Teaching'"}
{"question": "What are the courses that have more than two instructors?", "query": "SELECT T1.course_id,  T1.course_name,  T1.course_number,  T1.course_year,  T1.course_instructor_id,  T1.coursedesc,  T1.course_price,  T1.course_fee,  T1.course_credit,  T1.course_start_date,  T1.course_end_date,  T1.coursestart_time,  T1.coursenext_time,  T1.course_notes,  T"}
{"question": "How many students have been registered for the exam?", "query": "SELECT count(*) AS count FROM student_registration"}
{"question": "What are the id, first name, and last name of all customers?", "query": "SELECT T1.id,  T1.firstname,  T2.lastname FROM customers AS T1 JOIN customers AS T2 ON T1.customer_id  =  T2.customer_id"}
{"question": "Find the average and minimum age for each teacher in each department", "query": "SELECT T1.teacher_id,  T1.dept_code,  T1.avg_age,  T1.min_age FROM teacher AS T1 JOIN department AS T1 ON T1.dept_id  =  T1.dept_id GROUP BY T1.dept.id ORDER BY avg(T1) DESC LIMIT 1"}
{"question": "What is the location of the university that has the highest number of students?", "query": "SELECT T1.city_name,  T1.state_name FROM cities AS T1 JOIN university AS T2 ON T1.city_id  =  T2.city_id WHERE T2.students  =  (SELECT count(*) FROM student WHERE city_id  =  \"San Francisco\")"}
{"question": "What are the names, status and salary of all the employees who work at the company?", "query": "SELECT T1.first_name,  T1.last_name,  T1.status,  T1.salary FROM employees AS T1 WHERE T1.company_id  =  '1'"}
{"question": "Find the names of all the countries and their currencies", "query": "SELECT country_name,  currency_name FROM country_currencies"}
{"question": "What are the names for each of the following:", "query": "SELECT T1.name FROM table1 AS T1 JOIN table2 AS T2 ON T1.key_id  =  T2.key_id WHERE T2.name  =  \"name\""}
{"question": "Show the average speed of roller coasters", "query": "SELECT AVG(speed) FROM rides"}
{"question": "How many unique customers had purchased something from Amazon", "query": "SELECT COUNT(*) AS cnt FROM customer_purchases AS T1 JOIN customer AS T2 ON T1.customer_id  = T2.customer_id WHERE T1.product_id  =  \"Amazon\""}
{"question": "What are the best 10 of the best restaurants in the world", "query": "SELECT DISTINCT name FROM restaurant WHERE rating  =  \"best\" ORDER BY rating DESC LIMIT 10"}
{"question": "What are the names, phone numbers, and emails of all employees, ordered by last name, ascending?", "query": "SELECT T1.last_name,  T1.phone_number,  T1.email FROM employee AS T1 GROUP BY T1.last_name ORDER BY T1.last_name ASC"}
{"question": "What are the names and ages of all the employees of the Bank of China in 2011?", "query": "SELECT employee_name,  employee_age FROM employees WHERE employee_name  =  'John' AND employee_age  =  '23'"}
{"question": "(a novel question, about a dictionary) What is the definition of \"cow\" and what is the meaning of \"dire straits\" in the", "query": "SELECT definition,  meaning FROM dictionary WHERE word  =  \"cow\""}
{"question": "What are the names (first and last name) and the ids of the employees, who have the first and last names of their boss", "query": "SELECT T1.first_name,  T1.last_name,  T2.id FROM Employee AS T1 JOIN Employee AS T2 ON T1.boss_id  =  T2.\"id\""}
{"question": "What is the average score of the students who scored a perfect on the test?", "query": "SELECT avg(score) FROM student WHERE score = 100"}
{"question": "What is the name and location of the first film that has a title that is the same as the title of the second film?", "query": "SELECT T1.title,  T1.location FROM film AS T1 JOIN film AS T2 ON T1.title  =  T2.title"}
{"question": "Find all the products that are in the department \"Household Utensils\" and have a price less than 1000 and are not A to Z or Z to", "query": "SELECT T1.product_name,  T1.product_price,  T1.product_category,  T1.product_color,  T1.product_size,  T1.product_weight,  T1.product_quantity,  T1.product_available,  T1.product_description,  T1.product_image,  T1.product_type,  T1.product_status,  T1.product_date,  T1.product_time,  T1.product_location,  T1.product_city,"}
{"question": "What are the names, grades and number of credits of all students of a course?", "query": "SELECT T1.name,  T1.grade,  T1.credits FROM student AS T1 WHERE T1.course_id  IN (SELECT T2.course_id FROM course AS T2 WHERE T2.name  =  \"CS101\")"}
{"question": "What is the average number of syllables in the names of the members of the fraternity \"Theta Chi\"?", "query": "SELECT avg(length(T1.name)) FROM members AS T1 JOIN fraternity AS T2 ON T1.fraternity_id  =  T2.fraternity_id WHERE T2.name  =  \"Theta Chi\""}
{"question": "(a question about a sql table) Returns the average, maximum, and minimum lengths for the songs in the database, ranked from shortest to longest", "query": "SELECT AVG(LENGTH),  AVG(MAX(LENGTH)),  AVG(MIN(LENGTH)) FROM songs GROUP BY LENGTH ORDER BY LENGTH DESC"}
{"question": "How many customers are there in the \"Electric Service\"?", "query": "SELECT COUNT(*) FROM customers WHERE customer_type  =  \"Electric Service\""}
{"question": "Show the names of students who have not received any scholarship", "query": "SELECT T1.student_id FROM students AS T1 WHERE NOT EXISTS (SELECT T2.student_id FROM scholarships AS T2 WHERE T2.student_id  =  t1.student_id)"}
{"question": "Find the customer's name and the city that they live in", "query": "SELECT T1.customer_id,  T1.name,  T1.city_id FROM customer AS T1 JOIN city AS T2 ON T1.city_id  =  T2.id WHERE T1.customer_id  =  \"1\""}
{"question": "What are the names and addresses of the students in the class taught by Dr", "query": "SELECT T1.student_name,  T2.address FROM student_record AS T1 JOIN student AS T2 ON T1.id  = T2.id WHERE T1.teacher_id  =  \"Dr\""}
{"question": "Find the first name and last name of the students who are 18 years and have a loan of more than 3000", "query": "SELECT T1.first_name,  T1.last_name FROM student AS T1 WHERE T1.age  =  18 AND T1.loan  >  3000"}
{"question": "What are the names, with their titles, of all the films that are in the database?", "query": "SELECT T1.title FROM film AS T2 JOIN film_titles AS T3 ON T2.film_id  =  T3.film_id WHERE T3.title  =  \"title\""}
{"question": "What are the names, grades, and salaries of students in the department of Statistics?", "query": "SELECT T1.firstname,  T1.lastname,  T1.GPA,  T1.salary FROM student AS T1 JOIN department AS T2 ON T1.department_id  =  T2.department_id WHERE T2.department_name  =  \"Statistics\""}
{"question": "What are the ids or names of the products that are made of at least two materials?", "query": "SELECT T1.id,  T1.name FROM product AS T1 JOIN product_material AS T2 ON T1.id  =  T2.productid WHERE T2.material_id  =  1 OR T2.material_id  >  1"}
{"question": "What are the names, cities and jobs of the employees that do not have any of the following skills:", "query": "SELECT name FROM employee WHERE skill_id  =  \"null\""}
{"question": "What are the names and ids of all employees who are not managers?", "query": "SELECT T1.first_name,  T1.last_name,  T1.id FROM employee AS T1 WHERE NOT T1.manager_id  =  NULL"}
{"question": "What is the highest number of students who have a certificate in either \"computer science\" or \"physics\"?", "query": "SELECT COUNT(DISTINCT T1.certificate) FROM certificates AS T1 WHERE T1.subject  =  \"computer science\" OR T1.subject  =  'physics'"}
{"question": "What is the name and address of the first author of the paper \"The Nature of Scientific Discovery\"?", "query": "SELECT T1.name,  T1.address FROM author AS T1 WHERE T1.paper_id  =  \"The Nature of Scientific Discovery\""}
{"question": "What are the names and ages of all the female singers whose first names are in alphabetical order, except for \"Adele\" and \"Amy\"?", "query": "SELECT T1.first_name,  T1.last_name,  T1.age FROM Singer AS T1 WHERE T1.first_name  IN (SELECT T2.first_name FROM Singer AS T2 WHERE T2.first_name  <  \"Adele\" AND T2.first_name  >  \"Amy\") ORDER BY T1.first_name"}
{"question": "Find the names of all companies that are located in the United States", "query": "SELECT name FROM Company WHERE Country = \"United States\""}
{"question": "What are the names and birth dates of employees who got married in the past year", "query": "SELECT T1.last_name,  T1.first_name,  DATE_FORMAT(T1.birth_date,  \"%Y-%m\") AS birth_date FROM employees AS T1 WHERE T1.marriage_date  >  \"2013-01-01\""}
{"question": "Show the name and id of the person that has the most number of notes", "query": "SELECT T1.firstname,  T1.lastname,  T1.id FROM notes AS T1 JOIN person AS T2 ON T1.person_id  =  T2.id WHERE T2.id  =  (SELECT max(id) FROM person)"}
{"question": "What is the name of the person who has the most recent posts?", "query": "SELECT T1.name FROM posts AS T1 WHERE T1.created_by  =  (SELECT T2.name FROM users AS T2 WHERE T2.id  =  (SELECT T3.id FROM users AS T3 WHERE T3.name  =  \"Alice\"))"}
{"question": "Who is the author of the paper titled \"The Effects of a Stellar Gravitational Field on the Physical Processes of a Binary Star System\"?", "query": "SELECT T1.name FROM author AS T1 JOIN paper AS T2 ON T1.name  =  T2.author_name WHERE T2.title  =  \"The Effects of a Stellar Gravitation Field on the Physical Processes of A Binary Star System\""}
{"question": "What are all the ages of the heads who are acting, in ascending order?", "query": "SELECT T1.age FROM actor AS T1 WHERE T1.role = 'Actor' ORDER BY T1.age"}
{"question": "(a novel question, about a question about a new table), after \"", "query": "Examples of some or all task item:"}
{"question": "How many people have the surname \"Smith\" and are above 50 years old?", "query": "SELECT T1.name FROM people AS T1 WHERE T1.surname  =  \"Smith\" AND T1.age  >  50"}
{"question": "What is the price of the ticket?", "query": "SELECT ticket_price FROM tickets"}
{"question": "Find the names of the products in the store", "query": "SELECT T1.product_id,  T1.product_name FROM product AS T1 JOIN product_description AS T2 ON T1.product_id  =  T2.product_id WHERE T2.description  =  'A new product'"}
{"question": "What is the number of students who are taking the course \"MATH-115A\"?", "query": "SELECT count(*)  FROM student_course_enrolment WHERE course_id  =  \"MATH-115A\""}
{"question": "Find which of the following companies has the highest number of employees", "query": "SELECT count(*) AS \"Total\" FROM employees WHERE company_name  =  \"Microsoft\""}
{"question": "Find the average length of each film", "query": "SELECT AVG(LENGTH(film_title)) FROM film"}
{"question": "What are the first and last names of all the directors who are also in the arts and humanities department?", "query": "SELECT DISTINCT T1.firstname,  T1.lastname FROM staff AS T1 JOIN department AS T2 ON T1.department_id  =  T2.department_id WHERE T2.department_code  =  'Arts and Humanities'"}
{"question": "What are the names, ages and number of children of customers with names containing (H,S), (T,Z)", "query": "SELECT T1.name,  T1.age,  T1.num_children FROM customer AS T1 WHERE T1.name LIKE '%H%' OR T1.name LIKE '%S%' OR T1.name  LIKE '%T%' OR T1.name like '%Z%'"}
{"question": "List the last names of people whose ages are between 18 and 30", "query": "SELECT T1.lastname FROM player AS T1 WHERE T1.age  >=  18 AND T1.age  <=  30"}
{"question": "How many students attend the courses?", "query": "SELECT count(*) AS count FROM students AS T1 JOIN courses AS T2 ON T1.student_id  =  T2.student_id"}
{"question": "What is the average number of working horses on farm with more than 5000 total horses?", "query": "SELECT AVG(total_horses) FROM farms WHERE total_horses  >  5000"}
{"question": "What is the average age of the students in 'Masonry' course?", "query": "SELECT avg(age) FROM Student WHERE course_code  =  \"Masonry\""}
{"question": "Find the names of all students who are registered as a regular student", "query": "SELECT T1.student_id,  T2.name FROM student AS T1 JOIN student_course_enrolment AS T2 ON T2.student_id  =  'T1.student_id' WHERE T1.status  =  'Regular'"}
{"question": "Find the number of students who live in the apartment complex that has the highest number of residents", "query": "SELECT T1.apartment_id,  T1.number_of_residents FROM Apartment_Bookings AS  T1 JOIN Apartment_Types AS T2 ON T1.apartment_type_id  =  T2.id WHERE T2.name  =  \"The Highlands\""}
{"question": "Show the names of the employees of a company who have the most hours of work per week", "query": "SELECT T1.firstname,  T1.lastname,  T1.job_title,  T1.hours_per_week FROM employee AS T1 GROUP BY T1.hours_per_week ORDER BY T1.hours_per-week DESC"}
{"question": "How many different sports are there for students of the school?", "query": "SELECT DISTINCTION T1.sport,  T1.student_id FROM student AS T1 JOIN sports AS T2 ON T1.sport  =  T2.sport GROUP BY T1.sport"}
{"question": "What are the first names and last names of the students who took Physics, Chemistry and Math?", "query": "SELECT T1.name FROM student AS T1 JOIN class_attends AS T2 ON T1.student_id  =  T2.student_id JOIN class_attends_subjects AS T3 ON T2.subject_id  =  T3.subject_id WHERE T3.subject_code  =  \"Physics\" AND T3.subject_code !=  \"Math\" AND T3.subject_name  =  \"Chemistry\""}
{"question": "What is the name and id of the person who is the supervisor of the two salesmen?", "query": "SELECT T1.id,  T1.name FROM employee AS T1 JOIN employee_supervisor AS T2 ON T1.id  =  T2.employee_id WHERE T2.employee_id  =  '2'"}
{"question": "How many states in the U", "query": "SELECT T1.state_name,  T1.state_population FROM state AS T1 WHERE T1.state_population  >  0"}
{"question": "Give the names of the cities of each competition, ordered by the number of cities", "query": "SELECT city FROM competitions ORDER BY count(*) DESC"}
{"question": "What are the different types of cars that have at least 500,000 sales", "query": "SELECT T1.type_name FROM car_type AS T1 JOIN car_type_description AS T2 ON T1.id  =  T2.type_id WHERE T2.description  =  '500,000 or more'"}
{"question": "What are the names and types of the languages of the books in the public library?", "query": "SELECT T1.language_name,  T2.language_type FROM books AS T1 JOIN languages AS T2 ON T1.book_id  =  T2.book_id"}
{"question": "Find the number of customers from Pennsylvania", "query": "SELECT count(*) AS count FROM customers WHERE state = \"PA\""}
{"question": "What is the name and id of the student who has made the most number of purchases?", "query": "SELECT T1.name,  T1.id FROM students AS T1 JOIN purchases AS T2 ON T1.student_id  =  T2.student_id WHERE T2.purchase_id  =  (SELECT purchase_id FROM purchases WHERE student_id  =  T1.student_id ORDER BY count(*)  DESC LIMIT 1)"}
{"question": "Show the names of each file in ascending order, starting with the most recent", "query": "SELECT T1.filename FROM file AS T1 WHERE T1.id  =  (SELECT max(id) FROM file)"}
{"question": "What are the names, locations and products of the enzymes which has the \"inhibitor\" interaction?", "query": "SELECT T1.enzyme_id,  T1.name,  T1.location,  T1.product_id FROM enzyme AS T1 WHERE T1.product_id  =  (SELECT T2.product_id FROM product AS T2 WHERE T2.name  =  \"inhibitor\")"}
{"question": "Please show the different statuses of students and the average age of students with each status", "query": "SELECT T1.status,  T1.student_id,  T2.age FROM student AS T1 JOIN status AS T2 ON T1.student_id  =  T2.student_id"}
{"question": "What are the names and types of the colleges where the greatest number of students are enrolled?", "query": "SELECT College,  type FROM college GROUP BY College HAVING count (type)  =  1"}
{"question": "Here is a new question", "query": "SELECT T1.question_id,  T1.question,  T1.answer,  T1.correct_answer,  T1.type,  T1.created_at,  T1.updated_at,  T1.user_id,  T1.answer_id,  T1.correct_ans_id,  T1.user_name,  T1.answer_name,  T1.correct_an_name,  T1.question_type,  T1.question_id_type,  T1.answer_type,"}
{"question": "What are the names with an average of 13 letters?", "query": "SELECT name FROM students WHERE avg(length(name))  =  13"}
{"question": "What is the average price of wines that are from California?", "query": "SELECT AVG(price) FROM wine WHERE city_code  =  'CA'"}
{"question": "What is the first name of the person who is the only owner of the company?", "query": "SELECT T1.first_name FROM Person AS T1 WHERE T1.owner_id  =  1"}
{"question": "Find the average number of customers in each airport", "query": "SELECT AVG(T2.customer_count) FROM Airport AS T1 JOIN Airport_Info AS T2 ON T1.Airport_ID  =  T2._id GROUP BY T1.Airport_ID"}
{"question": "What is the largest state in the country?", "query": "SELECT T1.state FROM states AS T1 WHERE T1.population  >  (SELECT MAX(T2.population) FROM states AS T2)"}
{"question": "Find the names of all the employees who have not worked in the past", "query": "SELECT T1.firstname,  T1.lastname FROM employee AS T1 WHERE T1.status  =  'active' AND T1.firstname  NOT IN ( SELECT T2.firstname FROM employee AS T2 WHERE T2.firstname  =  T1.firstname )"}
{"question": "How many distinct names are there in the database?", "query": "SELECT DISTINCTION(name) FROM students"}
{"question": "What are the ids [and names] of the architects who built two bridges (or one mill) in the year 2000?", "query": "SELECT T1.id,  T1.name FROM architects AS T1 JOIN buildings AS T2 ON T1.architect_id  =  T2.[id] WHERE T2.year  =  \"2000\""}
{"question": "What are the official names of cities whose population is less than 500?", "query": "SELECT city_code,  city_name FROM city WHERE population  <  500"}
{"question": "Find the names of all professors at San Jose State University", "query": "SELECT T1.name FROM professor AS T1 JOIN professor_department AS T2 ON T1.professor_id  =  T2.professor_id WHERE T2.department_code  =  \"CS\""}
{"question": "What are the rankings of cities that do not have a population of more than 500,000?", "query": "SELECT city,  rank FROM cities WHERE population  <  500000 ORDER BY rank"}
{"question": "What is the minimum number of players to have a team in a game of basketball?", "query": "SELECT min(count(*)),  min(count(distinct(player_id))) FROM basketball_team WHERE team_id  =  1"}
{"question": "What are the names and ids of the accounts that have a negative balance?", "query": "SELECT T1.id,  T2.name FROM Accounts AS T1 JOIN Accounts_Balances AS T2 ON T1.id  = T2.id WHERE T2.balance  <  0"}
{"question": "How many students are attending college courses at the time?", "query": "SELECT T1.student_id FROM Student_Enrollment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.id WHERE T2.status  =  'College'"}
{"question": "What is the average temperature of the ocean in the first half of the year?", "query": "SELECT AVG(temp) FROM ocean WHERE month  =  'Jan' AND year  =  '2000'"}
{"question": "What are the names, id, and addresses of the students of the college with the highest average height?", "query": "SELECT T1.name,  T1.id,  T1.address FROM student AS T1 JOIN student_info AS T2 ON T1.id  =  T2.id WHERE T2.height_in_cm  >  (SELECT avg (height_in_cm) FROM student)"}
{"question": "What are the names, titles, and id of all students who have ever been in a relationship with a teacher?", "query": "SELECT name FROM student AS T1 JOIN teacher AS T2 ON T1.student_id  =  T2.student_id WHERE T2.name  =  \"John Doe\""}
{"question": "What is the total number of employees with the last name \"Terry\"?", "query": "SELECT T1.last_name,  T1.first_name,  T1.id,  T1.* FROM employee AS T1 WHERE T1.last_name  =  \"Terry\""}
{"question": "What are the names and ids of all the students with phone numbers beginning with the string \"212\"?", "query": "SELECT student_id,  T1.phone_number FROM students AS T1 WHERE T1.phone_number LIKE \"212%\""}
{"question": "What is the average grade for students who passed the exam?", "query": "SELECT AVG(grade) FROM student WHERE exam_id  =  \"1\""}
{"question": "What is the name and location of the store with the highest market share for the year of 2006?", "query": "SELECT T1.store_name,  T2.store_location FROM store_sales AS T1 JOIN store_returns AS T2 ON T1.store_id  =  T2.store_id WHERE T1.year  =  2006 AND T2.store_id  =  1"}
{"question": "Find the total number of students", "query": "SELECT count(*) AS total_number_of_students FROM students"}
{"question": "How many customers have the following orders: (a) a total purchase of $25 and (b) a total purchase of $50?", "query": "SELECT T1.order_id,  T1.total_price FROM orders AS T1 WHERE T1.total_price  =  25 OR T1.total_price  >  50"}
{"question": "What are the names, last names and ids of the customers who have ordered at least one product?", "query": "SELECT T1.customer_id,  T1.customer_name,  T1.customer_last_name,  T1.id FROM customer AS T1 WHERE EXISTS (SELECT T2.customer_id FROM order AS T2 WHERE T2.customer_id = T1.id)"}
{"question": "What's the name of the course that has the most students?", "query": "SELECT T1.name FROM course AS T1 JOIN student AS T2 ON T1.course_id  =  T2.course_id WHERE T2.student_id  =  ( SELECT T3.student_id FROM student AS T3 WHERE T3.course_id  =  ( SELECT course_id FROM course WHERE name = \"course1\") )"}
{"question": "What is the average grade of the students who live in the city \"Los Angeles\"?", "query": "SELECT T1.avg_grade FROM students AS T1 JOIN city AS T2 ON T1.city_id  =  T2.city_id WHERE T2.name  =  \"Los Angeles\""}
{"question": "How many people have a car, and a car registration number in your area?", "query": "SELECT T1.city_code,  T1.name_first,  count(*) FROM city AS T1 JOIN car AS T2 ON T1.city_code  =  T2.city_code JOIN car_registration AS T3 ON T1.city_code = T3.city_code GROUP BY T1.city_code ORDER BY count(*) DESC;"}
{"question": "What is the id of the employee who has the highest number of tasks?", "query": "SELECT T1.employee_id FROM employee AS T1 JOIN task AS T2 ON T1.employee_id  =  T2.employee_id WHERE T2.task_id  =  1"}
{"question": "(a novel question, about a new table) What are the names of the doctors who have been working in the hospital since 2013?", "query": "SELECT doctor_name FROM doctors WHERE doctor_date_of_birth  >  2013"}
{"question": "What is the average number of students who have a major in the subject of Math?", "query": "SELECT AVG(T1.student_id) FROM student AS T1 JOIN subject AS T2 ON T1.major_id  =  T2.id WHERE T2.name  =  'Math'"}
{"question": "What is the name and address of the person who has no siblings or children?", "query": "SELECT T1.person_name,  T2.address FROM Person AS T1 JOIN Person_Siblings AS T2 ON T1.person_id  =  T2.person_id WHERE T2.sibling_id  =  0"}
{"question": "What are the names and ids of the customers who have a loan?", "query": "SELECT customer_id,  name FROM customers WHERE loan_status  =  \"Y\""}
{"question": "How many customers work in the same office as the employee called \"Tammy Jackson\"?", "query": "SELECT T1.customer_id FROM customers AS T1 JOIN employees AS T2 ON T1.employee_id  =  T2.id WHERE T2.first_name  =  \"Tammy\" AND T2.last_name  =  \"Jackson\""}
{"question": "Find the names of all movies with a rating of at least 7", "query": "SELECT T1.title FROM movie AS T1 WHERE T1.rating  >  7"}
{"question": "What are the names, location and products of the enzymes that have any 'inhibitor' interaction? (Find the ids of the enzymes)", "query": "SELECT T1.enzyme_id,  T1.enzyme_name,  T1.product_id,  T1.product_name,  T1.interaction_id,  T1.interaction"}
{"question": "What is the name, department, and location of the company that has the highest number of employees?", "query": "SELECT name,  department,  location FROM company WHERE num_employees  =  \"highest number of employees\""}
{"question": "What is the name and id of the person who has the second highest course attendance?", "query": "SELECT T1.student_id,  T1.name_first,  count(*) FROM student AS T1 JOIN attendance AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*)  DESC LIMIT 1"}
{"question": "What are the names and ids of the students who have taken the course \"Statistics of Sports\"?", "query": "SELECT T1.name,  T1.\"id\" FROM student AS T1 JOIN course AS T2 ON T1.stu_id  =  T2.\"id\" WHERE T2.name  =  \"Statistics of Sports\""}
{"question": "Find the name of the doctor who has patients with their age less than 40", "query": "SELECT doctor_name,  patient_age FROM doctor WHERE patient_age  <  40"}
{"question": "What are the names and the average ages of all the employees with the last name Smith", "query": "SELECT T1.last_name,  T1.age FROM employee AS T1 JOIN employee AS T2 ON T1.id  =  T2.employee_id WHERE T2.last_name  =  \"Smith\""}
{"question": "which course has the lowest course_id?", "query": "SELECT T1.course_id FROM course AS T1 WHERE T1.course_id  =  (SELECT MIN(course_id) FROM course)"}
{"question": "List the names of the company that makes the top 3 most popular models of cars in each year", "query": "SELECT name FROM car_model WHERE year  =  \"2016\" ORDER BY count(*) DESC"}
{"question": "What is the maximum age of a male mountain climber?", "query": "SELECT MAX(age) FROM mountain_climbers WHERE gender_code  =  \"M\""}
{"question": "A:\n\nPerl 6, 67 bytes", "query": "say \""}
{"question": "(a novel question, about a U", "query": "SELECT T1.name,  T2.name FROM students AS T1 JOIN teachers AS T2 ON T1.teacher_id  =  T2.id WHERE T1.name  =  \"Alice\" AND T2.name  =  \"Bob\""}
{"question": "What is the name, date and time of birth for each employee?", "query": "SELECT T1.name,  T1.date_of_birth,  T1.time_of_birth FROM employees AS T1"}
{"question": "Find the number of students who have taken 'Math I'", "query": "SELECT COUNT(*) FROM student_course WHERE course_code  =  \"Math I\""}
{"question": "Find the student's age and whether the student is enrolled in the \"CS\" or \"HIS\" section", "query": "SELECT T1.student_id,  T1.first_name,  T1.last_name,  T1.gender,  T1.age,  T1.enrollment_status FROM student AS T1 WHERE T1.first_name  =  \"John\" AND T1.last_name  =  \"Doe\""}
{"question": "Show the names of all persons who have a gpa above the average of all students?", "query": "SELECT T1.name FROM students AS T1 JOIN (SELECT AVG(gpa) AS avg_gpa FROM students) AS T2 ON T1.gpa  >  T2.avg_gpa GROUP BY T1.name"}
{"question": "What are the names (using either first or last name) of the employees who work in the department with the most employees?", "query": "SELECT T1.name FROM employee AS T1 JOIN department AS T3 ON T1.department_id  =  T3.id WHERE T3.department_name  =  'Department of Finance'"}
{"question": "List the first names of people in the same order", "query": "SELECT T1.first_name FROM Person AS T1 JOIN person_friend AS T2 ON T1.first_name  =  T2.first_name WHERE T2.friend  ='Bob'"}
{"question": "What are the names, birthdays, and first names of all the students in the university?", "query": "SELECT Student_ID,  First_Name,  Last_Name,  Birthday,  Gender,  Major,  Year,  Degree,  Major_Code,  Minor,  Minor_Code,  Major_Code_Description,  Minor_Code_Description,  Major_Code_Description_Description,  Minor_code_Description_Description,  Major_Code,  Major_Code2,  Minor,  MinOr_Code,  Minor_Code,"}
{"question": "What are the id of students who attended courses?", "query": "SELECT T1.student_id FROM Student_Courses AS T1 JOIN Courses AS T2 ON T1.course_id  =  T2.course_id WHERE T2.course_code  =  \"CSCI101\""}
{"question": "what are the names of the people who are under 18 years old?", "query": "SELECT T1.firstname,  T1.lastname FROM people AS T1 WHERE T1.age  <  18"}
{"question": "What are the names at the end of the songs which were not released before 2000?", "query": "SELECT T1.name FROM song AS T1 JOIN release_date AS T2 ON T1.song_id  =  T2.song_id WHERE T2.year  >  2000"}
{"question": "What are the names, scores and ids of the students who are in \"Mathematics\" and \"Mathematics II\"?", "query": "SELECT T1.name,  T1.score,  T1.id FROM student AS T1 JOIN course AS T2 ON T1.student_id  =  T2.student_id JOIN class AS T3 ON T2.course_id  =  T3.course_id JOIN class_room AS T4 ON T3.class_id  =  T4.class_id JOIN class_room_student AS T5 ON T4.class_room_id  =  T5.class_room_id WHERE T1.course_id  =  \"M"}
{"question": "What are the total number of employees of the company that has the most employees?", "query": "SELECT COUNT(*) FROM employee"}
{"question": "What are all the names of the customers who have bought something from the \"Coffee Shop\"?", "query": "SELECT T1.name FROM customer AS T1 JOIN order AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.product_id  =  \"Coffee\""}
{"question": "Find the names of all the singers who have a vocal range of B3 and higher", "query": "SELECT name FROM singers WHERE vocal_range  =  \"B3\" AND vocal_range  >  \"B3\""}
{"question": "(Find the numbers of students who attended the conference by state of residence)", "query": "SELECT count(*) AS cnt FROM conference_attendees WHERE state_of_residence = 'CA'"}
{"question": "Find the position and age of each student", "query": "SELECT T1.position,  T2.age FROM Student AS T1 JOIN Student_Course AS T2 ON T1.id  = T2.student_id"}
{"question": "What are the names and addresses of all the customers with the most number of accounts?", "query": "SELECT customer_details,  customer_id FROM Customer_Policies AS T1 JOIN Customer_Purchases AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY customer_id HAVING count(distinct(customer_id))  =  1"}
{"question": "List the number of movies with a title that contains the letter a", "query": "SELECT COUNT(*) FROM movies WHERE title LIKE '%a%'"}
{"question": "\"What is the total number of employees who work for this company?\"", "query": "SELECT T1.employee_id,  T1.first_name,  T1.last_name,  T1.title,  T1.salary,  T1.department_id,  T1.office_id,  T1.phone_number,  T1.email,  T1.address_id,  T1.city,  T1.state_code,  T1.country,  T1._id,  T1.created_at,  T1.updated_at FROM employee AS T1 WHERE T1.company_"}
{"question": "Find all the employees who are assigned to the project with fewest hours", "query": "SELECT T1.emp_id,  T1.emp_name,  T1.emp_dept,  T1.emp_salary,  T1.emp_hours,  T1.emp_assigned_to,  T1.emp_project_id,  T1.project_name,  T1.project_description,  T1.project_manager,  T1.project_start_date,  T1.project_end_date,  T1.emp_start_date,  T2.project_id,  T2"}
{"question": "What are the names, in order of frequency, of the ten most abundant elements on Earth?", "query": "SELECT name FROM elements WHERE count(*)  >  10"}
{"question": "(a novel question, about a table of your choice), after \"", "query": "Examples of some or all task item:"}
{"question": "Show the names of all the wines with a price higher than a price of any wine from any other wine", "query": "SELECT T1.name FROM wine AS T1 WHERE T1.price  >  ( SELECT T2.price FROM wine AS T2 WHERE T2.winery  =  \"Brander\" )"}
{"question": "How old is the oldest student in the department?", "query": "SELECT T1.name,  T1.age FROM students AS T1 WHERE T1.department_id  =  '1' AND T1.age  >  (SELECT min(T2.age) FROM students AS T2 WHERE T2.department_id  = '1')"}
{"question": "What is the name/number of the customer who has the most accounts?", "query": "SELECT T1.name,  T1.account_count FROM customer AS T1 JOIN account AS T2 ON T1.id  =  T2.customer_id WHERE T2.account_count  =  (SELECT max(account_count) FROM customer)"}
{"question": "What is the age of all the employees?", "query": "SELECT T1.age FROM Employees AS T1"}
{"question": "What is the age of the student who is not in the college of \"Hannah Huckabee\"?", "query": "SELECT T1.age FROM students AS T1 WHERE T1.name  =  \"Hannah Huckabee\" AND T1.age  <  20"}
{"question": "What is the name, age, and gender of the student with the most grade A's?", "query": "SELECT T1.Name,  T1.Age,  T1.Gender FROM Student AS T1 WHERE T1.Grade  =  'A' ORDER BY T1.Grade DESC LIMIT 1"}
{"question": "How many students have been taught by OTHA MOYERS?", "query": "SELECT COUNT(*),  student_id FROM student_teacher_relationship AS T1 JOIN student AS T2 ON T1.Student_ID  =  T2._id WHERE T1.teacher_id  =  'OTHAMOYERS'"}
{"question": "What are the names, locations, and ratings of all movies that have at least one actor with last name \"Ferris\"?", "query": "SELECT T1.name,  T1.location,  T1.rating FROM movie AS T1 JOIN actor AS T2 ON T1.movie_id  =  T2.movie_id WHERE T2.last_name  =  \"Ferris\""}
{"question": "Find the names of staff with first name as 'Kirsty' and last name as 'Dowling' who are in the age group of 50-", "query": "SELECT T1.First_Name,  T1.Last_Name,  T1.Age_Group FROM staff AS T1 JOIN staff_info AS T2 ON T1.staff_id  =  T2.[staff_id] WHERE T2.First_Name  =  \"Kirsty\" AND T2.Last_Name  =  \"Dowling\" AND T2.Age_Group  =  \"50-\";"}
{"question": "Find the name and id of the student who is the first in his class to go to the US", "query": "SELECT T1.name,  T1.id FROM student AS T1 JOIN class_attendance AS T2 ON T1.stu_id  =  T2.stu_id WHERE T2.class_id  =  1 AND T2.attendance_type  =  '1'"}
{"question": "How many students have carpal tunnel syndrome?", "query": "SELECT T2.diagnosis_code,  T2.name FROM students AS T1 JOIN students_medical_history AS T2 ON T1.id  =  T2.id WHERE T2.name  = \"carpal_tunnel_syndrome\""}
{"question": "What is the average height of the male students at that grade?", "query": "SELECT AVG(height) FROM student WHERE grade  =  \"A\""}
{"question": "What is the name and year of the first woman to win a tennis world cup?", "query": "SELECT T1.first_name,  T1.last_name,  T1.year FROM players AS T1 WHERE T1.name  = \"Billie Jean King\""}
{"question": "What are the name of the cities of the states of Florida and Wyoming?", "query": "SELECT city FROM cities WHERE state  =  \"Florida\" AND city  =  \"Tampa\" OR city  =  \"Orlando\" OR city  =  \"Jacksonville\" OR city  =  \"Miami\" OR city  =  \"Pensacola\" OR city  =  \"Tallahassee\" OR city  =  \"St. Petersburg\" OR city  =  \"Gainesville\" OR city  =  NULL"}
{"question": "What is the number on the largest number of students in the class?", "query": "SELECT T1.student_id FROM Student_Enrollments AS T1 JOIN students AS T2 ON T1.student_id  =  T2.student_id WHERE T2.id  =  (SELECT max(student_id) FROM Student_Enrollments)"}
{"question": "What is the name and id of the student with the lowest average scores?", "query": "SELECT T1.student_name,  T1.student_id FROM student AS T1 WHERE T1.average_score  =  (SELECT MIN(T2.average_score) FROM student AS T2)"}
{"question": "How many students are there in all of the majors?", "query": "SELECT count(*) AS total FROM student"}
{"question": "What are the names, dates, and scores of all performances in the year of 2002?", "query": "SELECT name,  date,  score FROM performance WHERE date  =  \"2002\""}
{"question": "What is the number and the number of seats of the airplane with the following details?", "query": "SELECT T1.number,  T1.number_seats FROM airplane AS T1 WHERE T1.number  =  'A380'"}
{"question": "What are the ids for the employees who have participated in at least one activity?", "query": "SELECT T1.employee_id FROM employee AS T1 JOIN activity AS T2 ON T1.employee_id  =  T2.employee_id WHERE T2.participated  =  'Y'"}
{"question": "What are the names (first and last) of the employees of department 3, 4, and 5?", "query": "SELECT first_name,  last_name FROM employees WHERE department_id IN (3, 4, 5)"}
{"question": "What is the average price of beers that are not from California?", "query": "SELECT AVG(price) FROM beer WHERE city_code  =  'CA' AND state_code  =  'CA';"}
{"question": "What is the difference between the two rows in the following table?", "query": "SELECT T1.id,  T1.name,  T1.age,  T1.gender,  T1.height,  T1.weight,  T1.address_id,  T1.city_id,  T1.state_province_id,  T1.country_id,  T1.zip_code,  T1.phone_number,  T1.email_address,  T1.birth_date,  T1.birth_place,  T1.marital_status,  T1.education_level,"}
{"question": "What is the id of the employee with first name \"Erika\" and last name \"Lopez\", and job title \"Assistant to the Manager of Account", "query": "SELECT T1.id,  T1.first_name,  T1.last_name,  T1.job_title,  T1.salary,  T1.manager_id,  T1.manager_name,  T1.manager_phone,  T1.manager_email,  T1.manager_office,  T1.manager_fax,  T1.manager_cell,  T1.manager_address,  T1.manager_city,  T1.manager_state,  T1.manager_zip,  T1"}
{"question": "What is the name of the hotel with the most beds, and the name of the city it is located in?", "query": "SELECT hotel_id ,  city_name FROM HOTELS WHERE hotel_id  =  (SELECT max(hotel_id) FROM HOTELS)"}
{"question": "What are the names, numbers and ages of the students in the class at the University of Pittsburgh?", "query": "SELECT name,  number,  age FROM students WHERE university_id = 'Pitt'"}
{"question": "What are the names and ids of the students who have at least one sibling? List the student ids", "query": "SELECT T1.student_id FROM student AS T1 JOIN student AS T2 ON T1.parent_id  =  T2.student_id WHERE T2.student_id  =  T1.student_id GROUP BY T1.student_id HAVING count(T1.student_id)  >=  1"}
{"question": "What are the names and ages of all students in the class of 2014?", "query": "SELECT T1.name,  T1.age FROM student AS T1"}
{"question": "How many countries do not have any cities?", "query": "SELECT T1.country_id,  T2.country_name,  T3.country_code FROM countries AS T1 JOIN cities AS T2 ON T1.country_id  =  T2.country_id  AND T2.country_id  =  0"}
{"question": "What is the average price of all wines?", "query": "SELECT avg(price) FROM wine"}
{"question": "What is the name and age of the player who joined the team in 2016?", "query": "SELECT T1.name,  T1.age FROM players AS T1 WHERE T1.year  =  2016"}
{"question": "How many students are in a particular class?", "query": "SELECT T1.student_id,  T1.student_name,  T1.student_major,  T1.student_class FROM student AS T1 WHERE T1.student_class  =  \"MATH\""}
{"question": "What are the first 10 letters of the name of the city with the most restaurants?", "query": "SELECT T1.city_name,  T2.name FROM city AS T1 JOIN restaurant AS T2 ON T1.city_id  =  T2.city_id WHERE T1.city_name  LIKE '%[a-z]%' ORDER BY T1.city_name LIMIT 10"}
{"question": "What are the names, order by id, of all customers who bought \"food\" at least once? (novel question)", "query": "SELECT T1.name FROM customer AS T1 JOIN order_item AS T2 ON T1.Customer_ID  =  T2.Customer_ID WHERE T2.item_name  =  \"food\" AND T2.quantity  >  0"}
{"question": "What are the names, addresses, and phone numbers for all the people who are not friends with the student named John Smith?", "query": "SELECT name,  address,  phone FROM people WHERE name !=  \"John Smith\""}
{"question": "What are the names and descriptions of courses that belongs to the subject named \"Computer Science\"?", "query": "SELECT T1.course_name,  T1.course_description FROM course AS T1 WHERE T1.subject_id  =  \"Computer Science\""}
{"question": "What are the names (first and last) of the people who were interviewed by the reporter?", "query": "SELECT T1.first_name,  T1.last_name FROM interviewee AS T1 JOIN interviewee_details AS T2 ON T1.interviewee_id  =  T2.interviewee_id WHERE T2.reporter_id  =  \"1\""}
{"question": "What are the names, locations, and start and end dates of the trips that took place in a zip code with average mean temperature above 60?", "query": "SELECT T1.name,  T1.location,  T1.start_date,  T1.end_date,  T1.mean_temp FROM trips AS T1 WHERE T1.zip  =  \"12345\" AND T1.mean_temp  >  60"}
{"question": "What is the total number of students in the state of \"Ohio\"?", "query": "SELECT count(*) AS total_students FROM student WHERE state_code  =  \"Ohio\""}
{"question": "What is the total number of customers?", "query": "SELECT count(*) AS total FROM customers"}
{"question": "What is the total amount of the invoices with the same customer name?", "query": "SELECT sum(invoice_amount) FROM invoice WHERE customer_name = \"John Smith\""}
{"question": "Show the name of the employee who is working in the division named \"Accounting\"", "query": "SELECT T1.first_name,  T1.last_name,  T1.department_code,  T1.division_code,  T1.position_code,  T1.job_title,  T1.salary,  T1.start_date,  T1.end_date,  T1.office_number,  T1.phone_number,  T1.email,  T1.office_address,  T1.home_address,  T1.cell_phone,  T1.cell_fax,  T"}
{"question": "How many people are from India, and what are their names?", "query": "SELECT T1.name FROM people AS T1 WHERE T1.country  =  'India'"}
{"question": "For each student, find the program in which he/she is enrolled", "query": "SELECT T1.program_name FROM student AS T1 JOIN program AS T2 ON T1.program_id  =  T2"}
{"question": "What are the names, genders and ages of all the students enrolled in the class of 2008?", "query": "SELECT T1.name,  T1.gender,  T1.age FROM students AS T1 WHERE T1.class_id  =  2008"}
{"question": "What are the first 20 numbers in the Fibonacci sequence?", "query": "SELECT F1.n,  F2.n FROM FIBONACCI AS F1 JOIN FIBONACCI AS F2 ON F1.n  =  F2.n - 1 WHERE F1.n  <  20"}
{"question": "How many trips have at least three stops?", "query": "SELECT T1.trip_id,  T1.trip_name,  T1.trip_start_time,  T1.trip_end_time,  T1.start_location,  T1.end_location,  T1.trip_type,  T1.trip_duration,  T1.trip_distance,  T1.trip_price,  T1.trip_notes,  T1.trip_id,  ( SELECT T2.trip_id FROM trip_details AS T2 WHERE T2.trip_id  =  T1"}
{"question": "Find the name of all people in this group", "query": "SELECT name FROM Person"}
{"question": "find the names of all students that have completed at least 2 semesters", "query": "SELECT T1.student_id,  T2.name FROM students AS T1 JOIN student_course_enrolment AS T2 ON T2.student_id  =  'T1.student_id' WHERE T2.semester_id  =  'T2.semester_id' AND T2.semester_id > 2"}
{"question": "How many times has it been raining?", "query": "SELECT count(*)  FROM weather WHERE date(date) =  \"2016-01-01\""}
{"question": "What are the titles and the composers of the songs with the following letters: m-o-t?", "query": "SELECT T1.title,  T1.composer FROM songs AS T1 WHERE T1.title  LIKE  \"m-o-t\""}
{"question": "What is the name and address of the store with the largest number of employees?", "query": "SELECT T1.store_name,  T1.store_address FROM store AS T1 JOIN employee AS T2 ON T1.store_id  =  T2.store_id WHERE T2.employee_id  =  (SELECT MAX(employee_id) FROM employee)"}
{"question": "What are the first and last names of the people with the highest average salary?", "query": "SELECT T1.first_name,  T1.last_name FROM employee AS T1 JOIN salary_range AS T2 ON T1.id  =  T2.id WHERE T2.average  =  (SELECT AVG(salary) FROM employee)"}
{"question": "What are the names, addresses, and emails of the customers who bought the \"T-shirt\" with code \"T\" and \"shirt\" with code \"", "query": "SELECT T1.name,  T1.address,  T1.email FROM customer AS T1 WHERE T1.code  =  \"T\" AND T1.code  = 'shirt'"}
{"question": "What are the names, id's and scores of the customers in the table?", "query": "SELECT T1.id,  T1.name,  T1.[score] FROM customers AS T1"}
{"question": "What is the name, postal code, and country of the city that has the largest population?", "query": "SELECT T1.name,  T1.\"postal code\",  T1.country FROM city AS T1 WHERE T1.population  >  (SELECT max(T2.population) FROM city AS T2)"}
{"question": "What are the times used by climbers to reach the summit of mountains in Country Uganda?", "query": "SELECT T1.time_used,  T2.country_name FROM mountains AS T1 JOIN climbers AS T2 ON T1.mountain_id  =  T2._id WHERE T1.country_name  =  \"Uganda\" AND T2.country_name  =  'Uganda' AND T1.time_used  >  '00:00:00' AND T1.time_allowed  >  '00:00'"}
{"question": "What is the average temperature of the days with the 10 largest maximum gust speeds?", "query": "SELECT avg(max_gust) FROM weather_data WHERE date  =  \"2001-01-01\" AND max_gust  >  10"}
{"question": "Find the most common first name in the database", "query": "SELECT T1.first_name FROM Person AS T1 WHERE T1.first_name  =  (SELECT T2.first_name FROM Person AS P2 WHERE P2.first_name  =  T1.first_name ORDER BY T2.first_name DESC LIMIT 1)"}
{"question": "What is the first and last names of all the teachers in the University of Texas", "query": "SELECT T1.first_name,  T1.last_name FROM teacher AS T1 WHERE T1.teacher_id  =  (SELECT T2.teacher_id FROM teacher AS T2 WHERE T2.teacher_id  = T1.teacher_id LIMIT 1)"}
{"question": "What are the numbers associated with the first three characters in the string \"Mozart\"?", "query": "SELECT T1.column_name FROM table_name AS T1 WHERE T1.column_name LIKE \"M%\";"}
{"question": "What is the average price of homes in Seattle?", "query": "SELECT AVG(price) FROM HOUSES WHERE city = \"Seattle\""}
{"question": "What are the ids and names of the students who have not taken any courses with the name \"Data Structures\"?", "query": "SELECT T1.student_id,  T1.name FROM students AS T1 JOIN course AS T2 ON T1.course_id  =  T2._id WHERE T2.name  =  \"Data Structures\""}
{"question": "List the names of students who have taken at least one class in the winter term", "query": "SELECT T1.name FROM students AS T1 JOIN class AS T2 ON T1.student_id  =  T2.student_id WHERE T2.term_id  =  \"winter\""}
{"question": "Return the details of the student known as MADLOCK RAY", "query": "SELECT * FROM student WHERE name_last  =  \"MADLOCK\""}
{"question": "Find all the titles of all movies not reviewed in the year of 2000 by any critic", "query": "SELECT T1.title FROM Movie AS T1 WHERE T1.year  >  2000 AND T1.reviewer  =  \"\""}
{"question": "Who is the highest paid actor in Hollywood?", "query": "SELECT T1.name,  T2.salary FROM actors AS T1 JOIN actors_salary AS T2 ON T1.id  =  T2.actor_id WHERE T1.name  =  \"Tom Cruise\""}
{"question": "List the first name and last name of all professors", "query": "SELECT T1.name FROM professor AS T1 JOIN faculty AS T2 ON T1.id  =  T2.prof_id"}
{"question": "what are the id and name of the employees who work in the customer service department?", "query": "SELECT T1.id,  T1.name FROM employees AS T1 JOIN customer_service AS T2 ON T1.id  = T2.employee_id"}
{"question": "what is the first name of the person who worked on the first program", "query": "SELECT first_name FROM person WHERE person_id  =  (SELECT person_id FROM person WHERE name  =  \"Alice\")"}
{"question": "What is the name and the first name of the oldest employee of the company?", "query": "SELECT T1.name,  T1.first_name FROM employees AS T1 WHERE T1.age  =  (SELECT MAX(T2.age) FROM employees AS T2)"}
{"question": "Find the names of all products with height greater than 5", "query": "SELECT T1.product_name,  T1.product_height FROM product AS T1 WHERE T1.product_height  >  5"}
{"question": "What are the names or the courses with the most number of students enrolled at the university of Phoenix?", "query": "SELECT T1.course_id,  T1.name FROM course AS T1 WHERE T1.enrollment  >  (SELECT T2.enrollment FROM course AS T2 WHERE T2.name  =  'Univ. of Phoenix')"}
{"question": "Which employee has the lowest salary, and whose salary is the lowest in the entire company?", "query": "SELECT T1.employeeid,  T1.salary,  T2.employeeid,  T2.salary FROM employees AS T1 JOIN employees AS T2 ON T1.manager_id  =  T2.employeeid WHERE T1.employeeid  = (SELECT MIN(employeeid) FROM employees) AND T2.employeeid  = (SELECT MAX(employeeid) FROM employees)"}
{"question": "Find the name and address of the customer who has at least 1 property by the name of \"Prestige\"", "query": "SELECT T1.address_id,  T2.name_first,  T2.name_last,  T2.address_id FROM customer AS T1 JOIN customer_address AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.name_first  =  'P' AND T1.name_last  =  'E' AND T1.address_id !=  0"}
{"question": "What are the names, id, and birth dates of all the students in the course ACCT", "query": "SELECT T1.name,  T1.\"id\",  T1.birth_date FROM student AS T1 WHERE T1.course_id  =  \"ACCT\""}
{"question": "What are the names in the database of the people who have an average credit score lower than 4", "query": "SELECT name FROM people WHERE credit_score < 4"}
{"question": "What are the names, location and age of the children of the parents of the man who has the highest average age?", "query": "SELECT T1.name,  T1.location,  T1.age FROM child AS T1 JOIN parent AS T2 ON T1.parent_id  =  T2.id WHERE T2.age  =  (SELECT max(T3.age) FROM parent AS T3 WHERE T3.parent_id  =  (SELECT parent_id FROM child AS T4 WHERE T4.parent_id  =  'T1.id'))"}
{"question": "Return the names of the companies where Jian Zhang works", "query": "SELECT T1.company_name FROM employees AS T1 JOIN company AS T2 ON T1.company_id  =  T2.\"company_id\" WHERE T1.name  = \"Jian Zhang\""}
{"question": "What are the first and last names of the employees who worked in the same office as \"Pamela\" when she was employed there?", "query": "SELECT T1.first_name,  T1.last_name FROM employee AS T1 WHERE T1.office_id  =  \"Pamela\""}
{"question": "How many employees in the company are men?", "query": "SELECT T1.employee_id FROM employees AS T1 WHERE T1.gender_code  =  'M'"}
{"question": "What are the names, birthdate and major of students whose average GPA is 3", "query": "SELECT T1.fname,  T1.lname,  T1.birthdate,  T1.major,  T1.gpa FROM student AS T1 WHERE T1.gpa  =  3"}
{"question": "What is the name and id of the student with highest score in sports in the class", "query": "SELECT T1.name,  T1.id FROM student AS T1 JOIN student_scores AS T2 ON T1.id  =  T2.id WHERE T2.score  =  (SELECT max(score) FROM student_scores)"}
{"question": "What is the median age of the people I know?", "query": "SELECT T1.age FROM people AS T1 WHERE T1.age  >  0.5 AND T1.age  <  100"}
{"question": "What are the names and amounts of all transactions that have a payment type of debit?", "query": "SELECT T1.amount,  T1.name,  T1.[payment_type] FROM transactions AS T1 WHERE T1.payment_type  =  'debit'"}
{"question": "What are the ids, ids, and ids of the authors of all the books in the database?", "query": "SELECT T1.author_id,  T1.author_id,  t1.author_id FROM author AS T1 JOIN book AS t1 ON T1.author_id  =  t1.author_id"}
{"question": "What is the name and the year of the person who created the first computer language that was used in the USA?", "query": "SELECT name,  year FROM person WHERE country  =  'United Kingdom' AND language  =  'C'"}
{"question": "What are the ages of the users in the database of data", "query": "SELECT T1.age FROM user AS T1 WHERE T1.id  =  \"1\""}
{"question": "What are the names and numbers of all employees?", "query": "SELECT T1.first_name,  T1.last_name,  T1.id FROM employees AS T1 WHERE T1.id  IN (SELECT T2.id FROM employees AS T2 WHERE T2.last_name  =  'Smith')"}
{"question": "Find the average points of customers from club with name \"AIB\"", "query": "SELECT avg(points) FROM customer WHERE club_name  =  \"AIB\""}
{"question": "List the names of all the customers who do not have any policies", "query": "SELECT T1.customer_first_name, T1.customer_last_name, T1.customer.customer_phone FROM customers AS T1 JOIN customers_policies AS T2 ON T1.Customer_ID  =  T2.Customer_ID WHERE T2.policy_id  =  \"null\""}
{"question": "What is the population of the county that has the most number of people attending a church?", "query": "SELECT T1.town_city FROM town_state AS T1 JOIN county AS T2 ON T1.town_id  =  T2.town_id WHERE T2.population  >  (SELECT T3.town_city FROM town_city AS T3 WHERE T3.town_id  =  '1' AND T3.state_code  =  'CA' AND T3.city_code  =  'LA' LIMIT 1)"}
{"question": "What are the names from the table of students?", "query": "SELECT T1.first_name,  T1.last_name FROM student AS T1"}
{"question": "Find the names of cities and their populations", "query": "SELECT city_name,  population FROM cities"}
{"question": "How many students are enrolled in the \"Computer Science\" department?", "query": "SELECT count(*)  FROM student WHERE department = 'Computer Science'"}
{"question": "Find the titles of the movies that are rated below 'R' in the year 2001", "query": "SELECT T1.title FROM Movie AS T1 WHERE T1.rating  <  'R' AND T1.year  >  2001"}
{"question": "What are the names? Return a list of names of students who have a major in Business", "query": "SELECT DISTINCT T1.name FROM Student AS T1 JOIN Student_Course AS T2 ON T1.Student_id  =  T2._id WHERE T2.course_name  =  \"Business\""}
{"question": "Who is the person who is the oldest? The question is not about the oldest person in the database but about the oldest person in a set of records in a", "query": "SELECT T1.name FROM person AS T1 WHERE T1.age  =  (SELECT max(T2.age) FROM person AS T2 WHERE T2.id  =  T1.ID)"}
{"question": "I am a customer and I would like to know the name of the products from the store that are on sale", "query": "SELECT T1.product_name,  T2.price FROM products AS T1 JOIN products_on_sale AS T2 ON T1.product_id  =  T2.product_id WHERE T1.price  <  (SELECT AVG(price) FROM products)"}
{"question": "What are the names and birth dates of all the students in the university?", "query": "SELECT T1.student_name,  T1.birth_date FROM students AS T1 JOIN student_info AS T2 ON T1.student_id  =  T2.student_id WHERE T1.student_id  IN (SELECT student_id FROM student_info WHERE student_id  IN (SELECT studentid FROM students WHERE student_name  =  \"John Smith\" OR student_name  =  \"Jane Doe\" OR student_name  =   \"John Smith\" OR student_id  =  \"John Smith\" ) )"}
{"question": "What are the names in the order of their age, from oldest to youngest?", "query": "SELECT T1.name FROM people AS T1 JOIN people AS T3 ON T1.age  =  T3.age ORDER BY T1.name ASC"}
{"question": "Find the names of all the cities where the maximum temperature is below 10 degrees", "query": "SELECT T1.city_name,  T1.max_temp FROM weather AS T1 WHERE T1.max_temp  >  10"}
{"question": "For the building with the highest height, what are the names and job titles of the people who are not teachers?", "query": "SELECT T1.name,  T2.job_title FROM building AS T1 JOIN people AS T2 ON T1.building_id  =  T2._id WHERE T1.height  >  (SELECT max(height) FROM building)"}
{"question": "What is the name + address of the restaurant with id 1234?", "query": "SELECT name,  address FROM restaurant WHERE id  =  1234"}
{"question": "Show the data of all the orders of the customer \"Bruce Lee\" and the total price of all the orders", "query": "SELECT T1.order_id,  T1.order_date,  T1.order_total FROM order AS T1 WHERE T1.customer_id  =  \"Bruce Lee\""}
{"question": "What is the name and id of the employee who has the lowest sales volume?", "query": "SELECT T1.name,  T1.\"id\" FROM employee AS T1 WHERE T1.sales_volume  =  ( SELECT min(sales_volume) FROM employee AS T2 WHERE T2.name  =  \"John\" )"}
{"question": "Show the minimum, maximum, and average order quantity of all invoices", "query": "SELECT MIN(order_quantity) AS min_order_quantity, MAX(order_quantity) AS max_order_quantity, AVG(order_quantity) AS avg_order_quantity FROM invoices"}
{"question": "What are the names, age, and birthplace of all students?", "query": "SELECT T1.name,  T1.age,  T1.birthplace FROM students AS T1"}
{"question": "What are the top 3 apartment types in terms of the average number of rooms?", "query": "SELECT T1.room_type,  T2.room_count FROM apartments AS T1 JOIN apartments AS T2 ON T1.apartment_id  =  T2.apartment_id WHERE T1.room_type  =  'Apartment' AND T2.room_type  =  \"Apartment\" ORDER BY T1.room_type, T2.room_count DESC"}
{"question": "List the names of the company that has the highest turnover", "query": "SELECT name FROM Company WHERE turnover  =  (SELECT max(turnover) FROM company)"}
{"question": "What is the name, date, and reason of expiry of the credit card", "query": "SELECT T1.name, T1.date, T1.reason FROM credit_card AS T1 WHERE T1.expiry_date  =  \"2016-01-01\""}
{"question": "What are the names, ids, and description of all products in all categories?", "query": "SELECT T1.name,  T1.id,  T1.description FROM product AS T1"}
{"question": "(a novel question, about a course), after \"", "query": "A:"}
{"question": "(a novel question, about a table) List the first 5 characters of the first 50 words of the novel \"Hunting\" by Mary Shelley", "query": "SELECT SUBSTR(T1.text, 1, 50) FROM book AS T1 WHERE T1.author  =  \"Mary Shelley\""}
{"question": "Find the number of all the persons with a first name of \"Alice\"", "query": "SELECT COUNT(*) FROM person WHERE name_first = \"Alice\""}
{"question": "Find all the product ids, product names, and the price of all products", "query": "SELECT T1.product_id,  T1.product_name,  T1.price FROM product AS T1 JOIN product_details AS T2 ON T1.product_id  =  T2.product_id WHERE T2.product_id  =  \"1\""}
{"question": "What is the name, city, and country code of the airport that has the lowest highest altitude?", "query": "SELECT name,  city,  country_code FROM airports WHERE altitude  =  (SELECT min(altitude) FROM airports WHERE country_code  =  \"US\")"}
{"question": "Show the names of all the teachers and their average teaching hours", "query": "SELECT T1.name,  T2.hours FROM teachers AS T1 JOIN (SELECT AVG(hours) AS hours FROM classes AS T2 WHERE T2.teacher_id  =  T1) AS T3 ON T1.id  =  T3.id"}
{"question": "What are the names and ages of the actors in the film \"The Silence of the Lambs\"?", "query": "SELECT name,  age FROM actor WHERE film_id  =  \"The Silence of the Lambs\""}
{"question": "find the name and number of students who were born in 1990, and \"", "query": "SELECT T1.name,  T1.student_id FROM students AS T1 JOIN student_births AS T2 ON T1.student_id  =  T2.student_id WHERE T2.year_of_birth  =  1990"}
{"question": "List the names of students who are taking a class taught by a professor named John Doe", "query": "SELECT T1.fname,  T1.lname,  T1.major,  T1.minor,  T1.GPA,  T1.phone,  T1.email,  T1.address_id,  T1.city,  T1.state_code,  T1.country,  T1.* FROM student AS T1 WHERE T1.fname  =  \"John Doe\""}
{"question": "What are the names a, b, c, d and e? (The answer is: a - the first question, b - the second question, c", "query": "SELECT T1.question_id,  T1.question,  T1.answer FROM question AS T1 WHERE T1.question_id  =  1"}
{"question": "Find the first name, last name and email of the manager who is younger than 40", "query": "SELECT T1.first_name,  T1.last_name,  T2.email FROM employees AS T1 JOIN manager AS T2 ON T1.manager_id  =  T2.employeeid WHERE T2.age  <  40"}
{"question": "Find the number of books that contain the word \"Titanic\" in the title", "query": "SELECT COUNT(*) FROM books WHERE title LIKE '%Titanic%'"}
{"question": "What is the average price of all the products?", "query": "SELECT AVG(price) FROM product;"}
{"question": "What are the names and ages of the students who have been born after the year 2000?", "query": "SELECT T1.name,  T1.age FROM students AS T1 WHERE T1.birth_date  >  '2000'"}
{"question": "How many musicians have the same last name and first name as the actor David Dunn?", "query": "SELECT count(*) AS c FROM musician AS T1 JOIN actor AS T2 ON T1.last_name  =  T2.first_name WHERE T2.name  =  'David Dunn'"}
{"question": "List the names of all the customers in the order of their first appearance in this week", "query": "SELECT T1.customer_name FROM customer AS T1 WHERE T1.date_from  =  '2016-01-01' AND T1.date_to  =  '2016-01' ORDER BY T1.customer_name"}
{"question": "What are the first name, Surname and age of all the students that went to primary school here?", "query": "SELECT T1.firstname,  T1.surname,  T1.age FROM students AS T1 WHERE T1.school_id  =  \"1\""}
{"question": "(a novel question, about a question about a different table): Return the number of voters who voted for the same candidate", "query": "SELECT COUNT(*) FROM voters WHERE candidate_id  =  (SELECT candidate_id FROM candidates WHERE name  =  \"John Smith\")"}
{"question": "Find the names and addresses of all customers with a total balance of 300 or more", "query": "SELECT T1.fname,  T1.lname,  T1.address_1,  T1.address_2,  T1.city,  T1.state,  T1.zip,  T1.phone,  T1.email,  T1.acc_bal,  T1.acc_type,  T1.acc_status,  T1.acc_balance,  T1.acc_date,  T1.acc_amount,  T1.acc_tx_id,  T1.acc_id,  T"}
{"question": "What are the names, and the first names of all the professors who have a PhD student?", "query": "SELECT T1.name,  T1.first_name FROM professor AS T1 JOIN student AS T2 ON T1.id  =  T2.professor_id WHERE T2.degree  =  'PhD'"}
{"question": "What is the name, first name, and age of the musician who plays the piano in \"The Phantom of the Opera\"?", "query": "SELECT name,  first_name,  age FROM musician WHERE musician.instrument_id  =  \"The_Piano\""}
{"question": "What is the average number of people who die in a car accident?", "query": "SELECT AVG(deaths) FROM car_accident"}
{"question": "Show the name of all products that have at least one of the following attributes:'sport' and'sporting'", "query": "SELECT T1.name FROM product_attributes AS T1 JOIN product_attributes AS T2 ON T1.attribute_id  =  T2._id WHERE T2.attribute_name  =  \"sport\" AND T2.attribute_name  IN  (\"sporting\")"}
{"question": "What are the names and salaries of all of the engineers at the company?", "query": "SELECT T1.name,  T1.salary FROM engineers AS T1 GROUP BY T1.name"}
{"question": "Find the number of events that the city of Los Angeles has hosted", "query": "SELECT count(*) from events WHERE city_id  =  \"Los Angeles\""}
{"question": "What is the average number of cars in the city?", "query": "SELECT AVG(T1.car_count) FROM city AS T1"}
{"question": "Find the first names and last names of all the students assigned to the courses in \"MATH 100\" and \"MATH 102\"", "query": "SELECT T1.first_name,  T1.last_name FROM student AS T1 JOIN enrolled_in AS T2 ON T2.student_id  =  T1 FROM MATH100 AS T3 JOIN MATH102 AS T4 ON T4.course_id  =  T3 JOIN course AS T5 ON T5.course_id  =  (SELECT course_id FROM course WHERE course_name  =  \"MATH 100\") AND T5.course_id !=  (SELECT course_id FROM Course WHERE course_name  =  'MATH 102')"}
{"question": "Does the customer have any children?", "query": "SELECT T1.customer_id,  T1.customer_name,  T1.customer_address_type_code,  T1.customer_age,  T1.customer_gender_code,  T1.is_married,  T1.is_primary_residence,  T1.is_student,  T1.is_veteran,  T1.is_active,  T1.is_disabled,  T1.is_deceased,  T1.is_in_law_relationship,  T1.is_dependent"}
{"question": "Write a question about a different table", "query": "SELECT T1.Name,  T1.Address,  T1.City,  T1.State,  T1.Zip,  T1.Phone,  T1.Email,  T1.Fax,  T1.Email_Verified,  T1.Phone_Verified,  T1.[First Name],  T1.[Last Name],  T1.Birthday,  T1.Gender,  T1.Marital_Status,  T1.Religion,  T1.Ethnicity,  T1.Religion_"}
{"question": "What is the name, city, and age of all the pilots who won 5 or more games?", "query": "SELECT T1.name,  T1.city,  T1.age FROM pilot AS T1 WHERE T1.win_count  >  5"}
{"question": "Give the names of all employees who have worked for the company with id 8", "query": "SELECT name FROM employees WHERE employee_id  =  8"}
{"question": "Who is the nominee who has been listed for the most music awards?", "query": "SELECT T1.id,  T1.name_first,  count(*) FROM player AS T1 JOIN player AS T2 ON T1.id  =  T2.id GROUP BY T1.id ORDER BY count(*) DESCA"}
{"question": "How many students are there in the University of Waterloo?", "query": "SELECT COUNT(*) FROM STUDENT;"}
{"question": "What are the names, counts, and average age of the characters in the movie \"Titanic\"?", "query": "SELECT name,  count(*),  AVG(age) FROM characters WHERE movie_id = \"Titanic\""}
{"question": "Find the average age of the students that have been accepted by the university", "query": "SELECT AVG(age) FROM student WHERE status = 'accepted'"}
{"question": "What are the names for the products that have lowest price", "query": "SELECT T1.Product_Name,  T2.Price FROM Products AS T1 JOIN Products_Price AS T2 ON T1.Product_ID  =  T2._id WHERE T2.Price  =  (SELECT MIN(Price) FROM Products_Price)"}
{"question": "What are the ids and first names of the students that have the most number of different passwords?", "query": "SELECT student_id,  first_name FROM students WHERE count(*)  =  (SELECT count(*) FROM students WHERE password!= \"\" AND student_id  =  (SELECT student_id FROM students WHERE password!= \"\"))"}
{"question": "What are the names in alphabetical order of a number of different countries?", "query": "SELECT T1.country_name FROM countries AS T1 WHERE T1.country_name  IN  (SELECT T2.country_name FROM countries AS  T2 WHERE T2.country_name  NOT IN  (SELECT T3.country_name FROM countries AS   T3 WHERE T3.country_name  NOT IN (SELECT T4.country_name FROM countries AS    T4 WHERE T4.country_name  NOT IN   (SELECT T5.country_name FROM countries AS     T5 WHERE T5.country_name  NOT IN    (SELECT T6.country_"}
{"question": "List the number and id of all the products in all the orders", "query": "SELECT T1.product_id,  T1.product_name,  T1.quantity,  T1.price,  T1.order_id FROM order_item AS T1 JOIN order AS T2 ON T1.order_id  =  T2._id WHERE T2.order_id  =  '1'"}
{"question": "What is the name of the song with the most downloads in 2009?", "query": "SELECT T1.song_id,  T2.title,  T3.artist,  T4.album,  T5.year,  T6.downloads FROM song AS T1 JOIN song_artist_album AS T2 ON T1.song_id  =  T2._id JOIN song_artist AS T3 ON T2.artist_id  =  T3.artist_id JOIN album AS T4 ON T2.album_id  =  T4.id JOIN year_album AS T5 ON T4.year  ="}
{"question": "What are the id and name of the hotel with the largest number of rooms", "query": "SELECT T1.name FROM hotel AS T1 JOIN room_type AS T2 ON T1.hotel_id  =  T2.hotel_id WHERE T2.room_type_code  =  \"room\" AND T2.room_count  >  \"room\""}
{"question": "What kind of vehicle does the least number of people ride? List the vehicle type", "query": "SELECT Vehicle_Type,  count(*) FROM Vehicle GROUP BY Vehicle_Type ORDER BY count(*) DESC;"}
{"question": "What is the average transaction amount, as well the total amount of all transactions for the past year?", "query": "SELECT AVG(total_amount) AS average_amount, SUM(total_amount) AS total_amount FROM transactions;"}
{"question": "What is the name and the id of the student who has been the most absent?", "query": "SELECT T1.student_id,  T1.name FROM students AS T1 WHERE T1.absent_count  =  (SELECT max(absent_count) FROM students AS T2 WHERE T2.student_id  =  (SELECT T3.student_id FROM students AS T3 WHERE T3.name  =  \"John Doe\"))"}
{"question": "Which department has the smallest number of employees?", "query": "SELECT T1.dept_id,  T1.name FROM department AS T1 WHERE T1.size  =  (SELECT MIN(T2.size) FROM department AS T2 WHERE T2.id  =  T1.parent_id)"}
{"question": "Find the names of people who were born in the United States and have an email address containing the substring \"a\" in them", "query": "SELECT name FROM Person JOIN email ON email.address  =  \"a\" AND person.age  >  0"}
{"question": "What is the name and number of tickets for the event \"Sidney\"", "query": "SELECT T1.name,  T1.ticket_number FROM events AS T1 JOIN tickets AS T2 ON T1.event_id  =  T2.[event_id] WHERE T2.name  =  \"Sidney\""}
{"question": "Find the names of all the city names containing a character from the string \"Yong\"", "query": "SELECT DISTINCT city_name FROM city WHERE city_name LIKE '%Yong%'"}
{"question": "How many of you have been to the beach? (a/an)", "query": "SELECT COUNT(*) AS count FROM VISITORS WHERE place_name  =  \"beach\""}
{"question": "Show the names of all the countries that are not in the list", "query": "SELECT name FROM country WHERE country_id NOT IN (SELECT country_id FROM country_list)"}
{"question": "Return the data of the table 'accounts'", "query": "SELECT * FROM accounts"}
{"question": "Find all the names of the students who are not in the group \"Dylan\"", "query": "SELECT T1.name FROM student AS T1 WHERE T1.group_id  =  \"Dylan\" AND T1.name  NOT IN (SELECT T2.name FROM student AS T2 WHERE T2.group_id  =  T1.group_id)"}
{"question": "Find the name of the first person who ordered a book from the library", "query": "SELECT name FROM Person ORDER BY name ASC LIMIT 1"}
{"question": "What are the names and the total number of songs that are in the database?", "query": "SELECT T1.song_name,  T2.count(*) FROM songs AS T1 JOIN tracks AS T2 ON T1.song_id  =  T2.song_id GROUP BY T2.song_id"}
{"question": "What is the name and number of the apartment that is located in block 7 of Parking Lot B?", "query": "SELECT name,  number FROM Apartment WHERE Block_ID  =  7"}
{"question": "Find the names of the faculty members who are playing both Canoeing and Kayakers", "query": "SELECT T1.name FROM faculty AS T1 JOIN faculty_activities AS T2 ON T1.faculty_id  =  T2.faculty_id WHERE T2.activity_id  =  \"Canoeing\" AND T2.activity_id  ==  \"Kayaking\""}
{"question": "List the names of the first four employees in alphabetical order of first name", "query": "SELECT T1.firstname FROM employee AS T1 ORDER BY T1.firstname"}
{"question": "Find the last name of all employees who have a college degree", "query": "SELECT T1.last_name FROM employees AS T1 JOIN college AS T2 ON T1.emp_id  =  T2.emp_id WHERE T2.degree  =  'yes'"}
{"question": "What are the names, locations and IDs of all countries that have a president?", "query": "SELECT name,  location,  id FROM country WHERE president"}
{"question": "Find the first names and the number of students of the department that has the highest percentage of students", "query": "SELECT T1.student_name,  T1.count(*) FROM department AS T1 JOIN student_department AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY T1.percentage DESC LIMIT 1"}
{"question": "How many times is \"Jupiter\" mentioned in the book?", "query": "SELECT count(*) AS \"How many times is 'Jupiter' mentioned in the book?\" FROM book WHERE book.title  =  \"The Hitchhiker's Guide to the Galaxy\""}
{"question": "Find all the customers who have purchased a home insurance policy from Amazon", "query": "SELECT T1.custid,  T2.custid FROM customer AS T1 JOIN customer_insurance AS T2 ON T1.id  =  T2.customer_id WHERE T1.custid  IN (SELECT T3.custid FROM customer_insurance AS T3 WHERE T3.custid  =  'A12345')"}
{"question": "Find the names of employees who have the same manager", "query": "SELECT T1.manager_id,  T2.employee_id FROM Employee AS T1 JOIN Employee_Manager AS T2 ON T1.employee_id  =  T2._id WHERE T2.manager_id  =  '1'"}
{"question": "The question is about a table named \"customer\"", "query": "SELECT name FROM customer WHERE age  <  30"}
{"question": "Find the name of all the songs whose rating is below the average rating of all songs by year", "query": "SELECT T1.song_name FROM songs AS T1 JOIN (SELECT T2.song_name, T2.rating FROM songs AS T2 GROUP BY T2.rating) AS T2 ON T1.song_id  =  T2.[song_id] WHERE T2.rating  <  (SELECT AVG(T3.rating) FROM songs AS T3)"}
{"question": "What is the number of children of the employees at a given workplace?", "query": "SELECT T1.employeeid,  T1.children FROM employee AS T1 WHERE T1.workplace  =  'A'"}
{"question": "Find the names of the students, in order of their score", "query": "SELECT T1.name FROM students AS T1 JOIN scores AS T2 ON T1.id  =  T2.id ORDER BY T1.score DESC"}
{"question": "What is the name, id, and country of the first person to be born in the country with code \"AF\"?", "query": "SELECT name,  id,  country FROM country WHERE country  =  \"AF\""}
{"question": "How many students received the letter \"A\" in their final exam?", "query": "SELECT T1.student_id,  T1.grade_id,  T1.letter_grade FROM grade AS T1 JOIN student_grade AS T2 ON T1.grade_id  =  T2._id WHERE T1.grade_id  IN (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35"}
{"question": "What are the names, and id of all students, who have a course called \"IT\"?", "query": "SELECT T1.name,  T1.* FROM student AS T1 JOIN course AS T2 ON T1.stu_id  =  T2.* WHERE T2.name  =  \"IT\""}
{"question": "What is the name and last name of student whose age is greater than 80?", "query": "SELECT T1.name,  T1.last_name FROM students AS T1 WHERE T1.age  >  80"}
{"question": "How many articles do you have?", "query": "SELECT count(*) AS count FROM articles"}
{"question": "Find the name and the level of catalog structure with level between 10 and 15", "query": "SELECT name,  level FROM catalog_structure WHERE level  >  10 AND level  <  15"}
{"question": "What is the name and number of the movie where the actor \"Dustin Hoffman\" appeared?", "query": "SELECT T1.title FROM film AS T2 JOIN film_cast AS T3 ON T2.id  =  T3.film_id WHERE T3.actor_id  =  \"Dustin Hoffman\""}
{"question": "Find the sales id and name of the customer who bought the most product in the last 2 weeks", "query": "SELECT T1.customer_id,  T1.name FROM customer AS T1 JOIN order_details AS T2 ON T1.customer_id  = T2.customer_id WHERE T2.date_of_order  >  (SELECT max(date_of_order) FROM order_details) AND T2.date_of_payment  >  (SELECT max(price) FROM order_details) AND (T2.date_of_order - T2.date_of_paymen)  >  (SELECT max(time_of_day) FROM order_details"}
{"question": "Show the name of the universities that have at least two players", "query": "SELECT T1.university_name FROM university AS T1 JOIN player AS T2 ON T1.university_id  =  T2.university_id WHERE T2.count(*)  >=  2"}
{"question": "How many different albums did the artist \"Metallica\" has?", "query": "SELECT count(*)  FROM artist_albums AS T1 JOIN album AS T2 ON T1.artist_id  =  T2.artist_id WHERE T2.name  =  \"Metallica\""}
{"question": "What are the names, ages, and grades of all students with an ID between 2 and 18?", "query": "SELECT T1.student_id,  T1.name,  T1.age,  T1.grade FROM student AS T1 WHERE T1.student_id  BETWEEN 2 AND 18"}
{"question": "What are the names, last names, and ages of all customers who made a purchase this month?", "query": "SELECT T1.name,  T1.last_name,  T1.age FROM customer AS T1 WHERE T1.date_of_purchase  =  \"2016-01-01\""}
{"question": "(a question about a sql table) How many colors are never used by all products?", "query": "SELECT DISTINCT color FROM products WHERE color  = 'red' AND color  =  'blue' AND color  =  'green' AND color  =  'yellow' AND color  =  'purple' AND color  =  'orange' AND color  =  'brown' AND color  =  'pink' AND color  =  'black' AND color  =  'white' AND color  =  'gray' AND color  = 'silver' AND color  =  'gold' AND color  =  'tan' AND color  =  'l"}
{"question": "List the names and ages of all athletes who are in the Olympics", "query": "SELECT T1.name,  T1.age FROM athlete AS T1 JOIN olympic_athlete AS T2 ON T1.id  =  T2.athlete_id WHERE T2.year  =  \"2012\""}
{"question": "What is the name(s) of all the students who are in the bottom 5 % of the class?", "query": "SELECT T1.student_id,  T2.name FROM students AS T1 JOIN students AS T2 ON T1.id  = T2.id WHERE T2.grade  =  'F' AND T2.grade  =  (SELECT MIN(grade) FROM students WHERE grade  >  T2.grade) ORDER BY T2.grade  DESC LIMIT 5"}
{"question": "List the distinct values for two columns, and return the third column", "query": "SELECT DISTINCT name,  age,  city FROM students"}
{"question": "What is the name and email of the user who has the highest average number of ratings?", "query": "SELECT T1.user_id,  T1.user_name,  T1.user_email FROM users AS T1 JOIN ratings AS T2 ON T1.user_id  =  T2.user_id WHERE T2.rating_count  >  (SELECT count(*) FROM ratings WHERE user_id  =  T1.user_id )"}
{"question": "List the name and id of all customers with the highest average order amount", "query": "SELECT T1.Name,  T1.id FROM Customer AS T1 JOIN ( SELECT T2.Name,  SUM(T3.Amount) AS Amount FROM Orders AS T2 JOIN Order_Items AS T3 ON T2.id  =  T3.order_id GROUP BY T2.Name ) AS T4 ON T1.Name  =  T4.Name AND T1.id  =  T4.id WHERE T4.Amount  >  5000"}
{"question": "What are the name, location and products of the items which have any 'inhibitor' interaction? Find all of them", "query": "SELECT T1.name,  T2.location,  T3.product_id FROM product_interaction AS T1 JOIN product_interaction_item AS T2 ON T1.id  =  T2.item_id_br JOIN product_interaction_item_item AS T3 ON T2.item_id_br  =  T3.item_id_br WHERE T1.[interaction_type]  =  'inhibitor'"}
{"question": "give me the average and minimum price (of the products)", "query": "SELECT AVG(price) AS avg_price, MIN(price) AS min_price FROM products"}
{"question": "What is the name and the balance of the checking account that has the highest checking balance?", "query": "SELECT T1.account_name,  T1.account_balance FROM account AS T1 WHERE T1.account_balance  >  T2.account_balance ORDER BY T1.account_balance DESC LIMIT 1"}
{"question": "What are the ids and names of employees in a company?", "query": "SELECT T1.employee_id,  T1.employee_name FROM employee AS T1 JOIN employee_department AS T2 ON T1.employee_id  =  T2.employee_id WHERE T2.department_id  = '1'"}
{"question": "(a novel question, about a single table)", "query": "(the sql query to answer the query)"}
{"question": "What is the name, birthdate and age of the person with the lowest age?", "query": "SELECT T1.name,  T1.birthdate,  T1.age FROM person AS T1 WHERE T1.age  =  (SELECT MIN(T2.age) FROM person AS T2)"}
{"question": "What are the names and phone numbers of the customers who have called from a specific country (country name)?", "query": "SELECT T1.customer_name,  T2.customer_phone FROM customers AS T1 JOIN orders_history AS T2 ON T1.id  = T2.customer_id WHERE country  =  \"France\""}
{"question": "What is the first driver in the standings?", "query": "SELECT driver_id,  driver_name FROM drivers ORDER BY driver_name LIMIT 1"}
{"question": "What are the names for the first and last name of the customer who received the most number of orders?", "query": "SELECT T1.customer_first_name, T1.customer_last_name FROM customers AS T1 WHERE T1.orders  >  (SELECT MAX(T2.orders) FROM customers AS T2)"}
{"question": "What are all the names of products with page size less than A4 and page count greater than 20?", "query": "SELECT T1.product_name,  T1.page_size,  T1.page_count FROM product AS T1 WHERE T1.page_size  <  'A4' AND T1.page_count  >  20"}
{"question": "Find the names of the products with the largest surface area", "query": "SELECT T1.name FROM product AS T1 JOIN product_size AS T2 ON T1.id  =  T2.id WHERE T2.surface_area  >  (SELECT max(surface_area) FROM product)"}
{"question": "What are the numbers of unique words in the following three texts?", "query": "SELECT DISTINCT word FROM text1"}
{"question": "List the name and id of the document type code RV", "query": "SELECT T1.id,  T1.name FROM document_type_code AS T1 JOIN document_types AS T2 ON T1.type_id  =  T2.type_id WHERE T2.name  =  \"RV\""}
{"question": "What are the names, addresses, and IDs of the students who have grades of A or B in all the courses?", "query": "SELECT T1.name,  T1.\"address\",  T1.id FROM student AS T1 JOIN course AS T2 ON T1.course_id  =  T2.\"course_id\" WHERE T2.grade  =  \"A\" OR T2.grade  =  B;"}
{"question": "Find the names of the products with price above 1000", "query": "SELECT product_name,  price FROM products WHERE price  >  1000"}
{"question": "What is the average height of employees who are over 50 years old?", "query": "SELECT AVG(height) FROM employee WHERE age  >  50"}
{"question": "Find the dates on which more than two revisions were made", "query": "SELECT T1.date_from,  T2.date_to FROM Revision AS T1 JOIN Revision AS T2 ON T1.id  = T2.id WHERE T1.date_from  <  T2.date_to"}
{"question": "What are the distinct locations of the cars with the number of passengers greater than 200?", "query": "SELECT DISTINCT Location FROM Car WHERE Number_of_Passengers  >  200"}
{"question": "How many students are there in the database?", "query": "SELECT COUNT(*) FROM students"}
{"question": "Find the names of all the authors of the books written by \"Paul\"", "query": "SELECT T1.name FROM author AS T1 JOIN book AS T2 ON T1.author_id  =  T2._id WHERE T2.author_id  =  \"Paul\""}
{"question": "(a question about a sql table), before \"", "query": "SELECT T1.name FROM city AS T1 JOIN district AS T2 ON T1.city_id  =  T2.city_id WHERE T2.name  =  \"New York\""}
{"question": "1. What is the average length of the movie titles?", "query": "SELECT AVG(LENGTH(title)) FROM movie"}
{"question": "What is the age of the first person named David?", "query": "SELECT T1.age FROM people AS T1 WHERE T1.name_first  =  'David'"}
{"question": "Find all the students in the database who are involved in the same organization", "query": "SELECT T1.student_id,  T1.first_name,  T1.last_name,  T1.email,  T1.phone,  T1.address,  T1.city,  T1.state,  T1.zip,  T1.country,  T1.gender,  T1.major,  T1.year,  T1.hobby,  T1.school,  T1.major_area,  T1.major_subject,  T1.major_grade,  T1.major_level"}
{"question": "What are the full names of the students who live in the state of 'NY'?", "query": "SELECT T1.full_name FROM Students AS T1 WHERE T1.state  =  'NY'"}
{"question": "What are the names and ages of all people who live in Manhattan?", "query": "SELECT T1.name,  T1.age FROM people AS T1 WHERE T1.city_id  =  \"Manhattan\""}
{"question": "Find the name of the product with the lowest total price", "query": "SELECT T1.Product_Name,  T2.Price FROM Products AS T1 JOIN Products_Price AS T2 ON T1.Product_ID  =  T2.\"Product_ID\" ORDER BY T2.Price DESC"}
{"question": "What are the names and descriptions of the first 30 aircrafts in the table?", "query": "SELECT T1.aircraft_name,  T1.aircraft_description FROM aircraft AS T1 ORDER BY T1.aircraft_name"}
{"question": "-What is the name of the department that has both the highest number of students and the most graduates?", "query": "SELECT T1.dept_name FROM departments AS T1 JOIN students AS T2 ON T1.student_id  =  T2.\"id\" JOIN graduation_levels AS T3 ON T1.graduation_level_id  =  T3.id WHERE T2.student_id  =  (SELECT student_id FROM students WHERE first_name  =  \"John\") AND T3.graduation_level_id = (SELECT graduation_level_id FROM graduation_levels WHERE name  =  \"Bachelor\")"}
{"question": "What is the length of the shortest train?", "query": "SELECT T1.length FROM train AS T1 WHERE T1.train_id  =  '1'"}
{"question": "What is the distance of the city Pune from the city Mumbai?", "query": "SELECT T1.city_id,  T1.city_name,  T1.state_id,  T1.state_name,  T1.country_id,  T1.country_name,  T1.latitude,  T1.longitude,  T1.distance FROM city AS T1 JOIN country AS T2 ON T1.country_id  =  T2._id JOIN state AS T3 ON T1.state_id  =  T3._id WHERE T1.city_name  =  \"Pune\" AND T1."}
{"question": "What is the name, title, and address of the building where the company is located?", "query": "SELECT address_id,  name,  address_name,  city_id,  city_name,  state_id,  state_name,  zip_code,  zip_code_name,  country_id,  country_name,  latitude,  longitude,  zip_code_latitude,  zip_code_longitude,  zip_code2_latitude,  zip_codes2_longitude,  zip_codes2 AS zip_code2_name,  zip_codes2 AS city_name,  zip_codes AS state_name"}
{"question": "What is the first and last name of the customer who made the last purchase?", "query": "SELECT T1.first_name,  T1.last_name FROM customer AS T1 JOIN order AS T2 ON T1.customer_id  =  T2.[customer_id] WHERE T2.order_date  =  \"2014-01-01\""}
{"question": "Which of the following is not a type of video game?", "query": "SELECT T2.type FROM Video_Game AS T1 JOIN Video_Game_Type AS T2 ON T1.type  =  T2.type WHERE T1.name  =  \"Mario\""}
{"question": "Which are the names of customers who have first name \"Amal\"?", "query": "SELECT T1.first_name,  T1.last_name FROM customers AS T1 WHERE T1.first_name  =  \"Amal\""}
{"question": "What are the names on the front page of the website?", "query": "SELECT T1.name FROM website AS T1 WHERE T1.front_page  =  1"}
{"question": "What are the names for all the products that are made from metals?", "query": "SELECT T1.product_name FROM product AS T1 WHERE T1.material_id  =  'Metal'"}
{"question": "What are the course codes and names of the courses with a cost of more than $500 per year?", "query": "SELECT T1.course_code,  T1.name FROM course AS T1 WHERE T1.cost_per_year  >  500"}
{"question": "What are the names \"Andreas\" and \"Daniel\" doing?", "query": "SELECT name FROM staff WHERE name  =  \"Andreas\" OR name  =  \"Daniel\""}
{"question": "What is the name, age and salary of all employees who got married in the last two years", "query": "SELECT T1.employee_id,  T1.name,  T1.[age],  T1.salary FROM employee AS T1 WHERE T1.marriage_date  >=  '2011-01-01' AND T1.marriage_date <  '2012-01-01'"}
{"question": "What is the name and salary of the employees in order by salary?", "query": "SELECT T1.first_name,  T1.last_name,  T1.salary FROM employees AS T1 ORDER BY T1.salary"}
{"question": "What are the names, title, and the number of students in each class?", "query": "SELECT T1.name,  T1.title,  T1.students FROM classes AS T1 GROUP BY T1.name"}
{"question": "What is the average age of all the employees who have never been married before?", "query": "SELECT AVG(age) FROM employees WHERE status  =  'Single'"}
{"question": "What are the names, status and salary of all employees?", "query": "SELECT T1.employee_name,  T2.status,  T3.salary FROM employee AS T1 JOIN employee_status AS T2 ON T1.id  = T2.id JOIN salary AS T3 ON T1.salary_id  =  T3.id"}
{"question": "(a novel question, about a table) What is the average and largest salary for all employees?", "query": "SELECT avg(salary),  max(salary) FROM employee"}
{"question": "Find the name and total number of students in an exam", "query": "SELECT T1.student_id,  T1.total_points FROM students AS T1 JOIN exam AS T2 ON T1.student_id  =  T2.student_id WHERE T2.exam_id  =  \"1\""}
{"question": "What is the name and age of the employee with the id 242612?", "query": "SELECT T1.firstname,  T1.lastname,  T1.age FROM employee AS T1 WHERE T1.id  =  242612"}
{"question": "What are all the courses with a total score of 500?", "query": "SELECT T1.course_id,  T1.course_name,  T1.course_description,  T1.course_credit_hours,  T1.course_price,  T1.course_id_br,  T1.course_year,  T1.course_semester,  T1.course_section,  T1.course_teacher_id,  T1.coursedate,  T1.course_time,  T1.course_room,  T1.course_instructor_id,  T1."}
{"question": "(a novel question, about a table different from the question above): What are the names of all the cities with population of at least 100,000?", "query": "SELECT city_name FROM cities WHERE population  >  100000"}
{"question": "(a question about a sql table) Show the number of rows in the table", "query": "SELECT COUNT(*) FROM table"}
{"question": "What is the first and last name of Mr", "query": "SELECT T1.first_name,  T1.last_name FROM employees AS T1 WHERE T1.first_name  =  \"Mr\""}
{"question": "Find the name of all customers who have a vehicle with a make of BMW", "query": "SELECT customer_id,  customer_first_name,  customer_last_name,  customer_address,  customer_city,  customer_state,  customer_zip,  customer_country,  customer_phone,  customer_email,  customer_type,  customer_type_code,  customer_type_desc,  customer_type_id,  customer_type_name,  customer_type_description,  customer_type_id_code,  customer_type__is_active,  customer_type__is-deleted,  customer_type__is"}
{"question": "What are the names for the customers with the most number of transactions", "query": "SELECT T1.customer_name FROM Customers AS T1 JOIN Transactions AS T2 ON T1.id  = T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC"}
{"question": "What are the names and ages of all students who have parents with first name \"John\" and last name \"Smith\"?", "query": "SELECT T1.firstname,  T1.lastname,  T2.age FROM student AS T1 JOIN parents AS T2 ON T1.studentid  =  T2.studentid WHERE T1.firstname  =  \"John\" AND T1.lastname  =  \"Smith\""}
{"question": "What are the names, addresses and telephone numbers of a customer named \"Yvonne Kemp\"?", "query": "SELECT T1.name,  T1.address,  T1.phone FROM customer AS T1 WHERE T1.name  =  \"Yvonne Kemp\""}
{"question": "What are the names, salaries and titles of all the teachers?", "query": "SELECT T1.firstname,  T1.lastname,  T1.salary,  T1.title FROM teacher AS T1 WHERE T1.firstname  =  \"John\" AND T1.lastname  =  \"Doe\""}
{"question": "What is the name of the student who took the course \"QM-261\"?", "query": "SELECT T1.name FROM students AS T1 JOIN courses AS T2 ON T1.id  =  T2.id WHERE T2.course_code  =  \"QM-261\""}
{"question": "\"What are the names of the movies that are either before 2000 or reviewed by Susan B", "query": "SELECT name FROM movie WHERE year  <  2000 OR name  =  \"Susan B.\""}
{"question": "Find the student id, and the name of the student, for the student id that has the highest average scores", "query": "SELECT T1.student_id,  T1.name_first,  (T1.score_avg - T2.score_avg) AS score_diff FROM student AS T1 JOIN student AS T2 ON T1.student_id  =  T2.student_id HAVING (T1.score_avg -  T2.score_avg)  >  0"}
{"question": "How are the names of the cities in the United States sorted by the number of inhabitants?", "query": "SELECT name,  population FROM city ORDER BY population DESC"}
{"question": "What are the names in both singular and plural of the products?", "query": "SELECT T1.name AS name_in_plural,  T1.name AS name_in"}
{"question": "What is the name for the type of the service that can be used by both men and women?", "query": "SELECT T2.name FROM service AS T1 JOIN gender AS T2 ON T1.service_type  =  T2.service_type WHERE T1.service_type  IN  ('service_type_1','service_type_2')"}
{"question": "Show the first name of the customer who has the largest account balance", "query": "SELECT T1.first_name FROM customer AS T1 WHERE T1.account_balance  =  MAX(T2.account_balance)"}
{"question": "What is the average amount of damage done in millions by storms with max speed over 1000?", "query": "SELECT avg(damage) FROM damage WHERE speed  >  1000"}
{"question": "How many students have named themselves \"George\"?", "query": "SELECT T1.name FROM students AS T1 WHERE T1.name  =  \"George\""}
{"question": "Find the name of each student who took one of the courses \"Business Skills\" and \"Computers\"", "query": "SELECT T1.student_name FROM student AS T1 JOIN course AS T2 ON T1.student_id  =  T2.student_id WHERE T2.course_name  =  \"Business Skills\" OR T2.course_name  ==  \"Computers\""}
{"question": "What is the full name of the company that has the most employees?", "query": "SELECT T1.company_name,  T2.employee_count FROM company AS T1 JOIN employees AS T2 ON T1.company_id  =  T2._id WHERE T1.company_name  =  \"The Company\""}
{"question": "What are the names, ranks, and salaries of the employees who work in the US?", "query": "SELECT T1.name,  T1.rank,  T1.salary FROM employees AS T1 WHERE T1.country_code  =  \"US\""}
{"question": "(a question about a sql table) \"Find the average number of kilometers between the locations with the \"Mountain\" and \"River\" name", "query": "SELECT DISTINCT name_first,  name_last,  distance_km FROM (SELECT name_first,  name_middle,  name_last,  ROUND(3959 * acos(cos(radians(37)) * cos(radians(latitude)) * cos(radians(longitude) - radians(-122)) + sin(radians(37)) * sin(radians(latitude))), 2) AS distance_km FROM locations WHERE name_middle  =  'Mountain' AND name_last  =  'River' AND name_first"}
{"question": "(Find the names of all movies not rated by Chris Jackson)", "query": "SELECT T1.title FROM Rating AS T1 WHERE T1.rater_id  =  \"Chris Jackson\""}
{"question": "What are the ages and positions of all employees of the company?", "query": "SELECT T1.age,  T1.position FROM employees AS T1 GROUP BY T1.position"}
{"question": "What is the average number of people who will buy a new car in the next year?", "query": "SELECT AVG(T1.people) FROM Customer AS T1 WHERE T1.year  =  \"2001\""}
{"question": "Find the names of female students who have a high average score in sports", "query": "SELECT T1.first_name,  T1.last_name,  T1.average_score FROM students AS T1 JOIN student_sports AS T2 ON T1.id  = T2.student_id WHERE T2.average_score  >  0.5"}
{"question": "What is the mean age of all students who are younger than age 12?", "query": "SELECT mean(age) FROM students WHERE age < 12"}
{"question": "Show the name, age and occupation of the customer with the most number of accounts", "query": "SELECT T1.customer_first_name, T1.customer_last_name, T1.customer.occupation FROM customers AS T1 JOIN customers_accounts AS T2 ON T1.ID  =  T2.customer.id WHERE T2.accounts  =  (SELECT count(*) FROM customers_accounts WHERE customer_id  =  T1.ID)"}
{"question": "What is the name, city, and id of the city that the customer lived in?", "query": "SELECT T1.city,  T1.id,  T1.name FROM customer AS T1 WHERE T1.city  =  \"New York\""}
{"question": "What is the name and id of the first student who started a business?", "query": "SELECT T1.first_name,  T1.student_id FROM student AS T1 WHERE T1.id  =  (SELECT MIN(T2.id) FROM student AS T2)"}
{"question": "Show the names and genders of all players of the baseball team", "query": "SELECT T1.name,  T1.gender FROM players AS T1"}
{"question": "List all directors who made at least 2 movies, and the number of movies they made", "query": "SELECT T1.director_id,  T1.name_first,  count(*) FROM director AS T1 JOIN movie AS T2 ON T1.director_id  =  T2.director_id GROUP BY T1.director_id ORDER BY count(*)  DESC LIMIT 2"}
{"question": "\"Find the city with the largest number of stations", "query": "SELECT T1.city,  T1.state,  T1.country,  T1.population,  T1.area,  T1.latitude,  T1.longitude,  T1.elevation,  T1.population_density,  T1.timezone,  T1.metro_code,  T1.metro,  T1.airport,  T1.railway,  T1.bus_station,  T1.train_station,  T1.subway_station,  T1.toll_"}
{"question": "Given a name, return the name of the person who is at least 20 years older than the given name", "query": "SELECT T1.name,  T1.age FROM Person AS T1 WHERE T1.age  >  (SELECT T2.age FROM Person AS T2 WHERE T2.name  = \"name\")"}
{"question": "What are the names, age, and gender of all the instructors, and their start dates by course?", "query": "SELECT T1.name,  T1.age,  T1.gender,  T1.start_date FROM instructor AS T1 WHERE T1.course_code  =  \"ACCT-101\""}
{"question": "What is the name and age of the youngest child of Alison?", "query": "SELECT T1.first_name,  T1.last_name,  T1.age FROM Person AS T1 JOIN Person_Child AS T2 ON T1.id  = T2.parent_id WHERE T2.child_id  =  (SELECT T3.child_id FROM Person_Child AS T3 WHERE T3.parent_id  =  T1.id)"}
{"question": "What is the first character of the first name of the student whose first name ends with \"J\" and whose surname starts with \"K\" and who lives in", "query": "SELECT first_name FROM student WHERE first_name LIKE \"J%\" AND surname LIKE \"K%\" AND address LIKE \"J%\""}
{"question": "What is the name and gender of the person who has most number of students following him/her?", "query": "SELECT T1.name,  T1.gender FROM students AS T1 JOIN people AS T3 ON T1.student_id  =  T3.id WHERE T3.id  =  (SELECT T2.id FROM people AS T2 WHERE T2.name  =  \"John Doe\")"}
{"question": "What is the name of the city where the busiest airport is?", "query": "SELECT name FROM airports"}
{"question": "What are the names, ages and interests of all the students", "query": "SELECT T1.name,  T2.age,  T3.interest FROM student AS T1 JOIN interests AS T2 ON T1.id  =  T2.id JOIN personal_details AS T3 ON T1.id  = T3.id"}
{"question": "What are the names, ages and genders of the drivers who drove the car with id 4 during the race?", "query": "SELECT name, age, gender FROM driver WHERE car_id = 4"}
{"question": "Show the name and age of the oldest player", "query": "SELECT T1.age,  T1.name FROM player AS T1 WHERE T1.age  =  (SELECT MAX(age) FROM player)"}
{"question": "What are the names or the id of the students that have a sibling?", "query": "SELECT T1.name FROM student AS T1 JOIN student AS T2 ON T1.sibling_id  =  T2.id WHERE T1.name  =  \"John\""}
{"question": "What kinds of products are on the market?", "query": "SELECT product_name,  product_id FROM products"}
{"question": "What are the names and ids of all the students who took classes and passed them?", "query": "SELECT T1.student_id,  T2.name FROM Student_Course_Enrolment T1 JOIN student AS T2 ON T1.Student_ID  =  T2.%"}
{"question": "List the names of the customers who have not had any transactions in the past month", "query": "SELECT T1.Name FROM Customer AS T1 WHERE T1.Last_Transaction_Date  <  DATE_SUB(NOW(), INTERVAL 1 MONTH)"}
{"question": "What is the name and number of employees for all departments of the company?", "query": "SELECT T1.name,  T1.number FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.id"}
{"question": "Name and number of employees who have taken the lesson \"C#\"", "query": "SELECT T1.firstname,  T1.lastname,  T1.employeeid,  T1.lesson_id,  T1.lessons_taken,  T1.lessonname,  T1.lessonnumber FROM employee AS T1 JOIN lesson AS T2 ON T1.id  =  T2.employeeid JOIN lessons AS T3 ON T2.lesson_id  =  T3.id WHERE T3.lesson_name  =  \"C#\""}
{"question": "list the names of all customers whose name starts with 'J'", "query": "SELECT T1.customer_id,  T1.name FROM customer AS T1 WHERE T1.name  LIKE 'J%'"}
{"question": "What are the most common last names in the database?", "query": "SELECT DISTINCT last_name FROM people"}
{"question": "(about a different table): Give the name of the person who was married with John Williams", "query": "SELECT name_first,  name_last,  player_id FROM player AS T2 JOIN player_award AS T3 ON T2.player_id  =  (T3.player_id) WHERE T2.name_first  =  \"John\" AND T2.name_last  =  \"Williams\""}
{"question": "(a novel question, about a new table): What is the name of the movie starring John Cusack, in which his character gets fired?", "query": "SELECT T1.name FROM movie AS T1 JOIN character AS T2 ON T1.movie_id  =  T2.[movie_id] WHERE T2.name  =  \"John Cusack\""}
{"question": "In what year did the last shuttle fly?", "query": "SELECT year(T2.launch_date) FROM shuttle AS T1 JOIN launch AS T2 ON T1.shuttle_id  =  T2.shuttle_id"}
{"question": "What is the average salary of a student when he/she is a freshman?", "query": "SELECT avg(T1.salary) FROM Student AS T1 WHERE T1.year  =  \"Freshman\""}
{"question": "What are the names for all customers in the database who have a balance of at least 500?", "query": "SELECT T1.customer_name FROM customer AS T1 WHERE T1.balance  >=  500"}
{"question": "Find the name of customers who bought the vehicle with the license plate \"MGA\"", "query": "SELECT name FROM Customer WHERE license_plate  =  \"MGA\""}
{"question": "List all the names of cities in the states of \"New York\" and \"Louisiana\"", "query": "SELECT T1.city FROM City AS T1 JOIN State AS T2 ON T1.state_id  =  T2.state_id WHERE T2.name  =  \"New York\" AND T2.name  =  'Louisiana'"}
{"question": "Show all the values of a field that are greater than the average", "query": "SELECT T1.field_name,  T1.field_value FROM table_name AS T1 WHERE T1.field_value  >  (SELECT AVG(field_value) FROM table_name)"}
{"question": "Which is the largest city by population in the state of New Hampshire?", "query": "SELECT city_name,  population FROM city WHERE state_code  =  \"NH\" ORDER BY population DESC LIMIT 1"}
{"question": "What are the name of the actors who have never appeared in any movie?", "query": "SELECT T1.actor_id,  T1.actor_name FROM actor AS T1 JOIN movie_actor AS T2 ON T1.actor_id  =  T2._actor_id WHERE T2.actor_id  =  0"}
{"question": "What is the name and age of the person who had the most emails?", "query": "SELECT T1.name,  T1.\"age\" FROM email AS T1 WHERE T1.count(*)  =  1"}
{"question": "what is the name of the actor who wrote the musical \"Cats\"?", "query": "SELECT actor_name FROM actors WHERE actor_name  =  \"J.K. Rowling\""}
{"question": "What is the average score of students with science background?", "query": "SELECT AVG(score) FROM Student WHERE major  =  \"Science\""}
{"question": "What is the name and age of the customer who has the most number of transactions in 2002?", "query": "SELECT T1.customer_name,  T2.customer_age FROM customer AS T1 JOIN transactions AS T2 ON T1.cid  =  T2.cid WHERE T2.year  =  2002"}
{"question": "What are the names and job functions of all the executives of the company \"Apple Inc\"?", "query": "SELECT T1.first_name,  T1.last_name,  T1.title,  T1.job_function FROM executives AS T1 WHERE T1.company_name  =  \"Apple Inc\""}
{"question": "What is the id and name of the country where the customer with name \"Renee Garcia\" is living?", "query": "SELECT T1.country_name FROM customer_addresses AS T1 JOIN customers AS T3 ON T1.customer_id = T3.id WHERE T3.name = \"Renee Garcia\""}
{"question": "What is the average weight of the residents of the city 'Kigali'?", "query": "SELECT AVG(weight) FROM residents WHERE city = 'Kigali'"}
{"question": "What are the names, locations and products of the enzymes which has \"inhibitor\" interaction?", "query": "SELECT T1.enzyme_id,  T1.name,  T1.location,  T1.product_id,  T1.product_name,  T1.product_price,  T1.product_description,  T1.product_image,  T1.product_category_id,  T1.price_in_dollars,  T1.price_per_unit,  T1.product_quantity,  T1.product_unit_price,  T1.quantity_per_unit,  T2.name,  T2"}
{"question": "Show the average number of times that the students who live in Cambridge have participated in the quiz", "query": "SELECT T1.student_id,  T1.name_first,  count(*) FROM student AS T1 JOIN quiz AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(DISTINCT T2.quiz_id)  >=  1"}
{"question": "What is the average yearly salary of programmers who have completed at least 30 months?", "query": "SELECT AVG(salary) FROM programmers WHERE completed_months  >  30;"}
{"question": "How many employees are in the department of \"IT\"?", "query": "SELECT T1.employee_id FROM employees AS T1 WHERE T1.department_id  =  \"IT\""}
{"question": "What is the average age of a customer who made a purchase with a credit card in a month?", "query": "SELECT AVG(age) FROM customer WHERE credit_card_id  =  \"1\" AND MONTH(date_of_purchase)  =  \"1\""}
{"question": "What are the names, dates and ratings of all movies that have a director with the name \"David\"?", "query": "SELECT T1.title,  T2.director,  T3.rating FROM movie AS T1 JOIN director AS T2 ON T1.director_id  =  T2.id JOIN movie_rating AS T3 ON T1.movie_id  =  T3.movie_id WHERE T2.name  = 'David'"}
{"question": "\"What are the names and descriptions of aircraft\"", "query": "SELECT T1.aircraft_name,  T1.aircraft_description FROM aircraft AS T1"}
{"question": "What is the name and number of the account with the highest balance", "query": "SELECT T1.account_name,  T1.account_number FROM Accounts AS T1 WHERE T1.account_balance  =  (SELECT max(T2.account_balance) FROM Accounts AS T2)"}
{"question": "How many times did the car \"Toyota Camry\" win the race?", "query": "SELECT T1.car_name,  T1.car_model,  T1.car_year,  T1.car_make,  T1.car_speed,  T1.car_price,  T1.car_color,  T1.car_engine,  T1.car_driver,  T1.car_owner,  T1.car_type,  T1.car_dist,  T1.car_acc,  T1.car_power,  T1.car_weight,  T1.car_length,"}
{"question": "What are the id of the routes whose source & destination airports are in the United States", "query": "SELECT T1.route_id,  T1.source_airport_id,  T1.destination_airport_id FROM route AS T1 WHERE T1.source_airport_code  =  'JFK' AND T1.destination_airport_code  = 'LAX'"}
{"question": "What is the number of countries where people like to live?", "query": "SELECT count(*)  FROM countries WHERE people_like_to_live"}
{"question": "Show the number of students registered for CS211", "query": "SELECT COUNT(*) FROM student WHERE course_code  =  'CS211'"}
{"question": "What is the name and the population of the city with the highest number of movies?", "query": "SELECT T1.city_name,  T1.city_population FROM city AS T1 WHERE T1.city_population  >  ( SELECT T2.city_population FROM city AS  T2 WHERE T2.city_name  =  \"New York\" )"}
{"question": "What is the name, gender, and age of the student who was born in June?", "query": "SELECT T1.name,  T1.gender,  T1.age FROM students AS T1 WHERE T1.birth_date  =  '06/06/1990'"}
{"question": "(a novel question, about a table) What is the average temperature in Alaska?", "query": "SELECT AVG(temperature) FROM weather_station WHERE city_name  =  \"Anchorage\""}
{"question": "How many students have a first name that contains an a?", "query": "SELECT count(*) AS cnt FROM student WHERE first_name LIKE '%a%'"}
{"question": "What are the names and genders of all the students in this school?", "query": "SELECT T1.student_id,  T1.name,  T1.gender FROM students AS T1 WHERE T1.school_id  =  \"1\""}
{"question": "Who are the presidents of the U", "query": "SELECT T1.president_id FROM President AS T1 JOIN President_Cabinet AS T2 ON T1.president_id  =  T2.president_id WHERE T2.president_id  =  (SELECT president_id FROM President_Cabinet WHERE cabinet_id  =  \"Cabinet\")"}
{"question": "List all the product prices and their quantities", "query": "SELECT T1.product_name,  T1.quantity,  T1.price FROM product AS T1 WHERE T1.price  >  0"}
{"question": "What are the names, average price, and number of rooms for the hotels in the city of New York?", "query": "SELECT name,  avg(price),  count(*) FROM hotels WHERE city = 'New York'"}
{"question": "Find the first name and last name of the student who have the most friends?", "query": "SELECT T1.student_id,  T1.name_first,  count(*) FROM student AS T1 JOIN friend AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(T2.student_id)  =  1"}
{"question": "What is the first and last name of the customer that bought the book \"The Art of the Deal\"?", "query": "SELECT T1.first_name,  T1.last_name FROM customer AS T1 WHERE T1.book_id  =  \"The Art of the Deal\""}
{"question": "What are the countries that are not in the US?", "query": "SELECT country_name FROM countries WHERE country_name NOT IN (SELECT country_name FROM US)"}
{"question": "What are the details of the conference?", "query": "SELECT conference_id,  name,  start_date,  end_date,  venue,  description,  location,  faculty,  venue_id,  venue_name,  venue_address,  venue_city,  venue_state,  venue_zip,  venue_country,  venue_latitude,  venue_longitude,  venue_website,  venue_email,  venue_phone,  venue_fax,  venue_faculty,  venue_faculty_id,  venue_faculty_name,  venue_faculty_phone,"}
{"question": "(a question about a sql table) Show the employee id and name of the employee who last updated the table", "query": "SELECT T1.employee_id,  T2.employee_name FROM employees AS T1 JOIN employees_history AS T2 ON T1.id  = T2.id WHERE T2.update_time  =  (SELECT MAX(update_time) FROM employees_history)"}
{"question": "What is the name of the company that made the following phones:", "query": "SELECT name FROM Company WHERE phone_type  =  \"Mobile phone\""}
{"question": "Find the names and ids of all documents with a document type code BK", "query": "SELECT T1.document_type_code,  T1.document_id FROM documents AS T1 WHERE T1.document_type_id  =  \"BK\""}
{"question": "What are the names, and what are the ages, of all employees whose city of residence is \"New York\"?", "query": "SELECT T1.firstname,  T1.lastname,  T1.age FROM employee AS T1 WHERE T1.city  =  \"New York\""}
{"question": "Show the name of schools that have at least two players", "query": "SELECT T1.name FROM school AS T1 JOIN player_school AS T2 ON T1.school_id  =  T2._id WHERE T2.player_id  =  1"}
{"question": "What is the number for the field of study containing the most students?", "query": "SELECT count(*) AS \"count\" FROM students WHERE field_of_study = \"Computer Science\""}
{"question": "What is the total number of documents by type?", "query": "SELECT DISTINCT Document_Type,  count(*) FROM documents GROUP BY Document_Type"}
{"question": "What is the average number of seconds to run each of these queries?", "query": "SELECT AVG(DURATION) FROM (SELECT * FROM (SELECT * FROM (SELECT AVG(DURATION) AS DURATION FROM (SELECT * FROM (SELECT SUM(DURATION) AS D1 FROM (SELECT * FROM (SELECT DURATION FROM (SELECT * from (SELECT * FROM (SELECT * from (SELECT DURATION FROM ( SELECT * FROM (SELECT * FROM ( SELECT * FROM (SELECT DURATION from ( SELECT * FROM ( SELECT * FROM ( SELECT * from ( SELECT * FROM ( SELECT DURATION from ( SELECT * from ( SELECT * from ( SELECT DURATION"}
{"question": "What is the average of the students' gpa?", "query": "SELECT AVG(GPA) FROM students"}
{"question": "Which countries do not have any military bases?", "query": "SELECT DISTINCT Country FROM Country_Bases WHERE Country  =  'None'"}
{"question": "Find the names of the top 10 airlines", "query": "SELECT T1.airline_name,  T2.airline_id FROM airline AS T1 JOIN airline_history AS T2 ON T1.airline_id  =  T2.airline_id WHERE T1.airline_name  =  'Airline A' ORDER BY T1.airline_id DESC LIMIT 10"}
{"question": "What is the name, id and salary of the user whose current balance is 200?", "query": "SELECT T1.name,  T1.id,  T1.salary FROM users AS T1 WHERE T1.current_balance  =  200"}
{"question": "What are the names, ids, and positions of all students who had a grade lower than 75?", "query": "SELECT T1.fname,  T1.lname,  T1.id,  T1.position,  T1.grade FROM student AS T1 WHERE T1.grade  <  75"}
{"question": "(a novel question, about a table): How many students live in HKT or CHI?", "query": "SELECT COUNT(*),  city FROM student WHERE city  =  \"HKT\" OR city  =  \"CHI\""}
{"question": "What is the name, age, and major of the student who has the highest GPA?", "query": "SELECT name,  age,  major FROM student WHERE GPA  =  (SELECT MAX(GPA) FROM student);"}
{"question": "What are the names and ids of the customers who do not have a car?", "query": "SELECT T1.id,  T1.name FROM customer AS T1 JOIN customer_has_car AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_id IS NULL"}
{"question": "What are the names and id of the cities which are all the customers who reside in?", "query": "SELECT T1.city_name,  T1.city_id FROM city AS T1 WHERE T1.city_id  IN ( SELECT T2.city_id FROM city AS  T2 WHERE T2.city_name  =  \"New York\" )"}
{"question": "What are the names in the list of the names of the students who have an address in Los Angeles?", "query": "SELECT T1.name FROM students AS T1 JOIN address AS T2 ON T1.address_id  =  T2.address_id WHERE T2.city  =  \"Los Angeles\""}
{"question": "Find the names of the four people whose ages are in the range of 20 to 30", "query": "SELECT T1.name FROM person AS T1 WHERE T1.age  >=  20 AND T1.age  <=  30"}
{"question": "What is the first name and last name of the employee that is on the most number of time cards?", "query": "SELECT T1.first_name,  T1.last_name FROM Employee AS T1 JOIN Time_Card AS T2 ON T1.id  = T2.employee_id WHERE T2.time_card_id  =  (SELECT T3.time_card_id FROM Time_Card AS T3 WHERE T3.employee_id  =  T1.id ORDER BY T3.time_id DESC LIMIT 1)"}
{"question": "Find the names of all students who are enrolled in colleges that have student acceptance during tryouts, and in which state are those colleges?", "query": "SELECT T1.student_id,  T1.student_name,  T1.college_name,  T1.state_code FROM students AS T1 JOIN colleges AS T2 ON T1.college_id  =  T2.id WHERE T2.accept_tryouts  =  'Yes' AND T2.state_code  =  'NY'"}
{"question": "How many employees are there at the company? List the names and the number of employees who are male", "query": "SELECT T1.employee_id,  T1.employee_name,  T1.employee_gender,  T1.employee_age,  T1.employee_city,  T1.employee_state,  T1.employee_country,  T1.employee_phone,  T1.employee_email,  T1.employee_position,  T1.employee_salary,  T1.employee_start_date,  T1.employee_end_date,  T1.employer_name,  T1.employer.employer_"}
{"question": "What is the name and id of the employee who had the most hours?", "query": "SELECT T1.name,  T1.id FROM employee AS T1 WHERE T1.hours  >  (SELECT max(T2.hours) FROM employee AS T2)"}
{"question": "What are the minimum and maximum number of students who have the same first name?", "query": "SELECT MIN(T1.firstname),  MAX(T1.firstname) FROM student AS T1 GROUP BY T1.firstname HAVING count(*)  =  1"}
{"question": "Find the title, author and id of the album with the greatest number of songs", "query": "SELECT T1.title,  T1.author,  T1.id FROM album AS T1 JOIN song AS T2 ON T1.album_id  =  T2.album_id WHERE T2.num_songs  =  ( SELECT max(num_songs) FROM album )"}
{"question": "Get the questions about the students in the database", "query": "SELECT T1.question FROM students AS T1 WHERE T1.student_id  IN (SELECT T2.student_id FROM students AS T2 WHERE T2.student_id  =  \"T1.student_id\")"}
{"question": "(what is the name of the person who has the most number of publications)", "query": "SELECT T1.name FROM authors AS T1 JOIN publications AS T2 ON T1.id  =  T2.author_id ORDER BY T2.count DESC LIMIT 1"}
{"question": "What is the average number of flights per hour?", "query": "SELECT AVG(Flight_Number) FROM Flight_History"}
{"question": "How many times do the roller coaster go through the city?", "query": "SELECT count(*) AS c FROM trip WHERE start_station_id  =  \"1\" AND end_station_id  =  NULL"}
{"question": "Find the names of all students who have no friends", "query": "SELECT T1.student_first_name,  T1.student_last_name,  T1.student_id FROM students AS T1 JOIN friends AS T2 ON T1.student_id  =  T2.student_id WHERE T2.student_id  =  \"null\""}
{"question": "What are the courses that are taught by the person with an id of 4", "query": "SELECT T1.course_id,  T1.course_name FROM course AS T1 JOIN instructor AS T2 ON T1.id  =  T2.id WHERE T2.id  =  4"}
{"question": "Give the names of all products that have \"apple\" as a subcategory", "query": "SELECT name FROM products WHERE subcategory_name  =  \"apple\""}
{"question": "What are the names and id of customers who have an \"a\" in the first letter of their first name?", "query": "SELECT T1.id,  T1.name_first,  (SELECT T2.name_first FROM customer AS T2 WHERE T2.id  =  T1.customer_id AND T2.\"a\"  =  'a') AS \"a\" FROM customer AS T1"}
{"question": "What are the last names of students that have taken at least one course in Statistics?", "query": "SELECT T1.last_name FROM student AS T1 WHERE T1.course_id  IN ( SELECT T2.course_id FROM course AS T2 WHERE T2.course_name  =  \"Statistics\" )"}
{"question": "Who is the first person to be elected to the office of president of the united states?", "query": "SELECT T1.name,  T1.first_name,  T1.last_name,  T1.title,  T1.office_id,  T1.party_id,  T1.state_id,  T1.office_type,  T1.office_start_date,  T1.office_end_date,  T1.party_start_date,  T2.party_id,  T2.party_name,  T2.party_start_date, T2.party_end_date,  T2"}
{"question": "What is the average price of all products with product number less than 10?", "query": "SELECT AVG(price) FROM product WHERE product_id < 10"}
{"question": "What are the names and birthdays of all the students in the school?", "query": "SELECT T1.student_name,  T2.birthday FROM student AS T1 JOIN student_info AS T2 ON T1.id  = T2.id"}
{"question": "What is the maximum price of the product that has the lowest average price?", "query": "SELECT max(price),  avg(price) FROM product WHERE average_price  <  max(average_price)"}
{"question": "How many students did the course \"CS 101\" at USC last year?", "query": "SELECT T1.student_id FROM students AS T1 JOIN courses AS T2 ON T1.student_id  =  T2.\"CS 101\""}
{"question": "What is the name, title and number of the staff with more than one job?", "query": "SELECT T1.firstname,  T1.lastname,  T1.job_title,  T1.job_number FROM staff AS T1 WHERE T1.job_title  >  1"}
{"question": "What are the names, locations, and products of the enzymes which has \"inhibitor\" interaction?", "query": "SELECT T1.enzyme_id,  T1.name,  T1.location,  T1.product_id FROM enzyme AS T1 WHERE T1.product_id IN (SELECT T2.product_id FROM product AS T2 WHERE T2.name  =  \"inhibitor\")"}
{"question": "What are the names, genders and job titles of employees who are the only employees in their department?", "query": "SELECT T1.name,  T1.gender,  T1.job_title FROM employees AS T1 WHERE T1.department_id  =  \"1\""}
{"question": "The number of accounts with more than $1000 savings", "query": "SELECT COUNT(*) FROM account WHERE balance > 1000"}
{"question": "What is the average daily temperature in San Francisco?", "query": "SELECT AVG(T1.temperature) FROM Weather AS T1 WHERE T1.city  =  \"San Francisco\""}
{"question": "Show the names of all athletes with two or more medals", "query": "SELECT athlete_name FROM athletes WHERE medal_count  >  2"}
{"question": "What are the ids, names and average grades of all students from the last five years?", "query": "SELECT T1.id,  T2.name,  T3.grade FROM student AS T1 JOIN student_history AS T2 ON T1.id  =   T2.id JOIN student_grade_history AS T3 ON T2.id  =  T3.id WHERE T1.year  =  '2015' AND T2.year  =  '2015-2016' AND T3.year  =  '2015,2016'"}
{"question": "What is the name and id of the customer who has purchased the same item twice?", "query": "SELECT T1.cust_id,  T1.cust_name,  T1.custid FROM customer AS T1 WHERE T1.cust_id  =  (SELECT T2.cust_id FROM customer AS T2 WHERE T2.cust_id  = T1.cust_id AND T2.cust_name  =  T1.cust_id)"}
{"question": "How many students have a car, and which are the first, middle and last names of the students with a car?", "query": "SELECT T1.student_id,  T1.first_name,  'car' AS T2.type,  T1.last_address,  T1.middle_address,  T1.city,  T1.state,  T1.zip_code,  T1.country,  T1.phone,  T1.email,  T1.gender,  T1.birthday,  T1.address_type_code,  T1.address_street,  T1.address_city,  T1.address_state,"}
{"question": "How many of the top ten actors played the same role in the same year?", "query": "SELECT T1.actor_name,  T1.year,  T1.role_name FROM actor AS T1 JOIN role AS T2 ON T1.actor_id  =  T2.actor_id WHERE T2.role_id  =  T1.role_id AND T1.year  =  (SELECT max(year) FROM actor WHERE actor_id = T1.actor_id)"}
{"question": "What are the students' names and ages and their grades?", "query": "SELECT T1.name,  T1.age,  T1.grade FROM student AS T1"}
{"question": "Who are the two students who are still studying at the University of Amsterdam?", "query": "SELECT T1.student_name,  T2.student_name FROM student AS T1 JOIN student AS T2 ON T1.student_id  =  T2.student_id WHERE T1.student_id  <>  T2.student_id"}
{"question": "What are the names, gender, and address of all students with an address in Mountain View, California?", "query": "SELECT T1.name,  T1.\"gender\",  T1.address FROM student AS T1 WHERE T1.address  =  \"Mountain View, California\""}
{"question": "Find the name of all students in Florida", "query": "SELECT T1.student_id FROM students AS T1 WHERE T1.state  =  'Florida'"}
{"question": "What is the average age of the members in \"Tennis Club\"?", "query": "SELECT AVG(age) FROM member_of_club WHERE clubname  =  \"Tennis club\""}
{"question": "What is the name and price of all products?", "query": "SELECT T1.product_name,  T2.price FROM products AS T1 JOIN products AS T2 ON T1.product_id  =  T2._id"}
{"question": "What is the age of the person who has the lowest IQ in the world?", "query": "SELECT T1.age FROM Person AS T1 WHERE T1.IQ  =  (SELECT min(T2.IQ) FROM Person AS T2)"}
{"question": "Find the average of the total amount of money spent by all employees who live in the same city as the customer named \"Dimitri\"", "query": "SELECT T1.city,  T1.total_amount_purchased FROM employees AS T1 JOIN customers_addresses AS T2 ON T1.employee_id  =  T2.employee_id WHERE T2.customer_id  =  \"Dimitri\""}
{"question": "How many employees who have sales of 10,000 or more are female?", "query": "SELECT T1.firstname,  T1.lastname,  T1.salary,  T1.gender,  T1.hire_date,  T1.hire_rate,  T1.dept_id,  T1.job_id,  T1.salary_type,  T1.salary  FROM employee AS T1 WHERE T1.salary  >  10000 AND T1.gender  =  'female'"}
{"question": "Find the number of students who have no siblings", "query": "SELECT count(*)  FROM students WHERE student_id  =  (SELECT student_id FROM students WHERE student_id  =   (SELECT student_id FROM students  WHERE student_id  =   (select student_id from students  where student_id  =   ( select student_id from students  where (student_id  =   (select max(student_id) from students)))))"}
{"question": "What is the average daily traffic in all cities in California?", "query": "SELECT AVG(T1.Traffic) FROM city AS T1 JOIN traffic AS T2 ON T1.city_id  =  T2.city_id"}
{"question": "List the names of all the states in a decreasing order of their size", "query": "SELECT T1.state_name FROM state AS T1 WHERE T1.size  >  ( SELECT min(size) FROM state AS T2 WHERE T2.size  >  T1.size )"}
{"question": "What are the names and emails of all employees who have email address starting with \"bruce\"", "query": "SELECT T1.name,  T1.email FROM employees AS T1 WHERE T1.email  LIKE \"%bruce%\""}
{"question": "How many students are there in the country of Nigeria?", "query": "SELECT count(*) AS c FROM student WHERE country_id  =  \"Nigeria\""}
{"question": "Find the names and ages of instructors who teach classes from \"University of Chicago\"", "query": "SELECT T1.first_name,  T1.last_name,  T1.age FROM instructors AS T1 JOIN classes AS T2 ON T1.instructor_id  =  T2.[instructor_id] WHERE T2.course_code  =  \"University of Chicago\""}
{"question": "What are the names, ids and salaries of all employees with a grade of 90 or above?", "query": "SELECT T1.employeeid,  T1.firstname,  T1.lastname,  T1.salary,  T1.grade FROM employees AS T1 WHERE T1.grade  =  90 ORDER BY T1.grade ASC"}
{"question": "What are the top 5 countries by volume of transactions and how many do they have? (not counting the U", "query": "SELECT T1.country_name,  T1.country_code,  T1.country_population,  T1.country_area,  T1.country_currency,  T1.country_is_capital,  T1.country_capital_code,  T1.population_density,  T1.country_gdp_nominal_exchange_rate,  T1.country_languages,  T1.country_time_zone,  T1.country_latitude,  T1.country_longitude,  T1.country AS country"}
{"question": "How many students have a last name that contains the word \"son\"?", "query": "SELECT T1.last_name FROM students AS T1 WHERE T1.last_name LIKE '%son%'"}
{"question": "Which students have taken a course on Artificial Intelligence?", "query": "SELECT T1.course_id,  T1.course_name FROM course AS T1 WHERE T1.course_id  IN (SELECT T2.course_id FROM course AS T2 WHERE T2.course_name  =  \"AI\")"}
{"question": "How many students are in the database?", "query": "SELECT count(*) AS \"number of students\" FROM student;"}
{"question": "What is the total amount of money paid for each product?", "query": "SELECT T1.product_id,  T1.price,  T1.quantity FROM product AS T1 WHERE T1.price  >  0"}
{"question": "Find out 5 customers who most recently bought something", "query": "SELECT T1.id,  T1.name_first,  count(*) FROM customer AS T1 JOIN order_item AS T2 ON T1.id  =  T2.customer_id GROUP BY T1.id ORDER BY count(*) DESCRIBE;"}
{"question": "What are the last names of the faculty in the building named \"Barton\"?", "query": "SELECT T1.last_name FROM faculty AS T1 JOIN building AS T2 ON T1.faculty_id  =  T2._id WHERE T2.name  =  \"Barton\""}
{"question": "Find out the top 10 customers by overall profit", "query": "SELECT T1.name,  T1.total_profit FROM customers AS T1 ORDER BY T1.total_profit DESC LIMIT 10"}
{"question": "What are the top 10 customers' full names by total number of orders and their first name only, grouped by order number and how many orders did they make", "query": "SELECT T1.cust_id,  T1.cust_name,  T1.custo_order,  T1.custp_order,  T1.total_order,  T1.first_name,  count(*) AS cnt FROM customer AS T1 GROUP BY T1.cust_id HAVING T1.total_order  >  0 AND T1.cust_name  LIKE  '%' + T1.cust_name + '%' ORDER BY T1.total_order DESC LIMIT 10"}
{"question": "What are the ids and first names of all students who are not in the following courses: \"History of the Middle Ages\", \"Principles of Economics\", or", "query": "SELECT T1.id,  T1.first_name FROM students AS T1 WHERE NOT EXISTS (SELECT T2.id,  T2.first_name FROM courses AS T2 WHERE T2.id  =  T1.course_id AND T2.name  =  \"History of the Middle Ages\" OR T2.id  =  \"Principles of Economics\" OR T2.id  IN (SELECT T3.id,  T3.first_name FROM courses AS t3 WHERE t3.id  =  T1.\"course_id\" AND t3"}
{"question": "What is the name and email address of the customer with the highest salary?", "query": "SELECT customer_id,  customer_name,  customer_email FROM customer ORDER BY customer_salary DESC LIMIT 1"}
{"question": "Find the greatest number of customers who bought the same items as the previous day", "query": "SELECT T1.customer_id,  T1.product_id,  T1.quantity,  T1.price,  T1.date_added,  T1.date_modified,  T1.total_price,  T1.total_quantity,  T1.total_amount,  T1.total_value,  T1.total_discount,  T1.total_tax,  T1.total_shipping,  T1.total_vat,  T1.total_total,  T1.total_date_added,"}
{"question": "How many minutes did the marathon last?", "query": "SELECT T1.time FROM marathon AS T1 WHERE T1.time  >  0"}
{"question": "What are the names, and their weights, of the different types of cereals sold at the supermarket?", "query": "SELECT T1.name,  T2.weight FROM cereal AS T1 JOIN cereal_type AS T2 ON T1.type_id  =  T2.type_id WHERE T1.name  =  \"Cornflakes\""}
{"question": "What is the name, id, and the number of followers for each of the social network users?", "query": "SELECT name, id, count(*) FROM users WHERE id IN (SELECT user_id FROM followers WHERE follower_id IN (SELECT user_id FROM friends WHERE friend_id IN (SELECT user_ID FROM users WHERE user_id IN (SELECT user_Id FROM friends WHERE friend_id IN(SELECT user_id FROM users WHERE user_id IN(SELECT user_Id FROM friends WHERE friendship_id IN(SELECT user_ID FROM users WHERE id IN(SELECT user_id FROM friends WHERE friendship_id IN (SELECT user_name FROM users WHERE id IN(SELECT id FROM users WHERE id IN(SELECT name"}
{"question": "What are the names in alphabetical order of all the students who are members of the club \"The Biggest Loser\" and are students?", "query": "SELECT T1.student_name FROM student AS T1 WHERE T1.club_id  =  'The Biggest Loser' AND T1.student_id  =  '1' ORDER BY T1.student_name"}
{"question": "Find the names of students who have enrolled in more than one course", "query": "SELECT T1.name FROM student AS T1 JOIN course AS T2 ON T1.student_id  =  T2._id WHERE T2.course_id  =  \"1\" AND T2.course_id  <>  \"2\""}
{"question": "What are the names and ages of the pilots who have won the most number of times among only the pilots who are younger than 30?", "query": "SELECT T1.name,  T1.age FROM pilots AS T1 WHERE T1.age  <  30 GROUP BY T1.name HAVING count(*)  =  1"}
{"question": "Find the customer id and id of the product of the customer who has the highest amount of sales", "query": "SELECT T1.customer_id,  T2.product_id FROM customer_orders AS T1 JOIN products AS T2 ON T1.product_id  =  T2.product_id WHERE T1.order_total  =  (SELECT MAX(T3.order_total) FROM customer_orders AS T3)"}
{"question": "What are the names and salaries of those who have the most total points?", "query": "SELECT T1.first_name,  T1.last_name,  T1.salary FROM employee AS T1 JOIN (SELECT first_name,  last_name,  sum(points) AS total_points FROM employee_points GROUP BY first_name,  last_names) AS T2 ON T1.first_name  =  T2.first_name AND T1.last_name  =  T2.last_name GROUP BY T1.first_name, T1.last_name,  total_points ORDER BY total_points DESC"}
{"question": "Find the name of the university where the number of students is over 10000", "query": "SELECT T1.name FROM university AS T1 WHERE T1.students_count  >  10000"}
{"question": "What is the average age for different job title? (this could be rewritten as \"What is the average age of people who have jobs as: janitor,", "query": "SELECT AVG(age) FROM employee WHERE job_title IN ('janitor', 'engineer', 'programmer','manager', 'doctor', 'teacher', 'lawyer','scientist', 'engineer', 'engineer', 'engineeer', 'engineer', 'engineerer', 'engineer', 'engineers', 'engineer', 'engineering', 'engineer', 'engineered', 'engineer', 'engineere', 'engineer', 'engineery', 'engineer', 'engineership', 'engineer', 'engineert', 'engineer', 'engineermen"}
{"question": "Find the names of all players who participated in both tournaments", "query": "SELECT T1.name FROM player AS T1 JOIN tournament AS T2 ON T1.id  =  T2.id WHERE T2.tournament_id  =  1 AND T2.tournament_id = T1.id"}
{"question": "Show the name of all the songs that contain the letter 'z'", "query": "SELECT name FROM song WHERE name LIKE '%z%'"}
{"question": "List the names of students with first name and last name or first name and last initial only", "query": "SELECT T1.lastname,  T1.firstname FROM student AS T1 WHERE T1.firstname  LIKE '%' OR T1.lastname  LIKE '%'"}
{"question": "What are the id numbers of all employees who work in the same department?", "query": "SELECT T1.department_id FROM employee AS T1 JOIN employee_department_assignments AS t2 ON T1.employee_id  =  t2.employee_id WHERE T1.department_id = t2.department_id"}
{"question": "List the names of the students in the second grade with the highest grades", "query": "SELECT T1.student_name,  T1.grade FROM students AS T1 WHERE T1.grade  >  (SELECT T2.grade FROM students AS T2 WHERE T2.grade  >  T1.grade)"}
{"question": "What are the names and titles of the employees in the 'T", "query": "SELECT T1.name,  T1.title FROM employee AS T1 JOIN department AS T3 ON T1.dept_id  =  T3.id WHERE T3.dept_name  = 'T'"}
{"question": "What are the names, number of children, and first names of all students who were born during the year 1998?", "query": "SELECT T1.first_name,  T1.last_name,  T1.number_of_children FROM students AS T1 WHERE T1.birth_year  =  '1998'"}
{"question": "What is the name and capacity of the hotel with the most beds?", "query": "SELECT hotel_name,  beds FROM Hotels WHERE capacity  =  \"10\""}
{"question": "What are the names in the database?", "query": "SELECT T1.name FROM people AS T1 WHERE T1.first_name  =  \"John\""}
{"question": "How many customers have the phone number (555) 555-5555?", "query": "SELECT T1.phone_number FROM customers AS T1 WHERE T1.phone_number  =  '555-555-5555'"}
{"question": "What are the names, city and id of all the people who are in all the classes with the highest average age?", "query": "SELECT T1.name,  T2.city,  T3.id FROM student AS T1 JOIN class AS T2 ON T1.class_id  =  T2.class_id JOIN student_class AS T3 ON T1.id  =  T3.id WHERE T2.average_age  =  (SELECT MAX(average_age) FROM class) AND T3.id  =  (SELECT T4.id FROM class AS T4 WHERE T4.average_age  =  T2.average_age)"}
{"question": "What are the names, ids, and genders of the artists who are on the cover of the album \"Shoot the Moon\"?", "query": "SELECT name,  id,  gender FROM artist WHERE album_id = \"Shoot the Moon\""}
{"question": "Find the total number of pages of all documents", "query": "SELECT count(*)  FROM documents"}
{"question": "What is the full name of the person who is the oldest of the people who are working in the company?", "query": "SELECT T1.name FROM Person AS T1 JOIN Person_Work AS T2 ON T1.id  =  T2.person_id WHERE T2.company_id  =  '1' AND T1.age  =  'oldest'"}
{"question": "What are the names and id numbers of the doctors who are currently on call?", "query": "SELECT T1.name,  T1.id FROM doctor AS T1 WHERE T1.on_call"}
{"question": "show me the first and last name of student who is the first one to be enrolled in the class", "query": "SELECT T1.first_name,  T1.last_name FROM students AS T1 JOIN student_class_enrollment AS T2 ON T1.student_id  =  T1.student_id WHERE T2.class_id  =  '1' ORDER BY T1.first_name, T1.last_name"}
{"question": "What is the name of the store that sells the most clothing and shoes?", "query": "SELECT name FROM store WHERE sales_volume  =  (SELECT max(sales_volume) FROM store)"}
{"question": "What are the ids and names of medicines in descending order of the frequency that they can interact with?", "query": "SELECT T1.id,  T1.name FROM medicine AS T1 JOIN interactions AS T2 ON T1.id  =  T2.medicine_id ORDER BY T1.frequency DESC"}
{"question": "(a novel question, about a database table)", "query": "(the sql query to answer the query)"}
{"question": "What is the name and age of the person who is the oldest in the family?", "query": "SELECT T1.name,  T1.\"age\" FROM family AS T1 WHERE T1.age  =  ( SELECT max(T2.age) FROM family AS T2 )"}
{"question": "What is the id number of the customer named \"Karen Davis\"?", "query": "SELECT customer_id FROM customers WHERE customer_name  =  \"Karen Davis\""}
{"question": "What is the total sales for the items that have the price between 1000 and 1500?", "query": "SELECT T1.price,  T2.total_sales FROM item AS T1 JOIN item_price AS T2 ON T1.item_id  =  T2.item_id WHERE T1.price  =  (SELECT MIN(T3.price) FROM item AS T3 WHERE T3.price  >  T1.price) AND T2.price  >  T1.price"}
{"question": "\"What is the title, phone and hire data of Nancy Edwards?\"", "query": "SELECT T1.title,  T2.phone,  T3.hire_date FROM employees AS T1 JOIN employees AS T2 ON T1.manager_id  =  T2.manager_id JOIN employees AS T3 ON T1.employee_id  =  T3.employee_id WHERE T1.employee_id !=  T2.employee_id AND T1.employee_id  ==  T3.employee_id"}
{"question": "What is the first names of customers who are younger than average?", "query": "SELECT name FROM Customer WHERE age  <  (SELECT AVG(age) FROM Customer)"}
{"question": "What are the names, age, and gpa of the students with the most money?", "query": "SELECT T1.student_name,  T1.student_age,  T1.student_gpa FROM student AS T1 WHERE T1.student_gpa  >  0.0;"}
{"question": "What are the names, titles, and salaries of the people currently working in the accounting department?", "query": "SELECT T1.name,  T1.title,  T1.salary FROM employees AS T1 WHERE T1.department_id  =  1"}
{"question": "what are the ids, names and g", "query": "SELECT T1.id,  T1.name,  T2.g"}
{"question": "Find the number of documents for each city in the US", "query": "SELECT city,  count(*) FROM documents GROUP BY city"}
{"question": "Name of a city", "query": "SELECT city_name FROM cities WHERE city_name  =  \"New York\""}
{"question": "What is the name for the place where the office is located?", "query": "SELECT T1.city_name FROM office AS T1 WHERE T1.office_id  =  '1'"}
{"question": "What is the name and price of all products that are not toys?", "query": "SELECT T2.Product_Name,  T2.Price FROM Products AS T1 JOIN Products AS T3 ON T1.product_id = T3.product_id WHERE T3.product_id NOT IN (SELECT product_id FROM toy_product)"}
{"question": "What is the last question of the exam?", "query": "SELECT T1.question_id FROM Exam_Questions AS T1 WHERE T1.question_text  =  \"What is the last question of the exam?\""}
{"question": "What is the name that has the highest total amount of money?", "query": "SELECT T1.Name FROM Accounts AS T1 JOIN Account_Transactions AS T2 ON T1.Account_ID  =  T2.Account_ID WHERE T2.Amount  >  \"$amount\""}
{"question": "What are the names that appear first in the table?", "query": "SELECT T1.name FROM students AS T1 WHERE T1.name  =  (SELECT T2.name FROM students AS T2 WHERE T2.name  =  T1.name ORDER BY T2.name ASC LIMIT 1)"}
{"question": "Find the name, first and last name, and address of the student with the highest average number of absences", "query": "SELECT T1.name,  T1.first_name,  T1.last_name,  T1.address FROM student AS T1 WHERE T1.absence_count  =  (SELECT max(absence_count) FROM student)"}
{"question": "What are the names, genders and locations of all the staff of the store with id \"11\"?", "query": "SELECT T1.Name,  T1.Gender,  T1.Location FROM staff AS T1 WHERE T1.store_id  =  \"11\""}
{"question": "What are the names and positions of all employees sorted by position, excluding the HR department?", "query": "SELECT T1.first_name,  T1.last_name,  T1.position,  T1.department_id FROM employee AS T1 ORDER BY T1.position ASC, T1.department_id ASC"}
{"question": "How many customers do the companies A and B have?", "query": "SELECT customer_id FROM customers WHERE company_id  =  \"A\" OR company_id  =  \"B\""}
{"question": "What is the first name of the employee who manages the most number of people?", "query": "SELECT T1.name FROM employee AS T1 JOIN employee_manager AS T2 ON T1.id  =  T2.employee_id WHERE T2.manager_id  =  (SELECT id FROM employee_manager WHERE employee_id  =  T1)"}
{"question": "What are the first and last names, birth and death years, and death causes of the scientists who died in 2016?", "query": "SELECT T1.first_name,  T1.last_name,  T1.birth_year,  T1.death_year,  T1.cause_of_death FROM scientist AS T1 WHERE T1.death_year  =  2016"}
{"question": "What are the names, and the number of people that are, of all students living in the each state?", "query": "SELECT T1.state_name,  T1.count(*) FROM student AS T1 JOIN state AS T2 ON T1.state_id  =  T2._id GROUP BY T1.state_name"}
{"question": "What is the name, age, and sex of the teacher who has the highest percentage of students taking calculus?", "query": "SELECT T1.name,  T1.age,  T1.sex FROM teachers AS T1 JOIN students AS T2 ON T1.teacher_id  =  T2.[id] WHERE T2.major  =  \"Calculus\" AND T2.percentage  >  T1.percentage"}
{"question": "How much money did Lucas Mancin spend?", "query": "SELECT SUM(amount) FROM transactions WHERE id  =  \"Lucas Mancin\""}
{"question": "What are the names, last names, and ids of the employees who were born in May?", "query": "SELECT T1.first_name,  T1.last_name,  T1.id FROM employees AS T1 WHERE T1.birth_date  =  \"May\";"}
{"question": "Describe the format of the table \"users\" in detail", "query": "SELECT T1.name,  T2.password,  T3.email,  T4.phone,  T5.address,  T6.city,  T7.state,  T8.zip,  T9.country,  T10.gender,  T11.birthday,  T12.age,  T13.password_hash,  T14.password_salt,  T15.password_hashed,  T16.password_hashed_salt,  T17.password_hashed_salt_encrypted,  T18.password"}
{"question": "Find the department with the most students", "query": "SELECT department_id,  count(*) FROM student GROUP BY department_id ORDER BY count(*)  DESC LIMIT 1"}
{"question": "Find the names of all songs that have a \"G\" as the initial letter of their title", "query": "SELECT T1.song_name FROM song AS T1 WHERE T1.title  LIKE '%G%'"}
{"question": "List the names of all products", "query": "SELECT product_name FROM products"}
{"question": "(a novel question, about a more different table) What are the names of the three restaurants that have the most number of customers?", "query": "SELECT T1.name FROM restaurant AS T1 JOIN customer AS T2 ON T1.restaurant_id  =  T2.\"id\" GROUP BY T1.name ORDER BY count(*) DESC"}
{"question": "Find the average price of all products with manufacture code \"8\"", "query": "SELECT AVG(price) FROM products WHERE code  =  '8'"}
{"question": "What are the first and last name of the customer named \"C", "query": "SELECT T1.first_name,  T1.last_name FROM customer AS T1 WHERE T1.customer_id  =  \"C\""}
{"question": "What is the name, age, and gender of each of these people?", "query": "SELECT T1.name,  T1.age,  T1.gender FROM people AS T1 WHERE T1.id  IN (SELECT T2.id FROM people AS T2 WHERE T2.name  =  \"John Doe\" AND T2.age  =  \"25\" AND T2.gender  =  \"Male\")"}
{"question": "List all the products on the menu of the restaurant", "query": "SELECT T1.product_name,  T1.price,  T1.quantity FROM menu AS T1 JOIN product AS T2 ON T1.product_id  =  T2_id WHERE T2.name  = 'Pizza'"}
{"question": "What is the name that John Smith has in the year 1990?", "query": "SELECT T1.name FROM students AS T1 WHERE T1.stuid  = 'Smith' AND T1.year  =  1990"}
{"question": "What are all the names of the employees who do not have a class senator?", "query": "SELECT name FROM employees WHERE employee_class  =  \"Senator\" AND employee_id NOT IN (SELECT employee_id FROM class_senate);"}
{"question": "What is the name and type of the school in the US?", "query": "SELECT T1.school_name,  T1.school_type FROM school AS T1 WHERE T1.country_code  =  'US'"}
{"question": "What is the name of the country that has the highest average number of students?", "query": "SELECT T1.country_name FROM country AS T1 JOIN country_students AS T2 ON T1.country_id  =  T2.[country_id] WHERE T2.avg_students  =  \"highest\""}
{"question": "Find the first names of all students who have never taken any English language course", "query": "SELECT T1.first_name FROM students AS T1 WHERE T1.course_id  =  0"}
{"question": "What are the names and last names of all the people in the directory for the university of alaska?", "query": "SELECT T1.last_name,  T1.first_name FROM people AS T1 JOIN directory AS T2 ON T1.id  =  T2.person_id WHERE T2.university_id  =  \"University of Alaska\""}
{"question": "What are the ids and state codes of all the vehicles with \"Maintenance\" as a cost center?", "query": "SELECT T1.id,  T1.state_code FROM vehicle AS T1 WHERE T1.cost_center  =  \"Maintenance\""}
{"question": "What are the names and number of seats of all the flights that begin in Houston and end in San Antonio?", "query": "SELECT T1.flight_name,  T1.seats FROM flight AS T1 WHERE T1.origin  =  \"Houston\" AND T1.destination  =  \"San Antonio\""}
{"question": "How many students are included in the group that has the highest average?", "query": "SELECT T1.student_id,  T1.grade_level,  T1.grade_point,  T1.grade_year,  T1.grade_average FROM students AS T1 JOIN grades AS T2 ON T1.grade_level  =  T2.grade_level WHERE T2.grade_average  >  (SELECT T3.grade_average FROM grades AS T3 WHERE T3.grade_level  =  \"grade_level\")"}
{"question": "What is the average height of all the employees at a company with the name of \"Hewlett-Packard\"?", "query": "SELECT AVG(height) FROM employee WHERE company_name  =  'Hewlett-Packard'"}
{"question": "How many students are there? List all those that had at least one accident", "query": "SELECT COUNT(*) AS \"Number of students\" FROM student"}
{"question": "What are the names, ages and genders of the employees who are over 60 years old?", "query": "SELECT name,  age,  gender FROM employees WHERE age  >  60"}
{"question": "(a question about a sql table) What is the name of the track that has the highest average score?", "query": "SELECT track_name FROM track_score WHERE track_name  =  'The_Hills'"}
{"question": "Find the names of people in the USA with a nickname of \"Steve\"", "query": "SELECT name FROM Person AS T1 WHERE T1.name  =  \"Steve\""}
{"question": "What are the names and ids of all the songs in a playlist? (assume that the songs are stored in a table of the same name)", "query": "SELECT T1.name,  T1.id FROM playlist AS T1 JOIN song AS T2 ON T1.id  =  T2.song_id"}
{"question": "What are the names (first and last) and nationality (home country) of all employees?", "query": "SELECT T1.first_name,  T1.last_name,  T1.nationality FROM employees AS T1"}
{"question": "What are the names and prices of products from \"Titanic\" movie?", "query": "SELECT T1.product_name,  T1.price FROM product_table AS T1 WHERE T1.movie_id  =  \"Titanic\""}
{"question": "What are the id, name, and age of the two students in the photo?", "query": "SELECT T1.id,  T1.name,  T1.age FROM students AS T1 JOIN photos AS T2 ON T1.student_id  =  T2.student_id WHERE T2.id  =  (SELECT id FROM students WHERE name  =  \"John Smith\" AND age  =  \"25\")"}
{"question": "What are the details of the customer whose id is '4'?", "query": "SELECT T1.id,  T1.name,  T1.address,  T1.city,  T1.state,  T1.zip,  T1.phone,  T1.email,  T1.fax,  T1.credit_card,  T1.credit_limit,  T1.credit_status,  T1.credit_type,  T1.credit_balance,  T1.credit_date,  T1.credit_due_date,  T1.account_type,  T1.account_status,"}
{"question": "Find the names of the students taught by OTHA MOON", "query": "SELECT T1.name FROM students AS T1 JOIN teaches AS T3 ON T1.student_id = T3.student_id WHERE T3.teacher_id = \"OTHA MOON\""}
{"question": "What is the average age of employees who have a department of Computer Science?", "query": "SELECT AVG(T1.age) FROM employees AS T1 JOIN department AS T2 ON T1.department_id  =  T2.department_id WHERE T2.department_name  =  \"Computer Science\""}
{"question": "What are the names and ids of all the products that have a price between $3 and $5", "query": "SELECT T1.name,  T1.id FROM product AS T1 WHERE T1.price BETWEEN 3 AND 5;"}
{"question": "Find the list of all records in the table \"professor\"", "query": "SELECT * FROM professor"}
{"question": "how many sports are there?", "query": "SELECT DISTINCT sport FROM Sport"}
{"question": "Show the name of the faculty member who is a doctor of philosophy in physics", "query": "SELECT T1.first_name,  T1.last_name,  T1.title,  T1.department_id,  T1.faculty_id,  T1.office_id,  T1.phone_number,  T1.email_address,  T1.address_id,  T1.city,  T1.state,  T1.zip,  T1.country,  T1.country_code,  T1.gender,  T1.age,  T1.birth_date,  T1."}
{"question": "What is the average profit value of a product?", "query": "SELECT avg(profit) FROM product"}
{"question": "Find the names of all the countries with the oldest and youngest capital", "query": "SELECT T1.Name,  T1.Capital FROM country AS T1 JOIN capital AS T2 ON T1.country_id  =  T2.country_id WHERE T2.age  =  ( SELECT min(T3.age) FROM capital AS T3 WHERE T3.country_id  =  'T1' ) AND T2.age  =  'T1'"}
{"question": "What are the names, forenames and surnames of people who have a university degree?", "query": "SELECT T1.name,  T1.forename,  T1.surname FROM students AS T1 WHERE T1.degree  =  'university'"}
{"question": "What is the name, age and nationality of the player with first name \"Cristian\" and last name \"Teoh\"?", "query": "SELECT name,  age,  nationality FROM player WHERE first_name  =  \"Cristian\" AND last_name  =  \"Teoh\""}
{"question": "Find the names of all the companies that have more than 1000 employees", "query": "SELECT company_name FROM company WHERE count(*)  >=  1000"}
{"question": "What is the average number of customers who buy the same item?", "query": "SELECT AVG(count(*)), AVG(count(DISTINCT customer_id)) FROM Orders WHERE customer_id  =  \"1\""}
{"question": "Find all the names of customers who live in the states of the United States", "query": "SELECT customer_id,  customer_first_name,  customer_last_name,  state_id FROM customers WHERE state_id IN (SELECT state_id FROM states)"}
{"question": "(Find the number of companies created by Andy)", "query": "SELECT count(*) from company WHERE company_name  =  \"Andy\""}
{"question": "What are the names, and first names of all employees who have an address with a zipcode of 90209", "query": "SELECT T1.first_name,  T1.name FROM employees AS T1 JOIN address AS T2 ON T1.employee_id  =  T2._id WHERE T2.zipcode  =  '90209'"}
{"question": "What is the name and title of the person who has served as a representative of the company in the year 2011?", "query": "SELECT name,  title FROM Person WHERE Representative_ID  =  \"1\""}
{"question": "Which customers have both the status \"On Road\" and \"Shipping\"?", "query": "SELECT T1.customer_id FROM Customer_Status AS T1 JOIN Customer_Status_History AS T2 ON T1.status_id  =  T2.status_id WHERE T2.status_id  =  \"On Road\" AND T2.status_id  IN  ( \"Shipping\" )"}
{"question": "Find the names of customers who bought the most expensive item", "query": "SELECT T1.customer_name,  T1.total_price FROM customer AS T1 JOIN order AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.total_price  >  (SELECT max(T3.total_price) FROM order AS T3)"}
{"question": "What are the names, average price, and number of sales of products having brand \"Zara\" or \"Oysho\"?", "query": "SELECT T1.name,  T1.price,  T1.quantity,  T1.brand FROM product AS T1 WHERE T1.brand IN (\"Zara\", \"Oysho\")"}
{"question": "Find the number of students in the class named \"Physics 101\"", "query": "SELECT count(*)  FROM students AS T1 JOIN class AS T2 ON T1.class_id  =  T2.class_id WHERE T2.class_name  =  \"Physics 101\""}
{"question": "Find the number of persons who have at least one contact with an entity named 'Sophia'", "query": "SELECT T1.person_id,  T1.name_first,  count(*) FROM person AS T1 JOIN contact AS T2 ON T1.person_id  =  T2.person_id AND T2.contact_type  =  'Sophia' GROUP BY T1.person_id HAVING count(T2.contact_type)  >=  1"}
{"question": "List the names of all students who scored a 5", "query": "SELECT T1.name FROM student AS T1 WHERE T1.score  =  5"}
{"question": "How many people have a BMI between 25 and 29?", "query": "SELECT T1.name,  T1.height,  T1.weight,  T1.bmi FROM people AS T1 WHERE T1.height  >  (SELECT min(height) FROM people WHERE weight  >  (SELECT min(weight) FROM people WHERE bmi  >  (SELECT min(bmi) FROM people WHERE height  >  (SELECT min(Height) FROM people WHERE weight  > (SELECT min(weight) FROM people)))))"}
{"question": "When did the company begin to offer a product?", "query": "SELECT T1.date_of_start FROM product AS T1 WHERE T1.name  =  \"The product\""}
{"question": "What are the names (first and last) of the employees who live in a city with city code 'OAK'?", "query": "SELECT T1.first_name,  T1.last_name FROM employees AS T1 JOIN city AS T2 ON T1.city_id  =  T2.city_id WHERE T2.city_code  =  'OAK'"}
{"question": "Find the name of a customer with a credit card with card number '87238723872387238'", "query": "SELECT name FROM Customer WHERE card_number  =  \"872387238723872387\""}
{"question": "Find the number of customers who ordered only one product", "query": "SELECT COUNT(*) FROM customer_orders WHERE customer_id  =  (SELECT customer_id FROM customer_orders WHERE product_id  =  (SELECT product_id FROM products WHERE product_name  =  \"Coffee\") )"}
{"question": "What are the names, email addresses, and phone numbers of all the customers?", "query": "SELECT T1.cust_name,  T1.cust_email,  T1.cust-phone FROM customer AS T1"}
{"question": "Find the total number and average age of the employees", "query": "SELECT SUM(age),  AVG(age) FROM employees"}
{"question": "What were the names of the five students who were suspended from the school this year?", "query": "SELECT T1.student_name FROM students AS T1 JOIN suspension AS T2 ON T1.student_id  =  T2.student_id WHERE T2.year  =  \"2013\""}
{"question": "What is the number and name of the product whose price is the largest?", "query": "SELECT T1.product_id,  T1.price FROM products AS T1 WHERE T1.price  =  (SELECT MAX(T2.price) FROM products AS T2)"}
{"question": "Find the numbers of the employees who have not been in office for at least a year", "query": "SELECT T1.employee_id,  T1.first_name,  T1.last_name,  T1.office_id,  T1.office_location,  T1.office_hours,  T1.office_phone,  T1.office_fax,  T1.office_email,  T1.office_manager,  T1.office_assistant,  T1.office_address,  T1.office_city,  T1.office_state,  T1.office_zip,  T1.office_country"}
{"question": "How many products do I have?", "query": "SELECT count(*)  FROM products"}
{"question": "(a question about a table), after \"Given:\"", "query": "(the sql query to answer the questions), after \""}
{"question": "What is the total amount that has been paid to the employee who has the most number of payments?", "query": "SELECT T1.amount FROM payments AS T1 JOIN employee AS T2 ON T1.employee_id  =  T2.employee_id WHERE T2.name  = 'John Williams'"}
{"question": "What is the name of the game with the highest score?", "query": "SELECT name FROM Game WHERE score  =  (SELECT max(score) FROM game)"}
{"question": "Find the distinct names in the dataset of the students whose birth month is February", "query": "SELECT DISTINCT first_name FROM students WHERE month(birth_date)  =  \"02\""}
{"question": "What is the last four digits of the social security number of the customer who has the highest balance?", "query": "SELECT T1.SSN FROM customer AS T1 WHERE T1.acc_bal  >  (SELECT T2.acc_bal FROM customer AS T2 WHERE T2.SSN  =  T1.SSN ORDER BY T2.acc_bal DESC LIMIT 1)"}
{"question": "What are the total credits of all classes offered at the department of physics?", "query": "SELECT SUM(credit_value) FROM class_credit_value WHERE class_id = (SELECT T1.class_id FROM class AS T1 WHERE T1.department_id = (SELECT T2.department_id FROM department AS T2 WHERE T2.department_name = \"Physics\"))"}
{"question": "What is the number of all users?", "query": "SELECT count(*) AS count FROM users"}
{"question": "List the first and last name of the staff who participated in at least one activity", "query": "SELECT T1.lastname,  T1.firstname FROM staff AS T1 JOIN activity AS T2 ON T1.staff_id  =  T2.staff_id GROUP BY T1.lastname,  t1.firstname ORDER BY count(*) DESC;"}
{"question": "What is the average salary and total salary of all employees with an income of more than 200000?", "query": "SELECT AVG(T1.salary),  T1.total_salary FROM employee AS T1 WHERE T1.income  >  200000;"}
{"question": "Which products does the company 'Fiat' make?", "query": "SELECT product_id FROM products WHERE company_id  =  \"Fiat\""}
{"question": "Which is the biggest company in the world?", "query": "SELECT T1.name,  T2.id FROM company AS T1 JOIN company_member AS T2 ON T1.id  =  T2.company_id WHERE T2.id  =  (SELECT max(id) FROM company)"}
{"question": "Find the total number of students in the class named \"Glencoe\"", "query": "SELECT count(*)  FROM students WHERE name  =  'Glencoe'"}
{"question": "What are the names and addresses of the students who are in the same dorm as me?", "query": "SELECT T1.student_name,  T1.student_address FROM students AS T1 JOIN dorm AS T2 ON T1.dorm_id  =  T2.dorm_id WHERE T1.dorm_id =  \"1\""}
{"question": "What is the average number of notes for first-year students?", "query": "SELECT AVG(notes) FROM students WHERE year  =  \"first\""}
{"question": "List the number of miles to the nearest airport", "query": "SELECT DISTINCT T1.city,  T1.state_code,  T1.airport_code,  T1.distance FROM airport AS T1 JOIN city AS T2 ON T1.city_id  =  T2.city_id JOIN state AS T3 ON T1.state_id  =  T3.state_id WHERE T2.city  =  'New York' AND T3.state  =  'New Jersey' AND T1.distance  <  '10'"}
{"question": "How many customers do the customers have?", "query": "SELECT count(*)  FROM customers"}
{"question": "What is the average price of the wines?", "query": "SELECT avg(price) FROM wine"}
{"question": "What is the description of the course GIS-201X?", "query": "SELECT course_description FROM course WHERE course_code  =  'GIS-201X'"}
{"question": "What is the total money saved by all customers in the past week?", "query": "SELECT SUM(T1.amount) FROM Transactions AS T1 WHERE T1.date  =  (SELECT MAX(T2.date) FROM Transactions AS T2)"}
{"question": "What is the name, city, and age of the customer who bought a pet from the pet store?", "query": "SELECT customer_name, customer_city, customer_age FROM customers WHERE customer_name = \"John Smith\""}
{"question": "Find the first name, last name and age of customers whose last name is O'Shaughnessy", "query": "SELECT T1.LastName,  T1.FirstName,  T2.Age FROM customers AS T1 JOIN customer_info AS T2 ON T1.id  =  T2.customer_id WHERE T2.LastName  =  'O'Shaughnessy'"}
{"question": "Find the name and id of all products", "query": "SELECT T1.product_name,  T2.id FROM product AS T1 JOIN product_description AS T2 ON T1.product_id  =  T2.product_id"}
{"question": "What is the name if any of the products that are not the fastest-selling?", "query": "SELECT product_name FROM product WHERE sales_volume  <  (SELECT AVG(sales_volume) FROM product)"}
{"question": "List the names of the employees who have the highest total salary in the company", "query": "SELECT T1.employee_id,  T1.first_name,  \"T1.last_name\" FROM employees AS T1 JOIN employees AS T2 ON T1.employee_id  =  T2.\"T1.employee_id\" WHERE T1.total_salary  >  T2.total_salary"}
{"question": "What are the ids and names of all products in the database?", "query": "SELECT T1.product_id,  T1.product_name FROM product AS T1"}
{"question": "What is the name of the company with the highest level of sales?", "query": "SELECT T1.company_name,  T2.level_of_sales FROM company AS T1 JOIN company_sales AS T2 ON T1.company_id  =  T2._company_id WHERE T2.level_of_sales  =  'highest'"}
{"question": "What are the ids and names of the architects who built two bridges", "query": "SELECT T1.name FROM architects AS T1 JOIN buildings AS T2 ON T1.architect_id  =  T2.architect_id WHERE T2.name  =  \"Bridge 1\" OR T2.name  =  'Bridge 2'"}
{"question": "Find the names and id of employees who have the same first name as their spouse", "query": "SELECT T1.employee_id,  T1.firstname,  T2.firstname FROM employee AS T1 JOIN employee AS T2 ON T1.employee_id  =  T2.employee_id WHERE T1.firstname  =  T2.firstname"}
{"question": "How many customers have a card with number 4560596484842?", "query": "SELECT T1.customer_id,  T1.customer_name,  T1.customer_address,  T1.customer_city,  T1.customer_state,  T1.customer_zip,  T1.customer_phone,  T1.customer_email,  T1.customer_credit_limit,  T1.customer_card_number,  T1.customer_exp_date,  T1.customer_type,  T1.customer_status,  T1.customer_balance,  T1.customer_debit_card"}
{"question": "What are the names, dates of birth, and the number of children for each person in the table?", "query": "SELECT T1.name,  T1.dob,  T1.num_children FROM people AS T1"}
{"question": "What is the average quality of the products that have the highest number of ratings?", "query": "SELECT AVG(rating) FROM product WHERE rating  >  (SELECT MAX(rating) FROM product)"}
{"question": "What are the names, ids, and quantity of all products in the catalog?", "query": "SELECT T1.product_name,  T2.product_id,  T2.quantity FROM products AS T1 JOIN product_details AS T2 ON T1.product_id  =  T2.product_id"}
{"question": "What are the names, genders, and birth years of all the singers who made more than one song?", "query": "SELECT name,  gender,  birth_year FROM singers WHERE songs_count  >  1"}
{"question": "What are the orders that have been placed for food in the past 2 days?", "query": "SELECT T1.order_id,  T1.order_date,  T1.order_total FROM Orders AS T1 WHERE T1.order_date  >=  DATE_SUB(NOW(), INTERVAL 2 DAY)"}
{"question": "What is the total amount of all the loans?", "query": "SELECT T1.loan_amount FROM loan AS T1 WHERE T1.loan_id  =  (SELECT MAX(loan_id) FROM loan);"}
{"question": "What are the names, id's and scores of the top 10 players?", "query": "SELECT T1.name,  T1.id,  T1.score FROM player AS T1 ORDER BY T1.score DESC LIMIT 10"}
{"question": "What are the names, ages, and genders of all customers?", "query": "SELECT T1.name,  T1.age,  T1.gender FROM customer AS T1"}
{"question": "What is the most common name of the employees in the company?", "query": "SELECT name_first,  name_last FROM employee GROUP BY name_first ORDER BY count(*) DESC;"}
{"question": "Find the names of all songs whose first word is \"Coffee\"", "query": "SELECT T1.song_name FROM song AS T1 WHERE T1.song_name LIKE '%Coffee%'"}
{"question": "Find the phone number of the person who is next to the instructor named \"Jennifer\"", "query": "SELECT T1.phone_number FROM students AS T1 JOIN instructors AS T2 ON T1.instructor_id  =  T2._id WHERE T2.name  = \"Jennifer\""}
{"question": "What is the average age of the children who are learning to swim?", "query": "SELECT AVG(age) FROM swimmer WHERE age  >  0"}
{"question": "What is the id of students who attended some course?", "query": "SELECT T1.student_id FROM Student_Course_Enrolment T1 WHERE T1.course_id  =  '1'"}
{"question": "Show the resident id, details, and count for each type of resident", "query": "SELECT T1.resident_id,  T1.details,  T1.count FROM Residents AS T1 WHERE T1.type  =  \"Resident\""}
{"question": "How many students are below average in GPA? List the student's id and name", "query": "SELECT T1.id,  T1.name FROM Student AS T1 WHERE T1.GPA  <  '0.5'"}
{"question": "What is the name of the document that has the most characters?", "query": "SELECT T1.document_name FROM document AS T1 WHERE T1.char_count  >  (SELECT T2.document_name FROM document AS t2 WHERE t2.char_count  >  T1.char_count)"}
{"question": "What are the names, number of players and id of the basketball player who has the largest number of points?", "query": "SELECT T1.name,  T2.points FROM player AS T1 JOIN player_stats AS T2 ON T1.id  =  T2.id WHERE T2.points  >  (SELECT max(T3.points) FROM player_stats AS T3)"}
{"question": "(a question about a sql table) What is the name of the movie that is shown in the year 2009?", "query": "SELECT name FROM movie WHERE year  =  2009"}
{"question": "Find the name of the employee who is the president of the organisation named \"Dreamland\"", "query": "SELECT T1.employee_id,  T1.name_first,  'Dreamland' AS company_name FROM employee AS T1 WHERE T1.name_first  =  'John' AND T1.name_last  =  'Doe'"}
{"question": "What are the number of people who bought the \"Dream\" series of movies?", "query": "SELECT count(*)  FROM purchases WHERE purchase_title  =  \"Dream\""}
{"question": "What is the average number of transactions per day for the company with the most customers?", "query": "SELECT AVG(transaction_count) FROM customer_transaction_history WHERE customer_id  =  \"1\""}
{"question": "What are the names and ids of all customers who purchased more than one product?", "query": "SELECT T1.id,  T1.name FROM customer AS T1 JOIN order_item AS T2 ON T1.id  = T2.customer_id WHERE EXISTS (SELECT T3.id FROM order_item AS T3 WHERE T3.id  =  T2.item_id AND T3.product_id  =  T2.product_id)"}
{"question": "What are the ids and first names that have more than 10 distinct last names?", "query": "SELECT T1.id,  T1.first_name FROM customer AS T1 WHERE count(*)  >  10 GROUP BY T1.id,  T2.last_name"}
{"question": "show me the names of the companies that employ the most people in the US", "query": "SELECT T1.company_name FROM employees AS T1 WHERE T1.state_id  =  'CA' AND T1.country_id  =  'USA'"}
{"question": "What are the most popular languages used in the following states?", "query": "SELECT T1.state_name,  T1.language_code FROM state_language AS T1 JOIN state AS T2 ON T1.state_id  =  T2.state_id WHERE T2.state_name  =  \"Alaska\""}
{"question": "What are the names, dates of birth, and genders of the members of the U", "query": "SELECT T1.name,  T1.date_of_birth,  T1.gender FROM members AS T1"}
{"question": "What is the name, age, and location of the first user?", "query": "SELECT name,  age,  location FROM users WHERE user_id  =  1"}
{"question": "Show the average age of the students who live in the country with the most universities", "query": "SELECT AVG(age) FROM student_info WHERE country_code  =  \"US\""}
{"question": "How many times have you used the phrase \"I need a new car\"?", "query": "SELECT T1.phrase FROM Phrase AS T1 JOIN Phrase_Usage AS T2 ON T1.phrase  =  T2.phrase WHERE T2.user_id  =  \"1\""}
{"question": "Show the number of students with birth year between 1990 and 1999", "query": "SELECT count(*) AS count FROM students WHERE birth_year BETWEEN 1990 AND 1999"}
{"question": "(Find the number of projects which each scientist are working on and scientist's name", "query": "SELECT count(*) AS \"number of projects\" FROM project AS T1 JOIN scientist AS T2 ON T1.scientist_id  =  T2.\"id\" WHERE T1.scientist_id = \"1\""}
{"question": "What are the first three names of the authors of the first 50 novels written in the last 40 years?", "query": "SELECT first_name,  last_name FROM authors ORDER BY first_name LIMIT 3"}
{"question": "List the names of all the faculty members in alphabetical order by last name", "query": "SELECT T1.last_name FROM faculty AS T1 GROUP BY T1.last_name ORDER BY T1.last_name ASC"}
{"question": "What are the sales for all the products, sorted by the total price of the product?", "query": "SELECT T1.product_name,  T1.product_price FROM product AS T1 JOIN order_item AS T2 ON T1.product_id  =  T2.product_id ORDER BY T1.product_price DESC"}
{"question": "What are the names, ids and grades for the students in the class of 2015?", "query": "SELECT T1.name,  T1.id,  T1.grade FROM student AS T1 WHERE T1.year  =  2015"}
{"question": "What are the most popular names of the students with a birth year of 1979?", "query": "SELECT name FROM students WHERE year  =  1979"}
{"question": "What is the total amount of money made by the company where the student named \"Parker\" works?", "query": "SELECT T1.amount FROM company AS T1 WHERE T1.name = \"Parker\""}
{"question": "(a question about a sql table) Return the type of transaction with the lowest total amount", "query": "SELECT T1.type FROM Transaction AS T1 JOIN Transaction_Type AS T2 ON T1.type  =  T2.type WHERE T2.description  =  \"Lowest Total Amount\""}
{"question": "Return the average price of all product clothes", "query": "SELECT AVG(price) FROM clothes"}
{"question": "How many orders did the customer with id 10 make?", "query": "SELECT count(*) from orders WHERE customer_id  =  10"}
{"question": "Give the names of winners and nominees of the awards for best album for the year 1984", "query": "SELECT T1.winner,  T2.nominee FROM awards AS T1 JOIN awards_nominees AS T2 ON T1.award_id  =  T2._id WHERE T1.year  =  '1984'"}
{"question": "What are the names for the different kinds of vehicles?", "query": "SELECT name FROM Vehicle WHERE type  =  \"Car\""}
{"question": "What are the names and locations of all the products?", "query": "SELECT T1.product_name,  T1.location FROM products AS T1 JOIN locations AS T2 ON T1.location  =  T2.location WHERE T1.product_code  =  \"ABC\""}
{"question": "Show the distinct leader1 names of colleges associated with members from 'country' 'Canada'", "query": "SELECT DISTINCT T1.leader1 FROM college AS T1 JOIN student AS T2 ON T1.college_id  =  T2._id WHERE T2.country  =  'Canada'"}
{"question": "List the names and seatings, ordered by seatings, for all tracks opened before 2005", "query": "SELECT T1.name,  T2.seating FROM track_info AS T1 JOIN track_seating AS T2 ON T1.track_id  =  T2._id WHERE T1.year  <  2005 ORDER BY T2.seating"}
{"question": "What are the names and seatings of all tracks opened after 2000, ordered in descending order of seatings", "query": "SELECT name FROM track AS T1 WHERE T1.seatings  >  2000 ORDER BY T1.seatings"}
{"question": "What are the names and addresses of the teachers at school?", "query": "SELECT T1.address_id,  T2.name_first,  T2.name_last,  T2.address_id FROM teacher AS T1 JOIN teacher_addresses AS T2 ON T1. teacher_id  =  T2. teacher_id"}
{"question": "(How many students are there in the school?), after \"", "query": "SELECT count(*)  FROM STUDENT;"}
{"question": "How many employees are there in the marketing department?", "query": "SELECT count(*)  FROM employees"}
{"question": "(a question about a sql table) Return the average seating across all seats", "query": "SELECT AVG(seat_count) FROM Seats"}
{"question": "Find the average age over all the employees with the name 'John Doe'", "query": "SELECT AVG(Age) FROM employees WHERE name  =  'John Doe'"}
{"question": "What is the full name of the 3 instructors who teach the greatest number of courses?", "query": "SELECT T1.fullname FROM instructor AS T1 JOIN course AS T2 ON T1.course_id  =  T2.course_id WHERE T2.course_id  =  (SELECT max(course_id) FROM course)"}
{"question": "What are the names for the students who have the highest score in their class?", "query": "SELECT T1.student_name FROM students AS T1 JOIN class AS T2 ON T1.student_id  =  T2._id WHERE T2.class_id  =  \"1\" ORDER BY T1.score DESC LIMIT 1"}
{"question": "How many records are there for each customer and each customer type?", "query": "SELECT T1.customer_id,  T1.customer_type_code,  T1.customer_name,  T1.customer_address_id,  T1.cust_type_code,  T2.cust_type_code FROM customer AS T1 JOIN customer_type AS T2 ON T1.customer_type_code  =  T2.customer_type_code JOIN customer_address AS T3 ON T1.customer_address_id  =  T3.customer_address_id WHERE T3.customer_id  =  T1"}
{"question": "what are the names of the students who do not have a first notification?", "query": "SELECT T1.first_name,  T1.last_name,  T1.student_id,  COUNT(*) FROM student AS T1 WHERE T1.first_notification  =  'no' GROUP BY T1.first_name, T1.last_name, T1.student_id"}
{"question": "What are the numbers of times players with the first name 'Alex' and the last name 'Fitzpatrick' have played the game?", "query": "SELECT count(*)  FROM players WHERE first_name  =  \"Alex\" AND last_name  =  \"Fitzpatrick\""}
{"question": "List the names of all the clients with the first name 'Jack'", "query": "SELECT T1.client_id,  T1.firstname,  T2.lastname FROM client AS T1 JOIN client_name AS T2 ON T1.client_id  =  T2.client_id WHERE T1.firstname  =  \"Jack\""}
{"question": "Find the number of students enrolled in the course ACCT-211", "query": "SELECT COUNT(*) FROM STUDENT_ENROLLMENT WHERE COURSE_CODE  =  \"ACCT-211\""}
{"question": "What are the names, classes, subjects and dates for all races?", "query": "SELECT T1.name,  T1.class_id,  T1.subject_id,  T1.date FROM race AS T1 WHERE T1.date  =  \"2010-01-01\""}
{"question": "What are the first and last name of the employee who have been in the company more than 15 years?", "query": "SELECT first_name,  last_name FROM employee WHERE years_in_company  >  15"}
{"question": "Find the number of times that a student has been absenteeism", "query": "SELECT T1.id,  T1.absenteeism_count FROM Student AS T1 WHERE T1.absenteeism_date  =  (SELECT MAX(T2.absenteeism_date) FROM Student AS T2 WHERE T2.id  =  T1.id)"}
{"question": "List the name of all people who have only one friend", "query": "SELECT T1.firstname,  T1.lastname FROM friend AS T1 JOIN friend AS T2 ON T1.friend_id  =  T2.friend_id WHERE T2.friend_id  =  'NULL'"}
{"question": "List the number of students who have at least one 'a' in their name", "query": "SELECT count(*) AS \"count\" FROM student WHERE student_name LIKE \"%a%\""}
{"question": "What are the names, ages, and birthplace of the two brothers in the movie \"The Two Towers\"?", "query": "SELECT T1.name,  T1.age,  T1.birthplace FROM brothers AS T1 WHERE T1.name  = 'Aragorn' AND T1.name  = 'Boromir'"}
{"question": "Find all the names of customers who have a membership in the \"Nordic Club\"", "query": "SELECT T1.Name_First,  T1.Name_Last,  T1.Customer_ID FROM customer AS T1 JOIN memberships AS T2 ON T1.Customer_ID  =  T2.Customer_ID WHERE T2.Club_ID  =  'Nordic'"}
{"question": "Find the names of all scientists with whom Paul Allen has worked", "query": "SELECT T1.name FROM scientists AS T1 JOIN scientists_collaborations AS T2 ON T1.scientist_id  =  T2.\"id\" WHERE T2.scientist_id  = \"Paul Allen\""}
{"question": "What is the number in the country code country code?", "query": "SELECT count(*) from country_code WHERE country_code  =  \"US\""}
{"question": "What is the name, location, and number of seats in the stadium of the event with the largest number of spectators?", "query": "SELECT T1.title,  T2.name,  T2.location,  T2.seats FROM events AS T1 JOIN events_stadium AS T2 ON T1.id  = T2.event_id WHERE T2.seats  >  (SELECT MAX(seats) FROM events)"}
{"question": "Find the average, minimum, and maximum temperature and the standard deviation of all states", "query": "SELECT avg(temperature),  min(temperature),  max(temperature),  stddev(temperature) FROM weather"}
{"question": "Show the name and gender of the student with the most number of assessment notes", "query": "SELECT T1.student_id,  T1.first_name,  (SELECT T2.gender_code FROM students AS T2 WHERE T2.id  =  T1.id ) AS gender FROM students AS T1 JOIN assessment_notes AS T2 ON T1.student_id  =  T2.student_id WHERE T1.id  =  (SELECT student_id FROM students WHERE id  =  (SELECT student_first_name FROM students WHERE id  =  T1.id  AND id  =  (SELECT studentid FROM students WHERE id  ="}
{"question": "What is the name and location of the new stadium where the most runners ran in the marathon?", "query": "SELECT name,  city FROM stadium WHERE city  =  'Boston' ORDER BY count(*) DESC"}
{"question": "What are the names, average prices and number of products of the enzymes which has any \"inhibitor\" interaction?", "query": "SELECT T1.enzyme_id,  T1.name,  T1.price_in_dollars,  T1.quantity,  T1.product_id,  T1.product_name,  T1.product_price_in_dollars,"}
{"question": "What is the name ( first name and last name) of the employee who has highest salary?", "query": "SELECT name FROM employees WHERE salary  =  (SELECT MAX(s.salary) FROM employees AS s)"}
{"question": "find the gender of a player with id 3", "query": "SELECT gender FROM player WHERE id  =  3"}
{"question": "What are the names, ids, and ages of the students who are in the first year of college?", "query": "SELECT T1.name,  T1._id,  T1.age FROM student AS T1 WHERE T1.age  =  \"18\""}
{"question": "Show the names and ages of the actors who has more than 10 pictures with age < 30", "query": "SELECT T1.name,  T1.age FROM actors AS T1 WHERE T1.age  <  30 GROUP BY T1.name ORDER BY T1.age DESC"}
{"question": "What are the names and locations of the cities that had 2 to 4 students in 2016", "query": "SELECT T1.city_name,  T1.city_id FROM city AS T1 JOIN student AS T3 ON T1.city_id  =  T3.city_id WHERE T3.student_count  =  2 OR T3.student_count  >  2 AND T3.city_id  =  (SELECT min(city_id) FROM city WHERE city_name  =  \"San Francisco\") OR T3.city_id  >  (SELECT min(city_name) FROM city WHERE city_name =  \"San Francisco\")"}
{"question": "What is the name, number and the price of the cheapest product?", "query": "SELECT T1.product_name,  T2.price,  T2.number FROM product AS T1 JOIN product_price AS T2 ON T1.product_id  =  T2._id WHERE T2.price  =  (SELECT MIN(price) FROM product)"}
{"question": "What are the names that have more than 3 first names?", "query": "SELECT name FROM Person"}
{"question": "What is the age of the customer named \"Ivan Rostov\"?", "query": "SELECT T1.age FROM Customer AS T1 WHERE T1.name  =  \"Ivan Rostov\""}
{"question": "What is the first name of the professor who teaches two courses with code CIS-120 and CIS-220?", "query": "SELECT T1.first_name FROM professor AS T1 JOIN course AS T2 ON T1.professor_id  =  T2.[professor_id] WHERE T2.code  =  'CIS-120' AND T2.code  =  \"CIS-220\""}
{"question": "How many players are in the games that have a total of 30 and above?", "query": "SELECT COUNT(*),  game_id FROM games WHERE total_points  >  30"}
{"question": "Find the names of players with more than one player id", "query": "SELECT name FROM player WHERE player_id  IN (SELECT player_id FROM player_id_to_player_id)"}
{"question": "Who are the players who have the most number of wins in the World Cup?", "query": "SELECT T1.player_id,  T1.name_first,  count(*) FROM player AS T1 JOIN player AS T2 ON T1.name_first  =  T2.name_first JOIN match_season AS T3 ON T1.player_id = T3.player_id AND T2.player_id = T3.player_id GROUP BY T1.player_id ORDER BY count(T1.player_id) DESC LIMIT 1"}
{"question": "The price of all cigarettes is higher than that of all cigars", "query": "SELECT T1.price FROM cigars AS T1 JOIN cigarettes AS T2 ON T1.cigar_id  =  T2.cigar_id WHERE T2.price  >  T1.price"}
{"question": "What is the average temperature for each month?", "query": "SELECT AVG(temperature) FROM weather"}
{"question": "What is the average age of students of the department with the highest percentage of women?", "query": "SELECT AVG(age) FROM student WHERE department_id  =  (SELECT id FROM department WHERE percentage_of_women  =  (SELECT MAX(percentage_of_women) FROM department))"}
{"question": "What are the names, last names and age of the employees who have no children", "query": "SELECT T1.first_name,  T1.last_name,  T1.age FROM employees AS T1 WHERE T1.children  =  '0'"}
